metadata,unique_words,total_words
openbook.domain.Author.getId(),0,0
openbook.domain.Author.getName(),2,3
openbook.domain.Author.setName(String),3,6
openbook.domain.Author.getBooks(),3,4
openbook.domain.Author.addBook(Book),5,12
openbook.domain.Author.getVersion(),1,2
org.apache.openjpa.trader.service.Exchange.Exchange(String),3,4
"org.apache.openjpa.trader.service.Exchange.Exchange(String,Map<String,Object>)",31,55
"org.apache.openjpa.trader.service.Exchange.ask(Trader,Stock,int,double)",9,17
"org.apache.openjpa.trader.service.Exchange.bid(Trader,Stock,int,double)",10,24
org.apache.openjpa.trader.service.Exchange.matchBid(Bid),14,30
org.apache.openjpa.trader.service.Exchange.matchAsk(Ask),13,24
org.apache.openjpa.trader.service.Exchange.withdraw(Tradable),18,22
org.apache.openjpa.trader.service.Exchange.refresh(Tradable),6,10
org.apache.openjpa.trader.service.Exchange.trade(Match),9,24
org.apache.openjpa.trader.service.Exchange.login(String),9,24
org.apache.openjpa.trader.service.Exchange.getStock(String),8,17
"org.apache.openjpa.trader.service.Exchange.getTrades(Timestamp,Timestamp)",15,29
"org.apache.openjpa.trader.service.Exchange.getTrades(Trader,Boolean,Timestamp,Timestamp)",25,66
org.apache.openjpa.trader.service.Exchange.populate(),29,76
org.apache.openjpa.trader.service.Exchange.getStocks(),10,19
org.apache.openjpa.trader.service.Exchange.getLog(),4,10
org.apache.openjpa.trader.service.Exchange.close(),1,2
"org.apache.openjpa.trader.service.Exchange.addLog(Map<String,Object>)",10,22
org.apache.openjpa.trader.service.Exchange.getServiceURI(),16,30
"jpa.tools.swing.EntityTable<T>.EntityTable(Class<T>,List<T>,int,EntityManagerFactory)",30,58
jpa.tools.swing.EntityTable<T>.getInstanceRenderer(),3,8
"jpa.tools.swing.EntityTable<T>.getCellRenderer(int,int)",27,68
"jpa.tools.swing.EntityTable<T>.getCellEditor(int,int)",14,34
jpa.tools.swing.EntityTable<T>.initColumnSizes(),29,130
jpa.tools.swing.EntityTable<T>.InstanceCellRenderer.InstanceCellRenderer(PersistenceUnitUtil),6,9
jpa.tools.swing.EntityTable<T>.InstanceCellRenderer.renderAsString(Object),11,28
jpa.tools.swing.EntityTable<T>.InstanceCellRenderer.setValue(Object),10,13
jpa.tools.swing.EntityTable<T>.CollectionCellRenderer.CollectionCellRenderer(),7,7
"jpa.tools.swing.EntityTable<T>.CollectionCellRenderer.getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int)",10,23
org.apache.openjpa.example.gallery.constraint.ImageContentValidator.initialize(ImageContent),15,21
"org.apache.openjpa.example.gallery.constraint.ImageContentValidator.isValid(byte[],ConstraintValidatorContext)",26,62
jpa.tools.swing.QueryDecorator.decorate(Query),2,2
org.apache.openjpa.trader.client.ui.HelpLink.HelpLink(String),10,20
org.apache.openjpa.trader.client.ui.HelpLink.onClick(ClickEvent),6,9
org.apache.openjpa.trader.client.ui.HelpLink.HelpWindow.HelpWindow(),20,43
org.apache.openjpa.trader.client.ui.HelpLink.HelpWindow.HelpWindow().$1.onClick(ClickEvent),3,5
org.apache.openjpa.trader.client.ui.HelpLink.HelpWindow.showHelp(String),7,10
"org.apache.openjpa.trader.client.ui.HelpLink.HelpWindow.setPosition(int,int)",11,19
org.apache.openjpa.integration.validation.TestEagerInit.setUp(),25,38
org.apache.openjpa.integration.validation.TestEagerInit.tearDown(),9,10
org.apache.openjpa.integration.validation.TestEagerInit.testNonNullEmf(),2,3
org.apache.openjpa.trader.client.LoginDialog.LoginDialog(OpenTrader),35,112
org.apache.openjpa.trader.client.LoginDialog.LoginDialog(OpenTrader).$1.onClick(ClickEvent),21,30
org.apache.openjpa.trader.client.LoginDialog.LoginCallback.onFailure(Throwable),9,10
org.apache.openjpa.trader.client.LoginDialog.LoginCallback.onSuccess(Trader),7,11
org.apache.openjpa.trader.client.LoginDialog.GetServerURI.onFailure(Throwable),6,7
org.apache.openjpa.trader.client.LoginDialog.GetServerURI.onSuccess(String),8,11
org.apache.openjpa.trader.client.LoginDialog.InitializeStocks.onFailure(Throwable),6,7
org.apache.openjpa.trader.client.LoginDialog.InitializeStocks.onSuccess(List<Stock>),12,13
org.apache.openjpa.jdbc.kernel.PreparedStatementManager.getExceptions(),4,5
org.apache.openjpa.jdbc.kernel.PreparedStatementManager.flush(RowImpl),3,6
org.apache.openjpa.jdbc.kernel.PreparedStatementManager.flush(),7,8
openbook.tools.ant.Java2HTMLConverterTask.getSourcepath(),2,3
openbook.tools.ant.Java2HTMLConverterTask.setSourcepath(String),3,6
openbook.tools.ant.Java2HTMLConverterTask.execute(),31,120
openbook.tools.ant.Java2HTMLConverterTask.getFiles(),11,30
openbook.tools.ant.Java2HTMLConverterTask.createArg(),4,10
openbook.tools.ant.Java2HTMLConverterTask.getDestDir(),3,5
openbook.tools.ant.Java2HTMLConverterTask.setDestDir(String),4,10
openbook.tools.ant.Java2HTMLConverterTask.isVerbose(),1,2
openbook.tools.ant.Java2HTMLConverterTask.setVerbose(boolean),2,5
openbook.tools.ant.Java2HTMLConverterTask.getExtension(),2,4
openbook.tools.ant.Java2HTMLConverterTask.setExtension(String),4,10
openbook.tools.ant.Java2HTMLConverterTask.getStylesheet(),2,4
openbook.tools.ant.Java2HTMLConverterTask.setStylesheet(String),4,10
openbook.tools.ant.Java2HTMLConverterTask.isShowLineNumber(),1,3
openbook.tools.ant.Java2HTMLConverterTask.setShowLineNumber(boolean),3,9
openbook.tools.ant.Java2HTMLConverterTask.isAnchorLineNumber(),2,6
openbook.tools.ant.Java2HTMLConverterTask.setAnchorLineNumber(boolean),4,15
openbook.tools.ant.Java2HTMLConverterTask.isAddLineBreak(),2,6
openbook.tools.ant.Java2HTMLConverterTask.setAddLineBreak(boolean),4,15
openbook.tools.ant.Java2HTMLConverterTask.isAddExplicitSpace(),3,9
openbook.tools.ant.Java2HTMLConverterTask.setAddExplicitSpace(boolean),5,21
openbook.tools.ant.Java2HTMLConverterTask.getLineNumberFormat(),3,7
openbook.tools.ant.Java2HTMLConverterTask.setLineNumberFormat(String),5,16
openbook.tools.ant.Java2HTMLConverterTask.Arg.getName(),2,3
openbook.tools.ant.Java2HTMLConverterTask.Arg.setName(String),3,6
openbook.tools.ant.Java2HTMLConverterTask.Arg.getValue(),2,3
openbook.tools.ant.Java2HTMLConverterTask.Arg.setValue(String),3,6
org.apache.openjpa.integration.validation.ConstraintPattern.createInvalidString(),11,18
org.apache.openjpa.integration.validation.ConstraintPattern.createInvalidZipcode(),7,13
org.apache.openjpa.integration.validation.ConstraintPattern.createValid(),7,12
org.apache.openjpa.integration.validation.ConstraintPattern.ConstraintPattern(),5,5
org.apache.openjpa.integration.validation.ConstraintPattern.getId(),0,0
org.apache.openjpa.integration.validation.ConstraintPattern.getMyString(),1,3
org.apache.openjpa.integration.validation.ConstraintPattern.setMyString(String),2,4
org.apache.openjpa.integration.validation.ConstraintPattern.getZipcode(),2,3
org.apache.openjpa.integration.validation.ConstraintPattern.setZipcode(String),3,4
mapping.BuildSchemaPC.BuildSchemaPC(),2,2
mapping.BuildSchemaPC.BuildSchemaPC(String),5,7
mapping.BuildSchemaPC.getStringField(),2,5
mapping.BuildSchemaPC.setStringField(String),4,8
mapping.BuildSchemaPC.getId(),0,0
"org.apache.openjpa.jdbc.kernel.JDBCSeq.addSchema(ClassMapping,SchemaGroup)",7,12
"org.apache.openjpa.jdbc.conf.JDBCProductDerivation.putBrokerFactoryAliases(Map<String,String>)",7,11
org.apache.openjpa.jdbc.conf.JDBCProductDerivation.getType(),2,3
org.apache.openjpa.jdbc.conf.JDBCProductDerivation.beforeConfigurationConstruct(ConfigurationProvider),8,16
org.apache.openjpa.jdbc.conf.JDBCProductDerivation.getSupportedQueryHints(),5,6
org.apache.openjpa.jdbc.kernel.exps.Avg.Avg(Val),6,8
org.apache.openjpa.jdbc.kernel.exps.Avg.getOperator(),3,3
org.apache.openjpa.jdbc.kernel.exps.Avg.isAggregate(),1,1
"org.apache.openjpa.jdbc.kernel.exps.JDBCWildcardMatch.appendTo(SQLBuffer,FilterValue,FilterValue[],ClassMapping,JDBCStore)",24,48
org.apache.openjpa.jdbc.kernel.exps.GetObjectId.GetObjectId(PCPath),7,10
org.apache.openjpa.jdbc.kernel.exps.GetObjectId.getColumns(ExpState),8,10
org.apache.openjpa.jdbc.kernel.exps.GetObjectId.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.GetObjectId.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.GetObjectId.getType(),2,2
org.apache.openjpa.jdbc.kernel.exps.GetObjectId.setImplicitType(Class),3,4
"org.apache.openjpa.jdbc.kernel.exps.GetObjectId.initialize(Select,ExpContext,int)",27,40
"org.apache.openjpa.jdbc.kernel.exps.GetObjectId.toDataStoreValue(Select,ExpContext,ExpState,Object)",38,112
"org.apache.openjpa.jdbc.kernel.exps.GetObjectId.select(Select,ExpContext,ExpState,boolean)",7,12
"org.apache.openjpa.jdbc.kernel.exps.GetObjectId.selectColumns(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.GetObjectId.groupBy(Select,ExpContext,ExpState)",6,9
"org.apache.openjpa.jdbc.kernel.exps.GetObjectId.orderBy(Select,ExpContext,ExpState,boolean)",7,11
"org.apache.openjpa.jdbc.kernel.exps.GetObjectId.load(ExpContext,ExpState,Result)",10,14
"org.apache.openjpa.jdbc.kernel.exps.GetObjectId.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",9,15
"org.apache.openjpa.jdbc.kernel.exps.GetObjectId.length(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.GetObjectId.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",10,17
org.apache.openjpa.jdbc.kernel.exps.GetObjectId.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.integration.daytrader.TradeScenario.TradeScenario(TradeAction),3,7
org.apache.openjpa.integration.daytrader.TradeScenario.performUserTasks(String),29,155
"org.apache.openjpa.integration.daytrader.TradeScenario.performTask(String,String)",128,456
"org.apache.openjpa.integration.daytrader.TradeScenario.log(StringBuilder,String)",12,18
"org.apache.openjpa.integration.daytrader.TradeScenario.log(StringBuilder,String,Object)",14,23
org.apache.openjpa.jdbc.meta.DiscriminatorStrategy.setDiscriminator(Discriminator),5,8
"org.apache.openjpa.jdbc.meta.DiscriminatorStrategy.select(Select,ClassMapping)",11,17
org.apache.openjpa.jdbc.meta.DiscriminatorStrategy.loadSubclasses(JDBCStore),10,14
"org.apache.openjpa.jdbc.meta.DiscriminatorStrategy.getClass(JDBCStore,ClassMapping,Result)",10,14
"org.apache.openjpa.jdbc.meta.DiscriminatorStrategy.hasClassConditions(ClassMapping,boolean)",4,6
"org.apache.openjpa.jdbc.meta.DiscriminatorStrategy.getClassConditions(Select,Joins,ClassMapping,boolean)",18,23
org.apache.openjpa.jdbc.meta.strats.ImmutableValueHandler.getInstance(),5,7
"org.apache.openjpa.jdbc.meta.strats.ImmutableValueHandler.map(ValueMapping,String,ColumnIO,boolean)",14,27
"org.apache.openjpa.jdbc.meta.strats.ImmutableValueHandler.map(ValueMapping,DBIdentifier,ColumnIO,boolean)",15,39
org.apache.openjpa.jdbc.meta.strats.ImmutableValueHandler.isVersionable(ValueMapping),12,47
"org.apache.openjpa.jdbc.meta.strats.ImmutableValueHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)",20,37
"org.apache.openjpa.jdbc.kernel.BatchingOperationOrderUpdateManager.newPreparedStatementManager(JDBCStore,Connection)",12,25
"org.apache.openjpa.jdbc.kernel.BatchingOperationOrderUpdateManager.flush(RowManager,PreparedStatementManager,Collection)",22,59
org.apache.openjpa.jdbc.kernel.exps.PCPath.PCPath(ClassMapping),6,8
"org.apache.openjpa.jdbc.kernel.exps.PCPath.PCPath(ClassMapping,Variable)",24,74
org.apache.openjpa.jdbc.kernel.exps.PCPath.PCPath(SubQ),17,38
org.apache.openjpa.jdbc.kernel.exps.PCPath.setSchemaAlias(String),4,12
org.apache.openjpa.jdbc.kernel.exps.PCPath.getSchemaAlias(),3,5
"org.apache.openjpa.jdbc.kernel.exps.PCPath.setSubqueryContext(Context,String)",8,20
org.apache.openjpa.jdbc.kernel.exps.PCPath.addVariableAction(Variable),8,13
org.apache.openjpa.jdbc.kernel.exps.PCPath.isUnaccessedVariable(),13,20
org.apache.openjpa.jdbc.kernel.exps.PCPath.isVariablePath(),4,7
org.apache.openjpa.jdbc.kernel.exps.PCPath.setContainsId(String),20,41
org.apache.openjpa.jdbc.kernel.exps.PCPath.getMetaData(),2,4
org.apache.openjpa.jdbc.kernel.exps.PCPath.setMetaData(ClassMetaData),4,8
org.apache.openjpa.jdbc.kernel.exps.PCPath.isKey(),1,2
org.apache.openjpa.jdbc.kernel.exps.PCPath.isXPath(),3,3
org.apache.openjpa.jdbc.kernel.exps.PCPath.getXPath(),33,80
org.apache.openjpa.jdbc.kernel.exps.PCPath.getPCPathString(),16,61
org.apache.openjpa.jdbc.kernel.exps.PCPath.getClassMapping(ExpState),15,59
org.apache.openjpa.jdbc.kernel.exps.PCPath.getFieldMapping(ExpState),4,8
org.apache.openjpa.jdbc.kernel.exps.PCPath.getColumns(ExpState),7,17
org.apache.openjpa.jdbc.kernel.exps.PCPath.calculateColumns(PathExpState),32,171
org.apache.openjpa.jdbc.kernel.exps.PCPath.isVariable(),5,13
"org.apache.openjpa.jdbc.kernel.exps.PCPath.get(FieldMetaData,boolean)",16,31
"org.apache.openjpa.jdbc.kernel.exps.PCPath.get(FieldMetaData,XMLMetaData)",15,30
"org.apache.openjpa.jdbc.kernel.exps.PCPath.get(XMLMetaData,String)",14,25
org.apache.openjpa.jdbc.kernel.exps.PCPath.getXmlMapping(),7,15
org.apache.openjpa.jdbc.kernel.exps.PCPath.getKey(),14,35
org.apache.openjpa.jdbc.kernel.exps.PCPath.checkObjectPathInheritanceTypeJoined(PathExpState),15,42
org.apache.openjpa.jdbc.kernel.exps.PCPath.last(),7,15
org.apache.openjpa.jdbc.kernel.exps.PCPath.lastFieldAction(),12,34
org.apache.openjpa.jdbc.kernel.exps.PCPath.getType(),22,85
org.apache.openjpa.jdbc.kernel.exps.PCPath.setImplicitType(Class),4,6
"org.apache.openjpa.jdbc.kernel.exps.PCPath.initialize(Select,ExpContext,int)",106,470
org.apache.openjpa.jdbc.kernel.exps.PCPath.findSubqAlias(Select),12,28
org.apache.openjpa.jdbc.kernel.exps.PCPath.navigateFromParentRootInSubselect(Select),23,51
"org.apache.openjpa.jdbc.kernel.exps.PCPath.isJoinedField(FieldMapping,boolean,FieldMapping)",27,72
"org.apache.openjpa.jdbc.kernel.exps.PCPath.eval(Object,Object,StoreContext,Object[])",38,93
org.apache.openjpa.jdbc.kernel.exps.PCPath.PathExpState.PathExpState(Joins),3,5
"org.apache.openjpa.jdbc.kernel.exps.PCPath.traverseField(PathExpState,boolean,boolean,boolean)",23,82
"org.apache.openjpa.jdbc.kernel.exps.PCPath.joinRelation(PathExpState,boolean,boolean,boolean)",15,43
"org.apache.openjpa.jdbc.kernel.exps.PCPath.toDataStoreValue(Select,ExpContext,ExpState,Object)",25,77
"org.apache.openjpa.jdbc.kernel.exps.PCPath.select(Select,ExpContext,ExpState,boolean)",7,13
"org.apache.openjpa.jdbc.kernel.exps.PCPath.selectColumns(Select,ExpContext,ExpState,boolean)",47,102
"org.apache.openjpa.jdbc.kernel.exps.PCPath.groupBy(Select,ExpContext,ExpState)",20,45
"org.apache.openjpa.jdbc.kernel.exps.PCPath.orderBy(Select,ExpContext,ExpState,boolean)",9,13
"org.apache.openjpa.jdbc.kernel.exps.PCPath.load(ExpContext,ExpState,Result)",9,13
"org.apache.openjpa.jdbc.kernel.exps.PCPath.load(ExpContext,ExpState,Result,boolean)",38,119
org.apache.openjpa.jdbc.kernel.exps.PCPath.validateMapStrategy(Strategy),8,18
"org.apache.openjpa.jdbc.kernel.exps.PCPath.selectEmbeddedMapKey(Select,ExpContext,ExpState)",19,52
"org.apache.openjpa.jdbc.kernel.exps.PCPath.loadEmbeddedMapKey(ExpContext,ExpState,Result)",21,46
"org.apache.openjpa.jdbc.kernel.exps.PCPath.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",19,25
org.apache.openjpa.jdbc.kernel.exps.PCPath.verifyIndexedField(),11,20
"org.apache.openjpa.jdbc.kernel.exps.PCPath.length(Select,ExpContext,ExpState)",7,9
"org.apache.openjpa.jdbc.kernel.exps.PCPath.appendTo(Select,ExpContext,ExpState,SQLBuffer)",12,23
"org.apache.openjpa.jdbc.kernel.exps.PCPath.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",12,19
"org.apache.openjpa.jdbc.kernel.exps.PCPath.appendTo(Select,ExpState,SQLBuffer,Column)",22,43
"org.apache.openjpa.jdbc.kernel.exps.PCPath.appendIsEmpty(Select,ExpContext,ExpState,SQLBuffer)",13,28
"org.apache.openjpa.jdbc.kernel.exps.PCPath.appendIsNotEmpty(Select,ExpContext,ExpState,SQLBuffer)",13,28
"org.apache.openjpa.jdbc.kernel.exps.PCPath.appendIndex(Select,ExpContext,ExpState,SQLBuffer)",13,28
"org.apache.openjpa.jdbc.kernel.exps.PCPath.appendType(Select,ExpContext,ExpState,SQLBuffer)",21,51
"org.apache.openjpa.jdbc.kernel.exps.PCPath.appendSize(Select,ExpContext,ExpState,SQLBuffer)",13,28
"org.apache.openjpa.jdbc.kernel.exps.PCPath.appendIsNull(Select,ExpContext,ExpState,SQLBuffer)",12,26
"org.apache.openjpa.jdbc.kernel.exps.PCPath.appendIsNotNull(Select,ExpContext,ExpState,SQLBuffer)",12,26
org.apache.openjpa.jdbc.kernel.exps.PCPath.isSubqueryPath(),5,9
org.apache.openjpa.jdbc.kernel.exps.PCPath.hashCode(),4,12
org.apache.openjpa.jdbc.kernel.exps.PCPath.equals(Object),6,18
org.apache.openjpa.jdbc.kernel.exps.PCPath.getId(),1,2
org.apache.openjpa.jdbc.kernel.exps.PCPath.Action.toString(),2,3
org.apache.openjpa.jdbc.kernel.exps.PCPath.Action.hashCode(),3,6
org.apache.openjpa.jdbc.kernel.exps.PCPath.Action.equals(Object),5,9
org.apache.openjpa.jdbc.kernel.exps.CurrentDate.CurrentDate(Class<>),3,6
org.apache.openjpa.jdbc.kernel.exps.CurrentDate.getType(),2,3
org.apache.openjpa.jdbc.kernel.exps.CurrentDate.setImplicitType(Class),3,4
"org.apache.openjpa.jdbc.kernel.exps.CurrentDate.load(ExpContext,ExpState,Result)",15,27
org.apache.openjpa.jdbc.kernel.exps.CurrentDate.getValue(Object[]),12,13
"org.apache.openjpa.jdbc.kernel.exps.CurrentDate.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",20,46
"org.apache.openjpa.jdbc.meta.MappingTool.MappingTool(JDBCConfiguration,String,boolean)",28,66
org.apache.openjpa.jdbc.meta.MappingTool.getAction(),4,6
org.apache.openjpa.jdbc.meta.MappingTool.isMetaDataAction(),5,7
org.apache.openjpa.jdbc.meta.MappingTool.getSchemaAction(),17,26
org.apache.openjpa.jdbc.meta.MappingTool.setSchemaAction(String),18,31
org.apache.openjpa.jdbc.meta.MappingTool.getReadSchema(),20,27
org.apache.openjpa.jdbc.meta.MappingTool.setReadSchema(boolean),20,32
org.apache.openjpa.jdbc.meta.MappingTool.getSequences(),4,5
org.apache.openjpa.jdbc.meta.MappingTool.setSequences(boolean),5,8
org.apache.openjpa.jdbc.meta.MappingTool.getIndexes(),5,7
org.apache.openjpa.jdbc.meta.MappingTool.setIndexes(boolean),6,10
org.apache.openjpa.jdbc.meta.MappingTool.getForeignKeys(),7,9
org.apache.openjpa.jdbc.meta.MappingTool.setForeignKeys(boolean),8,12
org.apache.openjpa.jdbc.meta.MappingTool.getPrimaryKeys(),7,9
org.apache.openjpa.jdbc.meta.MappingTool.setPrimaryKeys(boolean),8,12
org.apache.openjpa.jdbc.meta.MappingTool.getDropUnusedComponents(),12,18
org.apache.openjpa.jdbc.meta.MappingTool.setDropUnusedComponents(boolean),13,23
org.apache.openjpa.jdbc.meta.MappingTool.setIgnoreErrors(boolean),8,15
org.apache.openjpa.jdbc.meta.MappingTool.getIgnoreErrors(),7,10
org.apache.openjpa.jdbc.meta.MappingTool.newSchemaTool(String),16,50
org.apache.openjpa.jdbc.meta.MappingTool.setSchemaTool(SchemaTool),4,14
org.apache.openjpa.jdbc.meta.MappingTool.getSchemaWriter(),9,14
org.apache.openjpa.jdbc.meta.MappingTool.setSchemaWriter(Writer),10,19
org.apache.openjpa.jdbc.meta.MappingTool.getMappingWriter(),10,14
org.apache.openjpa.jdbc.meta.MappingTool.setMappingWriter(Writer),11,19
org.apache.openjpa.jdbc.meta.MappingTool.getMetaDataFile(),6,10
org.apache.openjpa.jdbc.meta.MappingTool.setMetaDataFile(File),7,13
org.apache.openjpa.jdbc.meta.MappingTool.getRepository(),15,30
org.apache.openjpa.jdbc.meta.MappingTool.setRepository(MappingRepository),6,12
org.apache.openjpa.jdbc.meta.MappingTool.getSchemaGroup(),31,90
org.apache.openjpa.jdbc.meta.MappingTool.setSchemaGroup(SchemaGroup),3,9
org.apache.openjpa.jdbc.meta.MappingTool.clear(),14,22
org.apache.openjpa.jdbc.meta.MappingTool.record(),13,14
org.apache.openjpa.jdbc.meta.MappingTool.record(MappingTool.Flags),87,309
org.apache.openjpa.jdbc.meta.MappingTool.dropUnusedSchemaComponents(ClassMapping[]),26,74
org.apache.openjpa.jdbc.meta.MappingTool.addSequenceComponents(ClassMapping[]),9,17
"org.apache.openjpa.jdbc.meta.MappingTool.addSequenceComponents(ClassMapping,SchemaGroup)",28,100
org.apache.openjpa.jdbc.meta.MappingTool.run(Class<>),13,42
org.apache.openjpa.jdbc.meta.MappingTool.add(Class<>),11,24
"org.apache.openjpa.jdbc.meta.MappingTool.getMapping(MappingRepository,Class<>,boolean)",18,40
org.apache.openjpa.jdbc.meta.MappingTool.addMeta(Class<>),33,89
org.apache.openjpa.jdbc.meta.MappingTool.refresh(Class<>),12,25
org.apache.openjpa.jdbc.meta.MappingTool.validate(Class<>),19,36
org.apache.openjpa.jdbc.meta.MappingTool.buildSchema(Class<>),26,63
org.apache.openjpa.jdbc.meta.MappingTool.drop(Class<>),23,61
org.apache.openjpa.jdbc.meta.MappingTool.main(String[]),188,552
org.apache.openjpa.jdbc.meta.MappingTool.main(String[]).$1.run(Options),13,20
"org.apache.openjpa.jdbc.meta.MappingTool.run(JDBCConfiguration,String[],Options)",50,273
"org.apache.openjpa.jdbc.meta.MappingTool.run(JDBCConfiguration,String[],Flags,ClassLoader)",75,283
org.apache.openjpa.jdbc.meta.MappingTool.newImportExports(),23,42
"org.apache.openjpa.jdbc.meta.MappingTool.contains(String,String)",5,9
"org.apache.openjpa.jdbc.meta.MappingTool.ImportExport.importMappings(JDBCConfiguration,Class<>[],String[],boolean,Log,ClassLoader)",14,17
"org.apache.openjpa.jdbc.meta.MappingTool.ImportExport.exportMappings(JDBCConfiguration,Class<>[],boolean,Log,Writer)",13,17
org.apache.openjpa.jdbc.meta.strats.NoneDiscriminatorStrategy.getInstance(),5,7
org.apache.openjpa.jdbc.meta.strats.NoneDiscriminatorStrategy.NoneDiscriminatorStrategy(),5,5
org.apache.openjpa.jdbc.meta.strats.NoneDiscriminatorStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.NoneDiscriminatorStrategy.setDiscriminator(Discriminator),10,14
org.apache.openjpa.jdbc.meta.ValueMappingImpl.ValueMappingImpl(FieldMapping),13,26
org.apache.openjpa.jdbc.meta.ValueMappingImpl.ValueMappingImpl(),5,5
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getValueInfo(),3,6
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getHandler(),2,4
org.apache.openjpa.jdbc.meta.ValueMappingImpl.setHandler(ValueHandler),3,7
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getMappingRepository(),2,7
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getFieldMapping(),4,9
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getTypeMapping(),4,7
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getDeclaredTypeMapping(),5,9
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getEmbeddedMapping(),4,7
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getValueMappedByMapping(),6,11
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getColumns(),7,13
org.apache.openjpa.jdbc.meta.ValueMappingImpl.setColumns(Column[]),6,11
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getColumnIO(),7,12
org.apache.openjpa.jdbc.meta.ValueMappingImpl.setColumnIO(ColumnIO),2,3
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getForeignKey(),5,11
org.apache.openjpa.jdbc.meta.ValueMappingImpl.setForeignKey(ForeignKey),5,8
"org.apache.openjpa.jdbc.meta.ValueMappingImpl.getForeignKey(ClassMapping,int)",29,102
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getForeignKey(ClassMapping),4,9
org.apache.openjpa.jdbc.meta.ValueMappingImpl.newForwardForeignKey(ClassMapping),27,123
"org.apache.openjpa.jdbc.meta.ValueMappingImpl.getEquivalentColumn(Column,ClassMapping,String)",22,63
"org.apache.openjpa.jdbc.meta.ValueMappingImpl.getEquivalentColumn(DBIdentifier,ClassMapping,boolean)",24,67
org.apache.openjpa.jdbc.meta.ValueMappingImpl.newInverseForeignKey(ClassMapping),20,55
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getJoinDirection(),5,10
org.apache.openjpa.jdbc.meta.ValueMappingImpl.setJoinDirection(int),3,6
"org.apache.openjpa.jdbc.meta.ValueMappingImpl.setForeignKey(Row,OpenJPAStateManager,int)",19,45
"org.apache.openjpa.jdbc.meta.ValueMappingImpl.setForeignKey(Row,OpenJPAStateManager)",9,15
"org.apache.openjpa.jdbc.meta.ValueMappingImpl.whereForeignKey(Row,OpenJPAStateManager)",13,27
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getIndependentTypeMappings(),10,31
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getSelectSubclasses(),19,40
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getValueUnique(),3,4
org.apache.openjpa.jdbc.meta.ValueMappingImpl.setValueUnique(Unique),4,7
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getValueIndex(),3,4
org.apache.openjpa.jdbc.meta.ValueMappingImpl.setValueIndex(Index),4,7
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getUseClassCriteria(),4,8
org.apache.openjpa.jdbc.meta.ValueMappingImpl.setUseClassCriteria(boolean),2,5
org.apache.openjpa.jdbc.meta.ValueMappingImpl.getPolymorphic(),2,2
org.apache.openjpa.jdbc.meta.ValueMappingImpl.setPolymorphic(int),3,5
org.apache.openjpa.jdbc.meta.ValueMappingImpl.refSchemaComponents(),9,19
"org.apache.openjpa.jdbc.meta.ValueMappingImpl.mapConstraints(String,boolean)",8,12
"org.apache.openjpa.jdbc.meta.ValueMappingImpl.mapConstraints(DBIdentifier,boolean)",10,15
org.apache.openjpa.jdbc.meta.ValueMappingImpl.clearMapping(),15,19
org.apache.openjpa.jdbc.meta.ValueMappingImpl.syncMappingInfo(),7,17
org.apache.openjpa.jdbc.meta.ValueMappingImpl.copy(ValueMetaData),7,13
org.apache.openjpa.jdbc.meta.ValueMappingImpl.copyMappingInfo(ValueMapping),14,48
org.apache.openjpa.jdbc.meta.ValueMappingImpl.resolve(int),8,32
org.apache.openjpa.jdbc.meta.ValueMappingImpl.resolveMapping(),18,46
org.apache.openjpa.jdbc.meta.ValueMappingImpl.initializeMapping(),22,71
org.apache.openjpa.jdbc.meta.ValueMappingImpl.newIO(),3,5
org.apache.openjpa.jdbc.kernel.exps.ToLowerCase.ToLowerCase(Val),6,8
"org.apache.openjpa.jdbc.kernel.exps.ToLowerCase.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",26,64
org.apache.openjpa.jdbc.kernel.exps.ToLowerCase.getId(),2,3
org.apache.openjpa.jdbc.sql.CacheDictionary.CacheDictionary(),41,59
org.apache.openjpa.jdbc.meta.strats.ClobValueHandler.getInstance(),5,7
"org.apache.openjpa.jdbc.meta.strats.ClobValueHandler.map(ValueMapping,String,ColumnIO,boolean)",14,27
"org.apache.openjpa.jdbc.meta.strats.ClobValueHandler.map(ValueMapping,DBIdentifier,ColumnIO,boolean)",14,27
org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.getIndependentElementMappings(boolean),7,11
org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.getJoinForeignKey(ClassMapping),7,13
"org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.selectElement(Select,ClassMapping,JDBCStore,JDBCFetchConfiguration,int,Joins)",14,30
"org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.loadElement(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",21,37
"org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.join(Joins,ClassMapping)",21,47
"org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.joinElementRelation(Joins,ClassMapping)",6,11
org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.map(boolean),64,285
org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.initialize(),22,44
"org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",14,19
"org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.insert(OpenJPAStateManager,RowManager,Object)",23,40
"org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",49,114
"org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",45,92
"org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.updateInverse(StoreContext,Object,ClassMapping,RowManager,OpenJPAStateManager,int)",45,132
"org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.toDataStoreValue(Object,JDBCStore)",13,23
"org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.join(Joins,boolean)",22,53
org.apache.openjpa.jdbc.meta.strats.RelationToManyInverseKeyFieldStrategy.assertInversable(),13,16
org.apache.openjpa.jdbc.schema.SchemaGroup.getSchemas(),6,18
org.apache.openjpa.jdbc.schema.SchemaGroup.getSchema(String),8,16
org.apache.openjpa.jdbc.schema.SchemaGroup.getSchema(DBIdentifier),5,18
org.apache.openjpa.jdbc.schema.SchemaGroup.addSchema(),3,8
org.apache.openjpa.jdbc.schema.SchemaGroup.addSchema(DBIdentifier),8,33
org.apache.openjpa.jdbc.schema.SchemaGroup.addSchema(String),7,13
org.apache.openjpa.jdbc.schema.SchemaGroup.removeSchema(Schema),10,35
org.apache.openjpa.jdbc.schema.SchemaGroup.importSchema(Schema),20,57
org.apache.openjpa.jdbc.schema.SchemaGroup.isKnownTable(Table),12,20
org.apache.openjpa.jdbc.schema.SchemaGroup.isKnownTable(String),15,21
org.apache.openjpa.jdbc.schema.SchemaGroup.isKnownTable(QualifiedDBIdentifier),4,6
org.apache.openjpa.jdbc.schema.SchemaGroup.findTable(Table),5,13
org.apache.openjpa.jdbc.schema.SchemaGroup.findTable(String),12,21
org.apache.openjpa.jdbc.schema.SchemaGroup.findTable(QualifiedDBIdentifier),10,37
"org.apache.openjpa.jdbc.schema.SchemaGroup.findTable(Schema,String)",11,22
"org.apache.openjpa.jdbc.schema.SchemaGroup.findTable(Schema,DBIdentifier)",6,15
"org.apache.openjpa.jdbc.schema.SchemaGroup.findTable(Schema,DBIdentifier,DBIdentifier)",6,19
"org.apache.openjpa.jdbc.schema.SchemaGroup.findTable(Schema,QualifiedDBIdentifier,DBIdentifier)",21,90
org.apache.openjpa.jdbc.schema.SchemaGroup.isKnownSequence(Sequence),13,20
org.apache.openjpa.jdbc.schema.SchemaGroup.isKnownSequence(String),15,21
org.apache.openjpa.jdbc.schema.SchemaGroup.isKnownSequence(DBIdentifier),5,8
org.apache.openjpa.jdbc.schema.SchemaGroup.isKnownSequence(QualifiedDBIdentifier),4,6
org.apache.openjpa.jdbc.schema.SchemaGroup.findSequence(Sequence),6,13
org.apache.openjpa.jdbc.schema.SchemaGroup.findSequence(String),10,18
org.apache.openjpa.jdbc.schema.SchemaGroup.findSequence(DBIdentifier),5,11
org.apache.openjpa.jdbc.schema.SchemaGroup.findSequence(QualifiedDBIdentifier),9,35
"org.apache.openjpa.jdbc.schema.SchemaGroup.findSequence(Schema,String)",13,24
"org.apache.openjpa.jdbc.schema.SchemaGroup.findSequence(Schema,QualifiedDBIdentifier)",9,42
org.apache.openjpa.jdbc.schema.SchemaGroup.findExportedForeignKeys(PrimaryKey),21,70
org.apache.openjpa.jdbc.schema.SchemaGroup.removeUnusedComponents(),24,89
org.apache.openjpa.jdbc.schema.SchemaGroup.clone(),5,8
org.apache.openjpa.jdbc.schema.SchemaGroup.newInstance(),3,5
org.apache.openjpa.jdbc.schema.SchemaGroup.copy(SchemaGroup),15,42
org.apache.openjpa.jdbc.schema.SchemaGroup.newSchema(String),4,9
org.apache.openjpa.jdbc.schema.SchemaGroup.newSchema(DBIdentifier),3,6
"org.apache.openjpa.jdbc.schema.SchemaGroup.newSequence(String,Schema)",6,14
"org.apache.openjpa.jdbc.schema.SchemaGroup.newSequence(DBIdentifier,Schema)",4,9
"org.apache.openjpa.jdbc.schema.SchemaGroup.newTable(String,Schema)",6,14
"org.apache.openjpa.jdbc.schema.SchemaGroup.newTable(DBIdentifier,Schema)",4,9
"org.apache.openjpa.jdbc.schema.SchemaGroup.newColumn(String,Table)",6,14
"org.apache.openjpa.jdbc.schema.SchemaGroup.newColumn(DBIdentifier,Table)",4,9
"org.apache.openjpa.jdbc.schema.SchemaGroup.newPrimaryKey(String,Table)",7,18
"org.apache.openjpa.jdbc.schema.SchemaGroup.newPrimaryKey(DBIdentifier,Table)",5,12
"org.apache.openjpa.jdbc.schema.SchemaGroup.newIndex(String,Table)",6,14
"org.apache.openjpa.jdbc.schema.SchemaGroup.newIndex(DBIdentifier,Table)",4,9
"org.apache.openjpa.jdbc.schema.SchemaGroup.newUnique(String,Table)",7,15
"org.apache.openjpa.jdbc.schema.SchemaGroup.newUnique(DBIdentifier,Table)",4,9
"org.apache.openjpa.jdbc.schema.SchemaGroup.newForeignKey(String,Table)",7,18
"org.apache.openjpa.jdbc.schema.SchemaGroup.newForeignKey(DBIdentifier,Table)",5,12
org.apache.openjpa.jdbc.sql.Union.getSelects(),3,4
org.apache.openjpa.jdbc.sql.Union.getOrdering(),3,3
org.apache.openjpa.jdbc.sql.Union.isUnion(),5,6
org.apache.openjpa.jdbc.sql.Union.abortUnion(),6,7
org.apache.openjpa.jdbc.sql.Union.select(Selector),4,7
"org.apache.openjpa.jdbc.sql.Union.Selector.select(Select,int)",5,8
org.apache.openjpa.conf.QueryCompilationCacheValue.QueryCompilationCacheValue(String),9,15
"org.apache.openjpa.conf.QueryCompilationCacheValue.newInstance(String,Class,Configuration,boolean)",47,133
org.apache.openjpa.jdbc.sql.JoinSet.JoinSet(),2,2
org.apache.openjpa.jdbc.sql.JoinSet.JoinSet(JoinSet),9,24
org.apache.openjpa.jdbc.sql.JoinSet.getRecordedJoin(Join),7,20
"org.apache.openjpa.jdbc.sql.JoinSet.getNode(Join,int)",8,25
org.apache.openjpa.jdbc.sql.JoinSet.last(),5,15
org.apache.openjpa.jdbc.sql.JoinSet.joinIterator(),39,118
org.apache.openjpa.jdbc.sql.JoinSet.getSeenIndex(Join),16,30
org.apache.openjpa.jdbc.sql.JoinSet.add(Join),12,41
org.apache.openjpa.jdbc.sql.JoinSet.addAll(JoinSet),7,15
org.apache.openjpa.jdbc.sql.JoinSet.addNode(Join),10,58
org.apache.openjpa.jdbc.sql.JoinSet.iterator(),3,5
org.apache.openjpa.jdbc.sql.JoinSet.iterator().$1.hasNext(),5,7
org.apache.openjpa.jdbc.sql.JoinSet.iterator().$1.next(),5,6
org.apache.openjpa.jdbc.sql.JoinSet.iterator().$1.remove(),4,4
org.apache.openjpa.jdbc.sql.JoinSet.remove(Join),5,17
"org.apache.openjpa.jdbc.sql.JoinSet.remove(Join,int)",14,45
org.apache.openjpa.jdbc.sql.JoinSet.removeAll(JoinSet),6,14
org.apache.openjpa.jdbc.sql.JoinSet.retainAll(JoinSet),8,19
org.apache.openjpa.jdbc.sql.JoinSet.clear(),3,3
org.apache.openjpa.jdbc.sql.JoinSet.contains(Join),3,6
org.apache.openjpa.jdbc.sql.JoinSet.containsAll(JoinSet),7,16
org.apache.openjpa.jdbc.sql.JoinSet.isEmpty(),2,2
org.apache.openjpa.jdbc.sql.JoinSet.size(),1,2
org.apache.openjpa.jdbc.sql.JoinSet.equals(Object),5,9
org.apache.openjpa.jdbc.sql.JoinSet.hashCode(),3,5
org.apache.openjpa.jdbc.sql.JoinSet.toString(),6,24
"org.apache.openjpa.jdbc.sql.JoinSet.Node.Node(Join,boolean)",3,8
org.apache.openjpa.jdbc.sql.JoinSet.Node.hashCode(),3,7
org.apache.openjpa.jdbc.sql.JoinSet.Node.equals(Object),5,16
org.apache.openjpa.jdbc.sql.JoinSet.Node.clone(),8,18
org.apache.openjpa.jdbc.sql.JoinSet.Node.toString(),4,6
org.apache.openjpa.persistence.jest.FindCommand.FindCommand(JPAServletContext),5,6
org.apache.openjpa.persistence.jest.FindCommand.getMandatoryArguments(),5,6
org.apache.openjpa.persistence.jest.FindCommand.getMinimumArguments(),2,2
org.apache.openjpa.persistence.jest.FindCommand.getValidQualifiers(),4,6
org.apache.openjpa.persistence.jest.FindCommand.process(),59,123
"org.apache.openjpa.datacache.QueryResult.QueryResult(QueryKey,Collection<Object>)",14,24
"org.apache.openjpa.datacache.QueryResult.QueryResult(Collection<Object>,long)",9,11
org.apache.openjpa.datacache.QueryResult.getTimeoutTime(),3,5
org.apache.openjpa.datacache.QueryResult.isTimedOut(),6,7
org.apache.openjpa.datacache.QueryResult.setTimestamp(long),7,10
org.apache.openjpa.datacache.QueryResult.getTimestamp(),5,8
org.apache.openjpa.jdbc.schema.Constraint.Constraint(),2,2
"org.apache.openjpa.jdbc.schema.Constraint.Constraint(String,Table)",11,21
"org.apache.openjpa.jdbc.schema.Constraint.Constraint(DBIdentifier,Table)",6,22
org.apache.openjpa.jdbc.schema.Constraint.remove(),7,9
org.apache.openjpa.jdbc.schema.Constraint.getTable(),2,5
org.apache.openjpa.jdbc.schema.Constraint.getTableName(),6,10
org.apache.openjpa.jdbc.schema.Constraint.getTableIdentifier(),3,8
org.apache.openjpa.jdbc.schema.Constraint.setTableName(String),10,22
org.apache.openjpa.jdbc.schema.Constraint.setTableIdentifier(DBIdentifier),7,12
org.apache.openjpa.jdbc.schema.Constraint.getSchemaName(),7,11
org.apache.openjpa.jdbc.schema.Constraint.getSchemaIdentifier(),3,8
org.apache.openjpa.jdbc.schema.Constraint.setSchemaName(String),13,23
org.apache.openjpa.jdbc.schema.Constraint.setSchemaIdentifier(DBIdentifier),7,11
org.apache.openjpa.jdbc.schema.Constraint.getColumnName(),6,9
org.apache.openjpa.jdbc.schema.Constraint.getColumnIdentifier(),3,8
org.apache.openjpa.jdbc.schema.Constraint.setColumnName(String),11,21
org.apache.openjpa.jdbc.schema.Constraint.setColumnIdentifier(DBIdentifier),7,11
org.apache.openjpa.jdbc.schema.Constraint.getName(),5,7
org.apache.openjpa.jdbc.schema.Constraint.getIdentifier(),2,5
org.apache.openjpa.jdbc.schema.Constraint.setName(String),10,18
org.apache.openjpa.jdbc.schema.Constraint.setIdentifier(DBIdentifier),7,10
org.apache.openjpa.jdbc.schema.Constraint.getFullName(),5,7
org.apache.openjpa.jdbc.schema.Constraint.getQualifiedPath(),4,13
org.apache.openjpa.jdbc.schema.Constraint.getFullIdentifier(),3,5
org.apache.openjpa.jdbc.schema.Constraint.isLogical(),4,6
org.apache.openjpa.jdbc.schema.Constraint.isDeferred(),2,4
org.apache.openjpa.jdbc.schema.Constraint.setDeferred(boolean),3,7
org.apache.openjpa.jdbc.schema.Constraint.toString(),6,15
"org.apache.openjpa.datacache.DataCacheManager.initialize(OpenJPAConfiguration,ObjectValue,ObjectValue)",11,17
org.apache.openjpa.datacache.DataCacheManager.getSystemDataCache(),6,11
org.apache.openjpa.datacache.DataCacheManager.getDataCache(String),6,10
"org.apache.openjpa.datacache.DataCacheManager.getDataCache(String,boolean)",10,19
org.apache.openjpa.datacache.DataCacheManager.getSystemQueryCache(),4,9
org.apache.openjpa.datacache.DataCacheManager.getPCDataGenerator(),4,9
org.apache.openjpa.datacache.DataCacheManager.getClearableScheduler(),5,7
org.apache.openjpa.datacache.DataCacheManager.selectCache(OpenJPAStateManager),20,36
org.apache.openjpa.datacache.DataCacheManager.getDistributionPolicy(),9,13
org.apache.openjpa.datacache.DataCacheManager.close(),2,3
org.apache.openjpa.datacache.DataCacheManager.stopCaching(String),8,10
org.apache.openjpa.datacache.DataCacheManager.startCaching(String),8,10
org.apache.openjpa.datacache.DataCacheManager.listKnownTypes(),10,10
"org.apache.openjpa.persistence.jest.TokenReplacedStream.replace(InputStream,Writer,String)",24,48
"org.apache.openjpa.persistence.jest.TokenReplacedStream.replace(Reader,Writer,String)",33,87
"org.apache.openjpa.persistence.jest.TokenReplacedStream.match(char,Pattern)",11,28
org.apache.openjpa.persistence.jest.TokenReplacedStream.matched(Pattern),4,12
org.apache.openjpa.persistence.jest.TokenReplacedStream.reset(Pattern),5,11
"org.apache.openjpa.persistence.jest.TokenReplacedStream.Pattern.Pattern(String,String)",13,25
org.apache.openjpa.persistence.jest.TokenReplacedStream.Pattern.match(char),12,19
org.apache.openjpa.persistence.jest.TokenReplacedStream.Pattern.reset(),6,8
org.apache.openjpa.persistence.jest.TokenReplacedStream.Pattern.isMatched(),8,14
org.apache.openjpa.persistence.jest.TokenReplacedStream.Pattern.replace(),3,5
org.apache.openjpa.persistence.jest.TokenReplacedStream.Pattern.toString(),3,5
org.apache.openjpa.event.BrokerFactoryEventManager.BrokerFactoryEventManager(Configuration),6,8
"org.apache.openjpa.event.BrokerFactoryEventManager.fireEvent(Object,Object)",15,32
org.apache.openjpa.kernel.BrokerFactory.getConfiguration(),3,5
org.apache.openjpa.kernel.BrokerFactory.getProperties(),6,7
org.apache.openjpa.kernel.BrokerFactory.getSupportedProperties(),8,13
"org.apache.openjpa.kernel.BrokerFactory.putUserObject(Object,Object)",9,14
org.apache.openjpa.kernel.BrokerFactory.getUserObject(Object),7,11
org.apache.openjpa.kernel.BrokerFactory.newBroker(),2,4
"org.apache.openjpa.kernel.BrokerFactory.newBroker(String,String,boolean,int,boolean)",16,24
"org.apache.openjpa.kernel.BrokerFactory.newBroker(String,String,boolean,int,boolean,String,String)",34,79
"org.apache.openjpa.kernel.BrokerFactory.addLifecycleListener(Object,Class<>[])",12,20
org.apache.openjpa.kernel.BrokerFactory.removeLifecycleListener(Object),6,10
org.apache.openjpa.kernel.BrokerFactory.addTransactionListener(Object),16,19
org.apache.openjpa.kernel.BrokerFactory.removeTransactionListener(Object),11,15
org.apache.openjpa.kernel.BrokerFactory.close(),2,3
org.apache.openjpa.kernel.BrokerFactory.isClosed(),4,5
org.apache.openjpa.kernel.BrokerFactory.lock(),3,4
org.apache.openjpa.kernel.BrokerFactory.unlock(),4,4
org.apache.openjpa.kernel.BrokerFactory.assertOpen(),6,9
org.apache.openjpa.kernel.BrokerFactory.postCreationCallback(),8,8
org.apache.openjpa.enhance.PCEnhancerAgent.getLoadSuccessful(),6,8
org.apache.openjpa.enhance.PCEnhancerAgent.disableDynamicAgent(),6,11
org.apache.openjpa.enhance.PCEnhancerAgent.loadDynamicAgent(Log),21,43
"org.apache.openjpa.enhance.PCEnhancerAgent.premain(String,Instrumentation)",50,119
"org.apache.openjpa.enhance.PCEnhancerAgent.registerClassLoadEnhancer(Instrumentation,Options)",60,124
"org.apache.openjpa.enhance.PCEnhancerAgent.registerClassLoadEnhancer(Instrumentation,Options).$1.getClassLoader(Class,ClassLoader)",4,7
demo.SimpleApp.init(ServletConfig),26,59
"demo.SimpleApp.doGet(HttpServletRequest,HttpServletResponse)",19,30
demo.SimpleApp.destroy(),3,4
org.apache.openjpa.event.LogOrphanedKeyAction.getChannel(),9,12
org.apache.openjpa.event.LogOrphanedKeyAction.setChannel(String),10,15
org.apache.openjpa.event.LogOrphanedKeyAction.getLevel(),5,8
org.apache.openjpa.event.LogOrphanedKeyAction.setLevel(short),6,11
org.apache.openjpa.event.LogOrphanedKeyAction.setLevel(String),9,16
"org.apache.openjpa.event.LogOrphanedKeyAction.orphan(Object,OpenJPAStateManager,ValueMetaData)",26,88
org.apache.openjpa.instrumentation.jmx.QueryCacheJMXInstrument.getName(),4,4
org.apache.openjpa.instrumentation.jmx.QueryCacheJMXInstrument.getLevel(),3,6
org.apache.openjpa.instrumentation.jmx.QueryCacheJMXInstrument.initialize(),25,45
org.apache.openjpa.instrumentation.jmx.QueryCacheJMXInstrument.getObjectName(),11,26
org.apache.openjpa.instrumentation.jmx.QueryCacheJMXInstrument.start(),3,4
org.apache.openjpa.instrumentation.jmx.QueryCacheJMXInstrument.stop(),3,4
org.apache.openjpa.kernel.ObjectFactory<T>.newInstance(),1,1
jpa.tools.swing.MetamodelHelper.getDisplayName(Type<>),6,18
jpa.tools.swing.MetamodelHelper.getDisplayName(EntityType<>),7,14
jpa.tools.swing.MetamodelHelper.getDisplayName(Class<>),10,20
jpa.tools.swing.MetamodelHelper.getDisplayName(Attribute<>),14,61
jpa.tools.swing.MetamodelHelper.getAttributes(EntityType<T>),9,20
jpa.tools.swing.MetamodelHelper.getAttributeType(Attribute<>),10,31
jpa.tools.swing.MetamodelHelper.getIdAttributes(EntityType<T>),10,31
jpa.tools.swing.MetamodelHelper.derivedTarget(EntityType<T>),11,27
jpa.tools.swing.MetamodelHelper.getParentType(SingularAttribute<>),5,12
jpa.tools.swing.MetamodelHelper.isId(Attribute<>),2,5
jpa.tools.swing.MetamodelHelper.isVersion(Attribute<>),3,7
jpa.tools.swing.MetamodelHelper.getColor(Attribute<>),9,17
jpa.tools.swing.MetamodelHelper.getColor(Attribute.PersistentAttributeType),16,27
jpa.tools.swing.MetamodelHelper.getAttributeTypeCode(Attribute<>),11,17
"jpa.tools.swing.MetamodelHelper.getValue(Attribute<>,Object)",19,44
"jpa.tools.swing.MetamodelHelper.getMethod(Class<>,String)",13,18
"jpa.tools.swing.MetamodelHelper.EntityComparator.compare(EntityType<>,EntityType<>)",6,12
"jpa.tools.swing.MetamodelHelper.AttributeComparator.compare(Attribute<>,Attribute<>)",7,16
"openbook.server.PersistenceService.PersistenceService(String,EntityManagerFactory,boolean,PersistenceContextType)",13,22
openbook.server.PersistenceService.getUnit(),5,5
openbook.server.PersistenceService.getUnitName(),3,5
openbook.server.PersistenceService.isManaged(),1,2
openbook.server.PersistenceService.getContextType(),4,6
openbook.server.PersistenceService.getEntityManager(),13,42
openbook.server.PersistenceService.newEntityManager(),8,16
openbook.server.PersistenceService.begin(),17,40
openbook.server.PersistenceService.commit(),16,23
openbook.server.PersistenceService.rollback(),14,21
openbook.server.PersistenceService.assertActive(),13,33
"openbook.server.PersistenceService.assertTrue(String,boolean)",6,6
"openbook.tools.util.URIUtils.resolve(URI,String)",7,15
"openbook.tools.util.URIUtils.resolve(URI,URI)",21,75
openbook.tools.util.URIUtils.removeDotSegments(URI),34,99
"openbook.tools.util.URIUtils.getRelativePath(String,String,String)",46,148
"org.apache.openjpa.trader.service.slice.SectorDistributionPolicy.distribute(Object,List<String>,Object)",23,45
org.apache.openjpa.integration.slf4j.TestLogFactory.setUp(),17,25
org.apache.openjpa.integration.slf4j.TestLogFactory.tearDown(),8,14
org.apache.openjpa.integration.slf4j.TestLogFactory.testSLF4J(),23,48
org.apache.openjpa.integration.slf4j.TestLogFactory.getPersistenceUnitName(),15,18
org.apache.openjpa.kernel.exps.BoundVariable.BoundVariable(Class),6,10
org.apache.openjpa.kernel.exps.BoundVariable.setValue(Object),12,20
org.apache.openjpa.kernel.exps.BoundVariable.isVariable(),1,1
org.apache.openjpa.kernel.exps.BoundVariable.getType(),1,2
org.apache.openjpa.kernel.exps.BoundVariable.setImplicitType(Class),3,6
org.apache.openjpa.kernel.exps.BoundVariable.castTo(Class),8,19
"org.apache.openjpa.kernel.exps.BoundVariable.eval(Object,Object,StoreContext,Object[])",9,12
"org.apache.openjpa.trader.client.event.ServiceEvent<T,H>.ServiceEvent(T)",4,5
"org.apache.openjpa.trader.client.event.ServiceEvent<T,H>.getPayload()",1,2
"org.apache.openjpa.trader.client.event.ServiceEvent<T,H>.TradableAdded.TradableAdded(Tradable)",2,5
"org.apache.openjpa.trader.client.event.ServiceEvent<T,H>.TradableAdded.dispatch(ServiceEventHandler.AddTradableHandler)",7,11
"org.apache.openjpa.trader.client.event.ServiceEvent<T,H>.TradableAdded.getAssociatedType()",7,10
"org.apache.openjpa.trader.client.event.ServiceEvent<T,H>.TradableRemoved.TradableRemoved(Tradable)",2,5
"org.apache.openjpa.trader.client.event.ServiceEvent<T,H>.TradableRemoved.dispatch(ServiceEventHandler.RemoveTradableHandler)",7,11
"org.apache.openjpa.trader.client.event.ServiceEvent<T,H>.TradableRemoved.getAssociatedType()",7,10
"org.apache.openjpa.trader.client.event.ServiceEvent<T,H>.StockUpdated.StockUpdated(Stock)",2,5
"org.apache.openjpa.trader.client.event.ServiceEvent<T,H>.StockUpdated.dispatch(UpdateStockHandler)",5,8
"org.apache.openjpa.trader.client.event.ServiceEvent<T,H>.StockUpdated.getAssociatedType()",5,7
"org.apache.openjpa.trader.client.event.ServiceEvent<T,H>.TradeCommitted.TradeCommitted(Trade)",2,5
"org.apache.openjpa.trader.client.event.ServiceEvent<T,H>.TradeCommitted.dispatch(ServiceEventHandler.AddTradeHandler)",7,11
"org.apache.openjpa.trader.client.event.ServiceEvent<T,H>.TradeCommitted.getAssociatedType()",7,10
org.apache.openjpa.kernel.exps.FilterListener.getTag(),4,5
org.apache.openjpa.kernel.exps.FilterListener.expectsArguments(),12,18
org.apache.openjpa.kernel.exps.FilterListener.expectsTarget(),16,31
"org.apache.openjpa.kernel.exps.FilterListener.evaluate(Object,Class,Object[],Class[],Object,StoreContext)",42,90
"org.apache.openjpa.kernel.exps.FilterListener.getType(Class,Class[])",9,20
org.apache.openjpa.kernel.exps.Size.Size(Val),2,4
org.apache.openjpa.kernel.exps.Size.getType(Class),1,1
"org.apache.openjpa.kernel.exps.Size.operate(Object,Class)",5,9
hellojpa.Message.Message(),1,1
hellojpa.Message.Message(String),3,5
hellojpa.Message.setId(long),2,3
hellojpa.Message.getId(),0,0
hellojpa.Message.setMessage(String),4,6
hellojpa.Message.getMessage(),2,3
hellojpa.Message.setCreated(Date),3,6
hellojpa.Message.getCreated(),2,3
"org.apache.openjpa.jdbc.sql.RowImpl.RowImpl(Table,int)",7,17
"org.apache.openjpa.jdbc.sql.RowImpl.RowImpl(Column[],int)",16,28
org.apache.openjpa.jdbc.sql.RowImpl.getTable(),2,4
org.apache.openjpa.jdbc.sql.RowImpl.getColumns(),3,3
org.apache.openjpa.jdbc.sql.RowImpl.getAction(),1,2
org.apache.openjpa.jdbc.sql.RowImpl.isValid(),2,3
org.apache.openjpa.jdbc.sql.RowImpl.setValid(boolean),3,8
org.apache.openjpa.jdbc.sql.RowImpl.getPrimaryKey(),7,8
org.apache.openjpa.jdbc.sql.RowImpl.getFailedObject(),5,7
org.apache.openjpa.jdbc.sql.RowImpl.setFailedObject(Object),8,11
org.apache.openjpa.jdbc.sql.RowImpl.isDependent(),3,4
org.apache.openjpa.jdbc.sql.RowImpl.getSet(Column),8,12
org.apache.openjpa.jdbc.sql.RowImpl.getWhere(Column),7,9
org.apache.openjpa.jdbc.sql.RowImpl.setPrimaryKey(OpenJPAStateManager),7,10
"org.apache.openjpa.jdbc.sql.RowImpl.setPrimaryKey(ColumnIO,OpenJPAStateManager)",9,11
org.apache.openjpa.jdbc.sql.RowImpl.wherePrimaryKey(OpenJPAStateManager),7,9
"org.apache.openjpa.jdbc.sql.RowImpl.flushPrimaryKey(OpenJPAStateManager,ColumnIO,boolean)",21,43
"org.apache.openjpa.jdbc.sql.RowImpl.setForeignKey(ForeignKey,OpenJPAStateManager)",7,12
"org.apache.openjpa.jdbc.sql.RowImpl.setForeignKey(ForeignKey,ColumnIO,OpenJPAStateManager)",9,13
"org.apache.openjpa.jdbc.sql.RowImpl.whereForeignKey(ForeignKey,OpenJPAStateManager)",7,11
org.apache.openjpa.jdbc.sql.RowImpl.clearForeignKey(ForeignKey),12,19
"org.apache.openjpa.jdbc.sql.RowImpl.flushForeignKey(ForeignKey,ColumnIO,OpenJPAStateManager,boolean)",21,56
"org.apache.openjpa.jdbc.sql.RowImpl.flushJoinValues(OpenJPAStateManager,Object,Column[],Column[],ColumnIO,boolean)",56,158
"org.apache.openjpa.jdbc.sql.RowImpl.canSetAny(ColumnIO,int,boolean)",10,16
"org.apache.openjpa.jdbc.sql.RowImpl.canSet(ColumnIO,int,boolean)",10,16
"org.apache.openjpa.jdbc.sql.RowImpl.setRelationId(Column,OpenJPAStateManager,RelationId)",15,22
org.apache.openjpa.jdbc.sql.RowImpl.clearRelationId(Column),9,12
"org.apache.openjpa.jdbc.sql.RowImpl.setArray(Column,Array)",10,16
"org.apache.openjpa.jdbc.sql.RowImpl.setAsciiStream(Column,InputStream,int)",14,23
"org.apache.openjpa.jdbc.sql.RowImpl.setBigDecimal(Column,BigDecimal)",11,15
"org.apache.openjpa.jdbc.sql.RowImpl.setBigInteger(Column,BigInteger)",11,15
"org.apache.openjpa.jdbc.sql.RowImpl.setBinaryStream(Column,InputStream,int)",14,23
"org.apache.openjpa.jdbc.sql.RowImpl.setBlob(Column,Blob)",10,16
"org.apache.openjpa.jdbc.sql.RowImpl.setBoolean(Column,boolean)",9,12
"org.apache.openjpa.jdbc.sql.RowImpl.setByte(Column,byte)",9,12
"org.apache.openjpa.jdbc.sql.RowImpl.setBytes(Column,byte[])",10,15
"org.apache.openjpa.jdbc.sql.RowImpl.setCalendar(Column,Calendar)",10,15
"org.apache.openjpa.jdbc.sql.RowImpl.setChar(Column,char)",10,13
"org.apache.openjpa.jdbc.sql.RowImpl.setCharacterStream(Column,Reader,int)",14,21
"org.apache.openjpa.jdbc.sql.RowImpl.setClob(Column,Clob)",10,16
"org.apache.openjpa.jdbc.sql.RowImpl.setDate(Column,Date)",10,15
"org.apache.openjpa.jdbc.sql.RowImpl.setDate(Column,java.sql.Date,Calendar)",14,31
"org.apache.openjpa.jdbc.sql.RowImpl.setDouble(Column,double)",9,12
"org.apache.openjpa.jdbc.sql.RowImpl.setFloat(Column,float)",9,12
"org.apache.openjpa.jdbc.sql.RowImpl.setInt(Column,int)",9,12
"org.apache.openjpa.jdbc.sql.RowImpl.setLong(Column,long)",9,12
"org.apache.openjpa.jdbc.sql.RowImpl.setLocale(Column,Locale)",10,15
org.apache.openjpa.jdbc.sql.RowImpl.setNull(Column),5,7
"org.apache.openjpa.jdbc.sql.RowImpl.setNull(Column,boolean)",9,13
"org.apache.openjpa.jdbc.sql.RowImpl.setNumber(Column,Number)",9,12
"org.apache.openjpa.jdbc.sql.RowImpl.setRaw(Column,String)",9,13
"org.apache.openjpa.jdbc.sql.RowImpl.setShort(Column,short)",9,12
"org.apache.openjpa.jdbc.sql.RowImpl.setString(Column,String)",10,15
"org.apache.openjpa.jdbc.sql.RowImpl.setTime(Column,Time,Calendar)",14,28
"org.apache.openjpa.jdbc.sql.RowImpl.setTimestamp(Column,Timestamp,Calendar)",14,28
"org.apache.openjpa.jdbc.sql.RowImpl.setObject(Column,Object)",10,22
"org.apache.openjpa.jdbc.sql.RowImpl.whereArray(Column,Array)",9,15
"org.apache.openjpa.jdbc.sql.RowImpl.whereAsciiStream(Column,InputStream,int)",13,21
"org.apache.openjpa.jdbc.sql.RowImpl.whereBigDecimal(Column,BigDecimal)",10,13
"org.apache.openjpa.jdbc.sql.RowImpl.whereBigInteger(Column,BigInteger)",10,13
"org.apache.openjpa.jdbc.sql.RowImpl.whereBinaryStream(Column,InputStream,int)",13,21
"org.apache.openjpa.jdbc.sql.RowImpl.whereBlob(Column,Blob)",9,14
"org.apache.openjpa.jdbc.sql.RowImpl.whereBoolean(Column,boolean)",8,10
"org.apache.openjpa.jdbc.sql.RowImpl.whereByte(Column,byte)",8,10
"org.apache.openjpa.jdbc.sql.RowImpl.whereBytes(Column,byte[])",9,13
"org.apache.openjpa.jdbc.sql.RowImpl.whereCalendar(Column,Calendar)",9,13
"org.apache.openjpa.jdbc.sql.RowImpl.whereChar(Column,char)",9,11
"org.apache.openjpa.jdbc.sql.RowImpl.whereCharacterStream(Column,Reader,int)",13,19
"org.apache.openjpa.jdbc.sql.RowImpl.whereClob(Column,Clob)",9,14
"org.apache.openjpa.jdbc.sql.RowImpl.whereDate(Column,Date)",9,13
"org.apache.openjpa.jdbc.sql.RowImpl.whereDate(Column,java.sql.Date,Calendar)",13,29
"org.apache.openjpa.jdbc.sql.RowImpl.whereDouble(Column,double)",8,10
"org.apache.openjpa.jdbc.sql.RowImpl.whereFloat(Column,float)",8,10
"org.apache.openjpa.jdbc.sql.RowImpl.whereInt(Column,int)",8,10
"org.apache.openjpa.jdbc.sql.RowImpl.whereLong(Column,long)",8,10
"org.apache.openjpa.jdbc.sql.RowImpl.whereLocale(Column,Locale)",9,13
org.apache.openjpa.jdbc.sql.RowImpl.whereNull(Column),7,9
"org.apache.openjpa.jdbc.sql.RowImpl.whereNumber(Column,Number)",8,10
"org.apache.openjpa.jdbc.sql.RowImpl.whereRaw(Column,String)",8,11
"org.apache.openjpa.jdbc.sql.RowImpl.whereShort(Column,short)",8,10
"org.apache.openjpa.jdbc.sql.RowImpl.whereString(Column,String)",9,13
"org.apache.openjpa.jdbc.sql.RowImpl.whereTime(Column,Time,Calendar)",13,26
"org.apache.openjpa.jdbc.sql.RowImpl.whereTimestamp(Column,Timestamp,Calendar)",13,26
"org.apache.openjpa.jdbc.sql.RowImpl.whereObject(Column,Object)",9,19
"org.apache.openjpa.jdbc.sql.RowImpl.setObject(Column,Object,int,boolean)",26,49
"org.apache.openjpa.jdbc.sql.RowImpl.whereObject(Column,Object,int)",11,17
"org.apache.openjpa.jdbc.sql.RowImpl.flush(Column,Object,int,boolean)",17,35
org.apache.openjpa.jdbc.sql.RowImpl.getSQL(DBDictionary),8,14
org.apache.openjpa.jdbc.sql.RowImpl.generateSQL(DBDictionary),13,25
org.apache.openjpa.jdbc.sql.RowImpl.getUpdateSQL(DBDictionary),23,59
org.apache.openjpa.jdbc.sql.RowImpl.getInsertSQL(DBDictionary),23,66
org.apache.openjpa.jdbc.sql.RowImpl.getDeleteSQL(DBDictionary),13,27
"org.apache.openjpa.jdbc.sql.RowImpl.appendWhere(StringBuilder,DBDictionary)",28,72
org.apache.openjpa.jdbc.sql.RowImpl.getParameterCount(),7,7
"org.apache.openjpa.jdbc.sql.RowImpl.flush(PreparedStatement,DBDictionary,JDBCStore)",12,20
"org.apache.openjpa.jdbc.sql.RowImpl.flush(PreparedStatement,int,DBDictionary,JDBCStore)",53,101
org.apache.openjpa.jdbc.sql.RowImpl.getSetIndex(Column),7,12
org.apache.openjpa.jdbc.sql.RowImpl.getWhereIndex(Column),8,13
org.apache.openjpa.jdbc.sql.RowImpl.clone(),11,15
"org.apache.openjpa.jdbc.sql.RowImpl.newInstance(Column[],int)",6,11
"org.apache.openjpa.jdbc.sql.RowImpl.copyInto(RowImpl,boolean)",17,65
org.apache.openjpa.jdbc.sql.RowImpl.getVals(),2,3
org.apache.openjpa.jdbc.sql.RowImpl.getTypes(),1,2
org.apache.openjpa.jdbc.sql.RowImpl.isFlushed(),1,2
org.apache.openjpa.jdbc.sql.RowImpl.setFlushed(boolean),2,5
org.apache.openjpa.trader.service.BufferedLog.setConfiguration(Configuration),3,6
org.apache.openjpa.trader.service.BufferedLog.endConfiguration(),1,1
org.apache.openjpa.trader.service.BufferedLog.startConfiguration(),2,2
org.apache.openjpa.trader.service.BufferedLog.BufferedLog(),2,2
org.apache.openjpa.trader.service.BufferedLog.setDiagnosticContext(String),9,12
org.apache.openjpa.trader.service.BufferedLog.getLog(String),3,7
org.apache.openjpa.trader.service.BufferedLog.setHistory(int),4,5
org.apache.openjpa.trader.service.BufferedLog.getHistory(),1,2
org.apache.openjpa.trader.service.BufferedLog.getContext(),6,13
org.apache.openjpa.trader.service.BufferedLog.addStatement(LogStatement),9,16
org.apache.openjpa.trader.service.BufferedLog.isEmpty(String),4,4
org.apache.openjpa.trader.service.BufferedLog.get(),7,16
org.apache.openjpa.trader.service.BufferedLog.ChannelLog.ChannelLog(String),6,11
org.apache.openjpa.trader.service.BufferedLog.ChannelLog.error(Object),5,6
"org.apache.openjpa.trader.service.BufferedLog.ChannelLog.error(Object,Throwable)",6,7
org.apache.openjpa.trader.service.BufferedLog.ChannelLog.fatal(Object),5,6
"org.apache.openjpa.trader.service.BufferedLog.ChannelLog.fatal(Object,Throwable)",6,7
org.apache.openjpa.trader.service.BufferedLog.ChannelLog.info(Object),5,6
"org.apache.openjpa.trader.service.BufferedLog.ChannelLog.info(Object,Throwable)",6,7
org.apache.openjpa.trader.service.BufferedLog.ChannelLog.isErrorEnabled(),2,2
org.apache.openjpa.trader.service.BufferedLog.ChannelLog.isFatalEnabled(),2,2
org.apache.openjpa.trader.service.BufferedLog.ChannelLog.isInfoEnabled(),5,5
org.apache.openjpa.trader.service.BufferedLog.ChannelLog.isTraceEnabled(),5,5
org.apache.openjpa.trader.service.BufferedLog.ChannelLog.isWarnEnabled(),2,2
org.apache.openjpa.trader.service.BufferedLog.ChannelLog.trace(Object),5,6
"org.apache.openjpa.trader.service.BufferedLog.ChannelLog.trace(Object,Throwable)",6,7
org.apache.openjpa.trader.service.BufferedLog.ChannelLog.warn(Object),5,6
"org.apache.openjpa.trader.service.BufferedLog.ChannelLog.warn(Object,Throwable)",6,7
"org.apache.openjpa.trader.service.BufferedLog.ChannelLog.createLogStatement(String,Object,Throwable)",22,51
org.apache.openjpa.trader.service.BufferedLog.ChannelLog.extractQuery(String),11,23
"org.apache.openjpa.trader.service.BufferedLog.ChannelLog.getQuery(String,String[],boolean)",9,18
org.apache.openjpa.conf.BrokerFactoryValue.get(ConfigurationProvider),13,18
"org.apache.openjpa.conf.BrokerFactoryValue.set(ConfigurationProvider,String)",11,21
org.apache.openjpa.conf.BrokerFactoryValue.BrokerFactoryValue(),6,7
org.apache.openjpa.integration.validation.ConstraintDates.createInvalidFuture(),12,19
org.apache.openjpa.integration.validation.ConstraintDates.createInvalidPast(),11,22
org.apache.openjpa.integration.validation.ConstraintDates.createInvalidFuturePast(),13,28
org.apache.openjpa.integration.validation.ConstraintDates.createValid(),4,8
org.apache.openjpa.integration.validation.ConstraintDates.ConstraintDates(),16,26
org.apache.openjpa.integration.validation.ConstraintDates.getId(),0,0
org.apache.openjpa.integration.validation.ConstraintDates.getFutureDate(),2,5
org.apache.openjpa.integration.validation.ConstraintDates.setFutureDate(Date),3,6
org.apache.openjpa.integration.validation.ConstraintDates.getPastCalendar(),3,6
org.apache.openjpa.integration.validation.ConstraintDates.setPastCalendar(GregorianCalendar),4,7
org.apache.openjpa.enhance.AsmAdaptor.write(BCClass),20,38
"org.apache.openjpa.enhance.AsmAdaptor.write(BCClass,File)",10,21
"org.apache.openjpa.enhance.AsmAdaptor.toByteArray(BCClass,byte[])",6,13
"org.apache.openjpa.enhance.AsmAdaptor.writeJava7(BCClass,OutputStream)",7,13
"org.apache.openjpa.enhance.AsmAdaptor.toJava7ByteArray(BCClass,byte[])",15,31
"org.apache.openjpa.enhance.AsmAdaptor.BCClassWriter.BCClassWriter(int,ClassLoader)",3,7
"org.apache.openjpa.enhance.AsmAdaptor.BCClassWriter.getCommonSuperClass(String,String)",15,29
org.apache.openjpa.integration.daytrader.TestDaytrader.setUp(),46,93
org.apache.openjpa.integration.daytrader.TestDaytrader.tearDown(),6,8
org.apache.openjpa.integration.daytrader.TestDaytrader.testTrade(),40,113
"org.apache.openjpa.integration.daytrader.TestDaytrader.createEmf(String,Object)",19,49
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.QualifiedDBIdentifier(DBIdentifier),5,7
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.newPath(DBIdentifier),10,18
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.setPath(DBIdentifier),16,78
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.resetNames(),8,12
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.splitPath(DBIdentifier),19,73
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.getPath(DBIdentifier),7,22
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.setSchemaName(DBIdentifier),7,14
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.getSchemaName(),5,8
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.setObjectTableName(DBIdentifier),11,24
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.getObjectTableName(),9,18
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.isUnqualifiedObject(),8,10
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.isUnqualifiedColumn(),10,15
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.equals(Object),18,55
"org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.pathEqual(QualifiedDBIdentifier,QualifiedDBIdentifier)",11,43
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.toString(),4,7
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.getName(),15,32
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.getBaseName(),9,18
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.getIdentifier(),3,5
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.setName(String),16,29
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.setBaseName(String),8,16
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.length(),9,15
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.compareTo(Identifier),4,11
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.isDelimited(),8,22
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.getUnqualifiedName(),9,21
org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier.clone(),13,41
"org.apache.openjpa.kernel.exps.EndsWithExpression.EndsWithExpression(Val,Val)",6,11
"org.apache.openjpa.kernel.exps.EndsWithExpression.compare(Object,Object)",3,5
"org.apache.openjpa.kernel.exps.NullIf.NullIf(Val,Val)",2,9
"org.apache.openjpa.kernel.exps.NullIf.eval(Object,Object,StoreContext,Object[])",13,32
"org.apache.openjpa.kernel.exps.NullIf.eval(Object,StoreContext,Object[])",12,28
"org.apache.openjpa.kernel.exps.NullIf.compare(Object,Object)",4,6
org.apache.openjpa.kernel.exps.NullIf.getVal1(),1,3
org.apache.openjpa.kernel.exps.NullIf.getVal2(),1,3
org.apache.openjpa.kernel.exps.NullIf.getType(),2,3
org.apache.openjpa.kernel.exps.NullIf.setImplicitType(Class),3,4
org.apache.openjpa.kernel.exps.NullIf.acceptVisit(ExpressionVisitor),7,17
"org.apache.openjpa.jdbc.kernel.exps.InKeyExpression.InKeyExpression(Val,Const)",10,14
"org.apache.openjpa.jdbc.kernel.exps.InKeyExpression.getCollection(ExpContext,ExpState)",11,19
"org.apache.openjpa.meta.XMLClassMetaData.XMLClassMetaData(Class,String)",14,24
org.apache.openjpa.meta.XMLClassMetaData.XMLClassMetaData(Class),8,13
org.apache.openjpa.meta.XMLClassMetaData.setName(String),3,6
org.apache.openjpa.meta.XMLClassMetaData.getName(),2,3
org.apache.openjpa.meta.XMLClassMetaData.setXmlname(String),4,6
org.apache.openjpa.meta.XMLClassMetaData.getXmlname(),5,6
org.apache.openjpa.meta.XMLClassMetaData.setXmlnamespace(String),10,16
org.apache.openjpa.meta.XMLClassMetaData.getXmlnamespace(),2,3
org.apache.openjpa.meta.XMLClassMetaData.setXmlRootElement(boolean),4,13
org.apache.openjpa.meta.XMLClassMetaData.isXmlRootElement(),3,6
org.apache.openjpa.meta.XMLClassMetaData.isXmlElement(),2,2
org.apache.openjpa.meta.XMLClassMetaData.isXmlAttribute(),2,2
org.apache.openjpa.meta.XMLClassMetaData.getFieldMapping(String),8,13
org.apache.openjpa.meta.XMLClassMetaData.setType(Class),2,5
org.apache.openjpa.meta.XMLClassMetaData.getType(),1,2
org.apache.openjpa.meta.XMLClassMetaData.getTypeCode(),2,3
org.apache.openjpa.meta.XMLClassMetaData.setXmltype(int),3,5
org.apache.openjpa.meta.XMLClassMetaData.getXmltype(),1,2
"org.apache.openjpa.meta.XMLClassMetaData.addField(String,XMLMetaData)",8,12
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setFiles(Collection<File>),9,15
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setFiles(String),30,52
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setURLs(Collection<URL>),10,14
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setURLs(String),26,45
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setResources(Collection<String>),12,15
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setResources(String),28,36
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setClasspathScan(Collection<String>),11,16
org.apache.openjpa.meta.AbstractCFMetaDataFactory.setClasspathScan(String),25,35
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.store(ClassMetaData[],QueryMetaData[],SequenceMetaData[],int,Map<File,String>)",58,307
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.drop(Class[],int,ClassLoader)",56,280
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.assignDefaultMetaDataFiles(ClassMetaData[],QueryMetaData[],SequenceMetaData[],int,Map)",34,162
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.assignDefaultQueryFiles(QueryMetaData[],Map)",30,80
org.apache.openjpa.meta.AbstractCFMetaDataFactory.isMappingOnlyFactory(),7,10
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.parse(MetaDataParser,Collection)",11,22
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.parse(MetaDataParser,Class[])",10,19
org.apache.openjpa.meta.AbstractCFMetaDataFactory.isParseTopDown(),4,6
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.serialize(MetaDataSerializer,Map<File,String>,int)",16,26
org.apache.openjpa.meta.AbstractCFMetaDataFactory.backupAndDelete(Collection),15,30
org.apache.openjpa.meta.AbstractCFMetaDataFactory.clearMapping(ClassMetaData),8,13
org.apache.openjpa.meta.AbstractCFMetaDataFactory.getSourceFile(ClassMetaData),6,13
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.setSourceFile(ClassMetaData,File)",9,27
org.apache.openjpa.meta.AbstractCFMetaDataFactory.getSourceFile(SequenceMetaData),7,14
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.setSourceFile(SequenceMetaData,File)",10,26
org.apache.openjpa.meta.AbstractCFMetaDataFactory.defaultSourceFile(ClassMetaData),5,8
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.defaultSourceFile(QueryMetaData,Map)",8,12
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.defaultSourceFile(SequenceMetaData,Map)",9,12
org.apache.openjpa.meta.AbstractCFMetaDataFactory.newParser(boolean),6,12
org.apache.openjpa.meta.AbstractCFMetaDataFactory.newSerializer(),3,5
org.apache.openjpa.meta.AbstractCFMetaDataFactory.newAnnotationSerializer(),4,7
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.getDefiningMetaData(QueryMetaData,Map)",24,61
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.getPersistentTypeNames(boolean,ClassLoader)",45,92
org.apache.openjpa.meta.AbstractCFMetaDataFactory.parsePersistentTypeNames(ClassLoader),116,935
org.apache.openjpa.meta.AbstractCFMetaDataFactory.parsePersistentTypeNames(ClassLoader).$1.run(),18,33
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.scan(MetaDataIterator,ClassArgParser,Set,boolean,Object)",33,80
org.apache.openjpa.meta.AbstractCFMetaDataFactory.decode(String),28,79
"org.apache.openjpa.meta.AbstractCFMetaDataFactory.mapPersistentTypeNames(Object,String[])",16,23
org.apache.openjpa.meta.AbstractCFMetaDataFactory.newMetaDataFilter(),10,15
org.apache.openjpa.meta.AbstractCFMetaDataFactory.clear(),2,2
org.apache.openjpa.meta.AbstractCFMetaDataFactory.Parser.getRepository(),9,12
org.apache.openjpa.meta.AbstractCFMetaDataFactory.Parser.setMode(int),7,9
org.apache.openjpa.meta.AbstractCFMetaDataFactory.Serializer.setMode(int),12,15
org.apache.openjpa.meta.AbstractCFMetaDataFactory.Serializer.addMetaData(ClassMetaData),5,11
org.apache.openjpa.meta.AbstractCFMetaDataFactory.Serializer.removeMetaData(ClassMetaData),5,11
org.apache.openjpa.meta.AbstractCFMetaDataFactory.Serializer.addSequenceMetaData(SequenceMetaData),6,14
org.apache.openjpa.meta.AbstractCFMetaDataFactory.Serializer.addQueryMetaData(QueryMetaData),6,14
org.apache.openjpa.meta.AbstractCFMetaDataFactory.Serializer.addAll(MetaDataRepository),8,10
org.apache.openjpa.jdbc.kernel.exps.SQLEmbed.getTag(),2,3
org.apache.openjpa.jdbc.kernel.exps.SQLEmbed.expectsArguments(),2,2
org.apache.openjpa.jdbc.kernel.exps.SQLEmbed.expectsTarget(),2,2
"org.apache.openjpa.jdbc.kernel.exps.SQLEmbed.evaluate(Object,Class,Object[],Class[],Object,StoreContext)",15,19
"org.apache.openjpa.jdbc.kernel.exps.SQLEmbed.appendTo(SQLBuffer,FilterValue,FilterValue[],ClassMapping,JDBCStore)",18,26
"org.apache.openjpa.jdbc.kernel.exps.SQLEmbed.getType(Class,Class[])",5,5
org.apache.openjpa.kernel.Filters.wrap(Class<>),7,7
org.apache.openjpa.kernel.Filters.unwrap(Class<>),8,9
"org.apache.openjpa.kernel.Filters.promote(Class<>,Class<>)",21,72
org.apache.openjpa.kernel.Filters.isNonstandardType(Class<>),13,30
"org.apache.openjpa.kernel.Filters.canConvert(Class<>,Class<>,boolean)",16,45
"org.apache.openjpa.kernel.Filters.convertToMatchMethodArgument(Object,Method)",14,36
"org.apache.openjpa.kernel.Filters.convert(Object,Class<>)",3,6
"org.apache.openjpa.kernel.Filters.convert(Object,Class<>,boolean)",48,229
"org.apache.openjpa.kernel.Filters.allowNumericConversion(Class<>,Class<>,boolean)",7,26
"org.apache.openjpa.kernel.Filters.add(Object,Class<>,Object,Class<>)",3,7
"org.apache.openjpa.kernel.Filters.subtract(Object,Class<>,Object,Class<>)",3,7
"org.apache.openjpa.kernel.Filters.multiply(Object,Class<>,Object,Class<>)",3,7
"org.apache.openjpa.kernel.Filters.divide(Object,Class<>,Object,Class<>)",3,7
"org.apache.openjpa.kernel.Filters.mod(Object,Class<>,Object,Class<>)",3,7
"org.apache.openjpa.kernel.Filters.op(Object,Class<>,Object,Class<>,int)",11,49
"org.apache.openjpa.kernel.Filters.op(int,int,int)",12,18
"org.apache.openjpa.kernel.Filters.op(float,float,int)",13,19
"org.apache.openjpa.kernel.Filters.op(double,double,int)",13,19
"org.apache.openjpa.kernel.Filters.op(long,long,int)",12,18
"org.apache.openjpa.kernel.Filters.op(BigDecimal,BigDecimal,int)",20,31
"org.apache.openjpa.kernel.Filters.op(BigInteger,BigInteger,int)",11,16
"org.apache.openjpa.kernel.Filters.parseDeclaration(String,char,String)",51,123
"org.apache.openjpa.kernel.Filters.splitExpressions(String,char,int)",32,122
"org.apache.openjpa.kernel.Filters.addAccessPathMetaDatas(List<ClassMetaData>,ClassMetaData[])",31,108
"org.apache.openjpa.kernel.Filters.hintToAggregateListener(Object,ClassLoader)",23,65
"org.apache.openjpa.kernel.Filters.hintToAggregateListeners(Object,ClassLoader)",35,108
"org.apache.openjpa.kernel.Filters.hintToFilterListener(Object,ClassLoader)",22,65
"org.apache.openjpa.kernel.Filters.hintToFilterListeners(Object,ClassLoader)",34,108
"org.apache.openjpa.kernel.Filters.hintToGetter(Object,String)",11,26
"org.apache.openjpa.kernel.Filters.hintToSetter(Object,String,Object)",23,59
org.apache.openjpa.kernel.Filters.parseJDBCTemporalSyntax(String),28,59
org.apache.openjpa.kernel.Filters.isJDBCTemporalSyntax(String),8,9
"org.apache.openjpa.kernel.Filters.clip(String,String,String,boolean)",23,45
org.apache.openjpa.kernel.Filters.isTemporalType(Class<>),9,14
org.apache.openjpa.kernel.Filters.getDefaultForNull(Class<>),4,13
org.apache.openjpa.util.InvalidStateException.InvalidStateException(Message),4,5
"org.apache.openjpa.util.InvalidStateException.InvalidStateException(Message,Object)",7,11
org.apache.openjpa.util.InvalidStateException.getSubtype(),2,2
openbook.client.ErrorHandler.handle(Throwable),6,7
"openbook.client.ErrorHandler.uncaughtException(Thread,Throwable)",16,18
jpa.tools.swing.GraphicOutputStream.GraphicOutputStream(ScrollingTextPane),8,9
"jpa.tools.swing.GraphicOutputStream.registerStyle(String,AttributeSet)",7,10
jpa.tools.swing.GraphicOutputStream.write(int),6,9
jpa.tools.swing.GraphicOutputStream.flushBuffer(),13,22
jpa.tools.swing.GraphicOutputStream.getStyle(String),10,20
"openbook.client.SourceCodeBrowser.SourceCodeBrowser(String,boolean)",16,29
openbook.client.SourceCodeBrowser.getRootURI(),2,5
openbook.client.SourceCodeBrowser.getRootDirectory(),9,14
"openbook.client.SourceCodeBrowser.showPage(String,String)",13,29
"openbook.client.SourceCodeBrowser.addPage(String,String)",9,16
openbook.client.SourceCodeBrowser.getViewer(),4,5
"openbook.client.SourceCodeBrowser.showPage(String,URI)",21,36
openbook.client.SourceCodeBrowser.convertToURI(String),24,70
openbook.client.SourceCodeBrowser.convertForWindows(URI),13,22
openbook.tools.util.TextProcessingUtility.replaceHTMLSpecialCharacters(String),26,61
org.apache.openjpa.trader.server.TradingServiceAdapterImpl.init(ServletConfig),22,48
org.apache.openjpa.trader.server.TradingServiceAdapterImpl.destroy(),3,4
"org.apache.openjpa.trader.server.TradingServiceAdapterImpl.ask(Trader,Stock,int,double)",7,13
"org.apache.openjpa.trader.server.TradingServiceAdapterImpl.bid(Trader,Stock,int,double)",8,16
org.apache.openjpa.trader.server.TradingServiceAdapterImpl.withdraw(Tradable),5,7
org.apache.openjpa.trader.server.TradingServiceAdapterImpl.refresh(Tradable),5,7
org.apache.openjpa.trader.server.TradingServiceAdapterImpl.getStock(String),6,9
org.apache.openjpa.trader.server.TradingServiceAdapterImpl.getStocks(),7,10
"org.apache.openjpa.trader.server.TradingServiceAdapterImpl.getTrades(Timestamp,Timestamp)",7,9
"org.apache.openjpa.trader.server.TradingServiceAdapterImpl.getTrades(Trader,Boolean,Timestamp,Timestamp)",10,16
org.apache.openjpa.trader.server.TradingServiceAdapterImpl.login(String),8,11
org.apache.openjpa.trader.server.TradingServiceAdapterImpl.matchAsk(Ask),6,10
org.apache.openjpa.trader.server.TradingServiceAdapterImpl.matchBid(Bid),7,15
org.apache.openjpa.trader.server.TradingServiceAdapterImpl.trade(Match),5,9
org.apache.openjpa.trader.server.TradingServiceAdapterImpl.getLog(),6,8
org.apache.openjpa.trader.server.TradingServiceAdapterImpl.getServiceURI(),6,8
org.apache.openjpa.trader.server.TradingServiceAdapterImpl.translate(Throwable),5,6
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getClassName(),3,5
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setClassName(String),4,8
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getHierarchyStrategy(),6,8
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setHierarchyStrategy(String),7,11
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTableName(),5,9
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTableIdentifier(),3,8
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setTableName(String),6,14
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setTableIdentifier(DBIdentifier),4,8
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSchemaName(),7,11
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSchemaIdentifier(),3,8
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setSchemaName(String),8,16
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setSchemaIdentifier(DBIdentifier),4,8
org.apache.openjpa.jdbc.meta.ClassMappingInfo.isJoinedSubclass(),5,6
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setJoinedSubclass(boolean),6,9
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSecondaryTableNames(),12,16
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSecondaryTableIdentifiers(),8,11
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSecondaryTableName(String),21,39
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSecondaryTableIdentifier(DBIdentifier),28,117
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSecondaryTableJoinColumns(String),14,25
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSecondaryTableJoinColumns(DBIdentifier),19,63
org.apache.openjpa.jdbc.meta.ClassMappingInfo.addSecondaryTable(String),15,24
org.apache.openjpa.jdbc.meta.ClassMappingInfo.addSecondaryTable(DBIdentifier),7,9
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.setSecondaryTableJoinColumns(String,List<Column>)",17,33
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.setSecondaryTableJoinColumns(DBIdentifier,List<Column>)",15,25
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTable(ClassMapping,String,boolean)",9,18
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTable(ClassMapping,DBIdentifier,boolean)",15,33
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTable(ClassMapping,DBIdentifier,boolean).$1.get(Schema)",13,20
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTable(ClassMapping,DBIdentifier,boolean).$1.getIdentifier(Schema)",7,13
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.getTable(ClassMapping,boolean)",6,12
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.getDataStoreIdColumns(ClassMapping,Column[],Table,boolean)",18,35
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSuperclassJoin(ClassMapping,Table,boolean)",15,38
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSuperclassJoin(ClassMapping,Table,boolean).$2.get(Table,Table,boolean)",10,18
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSuperclassJoin(ClassMapping,Table,boolean).$2.populate(Table,Table,Column,Object,boolean,int,int)",16,27
org.apache.openjpa.jdbc.meta.ClassMappingInfo.syncWith(ClassMapping),42,98
org.apache.openjpa.jdbc.meta.ClassMappingInfo.hasSchemaComponents(),5,7
org.apache.openjpa.jdbc.meta.ClassMappingInfo.clear(boolean),4,5
org.apache.openjpa.jdbc.meta.ClassMappingInfo.copy(MappingInfo),24,82
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.addUnique(String,Unique)",15,32
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.addUnique(DBIdentifier,Unique)",26,77
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getUniques(String),9,14
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getUniques(DBIdentifier),13,27
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.getUniques(MetaDataContext,boolean)",37,117
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSourceFile(),2,4
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSourceScope(),3,3
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getSourceType(),3,4
"org.apache.openjpa.jdbc.meta.ClassMappingInfo.setSource(File,int)",5,12
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getResourceName(),3,4
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getComments(),3,6
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setComments(String[]),3,6
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getLineNumber(),2,3
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setLineNumber(int),3,8
org.apache.openjpa.jdbc.meta.ClassMappingInfo.getColNumber(),2,3
org.apache.openjpa.jdbc.meta.ClassMappingInfo.setColNumber(int),3,8
"org.apache.openjpa.kernel.exps.IndexOf.IndexOf(Val,Val)",9,16
org.apache.openjpa.kernel.exps.IndexOf.getType(),1,1
org.apache.openjpa.kernel.exps.IndexOf.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.IndexOf.eval(Object,Object,StoreContext,Object[])",16,49
org.apache.openjpa.kernel.exps.IndexOf.acceptVisit(ExpressionVisitor),8,17
"jpa.tools.swing.ConfigurationViewer.ConfigurationViewer(String,Map<String,Object>)",29,68
jpa.tools.swing.ConfigurationViewer.toString(Object),5,13
jpa.tools.swing.ConfigurationViewer.getMaxLength(Set<String>),7,14
jpa.tools.swing.ConfigurationViewer.pad(int),6,12
org.apache.openjpa.lib.rop.WindowResultList.WindowResultList(ResultObjectProvider),6,8
"org.apache.openjpa.lib.rop.WindowResultList.WindowResultList(ResultObjectProvider,int)",15,34
org.apache.openjpa.lib.rop.WindowResultList.isProviderOpen(),1,1
org.apache.openjpa.lib.rop.WindowResultList.isClosed(),1,2
org.apache.openjpa.lib.rop.WindowResultList.close(),3,4
org.apache.openjpa.lib.rop.WindowResultList.size(),7,16
org.apache.openjpa.lib.rop.WindowResultList.getInternal(int),31,89
org.apache.openjpa.lib.rop.WindowResultList.free(),5,5
org.apache.openjpa.lib.rop.WindowResultList.writeReplace(),12,21
"org.apache.openjpa.kernel.OpenJPAStateManager.initialize(Class,PCState)",22,32
org.apache.openjpa.kernel.OpenJPAStateManager.load(FetchConfiguration),4,7
org.apache.openjpa.kernel.OpenJPAStateManager.getManagedInstance(),3,5
org.apache.openjpa.kernel.OpenJPAStateManager.getPersistenceCapable(),10,17
org.apache.openjpa.kernel.OpenJPAStateManager.getMetaData(),4,6
org.apache.openjpa.kernel.OpenJPAStateManager.getOwner(),6,6
org.apache.openjpa.kernel.OpenJPAStateManager.getOwnerIndex(),5,6
org.apache.openjpa.kernel.OpenJPAStateManager.isEmbedded(),5,6
org.apache.openjpa.kernel.OpenJPAStateManager.isFlushed(),4,5
org.apache.openjpa.kernel.OpenJPAStateManager.isFlushedDirty(),4,5
org.apache.openjpa.kernel.OpenJPAStateManager.isProvisional(),4,4
org.apache.openjpa.kernel.OpenJPAStateManager.getLoaded(),7,8
org.apache.openjpa.kernel.OpenJPAStateManager.getDirty(),7,8
org.apache.openjpa.kernel.OpenJPAStateManager.getFlushed(),8,9
org.apache.openjpa.kernel.OpenJPAStateManager.getUnloaded(FetchConfiguration),12,18
org.apache.openjpa.kernel.OpenJPAStateManager.newProxy(int),32,48
org.apache.openjpa.kernel.OpenJPAStateManager.newFieldProxy(int),14,21
org.apache.openjpa.kernel.OpenJPAStateManager.isDefaultValue(int),2,4
org.apache.openjpa.kernel.OpenJPAStateManager.getContext(),3,5
org.apache.openjpa.kernel.OpenJPAStateManager.getPCState(),1,1
org.apache.openjpa.kernel.OpenJPAStateManager.getId(),11,16
org.apache.openjpa.kernel.OpenJPAStateManager.getObjectId(),10,14
org.apache.openjpa.kernel.OpenJPAStateManager.setObjectId(Object),26,34
org.apache.openjpa.kernel.OpenJPAStateManager.assignObjectId(boolean),13,20
org.apache.openjpa.kernel.OpenJPAStateManager.getLock(),7,11
org.apache.openjpa.kernel.OpenJPAStateManager.setLock(Object),7,13
org.apache.openjpa.kernel.OpenJPAStateManager.getVersion(),5,6
org.apache.openjpa.kernel.OpenJPAStateManager.setVersion(Object),23,32
org.apache.openjpa.kernel.OpenJPAStateManager.setNextVersion(Object),12,16
org.apache.openjpa.kernel.OpenJPAStateManager.isVersionUpdateRequired(),8,10
org.apache.openjpa.kernel.OpenJPAStateManager.isVersionCheckRequired(),7,9
org.apache.openjpa.kernel.OpenJPAStateManager.getImplData(),10,12
"org.apache.openjpa.kernel.OpenJPAStateManager.setImplData(Object,boolean)",20,29
org.apache.openjpa.kernel.OpenJPAStateManager.isImplDataCacheable(),10,12
org.apache.openjpa.kernel.OpenJPAStateManager.getImplData(int),9,17
"org.apache.openjpa.kernel.OpenJPAStateManager.setImplData(int,Object)",20,38
org.apache.openjpa.kernel.OpenJPAStateManager.isImplDataCacheable(int),11,13
org.apache.openjpa.kernel.OpenJPAStateManager.getIntermediate(int),15,26
"org.apache.openjpa.kernel.OpenJPAStateManager.setIntermediate(int,Object)",16,28
org.apache.openjpa.kernel.OpenJPAStateManager.fetchBoolean(int),4,5
org.apache.openjpa.kernel.OpenJPAStateManager.fetchByte(int),4,5
org.apache.openjpa.kernel.OpenJPAStateManager.fetchChar(int),4,5
org.apache.openjpa.kernel.OpenJPAStateManager.fetchDouble(int),4,5
org.apache.openjpa.kernel.OpenJPAStateManager.fetchFloat(int),4,5
org.apache.openjpa.kernel.OpenJPAStateManager.fetchInt(int),4,5
org.apache.openjpa.kernel.OpenJPAStateManager.fetchLong(int),4,5
org.apache.openjpa.kernel.OpenJPAStateManager.fetchObject(int),5,7
org.apache.openjpa.kernel.OpenJPAStateManager.fetchShort(int),4,5
org.apache.openjpa.kernel.OpenJPAStateManager.fetchString(int),5,7
org.apache.openjpa.kernel.OpenJPAStateManager.fetch(int),9,13
"org.apache.openjpa.kernel.OpenJPAStateManager.fetchField(int,boolean)",12,18
org.apache.openjpa.kernel.OpenJPAStateManager.fetchInitialField(int),9,11
"org.apache.openjpa.kernel.OpenJPAStateManager.storeBoolean(int,boolean)",6,8
"org.apache.openjpa.kernel.OpenJPAStateManager.storeByte(int,byte)",6,8
"org.apache.openjpa.kernel.OpenJPAStateManager.storeChar(int,char)",6,8
"org.apache.openjpa.kernel.OpenJPAStateManager.storeDouble(int,double)",6,8
"org.apache.openjpa.kernel.OpenJPAStateManager.storeFloat(int,float)",6,8
"org.apache.openjpa.kernel.OpenJPAStateManager.storeInt(int,int)",6,8
"org.apache.openjpa.kernel.OpenJPAStateManager.storeLong(int,long)",6,8
"org.apache.openjpa.kernel.OpenJPAStateManager.storeObject(int,Object)",7,10
"org.apache.openjpa.kernel.OpenJPAStateManager.storeShort(int,short)",6,8
"org.apache.openjpa.kernel.OpenJPAStateManager.storeString(int,String)",7,10
"org.apache.openjpa.kernel.OpenJPAStateManager.store(int,Object)",10,16
"org.apache.openjpa.kernel.OpenJPAStateManager.storeField(int,Object)",6,10
org.apache.openjpa.kernel.OpenJPAStateManager.dirty(int),3,5
"org.apache.openjpa.kernel.OpenJPAStateManager.removed(int,Object,boolean)",6,9
org.apache.openjpa.kernel.OpenJPAStateManager.beforeRefresh(boolean),10,16
"org.apache.openjpa.kernel.OpenJPAStateManager.setRemote(int,Object)",26,38
org.apache.openjpa.kernel.OpenJPAStateManager.isDelayed(int),18,29
"org.apache.openjpa.kernel.OpenJPAStateManager.setDelayed(int,boolean)",18,27
org.apache.openjpa.kernel.OpenJPAStateManager.loadDelayedField(int),8,15
org.apache.openjpa.kernel.OpenJPAStateManager.fetchObjectField(int),5,11
"org.apache.openjpa.kernel.exps.Subtract.Subtract(Val,Val)",5,11
"org.apache.openjpa.kernel.exps.Subtract.operate(Object,Class,Object,Class)",4,6
org.apache.openjpa.integration.validation.NonDefGrpEntity.setId(int),1,1
org.apache.openjpa.integration.validation.NonDefGrpEntity.getId(),0,0
org.apache.openjpa.integration.validation.NonDefGrpEntity.setDgName(String),3,6
org.apache.openjpa.integration.validation.NonDefGrpEntity.getDgName(),2,3
org.apache.openjpa.integration.validation.NonDefGrpEntity.setNdgName(String),4,8
org.apache.openjpa.integration.validation.NonDefGrpEntity.getNdgName(),3,5
org.apache.openjpa.integration.daytrader.HoldingDataBean.HoldingDataBean(),3,3
"org.apache.openjpa.integration.daytrader.HoldingDataBean.HoldingDataBean(Integer,double,BigDecimal,Date,String)",12,33
"org.apache.openjpa.integration.daytrader.HoldingDataBean.HoldingDataBean(double,BigDecimal,Date,AccountDataBean,QuoteDataBean)",11,37
org.apache.openjpa.integration.daytrader.HoldingDataBean.getRandomInstance(),19,40
org.apache.openjpa.integration.daytrader.HoldingDataBean.toString(),8,18
org.apache.openjpa.integration.daytrader.HoldingDataBean.toHTML(),9,18
org.apache.openjpa.integration.daytrader.HoldingDataBean.print(),3,4
org.apache.openjpa.integration.daytrader.HoldingDataBean.getHoldingID(),2,3
org.apache.openjpa.integration.daytrader.HoldingDataBean.setHoldingID(Integer),3,6
org.apache.openjpa.integration.daytrader.HoldingDataBean.getQuantity(),1,2
org.apache.openjpa.integration.daytrader.HoldingDataBean.setQuantity(double),2,5
org.apache.openjpa.integration.daytrader.HoldingDataBean.getPurchasePrice(),3,5
org.apache.openjpa.integration.daytrader.HoldingDataBean.setPurchasePrice(BigDecimal),4,10
org.apache.openjpa.integration.daytrader.HoldingDataBean.getPurchaseDate(),2,5
org.apache.openjpa.integration.daytrader.HoldingDataBean.setPurchaseDate(Date),3,10
org.apache.openjpa.integration.daytrader.HoldingDataBean.getQuoteID(),3,6
org.apache.openjpa.integration.daytrader.HoldingDataBean.setQuoteID(String),3,6
org.apache.openjpa.integration.daytrader.HoldingDataBean.getAccount(),3,5
org.apache.openjpa.integration.daytrader.HoldingDataBean.setAccount(AccountDataBean),4,8
org.apache.openjpa.integration.daytrader.HoldingDataBean.getQuote(),3,5
org.apache.openjpa.integration.daytrader.HoldingDataBean.setQuote(QuoteDataBean),4,8
org.apache.openjpa.integration.daytrader.HoldingDataBean.hashCode(),3,9
org.apache.openjpa.integration.daytrader.HoldingDataBean.equals(Object),11,26
org.apache.openjpa.integration.validation.Person.setFirstName(String),3,6
org.apache.openjpa.integration.validation.Person.getFirstName(),2,3
org.apache.openjpa.integration.validation.Person.setLastName(String),3,6
org.apache.openjpa.integration.validation.Person.getLastName(),2,3
org.apache.openjpa.integration.validation.Person.setHomeAddress(IAddress),3,11
org.apache.openjpa.integration.validation.Person.getHomeAddress(),2,5
org.apache.openjpa.integration.validation.Person.setId(long),1,1
org.apache.openjpa.integration.validation.Person.getId(),0,0
openbook.client.Demo.main(String[]),18,21
openbook.client.Demo.main(String[]).$1.run(),13,21
openbook.client.Demo.getInstance(),2,6
openbook.client.Demo.adjustWidgetSize(),11,21
openbook.client.Demo.Demo(),77,274
openbook.client.Demo.getService(),22,54
openbook.client.Demo.getService().$2.doInBackground(),19,36
openbook.client.Demo.getCustomer(),13,23
openbook.client.Demo.getCustomer().$3.doInBackground(),6,6
openbook.client.Demo.createToolBar(),19,73
openbook.client.Demo.createStatusBar(),3,7
"openbook.client.Demo.getConfiguration(String,String)",7,12
openbook.client.Demo.getSourceCodeBrowser(),30,73
"openbook.client.Demo.OpenBookAction.OpenBookAction(String,Icon,String)",8,20
"openbook.client.Demo.BuyBookAction.BuyBookAction(String,Icon,String)",7,12
openbook.client.Demo.BuyBookAction.actionPerformed(ActionEvent),15,28
"openbook.client.Demo.DeliveryAction.DeliveryAction(String,Icon,String)",6,11
openbook.client.Demo.DeliveryAction.actionPerformed(ActionEvent),14,23
"openbook.client.Demo.SupplyAction.SupplyAction(String,Icon,String)",6,11
openbook.client.Demo.SupplyAction.actionPerformed(ActionEvent),13,23
"openbook.client.Demo.ViewConfigAction.ViewConfigAction(String,Icon,String)",7,12
openbook.client.Demo.ViewConfigAction.actionPerformed(ActionEvent),14,29
"openbook.client.Demo.ViewDomainAction.ViewDomainAction(String,Icon,String)",7,12
openbook.client.Demo.ViewDomainAction.actionPerformed(ActionEvent),17,31
"openbook.client.Demo.ViewDataAction.ViewDataAction(String,Icon,String)",7,12
openbook.client.Demo.ViewDataAction.actionPerformed(ActionEvent),8,9
"openbook.client.Demo.ViewQueryCacheAction.ViewQueryCacheAction(String,Icon,String)",8,13
openbook.client.Demo.ViewQueryCacheAction.actionPerformed(ActionEvent),18,32
"openbook.client.Demo.ViewSourceAction.ViewSourceAction(String,Icon,String)",7,12
openbook.client.Demo.ViewSourceAction.actionPerformed(ActionEvent),6,7
openbook.client.Demo.ShowCodeAction.ShowCodeAction(),6,11
"openbook.client.Demo.ShowCodeAction.setPage(String,String)",4,10
openbook.client.Demo.ShowCodeAction.actionPerformed(ActionEvent),8,10
"openbook.client.Demo.WelcomeAction.WelcomeAction(String,Icon,String)",6,11
openbook.client.Demo.WelcomeAction.actionPerformed(ActionEvent),31,81
"openbook.client.Demo.AboutAction.AboutAction(String,Icon,String)",5,10
openbook.client.Demo.AboutAction.actionPerformed(ActionEvent),13,18
"openbook.client.Demo.showTab(JTabbedPane,String,Component)",11,42
"openbook.client.Demo.switchTab(JTabbedPane,Component)",7,16
"openbook.client.Demo.locateTab(JTabbedPane,Component)",11,33
openbook.client.Demo.createTabbedView(),12,28
openbook.client.Demo.createOutputView(),23,86
openbook.client.Demo.createNavigator(),37,124
openbook.client.Demo.createNavigator().$4.valueChanged(TreeSelectionEvent),13,25
openbook.client.Demo.ActionTreeNode.ActionTreeNode(Action),3,7
openbook.client.Demo.ActionTreeNode.toString(),4,7
"openbook.client.Demo.TypedTreeCellRenderer.getTreeCellRendererComponent(JTree,Object,boolean,boolean,boolean,int,boolean)",11,25
openbook.client.Demo.AboutDialog.AboutDialog(Icon),44,96
org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.getQueryTimeout(),5,8
org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.setQueryTimeout(int),6,11
org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.getTransactionIsolation(),3,6
org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.setTransactionIsolation(int),4,9
org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.getAutoCommit(),5,9
org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.setAutoCommit(Boolean),6,14
org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.decorate(Connection),14,29
org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.ConfiguringConnection.ConfiguringConnection(Connection),10,28
org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.ConfiguringConnection.setAutoCommit(boolean),9,17
org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.ConfiguringConnection.commit(),10,21
org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.ConfiguringConnection.rollback(),11,21
"org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.ConfiguringConnection.prepareStatement(String,boolean)",11,25
"org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.ConfiguringConnection.prepareStatement(String,int,int,boolean)",13,29
org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.ConfiguringConnection.createStatement(boolean),9,20
"org.apache.openjpa.lib.jdbc.ConfiguringConnectionDecorator.ConfiguringConnection.createStatement(int,int,boolean)",11,24
org.apache.openjpa.meta.InterfaceImplGenerator.InterfaceImplGenerator(MetaDataRepository),8,11
org.apache.openjpa.meta.InterfaceImplGenerator.createImpl(ClassMetaData),62,197
"org.apache.openjpa.meta.InterfaceImplGenerator.addField(BCClass,Class<>,FieldMetaData,Set<Method>)",41,133
"org.apache.openjpa.meta.InterfaceImplGenerator.invalidateNonBeanMethods(BCClass,Class<>,Set<Method>)",40,77
org.apache.openjpa.meta.InterfaceImplGenerator.getClassName(ClassMetaData),13,19
"org.apache.openjpa.meta.InterfaceImplGenerator.getMethodSafe(Class<>,String,Class<>)",19,32
"org.apache.openjpa.meta.InterfaceImplGenerator.isGetter(Class<>,FieldMetaData)",22,31
org.apache.openjpa.meta.InterfaceImplGenerator.isImplType(Class<>),6,9
org.apache.openjpa.meta.InterfaceImplGenerator.toManagedInterface(Class<>),10,16
"org.apache.openjpa.kernel.exps.MathVal.MathVal(Val,Val)",6,14
org.apache.openjpa.kernel.exps.MathVal.getType(),4,7
org.apache.openjpa.kernel.exps.MathVal.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.MathVal.eval(Object,Object,StoreContext,Object[])",11,30
"org.apache.openjpa.kernel.exps.MathVal.operate(Object,Class,Object,Class)",6,8
org.apache.openjpa.kernel.exps.MathVal.acceptVisit(ExpressionVisitor),7,17
"org.apache.openjpa.util.DateId.DateId(Class,String)",5,8
"org.apache.openjpa.util.DateId.DateId(Class,Date)",3,9
"org.apache.openjpa.util.DateId.DateId(Class,java.sql.Date)",5,9
"org.apache.openjpa.util.DateId.DateId(Class,java.sql.Timestamp)",6,9
"org.apache.openjpa.util.DateId.DateId(Class,Date,boolean)",4,11
org.apache.openjpa.util.DateId.getId(),2,2
org.apache.openjpa.util.DateId.getIdObject(),1,2
org.apache.openjpa.util.DateId.toString(),3,5
org.apache.openjpa.util.DateId.idHash(),3,4
org.apache.openjpa.util.DateId.idEquals(OpenJPAId),4,6
org.apache.openjpa.trader.domain.LogStatement.LogStatement(),2,2
"org.apache.openjpa.trader.domain.LogStatement.LogStatement(String,String,String,String,String)",8,22
org.apache.openjpa.trader.domain.LogStatement.getLevel(),2,3
org.apache.openjpa.trader.domain.LogStatement.getContext(),2,3
org.apache.openjpa.trader.domain.LogStatement.getThread(),2,3
org.apache.openjpa.trader.domain.LogStatement.getChannel(),2,3
org.apache.openjpa.trader.domain.LogStatement.getMessage(),2,3
org.apache.openjpa.trader.domain.LogStatement.toString(),6,7
org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.setConfiguration(Configuration),7,12
org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.startConfiguration(),2,2
org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.endConfiguration(),1,1
"org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.flush(Collection,JDBCStore)",13,26
"org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.flush(Collection,JDBCStore,PreparedStatementManager)",35,138
org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.newRowManager(),3,7
"org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.newPreparedStatementManager(JDBCStore,Connection)",8,15
"org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.flush(RowManager,PreparedStatementManager,Collection)",16,29
"org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.populateRowManager(OpenJPAStateManager,RowManager,JDBCStore,Collection,Collection)",51,152
"org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.addException(Collection,Exception)",8,19
"org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.insert(OpenJPAStateManager,ClassMapping,RowManager,JDBCStore,Collection)",42,136
org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.reorderFields(FieldMapping[]),13,37
"org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.bufferCustomInsert(Strategy,OpenJPAStateManager,JDBCStore,Collection)",17,39
"org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.delete(OpenJPAStateManager,ClassMapping,RowManager,JDBCStore,Collection)",31,103
"org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.bufferCustomDelete(Strategy,OpenJPAStateManager,JDBCStore,Collection)",15,32
"org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.update(OpenJPAStateManager,BitSet,ClassMapping,RowManager,JDBCStore,Collection,boolean)",36,133
"org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.updateIndicators(OpenJPAStateManager,ClassMapping,RowManager,JDBCStore,Collection,boolean)",28,79
"org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.bufferCustomUpdate(Strategy,OpenJPAStateManager,JDBCStore,Collection)",15,32
"org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.CustomMapping.CustomMapping(int,OpenJPAStateManager,Strategy)",7,11
org.apache.openjpa.jdbc.kernel.AbstractUpdateManager.CustomMapping.execute(JDBCStore),11,22
org.apache.openjpa.jdbc.kernel.exps.FilterValue.getType(),3,4
org.apache.openjpa.jdbc.kernel.exps.FilterValue.length(),5,5
org.apache.openjpa.jdbc.kernel.exps.FilterValue.appendTo(SQLBuffer),6,9
"org.apache.openjpa.jdbc.kernel.exps.FilterValue.appendTo(SQLBuffer,int)",8,13
org.apache.openjpa.jdbc.kernel.exps.FilterValue.getColumnAlias(Column),7,11
"org.apache.openjpa.jdbc.kernel.exps.FilterValue.getColumnAlias(String,Table)",7,13
org.apache.openjpa.jdbc.kernel.exps.FilterValue.toDataStoreValue(Object),8,10
org.apache.openjpa.jdbc.kernel.exps.FilterValue.isConstant(),5,5
org.apache.openjpa.jdbc.kernel.exps.FilterValue.getValue(),3,4
org.apache.openjpa.jdbc.kernel.exps.FilterValue.getSQLValue(),8,9
org.apache.openjpa.jdbc.kernel.exps.FilterValue.isPath(),11,11
org.apache.openjpa.jdbc.kernel.exps.FilterValue.getClassMapping(),4,6
org.apache.openjpa.jdbc.kernel.exps.FilterValue.getFieldMapping(),4,8
org.apache.openjpa.jdbc.kernel.exps.FilterValue.getXPath(),1,3
org.apache.openjpa.jdbc.kernel.exps.FilterValue.getXmlMapping(),6,9
org.apache.openjpa.jdbc.kernel.exps.FilterValue.requiresCast(),5,6
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.AccountProfileDataBean(),4,4
"org.apache.openjpa.integration.daytrader.AccountProfileDataBean.AccountProfileDataBean(String,String,String,String,String,String)",13,37
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.getRandomInstance(),17,46
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.toString(),12,19
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.toHTML(),13,19
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.print(),3,4
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.getUserID(),2,3
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.setUserID(String),3,6
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.getPassword(),3,3
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.setPassword(String),4,6
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.getFullName(),2,3
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.setFullName(String),3,6
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.getAddress(),2,3
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.setAddress(String),3,6
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.getEmail(),2,3
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.setEmail(String),3,6
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.getCreditCard(),3,5
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.setCreditCard(String),4,10
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.getAccount(),3,5
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.setAccount(AccountDataBean),4,8
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.hashCode(),3,9
org.apache.openjpa.integration.daytrader.AccountProfileDataBean.equals(Object),13,29
org.apache.openjpa.meta.Order.getName(),3,4
org.apache.openjpa.meta.Order.isAscending(),2,2
org.apache.openjpa.meta.Order.getComparator(),3,5
org.apache.openjpa.lib.xml.TestXMLWriter.TestXMLWriter(String),4,6
org.apache.openjpa.lib.xml.TestXMLWriter.testPrettyPrint(),34,86
org.apache.openjpa.lib.xml.TestXMLWriter.fixNewline(String),9,14
org.apache.openjpa.lib.xml.TestXMLWriter.suite(),4,7
org.apache.openjpa.lib.xml.TestXMLWriter.main(String[]),7,7
org.apache.openjpa.jdbc.kernel.exps.Type.Type(Val),8,17
"org.apache.openjpa.jdbc.kernel.exps.Type.initialize(Select,ExpContext,int)",8,13
"org.apache.openjpa.jdbc.kernel.exps.Type.load(ExpContext,ExpState,Result)",27,50
"org.apache.openjpa.jdbc.kernel.exps.Type.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",8,14
"org.apache.openjpa.jdbc.kernel.exps.Type.select(Select,ExpContext,ExpState,boolean)",11,22
"org.apache.openjpa.jdbc.kernel.exps.Type.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",13,26
org.apache.openjpa.jdbc.kernel.exps.Type.getType(Class),1,1
org.apache.openjpa.jdbc.kernel.exps.Type.getOperator(),8,8
org.apache.openjpa.jdbc.kernel.exps.Type.getPath(),2,6
org.apache.openjpa.jdbc.kernel.exps.Type.getDiscriminator(),2,3
org.apache.openjpa.example.gallery.model.Image.getId(),0,0
org.apache.openjpa.example.gallery.model.Image.setId(long),1,1
org.apache.openjpa.example.gallery.model.Image.getType(),2,4
org.apache.openjpa.example.gallery.model.Image.setType(ImageType),3,7
org.apache.openjpa.example.gallery.model.Image.getFileName(),3,5
org.apache.openjpa.example.gallery.model.Image.setFileName(String),4,10
org.apache.openjpa.example.gallery.model.Image.getData(),1,2
org.apache.openjpa.example.gallery.model.Image.setData(byte[]),2,5
org.apache.openjpa.example.gallery.model.Image.getLocation(),1,3
org.apache.openjpa.example.gallery.model.Image.setLocation(Location),2,6
org.apache.openjpa.example.gallery.model.Image.getCreator(),1,3
org.apache.openjpa.example.gallery.model.Image.setCreator(Creator),2,6
"jpa.tools.swing.SwingHelper.position(Component,Component)",17,51
"jpa.tools.swing.SwingHelper.getTimeString(long,TimeUnit)",10,40
jpa.tools.swing.SwingHelper.toString(TimeUnit),12,17
"jpa.tools.swing.SwingHelper.print(Component,String,File)",27,46
jpa.tools.swing.SwingHelper.getSelectedButton(ButtonGroup),6,14
jpa.tools.swing.SwingHelper.setLookAndFeel(int),19,53
openbook.server.ServiceFactory.getService(String),4,7
"openbook.server.ServiceFactory.getService(String,Map<String,Object>)",30,63
"org.apache.openjpa.trader.client.ui.FadeEffect.FadeEffect(Widget,boolean)",9,14
org.apache.openjpa.trader.client.ui.FadeEffect.run(),10,13
org.apache.openjpa.trader.client.ui.FadeEffect.ended(),2,3
"jpa.tools.swing.PowerPointViewer.PowerPointViewer(String,List<String>)",29,59
jpa.tools.swing.PowerPointViewer.createNavigationButtons(),33,108
jpa.tools.swing.PowerPointViewer.createNavigationButtons().$1.actionPerformed(ActionEvent),5,6
jpa.tools.swing.PowerPointViewer.createNavigationButtons().$2.stateChanged(ChangeEvent),6,9
jpa.tools.swing.PowerPointViewer.createNavigationButtons().$3.actionPerformed(ActionEvent),11,17
jpa.tools.swing.PowerPointViewer.createNavigationButtons().$4.actionPerformed(ActionEvent),4,5
jpa.tools.swing.PowerPointViewer.nextPage(),4,11
jpa.tools.swing.PowerPointViewer.prevPage(),4,10
jpa.tools.swing.PowerPointViewer.getCurrentPageIndex(),5,5
jpa.tools.swing.PowerPointViewer.showPage(int),11,17
jpa.tools.swing.PowerPointViewer.updateButtons(int),20,41
jpa.tools.swing.PowerPointViewer.getSlideCount(),3,3
jpa.tools.swing.PowerPointViewer.getSlideAt(int),8,20
jpa.tools.swing.PowerPointViewer.loadSlide(int),11,26
"jpa.tools.swing.PowerPointViewer.validateSlides(String,List<String>)",11,28
jpa.tools.swing.PowerPointViewer.findResource(String),14,31
"org.apache.openjpa.jdbc.kernel.PreparedResultObjectProvider.PreparedResultObjectProvider(SelectExecutor,ClassMapping,JDBCStore,JDBCFetchConfiguration,Result)",18,42
org.apache.openjpa.jdbc.kernel.PreparedResultObjectProvider.open(),2,2
hellojpa.Main.main(String[]),55,128
"org.apache.openjpa.persistence.ExtentImpl<T>.ExtentImpl(EntityManagerImpl,org.apache.openjpa.kernel.Extent<T>)",16,22
org.apache.openjpa.persistence.ExtentImpl<T>.getDelegate(),6,9
org.apache.openjpa.persistence.ExtentImpl<T>.getElementClass(),3,4
org.apache.openjpa.persistence.ExtentImpl<T>.hasSubclasses(),2,3
org.apache.openjpa.persistence.ExtentImpl<T>.getEntityManager(),3,5
org.apache.openjpa.persistence.ExtentImpl<T>.getFetchPlan(),13,27
org.apache.openjpa.persistence.ExtentImpl<T>.getIgnoreChanges(),3,5
org.apache.openjpa.persistence.ExtentImpl<T>.setIgnoreChanges(boolean),6,13
org.apache.openjpa.persistence.ExtentImpl<T>.list(),4,6
org.apache.openjpa.persistence.ExtentImpl<T>.iterator(),4,6
org.apache.openjpa.persistence.ExtentImpl<T>.closeAll(),2,3
org.apache.openjpa.persistence.ExtentImpl<T>.hashCode(),3,6
org.apache.openjpa.persistence.ExtentImpl<T>.equals(Object),4,8
"org.apache.openjpa.persistence.FetchPlanImpl.registerHint(String[],HintValueConverter)",26,59
org.apache.openjpa.persistence.FetchPlanImpl.FetchPlanImpl(FetchConfiguration),8,14
org.apache.openjpa.persistence.FetchPlanImpl.newDelegatingFetchConfiguration(FetchConfiguration),9,22
org.apache.openjpa.persistence.FetchPlanImpl.getDelegate(),3,6
org.apache.openjpa.persistence.FetchPlanImpl.getMaxFetchDepth(),3,7
org.apache.openjpa.persistence.FetchPlanImpl.setMaxFetchDepth(int),5,13
org.apache.openjpa.persistence.FetchPlanImpl.getFetchBatchSize(),3,7
org.apache.openjpa.persistence.FetchPlanImpl.setFetchBatchSize(int),5,17
org.apache.openjpa.persistence.FetchPlanImpl.getQueryResultCacheEnabled(),5,8
org.apache.openjpa.persistence.FetchPlanImpl.setQueryResultCacheEnabled(boolean),7,14
org.apache.openjpa.persistence.FetchPlanImpl.getQueryResultCache(),4,7
org.apache.openjpa.persistence.FetchPlanImpl.setQueryResultCache(boolean),7,13
org.apache.openjpa.persistence.FetchPlanImpl.getFetchGroups(),3,5
org.apache.openjpa.persistence.FetchPlanImpl.addFetchGroup(String),4,8
org.apache.openjpa.persistence.FetchPlanImpl.addFetchGroups(String),6,9
org.apache.openjpa.persistence.FetchPlanImpl.addFetchGroups(Collection),4,8
org.apache.openjpa.persistence.FetchPlanImpl.removeFetchGroup(String),4,8
org.apache.openjpa.persistence.FetchPlanImpl.removeFetchGroups(String),6,9
org.apache.openjpa.persistence.FetchPlanImpl.removeFetchGroups(Collection),4,8
org.apache.openjpa.persistence.FetchPlanImpl.clearFetchGroups(),2,5
org.apache.openjpa.persistence.FetchPlanImpl.resetFetchGroups(),3,7
org.apache.openjpa.persistence.FetchPlanImpl.getFields(),4,7
org.apache.openjpa.persistence.FetchPlanImpl.hasField(String),3,6
"org.apache.openjpa.persistence.FetchPlanImpl.hasField(Class,String)",4,9
org.apache.openjpa.persistence.FetchPlanImpl.addField(String),5,10
"org.apache.openjpa.persistence.FetchPlanImpl.addField(Class,String)",7,13
org.apache.openjpa.persistence.FetchPlanImpl.addFields(String),7,11
"org.apache.openjpa.persistence.FetchPlanImpl.addFields(Class,String)",8,13
org.apache.openjpa.persistence.FetchPlanImpl.addFields(Collection),5,10
"org.apache.openjpa.persistence.FetchPlanImpl.addFields(Class,Collection)",8,13
org.apache.openjpa.persistence.FetchPlanImpl.removeField(String),5,10
"org.apache.openjpa.persistence.FetchPlanImpl.removeField(Class,String)",7,13
org.apache.openjpa.persistence.FetchPlanImpl.removeFields(String),7,11
"org.apache.openjpa.persistence.FetchPlanImpl.removeFields(Class,String)",8,13
org.apache.openjpa.persistence.FetchPlanImpl.removeFields(Collection),5,10
"org.apache.openjpa.persistence.FetchPlanImpl.removeFields(Class,Collection)",8,13
org.apache.openjpa.persistence.FetchPlanImpl.clearFields(),3,5
"org.apache.openjpa.persistence.FetchPlanImpl.toFieldName(Class,String)",4,9
"org.apache.openjpa.persistence.FetchPlanImpl.toFieldNames(Class,Collection)",13,27
org.apache.openjpa.persistence.FetchPlanImpl.getLockTimeout(),3,5
org.apache.openjpa.persistence.FetchPlanImpl.setLockTimeout(int),5,11
org.apache.openjpa.persistence.FetchPlanImpl.getLockScope(),6,13
org.apache.openjpa.persistence.FetchPlanImpl.setLockScope(PessimisticLockScope),8,19
org.apache.openjpa.persistence.FetchPlanImpl.getQueryTimeout(),3,5
org.apache.openjpa.persistence.FetchPlanImpl.setQueryTimeout(int),5,11
org.apache.openjpa.persistence.FetchPlanImpl.getReadLockMode(),9,16
org.apache.openjpa.persistence.FetchPlanImpl.setReadLockMode(LockModeType),11,22
org.apache.openjpa.persistence.FetchPlanImpl.getWriteLockMode(),9,16
org.apache.openjpa.persistence.FetchPlanImpl.setWriteLockMode(LockModeType),11,22
org.apache.openjpa.persistence.FetchPlanImpl.getExtendedPathLookup(),4,7
org.apache.openjpa.persistence.FetchPlanImpl.setExtendedPathLookup(boolean),7,13
org.apache.openjpa.persistence.FetchPlanImpl.getHint(String),5,7
"org.apache.openjpa.persistence.FetchPlanImpl.setHint(String,Object)",19,49
"org.apache.openjpa.persistence.FetchPlanImpl.setHints(Map<String,Object>)",10,23
org.apache.openjpa.persistence.FetchPlanImpl.getHints(),5,6
org.apache.openjpa.persistence.FetchPlanImpl.hashCode(),3,6
org.apache.openjpa.persistence.FetchPlanImpl.equals(Object),5,9
org.apache.openjpa.persistence.FetchPlanImpl.getCacheRetrieveMode(),5,11
org.apache.openjpa.persistence.FetchPlanImpl.getCacheStoreMode(),5,11
org.apache.openjpa.persistence.FetchPlanImpl.setCacheStoreMode(DataCacheStoreMode),7,17
org.apache.openjpa.persistence.FetchPlanImpl.setCacheRetrieveMode(DataCacheRetrieveMode),7,17
"org.apache.openjpa.persistence.FetchPlanImpl.convertHintValue(String,Object)",9,29
org.apache.openjpa.persistence.FetchPlanImpl.isRecognizedHint(String),8,12
"org.apache.openjpa.persistence.FetchPlanImpl.intersects(Collection<String>,Collection<String>)",7,15
org.apache.openjpa.lib.util.MultiClassLoader.MultiClassLoader(),7,8
org.apache.openjpa.lib.util.MultiClassLoader.MultiClassLoader(MultiClassLoader),5,10
org.apache.openjpa.lib.util.MultiClassLoader.containsClassLoader(ClassLoader),6,12
org.apache.openjpa.lib.util.MultiClassLoader.getClassLoaders(),16,35
org.apache.openjpa.lib.util.MultiClassLoader.getClassLoader(int),11,23
org.apache.openjpa.lib.util.MultiClassLoader.addClassLoader(ClassLoader),8,18
"org.apache.openjpa.lib.util.MultiClassLoader.addClassLoader(int,ClassLoader)",8,19
org.apache.openjpa.lib.util.MultiClassLoader.setClassLoaders(MultiClassLoader),5,12
"org.apache.openjpa.lib.util.MultiClassLoader.addClassLoaders(int,MultiClassLoader)",13,36
org.apache.openjpa.lib.util.MultiClassLoader.addClassLoaders(MultiClassLoader),11,32
org.apache.openjpa.lib.util.MultiClassLoader.removeClassLoader(ClassLoader),5,12
org.apache.openjpa.lib.util.MultiClassLoader.clear(),2,3
org.apache.openjpa.lib.util.MultiClassLoader.size(),3,5
org.apache.openjpa.lib.util.MultiClassLoader.isEmpty(),4,5
org.apache.openjpa.lib.util.MultiClassLoader.findClass(String),17,34
org.apache.openjpa.lib.util.MultiClassLoader.findResource(String),18,43
org.apache.openjpa.lib.util.MultiClassLoader.findResources(String),27,67
org.apache.openjpa.lib.util.MultiClassLoader.equals(Object),5,9
org.apache.openjpa.lib.util.MultiClassLoader.hashCode(),3,5
org.apache.openjpa.lib.conf.TestConfigurations.TestConfigurations(String),3,5
org.apache.openjpa.lib.conf.TestConfigurations.testParsePlugin(),10,70
org.apache.openjpa.lib.conf.TestConfigurations.testParseProperties(),13,108
org.apache.openjpa.lib.conf.TestConfigurations.testCombinePlugins(),11,112
"org.apache.openjpa.lib.conf.TestConfigurations.assertPluginsCombined(String,String[],String,String[],String,String[])",16,69
org.apache.openjpa.lib.conf.TestConfigurations.toProperties(String[]),6,15
org.apache.openjpa.lib.conf.TestConfigurations.main(String[]),5,6
"org.apache.openjpa.jdbc.kernel.MixedLockManager.selectForUpdate(Select,int)",17,36
"org.apache.openjpa.jdbc.kernel.MixedLockManager.lockInternal(OpenJPAStateManager,int,int,Object,boolean)",29,111
"org.apache.openjpa.jdbc.kernel.MixedLockManager.getLockRows(DBDictionary,Object,ClassMapping,JDBCFetchConfiguration,SQLFactory)",37,83
"org.apache.openjpa.jdbc.kernel.MixedLockManager.optimisticLockInternal(OpenJPAStateManager,int,int,Object,boolean)",29,63
org.apache.openjpa.jdbc.kernel.MixedLockManager.skipRelationFieldLock(),4,4
org.apache.openjpa.lib.conf.ValueListener.valueChanged(Value),9,11
"org.apache.openjpa.persistence.MetaDataParsers.getEventTypes(MetaDataTag,OpenJPAConfiguration)",24,66
"org.apache.openjpa.persistence.MetaDataParsers.validateMethodsForSameCallback(Class,Collection<LifecycleCallbacks>,Method,MetaDataTag,OpenJPAConfiguration,Log)",38,83
"org.apache.openjpa.trader.client.MatchWindow.MatchWindow(OpenTrader,Tradable,List<Match>)",61,199
"org.apache.openjpa.trader.client.MatchWindow.MatchWindow(OpenTrader,Tradable,List<Match>).$1.onClick(ClickEvent)",3,5
"org.apache.openjpa.trader.client.MatchWindow.MatchWindow(OpenTrader,Tradable,List<Match>).$2.onClick(ClickEvent)",14,22
org.apache.openjpa.trader.client.MatchWindow.toString(Tradable),8,13
org.apache.openjpa.trader.client.MatchWindow.TradeCallback.TradeCallback(Tradable),3,4
org.apache.openjpa.trader.client.MatchWindow.TradeCallback.onFailure(Throwable),6,7
org.apache.openjpa.trader.client.MatchWindow.TradeCallback.onSuccess(Trade),9,19
"org.apache.openjpa.trader.service.slice.SectorBasedQueryTargetPolicy.getTargets(String,Map<Object,Object>,String,List<String>,Object)",19,43
org.apache.openjpa.lib.util.EventManager.addListener(Object),4,7
org.apache.openjpa.lib.util.EventManager.removeListener(Object),4,7
org.apache.openjpa.lib.util.EventManager.hasListener(Object),5,6
org.apache.openjpa.lib.util.EventManager.hasListeners(),2,3
org.apache.openjpa.lib.util.EventManager.getListeners(),4,5
org.apache.openjpa.lib.util.EventManager.fireEvent(Object),7,10
org.apache.openjpa.jdbc.kernel.exps.NullableAggregateUnaryOp.NullableAggregateUnaryOp(Val),4,6
"org.apache.openjpa.jdbc.kernel.exps.NullableAggregateUnaryOp.NullableAggregateUnaryOp(Val,boolean)",5,8
"org.apache.openjpa.jdbc.kernel.exps.NullableAggregateUnaryOp.nullableValue(ExpContext,ExpState)",20,30
org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.getConfiguration(),5,7
org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.getManagedRuntime(),2,6
org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.addTransactionListener(Object),7,10
org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.removeTransactionListener(Object),6,10
org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.getTransactionListenerCallbackModes(),10,15
org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.setTransactionListenerCallbackMode(CallbackMode),15,22
org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.setTransactionListenerCallbackMode(EnumSet<CallbackMode>),15,23
"org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.addLifecycleListener(Object,Class)",10,17
org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.removeLifecycleListener(Object),6,10
org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.getLifecycleListenerCallbackModes(),10,15
org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.setLifecycleListenerCallbackMode(CallbackMode),15,22
org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.setLifecycleListenerCallbackMode(EnumSet<CallbackMode>),15,23
org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.getQuerySQLCache(),8,8
org.apache.openjpa.persistence.OpenJPAEntityManagerSPI.setQuerySQLCache(boolean),17,20
org.apache.openjpa.persistence.criteria.RootImpl<X>.RootImpl(Types.Entity<X>),5,8
org.apache.openjpa.persistence.criteria.RootImpl<X>.getModel(),3,4
"org.apache.openjpa.persistence.criteria.RootImpl<X>.addToContext(ExpressionFactory,MetamodelImpl,CriteriaQueryImpl<>)",25,56
"org.apache.openjpa.persistence.criteria.RootImpl<X>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",27,61
"org.apache.openjpa.persistence.criteria.RootImpl<X>.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",21,33
org.apache.openjpa.persistence.criteria.RootImpl<X>.asValue(AliasContext),13,30
org.apache.openjpa.persistence.criteria.RootImpl<X>.asVariable(AliasContext),9,12
"org.apache.openjpa.persistence.query.ElseExpression.ElseExpression(CaseExpressionImpl,Expression)",4,8
org.apache.openjpa.persistence.query.ElseExpression.asExpression(AliasContext),7,13
org.apache.openjpa.persistence.query.ElseExpression.asProjection(AliasContext),7,13
"org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StartsWithExpression(Val,Val)",6,13
"org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.initialize(Select,ExpContext,Map)",11,24
"org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",39,145
"org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.selectColumns(Select,ExpContext,ExpState,boolean)",10,26
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.acceptVisit(ExpressionVisitor),7,17
"org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.ZeroFilterValue(Select,ExpState)",6,8
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.getType(),1,1
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.length(),1,1
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.appendTo(SQLBuffer),4,6
"org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.appendTo(SQLBuffer,int)",6,8
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.getColumnAlias(Column),6,10
"org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.getColumnAlias(String,Table)",7,13
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.toDataStoreValue(Object),5,7
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.isConstant(),1,1
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.getValue(),2,2
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.getSQLValue(),3,3
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.isPath(),1,1
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.getClassMapping(),1,2
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.getFieldMapping(),2,4
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.getXPath(),1,2
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.getXmlMapping(),4,5
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.ZeroFilterValue.requiresCast(),2,2
"org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.StringLengthFilterValue(Select,ExpContext,ExpState,String,String)",11,22
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.getType(),1,1
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.length(),1,1
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.appendTo(SQLBuffer),4,6
"org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.appendTo(SQLBuffer,int)",10,17
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.getColumnAlias(Column),6,10
"org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.getColumnAlias(String,Table)",7,13
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.toDataStoreValue(Object),7,13
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.isConstant(),1,1
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.getValue(),2,2
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.getSQLValue(),3,3
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.isPath(),1,1
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.getClassMapping(),1,2
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.getFieldMapping(),2,4
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.getXPath(),1,2
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.getXmlMapping(),4,5
org.apache.openjpa.jdbc.kernel.exps.StartsWithExpression.StringLengthFilterValue.requiresCast(),2,2
org.apache.openjpa.integration.validation.TestMerge.setUp(),17,23
org.apache.openjpa.integration.validation.TestMerge.tearDown(),4,7
org.apache.openjpa.integration.validation.TestMerge.testMergeNew(),47,120
org.apache.openjpa.integration.validation.TestMerge.testMergeExisting(),57,178
org.apache.openjpa.integration.validation.TestMerge.createPerson(EntityManager),8,16
org.apache.openjpa.integration.validation.TestMerge.createAddress(EntityManager),16,35
org.apache.openjpa.integration.validation.TestMerge.getLog(),10,12
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.PersistenceMetaDataDefaults(),15,20
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getPersistenceStrategy(FieldMetaData,Member)",7,14
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getPersistenceStrategy(FieldMetaData,Member,boolean)",53,181
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.setDefaultAccessType(String),20,42
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.populate(ClassMetaData,int)",4,8
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.populate(ClassMetaData,int,boolean)",16,36
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.populate(FieldMetaData),10,19
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.setCascadeNone(ValueMetaData),13,49
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getCachedSuperclassMetaData(ClassMetaData),15,49
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.determineAccessType(ClassMetaData),27,120
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.determineImplicitAccessType(Class<>,OpenJPAConfiguration)",59,157
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.determineExplicitAccessType(Class<>),22,47
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.matchGetterAndSetter(List<Method>,List<Method>)",28,85
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getPersistentFields(ClassMetaData,boolean)",29,64
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getPersistentMethods(ClassMetaData,boolean)",53,116
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getPersistentMembers(ClassMetaData,boolean)",26,107
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.assertNoDuplicate(List<Field>,List<Method>)",6,7
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.error(ClassMetaData,Localizer.Message)",13,25
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.warn(ClassMetaData,Localizer.Message)",11,21
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.trace(ClassMetaData,Localizer.Message)",11,21
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getFieldAccessNames(ClassMetaData),9,12
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getPropertyAccessNames(ClassMetaData),9,12
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.isDefaultPersistent(ClassMetaData,Member,String)",5,9
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.isDefaultPersistent(ClassMetaData,Member,String,boolean)",41,101
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.isAnnotatedTransient(Member),10,13
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.isAnnotatedAccess(Member,AccessType)",17,39
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.isAnnotated(Member),4,8
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.isNotTransient(Member),4,6
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getMemberByProperty(ClassMetaData,String,int,boolean)",31,172
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.InclusiveFilter<T>.includes(T),3,3
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.filter(T[],InclusiveFilter)",14,29
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.filter(List<T>,InclusiveFilter)",11,24
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.GetterFilter.includes(Method),4,6
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.GetterFilter.setIncludePrivate(boolean),2,5
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.GetterFilter.isIncludePrivate(),1,2
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.SetterFilter.includes(Method),3,5
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.SetterFilter.isSetter(Method),16,27
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.AccessFilter.AccessFilter(AccessType),4,7
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.AccessFilter.includes(AnnotatedElement),9,14
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.MemberFilter.MemberFilter(Class<>),2,4
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.MemberFilter.includes(AnnotatedElement),8,17
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.TransientFilter.TransientFilter(boolean),3,4
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.TransientFilter.includes(AnnotatedElement),7,13
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.AnnotatedFilter.includes(AnnotatedElement),25,37
"org.apache.openjpa.persistence.PersistenceMetaDataDefaults.logNoSetter(ClassMetaData,String,Exception)",20,49
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.getLog(ClassMetaData),7,13
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.toFieldNames(List<Field>),5,8
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.toMethodNames(List<Method>),5,8
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.isAbstractMappingUniDirectional(OpenJPAConfiguration),7,17
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.setAbstractMappingUniDirectional(OpenJPAConfiguration),9,16
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.isNonDefaultMappingAllowed(OpenJPAConfiguration),6,13
org.apache.openjpa.persistence.PersistenceMetaDataDefaults.setNonDefaultMappingAllowed(OpenJPAConfiguration),8,13
"org.apache.openjpa.jdbc.meta.strats.HandlerStrategies.map(ValueMapping,String,ColumnIO,boolean)",31,102
"org.apache.openjpa.jdbc.meta.strats.HandlerStrategies.set(ValueMapping,Object,JDBCStore,Row,Column[],ColumnIO,boolean)",21,80
"org.apache.openjpa.jdbc.meta.strats.HandlerStrategies.canSet(Row,ColumnIO,int,boolean)",11,22
"org.apache.openjpa.jdbc.meta.strats.HandlerStrategies.canSetAny(Row,ColumnIO,Column[])",11,23
"org.apache.openjpa.jdbc.meta.strats.HandlerStrategies.set(Row,Column,Object,ValueHandler,boolean)",21,47
"org.apache.openjpa.jdbc.meta.strats.HandlerStrategies.where(ValueMapping,Object,JDBCStore,Row,Column[])",16,44
"org.apache.openjpa.jdbc.meta.strats.HandlerStrategies.where(Row,Column,Object)",9,18
"org.apache.openjpa.jdbc.meta.strats.HandlerStrategies.loadObject(ValueMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins,Column[],boolean)",27,60
"org.apache.openjpa.jdbc.meta.strats.HandlerStrategies.loadDataStore(ValueMapping,Result,Joins,Column[])",23,59
"org.apache.openjpa.jdbc.meta.strats.HandlerStrategies.toDataStoreValue(ValueMapping,Object,Column[],JDBCStore)",24,83
org.apache.openjpa.jdbc.meta.strats.HandlerStrategies.assertJoinable(ValueMapping),16,27
"org.apache.openjpa.persistence.query.TrimExpression.TrimExpression(Expression,char,TrimSpec)",7,16
"org.apache.openjpa.persistence.query.TrimExpression.TrimExpression(Expression,Expression,TrimSpec)",6,15
org.apache.openjpa.persistence.query.TrimExpression.asExpression(AliasContext),11,34
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.JDBCFetchConfigurationImpl(),4,4
"org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.JDBCFetchConfigurationImpl(ConfigurationState,JDBCConfigurationState)",5,12
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.newInstance(ConfigurationState),6,13
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.setContext(StoreContext),21,63
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.copy(FetchConfiguration),20,59
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.getIgnoreDfgForFkSelect(),3,6
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.setIgnoreDfgForFkSelect(boolean),4,7
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.getEagerFetchMode(),3,5
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.setEagerFetchMode(int),20,55
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.getSubclassFetchMode(),3,5
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.getSubclassFetchMode(ClassMapping),7,21
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.setSubclassFetchMode(int),21,55
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.getResultSetType(),3,4
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.setResultSetType(int),21,52
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.getFetchDirection(),2,3
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.setFetchDirection(int),19,48
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.getLRSSize(),2,3
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.setLRSSize(int),19,47
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.getJoinSyntax(),2,3
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.setJoinSyntax(int),21,49
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.newResultList(ResultObjectProvider),32,118
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.getJoins(),5,8
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.hasJoin(String),5,7
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.addJoin(String),16,25
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.addJoins(Collection<String>),11,20
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.removeJoin(String),10,13
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.removeJoins(Collection<String>),9,14
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.clearJoins(),6,8
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.getIsolation(),2,3
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.setIsolation(int),22,47
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.traverseJDBC(FieldMetaData),7,12
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.getJDBCConfiguration(),12,31
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.getFetchInnerJoins(),7,14
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.hasFetchInnerJoin(String),7,13
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.addFetchInnerJoin(String),17,33
org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl.addFetchInnerJoins(Collection<String>),12,25
org.apache.openjpa.persistence.AutoDetachType.AutoDetachType(int),5,8
org.apache.openjpa.persistence.AutoDetachType.toEnumSet(int),13,64
org.apache.openjpa.persistence.AutoDetachType.fromEnumSet(EnumSet<AutoDetachType>),6,21
"org.apache.openjpa.persistence.JPAProperties.record(String,String)",15,24
org.apache.openjpa.persistence.JPAProperties.getUserName(String),13,28
org.apache.openjpa.persistence.JPAProperties.isValidKey(String),16,26
org.apache.openjpa.persistence.JPAProperties.getBeanProperty(String),31,60
"org.apache.openjpa.persistence.JPAProperties.convertToKernelValue(Class<T>,String,Object)",25,74
"org.apache.openjpa.persistence.JPAProperties.convertToUserValue(String,Object)",21,57
"org.apache.openjpa.persistence.JPAProperties.getEnumValue(Class<E>,String,Map<String,Object>)",10,18
"org.apache.openjpa.persistence.JPAProperties.getEnumValue(Class<E>,E[],String,Map<String,Object>)",21,37
"org.apache.openjpa.persistence.JPAProperties.getEnumValue(Class<E>,Object)",10,17
"org.apache.openjpa.persistence.JPAProperties.getEnumValue(Class<E>,E[],Object)",23,45
org.apache.openjpa.persistence.meta.MetamodelImpl.MetamodelImpl(MetaDataRepository),26,55
org.apache.openjpa.persistence.meta.MetamodelImpl.getRepository(),4,5
org.apache.openjpa.persistence.meta.MetamodelImpl.embeddable(Class<X>),12,26
org.apache.openjpa.persistence.meta.MetamodelImpl.entity(Class<X>),12,26
org.apache.openjpa.persistence.meta.MetamodelImpl.entityImpl(Class<X>),5,10
org.apache.openjpa.persistence.meta.MetamodelImpl.getEntityValuesOnly(),18,40
org.apache.openjpa.persistence.meta.MetamodelImpl.getEmbeddables(),8,14
org.apache.openjpa.persistence.meta.MetamodelImpl.getEntities(),8,14
org.apache.openjpa.persistence.meta.MetamodelImpl.getManagedTypes(),12,32
org.apache.openjpa.persistence.meta.MetamodelImpl.managedType(Class<X>),22,58
org.apache.openjpa.persistence.meta.MetamodelImpl.getType(Class<X>),32,82
org.apache.openjpa.persistence.meta.MetamodelImpl.getPersistenceType(ClassMetaData),9,16
"org.apache.openjpa.persistence.meta.MetamodelImpl.find(Class<>,Map<Class<>,V>,PersistenceType,boolean)",21,47
"org.apache.openjpa.persistence.meta.MetamodelImpl.instantiate(Class<X>,ClassMetaData,Map<Class<>,V>,PersistenceType)",34,99
org.apache.openjpa.persistence.meta.MetamodelImpl.unmodifiableSet(Collection<T>),7,14
org.apache.openjpa.persistence.meta.MetamodelImpl.categorizeCollection(Class<>),11,34
org.apache.openjpa.persistence.meta.MetamodelImpl.populate(AbstractManagedType<X>),39,104
org.apache.openjpa.persistence.meta.MetamodelImpl.getParameterizedType(Field),32,73
org.apache.openjpa.persistence.meta.MetamodelImpl.toTypeName(java.lang.reflect.Type),21,70
"org.apache.openjpa.persistence.meta.MetamodelImpl.validate(Field,FieldMetaData)",8,20
"org.apache.openjpa.persistence.meta.MetamodelImpl.validate(Field,Member<X,Y>)",21,57
"org.apache.openjpa.persistence.meta.MetamodelImpl.classForName(String,String[])",6,8
org.apache.openjpa.persistence.meta.MetamodelImpl.getAggregateListener(String),7,9
org.apache.openjpa.persistence.meta.MetamodelImpl.getConfiguration(),3,5
org.apache.openjpa.persistence.meta.MetamodelImpl.getFilterListener(String),7,9
org.apache.openjpa.persistence.meta.MetamodelImpl.getQueryContext(),5,7
"org.apache.openjpa.persistence.query.GreaterEqualExpression.GreaterEqualExpression(Expression,Expression)",6,11
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.FromImpl(AbstractManagedType<X>)",5,12
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.FromImpl(PathImpl<Z>,Members.Member<>,Class<X>)",4,8
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.getType()",1,3
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.getJoins()",8,10
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.join(SingularAttribute<Y>)",6,15
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.join(SingularAttribute<Y>,JoinType)",8,25
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.join(CollectionAttribute<Y>)",7,18
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.join(CollectionAttribute<Y>,JoinType)",9,28
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.join(SetAttribute<Y>)",7,18
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.join(SetAttribute<Y>,JoinType)",9,28
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.join(ListAttribute<Y>)",7,18
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.join(ListAttribute<Y>,JoinType)",9,28
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.join(MapAttribute<K,V>)",7,18
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.join(MapAttribute<K,V>,JoinType)",9,28
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.join(String)",5,9
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.join(String,JoinType)",17,62
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.joinCollection(String)",8,19
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.joinCollection(String,JoinType)",7,18
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.joinList(String)",8,19
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.joinList(String,JoinType)",7,18
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.joinMap(String)",7,16
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.joinMap(String,JoinType)",7,18
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.joinSet(String)",7,16
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.joinSet(String,JoinType)",7,18
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.assertJoinable(Type<>)",9,15
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.addJoin(Join<X>)",5,12
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.fetch(SingularAttribute<Y>,JoinType)",7,10
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.fetch(SingularAttribute<Y>)",7,10
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.fetch(PluralAttribute<Y>,JoinType)",7,10
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.fetch(PluralAttribute<Y>)",7,10
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.fetch(String)",7,11
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.fetch(String,JoinType)",12,25
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.getFetches()",7,8
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.addFetch(Members.Member<Y>,JoinType)",9,19
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.acceptVisit(CriteriaExpressionVisitor)",10,17
"org.apache.openjpa.persistence.criteria.FromImpl<Z,X>.getCorrelationParent()",4,4
org.apache.openjpa.persistence.query.ConcatExpression.ConcatExpression(VarArgsExpression),7,9
org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy.getIndependentElementMappings(boolean),18,28
"org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy.appendIsEmpty(SQLBuffer,Select,Joins)",8,14
"org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy.appendIsNotEmpty(SQLBuffer,Select,Joins)",8,14
"org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy.appendIsNull(SQLBuffer,Select,Joins)",8,13
"org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy.appendIsNotNull(SQLBuffer,Select,Joins)",8,13
"org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy.testEmpty(SQLBuffer,Select,Joins,boolean)",13,27
org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy.getJoinForeignKey(),3,5
"org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy.appendSize(SQLBuffer,Select,Joins)",27,47
"org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy.appendIndex(SQLBuffer,Select,Joins)",11,18
"org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy.appendJoinCount(SQLBuffer,Select,Joins,DBDictionary,FieldMapping,ForeignKey)",18,39
"org.apache.openjpa.jdbc.meta.strats.ContainerFieldStrategy.appendUnaliasedJoin(SQLBuffer,Select,Joins,DBDictionary,FieldMapping,ForeignKey)",27,97
org.apache.openjpa.jdbc.schema.ForeignKey.getAction(String),27,85
org.apache.openjpa.jdbc.schema.ForeignKey.getActionName(int),13,28
org.apache.openjpa.jdbc.schema.ForeignKey.ForeignKey(),3,3
"org.apache.openjpa.jdbc.schema.ForeignKey.ForeignKey(String,Table)",9,21
"org.apache.openjpa.jdbc.schema.ForeignKey.ForeignKey(DBIdentifier,Table)",5,8
org.apache.openjpa.jdbc.schema.ForeignKey.isLogical(),4,5
org.apache.openjpa.jdbc.schema.ForeignKey.isPrimaryKeyAutoAssigned(),16,32
org.apache.openjpa.jdbc.schema.ForeignKey.isPrimaryKeyAutoAssigned(List),35,96
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeyTableName(),7,15
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeyTableIdentifier(),5,18
org.apache.openjpa.jdbc.schema.ForeignKey.setPrimaryKeyTableName(String),11,30
org.apache.openjpa.jdbc.schema.ForeignKey.setPrimaryKeyTableIdentifier(DBIdentifier),8,17
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeySchemaName(),8,16
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeySchemaIdentifier(),6,16
org.apache.openjpa.jdbc.schema.ForeignKey.setPrimaryKeySchemaName(String),12,31
org.apache.openjpa.jdbc.schema.ForeignKey.setPrimaryKeySchemaIdentifier(DBIdentifier),9,17
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeyColumnName(),7,15
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeyColumnIdentifier(),5,10
org.apache.openjpa.jdbc.schema.ForeignKey.setPrimaryKeyColumnName(String),11,30
org.apache.openjpa.jdbc.schema.ForeignKey.setPrimaryKeyColumnIdentifier(DBIdentifier),9,17
org.apache.openjpa.jdbc.schema.ForeignKey.getKeySequence(),5,7
org.apache.openjpa.jdbc.schema.ForeignKey.setKeySequence(int),6,10
org.apache.openjpa.jdbc.schema.ForeignKey.getDeleteAction(),8,20
org.apache.openjpa.jdbc.schema.ForeignKey.setDeleteAction(int),9,36
org.apache.openjpa.jdbc.schema.ForeignKey.getUpdateAction(),7,19
org.apache.openjpa.jdbc.schema.ForeignKey.setUpdateAction(int),9,38
org.apache.openjpa.jdbc.schema.ForeignKey.getIndex(),6,16
org.apache.openjpa.jdbc.schema.ForeignKey.setIndex(int),7,12
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeyColumn(Column),6,16
org.apache.openjpa.jdbc.schema.ForeignKey.getColumn(Column),6,12
org.apache.openjpa.jdbc.schema.ForeignKey.getConstant(Column),7,12
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeyConstant(Column),8,13
org.apache.openjpa.jdbc.schema.ForeignKey.getColumns(),13,23
org.apache.openjpa.jdbc.schema.ForeignKey.getConstants(),14,21
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeyConstants(),15,26
org.apache.openjpa.jdbc.schema.ForeignKey.containsColumn(Column),7,12
org.apache.openjpa.jdbc.schema.ForeignKey.containsPrimaryKeyColumn(Column),7,15
org.apache.openjpa.jdbc.schema.ForeignKey.containsConstantColumn(Column),8,13
org.apache.openjpa.jdbc.schema.ForeignKey.containsConstantPrimaryKeyColumn(Column),8,16
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeyColumns(),15,26
org.apache.openjpa.jdbc.schema.ForeignKey.getConstantColumns(),15,24
org.apache.openjpa.jdbc.schema.ForeignKey.getConstantPrimaryKeyColumns(),15,27
"org.apache.openjpa.jdbc.schema.ForeignKey.setJoins(Column[],Column[])",11,24
"org.apache.openjpa.jdbc.schema.ForeignKey.setConstantJoins(Object[],Column[])",16,30
"org.apache.openjpa.jdbc.schema.ForeignKey.setConstantJoins(Column[],Object[])",14,28
"org.apache.openjpa.jdbc.schema.ForeignKey.join(Column,Column)",25,66
"org.apache.openjpa.jdbc.schema.ForeignKey.joinConstant(Object,Column)",23,40
"org.apache.openjpa.jdbc.schema.ForeignKey.joinConstant(Column,Object)",18,26
org.apache.openjpa.jdbc.schema.ForeignKey.removeJoin(Column),23,73
org.apache.openjpa.jdbc.schema.ForeignKey.getPrimaryKeyTable(),6,10
org.apache.openjpa.jdbc.schema.ForeignKey.refColumns(),7,19
org.apache.openjpa.jdbc.schema.ForeignKey.derefColumns(),7,19
org.apache.openjpa.jdbc.schema.ForeignKey.equalsForeignKey(ForeignKey),19,54
"org.apache.openjpa.jdbc.schema.ForeignKey.columnsMatch(Column[],Column[])",11,24
org.apache.openjpa.jdbc.schema.ForeignKey.hasNotNullColumns(),6,11
"org.apache.openjpa.jdbc.schema.ForeignKey.match(Column[],Column[])",4,14
"org.apache.openjpa.jdbc.schema.ForeignKey.hasColumn(Column[],Column)",7,14
"org.apache.openjpa.jdbc.schema.ForeignKey.match(Object[],Object[])",6,16
"org.apache.openjpa.jdbc.schema.ForeignKey.loadNameFromDB(DBDictionary,Connection)",13,18
"org.apache.openjpa.jdbc.schema.ForeignKey.loadIdentifierFromDB(DBDictionary,Connection)",51,217
org.apache.openjpa.jdbc.schema.ForeignKey.addColumn(ForeignKey),22,71
org.apache.openjpa.jdbc.schema.ForeignKey.createKeyColumns(ForeignKey),17,82
org.apache.openjpa.jdbc.schema.ForeignKey.FKMapKey.FKMapKey(ForeignKey),3,4
org.apache.openjpa.jdbc.schema.ForeignKey.FKMapKey.getFk(),2,2
org.apache.openjpa.jdbc.schema.ForeignKey.FKMapKey.hashCode(),3,8
org.apache.openjpa.jdbc.schema.ForeignKey.FKMapKey.equals(Object),14,53
org.apache.openjpa.persistence.query.QueryDefinitionImpl.QueryDefinitionImpl(QueryBuilderImpl),5,11
org.apache.openjpa.persistence.query.QueryDefinitionImpl.addRoot(Class),7,20
org.apache.openjpa.persistence.query.QueryDefinitionImpl.addSubqueryRoot(PathExpression),21,53
org.apache.openjpa.persistence.query.QueryDefinitionImpl.hasDomain(PathExpression),5,8
org.apache.openjpa.persistence.query.QueryDefinitionImpl.addDomain(T),7,15
org.apache.openjpa.persistence.query.QueryDefinitionImpl.all(),2,2
org.apache.openjpa.persistence.query.QueryDefinitionImpl.any(),2,2
org.apache.openjpa.persistence.query.QueryDefinitionImpl.coalesce(Expression),6,7
org.apache.openjpa.persistence.query.QueryDefinitionImpl.coalesce(String),7,7
org.apache.openjpa.persistence.query.QueryDefinitionImpl.coalesce(Date),7,7
org.apache.openjpa.persistence.query.QueryDefinitionImpl.coalesce(Calendar),7,7
org.apache.openjpa.persistence.query.QueryDefinitionImpl.currentDate(),4,7
org.apache.openjpa.persistence.query.QueryDefinitionImpl.currentTime(),3,7
org.apache.openjpa.persistence.query.QueryDefinitionImpl.currentTimestamp(),4,7
org.apache.openjpa.persistence.query.QueryDefinitionImpl.exists(),3,4
org.apache.openjpa.persistence.query.QueryDefinitionImpl.generalCase(),2,3
org.apache.openjpa.persistence.query.QueryDefinitionImpl.groupBy(PathExpression),9,19
org.apache.openjpa.persistence.query.QueryDefinitionImpl.groupBy(List<PathExpression>),9,22
org.apache.openjpa.persistence.query.QueryDefinitionImpl.having(Predicate),3,5
org.apache.openjpa.persistence.query.QueryDefinitionImpl.literal(String),3,5
org.apache.openjpa.persistence.query.QueryDefinitionImpl.literal(Number),2,4
org.apache.openjpa.persistence.query.QueryDefinitionImpl.literal(boolean),2,4
org.apache.openjpa.persistence.query.QueryDefinitionImpl.literal(Calendar),3,5
org.apache.openjpa.persistence.query.QueryDefinitionImpl.literal(Date),3,5
org.apache.openjpa.persistence.query.QueryDefinitionImpl.literal(char),2,4
org.apache.openjpa.persistence.query.QueryDefinitionImpl.literal(Class),3,6
org.apache.openjpa.persistence.query.QueryDefinitionImpl.literal(Enum<>),2,4
org.apache.openjpa.persistence.query.QueryDefinitionImpl.nullLiteral(),2,4
"org.apache.openjpa.persistence.query.QueryDefinitionImpl.newInstance(Class,SelectItem)",5,10
"org.apache.openjpa.persistence.query.QueryDefinitionImpl.nullif(Expression,Expression)",6,9
"org.apache.openjpa.persistence.query.QueryDefinitionImpl.nullif(Number,Number)",6,7
"org.apache.openjpa.persistence.query.QueryDefinitionImpl.nullif(String,String)",7,9
"org.apache.openjpa.persistence.query.QueryDefinitionImpl.nullif(Date,Date)",7,9
"org.apache.openjpa.persistence.query.QueryDefinitionImpl.nullif(Calendar,Calendar)",7,9
"org.apache.openjpa.persistence.query.QueryDefinitionImpl.nullif(Class,Class)",6,7
"org.apache.openjpa.persistence.query.QueryDefinitionImpl.nullif(Enum<>,Enum<>)",6,7
org.apache.openjpa.persistence.query.QueryDefinitionImpl.orderBy(OrderByItem),11,25
org.apache.openjpa.persistence.query.QueryDefinitionImpl.orderBy(List<OrderByItem>),10,28
org.apache.openjpa.persistence.query.QueryDefinitionImpl.param(String),5,7
org.apache.openjpa.persistence.query.QueryDefinitionImpl.predicate(boolean),1,2
org.apache.openjpa.persistence.query.QueryDefinitionImpl.select(SelectItem),7,11
org.apache.openjpa.persistence.query.QueryDefinitionImpl.select(List<SelectItem>),6,9
org.apache.openjpa.persistence.query.QueryDefinitionImpl.selectDistinct(SelectItem),8,12
org.apache.openjpa.persistence.query.QueryDefinitionImpl.selectDistinct(List<SelectItem>),7,10
"org.apache.openjpa.persistence.query.QueryDefinitionImpl.select(List<SelectItem>,boolean)",10,24
org.apache.openjpa.persistence.query.QueryDefinitionImpl.simpleCase(Expression),4,7
org.apache.openjpa.persistence.query.QueryDefinitionImpl.simpleCase(Number),4,6
org.apache.openjpa.persistence.query.QueryDefinitionImpl.simpleCase(String),5,7
org.apache.openjpa.persistence.query.QueryDefinitionImpl.simpleCase(Date),5,7
org.apache.openjpa.persistence.query.QueryDefinitionImpl.simpleCase(Calendar),5,7
org.apache.openjpa.persistence.query.QueryDefinitionImpl.simpleCase(Class),4,6
org.apache.openjpa.persistence.query.QueryDefinitionImpl.simpleCase(Enum<>),4,6
org.apache.openjpa.persistence.query.QueryDefinitionImpl.some(),2,2
org.apache.openjpa.persistence.query.QueryDefinitionImpl.where(Predicate),3,5
org.apache.openjpa.persistence.query.QueryDefinitionImpl.getProjections(),8,18
org.apache.openjpa.persistence.query.QueryDefinitionImpl.asExpression(AliasContext),18,60
org.apache.openjpa.persistence.query.QueryDefinitionImpl.asProjection(AliasContext),6,7
"org.apache.openjpa.persistence.query.QueryDefinitionImpl.fillBuffer(String,StringBuilder,AliasContext,List,Visit)",19,50
"org.apache.openjpa.persistence.query.QueryDefinitionImpl.fillBuffer(String,StringBuilder,AliasContext,Predicate)",12,20
org.apache.openjpa.persistence.query.QueryDefinitionImpl.registerDomains(AliasContext),21,39
"org.apache.openjpa.persistence.query.QueryDefinitionImpl.DomainSorter.compare(AbstractDomainObject,AbstractDomainObject)",4,7
org.apache.openjpa.enhance.TestEnhancementWithMultiplePUs.testExplicitEnhancementWithClassNotInFirstPU(),43,69
"org.apache.openjpa.enhance.TestEnhancementWithMultiplePUs.assertNotPC(ClassLoader,Project,String)",12,19
org.apache.openjpa.enhance.TestEnhancementWithMultiplePUs.testEnhancementOfSecondPUWithClassNotInFirstPU(),62,105
org.apache.openjpa.enhance.TestEnhancementWithMultiplePUs.testEnhancementOfSecondPUWithClassNotInFirstPU().$1.write(BCClass),12,15
org.apache.openjpa.enhance.TestEnhancementWithMultiplePUs.testEnhancementOfAllPUsWithinAResource(),76,168
org.apache.openjpa.enhance.TestEnhancementWithMultiplePUs.testEnhancementOfAllPUsWithinAResource().$2.write(BCClass),12,15
org.apache.openjpa.jdbc.kernel.EntityB.EntityB(),1,1
org.apache.openjpa.jdbc.kernel.EntityB.setId(Integer),2,2
org.apache.openjpa.jdbc.kernel.EntityB.getId(),1,1
org.apache.openjpa.jdbc.kernel.EntityB.getEntityC(),1,3
org.apache.openjpa.jdbc.kernel.EntityB.setEntityC(EntityC),2,6
org.apache.openjpa.jdbc.kernel.EntityB.getName(),2,3
org.apache.openjpa.jdbc.kernel.EntityB.setName(String),3,6
org.apache.openjpa.jdbc.persistence.classcriteria.Book.Book(),1,1
org.apache.openjpa.jdbc.persistence.classcriteria.Book.Book(String),3,4
org.apache.openjpa.jdbc.persistence.classcriteria.Book.getPageCount(),2,4
org.apache.openjpa.jdbc.persistence.classcriteria.Book.setPageCount(int),7,11
org.apache.openjpa.jdbc.persistence.classcriteria.Book.getArtist(),1,3
org.apache.openjpa.jdbc.persistence.classcriteria.Book.setArtist(Artist),2,6
org.apache.openjpa.jdbc.schema.XMLSchemaParser.XMLSchemaParser(JDBCConfiguration),16,27
org.apache.openjpa.jdbc.schema.XMLSchemaParser.getDelayConstraintResolve(),3,4
org.apache.openjpa.jdbc.schema.XMLSchemaParser.setDelayConstraintResolve(boolean),4,7
org.apache.openjpa.jdbc.schema.XMLSchemaParser.resolveConstraints(),9,14
org.apache.openjpa.jdbc.schema.XMLSchemaParser.clearConstraintInfo(),5,10
org.apache.openjpa.jdbc.schema.XMLSchemaParser.getSchemaGroup(),1,3
org.apache.openjpa.jdbc.schema.XMLSchemaParser.setSchemaGroup(SchemaGroup),2,3
org.apache.openjpa.jdbc.schema.XMLSchemaParser.finish(),12,15
org.apache.openjpa.jdbc.schema.XMLSchemaParser.resolvePrimaryKeys(),25,62
org.apache.openjpa.jdbc.schema.XMLSchemaParser.resolveIndexes(),24,71
org.apache.openjpa.jdbc.schema.XMLSchemaParser.resolveForeignKeys(),41,212
org.apache.openjpa.jdbc.schema.XMLSchemaParser.resolveUniques(),27,73
org.apache.openjpa.jdbc.schema.XMLSchemaParser.reset(),8,8
org.apache.openjpa.jdbc.schema.XMLSchemaParser.getDocType(),13,15
"org.apache.openjpa.jdbc.schema.XMLSchemaParser.startElement(String,Attributes)",19,46
org.apache.openjpa.jdbc.schema.XMLSchemaParser.endElement(String),11,15
org.apache.openjpa.jdbc.schema.XMLSchemaParser.startSchema(Attributes),10,21
org.apache.openjpa.jdbc.schema.XMLSchemaParser.endSchema(),1,2
org.apache.openjpa.jdbc.schema.XMLSchemaParser.startSequence(Attributes),34,83
org.apache.openjpa.jdbc.schema.XMLSchemaParser.startTable(Attributes),19,35
org.apache.openjpa.jdbc.schema.XMLSchemaParser.endTable(),1,2
org.apache.openjpa.jdbc.schema.XMLSchemaParser.startColumn(Attributes),28,82
org.apache.openjpa.jdbc.schema.XMLSchemaParser.startPrimaryKey(Attributes),17,30
org.apache.openjpa.jdbc.schema.XMLSchemaParser.endPrimaryKey(),4,4
org.apache.openjpa.jdbc.schema.XMLSchemaParser.startIndex(Attributes),16,33
org.apache.openjpa.jdbc.schema.XMLSchemaParser.endIndex(),3,6
org.apache.openjpa.jdbc.schema.XMLSchemaParser.startUnique(Attributes),17,33
org.apache.openjpa.jdbc.schema.XMLSchemaParser.endUnique(),4,6
org.apache.openjpa.jdbc.schema.XMLSchemaParser.startForeignKey(Attributes),28,87
org.apache.openjpa.jdbc.schema.XMLSchemaParser.endForeignKey(),4,4
org.apache.openjpa.jdbc.schema.XMLSchemaParser.startOn(Attributes),11,20
org.apache.openjpa.jdbc.schema.XMLSchemaParser.startJoin(Attributes),15,43
org.apache.openjpa.jdbc.schema.XMLSchemaParser.convertConstant(String),10,17
org.apache.openjpa.jdbc.schema.XMLSchemaParser.throwUserException(Message),6,10
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.setMetaModel(MetamodelImpl),8,11
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.getMetamodel(),2,3
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.eval(Object,ExpressionStoreQuery,ExpressionFactory,ClassMetaData)",13,25
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.eval(String[],ExpressionStoreQuery,ExpressionFactory,ClassMetaData)",11,14
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.getLanguage(),4,4
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.createQuery(Class<T>),11,25
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.createTupleQuery(),11,23
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.parse(String,ExpressionStoreQuery)",8,9
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.populate(Object,ExpressionStoreQuery)",16,29
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.abs(Expression<N>),3,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.all(Subquery<Y>),3,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.and(Predicate),3,6
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.and(Expression<Boolean>,Expression<Boolean>)",3,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.any(Subquery<Y>),3,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.asc(Expression<>),3,3
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.avg(Expression<N>),3,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.between(Expression<>,Expression<>,Expression<>)",4,6
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.between(Expression<>,Y,Y)",4,4
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.coalesce(),3,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.coalesce(Expression<>,Expression<>)",6,10
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.coalesce(Expression<>,Y)",6,9
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.concat(Expression<String>,Expression<String>)",4,9
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.concat(Expression<String>,String)",4,8
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.concat(String,Expression<String>)",4,8
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.conjunction(),3,4
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.count(Expression<>),3,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.countDistinct(Expression<>),4,6
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.createQuery(),7,12
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.currentDate(),4,7
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.currentTime(),4,7
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.currentTimestamp(),4,7
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.desc(Expression<>),3,3
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.diff(Expression<>,Expression<>)",3,6
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.diff(Expression<>,N)",3,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.diff(N,Expression<>)",3,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.disjunction(),3,4
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.equal(Expression<>,Expression<>)",5,9
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.equal(Expression<>,Object)",6,9
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.exists(Subquery<>),4,7
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.function(String,Class<T>,Expression<>)",8,13
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.ge(Expression<>,Expression<>)",4,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.ge(Expression<>,Number)",4,4
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.greaterThan(Expression<>,Expression<>)",4,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.greaterThan(Expression<>,Y)",4,4
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.greaterThanOrEqualTo(Expression<>,Expression<>)",5,7
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.greaterThanOrEqualTo(Expression<>,Y)",5,6
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.greatest(Expression<X>),4,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.gt(Expression<>,Expression<>)",3,4
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.gt(Expression<>,Number)",3,3
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.in(Expression<>),2,4
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.isEmpty(Expression<C>),5,8
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.isFalse(Expression<Boolean>),4,4
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.isMember(E,Expression<C>)",4,4
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.isMember(Expression<E>,Expression<C>)",4,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.isNotEmpty(Expression<C>),5,8
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.isNotMember(E,Expression<C>)",3,3
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.isNotMember(Expression<E>,Expression<C>)",3,4
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.isTrue(Expression<Boolean>),7,20
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.keys(M),9,15
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.le(Expression<>,Expression<>)",4,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.le(Expression<>,Number)",4,4
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.least(Expression<X>),4,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.length(Expression<String>),5,7
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.lessThan(Expression<>,Expression<>)",4,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.lessThan(Expression<>,Y)",4,4
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.lessThanOrEqualTo(Expression<>,Expression<>)",5,7
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.lessThanOrEqualTo(Expression<>,Y)",5,6
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.like(Expression<String>,Expression<String>)",5,8
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.like(Expression<String>,String)",5,7
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.like(Expression<String>,Expression<String>,Expression<Character>)",7,12
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.like(Expression<String>,Expression<String>,char)",6,10
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.like(Expression<String>,String,Expression<Character>)",7,11
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.like(Expression<String>,String,char)",6,9
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.literal(T),8,16
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.locate(Expression<String>,Expression<String>)",6,11
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.locate(Expression<String>,String)",6,10
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.locate(Expression<String>,Expression<String>,Expression<Integer>)",6,13
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.locate(Expression<String>,String,int)",6,10
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.lower(Expression<String>),4,7
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.lt(Expression<>,Expression<>)",3,4
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.lt(Expression<>,Number)",3,3
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.max(Expression<N>),3,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.min(Expression<N>),3,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.mod(Expression<Integer>,Expression<Integer>)",4,9
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.mod(Expression<Integer>,Integer)",4,8
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.mod(Integer,Expression<Integer>)",4,8
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.neg(Expression<N>),4,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.not(Expression<Boolean>),3,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.notEqual(Expression<>,Expression<>)",4,6
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.notEqual(Expression<>,Object)",5,6
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.notLike(Expression<String>,Expression<String>)",4,7
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.notLike(Expression<String>,String)",4,6
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.notLike(Expression<String>,Expression<String>,Expression<Character>)",6,11
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.notLike(Expression<String>,Expression<String>,char)",5,9
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.notLike(Expression<String>,String,Expression<Character>)",6,10
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.notLike(Expression<String>,String,char)",5,8
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.nullif(Expression<Y>,Expression<>)",3,6
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.nullif(Expression<Y>,Y)",3,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.or(Predicate),3,6
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.or(Expression<Boolean>,Expression<Boolean>)",3,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.parameter(Class<T>),20,39
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.parameter(Class<T>,String)",6,11
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.prod(Expression<>,Expression<>)",4,6
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.prod(Expression<>,N)",4,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.prod(N,Expression<>)",4,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.quot(Expression<>,Expression<>)",4,6
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.quot(Expression<>,Number)",4,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.quot(Number,Expression<>)",4,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.construct(Class<Y>,Selection<>)",15,27
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.selectCase(),3,3
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.selectCase(Expression<>),4,7
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.size(C),5,8
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.size(Expression<C>),5,9
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.some(Subquery<Y>),4,6
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.sqrt(Expression<>),3,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.substring(Expression<String>,Expression<Integer>)",5,9
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.substring(Expression<String>,int)",4,7
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.substring(Expression<String>,Expression<Integer>,Expression<Integer>)",6,13
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.substring(Expression<String>,int,int)",5,9
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.sum(Expression<N>),3,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.sum(Expression<>,Expression<>)",3,6
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.sum(Expression<>,N)",3,5
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.sum(N,Expression<>)",3,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.sumAsLong(Expression<Integer>),3,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.sumAsDouble(Expression<Float>),2,4
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.toBigDecimal(Expression<>),4,8
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.toBigInteger(Expression<>),4,8
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.toDouble(Expression<>),3,4
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.toFloat(Expression<>),3,4
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.toInteger(Expression<>),4,8
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.toLong(Expression<>),3,4
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.toString(Expression<Character>),5,11
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.trim(Expression<String>),4,7
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.trim(Trimspec,Expression<String>)",5,8
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.trim(Expression<Character>,Expression<String>)",5,9
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.trim(char,Expression<String>)",4,7
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.trim(Trimspec,Expression<Character>,Expression<String>)",6,10
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.trim(Trimspec,char,Expression<String>)",5,8
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.upper(Expression<String>),4,7
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.values(M),9,14
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.array(Selection<>),6,12
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.isNotNull(Expression<>),4,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.isNull(Expression<>),4,5
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.nullLiteral(Class<T>),4,4
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.tuple(Selection<>),13,32
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.qbe(From<T>,T,ComparisonStyle,Attribute<>)",51,98
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.qbe(From<T>,T,ComparisonStyle)",5,9
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.qbe(From<T>,T,Attribute<>)",6,10
"org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.qbe(From<T>,T)",4,7
org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl.qbeStyle(),7,12
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.map(boolean),16,27
"org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",28,48
"org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.customInsert(OpenJPAStateManager,JDBCStore)",14,18
"org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",63,120
"org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.customUpdate(OpenJPAStateManager,JDBCStore,Table,boolean)",61,128
"org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.afterLoad(OpenJPAStateManager,JDBCStore)",26,54
"org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.checkVersion(OpenJPAStateManager,JDBCStore,boolean)",10,17
"org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.compareVersion(Object,Object)",7,15
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.CustomUpdate(Table),4,6
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.CustomUpdate(Column[]),6,8
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.getSQL(DBDictionary),26,49
"org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.newInstance(Column[],int)",8,9
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.hasAutoAssignConstraints(),3,3
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.getInserts(),4,4
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.getUpdates(),4,4
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.getDeletes(),4,4
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.getSecondaryUpdates(),5,5
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.getSecondaryDeletes(),5,5
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.getAllRowUpdates(),5,5
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.getAllRowDeletes(),5,5
"org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.getRow(Table,int,OpenJPAStateManager,boolean)",10,15
"org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.getSecondaryRow(Table,int)",6,8
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.flushSecondaryRow(Row),3,5
"org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.getAllRows(Table,int)",6,7
org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.flushAllRows(Row),3,4
"org.apache.openjpa.jdbc.meta.strats.StateComparisonVersionStrategy.CustomUpdate.setObject(Column,Object)",8,10
org.apache.openjpa.jdbc.sql.MergedResult.MergedResult(Result[]),6,8
"org.apache.openjpa.jdbc.sql.MergedResult.MergedResult(Result[],ResultComparator)",12,24
org.apache.openjpa.jdbc.sql.MergedResult.getEager(FieldMapping),7,9
"org.apache.openjpa.jdbc.sql.MergedResult.putEager(FieldMapping,Object)",7,11
org.apache.openjpa.jdbc.sql.MergedResult.newJoins(),3,5
org.apache.openjpa.jdbc.sql.MergedResult.close(),3,5
org.apache.openjpa.jdbc.sql.MergedResult.setLocking(boolean),4,8
org.apache.openjpa.jdbc.sql.MergedResult.isLocking(),3,4
org.apache.openjpa.jdbc.sql.MergedResult.supportsRandomAccess(),5,5
org.apache.openjpa.jdbc.sql.MergedResult.absolute(int),5,6
org.apache.openjpa.jdbc.sql.MergedResult.next(),22,53
org.apache.openjpa.jdbc.sql.MergedResult.pushBack(),4,4
org.apache.openjpa.jdbc.sql.MergedResult.size(),5,10
org.apache.openjpa.jdbc.sql.MergedResult.contains(Object),7,9
org.apache.openjpa.jdbc.sql.MergedResult.containsAll(Object[]),7,9
"org.apache.openjpa.jdbc.sql.MergedResult.contains(Column,Joins)",8,12
"org.apache.openjpa.jdbc.sql.MergedResult.containsAll(Column[],Joins)",8,12
org.apache.openjpa.jdbc.sql.MergedResult.getBaseMapping(),4,7
org.apache.openjpa.jdbc.sql.MergedResult.setBaseMapping(ClassMapping),5,11
org.apache.openjpa.jdbc.sql.MergedResult.getMappedByFieldMapping(),5,10
org.apache.openjpa.jdbc.sql.MergedResult.setMappedByFieldMapping(FieldMapping),6,16
org.apache.openjpa.jdbc.sql.MergedResult.getMappedByValue(),5,7
org.apache.openjpa.jdbc.sql.MergedResult.setMappedByValue(Object),6,13
org.apache.openjpa.jdbc.sql.MergedResult.indexOf(),3,4
"org.apache.openjpa.jdbc.sql.MergedResult.load(ClassMapping,JDBCStore,JDBCFetchConfiguration)",11,19
"org.apache.openjpa.jdbc.sql.MergedResult.load(ClassMapping,JDBCStore,JDBCFetchConfiguration,Joins)",12,22
org.apache.openjpa.jdbc.sql.MergedResult.getArray(Object),7,10
org.apache.openjpa.jdbc.sql.MergedResult.getAsciiStream(Object),9,13
org.apache.openjpa.jdbc.sql.MergedResult.getBigDecimal(Object),7,10
org.apache.openjpa.jdbc.sql.MergedResult.getBigInteger(Object),7,10
org.apache.openjpa.jdbc.sql.MergedResult.getBinaryStream(Object),9,13
"org.apache.openjpa.jdbc.sql.MergedResult.getLOBStream(JDBCStore,Object)",11,17
org.apache.openjpa.jdbc.sql.MergedResult.getBlob(Object),7,10
org.apache.openjpa.jdbc.sql.MergedResult.getBoolean(Object),6,7
org.apache.openjpa.jdbc.sql.MergedResult.getByte(Object),6,7
org.apache.openjpa.jdbc.sql.MergedResult.getBytes(Object),7,9
org.apache.openjpa.jdbc.sql.MergedResult.getCalendar(Object),7,10
org.apache.openjpa.jdbc.sql.MergedResult.getChar(Object),6,7
org.apache.openjpa.jdbc.sql.MergedResult.getCharacterStream(Object),9,12
org.apache.openjpa.jdbc.sql.MergedResult.getClob(Object),7,10
org.apache.openjpa.jdbc.sql.MergedResult.getDate(Object),7,10
"org.apache.openjpa.jdbc.sql.MergedResult.getDate(Object,Calendar)",10,15
org.apache.openjpa.jdbc.sql.MergedResult.getDouble(Object),6,7
org.apache.openjpa.jdbc.sql.MergedResult.getFloat(Object),6,7
org.apache.openjpa.jdbc.sql.MergedResult.getInt(Object),6,7
org.apache.openjpa.jdbc.sql.MergedResult.getLocale(Object),7,10
org.apache.openjpa.jdbc.sql.MergedResult.getLong(Object),6,7
org.apache.openjpa.jdbc.sql.MergedResult.getNumber(Object),6,7
"org.apache.openjpa.jdbc.sql.MergedResult.getObject(Object,int,Object)",9,17
"org.apache.openjpa.jdbc.sql.MergedResult.getSQLObject(Object,Map)",7,15
"org.apache.openjpa.jdbc.sql.MergedResult.getRef(Object,Map)",8,13
org.apache.openjpa.jdbc.sql.MergedResult.getShort(Object),6,7
org.apache.openjpa.jdbc.sql.MergedResult.getString(Object),7,10
"org.apache.openjpa.jdbc.sql.MergedResult.getTime(Object,Calendar)",9,13
"org.apache.openjpa.jdbc.sql.MergedResult.getTimestamp(Object,Calendar)",9,13
"org.apache.openjpa.jdbc.sql.MergedResult.getArray(Column,Joins)",8,13
"org.apache.openjpa.jdbc.sql.MergedResult.getAsciiStream(Column,Joins)",10,16
"org.apache.openjpa.jdbc.sql.MergedResult.getBigDecimal(Column,Joins)",8,13
"org.apache.openjpa.jdbc.sql.MergedResult.getBigInteger(Column,Joins)",8,13
"org.apache.openjpa.jdbc.sql.MergedResult.getBinaryStream(Column,Joins)",10,16
"org.apache.openjpa.jdbc.sql.MergedResult.getBlob(Column,Joins)",8,13
"org.apache.openjpa.jdbc.sql.MergedResult.getBoolean(Column,Joins)",7,10
"org.apache.openjpa.jdbc.sql.MergedResult.getByte(Column,Joins)",7,10
"org.apache.openjpa.jdbc.sql.MergedResult.getBytes(Column,Joins)",8,12
"org.apache.openjpa.jdbc.sql.MergedResult.getCalendar(Column,Joins)",8,13
"org.apache.openjpa.jdbc.sql.MergedResult.getChar(Column,Joins)",7,10
"org.apache.openjpa.jdbc.sql.MergedResult.getCharacterStream(Column,Joins)",10,15
"org.apache.openjpa.jdbc.sql.MergedResult.getClob(Column,Joins)",8,13
"org.apache.openjpa.jdbc.sql.MergedResult.getDate(Column,Joins)",8,13
"org.apache.openjpa.jdbc.sql.MergedResult.getDate(Column,Calendar,Joins)",11,18
"org.apache.openjpa.jdbc.sql.MergedResult.getDouble(Column,Joins)",7,10
"org.apache.openjpa.jdbc.sql.MergedResult.getFloat(Column,Joins)",7,10
"org.apache.openjpa.jdbc.sql.MergedResult.getInt(Column,Joins)",7,10
"org.apache.openjpa.jdbc.sql.MergedResult.getLocale(Column,Joins)",8,13
"org.apache.openjpa.jdbc.sql.MergedResult.getLong(Column,Joins)",7,10
"org.apache.openjpa.jdbc.sql.MergedResult.getNumber(Column,Joins)",7,10
"org.apache.openjpa.jdbc.sql.MergedResult.getObject(Column,Object,Joins)",9,16
"org.apache.openjpa.jdbc.sql.MergedResult.getSQLObject(Column,Map,Joins)",9,18
"org.apache.openjpa.jdbc.sql.MergedResult.getRef(Column,Map,Joins)",9,16
"org.apache.openjpa.jdbc.sql.MergedResult.getShort(Column,Joins)",7,10
"org.apache.openjpa.jdbc.sql.MergedResult.getString(Column,Joins)",8,13
"org.apache.openjpa.jdbc.sql.MergedResult.getTime(Column,Calendar,Joins)",10,16
"org.apache.openjpa.jdbc.sql.MergedResult.getTimestamp(Column,Calendar,Joins)",10,16
org.apache.openjpa.jdbc.sql.MergedResult.wasNull(),4,4
org.apache.openjpa.jdbc.sql.MergedResult.startDataRequest(Object),7,12
org.apache.openjpa.jdbc.sql.MergedResult.endDataRequest(),4,7
"org.apache.openjpa.jdbc.sql.MergedResult.ResultComparator.getOrderingValue(Result,int)",7,9
org.apache.openjpa.instrumentation.BrokerLevelInstrument.getName(),2,3
org.apache.openjpa.instrumentation.BrokerLevelInstrument.initialize(),3,3
org.apache.openjpa.instrumentation.BrokerLevelInstrument.start(),3,3
org.apache.openjpa.instrumentation.BrokerLevelInstrument.stop(),3,3
org.apache.openjpa.instrumentation.BrokerLevelInstrument.getLevel(),3,6
org.apache.openjpa.instrumentation.BrokerLevelInstrument.setInitialized(boolean),2,5
org.apache.openjpa.instrumentation.BrokerLevelInstrument.isInitialized(),1,2
org.apache.openjpa.jdbc.meta.strats.LobEntity.setStream(Object),3,3
org.apache.openjpa.jdbc.meta.strats.LobEntity.setId(int),1,1
org.apache.openjpa.jdbc.meta.strats.LobEntity.getStream(),2,2
org.apache.openjpa.jdbc.meta.strats.LobEntity.getId(),0,0
org.apache.openjpa.persistence.query.AverageExpression.AverageExpression(ExpressionImpl),7,8
org.apache.openjpa.kernel.TestUnenhancedFieldAccessWithRelationInstanceBrokerSerialization.getSecondaryType(),5,5
org.apache.openjpa.kernel.TestUnenhancedFieldAccessWithRelationInstanceBrokerSerialization.getManagedType(),6,10
org.apache.openjpa.kernel.TestUnenhancedFieldAccessWithRelationInstanceBrokerSerialization.newManagedInstance(),11,33
org.apache.openjpa.kernel.TestUnenhancedFieldAccessWithRelationInstanceBrokerSerialization.modifyInstance(UnenhancedFieldAccessSubclass),10,11
org.apache.openjpa.kernel.TestUnenhancedFieldAccessWithRelationInstanceBrokerSerialization.getModifiedValue(UnenhancedFieldAccessSubclass),9,10
org.apache.openjpa.kernel.TestUnenhancedFieldAccessWithRelationInstanceBrokerSerialization.graphSize(),2,2
org.apache.openjpa.persistence.query.KeyExpression.KeyExpression(AbstractDomainObject),7,9
org.apache.openjpa.jdbc.meta.strats.NanoPrecisionTimestampVersionStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.NanoPrecisionTimestampVersionStrategy.nextVersion(Object),6,9
org.apache.openjpa.datacache.ConcurrentQueryCache.getCacheMap(),28,43
org.apache.openjpa.datacache.ConcurrentQueryCache.getCacheSize(),8,11
org.apache.openjpa.datacache.ConcurrentQueryCache.setCacheSize(int),16,25
org.apache.openjpa.datacache.ConcurrentQueryCache.getSoftReferenceSize(),11,16
org.apache.openjpa.datacache.ConcurrentQueryCache.setSoftReferenceSize(int),18,26
org.apache.openjpa.datacache.ConcurrentQueryCache.initialize(DataCacheManager),21,41
org.apache.openjpa.datacache.ConcurrentQueryCache.writeLock(),6,8
org.apache.openjpa.datacache.ConcurrentQueryCache.writeUnlock(),6,8
org.apache.openjpa.datacache.ConcurrentQueryCache.newCacheMap(),5,14
org.apache.openjpa.datacache.ConcurrentQueryCache.getInternal(QueryKey),5,8
"org.apache.openjpa.datacache.ConcurrentQueryCache.putInternal(QueryKey,QueryResult)",5,12
org.apache.openjpa.datacache.ConcurrentQueryCache.removeInternal(QueryKey),6,10
org.apache.openjpa.datacache.ConcurrentQueryCache.clearInternal(),2,2
org.apache.openjpa.datacache.ConcurrentQueryCache.pinInternal(QueryKey),5,6
org.apache.openjpa.datacache.ConcurrentQueryCache.unpinInternal(QueryKey),5,6
org.apache.openjpa.datacache.ConcurrentQueryCache.keySet(),4,6
org.apache.openjpa.datacache.ConcurrentQueryCache.getEvictPolicy(),6,11
org.apache.openjpa.datacache.ConcurrentQueryCache.setLru(boolean),2,3
org.apache.openjpa.datacache.ConcurrentQueryCache.getLru(),1,2
org.apache.openjpa.persistence.access.xml.XMLAbstractMappedSuperField.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLAbstractMappedSuperField.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLAbstractMappedSuperField.setName(String),3,6
org.apache.openjpa.persistence.access.xml.XMLAbstractMappedSuperField.getName(),2,3
org.apache.openjpa.persistence.access.xml.XMLAbstractMappedSuperField.getCreateDate(),2,3
org.apache.openjpa.persistence.access.xml.XMLAbstractMappedSuperField.setCreateDate(Date),3,5
org.apache.openjpa.persistence.access.xml.XMLAbstractMappedSuperField.equals(Object),7,17
org.apache.openjpa.jdbc.meta.strats.ValueMapDiscriminatorStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.ValueMapDiscriminatorStrategy.getJavaType(),26,71
org.apache.openjpa.jdbc.meta.strats.ValueMapDiscriminatorStrategy.getDiscriminatorValue(ClassMapping),6,13
"org.apache.openjpa.jdbc.meta.strats.ValueMapDiscriminatorStrategy.getClass(Object,JDBCStore)",31,67
"org.apache.openjpa.jdbc.meta.strats.ValueMapDiscriminatorStrategy.mapDiscriminatorValue(ClassMapping,Map)",22,48
org.apache.openjpa.jdbc.meta.strats.ValueMapDiscriminatorStrategy.map(boolean),22,39
org.apache.openjpa.jdbc.meta.strats.BlobValueHandler.getInstance(),5,7
"org.apache.openjpa.jdbc.meta.strats.BlobValueHandler.map(ValueMapping,String,ColumnIO,boolean)",14,27
"org.apache.openjpa.jdbc.meta.strats.BlobValueHandler.map(ValueMapping,DBIdentifier,ColumnIO,boolean)",14,27
org.apache.openjpa.jdbc.meta.strats.NumberVersionStrategy.setInitialValue(int),6,12
org.apache.openjpa.jdbc.meta.strats.NumberVersionStrategy.getInitialValue(),5,9
org.apache.openjpa.jdbc.meta.strats.NumberVersionStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.NumberVersionStrategy.getJavaType(),10,24
org.apache.openjpa.jdbc.meta.strats.NumberVersionStrategy.nextVersion(Object),4,8
org.apache.openjpa.jdbc.meta.strats.NumberVersionStrategy.getBulkUpdateValues(),12,27
org.apache.openjpa.jdbc.sql.JDataStoreDictionary.JDataStoreDictionary(),62,104
"org.apache.openjpa.jdbc.sql.JDataStoreDictionary.substring(SQLBuffer,FilterValue,FilterValue,FilterValue)",10,45
"org.apache.openjpa.jdbc.sql.JDataStoreDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",11,37
"org.apache.openjpa.jdbc.sql.JDataStoreDictionary.newStoreException(String,SQLException[],Object)",19,37
org.apache.openjpa.jdbc.sql.EmpressDictionary.EmpressDictionary(),62,104
"org.apache.openjpa.jdbc.sql.EmpressDictionary.isSystemIndex(String,Table)",8,10
"org.apache.openjpa.jdbc.sql.EmpressDictionary.toSelect(SQLBuffer,JDBCFetchConfiguration,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,boolean,long,long)",23,82
org.apache.openjpa.jdbc.sql.EmpressDictionary.getDropColumnSQL(Column),13,26
"org.apache.openjpa.jdbc.sql.EmpressDictionary.setFloat(PreparedStatement,int,float,Column)",25,45
"org.apache.openjpa.jdbc.sql.EmpressDictionary.setDouble(PreparedStatement,int,double,Column)",25,45
org.apache.openjpa.jdbc.schema.PrimaryKey.PrimaryKey(),3,3
"org.apache.openjpa.jdbc.schema.PrimaryKey.PrimaryKey(String,Table)",8,20
"org.apache.openjpa.jdbc.schema.PrimaryKey.PrimaryKey(DBIdentifier,Table)",5,8
org.apache.openjpa.jdbc.schema.PrimaryKey.isLogical(),1,2
org.apache.openjpa.jdbc.schema.PrimaryKey.setLogical(boolean),2,5
org.apache.openjpa.jdbc.schema.PrimaryKey.remove(),14,37
org.apache.openjpa.jdbc.schema.PrimaryKey.addColumn(Column),7,14
org.apache.openjpa.jdbc.schema.PrimaryKey.equalsPrimaryKey(PrimaryKey),9,14
org.apache.openjpa.jdbc.meta.EntityBool.isDummy(),1,2
org.apache.openjpa.jdbc.meta.EntityBool.setDummy(boolean),3,5
org.apache.openjpa.jdbc.meta.EntityBool.getId(),0,0
org.apache.openjpa.jdbc.meta.EntityBool.setId(int),1,1
org.apache.openjpa.kernel.TestEntityManagerFactoryPool.setUp(),9,12
org.apache.openjpa.kernel.TestEntityManagerFactoryPool.testBrokerFactoryPoolHit(),18,33
org.apache.openjpa.kernel.TestEntityManagerFactoryPool.testBrokerFactoryPoolMiss(),15,30
org.apache.openjpa.jdbc.sql.SQLFactory.newSelect(),2,4
org.apache.openjpa.jdbc.sql.SQLFactory.newUnion(int),4,9
org.apache.openjpa.jdbc.sql.SQLFactory.newUnion(Select[]),5,9
org.apache.openjpa.persistence.Embed.Embed(),1,1
org.apache.openjpa.persistence.Embed.Embed(String),3,5
org.apache.openjpa.persistence.Embed.getSymbol(),2,3
org.apache.openjpa.persistence.Embed.setSymbol(String),3,6
org.apache.openjpa.persistence.access.PropEmbedEntity.setId(int),1,1
org.apache.openjpa.persistence.access.PropEmbedEntity.getId(),0,0
org.apache.openjpa.persistence.access.PropEmbedEntity.setName(String),3,6
org.apache.openjpa.persistence.access.PropEmbedEntity.getName(),2,3
org.apache.openjpa.persistence.access.PropEmbedEntity.getEmbedProp(),5,6
org.apache.openjpa.persistence.access.PropEmbedEntity.setEmbedProp(EmbedFieldAccess),6,7
org.apache.openjpa.persistence.access.PropEmbedEntity.equals(Object),7,22
org.apache.openjpa.kernel.PCData.getId(),2,2
org.apache.openjpa.kernel.PCData.getType(),2,3
org.apache.openjpa.kernel.PCData.getImplData(),7,9
org.apache.openjpa.kernel.PCData.setImplData(Object),9,11
org.apache.openjpa.kernel.PCData.getVersion(),6,8
org.apache.openjpa.kernel.PCData.setVersion(Object),7,10
"org.apache.openjpa.kernel.PCData.load(OpenJPAStateManager,FetchConfiguration,Object)",18,29
"org.apache.openjpa.kernel.PCData.load(OpenJPAStateManager,BitSet,FetchConfiguration,Object)",22,39
org.apache.openjpa.kernel.PCData.store(OpenJPAStateManager),5,7
"org.apache.openjpa.kernel.PCData.store(OpenJPAStateManager,BitSet)",6,9
org.apache.openjpa.kernel.PCData.getData(int),5,6
org.apache.openjpa.kernel.PCData.isLoaded(int),5,5
org.apache.openjpa.kernel.PCData.getCache(),5,6
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.setUp(),6,6
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.testDummy(),2,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.xtestAddRetrieve(),32,63
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.flush(RowManager,PreparedStatementManager,Collection)",13,21
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.newPreparedStatementManager(JDBCStore,Connection)",8,17
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.newRowManager(),2,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.orderDirty(),1,1
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.populateRowManager(OpenJPAStateManager,RowManager,JDBCStore,Collection,Collection)",19,36
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.populateRowManager(OpenJPAStateManager,RowManager,JDBCStore,Collection,Collection).$1.customDelete(OpenJPAStateManager,JDBCStore)",8,9
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.populateRowManager(OpenJPAStateManager,RowManager,JDBCStore,Collection,Collection).$1.customInsert(OpenJPAStateManager,JDBCStore)",10,16
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.populateRowManager(OpenJPAStateManager,RowManager,JDBCStore,Collection,Collection).$1.customUpdate(OpenJPAStateManager,JDBCStore)",8,9
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.populateRowManager(OpenJPAStateManager,RowManager,JDBCStore,Collection,Collection).$1.delete(OpenJPAStateManager,JDBCStore,RowManager)",8,10
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.populateRowManager(OpenJPAStateManager,RowManager,JDBCStore,Collection,Collection).$1.getAlias()",2,2
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.populateRowManager(OpenJPAStateManager,RowManager,JDBCStore,Collection,Collection).$1.initialize()",1,1
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.populateRowManager(OpenJPAStateManager,RowManager,JDBCStore,Collection,Collection).$1.insert(OpenJPAStateManager,JDBCStore,RowManager)",8,10
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.populateRowManager(OpenJPAStateManager,RowManager,JDBCStore,Collection,Collection).$1.isCustomDelete(OpenJPAStateManager,JDBCStore)",6,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.populateRowManager(OpenJPAStateManager,RowManager,JDBCStore,Collection,Collection).$1.isCustomInsert(OpenJPAStateManager,JDBCStore)",6,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.populateRowManager(OpenJPAStateManager,RowManager,JDBCStore,Collection,Collection).$1.isCustomUpdate(OpenJPAStateManager,JDBCStore)",6,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.populateRowManager(OpenJPAStateManager,RowManager,JDBCStore,Collection,Collection).$1.map(boolean)",2,2
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestUpdateManager.populateRowManager(OpenJPAStateManager,RowManager,JDBCStore,Collection,Collection).$1.update(OpenJPAStateManager,JDBCStore,RowManager)",8,10
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.assignObjectId(boolean),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.beforeRefresh(boolean),1,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.dirty(int),2,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetch(int),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchBoolean(int),2,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchByte(int),2,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchChar(int),2,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchDouble(int),2,2
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchField(int,boolean)",4,5
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchFloat(int),2,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchInitialField(int),4,5
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchInt(int),2,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchLong(int),2,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchObject(int),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchShort(int),2,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchString(int),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getContext(),2,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getDirty(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getFlushed(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getId(),1,1
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getImplData(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getImplData(int),4,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getIntermediate(int),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getLoaded(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getLock(),2,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getManagedInstance(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getMetaData(),2,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getObjectId(),1,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getOwner(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getOwnerIndex(),2,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getPCState(),0,0
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getPersistenceCapable(),2,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getUnloaded(FetchConfiguration),5,6
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getVersion(),2,2
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.initialize(Class,PCState)",2,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isDefaultValue(int),2,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isEmbedded(),1,1
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isFlushed(),1,1
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isFlushedDirty(),2,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isImplDataCacheable(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isImplDataCacheable(int),4,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isProvisional(),1,1
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isVersionCheckRequired(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isVersionUpdateRequired(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.load(FetchConfiguration),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.newFieldProxy(int),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.newProxy(int),3,3
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.removed(int,Object,boolean)",4,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.setImplData(Object,boolean)",5,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.setImplData(int,Object)",5,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.setIntermediate(int,Object)",5,5
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.setLock(Object),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.setNextVersion(Object),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.setObjectId(Object),3,4
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.setRemote(int,Object)",5,5
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.setVersion(Object),3,4
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.store(int,Object)",4,4
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeBoolean(int,boolean)",4,4
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeByte(int,byte)",4,4
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeChar(int,char)",4,4
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeDouble(int,double)",4,4
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeField(int,Object)",4,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeFloat(int,float)",4,4
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeInt(int,int)",4,4
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeLong(int,long)",4,4
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeObject(int,Object)",5,6
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeShort(int,short)",4,4
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeString(int,String)",5,6
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.accessingField(int),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.dirty(String),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchObjectId(),2,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getGenericContext(),3,3
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.getPCPrimaryKey(Object,int)",5,6
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isDeleted(),1,1
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isDetached(),1,1
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isDirty(),1,1
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isNew(),0,0
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isPersistent(),1,1
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isTransactional(),1,1
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.providedBooleanField(PersistenceCapable,int,boolean)",6,6
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.providedByteField(PersistenceCapable,int,byte)",6,6
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.providedCharField(PersistenceCapable,int,char)",6,6
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.providedDoubleField(PersistenceCapable,int,double)",6,6
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.providedFloatField(PersistenceCapable,int,float)",6,6
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.providedIntField(PersistenceCapable,int,int)",6,6
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.providedLongField(PersistenceCapable,int,long)",6,6
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.providedObjectField(PersistenceCapable,int,Object)",7,8
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.providedShortField(PersistenceCapable,int,short)",6,6
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.providedStringField(PersistenceCapable,int,String)",7,8
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.proxyDetachedDeserialized(int),4,4
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.replaceBooleanField(PersistenceCapable,int)",5,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.replaceByteField(PersistenceCapable,int)",5,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.replaceCharField(PersistenceCapable,int)",5,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.replaceDoubleField(PersistenceCapable,int)",5,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.replaceFloatField(PersistenceCapable,int)",5,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.replaceIntField(PersistenceCapable,int)",5,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.replaceLongField(PersistenceCapable,int)",5,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.replaceObjectField(PersistenceCapable,int)",6,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.replaceShortField(PersistenceCapable,int)",5,5
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.replaceStateManager(StateManager),2,4
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.replaceStringField(PersistenceCapable,int)",6,7
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.serializing(),1,1
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.settingBooleanField(PersistenceCapable,int,boolean,boolean,int)",7,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.settingByteField(PersistenceCapable,int,byte,byte,int)",7,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.settingCharField(PersistenceCapable,int,char,char,int)",7,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.settingDoubleField(PersistenceCapable,int,double,double,int)",7,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.settingFloatField(PersistenceCapable,int,float,float,int)",7,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.settingIntField(PersistenceCapable,int,int,int,int)",7,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.settingLongField(PersistenceCapable,int,long,long,int)",7,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.settingObjectField(PersistenceCapable,int,Object,Object,int)",8,10
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.settingShortField(PersistenceCapable,int,short,short,int)",7,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.settingStringField(PersistenceCapable,int,String,String,int)",8,10
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.writeDetached(ObjectOutput),5,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeBooleanField(int,boolean)",4,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeByteField(int,byte)",4,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeCharField(int,char)",4,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeDoubleField(int,double)",4,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeFloatField(int,float)",4,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeIntField(int,int)",4,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeLongField(int,long)",4,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeObjectField(int,Object)",5,7
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeShortField(int,short)",4,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.storeStringField(int,String)",5,7
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchBooleanField(int),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchByteField(int),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchCharField(int),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchDoubleField(int),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchFloatField(int),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchIntField(int),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchLongField(int),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchObjectField(int),4,6
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchShortField(int),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.fetchStringField(int),4,6
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.isDelayed(int),2,2
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.setDelayed(int,boolean)",4,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestOpenJPAStateManager.loadDelayedField(int),3,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.clearWarnings(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.close(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.commit(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.createStatement(),4,5
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.createStatement(int,int)",8,11
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.createStatement(int,int,int)",9,14
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.getAutoCommit(),4,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.getCatalog(),4,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.getHoldability(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.getMetaData(),5,7
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.getTransactionIsolation(),4,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.getTypeMap(),5,6
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.getWarnings(),4,5
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.isClosed(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.isReadOnly(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.nativeSQL(String),3,6
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.prepareCall(String),7,8
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.prepareCall(String,int,int)",11,14
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.prepareCall(String,int,int,int)",12,17
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.prepareStatement(String),6,8
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.prepareStatement(String,int)",9,11
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.prepareStatement(String,int[])",8,10
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.prepareStatement(String,String[])",8,11
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.prepareStatement(String,int,int)",10,14
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.prepareStatement(String,int,int,int)",11,17
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.releaseSavepoint(Savepoint),4,6
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.rollback(),3,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.rollback(Savepoint),4,5
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.setAutoCommit(boolean),5,7
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.setCatalog(String),5,6
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.setHoldability(int),4,5
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.setReadOnly(boolean),4,5
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.setSavepoint(),4,5
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.setSavepoint(String),6,7
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.setTransactionIsolation(int),6,6
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestConnection.setTypeMap(Map<Class<String>>),6,8
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestJDBCStore.find(Object,ValueMapping,JDBCFetchConfiguration)",7,9
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestJDBCStore.getConfiguration(),2,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestJDBCStore.getConnection(),5,9
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestJDBCStore.getNewConnection(),1,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestJDBCStore.getContext(),2,3
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestJDBCStore.getDBDictionary(),1,2
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestJDBCStore.getFetchConfiguration(),3,5
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestJDBCStore.getLockManager(),3,5
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestJDBCStore.getSQLFactory(),2,4
org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestJDBCStore.loadSubclasses(ClassMapping),3,4
"org.apache.openjpa.jdbc.kernel.TestUpdateManagerFlushException.TestJDBCStore.newDataStoreId(long,ClassMapping,boolean)",4,5
"org.apache.openjpa.enhance.PCSubclassValidator.PCSubclassValidator(ClassMetaData,BCClass,Log,boolean)",9,20
org.apache.openjpa.enhance.PCSubclassValidator.assertCanSubclass(),45,120
org.apache.openjpa.enhance.PCSubclassValidator.checkPropertiesAreInterceptable(),29,82
org.apache.openjpa.enhance.PCSubclassValidator.getBackingMember(FieldMetaData),11,22
org.apache.openjpa.enhance.PCSubclassValidator.setterForField(FieldMetaData),15,23
"org.apache.openjpa.enhance.PCSubclassValidator.checkGetterIsSubclassable(Method,FieldMetaData)",21,47
"org.apache.openjpa.enhance.PCSubclassValidator.checkSetterIsSubclassable(Method,FieldMetaData)",22,46
org.apache.openjpa.enhance.PCSubclassValidator.getBCMethod(Method),9,15
"org.apache.openjpa.enhance.PCSubclassValidator.checkMethodIsSubclassable(Method,FieldMetaData)",26,74
"org.apache.openjpa.enhance.PCSubclassValidator.addError(Message,ClassMetaData)",16,23
"org.apache.openjpa.enhance.PCSubclassValidator.addError(Message,FieldMetaData)",16,25
"org.apache.openjpa.enhance.PCSubclassValidator.addContractViolation(Message,FieldMetaData)",23,47
org.apache.openjpa.kernel.VersionLockManager.getLockLevel(OpenJPAStateManager),16,27
"org.apache.openjpa.kernel.VersionLockManager.setLockLevel(OpenJPAStateManager,int)",9,16
org.apache.openjpa.kernel.VersionLockManager.release(OpenJPAStateManager),8,9
"org.apache.openjpa.kernel.VersionLockManager.lock(OpenJPAStateManager,int,int,Object)",22,33
"org.apache.openjpa.kernel.VersionLockManager.refreshLock(OpenJPAStateManager,int,int,Object)",10,15
"org.apache.openjpa.kernel.VersionLockManager.commonLock(OpenJPAStateManager,int,int,Object,boolean)",19,40
"org.apache.openjpa.kernel.VersionLockManager.lockInternal(OpenJPAStateManager,int,int,Object,boolean)",28,45
"org.apache.openjpa.kernel.VersionLockManager.optimisticLockInternal(OpenJPAStateManager,int,int,Object,boolean)",25,51
org.apache.openjpa.kernel.VersionLockManager.setVersionCheckOnReadLock(boolean),12,29
org.apache.openjpa.kernel.VersionLockManager.getVersionCheckOnReadLock(),11,20
org.apache.openjpa.kernel.VersionLockManager.setVersionUpdateOnWriteLock(boolean),10,26
org.apache.openjpa.kernel.VersionLockManager.getVersionUpdateOnWriteLock(),9,17
org.apache.openjpa.conf.Compatibility.getStrictIdentityValues(),11,15
org.apache.openjpa.conf.Compatibility.setStrictIdentityValues(boolean),13,20
org.apache.openjpa.conf.Compatibility.getAutoOff(),6,7
org.apache.openjpa.conf.Compatibility.setAutoOff(boolean),7,10
org.apache.openjpa.conf.Compatibility.getSuperclassDiscriminatorStrategyByDefault(),7,11
org.apache.openjpa.conf.Compatibility.setSuperclassDiscriminatorStrategyByDefault(boolean),8,18
org.apache.openjpa.conf.Compatibility.getQuotedNumbersInQueries(),11,15
org.apache.openjpa.conf.Compatibility.setQuotedNumbersInQueries(boolean),12,18
org.apache.openjpa.conf.Compatibility.getValidateFalseReturnsHollow(),18,28
org.apache.openjpa.conf.Compatibility.setValidateFalseReturnsHollow(boolean),19,31
org.apache.openjpa.conf.Compatibility.getValidateTrueChecksStore(),17,22
org.apache.openjpa.conf.Compatibility.setValidateTrueChecksStore(boolean),18,25
org.apache.openjpa.conf.Compatibility.getCopyObjectIds(),14,23
org.apache.openjpa.conf.Compatibility.setCopyObjectIds(boolean),15,26
org.apache.openjpa.conf.Compatibility.getCloseOnManagedCommit(),9,15
org.apache.openjpa.conf.Compatibility.setCloseOnManagedCommit(boolean),10,18
org.apache.openjpa.conf.Compatibility.setNonOptimisticVersionCheck(boolean),12,26
org.apache.openjpa.conf.Compatibility.getNonOptimisticVersionCheck(),11,19
org.apache.openjpa.conf.Compatibility.getJPQL(),8,15
org.apache.openjpa.conf.Compatibility.setJPQL(String),13,39
org.apache.openjpa.conf.Compatibility.getStoreMapCollectionInEntityAsBlob(),5,10
org.apache.openjpa.conf.Compatibility.setStoreMapCollectionInEntityAsBlob(boolean),9,23
org.apache.openjpa.conf.Compatibility.getFlushBeforeDetach(),16,23
org.apache.openjpa.conf.Compatibility.setIgnoreDetachedStateFieldForProxySerialization(boolean),23,51
org.apache.openjpa.conf.Compatibility.getIgnoreDetachedStateFieldForProxySerialization(),20,43
org.apache.openjpa.conf.Compatibility.getConvertPositionalParametersToNamed(),4,8
org.apache.openjpa.conf.Compatibility.setConvertPositionalParametersToNamed(boolean),5,9
org.apache.openjpa.conf.Compatibility.setFlushBeforeDetach(boolean),17,30
org.apache.openjpa.conf.Compatibility.getCopyOnDetach(),24,41
org.apache.openjpa.conf.Compatibility.setCopyOnDetach(boolean),19,38
org.apache.openjpa.conf.Compatibility.getCascadeWithDetach(),8,16
org.apache.openjpa.conf.Compatibility.setCascadeWithDetach(boolean),10,23
org.apache.openjpa.conf.Compatibility.getUseJPA2DefaultOrderColumnName(),6,18
org.apache.openjpa.conf.Compatibility.setUseJPA2DefaultOrderColumnName(boolean),8,26
org.apache.openjpa.conf.Compatibility.getPrivatePersistentProperties(),11,23
org.apache.openjpa.conf.Compatibility.setPrivatePersistentProperties(boolean),13,27
org.apache.openjpa.conf.Compatibility.setAbstractMappingUniDirectional(boolean),18,45
org.apache.openjpa.conf.Compatibility.isAbstractMappingUniDirectional(),17,29
org.apache.openjpa.conf.Compatibility.setNonDefaultMappingAllowed(boolean),12,25
org.apache.openjpa.conf.Compatibility.isNonDefaultMappingAllowed(),11,20
org.apache.openjpa.conf.Compatibility.getReloadOnDetach(),16,21
org.apache.openjpa.conf.Compatibility.setReloadOnDetach(boolean),17,30
org.apache.openjpa.conf.Compatibility.getCheckDatabaseForCascadePersistToDetachedEntity(),15,30
org.apache.openjpa.conf.Compatibility.setCheckDatabaseForCascadePersistToDetachedEntity(boolean),16,31
org.apache.openjpa.conf.Compatibility.getOverrideContextClassloader(),15,22
org.apache.openjpa.conf.Compatibility.setOverrideContextClassloader(boolean),16,29
org.apache.openjpa.conf.Compatibility.getParseAnnotationsForQueryMode(),22,33
org.apache.openjpa.conf.Compatibility.setParseAnnotationsForQueryMode(boolean),19,35
org.apache.openjpa.conf.Compatibility.getUseListAttributeForArrays(),19,42
org.apache.openjpa.conf.Compatibility.setUseListAttributeForArrays(boolean),20,43
org.apache.openjpa.conf.Compatibility.getMetaFactoriesAreStrict(),12,31
org.apache.openjpa.conf.Compatibility.setMetaFactoriesAreStrict(boolean),13,34
org.apache.openjpa.conf.Compatibility.getResetFlushFlagForCascadePersist(),22,49
org.apache.openjpa.conf.Compatibility.setResetFlushFlagForCascadePersist(boolean),22,50
org.apache.openjpa.conf.Compatibility.isSingletonLifecycleEventManager(),8,15
org.apache.openjpa.conf.Compatibility.setSingletonLifecycleEventManager(boolean),20,42
org.apache.openjpa.conf.Compatibility.getFilterPCRegistryClasses(),8,14
org.apache.openjpa.conf.Compatibility.setFilterPCRegistryClasses(boolean),10,17
org.apache.openjpa.conf.Compatibility.getReturnNullOnEmptyAggregateResult(),25,39
org.apache.openjpa.conf.Compatibility.setReturnNullOnAggregateResult(boolean),27,47
org.apache.openjpa.conf.Compatibility.getCacheNonDefaultFetchPlanQueries(),9,16
org.apache.openjpa.conf.Compatibility.setCacheNonDefaultFetchPlanQueries(boolean),11,19
org.apache.openjpa.jira1794.TestCompatAggregateFunctions.setUp(),8,9
org.apache.openjpa.jira1794.TestCompatAggregateFunctions.nullResultExpected(),4,6
org.apache.openjpa.event.PostPersistListener.afterPersistPerformed(LifecycleEvent),16,22
org.apache.openjpa.kernel.exps.NotExpression.NotExpression(Exp),5,9
"org.apache.openjpa.kernel.exps.NotExpression.eval(Object,Object,StoreContext,Object[])",10,16
"org.apache.openjpa.kernel.exps.NotExpression.eval(Collection,StoreContext,Object[])",10,13
org.apache.openjpa.kernel.exps.NotExpression.acceptVisit(ExpressionVisitor),7,13
"org.apache.openjpa.meta.QueryMetaData.QueryMetaData(String,boolean)",10,21
org.apache.openjpa.meta.QueryMetaData.getName(),3,5
org.apache.openjpa.meta.QueryMetaData.getDefiningType(),5,5
org.apache.openjpa.meta.QueryMetaData.setDefiningType(Class),7,8
org.apache.openjpa.meta.QueryMetaData.isReadOnly(),4,7
org.apache.openjpa.meta.QueryMetaData.setReadOnly(boolean),4,8
org.apache.openjpa.meta.QueryMetaData.getCandidateType(),4,6
org.apache.openjpa.meta.QueryMetaData.setCandidateType(Class),7,9
org.apache.openjpa.meta.QueryMetaData.getResultType(),5,6
org.apache.openjpa.meta.QueryMetaData.setResultType(Class),7,9
org.apache.openjpa.meta.QueryMetaData.getLanguage(),3,5
org.apache.openjpa.meta.QueryMetaData.setLanguage(String),4,9
org.apache.openjpa.meta.QueryMetaData.getQueryString(),3,7
org.apache.openjpa.meta.QueryMetaData.setQueryString(String),14,24
org.apache.openjpa.meta.QueryMetaData.getHintKeys(),8,17
org.apache.openjpa.meta.QueryMetaData.getHintValues(),8,12
"org.apache.openjpa.meta.QueryMetaData.addHint(String,Object)",11,27
org.apache.openjpa.meta.QueryMetaData.getResultSetMappingName(),5,9
org.apache.openjpa.meta.QueryMetaData.setResultSetMappingName(String),5,16
org.apache.openjpa.meta.QueryMetaData.setInto(Query),23,58
org.apache.openjpa.meta.QueryMetaData.setFrom(Query),14,25
org.apache.openjpa.meta.QueryMetaData.getSourceMode(),3,6
org.apache.openjpa.meta.QueryMetaData.setSourceMode(int),4,9
org.apache.openjpa.meta.QueryMetaData.toString(),2,3
org.apache.openjpa.meta.QueryMetaData.getComments(),3,6
org.apache.openjpa.meta.QueryMetaData.setComments(String[]),3,6
org.apache.openjpa.meta.QueryMetaData.getSourceFile(),2,4
org.apache.openjpa.meta.QueryMetaData.getSourceScope(),3,4
org.apache.openjpa.meta.QueryMetaData.getSourceType(),3,4
"org.apache.openjpa.meta.QueryMetaData.setSource(File,Object,int,String)",9,23
org.apache.openjpa.meta.QueryMetaData.getResourceName(),3,6
org.apache.openjpa.meta.QueryMetaData.getLineNumber(),2,3
org.apache.openjpa.meta.QueryMetaData.setLineNumber(int),3,8
org.apache.openjpa.meta.QueryMetaData.getColNumber(),2,3
org.apache.openjpa.meta.QueryMetaData.setColNumber(int),3,8
org.apache.openjpa.meta.QueryMetaData.getSourceName(),4,5
org.apache.openjpa.meta.QueryMetaData.setParamTypes(OrderedMap<Class<Object>>),5,11
org.apache.openjpa.meta.QueryMetaData.getParamTypes(),12,15
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.getFieldMapping(),2,5
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.getIndependentKeyMappings(boolean),8,15
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.getIndependentValueMappings(boolean),9,15
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.getJoinForeignKey(ClassMapping),6,11
"org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.deriveKey(JDBCStore,Object)",6,8
"org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.deriveValue(JDBCStore,Object)",6,8
"org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.joinKeyRelation(Joins,ClassMapping)",9,19
"org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.joinValueRelation(Joins,ClassMapping)",10,17
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.map(boolean),25,48
"org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",16,28
"org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.supportsSelect(Select,int,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",10,14
"org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",27,81
"org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.loadKeyProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)",13,23
"org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.loadProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)",13,22
"org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.join(Joins,boolean)",5,11
"org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.joinKey(Joins,boolean)",6,12
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.getJoinForeignKey(),4,9
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.getIndependentElementMappings(boolean),6,8
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.handleMappedByForeignKey(boolean),72,337
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.isTypeUnjoinedSubclass(ValueMapping),11,21
"org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.populateKey(Row,OpenJPAStateManager,Object,StoreContext,RowManager,JDBCStore)",44,149
org.apache.openjpa.jdbc.meta.strats.MapTableFieldStrategy.getFieldMapping(ClassMapping),16,33
"org.apache.openjpa.util.Proxy.setOwner(OpenJPAStateManager,int)",13,18
org.apache.openjpa.util.Proxy.getOwner(),5,5
org.apache.openjpa.util.Proxy.getOwnerField(),4,5
org.apache.openjpa.util.Proxy.getChangeTracker(),4,8
org.apache.openjpa.util.Proxy.copy(Object),12,14
org.apache.openjpa.lib.graph.BreadthFirstWalk.BreadthFirstWalk(Graph),3,6
org.apache.openjpa.lib.graph.BreadthFirstWalk.walk(),15,41
org.apache.openjpa.lib.graph.BreadthFirstWalk.processQueue(),18,49
"org.apache.openjpa.lib.graph.BreadthFirstWalk.enqueue(Object,NodeInfo)",16,30
"org.apache.openjpa.lib.graph.BreadthFirstWalk.visit(Object,NodeInfo)",12,27
org.apache.openjpa.lib.graph.BreadthFirstWalk.edgeVisited(Edge),7,16
org.apache.openjpa.lib.graph.BreadthFirstWalk.addGraphVisitor(GraphVisitor),8,16
org.apache.openjpa.lib.graph.BreadthFirstWalk.removeGraphVisitor(GraphVisitor),7,15
org.apache.openjpa.datacache.DataCacheStoreManager.DataCacheStoreManager(StoreManager),7,11
org.apache.openjpa.datacache.DataCacheStoreManager.setContext(StoreContext),12,21
org.apache.openjpa.datacache.DataCacheStoreManager.begin(),1,2
org.apache.openjpa.datacache.DataCacheStoreManager.commit(),6,7
org.apache.openjpa.datacache.DataCacheStoreManager.rollback(),4,5
org.apache.openjpa.datacache.DataCacheStoreManager.evictTypes(Collection<Class<>>),18,43
org.apache.openjpa.datacache.DataCacheStoreManager.updateCaches(),78,291
"org.apache.openjpa.datacache.DataCacheStoreManager.transformToVersionSafePCDatas(DataCache,List<PCDataHolder>)",36,123
"org.apache.openjpa.datacache.DataCacheStoreManager.getModifications(Map<DataCache,Modifications>,DataCache)",12,36
"org.apache.openjpa.datacache.DataCacheStoreManager.exists(OpenJPAStateManager,Object)",25,66
"org.apache.openjpa.datacache.DataCacheStoreManager.isCached(List<Object>,BitSet)",24,48
"org.apache.openjpa.datacache.DataCacheStoreManager.syncVersion(OpenJPAStateManager,Object)",31,101
"org.apache.openjpa.datacache.DataCacheStoreManager.initialize(OpenJPAStateManager,PCState,FetchConfiguration,Object)",48,162
"org.apache.openjpa.datacache.DataCacheStoreManager.cacheStateManager(DataCache,OpenJPAStateManager,DataCachePCData)",24,54
"org.apache.openjpa.datacache.DataCacheStoreManager.load(OpenJPAStateManager,BitSet,FetchConfiguration,int,Object)",42,117
"org.apache.openjpa.datacache.DataCacheStoreManager.updateDataCache(boolean,OpenJPAStateManager,FetchConfiguration)",36,123
"org.apache.openjpa.datacache.DataCacheStoreManager.loadAll(Collection<OpenJPAStateManager>,PCState,int,FetchConfiguration,Object)",67,348
"org.apache.openjpa.datacache.DataCacheStoreManager.addUnloaded(OpenJPAStateManager,BitSet,Map<OpenJPAStateManager,BitSet>)",12,35
org.apache.openjpa.datacache.DataCacheStoreManager.flush(Collection<OpenJPAStateManager>),44,85
org.apache.openjpa.datacache.DataCacheStoreManager.notifyOptimisticLockFailure(OptimisticException),93,208
"org.apache.openjpa.datacache.DataCacheStoreManager.newPCData(OpenJPAStateManager,DataCache)",14,36
"org.apache.openjpa.datacache.DataCacheStoreManager.bypass(FetchConfiguration,int)",19,36
org.apache.openjpa.datacache.DataCacheStoreManager.isLocking(FetchConfiguration),12,21
"org.apache.openjpa.datacache.DataCacheStoreManager.PCDataHolder.PCDataHolder(DataCachePCData,OpenJPAStateManager)",6,10
org.apache.openjpa.lib.meta.XMLMetaDataParser.getOverrideContextClassloader(),3,6
org.apache.openjpa.lib.meta.XMLMetaDataParser.setOverrideContextClassloader(boolean),5,11
org.apache.openjpa.lib.meta.XMLMetaDataParser.isParsing(),3,5
org.apache.openjpa.lib.meta.XMLMetaDataParser.setParsing(boolean),4,8
org.apache.openjpa.lib.meta.XMLMetaDataParser.getParseText(),3,7
org.apache.openjpa.lib.meta.XMLMetaDataParser.setParseText(boolean),4,10
org.apache.openjpa.lib.meta.XMLMetaDataParser.getParseComments(),3,7
org.apache.openjpa.lib.meta.XMLMetaDataParser.setParseComments(boolean),4,10
org.apache.openjpa.lib.meta.XMLMetaDataParser.getLocation(),3,6
org.apache.openjpa.lib.meta.XMLMetaDataParser.getLexicalHandler(),10,19
org.apache.openjpa.lib.meta.XMLMetaDataParser.setLexicalHandler(LexicalHandler),11,20
org.apache.openjpa.lib.meta.XMLMetaDataParser.setLocation(Location),4,9
org.apache.openjpa.lib.meta.XMLMetaDataParser.getSourceIsSystemId(),4,7
org.apache.openjpa.lib.meta.XMLMetaDataParser.setSourceIsSystemId(boolean),5,10
org.apache.openjpa.lib.meta.XMLMetaDataParser.isValidating(),2,4
org.apache.openjpa.lib.meta.XMLMetaDataParser.setValidating(boolean),3,7
org.apache.openjpa.lib.meta.XMLMetaDataParser.getSuffix(),6,8
org.apache.openjpa.lib.meta.XMLMetaDataParser.setSuffix(String),7,11
org.apache.openjpa.lib.meta.XMLMetaDataParser.isCaching(),8,9
org.apache.openjpa.lib.meta.XMLMetaDataParser.setCaching(boolean),9,13
org.apache.openjpa.lib.meta.XMLMetaDataParser.getLog(),2,5
org.apache.openjpa.lib.meta.XMLMetaDataParser.setLog(Log),3,8
org.apache.openjpa.lib.meta.XMLMetaDataParser.getClassLoader(),4,6
org.apache.openjpa.lib.meta.XMLMetaDataParser.setClassLoader(ClassLoader),5,9
org.apache.openjpa.lib.meta.XMLMetaDataParser.getResults(),4,7
org.apache.openjpa.lib.meta.XMLMetaDataParser.parse(String),9,12
org.apache.openjpa.lib.meta.XMLMetaDataParser.parse(URL),6,11
org.apache.openjpa.lib.meta.XMLMetaDataParser.parse(File),18,35
"org.apache.openjpa.lib.meta.XMLMetaDataParser.parse(Class,boolean)",10,16
"org.apache.openjpa.lib.meta.XMLMetaDataParser.parse(Reader,String)",9,18
org.apache.openjpa.lib.meta.XMLMetaDataParser.parse(MetaDataIterator),6,8
"org.apache.openjpa.lib.meta.XMLMetaDataParser.parse(MetaDataIterator,boolean)",25,50
"org.apache.openjpa.lib.meta.XMLMetaDataParser.parseNewResource(Reader,String)",72,248
org.apache.openjpa.lib.meta.XMLMetaDataParser.parsed(String),18,48
org.apache.openjpa.lib.meta.XMLMetaDataParser.clear(),6,10
org.apache.openjpa.lib.meta.XMLMetaDataParser.error(SAXParseException),5,8
org.apache.openjpa.lib.meta.XMLMetaDataParser.fatalError(SAXParseException),6,9
org.apache.openjpa.lib.meta.XMLMetaDataParser.setDocumentLocator(Locator),4,9
"org.apache.openjpa.lib.meta.XMLMetaDataParser.startElement(String,String,String,Attributes)",16,29
"org.apache.openjpa.lib.meta.XMLMetaDataParser.endElement(String,String,String)",16,49
"org.apache.openjpa.lib.meta.XMLMetaDataParser.characters(char[],int,int)",10,15
"org.apache.openjpa.lib.meta.XMLMetaDataParser.comment(char[],int,int)",14,23
org.apache.openjpa.lib.meta.XMLMetaDataParser.startCDATA(),4,6
org.apache.openjpa.lib.meta.XMLMetaDataParser.endCDATA(),3,4
"org.apache.openjpa.lib.meta.XMLMetaDataParser.startDTD(String,String,String)",7,13
org.apache.openjpa.lib.meta.XMLMetaDataParser.endDTD(),3,4
org.apache.openjpa.lib.meta.XMLMetaDataParser.startEntity(String),6,9
org.apache.openjpa.lib.meta.XMLMetaDataParser.endEntity(String),5,7
"org.apache.openjpa.lib.meta.XMLMetaDataParser.startElement(String,Attributes)",15,20
org.apache.openjpa.lib.meta.XMLMetaDataParser.endElement(String),8,9
org.apache.openjpa.lib.meta.XMLMetaDataParser.addResult(Object),12,23
org.apache.openjpa.lib.meta.XMLMetaDataParser.finish(),23,31
org.apache.openjpa.lib.meta.XMLMetaDataParser.reset(),27,32
org.apache.openjpa.lib.meta.XMLMetaDataParser.getSchemaSource(),18,37
org.apache.openjpa.lib.meta.XMLMetaDataParser.getDocType(),15,16
org.apache.openjpa.lib.meta.XMLMetaDataParser.getSourceName(),5,9
org.apache.openjpa.lib.meta.XMLMetaDataParser.getSourceFile(),3,8
org.apache.openjpa.lib.meta.XMLMetaDataParser.addComments(Object),12,25
org.apache.openjpa.lib.meta.XMLMetaDataParser.currentComments(),9,21
org.apache.openjpa.lib.meta.XMLMetaDataParser.currentText(),6,11
org.apache.openjpa.lib.meta.XMLMetaDataParser.currentLocation(),7,12
org.apache.openjpa.lib.meta.XMLMetaDataParser.currentDepth(),7,11
org.apache.openjpa.lib.meta.XMLMetaDataParser.currentClassLoader(),14,24
org.apache.openjpa.lib.meta.XMLMetaDataParser.ignoreContent(boolean),8,17
org.apache.openjpa.lib.meta.XMLMetaDataParser.getException(String),12,20
org.apache.openjpa.lib.meta.XMLMetaDataParser.getException(Message),11,21
"org.apache.openjpa.lib.meta.XMLMetaDataParser.getException(Message,Throwable)",18,43
org.apache.openjpa.lib.meta.XMLMetaDataParser.clearDeferredMetaData(),3,3
"org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheStoreQuery(StoreQuery,QueryCache)",10,23
org.apache.openjpa.datacache.QueryCacheStoreQuery.getCache(),5,9
org.apache.openjpa.datacache.QueryCacheStoreQuery.getDelegate(),3,5
org.apache.openjpa.datacache.QueryCacheStoreQuery.checkCache(QueryKey),83,186
"org.apache.openjpa.datacache.QueryCacheStoreQuery.wrapResult(ResultObjectProvider,QueryKey)",14,32
"org.apache.openjpa.datacache.QueryCacheStoreQuery.copyProjection(Object,StoreContext)",22,87
"org.apache.openjpa.datacache.QueryCacheStoreQuery.fromObjectId(Object,StoreContext)",11,23
org.apache.openjpa.datacache.QueryCacheStoreQuery.writeReplace(),6,7
org.apache.openjpa.datacache.QueryCacheStoreQuery.getContext(),2,5
org.apache.openjpa.datacache.QueryCacheStoreQuery.setContext(QueryContext),12,20
org.apache.openjpa.datacache.QueryCacheStoreQuery.setQuery(Object),3,8
org.apache.openjpa.datacache.QueryCacheStoreQuery.getFilterListener(String),5,10
org.apache.openjpa.datacache.QueryCacheStoreQuery.getAggregateListener(String),5,10
org.apache.openjpa.datacache.QueryCacheStoreQuery.newCompilationKey(),4,6
org.apache.openjpa.datacache.QueryCacheStoreQuery.newCompilation(),3,4
org.apache.openjpa.datacache.QueryCacheStoreQuery.getCompilation(),3,4
org.apache.openjpa.datacache.QueryCacheStoreQuery.populateFromCompilation(Object),5,8
org.apache.openjpa.datacache.QueryCacheStoreQuery.invalidateCompilation(),3,5
org.apache.openjpa.datacache.QueryCacheStoreQuery.supportsDataStoreExecution(),5,9
org.apache.openjpa.datacache.QueryCacheStoreQuery.supportsInMemoryExecution(),4,7
"org.apache.openjpa.datacache.QueryCacheStoreQuery.newInMemoryExecutor(ClassMetaData,boolean)",6,12
"org.apache.openjpa.datacache.QueryCacheStoreQuery.newDataStoreExecutor(ClassMetaData,boolean)",10,23
org.apache.openjpa.datacache.QueryCacheStoreQuery.supportsAbstractExecutors(),3,5
org.apache.openjpa.datacache.QueryCacheStoreQuery.requiresCandidateType(),4,7
org.apache.openjpa.datacache.QueryCacheStoreQuery.requiresParameterDeclarations(),4,7
org.apache.openjpa.datacache.QueryCacheStoreQuery.supportsParameterDeclarations(),4,7
"org.apache.openjpa.datacache.QueryCacheStoreQuery.evaluate(Object,Object,Object[],OpenJPAStateManager)",7,13
"org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.QueryCacheExecutor(Executor,ClassMetaData,boolean,FetchConfiguration)",11,17
"org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.executeQuery(StoreQuery,Object[],Range)",25,67
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getQueryExpressions(),2,6
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.clearAccessPath(StoreQuery),33,82
"org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.executeDelete(StoreQuery,Object[])",9,12
"org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.executeUpdate(StoreQuery,Object[])",9,12
"org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getDataStoreActions(StoreQuery,Object[],Range)",10,12
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.validate(StoreQuery),4,5
"org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getRange(StoreQuery,Object[],Range)",5,10
"org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getOrderingValue(StoreQuery,Object[],Object,int)",8,16
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getAscending(StoreQuery),4,5
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.isPacking(StoreQuery),4,5
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getAlias(StoreQuery),5,6
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getResultClass(StoreQuery),4,5
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getResultShape(StoreQuery),4,8
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getProjectionAliases(StoreQuery),6,8
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getProjectionTypes(StoreQuery),5,7
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getAccessPathMetaDatas(StoreQuery),8,13
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getOperation(StoreQuery),4,5
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.isAggregate(StoreQuery),4,5
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.isDistinct(StoreQuery),4,5
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.hasGrouping(StoreQuery),3,3
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getOrderedParameterTypes(StoreQuery),7,9
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getParameterTypes(StoreQuery),7,9
"org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.toParameterArray(StoreQuery,Map)",8,12
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.getUpdates(StoreQuery),5,6
org.apache.openjpa.datacache.QueryCacheStoreQuery.QueryCacheExecutor.unwrap(StoreQuery),5,10
"org.apache.openjpa.datacache.QueryCacheStoreQuery.CachedList.CachedList(QueryResult,boolean,StoreContext)",10,15
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachedList.get(int),10,26
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachedList.size(),2,3
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachedList.writeReplace(),7,9
"org.apache.openjpa.datacache.QueryCacheStoreQuery.CachingResultObjectProvider.CachingResultObjectProvider(ResultObjectProvider,boolean,QueryKey)",16,29
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachingResultObjectProvider.abortCaching(),20,24
"org.apache.openjpa.datacache.QueryCacheStoreQuery.CachingResultObjectProvider.checkFinished(Object,boolean)",54,108
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachingResultObjectProvider.supportsRandomAccess(),4,7
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachingResultObjectProvider.open(),2,2
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachingResultObjectProvider.getResultObject(),7,13
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachingResultObjectProvider.next(),7,13
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachingResultObjectProvider.absolute(int),9,22
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachingResultObjectProvider.size(),8,15
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachingResultObjectProvider.reset(),4,5
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachingResultObjectProvider.close(),5,6
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachingResultObjectProvider.handleCheckedException(Exception),4,8
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachingResultObjectProvider.onTypesChanged(TypesChangedEvent),8,11
org.apache.openjpa.datacache.QueryCacheStoreQuery.CachedObjectId.CachedObjectId(Object),3,6
"org.apache.openjpa.enhance.ClassRedefiner.redefineClasses(OpenJPAConfiguration,Map<Class<>,byte[]>)",58,141
"org.apache.openjpa.enhance.ClassRedefiner.redefineClasses(OpenJPAConfiguration,Map<Class<>,byte[]>).$1.transform(ClassLoader,String,Class<>,ProtectionDomain,byte[])",11,13
org.apache.openjpa.enhance.ClassRedefiner.canRedefineClasses(Log),32,60
org.apache.openjpa.jdbc.meta.NoneStrategyInstaller.NoneStrategyInstaller(MappingRepository),9,10
org.apache.openjpa.jdbc.meta.NoneStrategyInstaller.installStrategy(ClassMapping),9,19
org.apache.openjpa.jdbc.meta.NoneStrategyInstaller.installStrategy(FieldMapping),7,14
org.apache.openjpa.jdbc.meta.NoneStrategyInstaller.installStrategy(Version),7,13
org.apache.openjpa.jdbc.meta.NoneStrategyInstaller.installStrategy(Discriminator),8,13
org.apache.openjpa.jdbc.meta.strats.EnumValueHandler.getStoreOrdinal(),3,6
org.apache.openjpa.jdbc.meta.strats.EnumValueHandler.setStoreOrdinal(boolean),4,9
"org.apache.openjpa.jdbc.meta.strats.EnumValueHandler.map(ValueMapping,String,ColumnIO,boolean)",14,27
"org.apache.openjpa.jdbc.meta.strats.EnumValueHandler.map(ValueMapping,DBIdentifier,ColumnIO,boolean)",40,81
org.apache.openjpa.jdbc.meta.strats.EnumValueHandler.isVersionable(),1,1
"org.apache.openjpa.jdbc.meta.strats.EnumValueHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)",10,19
"org.apache.openjpa.jdbc.meta.strats.EnumValueHandler.toObjectValue(ValueMapping,Object)",8,16
"org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.NullSafeConcurrentHashMap(int,float,int)",8,12
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.NullSafeConcurrentHashMap(),4,4
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.maskNull(Object),6,8
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.unmaskNull(Object),8,10
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.removeRandom(),30,83
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.randomEntryIterator(),17,35
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.randomEntryIterator().$1.hasNext(),22,63
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.randomEntryIterator().$1.next(),17,19
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.randomEntryIterator().$1.remove(),4,4
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.remove(Object),9,21
"org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.remove(Object,Object)",9,22
"org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.replace(Object,Object,Object)",5,14
"org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.replace(Object,Object)",6,12
"org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.putIfAbsent(Object,Object)",10,25
"org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.put(Object,Object)",9,23
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.addRandomKey(Object),24,49
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.get(Object),4,6
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.containsKey(Object),4,8
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.containsValue(Object),4,8
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.contains(Object),6,6
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.elements(),5,5
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.entrySet(),3,7
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.entrySet().$2.unmask(Object),5,9
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.entrySet().$2.unmask(Object).$1.getKey(),3,4
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.entrySet().$2.unmask(Object).$1.getValue(),3,4
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.entrySet().$2.unmask(Object).$1.setValue(Object),5,10
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.entrySet().$2.unmask(Object).$1.hashCode(),2,4
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.keys(),5,5
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.keySet(),3,7
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.keySet().$3.unmask(Object),3,6
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.values(),3,5
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.values().$4.unmask(Object),3,6
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.TranslatingSet.TranslatingSet(Set),2,4
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.TranslatingSet.unmask(Object),3,4
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.TranslatingSet.iterator(),2,7
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.TranslatingSet.iterator().$1.hasNext(),1,1
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.TranslatingSet.iterator().$1.next(),3,3
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.TranslatingSet.iterator().$1.remove(),2,3
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.TranslatingSet.size(),2,3
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.TranslatingCollection.TranslatingCollection(Collection),2,4
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.TranslatingCollection.unmask(Object),3,4
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.TranslatingCollection.iterator(),2,7
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.TranslatingCollection.iterator().$1.hasNext(),1,1
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.TranslatingCollection.iterator().$1.next(),3,3
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.TranslatingCollection.iterator().$1.remove(),2,3
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.TranslatingCollection.size(),2,3
"org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.EntryImpl.EntryImpl(Object,Object)",5,10
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.EntryImpl.getKey(),2,3
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.EntryImpl.getValue(),3,3
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.EntryImpl.setValue(Object),6,8
org.apache.openjpa.lib.util.concurrent.NullSafeConcurrentHashMap.KeyFilter.exclude(Object),7,10
org.apache.openjpa.jdbc.meta.strats.RelationStrategies.unjoinable(ValueMapping),11,16
org.apache.openjpa.jdbc.meta.strats.RelationStrategies.unloadable(ValueMapping),16,20
org.apache.openjpa.jdbc.meta.strats.RelationStrategies.uninversable(ValueMapping),17,22
"org.apache.openjpa.jdbc.meta.strats.RelationStrategies.toDataStoreValue(ValueMapping,Object,JDBCStore)",36,86
"org.apache.openjpa.jdbc.meta.strats.RelationStrategies.mapRelationToUnmappedPC(ValueMapping,String,boolean)",14,22
"org.apache.openjpa.jdbc.meta.strats.RelationStrategies.mapRelationToUnmappedPC(ValueMapping,DBIdentifier,boolean)",26,46
"org.apache.openjpa.jdbc.meta.strats.RelationStrategies.newUnmappedPCTemplateColumns(ValueMapping,DBIdentifier)",31,107
"org.apache.openjpa.jdbc.meta.strats.RelationStrategies.mapPrimaryKey(ValueMapping,FieldMapping)",42,164
"org.apache.openjpa.jdbc.meta.strats.RelationStrategies.getStateManager(Object,StoreContext)",13,27
org.apache.openjpa.jdbc.meta.strats.RelationStrategies.isRelationId(Column[]),10,17
org.apache.openjpa.jdbc.meta.strats.RelationStrategies.isRelationId(ForeignKey),9,14
"org.apache.openjpa.jdbc.schema.ColumnIO.$1.setInsertable(int,boolean)",6,7
"org.apache.openjpa.jdbc.schema.ColumnIO.$1.setUpdatable(int,boolean)",6,7
"org.apache.openjpa.jdbc.schema.ColumnIO.$1.setNullInsertable(int,boolean)",6,7
"org.apache.openjpa.jdbc.schema.ColumnIO.$1.setNullUpdatable(int,boolean)",7,7
"org.apache.openjpa.jdbc.schema.ColumnIO.isInsertable(int,boolean)",6,11
"org.apache.openjpa.jdbc.schema.ColumnIO.isInsertable(Column,boolean)",7,15
"org.apache.openjpa.jdbc.schema.ColumnIO.isAnyInsertable(int,boolean)",6,11
"org.apache.openjpa.jdbc.schema.ColumnIO.isAnyInsertable(Column[],boolean)",7,15
"org.apache.openjpa.jdbc.schema.ColumnIO.isAnyInsertable(ForeignKey,boolean)",7,13
"org.apache.openjpa.jdbc.schema.ColumnIO.isAllInsertable(int,boolean)",6,11
"org.apache.openjpa.jdbc.schema.ColumnIO.isAllInsertable(Column[],boolean)",7,15
"org.apache.openjpa.jdbc.schema.ColumnIO.isAllInsertable(ForeignKey,boolean)",7,13
"org.apache.openjpa.jdbc.schema.ColumnIO.setInsertable(int,boolean)",6,13
"org.apache.openjpa.jdbc.schema.ColumnIO.setNullInsertable(int,boolean)",6,13
"org.apache.openjpa.jdbc.schema.ColumnIO.isUpdatable(int,boolean)",6,11
"org.apache.openjpa.jdbc.schema.ColumnIO.isUpdatable(Column,boolean)",7,15
"org.apache.openjpa.jdbc.schema.ColumnIO.isAnyUpdatable(int,boolean)",6,11
"org.apache.openjpa.jdbc.schema.ColumnIO.isAnyUpdatable(Column[],boolean)",7,15
"org.apache.openjpa.jdbc.schema.ColumnIO.isAnyUpdatable(ForeignKey,boolean)",7,13
"org.apache.openjpa.jdbc.schema.ColumnIO.isAllUpdatable(int,boolean)",6,11
"org.apache.openjpa.jdbc.schema.ColumnIO.isAllUpdatable(Column[],boolean)",7,15
"org.apache.openjpa.jdbc.schema.ColumnIO.isAllUpdatable(ForeignKey,boolean)",7,13
"org.apache.openjpa.jdbc.schema.ColumnIO.setUpdatable(int,boolean)",6,13
"org.apache.openjpa.jdbc.schema.ColumnIO.setNullUpdatable(int,boolean)",5,13
"org.apache.openjpa.jdbc.schema.ColumnIO.is(int,int,int,boolean)",5,12
"org.apache.openjpa.jdbc.schema.ColumnIO.is(Column,int,int,boolean)",4,11
"org.apache.openjpa.jdbc.schema.ColumnIO.isAny(int,int,int,boolean)",6,14
"org.apache.openjpa.jdbc.schema.ColumnIO.isAny(Column[],int,int,boolean)",6,12
"org.apache.openjpa.jdbc.schema.ColumnIO.isAny(ForeignKey,int,int,boolean)",7,16
"org.apache.openjpa.jdbc.schema.ColumnIO.isAll(int,int,int,boolean)",6,14
"org.apache.openjpa.jdbc.schema.ColumnIO.isAll(Column[],int,int,boolean)",6,12
"org.apache.openjpa.jdbc.schema.ColumnIO.isAll(ForeignKey,int,int,boolean)",7,16
"org.apache.openjpa.jdbc.schema.ColumnIO.set(int,boolean,int)",3,9
org.apache.openjpa.jdbc.schema.ColumnIO.isNullable(ForeignKey),8,15
"org.apache.openjpa.persistence.ArgumentException.ArgumentException(String,Throwable[],Object,boolean)",9,16
"org.apache.openjpa.persistence.ArgumentException.ArgumentException(Message,Throwable[],Object,boolean)",9,14
org.apache.openjpa.persistence.ArgumentException.getType(),2,2
org.apache.openjpa.persistence.ArgumentException.getSubtype(),1,1
org.apache.openjpa.persistence.ArgumentException.isFatal(),1,2
org.apache.openjpa.persistence.ArgumentException.getCause(),5,6
org.apache.openjpa.persistence.ArgumentException.getNestedThrowables(),5,8
org.apache.openjpa.persistence.ArgumentException.getFailedObject(),2,4
org.apache.openjpa.persistence.ArgumentException.toString(),2,4
org.apache.openjpa.persistence.ArgumentException.printStackTrace(),5,8
org.apache.openjpa.persistence.ArgumentException.printStackTrace(PrintStream),7,12
org.apache.openjpa.persistence.ArgumentException.printStackTrace(PrintWriter),7,12
org.apache.openjpa.persistence.ArgumentException.writeObject(ObjectOutputStream),11,22
org.apache.openjpa.persistence.ArgumentException.readObject(ObjectInputStream),10,17
org.apache.openjpa.enhance.InstrumentationFactory.setInstrumentation(Instrumentation),14,23
org.apache.openjpa.enhance.InstrumentationFactory.setDynamicallyInstallAgent(boolean),10,17
org.apache.openjpa.enhance.InstrumentationFactory.getInstrumentation(Log),32,61
org.apache.openjpa.enhance.InstrumentationFactory.getInstrumentation(Log).$1.run(),42,82
"org.apache.openjpa.enhance.InstrumentationFactory.agentmain(String,Instrumentation)",15,21
org.apache.openjpa.enhance.InstrumentationFactory.createAgentJar(),41,87
org.apache.openjpa.enhance.InstrumentationFactory.findToolsJar(Log),35,208
org.apache.openjpa.enhance.InstrumentationFactory.getAgentJar(Log),55,156
"org.apache.openjpa.enhance.InstrumentationFactory.loadAgent(Log,String,Class<>)",62,129
"org.apache.openjpa.enhance.InstrumentationFactory.loadVMClass(File,Log,JavaVendors)",36,84
"org.apache.openjpa.enhance.InstrumentationFactory.validateAgentJarManifest(File,Log,String)",25,91
"org.apache.openjpa.jdbc.meta.SequenceMapping.SequenceMapping(String,MappingRepository)",8,14
"org.apache.openjpa.jdbc.meta.SequenceMapping.SequenceMapping(DBIdentifier,MappingRepository)",13,23
org.apache.openjpa.jdbc.meta.SequenceMapping.getMappingFile(),8,13
org.apache.openjpa.jdbc.meta.SequenceMapping.setMappingFile(File),9,16
org.apache.openjpa.jdbc.meta.SequenceMapping.getTable(),6,9
org.apache.openjpa.jdbc.meta.SequenceMapping.getTableIdentifier(),2,6
org.apache.openjpa.jdbc.meta.SequenceMapping.setTable(String),7,14
org.apache.openjpa.jdbc.meta.SequenceMapping.setTableIdentifier(DBIdentifier),3,7
org.apache.openjpa.jdbc.meta.SequenceMapping.getSequenceColumn(),6,11
org.apache.openjpa.jdbc.meta.SequenceMapping.getSequenceColumnIdentifier(),3,9
org.apache.openjpa.jdbc.meta.SequenceMapping.setSequenceColumn(String),7,18
org.apache.openjpa.jdbc.meta.SequenceMapping.setSequenceColumnIdentifier(DBIdentifier),4,11
org.apache.openjpa.jdbc.meta.SequenceMapping.getPrimaryKeyColumn(),7,14
org.apache.openjpa.jdbc.meta.SequenceMapping.getPrimaryKeyColumnIdentifier(),4,12
org.apache.openjpa.jdbc.meta.SequenceMapping.setPrimaryKeyColumn(String),8,23
org.apache.openjpa.jdbc.meta.SequenceMapping.setPrimaryKeyColumnIdentifier(DBIdentifier),5,15
org.apache.openjpa.jdbc.meta.SequenceMapping.getPrimaryKeyValue(),6,12
org.apache.openjpa.jdbc.meta.SequenceMapping.setPrimaryKeyValue(String),7,19
org.apache.openjpa.jdbc.meta.SequenceMapping.setUniqueColumns(String[]),11,18
org.apache.openjpa.jdbc.meta.SequenceMapping.setUniqueColumnsIdentifier(DBIdentifier[]),5,9
org.apache.openjpa.jdbc.meta.SequenceMapping.getUniqueColumns(),6,10
org.apache.openjpa.jdbc.meta.SequenceMapping.getUniqueColumnsIdentifier(),3,6
org.apache.openjpa.jdbc.meta.SequenceMapping.newPluginValue(String),6,10
org.apache.openjpa.jdbc.meta.SequenceMapping.addStandardProperties(StringBuilder),50,126
org.apache.openjpa.jdbc.meta.SequenceMapping.addQuotes(String),8,19
org.apache.openjpa.jdbc.meta.SequenceMapping.setUniqueConstraintName(String),8,15
org.apache.openjpa.jdbc.meta.SequenceMapping.setUniqueConstraintIdentifier(DBIdentifier),5,10
org.apache.openjpa.jdbc.meta.SequenceMapping.getUniqueConstraintName(),6,9
org.apache.openjpa.jdbc.meta.SequenceMapping.getUniqueConstraintIdentifier(),4,11
org.apache.openjpa.instrumentation.jmx.PreparedQueryCacheJMXInstrument.getName(),4,4
org.apache.openjpa.instrumentation.jmx.PreparedQueryCacheJMXInstrument.getLevel(),3,6
org.apache.openjpa.instrumentation.jmx.PreparedQueryCacheJMXInstrument.initialize(),26,43
org.apache.openjpa.instrumentation.jmx.PreparedQueryCacheJMXInstrument.getObjectName(),11,26
org.apache.openjpa.instrumentation.jmx.PreparedQueryCacheJMXInstrument.start(),3,4
org.apache.openjpa.instrumentation.jmx.PreparedQueryCacheJMXInstrument.stop(),3,4
org.apache.openjpa.kernel.DelegatingBroker.DelegatingBroker(Broker),5,8
"org.apache.openjpa.kernel.DelegatingBroker.DelegatingBroker(Broker,RuntimeExceptionTranslator)",10,25
org.apache.openjpa.kernel.DelegatingBroker.getDelegate(),3,5
org.apache.openjpa.kernel.DelegatingBroker.getInnermostDelegate(),4,9
org.apache.openjpa.kernel.DelegatingBroker.hashCode(),4,6
org.apache.openjpa.kernel.DelegatingBroker.equals(Object),6,11
org.apache.openjpa.kernel.DelegatingBroker.translate(RuntimeException),5,11
"org.apache.openjpa.kernel.DelegatingBroker.translate(RuntimeException,Object)",19,49
org.apache.openjpa.kernel.DelegatingBroker.getBroker(),1,2
org.apache.openjpa.kernel.DelegatingBroker.getConfiguration(),6,8
org.apache.openjpa.kernel.DelegatingBroker.getFetchConfiguration(),6,10
org.apache.openjpa.kernel.DelegatingBroker.pushFetchConfiguration(),7,12
org.apache.openjpa.kernel.DelegatingBroker.pushFetchConfiguration(FetchConfiguration),7,14
org.apache.openjpa.kernel.DelegatingBroker.popFetchConfiguration(),7,10
org.apache.openjpa.kernel.DelegatingBroker.getClassLoader(),5,7
org.apache.openjpa.kernel.DelegatingBroker.getLockManager(),6,10
org.apache.openjpa.kernel.DelegatingBroker.getStoreManager(),7,11
org.apache.openjpa.kernel.DelegatingBroker.getConnectionUserName(),8,11
org.apache.openjpa.kernel.DelegatingBroker.getConnectionPassword(),7,9
org.apache.openjpa.kernel.DelegatingBroker.getProperties(),8,9
org.apache.openjpa.kernel.DelegatingBroker.getSupportedProperties(),8,10
"org.apache.openjpa.kernel.DelegatingBroker.find(Object,boolean,FindCallbacks)",9,14
"org.apache.openjpa.kernel.DelegatingBroker.findAll(Collection,boolean,FindCallbacks)",10,14
"org.apache.openjpa.kernel.DelegatingBroker.findCached(Object,FindCallbacks)",9,14
"org.apache.openjpa.kernel.DelegatingBroker.find(Object,FetchConfiguration,BitSet,Object,int)",13,22
"org.apache.openjpa.kernel.DelegatingBroker.findAll(Collection,FetchConfiguration,BitSet,Object,int)",14,22
"org.apache.openjpa.kernel.DelegatingBroker.extentIterator(Class,boolean,FetchConfiguration,boolean)",12,21
"org.apache.openjpa.kernel.DelegatingBroker.retrieve(Object,boolean,OpCallbacks)",9,12
"org.apache.openjpa.kernel.DelegatingBroker.retrieveAll(Collection,boolean,OpCallbacks)",9,12
"org.apache.openjpa.kernel.DelegatingBroker.embed(Object,Object,OpenJPAStateManager,ValueMetaData)",13,23
org.apache.openjpa.kernel.DelegatingBroker.getObjectIdType(Class),7,10
"org.apache.openjpa.kernel.DelegatingBroker.newObjectId(Class,Object)",7,12
org.apache.openjpa.kernel.DelegatingBroker.getManagedObjects(),7,9
org.apache.openjpa.kernel.DelegatingBroker.getTransactionalObjects(),7,9
org.apache.openjpa.kernel.DelegatingBroker.getPendingTransactionalObjects(),8,11
org.apache.openjpa.kernel.DelegatingBroker.getDirtyObjects(),7,9
org.apache.openjpa.kernel.DelegatingBroker.getOrderDirtyObjects(),6,8
org.apache.openjpa.kernel.DelegatingBroker.setOrderDirtyObjects(boolean),7,10
org.apache.openjpa.kernel.DelegatingBroker.getPersistedTypes(),7,9
org.apache.openjpa.kernel.DelegatingBroker.getUpdatedTypes(),7,9
org.apache.openjpa.kernel.DelegatingBroker.getDeletedTypes(),7,9
org.apache.openjpa.kernel.DelegatingBroker.getStateManager(Object),8,11
org.apache.openjpa.kernel.DelegatingBroker.getLockLevel(Object),8,11
org.apache.openjpa.kernel.DelegatingBroker.getVersion(Object),7,10
org.apache.openjpa.kernel.DelegatingBroker.isDirty(Object),7,9
org.apache.openjpa.kernel.DelegatingBroker.isTransactional(Object),7,9
org.apache.openjpa.kernel.DelegatingBroker.isPersistent(Object),7,9
org.apache.openjpa.kernel.DelegatingBroker.isNew(Object),6,7
org.apache.openjpa.kernel.DelegatingBroker.isDeleted(Object),7,9
org.apache.openjpa.kernel.DelegatingBroker.getObjectId(Object),6,10
org.apache.openjpa.kernel.DelegatingBroker.isManaged(),5,6
org.apache.openjpa.kernel.DelegatingBroker.isActive(),5,6
org.apache.openjpa.kernel.DelegatingBroker.isStoreActive(),6,8
org.apache.openjpa.kernel.DelegatingBroker.hasConnection(),5,6
org.apache.openjpa.kernel.DelegatingBroker.getConnection(),6,7
org.apache.openjpa.kernel.DelegatingBroker.lock(),5,6
org.apache.openjpa.kernel.DelegatingBroker.unlock(),5,6
org.apache.openjpa.kernel.DelegatingBroker.beginOperation(boolean),7,10
org.apache.openjpa.kernel.DelegatingBroker.endOperation(),5,6
"org.apache.openjpa.kernel.DelegatingBroker.setImplicitBehavior(OpCallbacks,RuntimeExceptionTranslator)",10,16
org.apache.openjpa.kernel.DelegatingBroker.getBrokerFactory(),5,10
org.apache.openjpa.kernel.DelegatingBroker.getConnectionRetainMode(),7,10
org.apache.openjpa.kernel.DelegatingBroker.getManagedRuntime(),5,10
org.apache.openjpa.kernel.DelegatingBroker.getInverseManager(),6,10
org.apache.openjpa.kernel.DelegatingBroker.getMultithreaded(),5,6
org.apache.openjpa.kernel.DelegatingBroker.setMultithreaded(boolean),7,10
org.apache.openjpa.kernel.DelegatingBroker.getIgnoreChanges(),6,8
org.apache.openjpa.kernel.DelegatingBroker.setIgnoreChanges(boolean),7,12
org.apache.openjpa.kernel.DelegatingBroker.getNontransactionalRead(),6,8
org.apache.openjpa.kernel.DelegatingBroker.setNontransactionalRead(boolean),7,12
org.apache.openjpa.kernel.DelegatingBroker.getNontransactionalWrite(),6,8
org.apache.openjpa.kernel.DelegatingBroker.setNontransactionalWrite(boolean),7,12
org.apache.openjpa.kernel.DelegatingBroker.getRestoreState(),5,6
org.apache.openjpa.kernel.DelegatingBroker.setRestoreState(int),6,10
org.apache.openjpa.kernel.DelegatingBroker.getOptimistic(),5,6
org.apache.openjpa.kernel.DelegatingBroker.setOptimistic(boolean),7,10
org.apache.openjpa.kernel.DelegatingBroker.getRetainState(),5,6
org.apache.openjpa.kernel.DelegatingBroker.setRetainState(boolean),6,10
org.apache.openjpa.kernel.DelegatingBroker.getAutoClear(),5,6
org.apache.openjpa.kernel.DelegatingBroker.setAutoClear(int),6,8
org.apache.openjpa.kernel.DelegatingBroker.getAutoDetach(),6,8
org.apache.openjpa.kernel.DelegatingBroker.setAutoDetach(int),8,12
"org.apache.openjpa.kernel.DelegatingBroker.setAutoDetach(int,boolean)",8,12
org.apache.openjpa.kernel.DelegatingBroker.getDetachState(),5,6
org.apache.openjpa.kernel.DelegatingBroker.setDetachState(int),7,10
org.apache.openjpa.kernel.DelegatingBroker.isDetachedNew(),5,6
org.apache.openjpa.kernel.DelegatingBroker.setDetachedNew(boolean),6,8
org.apache.openjpa.kernel.DelegatingBroker.getSyncWithManagedTransactions(),7,10
org.apache.openjpa.kernel.DelegatingBroker.setSyncWithManagedTransactions(boolean),8,14
org.apache.openjpa.kernel.DelegatingBroker.getEvictFromDataCache(),7,10
org.apache.openjpa.kernel.DelegatingBroker.setEvictFromDataCache(boolean),8,14
org.apache.openjpa.kernel.DelegatingBroker.getPopulateDataCache(),7,10
org.apache.openjpa.kernel.DelegatingBroker.setPopulateDataCache(boolean),8,14
org.apache.openjpa.kernel.DelegatingBroker.isTrackChangesByType(),7,10
org.apache.openjpa.kernel.DelegatingBroker.setTrackChangesByType(boolean),9,14
"org.apache.openjpa.kernel.DelegatingBroker.putUserObject(Object,Object)",8,15
org.apache.openjpa.kernel.DelegatingBroker.getUserObject(Object),7,12
org.apache.openjpa.kernel.DelegatingBroker.addTransactionListener(Object),8,13
org.apache.openjpa.kernel.DelegatingBroker.removeTransactionListener(Object),8,13
org.apache.openjpa.kernel.DelegatingBroker.getTransactionListeners(),8,10
org.apache.openjpa.kernel.DelegatingBroker.getTransactionListenerCallbackMode(),8,12
org.apache.openjpa.kernel.DelegatingBroker.setTransactionListenerCallbackMode(int),9,16
"org.apache.openjpa.kernel.DelegatingBroker.addLifecycleListener(Object,Class[])",9,15
org.apache.openjpa.kernel.DelegatingBroker.removeLifecycleListener(Object),8,13
org.apache.openjpa.kernel.DelegatingBroker.getLifecycleListenerCallbackMode(),8,12
org.apache.openjpa.kernel.DelegatingBroker.setLifecycleListenerCallbackMode(int),9,16
org.apache.openjpa.kernel.DelegatingBroker.getLifecycleEventManager(),7,13
org.apache.openjpa.kernel.DelegatingBroker.begin(),5,6
org.apache.openjpa.kernel.DelegatingBroker.commit(),5,6
org.apache.openjpa.kernel.DelegatingBroker.rollback(),5,6
org.apache.openjpa.kernel.DelegatingBroker.syncWithManagedTransaction(),7,10
org.apache.openjpa.kernel.DelegatingBroker.commitAndResume(),6,8
org.apache.openjpa.kernel.DelegatingBroker.rollbackAndResume(),6,8
org.apache.openjpa.kernel.DelegatingBroker.setRollbackOnly(),6,8
org.apache.openjpa.kernel.DelegatingBroker.setRollbackOnly(Throwable),8,11
org.apache.openjpa.kernel.DelegatingBroker.getRollbackCause(),7,9
org.apache.openjpa.kernel.DelegatingBroker.getRollbackOnly(),5,6
org.apache.openjpa.kernel.DelegatingBroker.setSavepoint(String),8,11
org.apache.openjpa.kernel.DelegatingBroker.rollbackToSavepoint(),6,8
org.apache.openjpa.kernel.DelegatingBroker.rollbackToSavepoint(String),8,11
org.apache.openjpa.kernel.DelegatingBroker.releaseSavepoint(),6,8
org.apache.openjpa.kernel.DelegatingBroker.releaseSavepoint(String),8,11
org.apache.openjpa.kernel.DelegatingBroker.flush(),5,6
org.apache.openjpa.kernel.DelegatingBroker.preFlush(),6,8
org.apache.openjpa.kernel.DelegatingBroker.validateChanges(),6,8
org.apache.openjpa.kernel.DelegatingBroker.beginStore(),6,8
"org.apache.openjpa.kernel.DelegatingBroker.persist(Object,OpCallbacks)",9,12
"org.apache.openjpa.kernel.DelegatingBroker.persistAll(Collection,OpCallbacks)",9,12
"org.apache.openjpa.kernel.DelegatingBroker.persist(Object,Object,OpCallbacks)",11,15
"org.apache.openjpa.kernel.DelegatingBroker.delete(Object,OpCallbacks)",9,13
"org.apache.openjpa.kernel.DelegatingBroker.deleteAll(Collection,OpCallbacks)",9,13
"org.apache.openjpa.kernel.DelegatingBroker.release(Object,OpCallbacks)",9,13
"org.apache.openjpa.kernel.DelegatingBroker.releaseAll(Collection,OpCallbacks)",9,13
"org.apache.openjpa.kernel.DelegatingBroker.refresh(Object,OpCallbacks)",9,13
"org.apache.openjpa.kernel.DelegatingBroker.refreshAll(Collection,OpCallbacks)",9,13
"org.apache.openjpa.kernel.DelegatingBroker.evict(Object,OpCallbacks)",9,13
"org.apache.openjpa.kernel.DelegatingBroker.evictAll(Collection,OpCallbacks)",9,13
org.apache.openjpa.kernel.DelegatingBroker.evictAll(OpCallbacks),7,9
"org.apache.openjpa.kernel.DelegatingBroker.evictAll(Extent,OpCallbacks)",10,15
"org.apache.openjpa.kernel.DelegatingBroker.detach(Object,OpCallbacks)",9,14
"org.apache.openjpa.kernel.DelegatingBroker.detachAll(Collection,OpCallbacks)",10,14
org.apache.openjpa.kernel.DelegatingBroker.detachAll(OpCallbacks),7,9
"org.apache.openjpa.kernel.DelegatingBroker.detachAll(OpCallbacks,boolean)",8,11
"org.apache.openjpa.kernel.DelegatingBroker.attach(Object,boolean,OpCallbacks)",10,16
"org.apache.openjpa.kernel.DelegatingBroker.attachAll(Collection,boolean,OpCallbacks)",11,16
"org.apache.openjpa.kernel.DelegatingBroker.transactional(Object,boolean,OpCallbacks)",10,14
"org.apache.openjpa.kernel.DelegatingBroker.transactionalAll(Collection,boolean,OpCallbacks)",11,17
"org.apache.openjpa.kernel.DelegatingBroker.nontransactional(Object,OpCallbacks)",8,10
"org.apache.openjpa.kernel.DelegatingBroker.nontransactionalAll(Collection,OpCallbacks)",9,13
"org.apache.openjpa.kernel.DelegatingBroker.newExtent(Class,boolean)",7,12
"org.apache.openjpa.kernel.DelegatingBroker.newQuery(String,Class,Object)",9,16
"org.apache.openjpa.kernel.DelegatingBroker.newQuery(String,Object)",8,14
org.apache.openjpa.kernel.DelegatingBroker.getIdentitySequence(ClassMetaData),9,13
org.apache.openjpa.kernel.DelegatingBroker.getValueSequence(FieldMetaData),11,14
"org.apache.openjpa.kernel.DelegatingBroker.lock(Object,int,int,OpCallbacks)",11,17
"org.apache.openjpa.kernel.DelegatingBroker.lock(Object,OpCallbacks)",9,13
"org.apache.openjpa.kernel.DelegatingBroker.lockAll(Collection,int,int,OpCallbacks)",11,17
"org.apache.openjpa.kernel.DelegatingBroker.lockAll(Collection,OpCallbacks)",9,13
org.apache.openjpa.kernel.DelegatingBroker.cancelAll(),5,6
org.apache.openjpa.kernel.DelegatingBroker.dirtyType(Class),7,10
org.apache.openjpa.kernel.DelegatingBroker.close(),5,6
org.apache.openjpa.kernel.DelegatingBroker.isClosed(),5,6
org.apache.openjpa.kernel.DelegatingBroker.isCloseInvoked(),6,8
org.apache.openjpa.kernel.DelegatingBroker.assertOpen(),4,4
org.apache.openjpa.kernel.DelegatingBroker.assertActiveTransaction(),6,8
org.apache.openjpa.kernel.DelegatingBroker.assertNontransactionalRead(),6,8
org.apache.openjpa.kernel.DelegatingBroker.assertWriteOperation(),6,8
org.apache.openjpa.kernel.DelegatingBroker.beforeCompletion(),5,6
org.apache.openjpa.kernel.DelegatingBroker.afterCompletion(int),6,8
org.apache.openjpa.kernel.DelegatingBroker.newInstance(Class),7,9
org.apache.openjpa.kernel.DelegatingBroker.isDetached(Object),7,9
org.apache.openjpa.kernel.DelegatingBroker.getCachePreparedQuery(),4,7
org.apache.openjpa.kernel.DelegatingBroker.setCachePreparedQuery(boolean),6,11
org.apache.openjpa.kernel.DelegatingBroker.getConnectionFactoryName(),5,8
org.apache.openjpa.kernel.DelegatingBroker.setConnectionFactoryName(String),6,16
org.apache.openjpa.kernel.DelegatingBroker.getConnectionFactory2Name(),5,8
org.apache.openjpa.kernel.DelegatingBroker.setConnectionFactory2Name(String),6,16
org.apache.openjpa.kernel.DelegatingBroker.getConnectionFactory(),4,6
org.apache.openjpa.kernel.DelegatingBroker.getConnectionFactory2(),4,6
org.apache.openjpa.kernel.DelegatingBroker.isCached(List<Object>),5,7
org.apache.openjpa.kernel.DelegatingBroker.getAllowReferenceToSiblingContext(),5,9
org.apache.openjpa.kernel.DelegatingBroker.setAllowReferenceToSiblingContext(boolean),6,13
org.apache.openjpa.kernel.DelegatingBroker.getPostLoadOnMerge(),4,7
org.apache.openjpa.kernel.DelegatingBroker.setPostLoadOnMerge(boolean),6,11
org.apache.openjpa.kernel.FindCallbacks.processArgument(Object),16,20
"org.apache.openjpa.kernel.FindCallbacks.processReturn(Object,OpenJPAStateManager)",7,10
org.apache.openjpa.kernel.exps.Distinct.Distinct(Val),6,9
org.apache.openjpa.kernel.exps.Distinct.getType(),2,2
org.apache.openjpa.kernel.exps.Distinct.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.Distinct.eval(Object,Object,StoreContext,Object[])",15,31
"org.apache.openjpa.kernel.exps.Distinct.eval(Collection,Object,StoreContext,Object[])",13,22
org.apache.openjpa.kernel.exps.Distinct.acceptVisit(ExpressionVisitor),7,13
"org.apache.openjpa.kernel.exps.WhenCondition.WhenCondition(Exp,Val)",4,10
org.apache.openjpa.kernel.exps.WhenCondition.getExp(),1,3
org.apache.openjpa.kernel.exps.WhenCondition.getVal(),1,3
org.apache.openjpa.kernel.exps.WhenCondition.acceptVisit(ExpressionVisitor),8,17
org.apache.openjpa.util.DelayedPriorityQueueProxy.DelayedPriorityQueueProxy(int),5,6
"org.apache.openjpa.util.DelayedPriorityQueueProxy.DelayedPriorityQueueProxy(int,Comparator)",6,11
org.apache.openjpa.util.DelayedPriorityQueueProxy.DelayedPriorityQueueProxy(Collection),6,9
org.apache.openjpa.util.DelayedPriorityQueueProxy.DelayedPriorityQueueProxy(PriorityQueue),5,12
org.apache.openjpa.util.DelayedPriorityQueueProxy.DelayedPriorityQueueProxy(SortedSet),7,12
org.apache.openjpa.util.DelayedPriorityQueueProxy.DelayedPriorityQueueProxy(),4,4
"org.apache.openjpa.util.DelayedPriorityQueueProxy.setOwner(OpenJPAStateManager,int)",18,45
"org.apache.openjpa.util.DelayedPriorityQueueProxy.detaching(OpenJPAStateManager,int)",5,19
org.apache.openjpa.util.DelayedPriorityQueueProxy.getOwner(),3,3
org.apache.openjpa.util.DelayedPriorityQueueProxy.getOwnerField(),2,3
org.apache.openjpa.util.DelayedPriorityQueueProxy.clone(),12,22
org.apache.openjpa.util.DelayedPriorityQueueProxy.getChangeTracker(),2,6
org.apache.openjpa.util.DelayedPriorityQueueProxy.setChangeTracker(CollectionChangeTracker),4,8
org.apache.openjpa.util.DelayedPriorityQueueProxy.copy(Object),5,11
org.apache.openjpa.util.DelayedPriorityQueueProxy.getElementType(),2,4
org.apache.openjpa.util.DelayedPriorityQueueProxy.setElementType(Class<>),4,9
"org.apache.openjpa.util.DelayedPriorityQueueProxy.newInstance(Class,Comparator,boolean,boolean)",14,34
org.apache.openjpa.util.DelayedPriorityQueueProxy.add(Object),9,31
org.apache.openjpa.util.DelayedPriorityQueueProxy.clear(),6,7
org.apache.openjpa.util.DelayedPriorityQueueProxy.iterator(),8,17
org.apache.openjpa.util.DelayedPriorityQueueProxy.remove(Object),9,30
org.apache.openjpa.util.DelayedPriorityQueueProxy.poll(),16,27
org.apache.openjpa.util.DelayedPriorityQueueProxy.offer(Object),8,24
org.apache.openjpa.util.DelayedPriorityQueueProxy.addAll(Collection),7,14
org.apache.openjpa.util.DelayedPriorityQueueProxy.remove(),16,27
org.apache.openjpa.util.DelayedPriorityQueueProxy.removeAll(Collection),7,14
org.apache.openjpa.util.DelayedPriorityQueueProxy.retainAll(Collection),9,17
org.apache.openjpa.util.DelayedPriorityQueueProxy.writeReplace(),8,12
org.apache.openjpa.util.DelayedPriorityQueueProxy.size(),5,7
org.apache.openjpa.util.DelayedPriorityQueueProxy.isEmpty(),5,7
org.apache.openjpa.util.DelayedPriorityQueueProxy.contains(Object),6,10
org.apache.openjpa.util.DelayedPriorityQueueProxy.toArray(),6,8
org.apache.openjpa.util.DelayedPriorityQueueProxy.toArray(Object[]),6,11
org.apache.openjpa.util.DelayedPriorityQueueProxy.containsAll(Collection),6,8
org.apache.openjpa.util.DelayedPriorityQueueProxy.element(),6,8
org.apache.openjpa.util.DelayedPriorityQueueProxy.peek(),6,8
org.apache.openjpa.util.DelayedPriorityQueueProxy.equals(Object),7,12
org.apache.openjpa.util.DelayedPriorityQueueProxy.hashCode(),6,9
org.apache.openjpa.util.DelayedPriorityQueueProxy.getDelayedField(),3,7
org.apache.openjpa.util.DelayedPriorityQueueProxy.getDelayedOwner(),5,6
org.apache.openjpa.util.DelayedPriorityQueueProxy.isDirectAccess(),2,4
org.apache.openjpa.util.DelayedPriorityQueueProxy.setDirectAccess(boolean),3,7
org.apache.openjpa.util.DelayedPriorityQueueProxy.getBrokerFactory(),2,6
org.apache.openjpa.util.DelayedPriorityQueueProxy.load(),4,5
org.apache.openjpa.util.DelayedPriorityQueueProxy.getBroker(),3,12
org.apache.openjpa.util.DelayedPriorityQueueProxy.closeBroker(),6,16
org.apache.openjpa.util.DelayedPriorityQueueProxy.getOwnerStateManager(),3,5
org.apache.openjpa.util.DelayedPriorityQueueProxy.isDetached(),1,2
org.apache.openjpa.util.DelayedPriorityQueueProxy.isDelayLoad(),5,5
org.apache.openjpa.enhance.TestPCSubclassNameConversion.testPCSubclassNameConversion(),10,22
org.apache.openjpa.kernel.ExpressionStoreQuery.ExpressionStoreQuery(ExpressionParser),6,12
org.apache.openjpa.kernel.ExpressionStoreQuery.getResolver(),2,5
"org.apache.openjpa.kernel.ExpressionStoreQuery.getResolver().$1.classForName(String,String[])",4,9
org.apache.openjpa.kernel.ExpressionStoreQuery.getResolver().$1.getFilterListener(String),5,10
org.apache.openjpa.kernel.ExpressionStoreQuery.getResolver().$1.getAggregateListener(String),5,10
org.apache.openjpa.kernel.ExpressionStoreQuery.getResolver().$1.getConfiguration(),5,7
org.apache.openjpa.kernel.ExpressionStoreQuery.getResolver().$1.getQueryContext(),3,5
org.apache.openjpa.kernel.ExpressionStoreQuery.setQuery(Object),14,19
org.apache.openjpa.kernel.ExpressionStoreQuery.getFilterListener(String),7,13
org.apache.openjpa.kernel.ExpressionStoreQuery.newCompilation(),8,9
org.apache.openjpa.kernel.ExpressionStoreQuery.getCompilation(),3,3
org.apache.openjpa.kernel.ExpressionStoreQuery.populateFromCompilation(Object),5,7
org.apache.openjpa.kernel.ExpressionStoreQuery.invalidateCompilation(),3,3
org.apache.openjpa.kernel.ExpressionStoreQuery.supportsInMemoryExecution(),3,3
"org.apache.openjpa.kernel.ExpressionStoreQuery.newInMemoryExecutor(ClassMetaData,boolean)",10,17
"org.apache.openjpa.kernel.ExpressionStoreQuery.newDataStoreExecutor(ClassMetaData,boolean)",8,16
"org.apache.openjpa.kernel.ExpressionStoreQuery.executeQuery(Executor,ClassMetaData,ClassMetaData[],boolean,ExpressionFactory[],QueryExpressions[],Object[],Range)",35,72
"org.apache.openjpa.kernel.ExpressionStoreQuery.executeDelete(Executor,ClassMetaData,ClassMetaData[],boolean,ExpressionFactory[],QueryExpressions[],Object[])",33,66
"org.apache.openjpa.kernel.ExpressionStoreQuery.executeUpdate(Executor,ClassMetaData,ClassMetaData[],boolean,ExpressionFactory[],QueryExpressions[],Object[])",34,66
"org.apache.openjpa.kernel.ExpressionStoreQuery.getDataStoreActions(ClassMetaData,ClassMetaData[],boolean,ExpressionFactory[],QueryExpressions[],Object[],Range)",39,74
"org.apache.openjpa.kernel.ExpressionStoreQuery.getIndependentExpressionCandidates(ClassMetaData,boolean)",13,19
org.apache.openjpa.kernel.ExpressionStoreQuery.getExpressionFactory(ClassMetaData),14,21
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.assertQueryExpression(),12,23
"org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.assertNotContainer(Value,StoreQuery)",29,59
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.validate(StoreQuery),8,14
"org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getRange(StoreQuery,Object[],Range)",24,59
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getResultClass(StoreQuery),4,6
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getResultShape(StoreQuery),5,9
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getAscending(StoreQuery),4,6
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getAlias(StoreQuery),5,7
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getProjectionAliases(StoreQuery),6,9
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getProjectionTypes(StoreQuery),4,4
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getOperation(StoreQuery),4,6
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.isAggregate(StoreQuery),4,6
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.isDistinct(StoreQuery),4,6
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.hasGrouping(StoreQuery),4,5
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getOrderedParameterTypes(StoreQuery),7,10
"org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.toParameterArray(StoreQuery,Map<>)",33,98
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.positionalParameterBase(Collection),17,37
"org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.validateParameterValue(Object,Object,Class)",16,38
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getUpdates(StoreQuery),5,7
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.getAccessPathMetaDatas(StoreQuery),17,48
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.isPacking(StoreQuery),3,3
"org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.ValidateGroupingExpressionVisitor.validate(QueryContext,QueryExpressions)",36,89
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.ValidateGroupingExpressionVisitor.ValidateGroupingExpressionVisitor(QueryContext),6,8
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.ValidateGroupingExpressionVisitor.enter(Value),19,28
org.apache.openjpa.kernel.ExpressionStoreQuery.AbstractExpressionExecutor.ValidateGroupingExpressionVisitor.exit(Value),4,6
"org.apache.openjpa.kernel.ExpressionStoreQuery.InMemoryExecutor.InMemoryExecutor(ExpressionStoreQuery,ClassMetaData,boolean,ExpressionParser,Object,InMemoryExpressionFactory)",31,76
org.apache.openjpa.kernel.ExpressionStoreQuery.InMemoryExecutor.getQueryExpressions(),3,5
"org.apache.openjpa.kernel.ExpressionStoreQuery.InMemoryExecutor.executeQuery(StoreQuery,Object[],Range)",51,158
"org.apache.openjpa.kernel.ExpressionStoreQuery.InMemoryExecutor.getDataStoreActions(StoreQuery,Object[],Range)",14,19
"org.apache.openjpa.kernel.ExpressionStoreQuery.InMemoryExecutor.getOrderingValue(StoreQuery,Object[],Object,int)",26,59
org.apache.openjpa.kernel.ExpressionStoreQuery.InMemoryExecutor.getProjectionTypes(StoreQuery),5,6
org.apache.openjpa.kernel.ExpressionStoreQuery.InMemoryExecutor.AssertNoVariablesExpressionVisitor.AssertNoVariablesExpressionVisitor(QueryContext),6,8
org.apache.openjpa.kernel.ExpressionStoreQuery.InMemoryExecutor.AssertNoVariablesExpressionVisitor.enter(Value),16,18
"org.apache.openjpa.kernel.ExpressionStoreQuery.DataStoreExecutor.DataStoreExecutor(ExpressionStoreQuery,ClassMetaData,boolean,ExpressionParser,Object)",30,80
org.apache.openjpa.kernel.ExpressionStoreQuery.DataStoreExecutor.getQueryExpressions(),3,5
"org.apache.openjpa.kernel.ExpressionStoreQuery.DataStoreExecutor.executeQuery(StoreQuery,Object[],Range)",15,25
"org.apache.openjpa.kernel.ExpressionStoreQuery.DataStoreExecutor.executeDelete(StoreQuery,Object[])",26,46
"org.apache.openjpa.kernel.ExpressionStoreQuery.DataStoreExecutor.executeUpdate(StoreQuery,Object[])",25,46
"org.apache.openjpa.kernel.ExpressionStoreQuery.DataStoreExecutor.getDataStoreActions(StoreQuery,Object[],Range)",13,22
"org.apache.openjpa.kernel.ExpressionStoreQuery.DataStoreExecutor.getOrderingValue(StoreQuery,Object[],Object,int)",34,81
org.apache.openjpa.kernel.ExpressionStoreQuery.DataStoreExecutor.getProjectionTypes(StoreQuery),5,6
"org.apache.openjpa.kernel.PNonTransState.initialize(StateManagerImpl,PCState)",19,26
org.apache.openjpa.kernel.PNonTransState.delete(StateManagerImpl),9,12
org.apache.openjpa.kernel.PNonTransState.transactional(StateManagerImpl),12,17
org.apache.openjpa.kernel.PNonTransState.release(StateManagerImpl),4,4
org.apache.openjpa.kernel.PNonTransState.evict(StateManagerImpl),5,5
"org.apache.openjpa.kernel.PNonTransState.beforeRead(StateManagerImpl,int)",10,11
"org.apache.openjpa.kernel.PNonTransState.beforeWrite(StateManagerImpl,int,boolean)",6,10
"org.apache.openjpa.kernel.PNonTransState.beforeOptimisticWrite(StateManagerImpl,int,boolean)",10,16
"org.apache.openjpa.kernel.PNonTransState.beforeWrite(StateManagerImpl,int,boolean,boolean)",48,77
"org.apache.openjpa.kernel.PNonTransState.beforeNontransactionalWrite(StateManagerImpl,int,boolean)",8,8
org.apache.openjpa.kernel.PNonTransState.isPersistent(),1,1
org.apache.openjpa.kernel.PNonTransState.toString(),3,4
"org.apache.openjpa.kernel.exps.BindVariableAndExpression.BindVariableAndExpression(BindVariableExpression,Exp)",8,17
"org.apache.openjpa.kernel.exps.BindVariableAndExpression.eval(Object,Object,StoreContext,Object[])",32,75
"org.apache.openjpa.kernel.exps.BindVariableAndExpression.eval(Collection,StoreContext,Object[])",11,20
org.apache.openjpa.kernel.exps.Subquery.getCandidateAlias(),4,6
org.apache.openjpa.kernel.exps.Subquery.setSubqAlias(String),6,10
org.apache.openjpa.kernel.exps.Subquery.getSubqAlias(),3,5
org.apache.openjpa.kernel.exps.Subquery.setQueryExpressions(QueryExpressions),5,9
org.apache.openjpa.kernel.exps.Subquery.getSelect(),2,2
"org.apache.openjpa.util.BooleanId.BooleanId(Class,Boolean)",3,5
"org.apache.openjpa.util.BooleanId.BooleanId(Class,String)",4,6
"org.apache.openjpa.util.BooleanId.BooleanId(Class,boolean)",2,5
"org.apache.openjpa.util.BooleanId.BooleanId(Class,boolean,boolean)",3,7
org.apache.openjpa.util.BooleanId.getId(),1,1
org.apache.openjpa.util.BooleanId.getIdObject(),3,4
org.apache.openjpa.util.BooleanId.toString(),2,4
org.apache.openjpa.util.BooleanId.idEquals(OpenJPAId),3,4
org.apache.openjpa.util.BooleanId.idHash(),4,5
org.apache.openjpa.util.StoreException.StoreException(String),4,5
org.apache.openjpa.util.StoreException.StoreException(Message),4,6
org.apache.openjpa.util.StoreException.StoreException(Throwable),4,5
"org.apache.openjpa.util.StoreException.StoreException(String,Throwable)",6,8
"org.apache.openjpa.util.StoreException.StoreException(Message,Throwable)",6,9
org.apache.openjpa.util.StoreException.getType(),2,2
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.isStarted(),3,6
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.stop(),4,4
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.start(),4,4
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.getConfiguration(),4,9
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.setInstrument(String),22,38
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.getInstrument(),11,13
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.setOptions(String),7,10
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.getOptions(),5,7
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.getInstrumentAliases(),18,36
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.addInstrument(Instrument),16,21
"org.apache.openjpa.lib.instrumentation.InstrumentationProvider.stopInstruments(InstrumentationLevel,Object)",12,24
"org.apache.openjpa.lib.instrumentation.InstrumentationProvider.startInstruments(InstrumentationLevel,Object)",12,24
"org.apache.openjpa.lib.instrumentation.InstrumentationProvider.initializeInstrument(Instrument,Object)",11,20
"org.apache.openjpa.lib.instrumentation.InstrumentationProvider.initializeInstrument(Instrument,String,Object)",16,30
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.getInstrumentByName(String),7,17
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.removeInstrumentByName(String),8,15
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.getInstruments(),5,9
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.startInstrument(Instrument),4,10
org.apache.openjpa.lib.instrumentation.InstrumentationProvider.stopInstrument(Instrument),4,10
"org.apache.openjpa.lib.instrumentation.InstrumentationProvider.stopInstrument(Instrument,boolean)",8,20
org.apache.openjpa.persistence.PersistenceProductDerivation.PersistenceProductDerivation(),6,10
"org.apache.openjpa.persistence.PersistenceProductDerivation.putBrokerFactoryAliases(Map<String,String>)",5,6
org.apache.openjpa.persistence.PersistenceProductDerivation.getType(),2,3
org.apache.openjpa.persistence.PersistenceProductDerivation.getConfigurationPrefix(),3,4
org.apache.openjpa.persistence.PersistenceProductDerivation.getSupportedQueryHints(),5,6
org.apache.openjpa.persistence.PersistenceProductDerivation.validate(),16,16
org.apache.openjpa.persistence.PersistenceProductDerivation.beforeConfigurationLoad(Configuration),37,247
org.apache.openjpa.persistence.PersistenceProductDerivation.configureBeanValidation(OpenJPAConfigurationImpl),51,233
org.apache.openjpa.persistence.PersistenceProductDerivation.afterSpecificationSet(Configuration),39,108
"org.apache.openjpa.persistence.PersistenceProductDerivation.load(PersistenceUnitInfo,Map)",23,70
"org.apache.openjpa.persistence.PersistenceProductDerivation.load(String,String,Map)",28,67
"org.apache.openjpa.persistence.PersistenceProductDerivation.load(String,String,ClassLoader)",10,23
"org.apache.openjpa.persistence.PersistenceProductDerivation.load(File,String)",17,29
org.apache.openjpa.persistence.PersistenceProductDerivation.getDefaultResourceLocation(),4,4
org.apache.openjpa.persistence.PersistenceProductDerivation.getAnchorsInFile(File),13,23
org.apache.openjpa.persistence.PersistenceProductDerivation.getUnitNames(ConfigurationParser),23,56
org.apache.openjpa.persistence.PersistenceProductDerivation.getAnchorsInResource(String),26,49
org.apache.openjpa.persistence.PersistenceProductDerivation.loadGlobals(ClassLoader),33,79
org.apache.openjpa.persistence.PersistenceProductDerivation.loadDefaults(ClassLoader),8,16
"org.apache.openjpa.persistence.PersistenceProductDerivation.checkPuNameCollisions(Log,String)",7,15
"org.apache.openjpa.persistence.PersistenceProductDerivation.getResourceURLs(String,ClassLoader)",22,51
"org.apache.openjpa.persistence.PersistenceProductDerivation.load(ConfigurationProviderImpl,String,String,Map,ClassLoader,boolean)",65,224
"org.apache.openjpa.persistence.PersistenceProductDerivation.parseResources(ConfigurationParser,List<URL>,String,ClassLoader)",26,65
"org.apache.openjpa.persistence.PersistenceProductDerivation.findUnit(List<PersistenceUnitInfoImpl>,String,ClassLoader)",37,107
"org.apache.openjpa.persistence.PersistenceProductDerivation.isOpenJPAPersistenceProvider(PersistenceUnitInfo,ClassLoader)",26,53
org.apache.openjpa.persistence.PersistenceProductDerivation.warnUnknownProvider(PersistenceUnitInfo),13,21
org.apache.openjpa.persistence.PersistenceProductDerivation.log(String),15,20
"org.apache.openjpa.persistence.PersistenceProductDerivation.addPuNameCollision(String,String,String)",7,29
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationProviderImpl.ConfigurationProviderImpl(),3,3
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationProviderImpl.ConfigurationProviderImpl(Map),5,6
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationProviderImpl.setSource(String),5,10
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationProviderImpl.setInto(Configuration),73,281
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.ConfigurationParser(Map),8,13
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.parse(URL),19,37
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.parse(File),28,53
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.getSchemaSource(),27,53
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.reset(),6,7
"org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.startElement(String,Attributes)",17,28
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.endElement(String),44,134
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.setExcludeUnlistedClasses(String),20,53
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.startPersistenceUnit(Attributes),31,77
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.endPersistenceUnit(),6,9
org.apache.openjpa.persistence.PersistenceProductDerivation.ConfigurationParser.getPersistenceVersion(),20,46
"org.apache.openjpa.persistence.PersistenceProductDerivation.PUNameCollision.PUNameCollision(String,String,String)",9,21
org.apache.openjpa.persistence.PersistenceProductDerivation.PUNameCollision.logCollision(Log),13,18
"org.apache.openjpa.persistence.PersistenceProductDerivation.PUNameCollision.addCollision(String,String)",5,12
org.apache.openjpa.lib.rop.ResultList<E>.isProviderOpen(),3,4
org.apache.openjpa.lib.rop.ResultList<E>.getUserObject(),5,8
org.apache.openjpa.lib.rop.ResultList<E>.setUserObject(Object),5,10
org.apache.openjpa.lib.rop.ResultList<E>.close(),2,3
org.apache.openjpa.lib.rop.ResultList<E>.isClosed(),3,4
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.setPrettyPrint(boolean),22,58
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.getPrettyPrint(),3,7
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.setPrettyPrintLineLength(int),19,34
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.getPrettyPrintLineLength(),5,13
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.getPrintParameters(),15,20
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.setPrintParameters(boolean),3,9
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.setWarningAction(String),12,23
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.getWarningAction(),6,9
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.setWarningHandler(SQLWarningHandler),5,14
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.getWarningHandler(),4,9
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.getLogs(),5,7
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.decorate(Connection),6,9
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.newLoggingConnection(Connection),5,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.wrap(SQLException,Statement)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.wrap(SQLException,String)",5,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.wrap(SQLException,Statement,String)",7,14
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.wrap(SQLException,Statement,int)",10,19
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.wrap(SQLException,Statement,String,int)",14,42
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.SQLWarningHandler.handleWarning(SQLWarning),4,7
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingConnection(Connection),5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.prepareStatement(String,boolean)",12,33
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.prepareStatement(String,int,int,boolean)",14,37
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.createStatement(boolean),10,23
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.createStatement(int,int,boolean)",12,27
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.prepareCall(String,boolean)",13,34
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.newLoggingPreparedStatement(PreparedStatement,String)",7,18
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.newLoggingCallableStatement(CallableStatement,String)",7,17
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.newLoggingStatement(Statement),5,11
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.newLoggingDatabaseMetaData(DatabaseMetaData),6,19
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.commit(),15,27
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.rollback(),15,27
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.close(),12,17
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.setSavepoint(),16,30
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.setSavepoint(String),18,34
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.rollback(Savepoint),20,45
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.releaseSavepoint(Savepoint),20,47
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.createStatement(int,int,int,boolean)",15,41
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.prepareStatement(String,int,int,int,boolean)",17,51
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.prepareStatement(String,int,boolean)",15,39
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.prepareStatement(String,int[],boolean)",14,37
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.prepareStatement(String,String[],boolean)",14,38
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.getMetaData(boolean),7,14
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.logTime(long),9,19
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.logSQL(Statement),11,18
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.logBatchSQL(Statement),12,20
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.handleSQLErrors(SQLException),16,44
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.handleSQLErrors(Statement,SQLException)",17,48
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.handleSQLErrors(ResultSet,SQLException)",16,47
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.handleSQLWarning(SQLWarning),22,90
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.LoggingDatabaseMetaData(DatabaseMetaData),5,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean)",18,34
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getCatalogs(),11,15
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getColumnPrivileges(String,String,String,String)",18,37
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getColumns(String,String,String,String)",18,46
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getCrossReference(String,String,String,String,String,String)",18,60
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getExportedKeys(String,String,String)",16,30
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getImportedKeys(String,String,String)",16,30
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean)",18,34
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getPrimaryKeys(String,String,String)",16,30
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getProcedureColumns(String,String,String,String)",18,49
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getProcedures(String,String,String)",17,36
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getSchemas(),11,15
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getTablePrivileges(String,String,String)",17,33
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getTables(String,String,String,String[])",18,39
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getTableTypes(),12,18
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getTypeInfo(),12,18
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getUDTs(String,String,String,int[])",17,29
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingDatabaseMetaData.getVersionColumns(String,String,String)",16,30
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingStatement.LoggingStatement(Statement),6,9
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingStatement.newLoggingResultSet(ResultSet,Statement)",5,14
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingStatement.appendInfo(StringBuffer),10,21
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingStatement.wrapResult(ResultSet,boolean)",4,14
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingStatement.cancel(),9,13
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingStatement.executeQuery(String,boolean)",19,42
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingStatement.executeUpdate(String),17,38
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingStatement.execute(String),16,36
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingStatement.executeUpdate(String,int)",17,38
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingStatement.executeUpdate(String,int[])",17,38
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingStatement.executeUpdate(String,String[])",17,39
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingStatement.execute(String,int)",16,36
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingStatement.execute(String,int[])",16,36
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingStatement.execute(String,String[])",16,37
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.LoggingPreparedStatement(PreparedStatement,String)",8,15
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.newLoggingResultSet(ResultSet,PreparedStatement)",6,15
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.wrapResult(ResultSet,boolean)",4,14
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.executeQuery(String,boolean)",21,44
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.executeUpdate(String),19,40
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.execute(String),18,38
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.executeQuery(boolean),20,41
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.executeUpdate(),18,36
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.executeBatch(),85,252
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.execute(),17,34
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.executeUpdate(String,int)",19,37
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.executeUpdate(String,int[])",19,37
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.executeUpdate(String,String[])",19,38
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.execute(String,int)",18,35
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.execute(String,int[])",18,35
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.execute(String,String[])",18,36
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.cancel(),9,14
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setNull(int,int)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setBoolean(int,boolean)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setByte(int,byte)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setShort(int,short)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setInt(int,int)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setLong(int,long)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setFloat(int,float)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setDouble(int,double)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setBigDecimal(int,BigDecimal)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setString(int,String)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setBytes(int,byte[])",6,9
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setDate(int,Date)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setTime(int,Time)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setTimestamp(int,Timestamp)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setAsciiStream(int,InputStream,int)",8,15
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setUnicodeStream(int,InputStream,int)",8,15
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setBinaryStream(int,InputStream,int)",8,15
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setBinaryStream(int,InputStream)",8,15
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.clearParameters(),4,6
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setObject(int,Object,int,int)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setObject(int,Object,int)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setObject(int,Object)",6,11
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.addBatch(),25,54
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setCharacterStream(int,Reader,int)",8,13
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setRef(int,Ref)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setBlob(int,Blob)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setClob(int,Clob)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setArray(int,Array)",6,11
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.getMetaData(),6,10
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setDate(int,Date,Calendar)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setTime(int,Time,Calendar)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setTimestamp(int,Timestamp,Calendar)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setNull(int,int,String)",6,8
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setURL(int,URL)",6,11
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.appendInfo(StringBuffer),17,71
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.clearLogParameters(boolean),5,10
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.shouldTrackParameters(),6,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setLogParameter(int,boolean)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setLogParameter(int,byte)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setLogParameter(int,double)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setLogParameter(int,float)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setLogParameter(int,int)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setLogParameter(int,long)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setLogParameter(int,short)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setLogParameter(int,String,Object)",10,16
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingPreparedStatement.setLogParameter(int,String)",13,25
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingResultSet.LoggingResultSet(ResultSet,Statement)",5,8
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingResultSet.next(),8,15
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingResultSet.close(),9,17
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingResultSet.beforeFirst(),8,15
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingResultSet.afterLast(),8,15
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingResultSet.first(),8,15
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingResultSet.last(),8,15
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingResultSet.absolute(int),9,17
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingResultSet.relative(int),9,17
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingResultSet.previous(),9,17
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.LoggingCallableStatement(CallableStatement,String)",8,15
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.newLoggingResultSet(ResultSet,CallableStatement)",6,15
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.wrapResult(ResultSet,boolean)",4,14
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.executeQuery(String,boolean)",21,44
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.executeUpdate(String),19,40
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.execute(String),18,38
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.executeQuery(boolean),20,40
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.executeUpdate(),18,36
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.executeBatch(),84,251
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.execute(),17,34
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.executeUpdate(String,int)",19,37
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.executeUpdate(String,int[])",19,37
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.executeUpdate(String,String[])",19,38
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.execute(String,int)",18,35
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.execute(String,int[])",18,35
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.execute(String,String[])",18,36
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.cancel(),9,14
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setNull(int,int)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setBoolean(int,boolean)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setByte(int,byte)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setShort(int,short)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setInt(int,int)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setLong(int,long)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setFloat(int,float)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setDouble(int,double)",5,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setBigDecimal(int,BigDecimal)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setString(int,String)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setBytes(int,byte[])",6,9
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setDate(int,Date)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setTime(int,Time)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setTimestamp(int,Timestamp)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setAsciiStream(int,InputStream,int)",8,15
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setUnicodeStream(int,InputStream,int)",8,15
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setBinaryStream(int,InputStream,int)",8,15
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.clearParameters(),4,6
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setObject(int,Object,int,int)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setObject(int,Object,int)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setObject(int,Object)",6,11
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.addBatch(),24,54
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setCharacterStream(int,Reader,int)",8,13
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setRef(int,Ref)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setBlob(int,Blob)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setClob(int,Clob)",6,11
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setArray(int,Array)",6,11
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.getMetaData(),6,10
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setDate(int,Date,Calendar)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setTime(int,Time,Calendar)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setTimestamp(int,Timestamp,Calendar)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setNull(int,int,String)",6,8
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setURL(int,URL)",6,11
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.appendInfo(StringBuffer),16,65
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.clearLogParameters(boolean),5,10
org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.shouldTrackParameters(),6,7
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setLogParameter(int,boolean)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setLogParameter(int,byte)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setLogParameter(int,double)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setLogParameter(int,float)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setLogParameter(int,int)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setLogParameter(int,long)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setLogParameter(int,short)",7,12
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setLogParameter(int,String,Object)",10,16
"org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.LoggingCallableStatement.setLogParameter(int,String)",13,25
org.apache.openjpa.jdbc.sql.SybaseDictionary.SybaseDictionary(),178,287
"org.apache.openjpa.jdbc.sql.SybaseDictionary.getJDBCType(int,boolean)",17,34
"org.apache.openjpa.jdbc.sql.SybaseDictionary.setBigInteger(PreparedStatement,int,BigInteger,Column)",21,31
org.apache.openjpa.jdbc.sql.SybaseDictionary.getCreateTableSQL(Table),38,130
"org.apache.openjpa.jdbc.sql.SybaseDictionary.getDeclareColumnSQL(Column,boolean)",31,66
org.apache.openjpa.jdbc.sql.SybaseDictionary.getDropColumnSQL(Column),9,29
org.apache.openjpa.jdbc.sql.SybaseDictionary.refSchemaComponents(Table),21,37
org.apache.openjpa.jdbc.sql.SybaseDictionary.endConfiguration(),18,32
org.apache.openjpa.jdbc.sql.SybaseDictionary.decorate(Connection),48,104
"org.apache.openjpa.jdbc.sql.SybaseDictionary.getStringFromResultSet(ResultSet,String,String)",25,53
"org.apache.openjpa.jdbc.sql.SybaseDictionary.getBooleanFromResultSet(ResultSet,String,String)",25,48
org.apache.openjpa.jdbc.sql.SybaseDictionary.newPrimaryKey(ResultSet),21,77
org.apache.openjpa.jdbc.sql.SybaseDictionary.newIndex(ResultSet),20,93
"org.apache.openjpa.jdbc.sql.SybaseDictionary.isFatalException(int,SQLException)",9,19
org.apache.openjpa.jdbc.sql.SybaseDictionary.SybaseConnection.SybaseConnection(Connection),3,5
org.apache.openjpa.jdbc.sql.SybaseDictionary.SybaseConnection.getCatalog(),4,8
org.apache.openjpa.jdbc.sql.SybaseDictionary.SybaseConnection.setAutoCommit(boolean),28,43
"org.apache.openjpa.jdbc.sql.SybaseDictionary.getIsNullSQL(String,int)",10,23
"org.apache.openjpa.jdbc.sql.SybaseDictionary.getIsNotNullSQL(String,int)",10,23
org.apache.openjpa.jdbc.sql.SybaseDictionary.getIdentityColumnName(),4,7
"org.apache.openjpa.jdbc.sql.SybaseDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",11,37
org.apache.openjpa.persistence.query.Aggregate.distinct(),8,8
"org.apache.openjpa.persistence.query.InExpression.InExpression(Expression,ArrayExpression)",5,10
"org.apache.openjpa.persistence.query.InExpression.InExpression(Expression,Expression)",5,11
org.apache.openjpa.lib.util.FormatPreservingProperties.FormatPreservingProperties(),3,3
org.apache.openjpa.lib.util.FormatPreservingProperties.FormatPreservingProperties(Properties),4,6
org.apache.openjpa.lib.util.FormatPreservingProperties.setDefaultEntryDelimiter(char),8,17
org.apache.openjpa.lib.util.FormatPreservingProperties.getDefaultEntryDelimiter(),4,8
org.apache.openjpa.lib.util.FormatPreservingProperties.setAddWhitespaceAfterDelimiter(boolean),14,32
org.apache.openjpa.lib.util.FormatPreservingProperties.getAddWhitespaceAfterDelimiter(),14,29
org.apache.openjpa.lib.util.FormatPreservingProperties.setInsertTimestamp(boolean),16,31
org.apache.openjpa.lib.util.FormatPreservingProperties.getInsertTimestamp(),16,26
org.apache.openjpa.lib.util.FormatPreservingProperties.setAllowDuplicates(boolean),23,42
org.apache.openjpa.lib.util.FormatPreservingProperties.getAllowDuplicates(),23,37
org.apache.openjpa.lib.util.FormatPreservingProperties.getProperty(String),3,6
"org.apache.openjpa.lib.util.FormatPreservingProperties.getProperty(String,String)",4,9
"org.apache.openjpa.lib.util.FormatPreservingProperties.setProperty(String,String)",6,9
org.apache.openjpa.lib.util.FormatPreservingProperties.putAll(Map),14,24
org.apache.openjpa.lib.util.FormatPreservingProperties.remove(Object),7,13
org.apache.openjpa.lib.util.FormatPreservingProperties.clear(),3,5
org.apache.openjpa.lib.util.FormatPreservingProperties.clone(),13,32
org.apache.openjpa.lib.util.FormatPreservingProperties.writeObject(ObjectOutputStream),5,8
org.apache.openjpa.lib.util.FormatPreservingProperties.readObject(ObjectInputStream),7,11
"org.apache.openjpa.lib.util.FormatPreservingProperties.put(Object,Object)",20,33
org.apache.openjpa.lib.util.FormatPreservingProperties.load(InputStream),20,34
org.apache.openjpa.lib.util.FormatPreservingProperties.loadProperties(InputStream),31,177
"org.apache.openjpa.lib.util.FormatPreservingProperties.readEscape(String,int,StringBuilder)",32,68
org.apache.openjpa.lib.util.FormatPreservingProperties.isSpace(char),3,3
"org.apache.openjpa.lib.util.FormatPreservingProperties.save(OutputStream,String)",7,8
"org.apache.openjpa.lib.util.FormatPreservingProperties.store(OutputStream,String)",46,114
"org.apache.openjpa.lib.util.FormatPreservingProperties.writeProperty(String,PrintWriter,boolean)",17,36
"org.apache.openjpa.lib.util.FormatPreservingProperties.formatValue(String,StringBuilder,boolean)",29,88
"org.apache.openjpa.lib.util.FormatPreservingProperties.DuplicateKeyException.DuplicateKeyException(String,Object,String)",9,16
org.apache.openjpa.lib.util.FormatPreservingProperties.PropertyLine.PropertyLine(String),4,7
org.apache.openjpa.lib.util.FormatPreservingProperties.PropertyLine.append(String),7,12
org.apache.openjpa.lib.util.FormatPreservingProperties.PropertyLine.setPropertyKey(String),4,10
org.apache.openjpa.lib.util.FormatPreservingProperties.PropertyLine.getPropertyKey(),3,5
org.apache.openjpa.lib.util.FormatPreservingProperties.PropertyLine.setPropertyValue(String),4,10
org.apache.openjpa.lib.util.FormatPreservingProperties.PropertyLine.getPropertyValue(),3,5
"org.apache.openjpa.lib.util.FormatPreservingProperties.PropertyLine.write(PrintWriter,Collection,boolean)",34,103
"org.apache.openjpa.lib.util.FormatPreservingProperties.PropertyLineReader.PropertyLineReader(InputStream,PropertySource)",13,22
org.apache.openjpa.lib.util.FormatPreservingProperties.PropertyLineReader.readPropertyLine(),5,13
"org.apache.openjpa.lib.util.FormatPreservingProperties.LineEndingStream.LineEndingStream(InputStream,PropertySource)",5,9
org.apache.openjpa.lib.util.FormatPreservingProperties.LineEndingStream.read(),4,5
"org.apache.openjpa.lib.util.FormatPreservingProperties.LineEndingStream.read(byte[],int,int)",5,7
org.apache.openjpa.lib.rop.TestLazyForwardResultList.TestLazyForwardResultList(String),6,8
org.apache.openjpa.lib.rop.TestLazyForwardResultList.getResultList(ResultObjectProvider),6,13
org.apache.openjpa.lib.rop.TestLazyForwardResultList.main(String[]),3,4
org.apache.openjpa.persistence.query.OrderableItem.OrderableItem(ExpressionImpl),5,6
org.apache.openjpa.persistence.query.OrderableItem.getExpression(),2,3
"org.apache.openjpa.persistence.query.OrderableItem.OrderableItem(ExpressionImpl,Boolean)",6,9
org.apache.openjpa.persistence.query.OrderableItem.asExpression(AliasContext),7,15
org.apache.openjpa.lib.graph.TestDepthFirstAnalysis.setUp(),2,3
org.apache.openjpa.lib.graph.TestDepthFirstAnalysis.setUpGraph1(),9,67
org.apache.openjpa.lib.graph.TestDepthFirstAnalysis.setUpGraph2(),10,88
org.apache.openjpa.lib.graph.TestDepthFirstAnalysis.testNodeSorting(),14,31
org.apache.openjpa.lib.graph.TestDepthFirstAnalysis.testEdgeTyping(),11,30
org.apache.openjpa.lib.graph.TestDepthFirstAnalysis.testBackEdges(),15,69
org.apache.openjpa.lib.graph.TestDepthFirstAnalysis.testForwardEdges(),16,56
org.apache.openjpa.lib.graph.TestDepthFirstAnalysis.main(String[]),6,7
"org.apache.openjpa.persistence.EntityNotFoundException.EntityNotFoundException(String,Throwable[],Object,boolean)",10,17
org.apache.openjpa.persistence.EntityNotFoundException.getType(),2,2
org.apache.openjpa.persistence.EntityNotFoundException.getSubtype(),5,5
org.apache.openjpa.persistence.EntityNotFoundException.isFatal(),1,2
org.apache.openjpa.persistence.EntityNotFoundException.getCause(),5,6
org.apache.openjpa.persistence.EntityNotFoundException.getNestedThrowables(),5,8
org.apache.openjpa.persistence.EntityNotFoundException.getFailedObject(),2,4
org.apache.openjpa.persistence.EntityNotFoundException.toString(),2,4
org.apache.openjpa.persistence.EntityNotFoundException.printStackTrace(),5,8
org.apache.openjpa.persistence.EntityNotFoundException.printStackTrace(PrintStream),7,12
org.apache.openjpa.persistence.EntityNotFoundException.printStackTrace(PrintWriter),7,12
org.apache.openjpa.persistence.EntityNotFoundException.writeObject(ObjectOutputStream),11,22
org.apache.openjpa.persistence.EntityNotFoundException.readObject(ObjectInputStream),10,17
org.apache.openjpa.jdbc.sql.Row.getTable(),2,4
org.apache.openjpa.jdbc.sql.Row.getAction(),2,3
org.apache.openjpa.jdbc.sql.Row.getFailedObject(),6,9
org.apache.openjpa.jdbc.sql.Row.setFailedObject(Object),15,23
org.apache.openjpa.jdbc.sql.Row.isValid(),4,4
org.apache.openjpa.jdbc.sql.Row.setValid(boolean),4,6
org.apache.openjpa.jdbc.sql.Row.getPrimaryKey(),17,22
org.apache.openjpa.jdbc.sql.Row.setPrimaryKey(OpenJPAStateManager),9,12
"org.apache.openjpa.jdbc.sql.Row.setPrimaryKey(ColumnIO,OpenJPAStateManager)",14,17
org.apache.openjpa.jdbc.sql.Row.wherePrimaryKey(OpenJPAStateManager),10,12
"org.apache.openjpa.jdbc.sql.Row.setForeignKey(ForeignKey,OpenJPAStateManager)",16,24
"org.apache.openjpa.jdbc.sql.Row.setForeignKey(ForeignKey,ColumnIO,OpenJPAStateManager)",21,29
"org.apache.openjpa.jdbc.sql.Row.whereForeignKey(ForeignKey,OpenJPAStateManager)",18,25
"org.apache.openjpa.jdbc.sql.Row.setArray(Column,Array)",9,12
"org.apache.openjpa.jdbc.sql.Row.setAsciiStream(Column,InputStream,int)",12,15
"org.apache.openjpa.jdbc.sql.Row.setBigDecimal(Column,BigDecimal)",9,12
"org.apache.openjpa.jdbc.sql.Row.setBigInteger(Column,BigInteger)",9,12
"org.apache.openjpa.jdbc.sql.Row.setBinaryStream(Column,InputStream,int)",12,15
"org.apache.openjpa.jdbc.sql.Row.setBlob(Column,Blob)",9,12
"org.apache.openjpa.jdbc.sql.Row.setBoolean(Column,boolean)",8,10
"org.apache.openjpa.jdbc.sql.Row.setByte(Column,byte)",8,10
"org.apache.openjpa.jdbc.sql.Row.setBytes(Column,byte[])",9,11
"org.apache.openjpa.jdbc.sql.Row.setCalendar(Column,Calendar)",9,12
"org.apache.openjpa.jdbc.sql.Row.setChar(Column,char)",8,10
"org.apache.openjpa.jdbc.sql.Row.setCharacterStream(Column,Reader,int)",12,14
"org.apache.openjpa.jdbc.sql.Row.setClob(Column,Clob)",9,12
"org.apache.openjpa.jdbc.sql.Row.setDate(Column,Date)",9,12
"org.apache.openjpa.jdbc.sql.Row.setDate(Column,java.sql.Date,Calendar)",12,16
"org.apache.openjpa.jdbc.sql.Row.setDouble(Column,double)",8,10
"org.apache.openjpa.jdbc.sql.Row.setFloat(Column,float)",8,10
"org.apache.openjpa.jdbc.sql.Row.setInt(Column,int)",8,10
"org.apache.openjpa.jdbc.sql.Row.setLong(Column,long)",8,10
"org.apache.openjpa.jdbc.sql.Row.setLocale(Column,Locale)",9,12
org.apache.openjpa.jdbc.sql.Row.setNull(Column),7,9
"org.apache.openjpa.jdbc.sql.Row.setNull(Column,boolean)",10,16
"org.apache.openjpa.jdbc.sql.Row.setNumber(Column,Number)",8,10
"org.apache.openjpa.jdbc.sql.Row.setObject(Column,Object)",10,20
"org.apache.openjpa.jdbc.sql.Row.setRaw(Column,String)",12,18
"org.apache.openjpa.jdbc.sql.Row.setRelationId(Column,OpenJPAStateManager,RelationId)",28,35
"org.apache.openjpa.jdbc.sql.Row.setShort(Column,short)",8,10
"org.apache.openjpa.jdbc.sql.Row.setString(Column,String)",9,12
"org.apache.openjpa.jdbc.sql.Row.setTime(Column,Time,Calendar)",11,14
"org.apache.openjpa.jdbc.sql.Row.setTimestamp(Column,Timestamp,Calendar)",11,14
"org.apache.openjpa.jdbc.sql.Row.whereArray(Column,Array)",11,13
"org.apache.openjpa.jdbc.sql.Row.whereAsciiStream(Column,InputStream,int)",14,16
"org.apache.openjpa.jdbc.sql.Row.whereBigDecimal(Column,BigDecimal)",11,13
"org.apache.openjpa.jdbc.sql.Row.whereBigInteger(Column,BigInteger)",11,13
"org.apache.openjpa.jdbc.sql.Row.whereBinaryStream(Column,InputStream,int)",14,16
"org.apache.openjpa.jdbc.sql.Row.whereBlob(Column,Blob)",11,13
"org.apache.openjpa.jdbc.sql.Row.whereBoolean(Column,boolean)",10,11
"org.apache.openjpa.jdbc.sql.Row.whereByte(Column,byte)",10,11
"org.apache.openjpa.jdbc.sql.Row.whereBytes(Column,byte[])",11,12
"org.apache.openjpa.jdbc.sql.Row.whereCalendar(Column,Calendar)",11,13
"org.apache.openjpa.jdbc.sql.Row.whereChar(Column,char)",10,11
"org.apache.openjpa.jdbc.sql.Row.whereCharacterStream(Column,Reader,int)",14,15
"org.apache.openjpa.jdbc.sql.Row.whereClob(Column,Clob)",11,13
"org.apache.openjpa.jdbc.sql.Row.whereDate(Column,Date)",11,13
"org.apache.openjpa.jdbc.sql.Row.whereDate(Column,java.sql.Date,Calendar)",14,17
"org.apache.openjpa.jdbc.sql.Row.whereDouble(Column,double)",10,11
"org.apache.openjpa.jdbc.sql.Row.whereFloat(Column,float)",10,11
"org.apache.openjpa.jdbc.sql.Row.whereInt(Column,int)",10,11
"org.apache.openjpa.jdbc.sql.Row.whereLong(Column,long)",10,11
"org.apache.openjpa.jdbc.sql.Row.whereLocale(Column,Locale)",11,13
org.apache.openjpa.jdbc.sql.Row.whereNull(Column),9,10
"org.apache.openjpa.jdbc.sql.Row.whereNumber(Column,Number)",10,11
"org.apache.openjpa.jdbc.sql.Row.whereObject(Column,Object)",12,21
"org.apache.openjpa.jdbc.sql.Row.whereRaw(Column,String)",13,17
"org.apache.openjpa.jdbc.sql.Row.whereShort(Column,short)",10,11
"org.apache.openjpa.jdbc.sql.Row.whereString(Column,String)",11,13
"org.apache.openjpa.jdbc.sql.Row.whereTime(Column,Time,Calendar)",13,15
"org.apache.openjpa.jdbc.sql.Row.whereTimestamp(Column,Timestamp,Calendar)",13,15
"org.apache.openjpa.persistence.QueryTimeoutException.QueryTimeoutException(String,Throwable[],Object)",9,12
"org.apache.openjpa.persistence.QueryTimeoutException.QueryTimeoutException(String,Throwable[],Object,boolean)",10,23
org.apache.openjpa.persistence.QueryTimeoutException.getType(),2,2
org.apache.openjpa.persistence.QueryTimeoutException.getSubtype(),4,4
org.apache.openjpa.persistence.QueryTimeoutException.isFatal(),1,2
org.apache.openjpa.persistence.QueryTimeoutException.getCause(),5,6
org.apache.openjpa.persistence.QueryTimeoutException.getNestedThrowables(),5,8
org.apache.openjpa.persistence.QueryTimeoutException.getFailedObject(),2,4
org.apache.openjpa.persistence.QueryTimeoutException.toString(),2,4
org.apache.openjpa.persistence.QueryTimeoutException.printStackTrace(),5,8
org.apache.openjpa.persistence.QueryTimeoutException.printStackTrace(PrintStream),7,12
org.apache.openjpa.persistence.QueryTimeoutException.printStackTrace(PrintWriter),7,12
org.apache.openjpa.persistence.QueryTimeoutException.writeObject(ObjectOutputStream),11,22
org.apache.openjpa.persistence.QueryTimeoutException.readObject(ObjectInputStream),10,17
org.apache.openjpa.datacache.DataCache.getName(),8,10
org.apache.openjpa.datacache.DataCache.setName(String),7,10
org.apache.openjpa.datacache.DataCache.initialize(DataCacheManager),7,12
"org.apache.openjpa.datacache.DataCache.commit(Collection<DataCachePCData>,Collection<DataCachePCData>,Collection<DataCachePCData>,Collection<Object>)",56,148
org.apache.openjpa.datacache.DataCache.contains(Object),9,17
org.apache.openjpa.datacache.DataCache.containsAll(Collection<Object>),9,10
org.apache.openjpa.datacache.DataCache.get(Object),16,24
org.apache.openjpa.datacache.DataCache.put(DataCachePCData),21,36
org.apache.openjpa.datacache.DataCache.update(DataCachePCData),28,46
org.apache.openjpa.datacache.DataCache.remove(Object),22,35
org.apache.openjpa.datacache.DataCache.removeAll(Collection<Object>),10,14
"org.apache.openjpa.datacache.DataCache.removeAll(Class<>,boolean)",7,7
org.apache.openjpa.datacache.DataCache.clear(),13,15
org.apache.openjpa.datacache.DataCache.pin(Object),17,36
org.apache.openjpa.datacache.DataCache.pinAll(Collection<Object>),9,13
"org.apache.openjpa.datacache.DataCache.pinAll(Class<>,boolean)",8,10
org.apache.openjpa.datacache.DataCache.unpin(Object),19,40
org.apache.openjpa.datacache.DataCache.unpinAll(Collection<Object>),9,13
"org.apache.openjpa.datacache.DataCache.unpinAll(Class<>,boolean)",10,12
org.apache.openjpa.datacache.DataCache.writeLock(),4,6
org.apache.openjpa.datacache.DataCache.writeUnlock(),5,6
org.apache.openjpa.datacache.DataCache.addExpirationListener(ExpirationListener),6,11
org.apache.openjpa.datacache.DataCache.removeExpirationListener(ExpirationListener),6,11
org.apache.openjpa.datacache.DataCache.close(),1,1
org.apache.openjpa.datacache.DataCache.getAll(List<Object>),14,26
"org.apache.openjpa.datacache.DataCache.getPartition(String,boolean)",12,25
org.apache.openjpa.datacache.DataCache.getPartitionNames(),8,10
org.apache.openjpa.datacache.DataCache.isPartitioned(),5,5
org.apache.openjpa.datacache.DataCache.getStatistics(),9,11
org.apache.openjpa.datacache.DataCache.getEvictOnBulkUpdate(),9,10
org.apache.openjpa.persistence.annotations.PColl_EntityB.getName(),2,3
org.apache.openjpa.persistence.annotations.PColl_EntityB.setName(String),3,6
org.apache.openjpa.persistence.annotations.PColl_EntityB.getM2oC(),2,2
org.apache.openjpa.persistence.annotations.PColl_EntityB.setM2oC(PColl_EntityC),3,3
"org.apache.openjpa.persistence.jest.ExceptionFormatter.createXML(String,Throwable)",27,110
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.NamedEntity.getName(),2,2
org.apache.openjpa.persistence.annotations.TestEmbeddableSuperclass.TestEmbeddableSuperclass(String),6,7
org.apache.openjpa.persistence.annotations.TestEmbeddableSuperclass.setUp(),4,4
org.apache.openjpa.persistence.annotations.TestEmbeddableSuperclass.testPersistAndFind(),55,273
org.apache.openjpa.conf.AutoDetachValue.AutoDetachValue(),8,12
org.apache.openjpa.conf.AutoDetachValue.getValueType(),3,3
org.apache.openjpa.conf.AutoDetachValue.setConstant(int),3,5
org.apache.openjpa.conf.AutoDetachValue.getConstant(),9,15
org.apache.openjpa.conf.AutoDetachValue.getAliasList(),15,25
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party1.Party1(),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party1.getPartyName(),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party1.setPartyName(String),4,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party1.getId(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party1.setId(int),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party1.setArchiveStatus(String),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party1.setStatus(String),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party1.getStatus(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party1.getArchiveStatus(),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party1.setCreateDate(Date),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party1.getCreateDate(),2,5
"org.apache.openjpa.datacache.DefaultCacheDistributionPolicy.selectCache(OpenJPAStateManager,Object)",10,12
org.apache.openjpa.datacache.DefaultCacheDistributionPolicy.endConfiguration(),1,1
org.apache.openjpa.datacache.DefaultCacheDistributionPolicy.setConfiguration(Configuration),3,4
org.apache.openjpa.datacache.DefaultCacheDistributionPolicy.startConfiguration(),2,2
org.apache.openjpa.datacache.TypesChangedListener.onTypesChanged(TypesChangedEvent),6,11
org.apache.openjpa.persistence.cache.jpa.model.ParentUnspecifiedEntity.getName(),2,3
org.apache.openjpa.persistence.cache.jpa.model.ParentUnspecifiedEntity.setName(String),3,6
org.apache.openjpa.persistence.cache.jpa.model.ParentUnspecifiedEntity.getId(),0,0
org.apache.openjpa.persistence.cache.jpa.model.ParentUnspecifiedEntity.setId(int),1,1
org.apache.openjpa.persistence.cache.jpa.model.ParentUnspecifiedEntity.getVersion(),1,2
org.apache.openjpa.persistence.cache.jpa.model.ParentUnspecifiedEntity.setVersion(int),2,5
org.apache.openjpa.event.ClearListener.beforeClear(LifecycleEvent),4,5
org.apache.openjpa.event.ClearListener.afterClear(LifecycleEvent),4,5
"org.apache.openjpa.persistence.jest.JSONObject.JSONObject(String,Object,boolean)",9,17
"org.apache.openjpa.persistence.jest.JSONObject.set(String,Object)",6,8
org.apache.openjpa.persistence.jest.JSONObject.write(PrintWriter),5,7
org.apache.openjpa.persistence.jest.JSONObject.toString(),1,4
org.apache.openjpa.persistence.jest.JSONObject.asString(int),21,61
"org.apache.openjpa.persistence.jest.JSONObject.encodeField(String,Object,int)",16,41
org.apache.openjpa.persistence.jest.JSONObject.newIndent(int),8,14
org.apache.openjpa.persistence.jest.JSONObject.ior(),5,8
org.apache.openjpa.persistence.jest.JSONObject.quoteFieldName(String),6,13
"org.apache.openjpa.persistence.jest.JSONObject.quoteFieldValue(Object,int)",16,42
org.apache.openjpa.persistence.jest.JSONObject.quoted(Object),7,15
org.apache.openjpa.persistence.jest.JSONObject.Array.add(Object),2,3
org.apache.openjpa.persistence.jest.JSONObject.Array.toString(),1,4
org.apache.openjpa.persistence.jest.JSONObject.Array.asString(int),13,49
"org.apache.openjpa.persistence.jest.JSONObject.KVMap.put(Object,Object)",2,3
org.apache.openjpa.persistence.jest.JSONObject.KVMap.toString(),1,4
org.apache.openjpa.persistence.jest.JSONObject.KVMap.asString(int),19,79
org.apache.openjpa.persistence.jest.JSONObject.main(String[]),25,64
org.apache.openjpa.jdbc.sql.DBDictionary.DBDictionary(),30,33
org.apache.openjpa.jdbc.sql.DBDictionary.connectedConfiguration(Connection),62,188
org.apache.openjpa.jdbc.sql.DBDictionary.configureNamingUtil(DatabaseMetaData),12,21
org.apache.openjpa.jdbc.sql.DBDictionary.configureNamingRules(),34,67
"org.apache.openjpa.jdbc.sql.DBDictionary.getArray(ResultSet,int)",11,18
"org.apache.openjpa.jdbc.sql.DBDictionary.getAsciiStream(ResultSet,int)",13,21
"org.apache.openjpa.jdbc.sql.DBDictionary.getBigDecimal(ResultSet,int)",15,27
"org.apache.openjpa.jdbc.sql.DBDictionary.getNumber(ResultSet,int)",29,59
"org.apache.openjpa.jdbc.sql.DBDictionary.getBigInteger(ResultSet,int)",16,30
"org.apache.openjpa.jdbc.sql.DBDictionary.getBinaryStream(ResultSet,int)",13,21
"org.apache.openjpa.jdbc.sql.DBDictionary.getLOBStream(JDBCStore,ResultSet,int)",11,15
"org.apache.openjpa.jdbc.sql.DBDictionary.getBlob(ResultSet,int)",11,18
"org.apache.openjpa.jdbc.sql.DBDictionary.getBlobObject(ResultSet,int,JDBCStore)",26,56
"org.apache.openjpa.jdbc.sql.DBDictionary.getBoolean(ResultSet,int)",10,15
"org.apache.openjpa.jdbc.sql.DBDictionary.getByte(ResultSet,int)",10,15
"org.apache.openjpa.jdbc.sql.DBDictionary.getBytes(ResultSet,int)",15,35
"org.apache.openjpa.jdbc.sql.DBDictionary.getCalendar(ResultSet,int)",20,36
org.apache.openjpa.jdbc.sql.DBDictionary.getProxyManager(),4,14
"org.apache.openjpa.jdbc.sql.DBDictionary.getChar(ResultSet,int)",16,26
"org.apache.openjpa.jdbc.sql.DBDictionary.getCharacterStream(ResultSet,int)",13,20
"org.apache.openjpa.jdbc.sql.DBDictionary.getClob(ResultSet,int)",11,18
"org.apache.openjpa.jdbc.sql.DBDictionary.getClobString(ResultSet,int)",21,39
"org.apache.openjpa.jdbc.sql.DBDictionary.getDate(ResultSet,int)",30,52
"org.apache.openjpa.jdbc.sql.DBDictionary.getDate(ResultSet,int,Calendar)",13,26
"org.apache.openjpa.jdbc.sql.DBDictionary.getDouble(ResultSet,int)",10,15
"org.apache.openjpa.jdbc.sql.DBDictionary.getFloat(ResultSet,int)",10,15
"org.apache.openjpa.jdbc.sql.DBDictionary.getInt(ResultSet,int)",10,15
"org.apache.openjpa.jdbc.sql.DBDictionary.getLocale(ResultSet,int)",19,35
"org.apache.openjpa.jdbc.sql.DBDictionary.getLong(ResultSet,int)",10,15
"org.apache.openjpa.jdbc.sql.DBDictionary.getObject(ResultSet,int,Map)",12,24
"org.apache.openjpa.jdbc.sql.DBDictionary.getRef(ResultSet,int,Map)",12,20
"org.apache.openjpa.jdbc.sql.DBDictionary.getShort(ResultSet,int)",10,15
"org.apache.openjpa.jdbc.sql.DBDictionary.getString(ResultSet,int)",14,28
"org.apache.openjpa.jdbc.sql.DBDictionary.getTime(ResultSet,int,Calendar)",13,24
"org.apache.openjpa.jdbc.sql.DBDictionary.getTimestamp(ResultSet,int,Calendar)",13,24
"org.apache.openjpa.jdbc.sql.DBDictionary.setArray(PreparedStatement,int,Array,Column)",13,21
"org.apache.openjpa.jdbc.sql.DBDictionary.setAsciiStream(PreparedStatement,int,InputStream,int,Column)",16,26
"org.apache.openjpa.jdbc.sql.DBDictionary.setBigDecimal(PreparedStatement,int,BigDecimal,Column)",19,36
"org.apache.openjpa.jdbc.sql.DBDictionary.setBigInteger(PreparedStatement,int,BigInteger,Column)",20,38
"org.apache.openjpa.jdbc.sql.DBDictionary.setBinaryStream(PreparedStatement,int,InputStream,int,Column)",27,57
"org.apache.openjpa.jdbc.sql.DBDictionary.setBlob(PreparedStatement,int,Blob,Column)",13,21
"org.apache.openjpa.jdbc.sql.DBDictionary.setBlobObject(PreparedStatement,int,Object,Column,JDBCStore)",20,33
"org.apache.openjpa.jdbc.sql.DBDictionary.setBoolean(PreparedStatement,int,boolean,Column)",12,18
"org.apache.openjpa.jdbc.sql.DBDictionary.setByte(PreparedStatement,int,byte,Column)",12,18
"org.apache.openjpa.jdbc.sql.DBDictionary.setBytes(PreparedStatement,int,byte[],Column)",19,35
"org.apache.openjpa.jdbc.sql.DBDictionary.setChar(PreparedStatement,int,char,Column)",18,35
"org.apache.openjpa.jdbc.sql.DBDictionary.setCharacterStream(PreparedStatement,int,Reader,int,Column)",16,25
"org.apache.openjpa.jdbc.sql.DBDictionary.setClob(PreparedStatement,int,Clob,Column)",13,21
"org.apache.openjpa.jdbc.sql.DBDictionary.setClobString(PreparedStatement,int,String,Column)",19,41
"org.apache.openjpa.jdbc.sql.DBDictionary.setDate(PreparedStatement,int,Date,Column)",18,61
"org.apache.openjpa.jdbc.sql.DBDictionary.setDate(PreparedStatement,int,java.sql.Date,Calendar,Column)",16,32
"org.apache.openjpa.jdbc.sql.DBDictionary.setCalendar(PreparedStatement,int,Calendar,Column)",17,27
"org.apache.openjpa.jdbc.sql.DBDictionary.setDouble(PreparedStatement,int,double,Column)",12,18
"org.apache.openjpa.jdbc.sql.DBDictionary.setFloat(PreparedStatement,int,float,Column)",12,18
"org.apache.openjpa.jdbc.sql.DBDictionary.setInt(PreparedStatement,int,int,Column)",12,18
"org.apache.openjpa.jdbc.sql.DBDictionary.setLong(PreparedStatement,int,long,Column)",12,18
"org.apache.openjpa.jdbc.sql.DBDictionary.setLocale(PreparedStatement,int,Locale,Column)",17,27
"org.apache.openjpa.jdbc.sql.DBDictionary.setNull(PreparedStatement,int,int,Column)",13,23
"org.apache.openjpa.jdbc.sql.DBDictionary.setNumber(PreparedStatement,int,Number,Column)",23,45
"org.apache.openjpa.jdbc.sql.DBDictionary.setObject(PreparedStatement,int,Object,int,Column)",16,39
"org.apache.openjpa.jdbc.sql.DBDictionary.setRef(PreparedStatement,int,Ref,Column)",13,21
"org.apache.openjpa.jdbc.sql.DBDictionary.setShort(PreparedStatement,int,short,Column)",12,18
"org.apache.openjpa.jdbc.sql.DBDictionary.setString(PreparedStatement,int,String,Column)",13,21
"org.apache.openjpa.jdbc.sql.DBDictionary.setTime(PreparedStatement,int,Time,Calendar,Column)",15,30
"org.apache.openjpa.jdbc.sql.DBDictionary.setTimestamp(PreparedStatement,int,Timestamp,Calendar,Column)",28,68
"org.apache.openjpa.jdbc.sql.DBDictionary.setTyped(PreparedStatement,int,Object,Column,int,JDBCStore)",55,461
"org.apache.openjpa.jdbc.sql.DBDictionary.setUnknown(PreparedStatement,int,Object,Column)",15,41
"org.apache.openjpa.jdbc.sql.DBDictionary.setUnknown(PreparedStatement,int,Column,Object)",42,264
"org.apache.openjpa.jdbc.sql.DBDictionary.serialize(Object,JDBCStore)",12,24
"org.apache.openjpa.jdbc.sql.DBDictionary.putBytes(Blob,byte[])",11,19
"org.apache.openjpa.jdbc.sql.DBDictionary.putString(Clob,String)",11,20
"org.apache.openjpa.jdbc.sql.DBDictionary.putChars(Clob,char[])",18,33
"org.apache.openjpa.jdbc.sql.DBDictionary.storageWarning(Object,Object)",31,67
"org.apache.openjpa.jdbc.sql.DBDictionary.getJDBCType(int,boolean)",11,24
"org.apache.openjpa.jdbc.sql.DBDictionary.getJDBCType(int,boolean,int,int,boolean)",14,29
"org.apache.openjpa.jdbc.sql.DBDictionary.getJDBCType(int,boolean,int,int)",40,265
org.apache.openjpa.jdbc.sql.DBDictionary.getPreferredType(int),5,10
org.apache.openjpa.jdbc.sql.DBDictionary.getTypeName(Column),17,46
org.apache.openjpa.jdbc.sql.DBDictionary.getTypeName(int),35,157
"org.apache.openjpa.jdbc.sql.DBDictionary.appendSize(Column,String)",50,132
"org.apache.openjpa.jdbc.sql.DBDictionary.insertSize(String,String)",31,149
org.apache.openjpa.jdbc.sql.DBDictionary.setJoinSyntax(String),14,41
org.apache.openjpa.jdbc.sql.DBDictionary.isImplicitJoin(),2,2
org.apache.openjpa.jdbc.sql.DBDictionary.getPlaceholderValueString(Column),27,55
org.apache.openjpa.jdbc.sql.DBDictionary.toSelectCount(Select),49,198
"org.apache.openjpa.jdbc.sql.DBDictionary.toDelete(ClassMapping,Select,Object[])",20,31
"org.apache.openjpa.jdbc.sql.DBDictionary.toUpdate(ClassMapping,Select,JDBCStore,Object[],Map)",14,21
"org.apache.openjpa.jdbc.sql.DBDictionary.toBulkOperation(ClassMapping,Select,JDBCStore,Object[],Map)",88,340
org.apache.openjpa.jdbc.sql.DBDictionary.getSelectTableAliases(Select),6,10
org.apache.openjpa.jdbc.sql.DBDictionary.getDeleteTargets(Select),28,75
"org.apache.openjpa.jdbc.sql.DBDictionary.appendUpdates(Select,JDBCStore,SQLBuffer,Object[],Map,boolean)",70,225
"org.apache.openjpa.jdbc.sql.DBDictionary.getDeleteTableContentsSQL(Table[],Connection)",50,159
"org.apache.openjpa.jdbc.sql.DBDictionary.toSelect(Select,boolean,JDBCFetchConfiguration)",21,64
"org.apache.openjpa.jdbc.sql.DBDictionary.getFrom(Select,boolean)",31,158
"org.apache.openjpa.jdbc.sql.DBDictionary.correlatedJoinCondition(Join,Select)",24,66
"org.apache.openjpa.jdbc.sql.DBDictionary.getFromSelect(Select,boolean)",15,39
"org.apache.openjpa.jdbc.sql.DBDictionary.getWhere(Select,boolean)",13,33
org.apache.openjpa.jdbc.sql.DBDictionary.toTraditionalJoin(Join),25,152
"org.apache.openjpa.jdbc.sql.DBDictionary.toSQL92Join(Select,Join,boolean,boolean)",25,109
"org.apache.openjpa.jdbc.sql.DBDictionary.toCorrelatedJoin(Select,Join,boolean,boolean)",11,24
org.apache.openjpa.jdbc.sql.DBDictionary.toNativeJoin(Join),11,16
"org.apache.openjpa.jdbc.sql.DBDictionary.canOuterJoin(int,ForeignKey)",11,15
"org.apache.openjpa.jdbc.sql.DBDictionary.toSelect(SQLBuffer,JDBCFetchConfiguration,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,boolean,long,long)",15,38
"org.apache.openjpa.jdbc.sql.DBDictionary.toSelect(SQLBuffer,JDBCFetchConfiguration,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,boolean,long,long,boolean,Select)",17,42
"org.apache.openjpa.jdbc.sql.DBDictionary.toSelect(SQLBuffer,JDBCFetchConfiguration,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,boolean,long,long,boolean,boolean)",15,42
"org.apache.openjpa.jdbc.sql.DBDictionary.toSelect(SQLBuffer,JDBCFetchConfiguration,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,boolean,long,long,Select)",16,41
"org.apache.openjpa.jdbc.sql.DBDictionary.getForUpdateClause(JDBCFetchConfiguration,boolean,Select)",23,42
org.apache.openjpa.jdbc.sql.DBDictionary.supportsIsolationForUpdate(),9,12
org.apache.openjpa.jdbc.sql.DBDictionary.getSelectOperation(JDBCFetchConfiguration),11,15
"org.apache.openjpa.jdbc.sql.DBDictionary.toOperation(String,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,long,long,String)",10,31
"org.apache.openjpa.jdbc.sql.DBDictionary.toOperation(String,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,long,long,String,boolean)",11,33
"org.apache.openjpa.jdbc.sql.DBDictionary.toOperation(String,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,long,long,String,boolean,boolean)",27,145
"org.apache.openjpa.jdbc.sql.DBDictionary.appendSelectRange(SQLBuffer,long,long,boolean)",11,15
"org.apache.openjpa.jdbc.sql.DBDictionary.getSelects(Select,boolean,boolean)",23,63
"org.apache.openjpa.jdbc.sql.DBDictionary.appendSelect(SQLBuffer,Object,Select,int)",13,47
org.apache.openjpa.jdbc.sql.DBDictionary.supportsLocking(Select),28,88
"org.apache.openjpa.jdbc.sql.DBDictionary.supportsRandomAccessResultSet(Select,boolean)",11,15
"org.apache.openjpa.jdbc.sql.DBDictionary.assertSupport(boolean,String)",15,18
"org.apache.openjpa.jdbc.sql.DBDictionary.substring(SQLBuffer,FilterValue,FilterValue,FilterValue)",30,89
org.apache.openjpa.jdbc.sql.DBDictionary.toLong(FilterValue),3,8
"org.apache.openjpa.jdbc.sql.DBDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",23,70
"org.apache.openjpa.jdbc.sql.DBDictionary.mathFunction(SQLBuffer,String,FilterValue,FilterValue)",39,123
"org.apache.openjpa.jdbc.sql.DBDictionary.comparison(SQLBuffer,String,FilterValue,FilterValue)",44,150
"org.apache.openjpa.jdbc.sql.DBDictionary.appendXmlComparison(SQLBuffer,String,FilterValue,FilterValue,boolean,boolean)",20,30
"org.apache.openjpa.jdbc.sql.DBDictionary.appendNumericCast(SQLBuffer,FilterValue)",12,26
"org.apache.openjpa.jdbc.sql.DBDictionary.appendCast(SQLBuffer,Object,int)",25,102
"org.apache.openjpa.jdbc.sql.DBDictionary.appendLength(SQLBuffer,int)",6,6
"org.apache.openjpa.jdbc.sql.DBDictionary.addCastAsType(String,Val)",12,22
org.apache.openjpa.jdbc.sql.DBDictionary.refSchemaComponents(Table),10,13
org.apache.openjpa.jdbc.sql.DBDictionary.getColumnIdentifier(Column),8,16
org.apache.openjpa.jdbc.sql.DBDictionary.getColumnDBName(Column),4,9
"org.apache.openjpa.jdbc.sql.DBDictionary.getFullIdentifier(Table,boolean)",11,24
"org.apache.openjpa.jdbc.sql.DBDictionary.getFullName(Table,boolean)",6,17
org.apache.openjpa.jdbc.sql.DBDictionary.getFullName(Index),5,16
org.apache.openjpa.jdbc.sql.DBDictionary.getFullName(Sequence),6,16
org.apache.openjpa.jdbc.sql.DBDictionary.getInvalidColumnWordSet(),15,32
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidTableName(String,Schema)",9,22
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidTableName(DBIdentifier,Schema)",11,24
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidSequenceName(String,Schema)",9,22
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidSequenceName(DBIdentifier,Schema)",12,24
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidColumnName(String,Table)",11,27
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidColumnName(DBIdentifier,Table)",9,23
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidColumnName(String,Table,boolean)",13,33
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidColumnName(DBIdentifier,Table,boolean)",15,35
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidPrimaryKeyName(String,Table)",14,31
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidForeignKeyName(String,Table,Table)",10,29
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidForeignKeyName(DBIdentifier,Table,Table)",13,30
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidIndexName(String,Table)",9,22
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidIndexName(DBIdentifier,Table)",11,24
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidUniqueName(String,Table)",10,23
"org.apache.openjpa.jdbc.sql.DBDictionary.getValidUniqueName(DBIdentifier,Table)",12,25
"org.apache.openjpa.jdbc.sql.DBDictionary.shorten(String,int)",18,43
org.apache.openjpa.jdbc.sql.DBDictionary.stripVowel(StringBuilder),13,29
"org.apache.openjpa.jdbc.sql.DBDictionary.makeNameValid(String,NameSet,int,int)",26,44
"org.apache.openjpa.jdbc.sql.DBDictionary.makeNameValid(DBIdentifier,NameSet,int,int)",25,43
"org.apache.openjpa.jdbc.sql.DBDictionary.makeNameValid(String,NameSet,int,int,boolean)",34,58
"org.apache.openjpa.jdbc.sql.DBDictionary.makeNameValid(DBIdentifier,NameSet,int,int,boolean)",34,55
"org.apache.openjpa.jdbc.sql.DBDictionary.getCreateTableSQL(Table,SchemaGroup)",13,22
org.apache.openjpa.jdbc.sql.DBDictionary.getCreateTableSQL(Table),39,148
org.apache.openjpa.jdbc.sql.DBDictionary.getBatchFetchSize(int),3,9
"org.apache.openjpa.jdbc.sql.DBDictionary.comment(StringBuilder,String)",5,12
org.apache.openjpa.jdbc.sql.DBDictionary.getDropTableSQL(Table),15,34
org.apache.openjpa.jdbc.sql.DBDictionary.getCreateSequenceSQL(Sequence),14,28
org.apache.openjpa.jdbc.sql.DBDictionary.getAlterSequenceSQL(Sequence),7,12
"org.apache.openjpa.jdbc.sql.DBDictionary.commonCreateAlterSequenceSQL(Sequence,boolean)",53,145
org.apache.openjpa.jdbc.sql.DBDictionary.getDropSequenceSQL(Sequence),10,23
org.apache.openjpa.jdbc.sql.DBDictionary.getCreateIndexSQL(Index),26,91
org.apache.openjpa.jdbc.sql.DBDictionary.getDropIndexSQL(Index),9,23
org.apache.openjpa.jdbc.sql.DBDictionary.getAddColumnSQL(Column),19,48
org.apache.openjpa.jdbc.sql.DBDictionary.getDropColumnSQL(Column),17,42
org.apache.openjpa.jdbc.sql.DBDictionary.getAddPrimaryKeySQL(PrimaryKey),19,43
org.apache.openjpa.jdbc.sql.DBDictionary.getDropPrimaryKeySQL(PrimaryKey),18,40
org.apache.openjpa.jdbc.sql.DBDictionary.getAddForeignKeySQL(ForeignKey),18,43
"org.apache.openjpa.jdbc.sql.DBDictionary.getDropForeignKeySQL(ForeignKey,Connection)",23,66
"org.apache.openjpa.jdbc.sql.DBDictionary.getDeclareColumnSQL(Column,boolean)",41,104
org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeyConstraintSQL(PrimaryKey),36,107
org.apache.openjpa.jdbc.sql.DBDictionary.getForeignKeyConstraintSQL(ForeignKey),46,218
org.apache.openjpa.jdbc.sql.DBDictionary.supportsDeferredForeignKeyConstraints(),10,20
org.apache.openjpa.jdbc.sql.DBDictionary.getActionName(int),7,22
org.apache.openjpa.jdbc.sql.DBDictionary.supportsDeleteAction(int),10,47
org.apache.openjpa.jdbc.sql.DBDictionary.supportsUpdateAction(int),10,47
org.apache.openjpa.jdbc.sql.DBDictionary.getUniqueConstraintSQL(Unique),34,123
org.apache.openjpa.jdbc.sql.DBDictionary.supportsDeferredUniqueConstraints(),8,18
"org.apache.openjpa.jdbc.sql.DBDictionary.isSystemTable(String,String,boolean)",23,60
"org.apache.openjpa.jdbc.sql.DBDictionary.isSystemTable(DBIdentifier,DBIdentifier,boolean)",25,76
"org.apache.openjpa.jdbc.sql.DBDictionary.isSystemIndex(String,Table)",17,30
"org.apache.openjpa.jdbc.sql.DBDictionary.isSystemIndex(DBIdentifier,Table)",16,29
"org.apache.openjpa.jdbc.sql.DBDictionary.isSystemSequence(String,String,boolean)",22,50
"org.apache.openjpa.jdbc.sql.DBDictionary.isSystemSequence(DBIdentifier,DBIdentifier,boolean)",23,51
"org.apache.openjpa.jdbc.sql.DBDictionary.isSystemSequence(DBIdentifier,DBIdentifier,boolean,Connection)",22,51
"org.apache.openjpa.jdbc.sql.DBDictionary.getTables(DatabaseMetaData,String,String,String,Connection)",18,39
"org.apache.openjpa.jdbc.sql.DBDictionary.getTables(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",32,109
org.apache.openjpa.jdbc.sql.DBDictionary.newTable(ResultSet),14,26
"org.apache.openjpa.jdbc.sql.DBDictionary.getSequences(DatabaseMetaData,String,String,String,Connection)",24,46
"org.apache.openjpa.jdbc.sql.DBDictionary.getSequences(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",28,81
org.apache.openjpa.jdbc.sql.DBDictionary.newSequence(ResultSet),17,48
"org.apache.openjpa.jdbc.sql.DBDictionary.getSequencesSQL(String,String)",9,14
"org.apache.openjpa.jdbc.sql.DBDictionary.getSequencesSQL(DBIdentifier,DBIdentifier)",7,9
"org.apache.openjpa.jdbc.sql.DBDictionary.getColumns(DatabaseMetaData,String,String,String,String,Connection)",19,47
"org.apache.openjpa.jdbc.sql.DBDictionary.getColumns(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",29,111
org.apache.openjpa.jdbc.sql.DBDictionary.newColumn(ResultSet),30,108
"org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeys(DatabaseMetaData,String,String,String,Connection)",19,42
"org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeys(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",18,52
"org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeysFromGetPrimaryKeys(DatabaseMetaData,String,String,String,Connection)",19,46
"org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeysFromGetPrimaryKeys(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",28,81
org.apache.openjpa.jdbc.sql.DBDictionary.newPrimaryKey(ResultSet),19,61
"org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeysFromBestRowIdentifier(DatabaseMetaData,String,String,String,Connection)",20,46
"org.apache.openjpa.jdbc.sql.DBDictionary.getPrimaryKeysFromBestRowIdentifier(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",31,93
"org.apache.openjpa.jdbc.sql.DBDictionary.getIndexInfo(DatabaseMetaData,String,String,String,boolean,boolean,Connection)",22,45
"org.apache.openjpa.jdbc.sql.DBDictionary.getIndexInfo(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,boolean,boolean,Connection)",30,83
org.apache.openjpa.jdbc.sql.DBDictionary.newIndex(ResultSet),19,74
"org.apache.openjpa.jdbc.sql.DBDictionary.getImportedKeys(DatabaseMetaData,String,String,String,Connection)",19,37
"org.apache.openjpa.jdbc.sql.DBDictionary.getImportedKeys(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",18,36
"org.apache.openjpa.jdbc.sql.DBDictionary.getImportedKeys(DatabaseMetaData,String,String,String,Connection,boolean)",21,47
"org.apache.openjpa.jdbc.sql.DBDictionary.getImportedKeys(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection,boolean)",37,129
"org.apache.openjpa.jdbc.sql.DBDictionary.combineForeignKey(Map<FKMapKey,ForeignKey>,ForeignKey)",15,45
org.apache.openjpa.jdbc.sql.DBDictionary.newForeignKey(ResultSet),37,167
org.apache.openjpa.jdbc.sql.DBDictionary.getTableNameForMetadata(String),14,22
org.apache.openjpa.jdbc.sql.DBDictionary.getTableNameForMetadata(DBIdentifier),15,22
org.apache.openjpa.jdbc.sql.DBDictionary.getSchemaNameForMetadata(String),14,28
org.apache.openjpa.jdbc.sql.DBDictionary.getSchemaNameForMetadata(DBIdentifier),14,29
org.apache.openjpa.jdbc.sql.DBDictionary.getCatalogNameForMetadata(String),14,22
org.apache.openjpa.jdbc.sql.DBDictionary.getCatalogNameForMetadata(DBIdentifier),14,20
org.apache.openjpa.jdbc.sql.DBDictionary.getColumnNameForMetadata(String),14,22
org.apache.openjpa.jdbc.sql.DBDictionary.getColumnNameForMetadata(DBIdentifier),14,20
org.apache.openjpa.jdbc.sql.DBDictionary.convertSchemaCase(String),11,22
org.apache.openjpa.jdbc.sql.DBDictionary.convertSchemaCase(DBIdentifier),12,21
org.apache.openjpa.jdbc.sql.DBDictionary.getSchemaCase(),3,5
org.apache.openjpa.jdbc.sql.DBDictionary.beforeMetadataOperation(Connection),15,24
"org.apache.openjpa.jdbc.sql.DBDictionary.getGeneratedKey(Column,Connection)",35,75
"org.apache.openjpa.jdbc.sql.DBDictionary.getGenKeySeqName(String,Column)",15,25
org.apache.openjpa.jdbc.sql.DBDictionary.getGeneratedKeySequenceName(Column),18,32
org.apache.openjpa.jdbc.sql.DBDictionary.setConfiguration(Configuration),20,44
org.apache.openjpa.jdbc.sql.DBDictionary.isSupported(),17,21
org.apache.openjpa.jdbc.sql.DBDictionary.startConfiguration(),2,2
org.apache.openjpa.jdbc.sql.DBDictionary.endConfiguration(),71,216
"org.apache.openjpa.jdbc.sql.DBDictionary.addErrorCode(int,String)",11,41
"org.apache.openjpa.jdbc.sql.DBDictionary.setTimeouts(PreparedStatement,JDBCFetchConfiguration,boolean)",35,83
"org.apache.openjpa.jdbc.sql.DBDictionary.setTimeouts(PreparedStatement,JDBCConfiguration,boolean)",35,82
"org.apache.openjpa.jdbc.sql.DBDictionary.setQueryTimeout(PreparedStatement,int)",29,64
"org.apache.openjpa.jdbc.sql.DBDictionary.setStatementQueryTimeout(PreparedStatement,int)",25,42
org.apache.openjpa.jdbc.sql.DBDictionary.decorate(Connection),31,56
org.apache.openjpa.jdbc.sql.DBDictionary.handleWarning(SQLWarning),26,51
"org.apache.openjpa.jdbc.sql.DBDictionary.newStoreException(String,SQLException[],Object)",26,61
"org.apache.openjpa.jdbc.sql.DBDictionary.narrow(String,SQLException,Object)",33,107
"org.apache.openjpa.jdbc.sql.DBDictionary.matchErrorState(Map<Set<Integer,String>>,SQLException)",52,106
"org.apache.openjpa.jdbc.sql.DBDictionary.isFatalException(int,SQLException)",28,44
org.apache.openjpa.jdbc.sql.DBDictionary.closeDataSource(DataSource),11,29
org.apache.openjpa.jdbc.sql.DBDictionary.SerializedData.SerializedData(byte[]),3,5
"org.apache.openjpa.jdbc.sql.DBDictionary.getVersionColumn(Column,String)",10,28
"org.apache.openjpa.jdbc.sql.DBDictionary.getVersionColumn(Column,DBIdentifier)",5,10
"org.apache.openjpa.jdbc.sql.DBDictionary.insertBlobForStreamingLoad(Row,Column,JDBCStore,Object,Select)",19,27
"org.apache.openjpa.jdbc.sql.DBDictionary.insertClobForStreamingLoad(Row,Column,Object)",15,21
"org.apache.openjpa.jdbc.sql.DBDictionary.updateBlob(Select,JDBCStore,InputStream)",38,101
"org.apache.openjpa.jdbc.sql.DBDictionary.updateClob(Select,JDBCStore,Reader)",38,105
"org.apache.openjpa.jdbc.sql.DBDictionary.copy(InputStream,OutputStream)",13,30
"org.apache.openjpa.jdbc.sql.DBDictionary.copy(Reader,Writer)",12,32
"org.apache.openjpa.jdbc.sql.DBDictionary.getCastFunction(Val,String)",15,26
"org.apache.openjpa.jdbc.sql.DBDictionary.getCastFunction(Val,String,Column)",17,39
"org.apache.openjpa.jdbc.sql.DBDictionary.createIndexIfNecessary(Schema,String,Column)",9,13
"org.apache.openjpa.jdbc.sql.DBDictionary.createIndexIfNecessary(Schema,DBIdentifier,Column)",6,8
org.apache.openjpa.jdbc.sql.DBDictionary.getBatchLimit(),2,6
org.apache.openjpa.jdbc.sql.DBDictionary.setBatchLimit(int),4,11
"org.apache.openjpa.jdbc.sql.DBDictionary.validateBatchProcess(RowImpl,Column[],OpenJPAStateManager,ClassMapping)",39,77
"org.apache.openjpa.jdbc.sql.DBDictionary.validateDBSpecificBatchProcess(boolean,RowImpl,Column[],OpenJPAStateManager,ClassMapping)",17,24
"org.apache.openjpa.jdbc.sql.DBDictionary.executeQuery(Connection,PreparedStatement,String)",18,24
"org.apache.openjpa.jdbc.sql.DBDictionary.prepareStatement(Connection,String)",14,22
org.apache.openjpa.jdbc.sql.DBDictionary.getSequence(ResultSet),16,33
"org.apache.openjpa.jdbc.sql.DBDictionary.getKey(ResultSet,Column)",20,33
"org.apache.openjpa.jdbc.sql.DBDictionary.calculateValue(Val,Select,ExpContext,ExpState,Path,ExpState)",15,30
org.apache.openjpa.jdbc.sql.DBDictionary.isSelect(String),19,42
"org.apache.openjpa.jdbc.sql.DBDictionary.needsToCreateIndex(Index,Table,Unique[])",6,12
"org.apache.openjpa.jdbc.sql.DBDictionary.needsToCreateIndex(Index,Table)",4,6
org.apache.openjpa.jdbc.sql.DBDictionary.getBatchUpdateCount(PreparedStatement),11,17
org.apache.openjpa.jdbc.sql.DBDictionary.getTrimSchemaName(),3,6
org.apache.openjpa.jdbc.sql.DBDictionary.setTrimSchemaName(boolean),4,13
"org.apache.openjpa.jdbc.sql.DBDictionary.deleteStream(JDBCStore,Select)",8,9
"org.apache.openjpa.jdbc.sql.DBDictionary.checkNameLength(String,int,String)",16,37
"org.apache.openjpa.jdbc.sql.DBDictionary.checkNameLength(DBIdentifier,int,String)",22,56
"org.apache.openjpa.jdbc.sql.DBDictionary.checkNameLength(DBIdentifier,int,String,boolean)",26,80
org.apache.openjpa.jdbc.sql.DBDictionary.setDelimitedCase(DatabaseMetaData),22,46
org.apache.openjpa.jdbc.sql.DBDictionary.getSupportsDelimitedIdentifiers(),4,12
org.apache.openjpa.jdbc.sql.DBDictionary.setSupportsDelimitedIdentifiers(boolean),7,22
org.apache.openjpa.jdbc.sql.DBDictionary.setSupportsDelimitedIdentifiers(DatabaseMetaData),26,51
org.apache.openjpa.jdbc.sql.DBDictionary.getDelimitIdentifiers(),3,6
org.apache.openjpa.jdbc.sql.DBDictionary.setDelimitIdentifiers(boolean),5,15
org.apache.openjpa.jdbc.sql.DBDictionary.getSupportsXMLColumn(),3,9
org.apache.openjpa.jdbc.sql.DBDictionary.setSupportsXMLColumn(boolean),8,12
org.apache.openjpa.jdbc.sql.DBDictionary.getXMLTypeEncoding(),4,10
org.apache.openjpa.jdbc.sql.DBDictionary.setXMLTypeEncoding(String),10,18
org.apache.openjpa.jdbc.sql.DBDictionary.getLog(),1,3
org.apache.openjpa.jdbc.sql.DBDictionary.delimitAll(),2,3
org.apache.openjpa.jdbc.sql.DBDictionary.getLeadingDelimiter(),3,5
org.apache.openjpa.jdbc.sql.DBDictionary.setLeadingDelimiter(String),5,8
org.apache.openjpa.jdbc.sql.DBDictionary.getIdentifierDelimiter(),5,5
org.apache.openjpa.jdbc.sql.DBDictionary.getIdentifierConcatenator(),4,5
org.apache.openjpa.jdbc.sql.DBDictionary.getTrailingDelimiter(),3,5
org.apache.openjpa.jdbc.sql.DBDictionary.setTrailingDelimiter(String),5,8
org.apache.openjpa.jdbc.sql.DBDictionary.getDefaultIdentifierRule(),6,15
org.apache.openjpa.jdbc.sql.DBDictionary.getIdentifierRule(T),8,19
org.apache.openjpa.jdbc.sql.DBDictionary.getIdentifierRules(),6,8
org.apache.openjpa.jdbc.sql.DBDictionary.getNamingUtil(),7,11
org.apache.openjpa.jdbc.sql.DBDictionary.getDelimitedCase(),2,3
org.apache.openjpa.jdbc.sql.DBDictionary.toDBName(DBIdentifier),8,13
"org.apache.openjpa.jdbc.sql.DBDictionary.toDBName(DBIdentifier,boolean)",9,15
"org.apache.openjpa.jdbc.sql.DBDictionary.fromDBName(String,DBIdentifierType)",6,10
org.apache.openjpa.jdbc.sql.DBDictionary.setDefaultSchemaName(String),4,10
org.apache.openjpa.jdbc.sql.DBDictionary.getDefaultSchemaName(),3,5
org.apache.openjpa.jdbc.sql.DBDictionary.getConversionKey(),7,15
"org.apache.openjpa.jdbc.sql.DBDictionary.getMarkerForInsertUpdate(Column,Object)",22,32
"org.apache.openjpa.jdbc.sql.DBDictionary.getIsNullSQL(String,int)",6,11
"org.apache.openjpa.jdbc.sql.DBDictionary.getIsNotNullSQL(String,int)",6,11
org.apache.openjpa.jdbc.sql.DBDictionary.getIdentityColumnName(),4,4
"org.apache.openjpa.jdbc.sql.DBDictionary.isUsingRange(long,long)",5,8
org.apache.openjpa.jdbc.sql.DBDictionary.isUsingOffset(long),3,4
org.apache.openjpa.jdbc.sql.DBDictionary.isUsingLimit(long),4,4
org.apache.openjpa.jdbc.sql.DBDictionary.isUsingOrderBy(SQLBuffer),4,7
"org.apache.openjpa.jdbc.sql.DBDictionary.versionEqualOrLaterThan(int,int)",6,10
"org.apache.openjpa.jdbc.sql.DBDictionary.versionEqualOrEarlierThan(int,int)",7,11
org.apache.openjpa.jdbc.sql.DBDictionary.versionLaterThan(int),3,4
org.apache.openjpa.jdbc.sql.DBDictionary.getMajorVersion(),4,7
org.apache.openjpa.jdbc.sql.DBDictionary.setMajorVersion(int),7,11
org.apache.openjpa.jdbc.sql.DBDictionary.getMinorVersion(),5,7
org.apache.openjpa.jdbc.sql.DBDictionary.setMinorVersion(int),7,11
org.apache.openjpa.jdbc.sql.DBDictionary.nullSafe(String),2,3
"org.apache.openjpa.jdbc.sql.DBDictionary.applyRange(Select,int)",4,6
org.apache.openjpa.jdbc.kernel.OptSelectEntity.getId(),0,0
org.apache.openjpa.jdbc.kernel.OptSelectEntity.getEagerOneToOne(),4,5
org.apache.openjpa.jdbc.kernel.OptSelectEntity.setEagerOneToOne(OptSelectEntity),5,8
org.apache.openjpa.jdbc.kernel.OptSelectEntity.getEagerOneToOneOwner(),5,7
org.apache.openjpa.jdbc.kernel.OptSelectEntity.setEagerOneToOneOwner(OptSelectEntity),6,12
org.apache.openjpa.jdbc.kernel.OptSelectEntity.getLazyOneToOne(),4,5
org.apache.openjpa.jdbc.kernel.OptSelectEntity.setLazyOneToOne(OptSelectEntity),5,8
org.apache.openjpa.jdbc.kernel.OptSelectEntity.getLazyOneToOneOwner(),5,7
org.apache.openjpa.jdbc.kernel.OptSelectEntity.setLazyOneToOneOwner(OptSelectEntity),6,12
org.apache.openjpa.jta.JTAManagedRuntime.doNonTransactionalWork(Runnable),4,7
org.apache.openjpa.jta.JTAManagedRuntime.getRollbackCause(),6,8
org.apache.openjpa.jta.JTAManagedRuntime.getTransactionKey(),8,11
org.apache.openjpa.jta.JTAManagedRuntime.getTransactionManager(),4,6
org.apache.openjpa.jta.JTAManagedRuntime.setRollbackOnly(Throwable),7,10
org.apache.openjpa.kernel.StoreQuery.getContext(),3,6
org.apache.openjpa.kernel.StoreQuery.setContext(QueryContext),6,10
org.apache.openjpa.kernel.StoreQuery.setQuery(Object),12,16
org.apache.openjpa.kernel.StoreQuery.getFilterListener(String),5,10
org.apache.openjpa.kernel.StoreQuery.getAggregateListener(String),6,10
org.apache.openjpa.kernel.StoreQuery.newCompilationKey(),8,9
org.apache.openjpa.kernel.StoreQuery.newCompilation(),4,5
org.apache.openjpa.kernel.StoreQuery.getCompilation(),5,6
org.apache.openjpa.kernel.StoreQuery.populateFromCompilation(Object),6,8
org.apache.openjpa.kernel.StoreQuery.invalidateCompilation(),3,5
org.apache.openjpa.kernel.StoreQuery.supportsDataStoreExecution(),8,10
org.apache.openjpa.kernel.StoreQuery.supportsInMemoryExecution(),6,9
"org.apache.openjpa.kernel.StoreQuery.newInMemoryExecutor(ClassMetaData,boolean)",30,40
"org.apache.openjpa.kernel.StoreQuery.newDataStoreExecutor(ClassMetaData,boolean)",31,41
org.apache.openjpa.kernel.StoreQuery.supportsAbstractExecutors(),16,21
org.apache.openjpa.kernel.StoreQuery.requiresCandidateType(),4,6
org.apache.openjpa.kernel.StoreQuery.requiresParameterDeclarations(),6,7
org.apache.openjpa.kernel.StoreQuery.supportsParameterDeclarations(),6,7
"org.apache.openjpa.kernel.StoreQuery.evaluate(Object,Object,Object[],OpenJPAStateManager)",6,9
org.apache.openjpa.kernel.StoreQuery.Range.Range(),1,1
"org.apache.openjpa.kernel.StoreQuery.Range.Range(long,long)",2,4
"org.apache.openjpa.kernel.StoreQuery.Executor.executeQuery(StoreQuery,Object[],Range)",26,42
"org.apache.openjpa.kernel.StoreQuery.Executor.executeDelete(StoreQuery,Object[])",11,14
"org.apache.openjpa.kernel.StoreQuery.Executor.executeUpdate(StoreQuery,Object[])",12,14
"org.apache.openjpa.kernel.StoreQuery.Executor.getDataStoreActions(StoreQuery,Object[],Range)",13,16
org.apache.openjpa.kernel.StoreQuery.Executor.validate(StoreQuery),4,6
"org.apache.openjpa.kernel.StoreQuery.Executor.getRange(StoreQuery,Object[],Range)",11,16
"org.apache.openjpa.kernel.StoreQuery.Executor.getOrderingValue(StoreQuery,Object[],Object,int)",24,47
org.apache.openjpa.kernel.StoreQuery.Executor.getAscending(StoreQuery),8,8
org.apache.openjpa.kernel.StoreQuery.Executor.isPacking(StoreQuery),13,18
org.apache.openjpa.kernel.StoreQuery.Executor.getAlias(StoreQuery),9,11
org.apache.openjpa.kernel.StoreQuery.Executor.getProjectionAliases(StoreQuery),9,11
org.apache.openjpa.kernel.StoreQuery.Executor.getProjectionTypes(StoreQuery),8,11
org.apache.openjpa.kernel.StoreQuery.Executor.getAccessPathMetaDatas(StoreQuery),12,15
org.apache.openjpa.kernel.StoreQuery.Executor.getOperation(StoreQuery),8,10
org.apache.openjpa.kernel.StoreQuery.Executor.isAggregate(StoreQuery),4,6
org.apache.openjpa.kernel.StoreQuery.Executor.isDistinct(StoreQuery),3,3
org.apache.openjpa.kernel.StoreQuery.Executor.hasGrouping(StoreQuery),3,4
org.apache.openjpa.kernel.StoreQuery.Executor.getOrderedParameterTypes(StoreQuery),14,19
org.apache.openjpa.kernel.StoreQuery.Executor.getParameterTypes(StoreQuery),6,6
"org.apache.openjpa.kernel.StoreQuery.Executor.toParameterArray(StoreQuery,Map<>)",18,33
org.apache.openjpa.kernel.StoreQuery.Executor.getResultClass(StoreQuery),4,5
org.apache.openjpa.kernel.StoreQuery.Executor.getResultShape(StoreQuery),4,6
org.apache.openjpa.kernel.StoreQuery.Executor.getUpdates(StoreQuery),8,8
org.apache.openjpa.kernel.StoreQuery.Executor.getQueryExpressions(),2,4
org.apache.openjpa.persistence.common.apps.CompUser.CompUser(),2,2
"org.apache.openjpa.persistence.common.apps.CompUser.CompUser(String,String,Address,int)",8,21
org.apache.openjpa.persistence.common.apps.CompUser.getComputerName(),3,5
org.apache.openjpa.persistence.common.apps.CompUser.setComputerName(String),4,10
org.apache.openjpa.persistence.common.apps.CompUser.getName(),2,3
org.apache.openjpa.persistence.common.apps.CompUser.setName(String),3,6
org.apache.openjpa.persistence.common.apps.CompUser.getUserid(),1,2
org.apache.openjpa.persistence.common.apps.CompUser.getAddress(),1,3
org.apache.openjpa.persistence.common.apps.CompUser.setAddress(Address),2,6
org.apache.openjpa.persistence.common.apps.CompUser.getAge(),1,2
org.apache.openjpa.persistence.common.apps.CompUser.setAge(int),2,5
org.apache.openjpa.persistence.common.apps.CompUser.getNameAsLob(),3,5
org.apache.openjpa.persistence.common.apps.CompUser.setNameAsLob(String),4,10
org.apache.openjpa.persistence.common.apps.CompUser.getRating(),2,5
org.apache.openjpa.persistence.common.apps.CompUser.setRating(CreditRating),3,8
org.apache.openjpa.persistence.common.apps.CompUser.getNicknames(),2,3
org.apache.openjpa.persistence.common.apps.CompUser.setNicknames(String[]),3,6
org.apache.openjpa.persistence.common.apps.CompUser.getCreditRating(),2,6
org.apache.openjpa.persistence.common.apps.CompUser.setCreditRating(CreditRating),3,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest3.AnnoTest3(),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest3.AnnoTest3(long),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest3.AnnoTest3(Long),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest3.setBasic2(int),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest3.getBasic2(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest3.getSubOneOne(),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest3.setSubOneOne(AnnoTest2),4,7
org.apache.openjpa.conf.OpenJPAVersionAndConfigurationTypeValidationPolicy.getCacheableData(Object),7,10
org.apache.openjpa.conf.OpenJPAVersionAndConfigurationTypeValidationPolicy.getValidData(Object),10,19
org.apache.openjpa.conf.OpenJPAVersionAndConfigurationTypeValidationPolicy.setConfiguration(Configuration),4,8
org.apache.openjpa.conf.OpenJPAVersionAndConfigurationTypeValidationPolicy.startConfiguration(),2,2
org.apache.openjpa.conf.OpenJPAVersionAndConfigurationTypeValidationPolicy.endConfiguration(),1,1
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.matches(QueryExpressions,ClassMetaData,boolean,Object,StoreContext,Object[])",29,53
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.matches(Exp,Object,StoreContext,Object[],int)",45,93
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.group(QueryExpressions,List,StoreContext,Object[])",41,92
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.matches(QueryExpressions,Collection,StoreContext,Object[])",19,28
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.matches(Exp,Collection,StoreContext,Object[],int)",46,91
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.project(QueryExpressions,List,StoreContext,Object[])",27,62
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.project(Object,QueryExpressions,boolean,StoreContext,Object[])",28,102
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.order(QueryExpressions,List,StoreContext,Object[])",11,19
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.order(QueryExpressions,Value[],boolean,List,StoreContext,Object[])",29,63
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.distinct(QueryExpressions,boolean,List)",39,103
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.emptyExpression(),3,4
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.asExpression(Value),3,6
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.equal(Value,Value)",4,8
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.notEqual(Value,Value)",4,8
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.lessThan(Value,Value)",3,6
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.greaterThan(Value,Value)",3,6
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.lessThanEqual(Value,Value)",4,8
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.greaterThanEqual(Value,Value)",4,8
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.isEmpty(Value),4,6
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.isNotEmpty(Value),3,4
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.contains(Value,Value)",4,8
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.containsKey(Value,Value)",5,10
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.containsValue(Value,Value)",4,10
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.getMapValue(Value,Value)",4,13
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.isInstance(Value,Class)",4,5
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.and(Expression,Expression)",4,23
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.or(Expression,Expression)",2,10
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.not(Expression),2,6
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.bindVariable(Value,Value)",7,15
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.bindKeyVariable(Value,Value)",8,17
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.bindValueVariable(Value,Value)",7,17
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.endsWith(Value,Value)",3,6
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.matches(Value,Value,String,String,String)",8,17
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.notMatches(Value,Value,String,String,String)",8,17
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.startsWith(Value,Value)",4,8
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newSubquery(ClassMetaData,boolean,String)",8,10
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newPath(),2,4
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newPath(Value),3,8
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newLiteral(Object,int)",6,10
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newTypeLiteral(Object,int)",6,12
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.getThis(),1,1
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.getNull(),1,1
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.getCurrentDate(Class<T>),4,10
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.getCurrentTime(Class<T>),5,10
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.getCurrentTimestamp(Class<T>),5,10
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newParameter(Object,Class)",5,8
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newCollectionValuedParameter(Object,Class)",7,11
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newExtension(FilterListener,Value,Value)",7,15
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newAggregate(AggregateListener,Value)",5,11
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newArgumentList(Value,Value)",6,10
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newArgumentList(Value),6,7
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newUnboundVariable(String,Class)",11,22
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newBoundVariable(String,Class)",6,9
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.cast(Value,Class)",8,27
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.add(Value,Value)",3,11
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.subtract(Value,Value)",3,11
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.multiply(Value,Value)",3,11
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.divide(Value,Value)",3,11
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.mod(Value,Value)",3,11
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.abs(Value),3,7
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.indexOf(Value,Value)",3,11
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.concat(Value,Value)",3,11
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.stringLength(Value),5,9
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.trim(Value,Value,Boolean)",4,11
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.sqrt(Value),3,7
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.substring(Value,Value)",3,11
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.toUpperCase(Value),3,7
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.toLowerCase(Value),3,7
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.avg(Value),3,7
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.count(Value),3,7
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.distinct(Value),3,7
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.max(Value),3,7
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.min(Value),3,7
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.sum(Value),3,7
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.any(Value),2,5
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.all(Value),2,5
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.size(Value),3,7
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.index(Value),3,7
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.type(Value),3,7
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.mapEntry(Value,Value)",8,10
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.mapKey(Value,Value)",7,10
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.getKey(Value),6,7
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.getObjectId(Value),3,7
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.ArrayKey.ArrayKey(Object[]),4,6
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.ArrayKey.hashCode(),4,8
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.ArrayKey.equals(Object),7,18
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.OrderValueComparator.OrderValueComparator(Val,boolean,int,StoreContext,Object[])",10,21
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.OrderValueComparator.compare(Object,Object)",20,38
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.generalCaseExpression(Expression[],Value)",6,19
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.simpleCaseExpression(Value,Expression[],Value)",8,25
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.whenCondition(Expression,Value)",5,11
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.whenScalar(Value,Value)",4,11
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.coalesceExpression(Value[]),6,17
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.nullIfExpression(Value,Value)",3,10
"org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.newFunction(String,Class<>,Value)",9,11
org.apache.openjpa.kernel.exps.InMemoryExpressionFactory.isVerticalType(Value),4,4
"org.apache.openjpa.meta.InMemoryValueOrder.InMemoryValueOrder(boolean,OpenJPAConfiguration)",6,10
org.apache.openjpa.meta.InMemoryValueOrder.getName(),3,3
org.apache.openjpa.meta.InMemoryValueOrder.isAscending(),2,2
org.apache.openjpa.meta.InMemoryValueOrder.getComparator(),1,2
"org.apache.openjpa.meta.InMemoryValueOrder.compare(Object,Object)",20,72
org.apache.openjpa.meta.InMemoryValueOrder.toPKValues(OpenJPAStateManager),18,33
org.apache.openjpa.util.LockException.LockException(Object),8,14
"org.apache.openjpa.util.LockException.LockException(Object,int)",5,7
"org.apache.openjpa.util.LockException.LockException(Object,int,int)",11,28
org.apache.openjpa.util.LockException.getSubtype(),2,2
org.apache.openjpa.util.LockException.getTimeout(),4,5
org.apache.openjpa.util.LockException.setTimeout(int),6,10
org.apache.openjpa.util.LockException.setLockLevel(int),3,9
org.apache.openjpa.util.LockException.getLockLevel(),2,4
org.apache.openjpa.util.LockException.toString(),7,16
org.apache.openjpa.util.LockException.writeObject(ObjectOutputStream),8,11
org.apache.openjpa.util.LockException.readObject(ObjectInputStream),9,13
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.StringValidator.prePersist(FlightSchedule),12,16
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.StringValidator.postPersist(FlightSchedule),11,13
openbook.domain.Book.Book(),6,6
"openbook.domain.Book.Book(String,String,double,int)",14,40
openbook.domain.Book.getISBN(),2,3
openbook.domain.Book.getTitle(),2,3
openbook.domain.Book.getPrice(),1,2
openbook.domain.Book.getAuthors(),3,4
openbook.domain.Book.addAuthor(Author),6,15
openbook.domain.Book.setAuthors(List<Author>),4,7
openbook.domain.Book.getInventory(),1,3
openbook.domain.Book.getVersion(),1,2
openbook.domain.Book.hashCode(),5,12
openbook.domain.Book.equals(Object),5,14
org.apache.openjpa.ee.JNDIManagedRuntime.getTransactionManagerName(),8,10
org.apache.openjpa.ee.JNDIManagedRuntime.setTransactionManagerName(String),11,16
org.apache.openjpa.ee.JNDIManagedRuntime.getTransactionManager(),11,20
org.apache.openjpa.ee.JNDIManagedRuntime.setRollbackOnly(Throwable),10,15
org.apache.openjpa.ee.JNDIManagedRuntime.getRollbackCause(),7,9
"jpa.tools.swing.InstanceDataModel<T>.InstanceDataModel(EntityType<T>,T)",8,14
jpa.tools.swing.InstanceDataModel<T>.getColumnClass(int),4,7
jpa.tools.swing.InstanceDataModel<T>.getColumnCount(),2,2
jpa.tools.swing.InstanceDataModel<T>.getColumnName(int),6,9
jpa.tools.swing.InstanceDataModel<T>.getRowCount(),4,4
"jpa.tools.swing.InstanceDataModel<T>.getValueAt(int,int)",12,20
"jpa.tools.swing.InstanceDataModel<T>.isCellEditable(int,int)",5,6
"jpa.tools.swing.InstanceDataModel<T>.setValueAt(Object,int,int)",6,8
org.apache.openjpa.persistence.callbacks.Message.Message(),1,1
org.apache.openjpa.persistence.callbacks.Message.Message(String),3,5
org.apache.openjpa.persistence.callbacks.Message.setId(long),2,3
org.apache.openjpa.persistence.callbacks.Message.getId(),0,0
org.apache.openjpa.persistence.callbacks.Message.setMessage(String),4,6
org.apache.openjpa.persistence.callbacks.Message.getMessage(),2,3
org.apache.openjpa.persistence.callbacks.Message.setCreated(Date),3,6
org.apache.openjpa.persistence.callbacks.Message.getCreated(),2,3
org.apache.openjpa.persistence.callbacks.Message.getVersion(),2,3
org.apache.openjpa.persistence.callbacks.Message.setVersion(Integer),3,6
org.apache.openjpa.persistence.callbacks.Message.getUpdated(),2,3
org.apache.openjpa.persistence.callbacks.Message.setUpdated(Date),3,6
org.apache.openjpa.persistence.callbacks.Message.equals(Object),3,5
org.apache.openjpa.persistence.callbacks.Message.hashCode(),2,4
"org.apache.openjpa.event.LifecycleCallbacks.hasCallback(Object,int)",6,9
"org.apache.openjpa.event.LifecycleCallbacks.makeCallback(Object,Object,int)",9,13
org.apache.openjpa.lib.conf.Configurations.getClassName(String),5,11
org.apache.openjpa.lib.conf.Configurations.getProperties(String),5,11
"org.apache.openjpa.lib.conf.Configurations.getPluginComponent(String,boolean)",16,57
"org.apache.openjpa.lib.conf.Configurations.getPlugin(String,String)",9,27
"org.apache.openjpa.lib.conf.Configurations.combinePlugins(String,String)",19,115
"org.apache.openjpa.lib.conf.Configurations.newInstance(String,ClassLoader)",11,20
"org.apache.openjpa.lib.conf.Configurations.newInstance(String,Configuration,String,ClassLoader)",13,30
"org.apache.openjpa.lib.conf.Configurations.newInstance(String,Configuration,Properties,ClassLoader)",13,29
"org.apache.openjpa.lib.conf.Configurations.loadClass(String,ClassLoader)",21,70
"org.apache.openjpa.lib.conf.Configurations.newInstance(String,Value,Configuration,ClassLoader,boolean)",38,121
"org.apache.openjpa.lib.conf.Configurations.findDerivedLoader(Configuration,ClassLoader)",34,82
org.apache.openjpa.lib.conf.Configurations.classLoaderOf(Class<>),8,11
org.apache.openjpa.lib.conf.Configurations.parentClassLoaderOf(ClassLoader),8,13
org.apache.openjpa.lib.conf.Configurations.getFullyQualifiedAnchorsInPropertiesLocation(Options),38,88
"org.apache.openjpa.lib.conf.Configurations.populateConfiguration(Configuration,Options)",54,140
org.apache.openjpa.lib.conf.Configurations.parseConfigResource(String),20,59
"org.apache.openjpa.lib.conf.Configurations.getCreateException(String,Value,Exception)",35,106
"org.apache.openjpa.lib.conf.Configurations.configureInstance(Object,Configuration,String)",21,38
"org.apache.openjpa.lib.conf.Configurations.configureInstance(Object,Configuration,String,String)",26,54
"org.apache.openjpa.lib.conf.Configurations.configureInstance(Object,Configuration,Properties)",18,31
"org.apache.openjpa.lib.conf.Configurations.configureInstance(Object,Configuration,Properties,String)",54,158
org.apache.openjpa.lib.conf.Configurations.findOptionsFor(Class<>),11,28
org.apache.openjpa.lib.conf.Configurations.serializeProperties(Map),19,60
org.apache.openjpa.lib.conf.Configurations.parseProperties(String),48,158
"org.apache.openjpa.lib.conf.Configurations.lookup(String,String,Log)",28,59
"org.apache.openjpa.lib.conf.Configurations.containsProperty(Value,Map)",17,40
"org.apache.openjpa.lib.conf.Configurations.containsProperty(String,Map)",14,30
"org.apache.openjpa.lib.conf.Configurations.getProperty(String,Map)",12,21
"org.apache.openjpa.lib.conf.Configurations.removeProperty(String,Map)",15,34
"org.apache.openjpa.lib.conf.Configurations.removeProperty(String,Map<>,Map<>)",8,19
"org.apache.openjpa.lib.conf.Configurations.runAgainstAllAnchors(Options,Configurations.Runnable)",36,90
"org.apache.openjpa.lib.conf.Configurations.launchRunnable(Options,Configurations.Runnable)",9,20
org.apache.openjpa.lib.conf.Configurations.Runnable.run(Options),4,4
org.apache.openjpa.event.TestLifecycleListener.setUp(),4,5
org.apache.openjpa.event.TestLifecycleListener.testMutationsInLifecycleListener(),28,58
org.apache.openjpa.event.TestLifecycleListener.testMutationsInLifecycleListener().$1.beforePersist(LifecycleEvent),7,10
org.apache.openjpa.trader.client.TradingServiceAdapter.login(String),6,6
org.apache.openjpa.trader.client.TradingServiceAdapter.getStocks(),5,5
"org.apache.openjpa.trader.client.TradingServiceAdapter.ask(Trader,Stock,int,double)",6,8
"org.apache.openjpa.trader.client.TradingServiceAdapter.bid(Trader,Stock,int,double)",7,10
org.apache.openjpa.trader.client.TradingServiceAdapter.withdraw(Tradable),4,5
org.apache.openjpa.trader.client.TradingServiceAdapter.refresh(Tradable),4,5
org.apache.openjpa.trader.client.TradingServiceAdapter.matchBid(Bid),5,8
org.apache.openjpa.trader.client.TradingServiceAdapter.matchAsk(Ask),4,5
org.apache.openjpa.trader.client.TradingServiceAdapter.trade(Match),4,6
"org.apache.openjpa.trader.client.TradingServiceAdapter.getTrades(Timestamp,Timestamp)",6,7
"org.apache.openjpa.trader.client.TradingServiceAdapter.getTrades(Trader,Boolean,Timestamp,Timestamp)",9,11
org.apache.openjpa.trader.client.TradingServiceAdapter.getStock(String),5,6
org.apache.openjpa.trader.client.TradingServiceAdapter.getLog(),5,6
org.apache.openjpa.trader.client.TradingServiceAdapter.getServiceURI(),5,5
org.apache.openjpa.lib.meta.ClassAnnotationMetaDataFilter.ClassAnnotationMetaDataFilter(Class<>),8,10
org.apache.openjpa.lib.meta.ClassAnnotationMetaDataFilter.ClassAnnotationMetaDataFilter(Class<>[]),13,19
org.apache.openjpa.lib.meta.ClassAnnotationMetaDataFilter.matches(Resource),52,137
"org.apache.openjpa.lib.meta.ClassAnnotationMetaDataFilter.matchAnnotations(ConstantPoolTable,int)",18,48
org.apache.openjpa.lib.meta.ClassAnnotationMetaDataFilter.matchAnnotation(String),9,12
"org.apache.openjpa.lib.meta.ClassAnnotationMetaDataFilter.skipAnnotationPropertyValue(ConstantPoolTable,int)",22,65
"org.apache.openjpa.lib.meta.ClassAnnotationMetaDataFilter.skipFieldOrMethod(ConstantPoolTable,int)",15,31
org.apache.openjpa.lib.meta.ClassAnnotationMetaDataFilter.getLog(),1,3
org.apache.openjpa.lib.meta.ClassAnnotationMetaDataFilter.setLog(Log),2,6
org.apache.openjpa.integration.validation.Address.setStreetAddress(String),4,10
org.apache.openjpa.integration.validation.Address.getStreetAddress(),3,5
org.apache.openjpa.integration.validation.Address.setCity(String),3,6
org.apache.openjpa.integration.validation.Address.getCity(),2,3
org.apache.openjpa.integration.validation.Address.setState(String),2,2
org.apache.openjpa.integration.validation.Address.getState(),1,1
org.apache.openjpa.integration.validation.Address.setPostalCode(String),4,10
org.apache.openjpa.integration.validation.Address.getPostalCode(),3,5
org.apache.openjpa.integration.validation.Address.setPhoneNumber(String),3,6
org.apache.openjpa.integration.validation.Address.getPhoneNumber(),2,3
org.apache.openjpa.integration.validation.Address.setId(long),1,1
org.apache.openjpa.integration.validation.Address.getId(),0,0
org.apache.openjpa.lib.util.Services.getImplementors(Class),7,11
"org.apache.openjpa.lib.util.Services.getImplementors(Class,ClassLoader)",9,15
org.apache.openjpa.lib.util.Services.getImplementors(String),13,20
"org.apache.openjpa.lib.util.Services.getImplementors(String,ClassLoader)",36,76
"org.apache.openjpa.lib.util.Services.addResources(URL,Set)",35,89
org.apache.openjpa.lib.util.Services.getImplementorClasses(Class),4,7
"org.apache.openjpa.lib.util.Services.getImplementorClasses(Class,ClassLoader)",21,47
org.apache.openjpa.lib.util.Services.getImplementorClasses(String),14,20
"org.apache.openjpa.lib.util.Services.getImplementorClasses(String,ClassLoader)",10,16
"org.apache.openjpa.lib.util.Services.getImplementorClasses(String,ClassLoader,boolean)",40,83
"org.apache.openjpa.jdbc.kernel.FinderQueryImpl.newFinder(ClassMapping,SelectExecutor)",25,51
"org.apache.openjpa.jdbc.kernel.FinderQueryImpl.FinderQueryImpl(ClassMapping,SelectImpl,SQLBuffer)",19,52
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.getIdentifier(),2,3
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.getDelegate(),3,4
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.getQueryString(),3,4
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.getPKColumns(),3,3
"org.apache.openjpa.jdbc.kernel.FinderQueryImpl.getPKValues(OpenJPAStateManager,JDBCStore)",21,45
"org.apache.openjpa.jdbc.kernel.FinderQueryImpl.execute(OpenJPAStateManager,StoreManager,FetchConfiguration)",35,93
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.extractImplementation(SelectExecutor),11,35
org.apache.openjpa.jdbc.kernel.FinderQueryImpl.toString(),3,5
org.apache.openjpa.jdbc.kernel.exps.ExpContext.ExpContext(),2,2
"org.apache.openjpa.jdbc.kernel.exps.ExpContext.ExpContext(JDBCStore,Object[],JDBCFetchConfiguration)",8,17
org.apache.openjpa.lib.util.TestReferenceSet.TestReferenceSet(String),4,6
org.apache.openjpa.lib.util.TestReferenceSet.setUp(),6,8
org.apache.openjpa.lib.util.TestReferenceSet.testBasics(),20,50
org.apache.openjpa.lib.util.TestReferenceSet.testHeldReference(),14,17
org.apache.openjpa.lib.util.TestReferenceSet.testWeakReference(),27,54
org.apache.openjpa.lib.util.TestReferenceSet.testChangeValue(),22,32
"org.apache.openjpa.jdbc.kernel.exps.WhenCondition.WhenCondition(Exp,Val)",4,10
org.apache.openjpa.jdbc.kernel.exps.WhenCondition.getExp(),1,3
org.apache.openjpa.jdbc.kernel.exps.WhenCondition.getVal(),1,3
org.apache.openjpa.jdbc.kernel.exps.WhenCondition.getType(),2,3
"org.apache.openjpa.jdbc.kernel.exps.WhenCondition.initialize(Select,ExpContext,Map)",11,25
"org.apache.openjpa.jdbc.kernel.exps.WhenCondition.appendTo(Select,ExpContext,ExpState,SQLBuffer)",12,31
"org.apache.openjpa.jdbc.kernel.exps.WhenCondition.selectColumns(Select,ExpContext,ExpState,boolean)",10,28
org.apache.openjpa.jdbc.kernel.exps.WhenCondition.acceptVisit(ExpressionVisitor),8,17
org.apache.openjpa.jdbc.kernel.exps.WhenCondition.getId(),2,3
org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.getProperties(),6,7
"org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.putUserObject(Object,Object)",9,14
org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.getUserObject(Object),7,11
org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.getStoreCache(),8,13
org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.getStoreCache(String),7,11
org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.getQueryResultCache(),4,10
org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.createEntityManager(),4,6
org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.createEntityManager(Map),20,33
org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.getConfiguration(),19,23
"org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.addLifecycleListener(Object,Class)",19,22
org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.removeLifecycleListener(Object),18,21
org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.addTransactionListener(Object),18,21
org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.removeTransactionListener(Object),18,21
org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.getDynamicQueryBuilder(),4,8
org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.getCriteriaBuilder(),6,10
org.apache.openjpa.persistence.OpenJPAEntityManagerFactory.getSupportedProperties(),5,7
org.apache.openjpa.jdbc.meta.strats.FlatClassStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.FlatClassStrategy.map(boolean),26,79
org.apache.openjpa.jdbc.meta.strats.FlatClassStrategy.isPrimaryKeyObjectId(boolean),7,10
org.apache.openjpa.jdbc.schema.LazySchemaFactory.getPrimaryKeys(),3,3
org.apache.openjpa.jdbc.schema.LazySchemaFactory.setPrimaryKeys(boolean),4,6
org.apache.openjpa.jdbc.schema.LazySchemaFactory.getForeignKeys(),3,3
org.apache.openjpa.jdbc.schema.LazySchemaFactory.setForeignKeys(boolean),4,6
org.apache.openjpa.jdbc.schema.LazySchemaFactory.getIndexes(),1,2
org.apache.openjpa.jdbc.schema.LazySchemaFactory.setIndexes(boolean),3,5
org.apache.openjpa.jdbc.schema.LazySchemaFactory.readSchema(),2,3
org.apache.openjpa.jdbc.schema.LazySchemaFactory.storeSchema(SchemaGroup),2,4
org.apache.openjpa.jdbc.schema.LazySchemaFactory.findTable(String),5,10
org.apache.openjpa.jdbc.schema.LazySchemaFactory.findTable(DBIdentifier),5,10
org.apache.openjpa.jdbc.schema.LazySchemaFactory.findTable(QualifiedDBIdentifier),7,18
org.apache.openjpa.jdbc.schema.LazySchemaFactory.findSequence(String),5,10
org.apache.openjpa.jdbc.schema.LazySchemaFactory.findSequence(DBIdentifier),5,10
org.apache.openjpa.jdbc.schema.LazySchemaFactory.findSequence(QualifiedDBIdentifier),8,18
"org.apache.openjpa.jdbc.schema.LazySchemaFactory.generateSchemaObject(QualifiedDBIdentifier,boolean)",53,149
org.apache.openjpa.jdbc.schema.LazySchemaFactory.setConfiguration(Configuration),7,15
org.apache.openjpa.jdbc.schema.LazySchemaFactory.startConfiguration(),2,2
org.apache.openjpa.jdbc.schema.LazySchemaFactory.endConfiguration(),1,1
org.apache.openjpa.event.AbstractTransactionListener.eventOccurred(TransactionEvent),9,12
org.apache.openjpa.event.AbstractTransactionListener.afterBegin(TransactionEvent),4,7
org.apache.openjpa.event.AbstractTransactionListener.beforeFlush(TransactionEvent),4,7
org.apache.openjpa.event.AbstractTransactionListener.afterFlush(TransactionEvent),4,7
org.apache.openjpa.event.AbstractTransactionListener.beforeCommit(TransactionEvent),4,7
org.apache.openjpa.event.AbstractTransactionListener.afterCommit(TransactionEvent),4,7
org.apache.openjpa.event.AbstractTransactionListener.afterRollback(TransactionEvent),4,7
org.apache.openjpa.event.AbstractTransactionListener.afterStateTransitions(TransactionEvent),4,7
org.apache.openjpa.event.AbstractTransactionListener.afterCommitComplete(TransactionEvent),5,8
org.apache.openjpa.event.AbstractTransactionListener.afterRollbackComplete(TransactionEvent),5,8
"org.apache.openjpa.enhance.PCEnhancer.PCEnhancer(OpenJPAConfiguration,Class)",22,33
"org.apache.openjpa.enhance.PCEnhancer.PCEnhancer(OpenJPAConfiguration,ClassMetaData)",25,38
"org.apache.openjpa.enhance.PCEnhancer.PCEnhancer(OpenJPAConfiguration,BCClass,MetaDataRepository)",33,54
"org.apache.openjpa.enhance.PCEnhancer.PCEnhancer(OpenJPAConfiguration,BCClass,MetaDataRepository,ClassLoader)",44,89
"org.apache.openjpa.enhance.PCEnhancer.PCEnhancer(MetaDataRepository,BCClass,ClassMetaData)",39,74
org.apache.openjpa.enhance.PCEnhancer.toPCSubclassName(Class),8,11
org.apache.openjpa.enhance.PCEnhancer.isPCSubclassName(String),12,20
org.apache.openjpa.enhance.PCEnhancer.toManagedTypeName(String),21,44
"org.apache.openjpa.enhance.PCEnhancer.PCEnhancer(OpenJPAConfiguration,BCClass,ClassMetaData)",11,17
org.apache.openjpa.enhance.PCEnhancer.getPCBytecode(),5,6
org.apache.openjpa.enhance.PCEnhancer.getManagedTypeBytecode(),15,20
org.apache.openjpa.enhance.PCEnhancer.getMetaData(),6,9
org.apache.openjpa.enhance.PCEnhancer.getAddDefaultConstructor(),13,16
org.apache.openjpa.enhance.PCEnhancer.setAddDefaultConstructor(boolean),14,21
org.apache.openjpa.enhance.PCEnhancer.getRedefine(),15,17
org.apache.openjpa.enhance.PCEnhancer.setRedefine(boolean),15,20
org.apache.openjpa.enhance.PCEnhancer.isAlreadyRedefined(),4,6
org.apache.openjpa.enhance.PCEnhancer.isAlreadySubclassed(),7,9
org.apache.openjpa.enhance.PCEnhancer.getCreateSubclass(),7,11
org.apache.openjpa.enhance.PCEnhancer.setCreateSubclass(boolean),12,18
org.apache.openjpa.enhance.PCEnhancer.getEnforcePropertyRestrictions(),10,15
org.apache.openjpa.enhance.PCEnhancer.setEnforcePropertyRestrictions(boolean),11,18
org.apache.openjpa.enhance.PCEnhancer.getDirectory(),14,17
org.apache.openjpa.enhance.PCEnhancer.setDirectory(File),15,20
org.apache.openjpa.enhance.PCEnhancer.getBytecodeWriter(),6,11
org.apache.openjpa.enhance.PCEnhancer.setBytecodeWriter(BytecodeWriter),6,15
org.apache.openjpa.enhance.PCEnhancer.run(),65,120
org.apache.openjpa.enhance.PCEnhancer.configureBCs(),26,56
org.apache.openjpa.enhance.PCEnhancer.record(),11,20
org.apache.openjpa.enhance.PCEnhancer.record(BCClass),10,22
org.apache.openjpa.enhance.PCEnhancer.validateProperties(),67,192
"org.apache.openjpa.enhance.PCEnhancer.registerBackingFieldInfo(FieldMetaData,BCMethod,BCField)",12,44
org.apache.openjpa.enhance.PCEnhancer.addAttributeTranslation(),61,180
org.apache.openjpa.enhance.PCEnhancer.getSetterName(FieldMetaData),11,17
org.apache.openjpa.enhance.PCEnhancer.getReturnedField(BCMethod),16,24
org.apache.openjpa.enhance.PCEnhancer.getAssignedField(BCMethod),14,20
"org.apache.openjpa.enhance.PCEnhancer.findField(BCMethod,Instruction,boolean)",52,180
"org.apache.openjpa.enhance.PCEnhancer.addViolation(String,Object[],boolean)",16,23
org.apache.openjpa.enhance.PCEnhancer.processViolations(),25,47
org.apache.openjpa.enhance.PCEnhancer.replaceAndValidateFieldAccess(),49,91
"org.apache.openjpa.enhance.PCEnhancer.replaceAndValidateFieldAccess(Code,Instruction,boolean,Instruction)",95,310
"org.apache.openjpa.enhance.PCEnhancer.addNotifyAccess(Code,FieldMetaData)",20,32
"org.apache.openjpa.enhance.PCEnhancer.addNotifyMutation(Code,FieldMetaData,int,int)",45,104
"org.apache.openjpa.enhance.PCEnhancer.isBackingFieldOfAnotherProperty(String,Code)",15,33
"org.apache.openjpa.enhance.PCEnhancer.getPersistenceCapableOwner(String,Class)",25,57
org.apache.openjpa.enhance.PCEnhancer.addPCMethods(),49,155
org.apache.openjpa.enhance.PCEnhancer.addClearFieldsMethod(),39,123
org.apache.openjpa.enhance.PCEnhancer.addNewInstanceMethod(boolean),61,163
org.apache.openjpa.enhance.PCEnhancer.addManagedFieldCountMethod(),50,110
org.apache.openjpa.enhance.PCEnhancer.addProvideFieldsMethods(),55,157
org.apache.openjpa.enhance.PCEnhancer.addReplaceFieldsMethods(),64,203
org.apache.openjpa.enhance.PCEnhancer.addCopyFieldsMethod(),53,144
"org.apache.openjpa.enhance.PCEnhancer.beginSwitchMethod(String,Code)",58,160
org.apache.openjpa.enhance.PCEnhancer.addMultipleFieldsMethodVersion(BCMethod),89,307
org.apache.openjpa.enhance.PCEnhancer.addStockMethods(),48,187
"org.apache.openjpa.enhance.PCEnhancer.translateFromStateManagerMethod(Method,boolean)",65,173
org.apache.openjpa.enhance.PCEnhancer.addGetVersionMethod(),44,129
org.apache.openjpa.enhance.PCEnhancer.toPrimitiveWrapper(FieldMetaData),14,39
org.apache.openjpa.enhance.PCEnhancer.addReplaceStateManagerMethod(),41,137
org.apache.openjpa.enhance.PCEnhancer.addNoOpApplicationIdentityMethods(),33,173
org.apache.openjpa.enhance.PCEnhancer.addCopyKeyFieldsToObjectIdMethod(boolean),112,720
"org.apache.openjpa.enhance.PCEnhancer.loadLocalValue(Code,int,int)",18,56
"org.apache.openjpa.enhance.PCEnhancer.storeLocalValue(Code,int,int)",18,56
"org.apache.openjpa.enhance.PCEnhancer.addExtractObjectIdFieldValueCode(Code,FieldMetaData)",61,609
org.apache.openjpa.enhance.PCEnhancer.addCopyKeyFieldsFromObjectIdMethod(boolean),95,553
org.apache.openjpa.enhance.PCEnhancer.usesClassStringIdConstructor(),12,34
org.apache.openjpa.enhance.PCEnhancer.unwrapSingleFieldIdentity(FieldMetaData),20,57
"org.apache.openjpa.enhance.PCEnhancer.getReflectionGetterMethod(Class,Class)",16,35
org.apache.openjpa.enhance.PCEnhancer.getFieldSupplierMethod(Class),9,19
org.apache.openjpa.enhance.PCEnhancer.getFieldConsumerMethod(Class),10,19
org.apache.openjpa.enhance.PCEnhancer.addNewObjectIdInstanceMethod(boolean),64,261
"org.apache.openjpa.enhance.PCEnhancer.getStateManagerMethod(Class,String,boolean,boolean)",27,62
"org.apache.openjpa.enhance.PCEnhancer.getMethod(Class,Class,String,boolean,boolean,boolean)",55,157
"org.apache.openjpa.enhance.PCEnhancer.throwException(Code,Class)",16,31
org.apache.openjpa.enhance.PCEnhancer.enhanceClass(),41,75
org.apache.openjpa.enhance.PCEnhancer.addFields(),29,93
org.apache.openjpa.enhance.PCEnhancer.addStaticInitializer(),68,288
org.apache.openjpa.enhance.PCEnhancer.getFieldFlag(FieldMetaData),24,65
org.apache.openjpa.enhance.PCEnhancer.addSerializationCode(),81,245
org.apache.openjpa.enhance.PCEnhancer.addSubclassSerializationCode(),50,116
org.apache.openjpa.enhance.PCEnhancer.externalizeDetached(),16,23
"org.apache.openjpa.enhance.PCEnhancer.modifyWriteObjectMethod(BCMethod,boolean)",50,127
"org.apache.openjpa.enhance.PCEnhancer.modifyReadObjectMethod(BCMethod,boolean)",35,80
org.apache.openjpa.enhance.PCEnhancer.addIsDetachedMethod(),26,72
org.apache.openjpa.enhance.PCEnhancer.writeIsDetachedMethod(Code),100,492
"org.apache.openjpa.enhance.PCEnhancer.ifDefaultValue(Code,FieldMetaData)",23,66
org.apache.openjpa.enhance.PCEnhancer.getOrCreateClassInitCode(boolean),26,69
org.apache.openjpa.enhance.PCEnhancer.addCloningCode(),77,203
org.apache.openjpa.enhance.PCEnhancer.getAuxiliaryEnhancers(),7,12
org.apache.openjpa.enhance.PCEnhancer.runAuxiliaryEnhancers(),10,16
org.apache.openjpa.enhance.PCEnhancer.skipEnhance(BCMethod),15,29
org.apache.openjpa.enhance.PCEnhancer.addAccessors(),23,48
org.apache.openjpa.enhance.PCEnhancer.addSubclassSetMethod(FieldMetaData),50,120
org.apache.openjpa.enhance.PCEnhancer.setVisibilityToSuperMethod(BCMethod),15,37
org.apache.openjpa.enhance.PCEnhancer.addSubclassGetMethod(FieldMetaData),42,100
"org.apache.openjpa.enhance.PCEnhancer.addGetMethod(int,FieldMetaData)",58,207
"org.apache.openjpa.enhance.PCEnhancer.addSetMethod(int,FieldMetaData)",59,202
org.apache.openjpa.enhance.PCEnhancer.addAttachDetachCode(),25,75
org.apache.openjpa.enhance.PCEnhancer.addDetachedStateMethods(boolean),40,146
"org.apache.openjpa.enhance.PCEnhancer.getfield(Code,BCClass,String)",53,158
"org.apache.openjpa.enhance.PCEnhancer.putfield(Code,BCClass,String,Class)",29,110
org.apache.openjpa.enhance.PCEnhancer.toBackingFieldName(String),19,44
org.apache.openjpa.enhance.PCEnhancer.fromBackingFieldName(String),19,43
"org.apache.openjpa.enhance.PCEnhancer.addDetachExternalize(boolean,boolean)",57,165
"org.apache.openjpa.enhance.PCEnhancer.addReadExternal(boolean,boolean)",50,195
org.apache.openjpa.enhance.PCEnhancer.addReadExternalFields(),41,98
"org.apache.openjpa.enhance.PCEnhancer.addReadUnmanaged(Collection,boolean)",44,101
"org.apache.openjpa.enhance.PCEnhancer.readExternal(Code,String,Class,FieldMetaData)",55,164
"org.apache.openjpa.enhance.PCEnhancer.addWriteExternal(boolean,boolean)",53,212
org.apache.openjpa.enhance.PCEnhancer.addWriteExternalFields(),41,90
"org.apache.openjpa.enhance.PCEnhancer.addWriteUnmanaged(Collection,boolean)",43,96
"org.apache.openjpa.enhance.PCEnhancer.writeExternal(Code,String,Class,FieldMetaData)",34,91
"org.apache.openjpa.enhance.PCEnhancer.addGetManagedValueCode(Code,FieldMetaData)",10,18
"org.apache.openjpa.enhance.PCEnhancer.addGetManagedValueCode(Code,FieldMetaData,boolean)",71,138
"org.apache.openjpa.enhance.PCEnhancer.addSetManagedValueCode(Code,FieldMetaData)",58,109
"org.apache.openjpa.enhance.PCEnhancer.loadManagedInstance(Code,boolean,FieldMetaData)",24,45
"org.apache.openjpa.enhance.PCEnhancer.loadManagedInstance(Code,boolean)",13,26
org.apache.openjpa.enhance.PCEnhancer.getAccessorParameterOffset(FieldMetaData),8,10
org.apache.openjpa.enhance.PCEnhancer.isPropertyAccess(ClassMetaData),11,20
org.apache.openjpa.enhance.PCEnhancer.isPropertyAccess(FieldMetaData),11,19
org.apache.openjpa.enhance.PCEnhancer.isFieldAccess(FieldMetaData),11,19
org.apache.openjpa.enhance.PCEnhancer.createGetMethod(FieldMetaData),40,115
org.apache.openjpa.enhance.PCEnhancer.createSetMethod(FieldMetaData),40,115
org.apache.openjpa.enhance.PCEnhancer.addGetEnhancementContractVersionMethod(),17,37
org.apache.openjpa.enhance.PCEnhancer.getType(ClassMetaData),8,16
"org.apache.openjpa.enhance.PCEnhancer.transferCodeAttributes(BCMethod,BCMethod)",11,26
org.apache.openjpa.enhance.PCEnhancer.main(String[]),106,189
"org.apache.openjpa.enhance.PCEnhancer.run(String[],Options)",17,22
"org.apache.openjpa.enhance.PCEnhancer.run(String[],Options).$1.run(Options)",11,17
"org.apache.openjpa.enhance.PCEnhancer.run(OpenJPAConfiguration,String[],Options)",35,86
"org.apache.openjpa.enhance.PCEnhancer.run(OpenJPAConfiguration,String[],Flags,MetaDataRepository,BytecodeWriter,ClassLoader)",69,222
"org.apache.openjpa.enhance.PCEnhancer.AuxiliaryEnhancer.run(BCClass,ClassMetaData)",3,4
org.apache.openjpa.enhance.PCEnhancer.AuxiliaryEnhancer.skipEnhance(BCMethod),3,3
org.apache.openjpa.enhance.PCEnhancer.addGetIDOwningClass(),16,29
"org.apache.openjpa.enhance.PCEnhancer.checkEnhancementLevel(Class<>,Log)",39,81
org.apache.openjpa.enhance.PCEnhancer.configureOptimizeIdCopy(),10,18
"org.apache.openjpa.enhance.PCEnhancer.optimizeIdCopy(Class<>,FieldMetaData[])",41,88
"org.apache.openjpa.enhance.PCEnhancer.getIdClassConstructorParmOrder(Class<>,ArrayList<Integer>,FieldMetaData[])",63,180
org.apache.openjpa.jdbc.sql.SQLServerDictionary.SQLServerDictionary(),20,29
org.apache.openjpa.jdbc.sql.SQLServerDictionary.connectedConfiguration(Connection),90,267
"org.apache.openjpa.jdbc.sql.SQLServerDictionary.getColumns(DatabaseMetaData,String,String,String,String,Connection)",15,39
"org.apache.openjpa.jdbc.sql.SQLServerDictionary.getColumns(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",34,100
"org.apache.openjpa.jdbc.sql.SQLServerDictionary.appendLength(SQLBuffer,int)",13,18
"org.apache.openjpa.jdbc.sql.SQLServerDictionary.appendXmlComparison(SQLBuffer,String,FilterValue,FilterValue,boolean,boolean)",27,84
"org.apache.openjpa.jdbc.sql.SQLServerDictionary.appendXmlComparison1(SQLBuffer,String,FilterValue,FilterValue)",23,71
"org.apache.openjpa.jdbc.sql.SQLServerDictionary.appendXmlExist(SQLBuffer,FilterValue)",14,24
"org.apache.openjpa.jdbc.sql.SQLServerDictionary.appendXmlComparison2(SQLBuffer,String,FilterValue,FilterValue)",22,60
"org.apache.openjpa.jdbc.sql.SQLServerDictionary.appendXmlValue(SQLBuffer,FilterValue)",24,62
org.apache.openjpa.jdbc.sql.SQLServerDictionary.getSchemaCase(),3,5
org.apache.openjpa.jdbc.sql.SQLServerDictionary.setSupportsXMLColumn(boolean),14,23
"org.apache.openjpa.jdbc.sql.SQLServerDictionary.isFatalException(int,SQLException)",11,26
"org.apache.openjpa.jdbc.sql.SQLServerDictionary.getLOBStream(JDBCStore,ResultSet,int)",12,20
"org.apache.openjpa.jdbc.sql.SQLServerDictionary.getCharacterStream(ResultSet,int)",9,16
"org.apache.openjpa.jdbc.sql.SQLServerDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",10,30
org.apache.openjpa.enhance.UnenhancedMany.UnenhancedMany(),1,1
org.apache.openjpa.enhance.UnenhancedMany.UnenhancedMany(int),1,1
org.apache.openjpa.enhance.UnenhancedMany.getId(),0,0
org.apache.openjpa.enhance.UnenhancedMany.getOne(),1,1
org.apache.openjpa.enhance.UnenhancedMany.setOne(UnenhancedOne),2,2
org.apache.openjpa.enhance.UnenhancedMany.equals(Object),4,4
org.apache.openjpa.enhance.UnenhancedMany.hashCode(),2,2
org.apache.openjpa.enhance.UnenhancedMany.clone(),4,6
org.apache.openjpa.jdbc.kernel.EntityD.EntityD(),1,1
org.apache.openjpa.jdbc.kernel.EntityD.setId(Integer),2,2
org.apache.openjpa.jdbc.kernel.EntityD.getId(),1,1
org.apache.openjpa.jdbc.kernel.EntityD.getEntityA(),1,3
org.apache.openjpa.jdbc.kernel.EntityD.setEntityA(EntityA),2,6
org.apache.openjpa.jdbc.kernel.EntityD.getEntityB(),1,3
org.apache.openjpa.jdbc.kernel.EntityD.setEntityB(EntityB),2,6
org.apache.openjpa.jdbc.kernel.EntityD.getName(),2,3
org.apache.openjpa.jdbc.kernel.EntityD.setName(String),3,6
org.apache.openjpa.jdbc.persistence.classcriteria.Movie.Movie(),1,1
org.apache.openjpa.jdbc.persistence.classcriteria.Movie.Movie(String),3,4
org.apache.openjpa.jdbc.persistence.classcriteria.Movie.getDuration(),2,3
org.apache.openjpa.jdbc.persistence.classcriteria.Movie.setDuration(int),6,8
org.apache.openjpa.jdbc.persistence.classcriteria.Movie.getArtist(),1,3
org.apache.openjpa.jdbc.persistence.classcriteria.Movie.setArtist(Artist),2,6
org.apache.openjpa.conf.MetaDataCacheMaintenance.main(String[]),30,60
"org.apache.openjpa.conf.MetaDataCacheMaintenance.MetaDataCacheMaintenance(BrokerFactory,boolean,boolean)",12,16
"org.apache.openjpa.conf.MetaDataCacheMaintenance.MetaDataCacheMaintenance(BrokerFactory,boolean)",24,39
org.apache.openjpa.conf.MetaDataCacheMaintenance.setLog(Log),2,6
org.apache.openjpa.conf.MetaDataCacheMaintenance.usage(),23,27
org.apache.openjpa.conf.MetaDataCacheMaintenance.store(),37,73
org.apache.openjpa.conf.MetaDataCacheMaintenance.loadQueries(),14,26
"org.apache.openjpa.conf.MetaDataCacheMaintenance.loadQuery(Broker,QueryMetaData)",18,36
org.apache.openjpa.conf.MetaDataCacheMaintenance.dump(),20,33
"org.apache.openjpa.conf.MetaDataCacheMaintenance.log(MetaDataRepository,Map)",30,97
"org.apache.openjpa.kernel.OpenJPASavepoint.OpenJPASavepoint(Broker,String,boolean)",11,19
org.apache.openjpa.kernel.OpenJPASavepoint.getBroker(),3,6
org.apache.openjpa.kernel.OpenJPASavepoint.getName(),3,5
org.apache.openjpa.kernel.OpenJPASavepoint.getCopyFieldState(),7,9
org.apache.openjpa.kernel.OpenJPASavepoint.getStates(),7,10
org.apache.openjpa.kernel.OpenJPASavepoint.save(Collection<StateManagerImpl>),18,30
org.apache.openjpa.kernel.OpenJPASavepoint.release(boolean),16,20
org.apache.openjpa.kernel.OpenJPASavepoint.rollback(Collection<OpenJPASavepoint>),30,64
org.apache.openjpa.persistence.common.apps.Student.Student(),1,1
org.apache.openjpa.persistence.common.apps.Student.Student(String),3,5
"org.apache.openjpa.persistence.common.apps.Student.Student(String,List<Course>,List<Department>)",8,15
org.apache.openjpa.persistence.common.apps.Student.getCourse(),2,4
org.apache.openjpa.persistence.common.apps.Student.setCourse(List<Course>),3,7
org.apache.openjpa.persistence.common.apps.Student.getDepartment(),2,4
org.apache.openjpa.persistence.common.apps.Student.setDepartment(List<Department>),3,7
org.apache.openjpa.persistence.common.apps.Student.getName(),2,3
org.apache.openjpa.persistence.common.apps.Student.setName(String),3,6
org.apache.openjpa.instrumentation.PreparedQueryCacheInstrument.getTotalExecutionCount(),7,8
org.apache.openjpa.instrumentation.PreparedQueryCacheInstrument.getTotalExecutionCount(String),9,10
org.apache.openjpa.instrumentation.PreparedQueryCacheInstrument.getExecutionCount(),6,7
org.apache.openjpa.instrumentation.PreparedQueryCacheInstrument.getExecutionCount(String),8,9
org.apache.openjpa.instrumentation.PreparedQueryCacheInstrument.getHitCount(),9,9
org.apache.openjpa.instrumentation.PreparedQueryCacheInstrument.getHitCount(String),11,11
org.apache.openjpa.instrumentation.PreparedQueryCacheInstrument.getTotalHitCount(),8,9
org.apache.openjpa.instrumentation.PreparedQueryCacheInstrument.getTotalHitCount(String),10,11
org.apache.openjpa.instrumentation.PreparedQueryCacheInstrument.reset(),4,4
org.apache.openjpa.instrumentation.PreparedQueryCacheInstrument.sinceDate(),6,8
org.apache.openjpa.instrumentation.PreparedQueryCacheInstrument.startDate(),7,9
org.apache.openjpa.instrumentation.PreparedQueryCacheInstrument.queries(),7,8
openbook.client.DeliveryPage.DeliveryPage(OpenBookService),35,133
openbook.client.DeliveryPage.DeliveryPage(OpenBookService).$1.actionPerformed(ActionEvent),13,18
openbook.client.DeliveryPage.DeliveryPage(OpenBookService).$2.actionPerformed(ActionEvent),15,22
openbook.client.DeliveryPage.DeliveryPage(OpenBookService).$3.actionPerformed(ActionEvent),15,22
openbook.client.DeliveryPage.DeliveryPage(OpenBookService).$4.actionPerformed(ActionEvent),9,11
openbook.client.DeliveryPage.DeliveryPage(OpenBookService).$4.actionPerformed(ActionEvent).$1.doInBackground(),16,29
openbook.client.DeliveryPage.DeliveryPage(OpenBookService).$4.actionPerformed(ActionEvent).$1.done(),16,22
openbook.client.DeliveryPage.getOrders(PurchaseOrder.Status),23,36
openbook.client.DeliveryPage.getOrders(PurchaseOrder.Status).$5.doInBackground(),6,6
org.apache.openjpa.kernel.LocalManagedRuntime.LocalManagedRuntime(Broker),9,14
org.apache.openjpa.kernel.LocalManagedRuntime.getTransactionManager(),2,4
org.apache.openjpa.kernel.LocalManagedRuntime.begin(),5,7
org.apache.openjpa.kernel.LocalManagedRuntime.commit(),26,68
org.apache.openjpa.kernel.LocalManagedRuntime.rollback(),13,34
org.apache.openjpa.kernel.LocalManagedRuntime.notifyAfterCompletion(int),13,23
org.apache.openjpa.kernel.LocalManagedRuntime.setRollbackOnly(),4,6
org.apache.openjpa.kernel.LocalManagedRuntime.setRollbackOnly(Throwable),4,6
org.apache.openjpa.kernel.LocalManagedRuntime.getRollbackCause(),3,4
org.apache.openjpa.kernel.LocalManagedRuntime.getStatus(),5,13
org.apache.openjpa.kernel.LocalManagedRuntime.getTransaction(),1,2
org.apache.openjpa.kernel.LocalManagedRuntime.resume(Transaction),7,10
org.apache.openjpa.kernel.LocalManagedRuntime.setTransactionTimeout(int),8,11
org.apache.openjpa.kernel.LocalManagedRuntime.suspend(),6,9
"org.apache.openjpa.kernel.LocalManagedRuntime.delistResource(XAResource,int)",8,12
org.apache.openjpa.kernel.LocalManagedRuntime.enlistResource(XAResource),7,11
org.apache.openjpa.kernel.LocalManagedRuntime.registerSynchronization(Synchronization),7,13
openbook.domain.Inventory.Inventory(),1,1
"openbook.domain.Inventory.Inventory(Book,int)",15,45
openbook.domain.Inventory.getBook(),3,7
openbook.domain.Inventory.getInStock(),9,13
openbook.domain.Inventory.getSupplied(),5,7
openbook.domain.Inventory.getSold(),5,7
openbook.domain.Inventory.increment(int),14,20
openbook.domain.Inventory.decrement(int),11,20
openbook.domain.Inventory.getVersion(),1,2
org.apache.openjpa.trader.domain.Trade.Trade(),1,1
"org.apache.openjpa.trader.domain.Trade.Trade(Ask,Bid)",19,61
org.apache.openjpa.trader.domain.Trade.getId(),0,0
org.apache.openjpa.trader.domain.Trade.getBuyer(),3,4
org.apache.openjpa.trader.domain.Trade.getSeller(),2,3
org.apache.openjpa.trader.domain.Trade.getStock(),1,3
org.apache.openjpa.trader.domain.Trade.getPrice(),1,2
org.apache.openjpa.trader.domain.Trade.getVolume(),1,2
org.apache.openjpa.trader.domain.Trade.hashCode(),4,10
org.apache.openjpa.trader.domain.Trade.equals(Object),4,10
org.apache.openjpa.trader.domain.Trade.toString(),2,3
org.apache.openjpa.kernel.DelegatingBrokerFactory.DelegatingBrokerFactory(BrokerFactory),6,10
"org.apache.openjpa.kernel.DelegatingBrokerFactory.DelegatingBrokerFactory(BrokerFactory,RuntimeExceptionTranslator)",11,29
org.apache.openjpa.kernel.DelegatingBrokerFactory.getDelegate(),4,6
org.apache.openjpa.kernel.DelegatingBrokerFactory.getInnermostDelegate(),5,10
org.apache.openjpa.kernel.DelegatingBrokerFactory.hashCode(),4,6
org.apache.openjpa.kernel.DelegatingBrokerFactory.equals(Object),7,13
org.apache.openjpa.kernel.DelegatingBrokerFactory.translate(RuntimeException),5,11
org.apache.openjpa.kernel.DelegatingBrokerFactory.getConfiguration(),6,8
org.apache.openjpa.kernel.DelegatingBrokerFactory.getProperties(),8,9
org.apache.openjpa.kernel.DelegatingBrokerFactory.getSupportedProperties(),8,10
"org.apache.openjpa.kernel.DelegatingBrokerFactory.putUserObject(Object,Object)",8,15
org.apache.openjpa.kernel.DelegatingBrokerFactory.getUserObject(Object),7,12
org.apache.openjpa.kernel.DelegatingBrokerFactory.newBroker(),5,7
"org.apache.openjpa.kernel.DelegatingBrokerFactory.newBroker(String,String,boolean,int,boolean)",9,19
"org.apache.openjpa.kernel.DelegatingBrokerFactory.newBroker(String,String,boolean,int,boolean,String,String)",14,29
"org.apache.openjpa.kernel.DelegatingBrokerFactory.addLifecycleListener(Object,Class[])",9,15
org.apache.openjpa.kernel.DelegatingBrokerFactory.removeLifecycleListener(Object),8,13
org.apache.openjpa.kernel.DelegatingBrokerFactory.addTransactionListener(Object),8,13
org.apache.openjpa.kernel.DelegatingBrokerFactory.removeTransactionListener(Object),8,13
org.apache.openjpa.kernel.DelegatingBrokerFactory.close(),5,6
org.apache.openjpa.kernel.DelegatingBrokerFactory.isClosed(),5,6
org.apache.openjpa.kernel.DelegatingBrokerFactory.lock(),5,6
org.apache.openjpa.kernel.DelegatingBrokerFactory.unlock(),5,6
org.apache.openjpa.kernel.DelegatingBrokerFactory.assertOpen(),4,4
org.apache.openjpa.kernel.DelegatingBrokerFactory.postCreationCallback(),7,10
org.apache.openjpa.kernel.TestDynamicClassRegistration.setUp(),6,8
org.apache.openjpa.kernel.TestDynamicClassRegistration.tearDown(),4,7
org.apache.openjpa.kernel.TestDynamicClassRegistration.testEnhancedDynamicClassRegistration(),27,46
org.apache.openjpa.kernel.TestDynamicClassRegistration.testUnenhancedDynamicClassRegistration(),31,53
org.apache.openjpa.kernel.StoreContext.getBroker(),7,10
org.apache.openjpa.kernel.StoreContext.getConfiguration(),4,6
org.apache.openjpa.kernel.StoreContext.getFetchConfiguration(),6,10
org.apache.openjpa.kernel.StoreContext.pushFetchConfiguration(),10,19
org.apache.openjpa.kernel.StoreContext.pushFetchConfiguration(FetchConfiguration),9,18
org.apache.openjpa.kernel.StoreContext.popFetchConfiguration(),18,24
org.apache.openjpa.kernel.StoreContext.getClassLoader(),6,8
org.apache.openjpa.kernel.StoreContext.getLockManager(),2,6
org.apache.openjpa.kernel.StoreContext.getStoreManager(),9,18
org.apache.openjpa.kernel.StoreContext.getConnectionUserName(),4,7
org.apache.openjpa.kernel.StoreContext.getConnectionPassword(),3,5
"org.apache.openjpa.kernel.StoreContext.findCached(Object,FindCallbacks)",10,17
"org.apache.openjpa.kernel.StoreContext.find(Object,boolean,FindCallbacks)",27,50
"org.apache.openjpa.kernel.StoreContext.findAll(Collection<Object>,boolean,FindCallbacks)",10,19
"org.apache.openjpa.kernel.StoreContext.find(Object,FetchConfiguration,BitSet,Object,int)",41,60
"org.apache.openjpa.kernel.StoreContext.findAll(Collection<Object>,FetchConfiguration,BitSet,Object,int)",11,21
"org.apache.openjpa.kernel.StoreContext.extentIterator(Class<>,boolean,FetchConfiguration,boolean)",25,31
"org.apache.openjpa.kernel.StoreContext.retrieve(Object,boolean,OpCallbacks)",24,34
"org.apache.openjpa.kernel.StoreContext.retrieveAll(Collection<Object>,boolean,OpCallbacks)",14,17
"org.apache.openjpa.kernel.StoreContext.embed(Object,Object,OpenJPAStateManager,ValueMetaData)",14,38
org.apache.openjpa.kernel.StoreContext.getObjectIdType(Class<>),8,9
"org.apache.openjpa.kernel.StoreContext.newObjectId(Class<>,Object)",12,23
org.apache.openjpa.kernel.StoreContext.getPersistedTypes(),8,8
org.apache.openjpa.kernel.StoreContext.getDeletedTypes(),7,8
org.apache.openjpa.kernel.StoreContext.getUpdatedTypes(),9,9
org.apache.openjpa.kernel.StoreContext.getManagedObjects(),6,7
org.apache.openjpa.kernel.StoreContext.getTransactionalObjects(),8,8
org.apache.openjpa.kernel.StoreContext.getPendingTransactionalObjects(),8,9
org.apache.openjpa.kernel.StoreContext.getDirtyObjects(),7,8
org.apache.openjpa.kernel.StoreContext.getOrderDirtyObjects(),8,11
org.apache.openjpa.kernel.StoreContext.setOrderDirtyObjects(boolean),9,12
org.apache.openjpa.kernel.StoreContext.getStateManager(Object),15,20
org.apache.openjpa.kernel.StoreContext.getLockLevel(Object),5,8
org.apache.openjpa.kernel.StoreContext.getVersion(Object),7,10
org.apache.openjpa.kernel.StoreContext.isDirty(Object),3,5
org.apache.openjpa.kernel.StoreContext.isTransactional(Object),3,5
"org.apache.openjpa.kernel.StoreContext.transactional(Object,boolean,OpCallbacks)",11,18
"org.apache.openjpa.kernel.StoreContext.transactionalAll(Collection<Object>,boolean,OpCallbacks)",13,21
"org.apache.openjpa.kernel.StoreContext.nontransactional(Object,OpCallbacks)",5,6
"org.apache.openjpa.kernel.StoreContext.nontransactionalAll(Collection<Object>,OpCallbacks)",7,8
org.apache.openjpa.kernel.StoreContext.isPersistent(Object),3,5
org.apache.openjpa.kernel.StoreContext.isNew(Object),8,10
org.apache.openjpa.kernel.StoreContext.isDeleted(Object),3,5
org.apache.openjpa.kernel.StoreContext.getObjectId(Object),4,6
org.apache.openjpa.kernel.StoreContext.getDetachState(),10,13
org.apache.openjpa.kernel.StoreContext.setDetachState(int),11,15
org.apache.openjpa.kernel.StoreContext.getPopulateDataCache(),9,10
org.apache.openjpa.kernel.StoreContext.setPopulateDataCache(boolean),8,11
org.apache.openjpa.kernel.StoreContext.isTrackChangesByType(),16,19
org.apache.openjpa.kernel.StoreContext.setTrackChangesByType(boolean),43,58
org.apache.openjpa.kernel.StoreContext.isManaged(),4,5
org.apache.openjpa.kernel.StoreContext.isActive(),3,4
org.apache.openjpa.kernel.StoreContext.isStoreActive(),4,6
org.apache.openjpa.kernel.StoreContext.beginStore(),4,6
org.apache.openjpa.kernel.StoreContext.hasConnection(),9,11
org.apache.openjpa.kernel.StoreContext.getConnection(),4,6
org.apache.openjpa.kernel.StoreContext.lock(),1,1
org.apache.openjpa.kernel.StoreContext.unlock(),4,4
org.apache.openjpa.kernel.StoreContext.getConnectionFactoryName(),5,8
org.apache.openjpa.kernel.StoreContext.setConnectionFactoryName(String),6,13
org.apache.openjpa.kernel.StoreContext.getConnectionFactory2Name(),5,8
org.apache.openjpa.kernel.StoreContext.setConnectionFactory2Name(String),6,13
org.apache.openjpa.kernel.StoreContext.getConnectionFactory(),8,15
org.apache.openjpa.kernel.StoreContext.getConnectionFactory2(),8,15
org.apache.openjpa.kernel.StoreContext.isCached(List<Object>),17,27
org.apache.openjpa.kernel.StoreContext.setAllowReferenceToSiblingContext(boolean),23,36
org.apache.openjpa.kernel.StoreContext.getAllowReferenceToSiblingContext(),9,13
org.apache.openjpa.kernel.StoreContext.setPostLoadOnMerge(boolean),13,24
org.apache.openjpa.kernel.StoreContext.getPostLoadOnMerge(),9,12
"org.apache.openjpa.kernel.PNewFlushedDeletedFlushedState.initialize(StateManagerImpl,PCState)",5,5
org.apache.openjpa.kernel.PNewFlushedDeletedFlushedState.persist(StateManagerImpl),7,8
org.apache.openjpa.kernel.PNewFlushedDeletedFlushedState.toString(),4,6
org.apache.openjpa.meta.TestSecondaryTable.setUp(),15,19
org.apache.openjpa.meta.TestSecondaryTable.testMappingInfo(),15,40
"org.apache.openjpa.persistence.criteria.CriteriaExpressionBuilder.getQueryExpressions(ExpressionFactory,CriteriaQueryImpl<>)",33,81
"org.apache.openjpa.persistence.criteria.CriteriaExpressionBuilder.evalAccessPaths(QueryExpressions,ExpressionFactory,CriteriaQueryImpl<>)",38,97
"org.apache.openjpa.persistence.criteria.CriteriaExpressionBuilder.evalOrderingAndProjection(QueryExpressions,ExpressionFactory,CriteriaQueryImpl<>)",14,26
"org.apache.openjpa.persistence.criteria.CriteriaExpressionBuilder.evalOrdering(QueryExpressions,ExpressionFactory,CriteriaQueryImpl<>)",43,128
"org.apache.openjpa.persistence.criteria.CriteriaExpressionBuilder.evalGrouping(QueryExpressions,ExpressionFactory,CriteriaQueryImpl<>)",19,42
"org.apache.openjpa.persistence.criteria.CriteriaExpressionBuilder.evalDistinct(QueryExpressions,ExpressionFactory,CriteriaQueryImpl<>)",10,24
"org.apache.openjpa.persistence.criteria.CriteriaExpressionBuilder.evalCrossJoinRoots(QueryExpressions,ExpressionFactory,CriteriaQueryImpl<>)",34,64
"org.apache.openjpa.persistence.criteria.CriteriaExpressionBuilder.evalFilter(QueryExpressions,ExpressionFactory,CriteriaQueryImpl<>)",30,107
"org.apache.openjpa.persistence.criteria.CriteriaExpressionBuilder.evalProjections(QueryExpressions,ExpressionFactory,CriteriaQueryImpl<>,Map<ExpressionImpl<>,Value>)",24,86
"org.apache.openjpa.persistence.criteria.CriteriaExpressionBuilder.getProjections(QueryExpressions,List<Selection<>>,List<Value>,List<String>,List<String>,ExpressionFactory,CriteriaQueryImpl<>,MetamodelImpl,Map<ExpressionImpl<>,Value>)",44,141
"org.apache.openjpa.persistence.criteria.CriteriaExpressionBuilder.evalFetchJoin(QueryExpressions,ExpressionFactory,CriteriaQueryImpl<>)",27,79
"org.apache.openjpa.persistence.criteria.CriteriaExpressionBuilder.getShape(CriteriaQueryImpl<>,ResultShape<>,Selection<>)",31,109
org.apache.openjpa.persistence.criteria.CriteriaExpressionBuilder.evalResultShape(CriteriaQueryImpl<>),32,110
openbook.server.OpenBookService.login(String),13,21
"openbook.server.OpenBookService.select(String,Double,Double,String,QueryDecorator)",28,47
"openbook.server.OpenBookService.getQuery(String,Double,Double,String)",22,41
"openbook.server.OpenBookService.query(String,Class<T>,QueryDecorator)",17,34
openbook.server.OpenBookService.getExtent(Class<T>),3,3
openbook.server.OpenBookService.placeOrder(ShoppingCart),7,14
openbook.server.OpenBookService.deliver(PurchaseOrder),14,17
"openbook.server.OpenBookService.supply(Book,int)",9,18
"openbook.server.OpenBookService.getOrders(PurchaseOrder.Status,Customer)",9,17
openbook.server.OpenBookService.getReorderableBooks(int),9,21
openbook.server.OpenBookService.count(Class<>),7,13
"openbook.server.OpenBookService.initialize(Map<String,Object>)",21,26
openbook.server.OpenBookService.clean(),3,3
openbook.server.OpenBookService.getUnit(),6,7
openbook.server.OpenBookService.getUnitName(),5,7
openbook.server.OpenBookService.isManaged(),6,7
org.apache.openjpa.integration.validation.TestConstraints.setUp(),17,23
org.apache.openjpa.integration.validation.TestConstraints.tearDown(),4,7
org.apache.openjpa.integration.validation.TestConstraints.testNullUpdateConstraint(),45,137
org.apache.openjpa.integration.validation.TestConstraints.testNullDeleteIgnored(),53,181
org.apache.openjpa.integration.validation.TestConstraints.testNullConstraintIgnored(),42,98
org.apache.openjpa.integration.validation.TestConstraints.testNullConstraint(),36,85
org.apache.openjpa.integration.validation.TestConstraints.testNotNullConstraint(),36,85
org.apache.openjpa.integration.validation.TestConstraints.testNullNotNullConstraint(),33,62
org.apache.openjpa.integration.validation.TestConstraints.testAssertTrueConstraint(),36,85
org.apache.openjpa.integration.validation.TestConstraints.testAssertFalseConstraint(),36,85
org.apache.openjpa.integration.validation.TestConstraints.testAssertTrueFalseConstraint(),32,62
org.apache.openjpa.integration.validation.TestConstraints.testDecimalMinConstraint(),38,98
org.apache.openjpa.integration.validation.TestConstraints.testDecimalMaxConstraint(),38,98
org.apache.openjpa.integration.validation.TestConstraints.testDecimalMinMaxConstraint(),35,77
org.apache.openjpa.integration.validation.TestConstraints.testMinConstraint(),37,91
org.apache.openjpa.integration.validation.TestConstraints.testMaxConstraint(),37,91
org.apache.openjpa.integration.validation.TestConstraints.testMinMaxConstraint(),34,70
org.apache.openjpa.integration.validation.TestConstraints.testDigitsTwoConstraint(),37,93
org.apache.openjpa.integration.validation.TestConstraints.testDigitsFiveConstraint(),38,98
org.apache.openjpa.integration.validation.TestConstraints.testDigitsConstraint(),33,68
org.apache.openjpa.integration.validation.TestConstraints.testSizeStringConstraint(),38,97
org.apache.openjpa.integration.validation.TestConstraints.testSizeMapConstraint(),38,97
org.apache.openjpa.integration.validation.TestConstraints.testSizeConstraint(),38,80
org.apache.openjpa.integration.validation.TestConstraints.testDatesFutureConstraint(),38,97
org.apache.openjpa.integration.validation.TestConstraints.testDatesPastConstraint(),38,97
org.apache.openjpa.integration.validation.TestConstraints.testDatesConstraint(),35,69
org.apache.openjpa.integration.validation.TestConstraints.testPatternAlphaConstraint(),39,97
org.apache.openjpa.integration.validation.TestConstraints.testPatternNumericConstraint(),39,97
org.apache.openjpa.integration.validation.TestConstraints.testPatternConstraint(),33,68
org.apache.openjpa.integration.validation.TestConstraints.testValidFailuresConstraint(),72,234
org.apache.openjpa.integration.validation.TestConstraints.testValidPassConstraint(),43,87
org.apache.openjpa.integration.validation.TestConstraints.getLog(),10,12
org.apache.openjpa.jdbc.kernel.JDBC3SavepointManager.rollbackDataStore(ConnectionSavepoint),13,28
org.apache.openjpa.jdbc.kernel.JDBC3SavepointManager.setDataStore(ConnectionSavepoint),14,31
"openbook.client.BuyBookPage.BuyBookPage(OpenBookService,Customer)",30,93
openbook.client.BuyBookPage.SearchPanel.SearchPanel(String),59,308
openbook.client.BuyBookPage.SearchPanel.actionPerformed(ActionEvent),21,28
openbook.client.BuyBookPage.SearchPanel.actionPerformed(ActionEvent).$1.doInBackground(),15,28
openbook.client.BuyBookPage.SearchPanel.actionPerformed(ActionEvent).$1.done(),23,28
openbook.client.BuyBookPage.SearchPanel.isEmpty(JTextField),5,11
openbook.client.BuyBookPage.SearchPanel.asDouble(JTextField),10,16
openbook.client.BuyBookPage.SelectBookPanel.SelectBookPanel(String),28,51
openbook.client.BuyBookPage.SelectBookPanel.updateDataModel(List<Book>),11,21
openbook.client.BuyBookPage.BuyPanel.BuyPanel(String),33,151
openbook.client.BuyBookPage.BuyPanel.BuyPanel(String).$1.actionPerformed(ActionEvent),12,17
openbook.client.BuyBookPage.BuyPanel.showBookDetails(Book),25,70
openbook.client.BuyBookPage.BuyPanel.valueChanged(ListSelectionEvent),18,43
openbook.client.BuyBookPage.ShoppingCartPanel.ShoppingCartPanel(String),32,73
"openbook.client.BuyBookPage.ShoppingCartPanel.addBook(Book,int)",8,17
openbook.client.BuyBookPage.ShoppingCartPanel.updateDisplay(),23,44
openbook.client.BuyBookPage.ShoppingCartPanel.actionPerformed(ActionEvent),8,10
openbook.client.BuyBookPage.ShoppingCartPanel.actionPerformed(ActionEvent).$1.doInBackground(),5,5
openbook.client.BuyBookPage.ShoppingCartPanel.actionPerformed(ActionEvent).$1.done(),13,18
"org.apache.openjpa.kernel.exps.Multiply.Multiply(Val,Val)",5,11
"org.apache.openjpa.kernel.exps.Multiply.operate(Object,Class,Object,Class)",4,6
org.apache.openjpa.kernel.exps.Value.getType(),6,9
org.apache.openjpa.kernel.exps.Value.setImplicitType(Class),12,18
org.apache.openjpa.kernel.exps.Value.isVariable(),2,3
org.apache.openjpa.kernel.exps.Value.isAggregate(),2,3
org.apache.openjpa.kernel.exps.Value.isXPath(),3,4
org.apache.openjpa.kernel.exps.Value.getMetaData(),5,7
org.apache.openjpa.kernel.exps.Value.setMetaData(ClassMetaData),7,10
org.apache.openjpa.kernel.exps.Value.acceptVisit(ExpressionVisitor),5,9
org.apache.openjpa.kernel.exps.Value.getAlias(),4,5
org.apache.openjpa.kernel.exps.Value.setAlias(String),5,8
org.apache.openjpa.kernel.exps.Value.getSelectAs(),6,6
org.apache.openjpa.kernel.exps.Value.getPath(),1,2
org.apache.openjpa.kernel.exps.Value.getName(),2,2
org.apache.openjpa.meta.UpdateStrategies.getName(int),11,19
"org.apache.openjpa.meta.UpdateStrategies.getCode(String,Object)",28,66
org.apache.openjpa.util.Exceptions.$1.write(int),1,1
org.apache.openjpa.util.Exceptions.isSerializable(Object),29,47
org.apache.openjpa.util.Exceptions.toString(Object),48,86
org.apache.openjpa.util.Exceptions.toString(Collection),12,31
org.apache.openjpa.util.Exceptions.toString(ExceptionInfo),22,78
"org.apache.openjpa.util.Exceptions.printNestedThrowables(ExceptionInfo,PrintStream)",29,48
"org.apache.openjpa.util.Exceptions.printNestedThrowables(ExceptionInfo,PrintWriter)",29,48
org.apache.openjpa.util.Exceptions.replaceFailedObject(Object),25,56
org.apache.openjpa.util.Exceptions.replaceNestedThrowables(Throwable[]),23,52
org.apache.openjpa.util.Exceptions.getObjectId(Object),9,20
org.apache.openjpa.util.Exceptions.toClassName(Class<>),6,12
org.apache.openjpa.util.Exceptions.toClassNames(Collection<>),9,19
jpa.tools.swing.EntityTypeView<T>.EntityTypeView(EntityType<T>),33,68
jpa.tools.swing.EntityTypeView<T>.getEntityType(),2,5
jpa.tools.swing.EntityTypeView<T>.getPosition(Attribute<>),15,25
org.apache.openjpa.persistence.meta.Types.BaseType<X>.BaseType(Class<X>),3,5
org.apache.openjpa.persistence.meta.Types.BaseType<X>.getJavaType(),3,3
org.apache.openjpa.persistence.meta.Types.BaseType<X>.toString(),3,4
org.apache.openjpa.persistence.meta.Types.Basic<X>.Basic(Class<X>),2,3
org.apache.openjpa.persistence.meta.Types.Basic<X>.getPersistenceType(),3,7
"org.apache.openjpa.persistence.meta.Types.Identifiable<X>.Identifiable(ClassMetaData,MetamodelImpl)",6,9
org.apache.openjpa.persistence.meta.Types.Identifiable<X>.hasVersionAttribute(),7,14
org.apache.openjpa.persistence.meta.Types.Identifiable<X>.getSupertype(),14,34
org.apache.openjpa.persistence.meta.Types.Identifiable<X>.hasIdAttribute(),6,7
org.apache.openjpa.persistence.meta.Types.Identifiable<X>.hasSingleIdAttribute(),20,33
org.apache.openjpa.persistence.meta.Types.Identifiable<X>.getIdType(),12,22
"org.apache.openjpa.persistence.meta.Types.Embeddable<X>.Embeddable(ClassMetaData,MetamodelImpl)",6,9
org.apache.openjpa.persistence.meta.Types.Embeddable<X>.getPersistenceType(),3,7
"org.apache.openjpa.persistence.meta.Types.MappedSuper<X>.MappedSuper(ClassMetaData,MetamodelImpl)",6,9
org.apache.openjpa.persistence.meta.Types.MappedSuper<X>.getPersistenceType(),4,8
"org.apache.openjpa.persistence.meta.Types.Entity<X>.Entity(ClassMetaData,MetamodelImpl)",6,9
org.apache.openjpa.persistence.meta.Types.Entity<X>.getPersistenceType(),3,7
org.apache.openjpa.persistence.meta.Types.Entity<X>.getName(),5,5
org.apache.openjpa.persistence.meta.Types.Entity<X>.getBindableType(),5,14
org.apache.openjpa.persistence.meta.Types.Entity<X>.getBindableJavaType(),11,32
"org.apache.openjpa.persistence.meta.Types.PseudoEntity<X>.PseudoEntity(Class<X>,MetamodelImpl)",6,8
org.apache.openjpa.persistence.meta.Types.PseudoEntity<X>.getPersistenceType(),5,11
"org.apache.openjpa.persistence.query.EqualExpression.EqualExpression(Expression,Expression)",5,12
org.apache.openjpa.integration.validation.Location.setCity(String),3,6
org.apache.openjpa.integration.validation.Location.getCity(),2,3
org.apache.openjpa.integration.validation.Location.setStreet(String),3,6
org.apache.openjpa.integration.validation.Location.getStreet(),2,3
org.apache.openjpa.integration.validation.Location.setState(String),2,2
org.apache.openjpa.integration.validation.Location.getState(),1,1
org.apache.openjpa.integration.validation.Location.setCountry(String),3,6
org.apache.openjpa.integration.validation.Location.getCountry(),2,3
org.apache.openjpa.integration.validation.Location.setZipCode(String),4,10
org.apache.openjpa.integration.validation.Location.getZipCode(),3,5
org.apache.openjpa.integration.validation.Location.toString(),7,13
"org.apache.openjpa.persistence.query.OperatorPath.OperatorPath(AbstractDomainObject,PathOperator)",6,12
org.apache.openjpa.persistence.query.OperatorPath.getLastSegment(),3,3
org.apache.openjpa.persistence.query.OperatorPath.getAliasHint(AliasContext),6,10
org.apache.openjpa.persistence.query.OperatorPath.asProjection(AliasContext),7,9
org.apache.openjpa.persistence.query.OperatorPath.asExpression(AliasContext),7,9
org.apache.openjpa.persistence.query.OperatorPath.asJoinable(AliasContext),8,8
org.apache.openjpa.persistence.query.OperatorPath.toString(),3,5
org.apache.openjpa.jdbc.kernel.OperationOrderUpdateManager.orderDirty(),1,1
org.apache.openjpa.jdbc.kernel.OperationOrderUpdateManager.newRowManager(),3,7
"org.apache.openjpa.jdbc.kernel.OperationOrderUpdateManager.newPreparedStatementManager(JDBCStore,Connection)",8,17
"org.apache.openjpa.jdbc.kernel.OperationOrderUpdateManager.flush(RowManager,PreparedStatementManager,Collection)",42,157
"org.apache.openjpa.jdbc.kernel.OperationOrderUpdateManager.analyzeDeleteConstraints(RowManagerImpl,PrimaryRow,Collection)",41,122
"org.apache.openjpa.jdbc.kernel.OperationOrderUpdateManager.flushPrimaryRow(RowManagerImpl,PrimaryRow,PreparedStatementManager,Collection)",51,166
"org.apache.openjpa.jdbc.kernel.OperationOrderUpdateManager.flush(Collection,PreparedStatementManager)",14,30
"org.apache.openjpa.datacache.CacheDistributionPolicy.selectCache(OpenJPAStateManager,Object)",24,43
"org.apache.openjpa.jdbc.kernel.exps.InstanceofExpression.InstanceofExpression(PCPath,Class)",6,12
"org.apache.openjpa.jdbc.kernel.exps.InstanceofExpression.initialize(Select,ExpContext,Map)",56,168
"org.apache.openjpa.jdbc.kernel.exps.InstanceofExpression.InstanceofExpState.InstanceofExpState(Joins,ExpState,ClassMapping,Discriminator,Class)",7,19
"org.apache.openjpa.jdbc.kernel.exps.InstanceofExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",26,56
"org.apache.openjpa.jdbc.kernel.exps.InstanceofExpression.selectColumns(Select,ExpContext,ExpState,boolean)",10,21
org.apache.openjpa.jdbc.kernel.exps.InstanceofExpression.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.lib.conf.FileValue.FileValue(String),4,5
org.apache.openjpa.lib.conf.FileValue.getValueType(),3,4
org.apache.openjpa.lib.conf.FileValue.set(File),9,18
org.apache.openjpa.lib.conf.FileValue.get(),3,4
org.apache.openjpa.lib.conf.FileValue.getInternalString(),11,13
org.apache.openjpa.lib.conf.FileValue.setInternalString(String),5,8
org.apache.openjpa.lib.conf.FileValue.setInternalObject(Object),5,8
"org.apache.openjpa.jdbc.meta.JDBCValueOrder.JDBCValueOrder(FieldMapping,boolean)",5,7
org.apache.openjpa.jdbc.meta.JDBCValueOrder.getName(),3,3
org.apache.openjpa.jdbc.meta.JDBCValueOrder.getIdentifier(),3,4
org.apache.openjpa.jdbc.meta.JDBCValueOrder.isAscending(),2,2
org.apache.openjpa.jdbc.meta.JDBCValueOrder.getComparator(),1,2
org.apache.openjpa.jdbc.meta.JDBCValueOrder.isInRelation(),5,5
"org.apache.openjpa.jdbc.meta.JDBCValueOrder.order(Select,ClassMapping,Joins)",10,20
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedBlobFieldStrategy.getExpectedJavaType(),5,6
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedBlobFieldStrategy.update(OpenJPAStateManager,Row)",19,38
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedBlobFieldStrategy.isCustom(OpenJPAStateManager,JDBCStore)",27,49
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedBlobFieldStrategy.putData(OpenJPAStateManager,ResultSet,DBDictionary)",14,20
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedBlobFieldStrategy.map(boolean),8,12
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedBlobFieldStrategy.initialize(),13,18
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedBlobFieldStrategy.getValue(OpenJPAStateManager),16,26
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.DelegatingCallableStatement(CallableStatement,Connection)",7,22
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.wrapResult(boolean,ResultSet)",4,12
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getDelegate(),5,6
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getInnermostDelegate(),10,14
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.hashCode(),4,6
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.equals(Object),7,13
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.toString(),8,16
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.appendInfo(StringBuffer),6,10
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.executeQuery(String),8,10
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.executeQuery(String,boolean)",14,31
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.executeUpdate(String),7,10
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.execute(String),6,8
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.close(),4,5
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getMaxFieldSize(),6,9
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setMaxFieldSize(int),7,11
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getMaxRows(),5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setMaxRows(int),6,9
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setEscapeProcessing(boolean),7,11
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getQueryTimeout(),5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setQueryTimeout(int),6,9
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.cancel(),4,5
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getWarnings(),5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.clearWarnings(),4,5
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setCursorName(String),8,12
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getResultSet(),4,8
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getResultSet(boolean),11,27
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getUpdateCount(),5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getMoreResults(),4,5
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setFetchDirection(int),6,9
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getFetchDirection(),5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setFetchSize(int),6,9
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getFetchSize(),5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getResultSetConcurrency(),6,9
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getResultSetType(),6,9
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.addBatch(String),7,10
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.clearBatch(),4,5
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.executeBatch(),5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getConnection(),4,5
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.executeQuery(),6,8
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.executeQuery(boolean),13,27
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.executeUpdate(),5,7
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNull(int,int)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBoolean(int,boolean)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setByte(int,byte)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setShort(int,short)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setInt(int,int)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setLong(int,long)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setFloat(int,float)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setDouble(int,double)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBigDecimal(int,BigDecimal)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setString(int,String)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBytes(int,byte[])",5,7
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setDate(int,Date)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setTime(int,Time)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setTimestamp(int,Timestamp)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setAsciiStream(int,InputStream,int)",7,11
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setUnicodeStream(int,InputStream,int)",8,12
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBinaryStream(int,InputStream,int)",7,11
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.clearParameters(),4,5
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setObject(int,Object,int,int)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setObject(int,Object,int)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setObject(int,Object)",5,8
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.execute(),4,5
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.addBatch(),5,7
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setCharacterStream(int,Reader,int)",7,10
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setRef(int,Ref)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBlob(int,Blob)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setClob(int,Clob)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setArray(int,Array)",5,8
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getMetaData(),7,11
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setDate(int,Date,Calendar)",6,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setTime(int,Time,Calendar)",6,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setTimestamp(int,Timestamp,Calendar)",6,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNull(int,int,String)",5,6
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getMoreResults(int),4,5
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getGeneratedKeys(),7,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.executeUpdate(String,int)",6,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.executeUpdate(String,int[])",6,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.executeUpdate(String,String[])",6,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.execute(String,int)",5,6
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.execute(String,int[])",5,6
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.execute(String,String[])",5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getResultSetHoldability(),6,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setURL(int,URL)",5,10
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getParameterMetaData(),6,12
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.registerOutParameter(int,int)",5,7
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.registerOutParameter(int,int,int)",5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.wasNull(),3,3
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getString(int),4,6
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getBoolean(int),3,3
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getByte(int),3,3
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getShort(int),3,3
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getInt(int),3,3
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getLong(int),3,3
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getFloat(int),3,3
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getDouble(int),3,3
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getBigDecimal(int,int)",10,18
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getBytes(int),4,5
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getDate(int),4,6
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getTime(int),4,6
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getTimestamp(int),4,6
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getObject(int),4,6
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getBigDecimal(int),4,6
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getObject(int,Map<Class<String>>)",6,8
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getRef(int),4,6
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getBlob(int),4,6
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getClob(int),4,6
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getArray(int),4,6
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getDate(int,Calendar)",5,7
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getTime(int,Calendar)",5,7
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getTimestamp(int,Calendar)",5,7
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.registerOutParameter(int,int,String)",6,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.registerOutParameter(String,int)",6,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.registerOutParameter(String,int,int)",6,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.registerOutParameter(String,int,String)",6,9
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getURL(int),4,6
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setURL(String,URL)",6,9
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getURL(String),5,7
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNull(String,int)",5,6
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBoolean(String,boolean)",5,6
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setByte(String,byte)",5,6
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setShort(String,short)",5,6
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setInt(String,int)",5,6
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setLong(String,long)",5,6
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setFloat(String,float)",5,6
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setDouble(String,double)",5,6
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBigDecimal(String,BigDecimal)",6,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setString(String,String)",5,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBytes(String,byte[])",6,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setDate(String,Date)",6,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setTime(String,Time)",6,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setTimestamp(String,Timestamp)",6,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setAsciiStream(String,InputStream,int)",8,12
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBinaryStream(String,InputStream,int)",8,12
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setObject(String,Object,int,int)",6,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setObject(String,Object,int)",6,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setObject(String,Object)",6,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setCharacterStream(String,Reader,int)",8,11
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setDate(String,Date,Calendar)",7,10
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setTime(String,Time,Calendar)",7,10
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setTimestamp(String,Timestamp,Calendar)",7,10
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNull(String,int,String)",5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getString(String),4,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getBoolean(String),4,4
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getByte(String),4,4
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getShort(String),4,4
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getInt(String),4,4
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getLong(String),4,4
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getFloat(String),4,4
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getDouble(String),4,4
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getBytes(String),5,6
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getDate(String),5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getTime(String),5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getTimestamp(String),5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getObject(String),5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getBigDecimal(String),5,7
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getObject(String,Map<Class<String>>)",6,9
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getRef(String),5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getBlob(String),5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getClob(String),5,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getArray(String),5,7
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getDate(String,Calendar)",6,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getTime(String,Calendar)",6,8
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getTimestamp(String,Calendar)",6,8
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.isWrapperFor(Class<>),6,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.unwrap(Class<T>),6,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getCharacterStream(int),8,12
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getCharacterStream(String),9,13
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getNCharacterStream(int),8,12
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getNCharacterStream(String),9,13
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getNClob(int),6,10
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getNClob(String),7,11
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getNString(int),6,10
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getNString(String),6,11
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getRowId(int),6,10
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getRowId(String),7,11
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getSQLXML(int),6,10
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getSQLXML(String),7,11
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setAsciiStream(String,InputStream,long)",11,18
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setAsciiStream(String,InputStream)",10,16
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBinaryStream(String,InputStream,long)",11,18
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBinaryStream(String,InputStream)",10,16
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBlob(String,Blob)",8,13
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBlob(String,InputStream,long)",11,20
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBlob(String,InputStream)",10,18
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setCharacterStream(String,Reader,long)",11,19
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setCharacterStream(String,Reader)",10,17
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setClob(String,Clob)",8,13
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setClob(String,Reader,long)",10,17
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setClob(String,Reader)",9,15
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNCharacterStream(String,Reader,long)",12,19
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNCharacterStream(String,Reader)",11,17
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNClob(String,NClob)",9,15
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNClob(String,Reader,long)",10,17
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNClob(String,Reader)",9,15
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNString(String,String)",8,15
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setRowId(String,RowId)",8,13
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setSQLXML(String,SQLXML)",10,17
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setAsciiStream(int,InputStream,long)",10,17
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setAsciiStream(int,InputStream)",9,15
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBinaryStream(int,InputStream,long)",10,17
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBinaryStream(int,InputStream)",9,15
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBlob(int,InputStream,long)",10,19
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setBlob(int,InputStream)",9,17
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setCharacterStream(int,Reader,long)",10,18
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setCharacterStream(int,Reader)",9,16
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setClob(int,Reader,long)",9,16
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setClob(int,Reader)",8,14
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNCharacterStream(int,Reader,long)",11,18
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNCharacterStream(int,Reader)",10,16
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNClob(int,NClob)",8,14
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNClob(int,Reader,long)",9,16
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNClob(int,Reader)",8,14
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setNString(int,String)",8,14
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setRowId(int,RowId)",7,12
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setSQLXML(int,SQLXML)",9,16
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.isClosed(),4,5
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.isPoolable(),4,5
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.setPoolable(boolean),5,9
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getObject(String,Class<T>)",9,10
"org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.getObject(int,Class<T>)",8,9
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.isCloseOnCompletion(),6,7
org.apache.openjpa.lib.jdbc.DelegatingCallableStatement.closeOnCompletion(),6,7
org.apache.openjpa.jdbc.schema.TableSchemaFactory.getTable(),8,13
org.apache.openjpa.jdbc.schema.TableSchemaFactory.setTable(String),10,17
org.apache.openjpa.jdbc.schema.TableSchemaFactory.setTableName(String),11,17
org.apache.openjpa.jdbc.schema.TableSchemaFactory.setPrimaryKeyColumn(String),12,21
org.apache.openjpa.jdbc.schema.TableSchemaFactory.getPrimaryKeyColumn(),10,17
org.apache.openjpa.jdbc.schema.TableSchemaFactory.setSchemaColumn(String),11,22
org.apache.openjpa.jdbc.schema.TableSchemaFactory.getSchemaColumn(),9,18
org.apache.openjpa.jdbc.schema.TableSchemaFactory.getConfiguration(),3,4
org.apache.openjpa.jdbc.schema.TableSchemaFactory.setConfiguration(Configuration),6,15
org.apache.openjpa.jdbc.schema.TableSchemaFactory.startConfiguration(),2,2
org.apache.openjpa.jdbc.schema.TableSchemaFactory.endConfiguration(),3,3
org.apache.openjpa.jdbc.schema.TableSchemaFactory.readSchema(),20,46
org.apache.openjpa.jdbc.schema.TableSchemaFactory.storeSchema(SchemaGroup),48,110
org.apache.openjpa.jdbc.schema.TableSchemaFactory.refreshTable(),38,109
org.apache.openjpa.jdbc.schema.TableSchemaFactory.dropTable(),18,33
org.apache.openjpa.jdbc.schema.TableSchemaFactory.readSchemaColumn(),37,117
org.apache.openjpa.jdbc.schema.TableSchemaFactory.writeSchemaColumn(String),49,189
org.apache.openjpa.jdbc.schema.TableSchemaFactory.buildTable(),32,125
org.apache.openjpa.jdbc.schema.TableSchemaFactory.getConnection(),6,9
org.apache.openjpa.jdbc.schema.TableSchemaFactory.main(String[]),70,108
org.apache.openjpa.jdbc.schema.TableSchemaFactory.main(String[]).$1.run(Options),13,19
"org.apache.openjpa.jdbc.schema.TableSchemaFactory.run(JDBCConfiguration,String[],Options)",19,31
"org.apache.openjpa.jdbc.schema.TableSchemaFactory.run(JDBCConfiguration,String)",21,47
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.AnnotationPersistenceMappingSerializer(JDBCConfiguration),9,11
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.getSyncMappingInfo(),11,14
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.setSyncMappingInfo(boolean),12,17
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.addQueryResultMapping(QueryResultMapping),12,24
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.removeQueryResultMapping(QueryResultMapping),10,18
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.addAll(MetaDataRepository),10,22
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.removeAll(MetaDataRepository),11,25
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.clear(),1,2
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.addAnnotation(AnnotationBuilder,QueryResultMapping)",16,46
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.addAnnotation(Class<>,QueryResultMapping)",15,29
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeClass(ClassMetaData),19,63
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeClassMappingContent(ClassMetaData),23,68
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeInheritanceContent(ClassMetaData),34,106
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeTable(String,String,ClassMappingInfo,Unique[],AnnotationBuilder)",46,137
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeAttributeOverride(FieldMetaData,FieldMetaData)",29,130
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeAttributeOverrideMappingContent(FieldMetaData,FieldMetaData,AnnotationBuilder)",19,32
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.getStrategy(FieldMetaData),29,91
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeFieldMappingContent(FieldMetaData,PersistenceStrategy,AnnotationBuilder)",50,197
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.isLob(FieldMapping),14,23
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.getTemporal(FieldMapping),25,65
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.getEnumType(FieldMapping),13,28
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeColumns(MappingInfo,ColType,String,AnnotationBuilder,Object)",20,66
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeColumn(Column,ColType,String,boolean,AnnotationBuilder,Object)",39,174
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeUniqueConstraint(Unique,AnnotationBuilder)",16,40
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.newSerializationComparator(),6,11
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.addSystemMappingElements(Collection),10,13
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.type(Object),6,11
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.getQueryResultMappings(ClassMetaData),19,64
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeSystemMappingElement(Object),8,18
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeQueryMappings(ClassMetaData),8,20
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeQueryResultMapping(QueryResultMapping,ClassMetaData)",31,117
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.serializeSequence(SequenceMetaData),33,143
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.ColType.getColumnAnnotationType(),12,20
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.ColType.getColumnGroupAnnotationType(),8,13
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingSerializer.MappingSerializationComparator.compareUnknown(Object,Object)",14,68
"org.apache.openjpa.enhance.FieldConsumer.storeBooleanField(int,boolean)",5,8
"org.apache.openjpa.enhance.FieldConsumer.storeCharField(int,char)",5,8
"org.apache.openjpa.enhance.FieldConsumer.storeByteField(int,byte)",5,8
"org.apache.openjpa.enhance.FieldConsumer.storeShortField(int,short)",5,8
"org.apache.openjpa.enhance.FieldConsumer.storeIntField(int,int)",5,8
"org.apache.openjpa.enhance.FieldConsumer.storeLongField(int,long)",5,8
"org.apache.openjpa.enhance.FieldConsumer.storeFloatField(int,float)",5,8
"org.apache.openjpa.enhance.FieldConsumer.storeDoubleField(int,double)",5,8
"org.apache.openjpa.enhance.FieldConsumer.storeStringField(int,String)",6,10
"org.apache.openjpa.enhance.FieldConsumer.storeObjectField(int,Object)",6,10
org.apache.openjpa.enhance.PersistenceCapable.pcGetEnhancementContractVersion(),3,3
org.apache.openjpa.enhance.PersistenceCapable.pcGetGenericContext(),3,3
org.apache.openjpa.enhance.PersistenceCapable.pcGetStateManager(),1,2
org.apache.openjpa.enhance.PersistenceCapable.pcReplaceStateManager(StateManager),2,3
org.apache.openjpa.enhance.PersistenceCapable.pcProvideField(int),3,4
org.apache.openjpa.enhance.PersistenceCapable.pcProvideFields(int[]),4,4
org.apache.openjpa.enhance.PersistenceCapable.pcReplaceField(int),3,4
org.apache.openjpa.enhance.PersistenceCapable.pcReplaceFields(int[]),4,4
"org.apache.openjpa.enhance.PersistenceCapable.pcCopyFields(Object,int[])",3,5
org.apache.openjpa.enhance.PersistenceCapable.pcDirty(String),4,4
org.apache.openjpa.enhance.PersistenceCapable.pcFetchObjectId(),2,3
org.apache.openjpa.enhance.PersistenceCapable.pcGetVersion(),2,2
org.apache.openjpa.enhance.PersistenceCapable.pcIsDirty(),1,1
org.apache.openjpa.enhance.PersistenceCapable.pcIsTransactional(),1,1
org.apache.openjpa.enhance.PersistenceCapable.pcIsPersistent(),1,1
org.apache.openjpa.enhance.PersistenceCapable.pcIsNew(),0,0
org.apache.openjpa.enhance.PersistenceCapable.pcIsDeleted(),1,1
org.apache.openjpa.enhance.PersistenceCapable.pcIsDetached(),1,1
"org.apache.openjpa.enhance.PersistenceCapable.pcNewInstance(StateManager,boolean)",4,4
"org.apache.openjpa.enhance.PersistenceCapable.pcNewInstance(StateManager,Object,boolean)",6,6
org.apache.openjpa.enhance.PersistenceCapable.pcNewObjectIdInstance(),2,3
org.apache.openjpa.enhance.PersistenceCapable.pcNewObjectIdInstance(Object),3,5
org.apache.openjpa.enhance.PersistenceCapable.pcCopyKeyFieldsToObjectId(Object),5,6
"org.apache.openjpa.enhance.PersistenceCapable.pcCopyKeyFieldsToObjectId(FieldSupplier,Object)",7,9
"org.apache.openjpa.enhance.PersistenceCapable.pcCopyKeyFieldsFromObjectId(FieldConsumer,Object)",7,9
org.apache.openjpa.enhance.PersistenceCapable.pcGetDetachedState(),2,2
org.apache.openjpa.enhance.PersistenceCapable.pcSetDetachedState(Object),3,3
"org.apache.openjpa.event.OrphanedKeyAction.orphan(Object,OpenJPAStateManager,ValueMetaData)",24,40
org.apache.openjpa.instrumentation.SecondProvider.start(),3,3
org.apache.openjpa.instrumentation.SecondProvider.stop(),6,9
org.apache.openjpa.instrumentation.SecondProvider.startInstrument(Instrument),2,6
"org.apache.openjpa.instrumentation.SecondProvider.stopInstrument(Instrument,boolean)",3,7
org.apache.openjpa.instrumentation.SecondProvider.getInstrumentAliases(),3,5
org.apache.openjpa.jdbc.sql.identifier.TestDBIdentifiers.testSchemaOps(),13,76
org.apache.openjpa.jdbc.sql.identifier.TestDBIdentifiers.testTableOps(),20,216
org.apache.openjpa.jdbc.sql.identifier.TestDBIdentifiers.testColumnOps(),21,69
org.apache.openjpa.jdbc.sql.identifier.TestDBIdentifiers.testDBIdentifierOps(),32,186
org.apache.openjpa.jdbc.sql.identifier.TestDBIdentifiers.testPathOps(),27,229
"org.apache.openjpa.jdbc.sql.identifier.TestDBIdentifiers.assertTableEquals(DBIdentifier[],String,String)",13,51
org.apache.openjpa.kernel.DetachManagerLite.DetachManagerLite(OpenJPAConfiguration),13,18
org.apache.openjpa.kernel.DetachManagerLite.detachAll(Collection<StateManagerImpl>),26,50
"org.apache.openjpa.kernel.DetachManagerLite.detachProxyField(FieldMetaData,PersistenceCapable,StateManagerImpl,TransferFieldManager)",35,93
"org.apache.openjpa.kernel.DetachManagerLite.nullField(int,PersistenceCapable,StateManagerImpl,TransferFieldManager)",17,42
org.apache.openjpa.kernel.TestUnenhancedPropertyAccessWithRelationInstanceBrokerSerialization.getSecondaryType(),5,5
org.apache.openjpa.kernel.TestUnenhancedPropertyAccessWithRelationInstanceBrokerSerialization.getManagedType(),6,10
org.apache.openjpa.kernel.TestUnenhancedPropertyAccessWithRelationInstanceBrokerSerialization.newManagedInstance(),12,33
org.apache.openjpa.kernel.TestUnenhancedPropertyAccessWithRelationInstanceBrokerSerialization.modifyInstance(UnenhancedPropertyAccessSubclass),11,11
org.apache.openjpa.kernel.TestUnenhancedPropertyAccessWithRelationInstanceBrokerSerialization.getModifiedValue(UnenhancedPropertyAccessSubclass),10,10
org.apache.openjpa.kernel.TestUnenhancedPropertyAccessWithRelationInstanceBrokerSerialization.graphSize(),2,2
org.apache.openjpa.datacache.CacheStatistics.getReadCount(),5,6
org.apache.openjpa.datacache.CacheStatistics.getHitCount(),8,8
org.apache.openjpa.datacache.CacheStatistics.getWriteCount(),5,6
org.apache.openjpa.datacache.CacheStatistics.getTotalReadCount(),5,7
org.apache.openjpa.datacache.CacheStatistics.getTotalHitCount(),8,9
org.apache.openjpa.datacache.CacheStatistics.getTotalWriteCount(),5,7
org.apache.openjpa.datacache.CacheStatistics.getReadCount(Class<>),8,11
org.apache.openjpa.datacache.CacheStatistics.getReadCount(String),3,3
org.apache.openjpa.datacache.CacheStatistics.getHitCount(Class<>),11,13
org.apache.openjpa.datacache.CacheStatistics.getHitCount(String),9,9
org.apache.openjpa.datacache.CacheStatistics.getWriteCount(Class<>),3,3
org.apache.openjpa.datacache.CacheStatistics.getWriteCount(String),3,3
org.apache.openjpa.datacache.CacheStatistics.getTotalReadCount(Class<>),4,4
org.apache.openjpa.datacache.CacheStatistics.getTotalReadCount(String),6,8
org.apache.openjpa.datacache.CacheStatistics.getTotalHitCount(String),4,4
org.apache.openjpa.datacache.CacheStatistics.getTotalHitCount(Class<>),11,15
org.apache.openjpa.datacache.CacheStatistics.getTotalWriteCount(String),4,4
org.apache.openjpa.datacache.CacheStatistics.getTotalWriteCount(Class<>),8,13
org.apache.openjpa.datacache.CacheStatistics.since(),3,3
org.apache.openjpa.datacache.CacheStatistics.start(),3,4
org.apache.openjpa.datacache.CacheStatistics.reset(),4,4
org.apache.openjpa.datacache.CacheStatistics.isEnabled(),4,4
org.apache.openjpa.datacache.CacheStatistics.classNames(),3,3
org.apache.openjpa.datacache.CacheStatistics.toMap(),2,3
"jpa.tools.swing.EntityTableView<T>.EntityTableView(Class<T>,int,EntityManagerFactory)",12,18
"jpa.tools.swing.EntityTableView<T>.EntityTableView(Class<T>,List<T>,int,EntityManagerFactory)",47,106
jpa.tools.swing.EntityTableView<T>.getTable(),2,4
jpa.tools.swing.EntityTableView<T>.getDataModel(),4,10
jpa.tools.swing.EntityTableView<T>.updateTitle(String),8,17
jpa.tools.swing.EntityTableView<T>.valueChanged(ListSelectionEvent),19,40
"jpa.tools.swing.EntityTableView<T>.showDetails(Attribute<>,Object)",36,107
org.apache.openjpa.persistence.Security.Security(),1,1
"org.apache.openjpa.persistence.Security.Security(long,Embed)",3,5
org.apache.openjpa.persistence.Security.getId(),0,0
org.apache.openjpa.persistence.Security.getCountry(),1,3
org.apache.openjpa.persistence.Security.setCountry(Country),2,4
org.apache.openjpa.persistence.Security.getCountryEager(),2,5
org.apache.openjpa.persistence.Security.setCountryEager(Country),3,6
org.apache.openjpa.persistence.Security.getSymbol(),2,3
org.apache.openjpa.persistence.Security.setSymbol(Embed),3,6
org.apache.openjpa.enhance.StateManager.getGenericContext(),4,5
"org.apache.openjpa.enhance.StateManager.getPCPrimaryKey(Object,int)",13,19
org.apache.openjpa.enhance.StateManager.replaceStateManager(StateManager),3,6
org.apache.openjpa.enhance.StateManager.getVersion(),5,6
org.apache.openjpa.enhance.StateManager.isDirty(),4,4
org.apache.openjpa.enhance.StateManager.isTransactional(),2,3
org.apache.openjpa.enhance.StateManager.isPersistent(),2,3
org.apache.openjpa.enhance.StateManager.isNew(),4,4
org.apache.openjpa.enhance.StateManager.isDeleted(),3,4
org.apache.openjpa.enhance.StateManager.isDetached(),3,6
org.apache.openjpa.enhance.StateManager.dirty(String),4,6
org.apache.openjpa.enhance.StateManager.fetchObjectId(),3,5
org.apache.openjpa.enhance.StateManager.serializing(),7,7
org.apache.openjpa.enhance.StateManager.writeDetached(ObjectOutput),10,15
org.apache.openjpa.enhance.StateManager.proxyDetachedDeserialized(int),6,8
org.apache.openjpa.enhance.StateManager.accessingField(int),5,6
"org.apache.openjpa.enhance.StateManager.settingBooleanField(PersistenceCapable,int,boolean,boolean,int)",8,9
"org.apache.openjpa.enhance.StateManager.settingCharField(PersistenceCapable,int,char,char,int)",8,9
"org.apache.openjpa.enhance.StateManager.settingByteField(PersistenceCapable,int,byte,byte,int)",8,9
"org.apache.openjpa.enhance.StateManager.settingShortField(PersistenceCapable,int,short,short,int)",8,9
"org.apache.openjpa.enhance.StateManager.settingIntField(PersistenceCapable,int,int,int,int)",8,9
"org.apache.openjpa.enhance.StateManager.settingLongField(PersistenceCapable,int,long,long,int)",8,9
"org.apache.openjpa.enhance.StateManager.settingFloatField(PersistenceCapable,int,float,float,int)",8,9
"org.apache.openjpa.enhance.StateManager.settingDoubleField(PersistenceCapable,int,double,double,int)",8,9
"org.apache.openjpa.enhance.StateManager.settingStringField(PersistenceCapable,int,String,String,int)",9,12
"org.apache.openjpa.enhance.StateManager.settingObjectField(PersistenceCapable,int,Object,Object,int)",9,12
"org.apache.openjpa.enhance.StateManager.providedBooleanField(PersistenceCapable,int,boolean)",8,8
"org.apache.openjpa.enhance.StateManager.providedCharField(PersistenceCapable,int,char)",8,8
"org.apache.openjpa.enhance.StateManager.providedByteField(PersistenceCapable,int,byte)",8,8
"org.apache.openjpa.enhance.StateManager.providedShortField(PersistenceCapable,int,short)",8,8
"org.apache.openjpa.enhance.StateManager.providedIntField(PersistenceCapable,int,int)",8,8
"org.apache.openjpa.enhance.StateManager.providedLongField(PersistenceCapable,int,long)",8,8
"org.apache.openjpa.enhance.StateManager.providedFloatField(PersistenceCapable,int,float)",8,8
"org.apache.openjpa.enhance.StateManager.providedDoubleField(PersistenceCapable,int,double)",8,8
"org.apache.openjpa.enhance.StateManager.providedStringField(PersistenceCapable,int,String)",9,10
"org.apache.openjpa.enhance.StateManager.providedObjectField(PersistenceCapable,int,Object)",9,10
"org.apache.openjpa.enhance.StateManager.replaceBooleanField(PersistenceCapable,int)",6,7
"org.apache.openjpa.enhance.StateManager.replaceCharField(PersistenceCapable,int)",6,7
"org.apache.openjpa.enhance.StateManager.replaceByteField(PersistenceCapable,int)",6,7
"org.apache.openjpa.enhance.StateManager.replaceShortField(PersistenceCapable,int)",6,7
"org.apache.openjpa.enhance.StateManager.replaceIntField(PersistenceCapable,int)",6,7
"org.apache.openjpa.enhance.StateManager.replaceLongField(PersistenceCapable,int)",6,7
"org.apache.openjpa.enhance.StateManager.replaceFloatField(PersistenceCapable,int)",6,7
"org.apache.openjpa.enhance.StateManager.replaceDoubleField(PersistenceCapable,int)",6,7
"org.apache.openjpa.enhance.StateManager.replaceStringField(PersistenceCapable,int)",7,9
"org.apache.openjpa.enhance.StateManager.replaceObjectField(PersistenceCapable,int)",6,7
"org.apache.openjpa.kernel.AttachManager.AttachManager(BrokerImpl,boolean,OpCallbacks)",23,43
org.apache.openjpa.kernel.AttachManager.getBehavior(),5,6
org.apache.openjpa.kernel.AttachManager.getCopyNew(),3,5
org.apache.openjpa.kernel.AttachManager.attach(Object),19,33
org.apache.openjpa.kernel.AttachManager.attachAll(Collection),28,82
org.apache.openjpa.kernel.AttachManager.invokeAfterAttach(List),32,62
"org.apache.openjpa.kernel.AttachManager.add(List,Object)",5,17
"org.apache.openjpa.kernel.AttachManager.throwExceptions(List,List,boolean)",17,37
"org.apache.openjpa.kernel.AttachManager.attach(Object,PersistenceCapable,OpenJPAStateManager,ValueMetaData,boolean)",42,113
"org.apache.openjpa.kernel.AttachManager.handleCascade(Object,OpenJPAStateManager)",31,70
org.apache.openjpa.kernel.AttachManager.processArgument(Object),13,20
org.apache.openjpa.kernel.AttachManager.getStrategy(Object),18,53
org.apache.openjpa.kernel.AttachManager.getBroker(),3,6
org.apache.openjpa.kernel.AttachManager.getProxyManager(),3,8
org.apache.openjpa.kernel.AttachManager.getAttachedCopy(Object),12,18
"org.apache.openjpa.kernel.AttachManager.setAttachedCopy(Object,PersistenceCapable)",8,11
"org.apache.openjpa.kernel.AttachManager.fireBeforeAttach(Object,ClassMetaData)",8,17
org.apache.openjpa.kernel.AttachManager.getDetachedObjectId(Object),5,10
org.apache.openjpa.kernel.AttachManager.assertManaged(Object),14,27
openbook.tools.converter.Java2TextConverter.main(String[]),8,9
openbook.tools.converter.Java2TextConverter.registerOptions(CommandProcessor),7,14
"openbook.tools.converter.Java2TextConverter.createRenderer(CommandProcessor,File)",12,25
openbook.tools.converter.HTMLTokenRenderer.endLine(int),8,17
openbook.tools.converter.HTMLTokenRenderer.newLine(int),13,30
"openbook.tools.converter.HTMLTokenRenderer.render(int,Token)",35,114
"openbook.tools.converter.HTMLTokenRenderer.span(String,String)",4,9
openbook.tools.converter.HTMLTokenRenderer.quote(String),2,3
openbook.tools.converter.HTMLTokenRenderer.isWhiteSpace(String),7,9
openbook.tools.converter.HTMLTokenRenderer.fillWhiteSpace(String),11,23
openbook.tools.converter.HTMLTokenRenderer.getPrologue(),17,26
openbook.tools.converter.HTMLTokenRenderer.getEpilogue(),8,10
openbook.tools.converter.HTMLTokenRenderer.insertLines(String),8,23
openbook.tools.converter.HTMLTokenRenderer.getStylesheet(),5,7
openbook.tools.converter.HTMLTokenRenderer.setStylesheet(String),7,11
openbook.tools.converter.HTMLTokenRenderer.getShowLineNumber(),5,7
openbook.tools.converter.HTMLTokenRenderer.setShowLineNumber(boolean),6,10
openbook.tools.converter.HTMLTokenRenderer.getAnchorLineNumber(),4,8
openbook.tools.converter.HTMLTokenRenderer.setAnchorLineNumber(boolean),5,13
openbook.tools.converter.HTMLTokenRenderer.getAddLineBreak(),9,14
openbook.tools.converter.HTMLTokenRenderer.setAddLineBreak(boolean),10,19
openbook.tools.converter.HTMLTokenRenderer.getAddExplicitSpace(),9,14
openbook.tools.converter.HTMLTokenRenderer.setAddExplicitSpace(boolean),10,19
openbook.tools.converter.HTMLTokenRenderer.getLineNumberFormat(),7,14
openbook.tools.converter.HTMLTokenRenderer.setLineNumberFormat(String),9,20
org.apache.openjpa.trader.domain.Tradable.Tradable(),9,9
"org.apache.openjpa.trader.domain.Tradable.Tradable(Stock,double,int)",16,52
org.apache.openjpa.trader.domain.Tradable.getId(),5,6
org.apache.openjpa.trader.domain.Tradable.getStock(),3,7
org.apache.openjpa.trader.domain.Tradable.getPrice(),6,11
org.apache.openjpa.trader.domain.Tradable.getVolume(),6,11
org.apache.openjpa.trader.domain.Tradable.getGain(),1,1
org.apache.openjpa.trader.domain.Tradable.isTraded(),5,5
org.apache.openjpa.trader.domain.Tradable.updateStock(Stock),8,16
org.apache.openjpa.trader.domain.Tradable.setTrade(Trade),5,8
org.apache.openjpa.trader.domain.Tradable.getTrade(),1,3
org.apache.openjpa.trader.domain.Tradable.getVersion(),6,10
org.apache.openjpa.trader.domain.Tradable.hashCode(),4,10
org.apache.openjpa.trader.domain.Tradable.equals(Object),4,10
org.apache.openjpa.trader.domain.Tradable.toString(),5,12
openbook.server.DataLoader.main(String[]),24,48
org.apache.openjpa.lib.rop.ResultObjectProvider.supportsRandomAccess(),4,7
org.apache.openjpa.lib.rop.ResultObjectProvider.open(),6,8
org.apache.openjpa.lib.rop.ResultObjectProvider.getResultObject(),9,13
org.apache.openjpa.lib.rop.ResultObjectProvider.next(),7,10
org.apache.openjpa.lib.rop.ResultObjectProvider.absolute(int),17,21
org.apache.openjpa.lib.rop.ResultObjectProvider.size(),9,10
org.apache.openjpa.lib.rop.ResultObjectProvider.reset(),18,20
org.apache.openjpa.lib.rop.ResultObjectProvider.close(),6,6
org.apache.openjpa.lib.rop.ResultObjectProvider.handleCheckedException(Exception),10,14
embeddables.Address.Address(),1,1
"embeddables.Address.Address(String,String,String,Integer,Coordinates)",7,16
embeddables.Address.toString(),4,5
openbook.tools.parser.JavaParser.getRuleLevel(),2,4
openbook.tools.parser.JavaParser.incRuleLevel(),3,5
openbook.tools.parser.JavaParser.decRuleLevel(),3,5
openbook.tools.parser.JavaParser.JavaParser(TokenStream),13,14
"openbook.tools.parser.JavaParser.JavaParser(TokenStream,int,RecognizerSharedState)",23,34
"openbook.tools.parser.JavaParser.JavaParser(TokenStream,DebugEventListener)",15,17
"openbook.tools.parser.JavaParser.evalPredicate(boolean,String)",6,11
openbook.tools.parser.JavaParser.getTokenNames(),5,7
openbook.tools.parser.JavaParser.getGrammarFileName(),5,5
openbook.tools.parser.JavaParser.compilationUnit(),44,478
openbook.tools.parser.JavaParser.packageDeclaration(),34,98
openbook.tools.parser.JavaParser.importDeclaration(),36,169
openbook.tools.parser.JavaParser.typeDeclaration(),37,125
openbook.tools.parser.JavaParser.classOrInterfaceDeclaration(),37,154
openbook.tools.parser.JavaParser.classOrInterfaceModifiers(),37,111
openbook.tools.parser.JavaParser.classOrInterfaceModifier(),37,188
openbook.tools.parser.JavaParser.modifiers(),37,111
openbook.tools.parser.JavaParser.classDeclaration(),36,127
openbook.tools.parser.JavaParser.normalClassDeclaration(),41,261
openbook.tools.parser.JavaParser.typeParameters(),38,166
openbook.tools.parser.JavaParser.typeParameter(),38,142
openbook.tools.parser.JavaParser.typeBound(),37,138
openbook.tools.parser.JavaParser.enumDeclaration(),39,152
openbook.tools.parser.JavaParser.enumBody(),38,200
openbook.tools.parser.JavaParser.enumConstants(),38,130
openbook.tools.parser.JavaParser.enumConstant(),39,198
openbook.tools.parser.JavaParser.enumBodyDeclarations(),39,132
openbook.tools.parser.JavaParser.interfaceDeclaration(),38,137
openbook.tools.parser.JavaParser.normalInterfaceDeclaration(),41,212
openbook.tools.parser.JavaParser.typeList(),37,138
openbook.tools.parser.JavaParser.classBody(),38,130
openbook.tools.parser.JavaParser.interfaceBody(),38,130
openbook.tools.parser.JavaParser.classBodyDeclaration(),42,211
openbook.tools.parser.JavaParser.memberDecl(),43,279
openbook.tools.parser.JavaParser.memberDeclaration(),40,185
openbook.tools.parser.JavaParser.genericMethodOrConstructorDecl(),38,139
openbook.tools.parser.JavaParser.genericMethodOrConstructorRest(),43,292
openbook.tools.parser.JavaParser.methodDeclaration(),37,110
openbook.tools.parser.JavaParser.fieldDeclaration(),36,100
openbook.tools.parser.JavaParser.interfaceBodyDeclaration(),40,140
openbook.tools.parser.JavaParser.interfaceMemberDecl(),43,226
openbook.tools.parser.JavaParser.interfaceMethodOrFieldDecl(),38,134
openbook.tools.parser.JavaParser.interfaceMethodOrFieldRest(),41,169
openbook.tools.parser.JavaParser.methodDeclaratorRest(),45,288
openbook.tools.parser.JavaParser.voidMethodDeclaratorRest(),44,243
openbook.tools.parser.JavaParser.interfaceMethodDeclaratorRest(),42,219
openbook.tools.parser.JavaParser.interfaceGenericMethodDecl(),44,211
openbook.tools.parser.JavaParser.voidInterfaceMethodDeclaratorRest(),41,174
openbook.tools.parser.JavaParser.constructorDeclaratorRest(),42,185
openbook.tools.parser.JavaParser.constantDeclarator(),36,110
openbook.tools.parser.JavaParser.variableDeclarators(),38,150
openbook.tools.parser.JavaParser.variableDeclarator(),37,148
openbook.tools.parser.JavaParser.constantDeclaratorsRest(),39,165
openbook.tools.parser.JavaParser.constantDeclaratorRest(),40,154
openbook.tools.parser.JavaParser.variableDeclaratorId(),36,129
openbook.tools.parser.JavaParser.variableInitializer(),42,141
openbook.tools.parser.JavaParser.arrayInitializer(),42,243
openbook.tools.parser.JavaParser.modifier(),37,236
openbook.tools.parser.JavaParser.packageOrTypeName(),33,92
openbook.tools.parser.JavaParser.enumConstantName(),32,86
openbook.tools.parser.JavaParser.typeName(),33,92
openbook.tools.parser.JavaParser.type(),40,210
openbook.tools.parser.JavaParser.classOrInterfaceType(),38,228
openbook.tools.parser.JavaParser.primitiveType(),35,97
openbook.tools.parser.JavaParser.variableModifier(),38,125
openbook.tools.parser.JavaParser.typeArguments(),38,166
openbook.tools.parser.JavaParser.typeArgument(),44,191
openbook.tools.parser.JavaParser.qualifiedNameList(),37,160
openbook.tools.parser.JavaParser.formalParameters(),39,145
openbook.tools.parser.JavaParser.formalParameterDecls(),38,145
openbook.tools.parser.JavaParser.formalParameterDeclsRest(),43,237
openbook.tools.parser.JavaParser.methodBody(),34,87
openbook.tools.parser.JavaParser.constructorBody(),47,208
openbook.tools.parser.JavaParser.explicitConstructorInvocation(),51,324
openbook.tools.parser.JavaParser.qualifiedName(),35,138
openbook.tools.parser.JavaParser.literal(),43,217
openbook.tools.parser.JavaParser.integerLiteral(),38,113
openbook.tools.parser.JavaParser.booleanLiteral(),34,90
openbook.tools.parser.JavaParser.annotations(),40,129
openbook.tools.parser.JavaParser.annotation(),42,228
openbook.tools.parser.JavaParser.annotationName(),35,136
openbook.tools.parser.JavaParser.elementValuePairs(),39,172
openbook.tools.parser.JavaParser.elementValuePair(),36,123
openbook.tools.parser.JavaParser.elementValue(),49,183
openbook.tools.parser.JavaParser.elementValueArrayInitializer(),43,269
openbook.tools.parser.JavaParser.annotationTypeDeclaration(),37,137
openbook.tools.parser.JavaParser.annotationTypeBody(),41,164
openbook.tools.parser.JavaParser.annotationTypeElementDeclaration(),37,134
openbook.tools.parser.JavaParser.annotationTypeElementRest(),45,414
openbook.tools.parser.JavaParser.annotationMethodOrConstantRest(),39,186
openbook.tools.parser.JavaParser.annotationMethodRest(),39,154
openbook.tools.parser.JavaParser.annotationConstantRest(),36,100
openbook.tools.parser.JavaParser.defaultValue(),34,91
openbook.tools.parser.JavaParser.block(),38,130
openbook.tools.parser.JavaParser.blockStatement(),42,161
openbook.tools.parser.JavaParser.localVariableDeclarationStatement(),36,123
openbook.tools.parser.JavaParser.localVariableDeclaration(),37,135
openbook.tools.parser.JavaParser.variableModifiers(),37,123
openbook.tools.parser.JavaParser.statement(),51,982
openbook.tools.parser.JavaParser.catches(),36,121
openbook.tools.parser.JavaParser.catchClause(),36,118
openbook.tools.parser.JavaParser.formalParameter(),37,125
openbook.tools.parser.JavaParser.switchBlockStatementGroups(),36,123
openbook.tools.parser.JavaParser.switchBlockStatementGroup(),41,190
openbook.tools.parser.JavaParser.switchLabel(),43,238
openbook.tools.parser.JavaParser.forControl(),49,261
openbook.tools.parser.JavaParser.forInit(),43,134
openbook.tools.parser.JavaParser.enhancedForControl(),39,141
openbook.tools.parser.JavaParser.forUpdate(),34,84
openbook.tools.parser.JavaParser.parExpression(),34,103
openbook.tools.parser.JavaParser.expressionList(),37,138
openbook.tools.parser.JavaParser.statementExpression(),33,87
openbook.tools.parser.JavaParser.constantExpression(),33,87
openbook.tools.parser.JavaParser.expression(),42,159
openbook.tools.parser.JavaParser.assignmentOperator(),43,468
openbook.tools.parser.JavaParser.conditionalExpression(),36,165
openbook.tools.parser.JavaParser.conditionalOrExpression(),37,150
openbook.tools.parser.JavaParser.conditionalAndExpression(),38,150
openbook.tools.parser.JavaParser.inclusiveOrExpression(),38,150
openbook.tools.parser.JavaParser.exclusiveOrExpression(),37,138
openbook.tools.parser.JavaParser.andExpression(),37,140
openbook.tools.parser.JavaParser.equalityExpression(),42,166
openbook.tools.parser.JavaParser.instanceOfExpression(),38,141
openbook.tools.parser.JavaParser.relationalExpression(),41,171
openbook.tools.parser.JavaParser.relationalOp(),44,258
openbook.tools.parser.JavaParser.shiftExpression(),41,180
openbook.tools.parser.JavaParser.shiftOp(),42,261
openbook.tools.parser.JavaParser.additiveExpression(),42,166
openbook.tools.parser.JavaParser.multiplicativeExpression(),42,167
openbook.tools.parser.JavaParser.unaryExpression(),47,268
openbook.tools.parser.JavaParser.unaryExpressionNotPlusMinus(),52,315
openbook.tools.parser.JavaParser.castExpression(),47,294
openbook.tools.parser.JavaParser.primary(),56,549
openbook.tools.parser.JavaParser.identifierSuffix(),51,430
openbook.tools.parser.JavaParser.creator(),43,270
openbook.tools.parser.JavaParser.createdName(),38,137
openbook.tools.parser.JavaParser.innerCreator(),41,160
openbook.tools.parser.JavaParser.arrayCreatorRest(),49,366
openbook.tools.parser.JavaParser.classCreatorRest(),37,128
openbook.tools.parser.JavaParser.explicitGenericInvocation(),39,134
openbook.tools.parser.JavaParser.nonWildcardTypeArguments(),36,118
openbook.tools.parser.JavaParser.selector(),43,287
openbook.tools.parser.JavaParser.superSuffix(),39,168
openbook.tools.parser.JavaParser.arguments(),41,132
openbook.tools.parser.JavaParser.synpred5_Java_fragment(),27,250
openbook.tools.parser.JavaParser.synpred113_Java_fragment(),18,35
openbook.tools.parser.JavaParser.synpred117_Java_fragment(),31,111
openbook.tools.parser.JavaParser.synpred128_Java_fragment(),16,27
openbook.tools.parser.JavaParser.synpred151_Java_fragment(),19,39
openbook.tools.parser.JavaParser.synpred152_Java_fragment(),16,27
openbook.tools.parser.JavaParser.synpred157_Java_fragment(),18,35
openbook.tools.parser.JavaParser.synpred162_Java_fragment(),19,48
openbook.tools.parser.JavaParser.synpred163_Java_fragment(),16,27
openbook.tools.parser.JavaParser.synpred178_Java_fragment(),16,27
openbook.tools.parser.JavaParser.synpred180_Java_fragment(),19,47
openbook.tools.parser.JavaParser.synpred181_Java_fragment(),19,47
openbook.tools.parser.JavaParser.synpred182_Java_fragment(),17,31
openbook.tools.parser.JavaParser.synpred186_Java_fragment(),18,35
openbook.tools.parser.JavaParser.synpred188_Java_fragment(),18,44
openbook.tools.parser.JavaParser.synpred198_Java_fragment(),15,38
openbook.tools.parser.JavaParser.synpred199_Java_fragment(),15,46
openbook.tools.parser.JavaParser.synpred200_Java_fragment(),15,38
openbook.tools.parser.JavaParser.synpred211_Java_fragment(),15,30
openbook.tools.parser.JavaParser.synpred212_Java_fragment(),15,30
openbook.tools.parser.JavaParser.synpred215_Java_fragment(),15,30
openbook.tools.parser.JavaParser.synpred216_Java_fragment(),15,38
openbook.tools.parser.JavaParser.synpred217_Java_fragment(),15,30
openbook.tools.parser.JavaParser.synpred229_Java_fragment(),17,31
openbook.tools.parser.JavaParser.synpred233_Java_fragment(),21,64
openbook.tools.parser.JavaParser.synpred234_Java_fragment(),16,27
openbook.tools.parser.JavaParser.synpred236_Java_fragment(),16,34
openbook.tools.parser.JavaParser.synpred237_Java_fragment(),17,31
openbook.tools.parser.JavaParser.synpred242_Java_fragment(),16,34
openbook.tools.parser.JavaParser.synpred243_Java_fragment(),17,31
openbook.tools.parser.JavaParser.synpred249_Java_fragment(),18,43
openbook.tools.parser.JavaParser.synpred262_Java_fragment(),18,43
openbook.tools.parser.JavaParser.synpred157_Java(),19,32
openbook.tools.parser.JavaParser.synpred211_Java(),19,32
openbook.tools.parser.JavaParser.synpred249_Java(),19,32
openbook.tools.parser.JavaParser.synpred243_Java(),19,32
openbook.tools.parser.JavaParser.synpred5_Java(),19,32
openbook.tools.parser.JavaParser.synpred229_Java(),19,32
openbook.tools.parser.JavaParser.synpred178_Java(),19,32
openbook.tools.parser.JavaParser.synpred215_Java(),19,32
openbook.tools.parser.JavaParser.synpred113_Java(),19,32
openbook.tools.parser.JavaParser.synpred151_Java(),19,32
openbook.tools.parser.JavaParser.synpred117_Java(),19,32
openbook.tools.parser.JavaParser.synpred162_Java(),19,32
openbook.tools.parser.JavaParser.synpred217_Java(),19,32
openbook.tools.parser.JavaParser.synpred186_Java(),19,32
openbook.tools.parser.JavaParser.synpred188_Java(),19,32
openbook.tools.parser.JavaParser.synpred212_Java(),19,32
openbook.tools.parser.JavaParser.synpred163_Java(),19,32
openbook.tools.parser.JavaParser.synpred152_Java(),19,32
openbook.tools.parser.JavaParser.synpred242_Java(),19,32
openbook.tools.parser.JavaParser.synpred199_Java(),19,32
openbook.tools.parser.JavaParser.synpred216_Java(),19,32
openbook.tools.parser.JavaParser.synpred236_Java(),19,32
openbook.tools.parser.JavaParser.synpred262_Java(),19,32
openbook.tools.parser.JavaParser.synpred198_Java(),19,32
openbook.tools.parser.JavaParser.synpred233_Java(),19,32
openbook.tools.parser.JavaParser.synpred180_Java(),19,32
openbook.tools.parser.JavaParser.synpred128_Java(),19,32
openbook.tools.parser.JavaParser.synpred200_Java(),19,32
openbook.tools.parser.JavaParser.synpred234_Java(),19,32
openbook.tools.parser.JavaParser.synpred182_Java(),19,32
openbook.tools.parser.JavaParser.synpred181_Java(),19,32
openbook.tools.parser.JavaParser.synpred237_Java(),19,32
openbook.tools.parser.JavaParser.DFA8.DFA8(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA8.getDescription(),7,16
openbook.tools.parser.JavaParser.DFA8.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA8.specialStateTransition(int,IntStream)",18,38
openbook.tools.parser.JavaParser.DFA81.DFA81(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA81.getDescription(),5,5
openbook.tools.parser.JavaParser.DFA81.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA81.specialStateTransition(int,IntStream)",18,170
openbook.tools.parser.JavaParser.DFA85.DFA85(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA85.getDescription(),9,14
openbook.tools.parser.JavaParser.DFA85.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA85.specialStateTransition(int,IntStream)",18,49
openbook.tools.parser.JavaParser.DFA106.DFA106(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA106.getDescription(),7,10
openbook.tools.parser.JavaParser.DFA106.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA106.specialStateTransition(int,IntStream)",18,75
openbook.tools.parser.JavaParser.DFA114.DFA114(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA114.getDescription(),10,39
openbook.tools.parser.JavaParser.DFA114.error(NoViableAltException),7,9
openbook.tools.parser.JavaParser.DFA123.DFA123(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA123.getDescription(),8,9
openbook.tools.parser.JavaParser.DFA123.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA123.specialStateTransition(int,IntStream)",18,280
openbook.tools.parser.JavaParser.DFA124.DFA124(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA124.getDescription(),8,8
openbook.tools.parser.JavaParser.DFA124.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA124.specialStateTransition(int,IntStream)",18,49
openbook.tools.parser.JavaParser.DFA126.DFA126(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA126.getDescription(),5,5
openbook.tools.parser.JavaParser.DFA126.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA126.specialStateTransition(int,IntStream)",18,148
openbook.tools.parser.JavaParser.DFA127.DFA127(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA127.getDescription(),4,4
openbook.tools.parser.JavaParser.DFA127.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA127.specialStateTransition(int,IntStream)",18,51
openbook.tools.parser.JavaParser.DFA139.DFA139(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA139.getDescription(),3,3
openbook.tools.parser.JavaParser.DFA139.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA139.specialStateTransition(int,IntStream)",25,98
openbook.tools.parser.JavaParser.DFA145.DFA145(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA145.getDescription(),9,14
openbook.tools.parser.JavaParser.DFA145.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA145.specialStateTransition(int,IntStream)",18,38
openbook.tools.parser.JavaParser.DFA146.DFA146(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA146.getDescription(),4,4
openbook.tools.parser.JavaParser.DFA146.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA146.specialStateTransition(int,IntStream)",18,38
openbook.tools.parser.JavaParser.DFA149.DFA149(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA149.getDescription(),4,4
openbook.tools.parser.JavaParser.DFA149.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA149.specialStateTransition(int,IntStream)",18,49
openbook.tools.parser.JavaParser.DFA151.DFA151(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA151.getDescription(),4,4
openbook.tools.parser.JavaParser.DFA151.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA151.specialStateTransition(int,IntStream)",18,49
openbook.tools.parser.JavaParser.DFA156.DFA156(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA156.getDescription(),11,12
openbook.tools.parser.JavaParser.DFA156.error(NoViableAltException),7,9
openbook.tools.parser.JavaParser.DFA155.DFA155(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA155.getDescription(),4,4
openbook.tools.parser.JavaParser.DFA155.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA155.specialStateTransition(int,IntStream)",18,38
openbook.tools.parser.JavaParser.DFA162.DFA162(BaseRecognizer),11,28
openbook.tools.parser.JavaParser.DFA162.getDescription(),4,4
openbook.tools.parser.JavaParser.DFA162.error(NoViableAltException),7,9
"openbook.tools.parser.JavaParser.DFA162.specialStateTransition(int,IntStream)",18,38
org.apache.openjpa.integration.validation.XMLBase.setId(int),1,1
org.apache.openjpa.integration.validation.XMLBase.getId(),0,0
org.apache.openjpa.integration.validation.XMLBase.setStrValue(String),4,10
org.apache.openjpa.integration.validation.XMLBase.getStrValue(),3,5
org.apache.openjpa.trader.service.PersistenceService.PersistenceService(String),7,9
"org.apache.openjpa.trader.service.PersistenceService.PersistenceService(String,boolean,PersistenceContextType,Map<String,Object>)",19,31
org.apache.openjpa.trader.service.PersistenceService.getUnit(),6,6
org.apache.openjpa.trader.service.PersistenceService.getUnitName(),3,5
org.apache.openjpa.trader.service.PersistenceService.isManaged(),1,2
org.apache.openjpa.trader.service.PersistenceService.getContextType(),4,6
org.apache.openjpa.trader.service.PersistenceService.getEntityManager(),13,42
org.apache.openjpa.trader.service.PersistenceService.newEntityManager(),8,16
org.apache.openjpa.trader.service.PersistenceService.begin(),17,40
org.apache.openjpa.trader.service.PersistenceService.commit(),16,23
org.apache.openjpa.trader.service.PersistenceService.rollback(),14,21
org.apache.openjpa.trader.service.PersistenceService.close(),9,13
org.apache.openjpa.trader.service.PersistenceService.assertActive(),13,33
"org.apache.openjpa.trader.service.PersistenceService.assertTrue(String,boolean)",6,6
org.apache.openjpa.lib.util.TemporaryClassLoader.TemporaryClassLoader(ClassLoader),3,5
org.apache.openjpa.lib.util.TemporaryClassLoader.loadClass(String),5,7
"org.apache.openjpa.lib.util.TemporaryClassLoader.loadClass(String,boolean)",58,120
org.apache.openjpa.lib.util.TemporaryClassLoader.isAnnotation(byte[]),17,26
org.apache.openjpa.lib.util.TemporaryClassLoader.isEnum(byte[]),16,23
org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq.ValueTableJDBCSeq(),7,9
org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq.getPrimaryKeyValue(),7,12
org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq.setPrimaryKeyValue(String),8,15
org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq.addPrimaryKeyColumn(Table),21,49
org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq.getPrimaryKey(ClassMapping),5,6
org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq.main(String[]),72,127
org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq.main(String[]).$1.run(Options),13,20
"org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq.run(JDBCConfiguration,String[],Options)",17,29
"org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq.run(JDBCConfiguration,String[],String,MappingRepository,ClassLoader)",53,151
"org.apache.openjpa.kernel.TransientState.initialize(StateManagerImpl,PCState)",16,25
org.apache.openjpa.kernel.TransientState.toString(),1,2
org.apache.openjpa.jdbc.kernel.exps.NotContainsExpression.NotContainsExpression(Exp),6,10
"org.apache.openjpa.jdbc.kernel.exps.NotContainsExpression.initialize(Select,ExpContext,Map)",8,12
org.apache.openjpa.jdbc.kernel.exps.NotContainsExpression.NotContainsExpState.NotContainsExpState(Map),3,6
"org.apache.openjpa.jdbc.kernel.exps.NotContainsExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",27,86
"org.apache.openjpa.jdbc.kernel.exps.NotContainsExpression.selectColumns(Select,ExpContext,ExpState,boolean)",10,24
org.apache.openjpa.jdbc.kernel.exps.NotContainsExpression.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.lib.rop.ResultListTest.ResultListTest(String),4,6
"org.apache.openjpa.lib.rop.ResultListTest.ResultListTest(String,boolean)",7,15
org.apache.openjpa.lib.rop.ResultListTest.getResultList(ResultObjectProvider),4,11
org.apache.openjpa.lib.rop.ResultListTest.getResultObjectProviders(List),9,24
org.apache.openjpa.lib.rop.ResultListTest.setUp(),14,28
org.apache.openjpa.lib.rop.ResultListTest.testIterator(),16,27
org.apache.openjpa.lib.rop.ResultListTest.testIteratorModification(),10,16
org.apache.openjpa.lib.rop.ResultListTest.testListIteratorForward(),18,35
org.apache.openjpa.lib.rop.ResultListTest.testListIteratorIndex(),17,35
org.apache.openjpa.lib.rop.ResultListTest.testListIteratorReverse(),19,39
org.apache.openjpa.lib.rop.ResultListTest.testListIteratorModification(),12,20
org.apache.openjpa.lib.rop.ResultListTest.testMultipleIterations(),8,15
org.apache.openjpa.lib.rop.ResultListTest.testContains(),7,26
org.apache.openjpa.lib.rop.ResultListTest.testModification(),14,33
org.apache.openjpa.lib.rop.ResultListTest.testGetBegin(),14,18
org.apache.openjpa.lib.rop.ResultListTest.testGetMiddle(),7,8
org.apache.openjpa.lib.rop.ResultListTest.testGetEnd(),14,17
org.apache.openjpa.lib.rop.ResultListTest.testGetReverse(),7,8
org.apache.openjpa.lib.rop.ResultListTest.testMultipleGet(),13,26
org.apache.openjpa.lib.rop.ResultListTest.testSize(),7,11
org.apache.openjpa.lib.rop.ResultListTest.testEmpty(),12,25
org.apache.openjpa.lib.rop.ResultListTest.testSubList(),17,44
jpa.tools.swing.AttributeLegendView.AttributeLegendView(),27,52
"jpa.tools.swing.AttributeLegendView.createColoredLabel(String,Color)",17,36
org.apache.openjpa.jdbc.meta.ReverseCustomizer.setConfiguration(Properties),5,8
org.apache.openjpa.jdbc.meta.ReverseCustomizer.setTool(ReverseMappingTool),10,18
"org.apache.openjpa.jdbc.meta.ReverseCustomizer.getTableType(Table,int)",8,15
"org.apache.openjpa.jdbc.meta.ReverseCustomizer.getClassName(Table,String)",8,15
org.apache.openjpa.jdbc.meta.ReverseCustomizer.customize(ClassMapping),17,22
org.apache.openjpa.jdbc.meta.ReverseCustomizer.getClassCode(ClassMapping),38,64
"org.apache.openjpa.jdbc.meta.ReverseCustomizer.getFieldName(ClassMapping,Column[],ForeignKey,String)",21,35
org.apache.openjpa.jdbc.meta.ReverseCustomizer.customize(FieldMapping),7,11
org.apache.openjpa.jdbc.meta.ReverseCustomizer.getInitialValue(FieldMapping),8,12
org.apache.openjpa.jdbc.meta.ReverseCustomizer.getDeclaration(FieldMapping),29,54
org.apache.openjpa.jdbc.meta.ReverseCustomizer.getFieldCode(FieldMapping),30,56
org.apache.openjpa.jdbc.meta.ReverseCustomizer.unmappedTable(Table),19,39
org.apache.openjpa.jdbc.meta.ReverseCustomizer.close(),3,3
org.apache.openjpa.jdbc.meta.strats.RelationCollectionInverseKeyFieldStrategy.getFieldMapping(),2,5
org.apache.openjpa.jdbc.meta.strats.RelationCollectionInverseKeyFieldStrategy.getIndependentElementMappings(boolean),5,9
org.apache.openjpa.jdbc.meta.strats.RelationCollectionInverseKeyFieldStrategy.getElementColumns(ClassMapping),7,9
org.apache.openjpa.jdbc.meta.strats.RelationCollectionInverseKeyFieldStrategy.getJoinForeignKey(ClassMapping),5,11
"org.apache.openjpa.jdbc.meta.strats.RelationCollectionInverseKeyFieldStrategy.selectElement(Select,ClassMapping,JDBCStore,JDBCFetchConfiguration,int,Joins)",12,26
"org.apache.openjpa.jdbc.meta.strats.RelationCollectionInverseKeyFieldStrategy.loadElement(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",14,24
"org.apache.openjpa.jdbc.meta.strats.RelationCollectionInverseKeyFieldStrategy.join(Joins,ClassMapping)",4,9
"org.apache.openjpa.jdbc.meta.strats.RelationCollectionInverseKeyFieldStrategy.joinElementRelation(Joins,ClassMapping)",6,13
org.apache.openjpa.jdbc.meta.strats.RelationCollectionInverseKeyFieldStrategy.newLRSProxy(),3,6
org.apache.openjpa.jdbc.meta.strats.RelationCollectionInverseKeyFieldStrategy.map(boolean),14,22
openbook.util.JSPUtility.format(Number),5,7
openbook.util.JSPUtility.format(Date),4,8
openbook.util.JSPUtility.toDouble(String),6,8
"openbook.util.JSPUtility.encodeURL(String,Object)",29,85
openbook.util.JSPUtility.encode(String),8,10
"openbook.util.JSPUtility.getURL(String,String)",7,12
openbook.tools.parser.JavaLexer.JavaLexer(),2,2
openbook.tools.parser.JavaLexer.JavaLexer(CharStream),6,7
"openbook.tools.parser.JavaLexer.JavaLexer(CharStream,RecognizerSharedState)",6,7
openbook.tools.parser.JavaLexer.getGrammarFileName(),5,5
openbook.tools.parser.JavaLexer.mT__25(),9,15
openbook.tools.parser.JavaLexer.mT__26(),9,15
openbook.tools.parser.JavaLexer.mT__27(),9,15
openbook.tools.parser.JavaLexer.mT__28(),9,15
openbook.tools.parser.JavaLexer.mT__29(),9,15
openbook.tools.parser.JavaLexer.mT__30(),9,15
openbook.tools.parser.JavaLexer.mT__31(),9,15
openbook.tools.parser.JavaLexer.mT__32(),9,15
openbook.tools.parser.JavaLexer.mT__33(),9,15
openbook.tools.parser.JavaLexer.mT__34(),9,15
openbook.tools.parser.JavaLexer.mT__35(),9,15
openbook.tools.parser.JavaLexer.mT__36(),9,15
openbook.tools.parser.JavaLexer.mT__37(),9,15
openbook.tools.parser.JavaLexer.mT__38(),9,15
openbook.tools.parser.JavaLexer.mT__39(),9,15
openbook.tools.parser.JavaLexer.mT__40(),9,15
openbook.tools.parser.JavaLexer.mT__41(),9,15
openbook.tools.parser.JavaLexer.mT__42(),9,15
openbook.tools.parser.JavaLexer.mT__43(),9,15
openbook.tools.parser.JavaLexer.mT__44(),9,15
openbook.tools.parser.JavaLexer.mT__45(),9,15
openbook.tools.parser.JavaLexer.mT__46(),9,15
openbook.tools.parser.JavaLexer.mT__47(),9,15
openbook.tools.parser.JavaLexer.mT__48(),9,15
openbook.tools.parser.JavaLexer.mT__49(),9,15
openbook.tools.parser.JavaLexer.mT__50(),9,15
openbook.tools.parser.JavaLexer.mT__51(),9,15
openbook.tools.parser.JavaLexer.mT__52(),9,15
openbook.tools.parser.JavaLexer.mT__53(),9,15
openbook.tools.parser.JavaLexer.mT__54(),9,15
openbook.tools.parser.JavaLexer.mT__55(),9,15
openbook.tools.parser.JavaLexer.mT__56(),9,15
openbook.tools.parser.JavaLexer.mT__57(),9,15
openbook.tools.parser.JavaLexer.mT__58(),9,15
openbook.tools.parser.JavaLexer.mT__59(),9,15
openbook.tools.parser.JavaLexer.mT__60(),9,15
openbook.tools.parser.JavaLexer.mT__61(),9,15
openbook.tools.parser.JavaLexer.mT__62(),9,15
openbook.tools.parser.JavaLexer.mT__63(),9,15
openbook.tools.parser.JavaLexer.mT__64(),9,15
openbook.tools.parser.JavaLexer.mT__65(),9,15
openbook.tools.parser.JavaLexer.mT__66(),9,15
openbook.tools.parser.JavaLexer.mT__67(),9,15
openbook.tools.parser.JavaLexer.mT__68(),9,15
openbook.tools.parser.JavaLexer.mT__69(),9,15
openbook.tools.parser.JavaLexer.mT__70(),9,15
openbook.tools.parser.JavaLexer.mT__71(),9,15
openbook.tools.parser.JavaLexer.mT__72(),9,15
openbook.tools.parser.JavaLexer.mT__73(),9,15
openbook.tools.parser.JavaLexer.mT__74(),9,15
openbook.tools.parser.JavaLexer.mT__75(),9,15
openbook.tools.parser.JavaLexer.mT__76(),9,15
openbook.tools.parser.JavaLexer.mT__77(),9,15
openbook.tools.parser.JavaLexer.mT__78(),9,15
openbook.tools.parser.JavaLexer.mT__79(),9,15
openbook.tools.parser.JavaLexer.mT__80(),9,15
openbook.tools.parser.JavaLexer.mT__81(),9,15
openbook.tools.parser.JavaLexer.mT__82(),9,15
openbook.tools.parser.JavaLexer.mT__83(),9,15
openbook.tools.parser.JavaLexer.mT__84(),9,15
openbook.tools.parser.JavaLexer.mT__85(),9,15
openbook.tools.parser.JavaLexer.mT__86(),9,15
openbook.tools.parser.JavaLexer.mT__87(),9,15
openbook.tools.parser.JavaLexer.mT__88(),9,15
openbook.tools.parser.JavaLexer.mT__89(),9,15
openbook.tools.parser.JavaLexer.mT__90(),9,15
openbook.tools.parser.JavaLexer.mT__91(),9,15
openbook.tools.parser.JavaLexer.mT__92(),9,15
openbook.tools.parser.JavaLexer.mT__93(),9,15
openbook.tools.parser.JavaLexer.mT__94(),9,15
openbook.tools.parser.JavaLexer.mT__95(),9,15
openbook.tools.parser.JavaLexer.mT__96(),9,15
openbook.tools.parser.JavaLexer.mT__97(),9,15
openbook.tools.parser.JavaLexer.mT__98(),9,15
openbook.tools.parser.JavaLexer.mT__99(),9,15
openbook.tools.parser.JavaLexer.mT__100(),9,15
openbook.tools.parser.JavaLexer.mT__101(),9,15
openbook.tools.parser.JavaLexer.mT__102(),9,15
openbook.tools.parser.JavaLexer.mT__103(),9,15
openbook.tools.parser.JavaLexer.mT__104(),9,15
openbook.tools.parser.JavaLexer.mT__105(),9,15
openbook.tools.parser.JavaLexer.mT__106(),9,15
openbook.tools.parser.JavaLexer.mT__107(),9,15
openbook.tools.parser.JavaLexer.mT__108(),9,15
openbook.tools.parser.JavaLexer.mT__109(),9,15
openbook.tools.parser.JavaLexer.mT__110(),9,15
openbook.tools.parser.JavaLexer.mT__111(),9,15
openbook.tools.parser.JavaLexer.mT__112(),9,15
openbook.tools.parser.JavaLexer.mT__113(),9,15
openbook.tools.parser.JavaLexer.mHexLiteral(),25,85
openbook.tools.parser.JavaLexer.mDecimalLiteral(),19,71
openbook.tools.parser.JavaLexer.mOctalLiteral(),20,62
openbook.tools.parser.JavaLexer.mHexDigit(),13,29
openbook.tools.parser.JavaLexer.mIntegerTypeSuffix(),14,27
openbook.tools.parser.JavaLexer.mFloatingPointLiteral(),22,200
openbook.tools.parser.JavaLexer.mExponent(),19,64
openbook.tools.parser.JavaLexer.mFloatTypeSuffix(),13,27
openbook.tools.parser.JavaLexer.mCharacterLiteral(),22,68
openbook.tools.parser.JavaLexer.mStringLiteral(),21,61
openbook.tools.parser.JavaLexer.mEscapeSequence(),19,71
openbook.tools.parser.JavaLexer.mOctalEscape(),13,69
openbook.tools.parser.JavaLexer.mUnicodeEscape(),10,36
openbook.tools.parser.JavaLexer.mENUM(),11,18
openbook.tools.parser.JavaLexer.mASSERT(),11,18
openbook.tools.parser.JavaLexer.mIdentifier(),19,74
openbook.tools.parser.JavaLexer.mLetter(),14,46
openbook.tools.parser.JavaLexer.mJavaIDDigit(),15,56
openbook.tools.parser.JavaLexer.mWS(),15,34
openbook.tools.parser.JavaLexer.mCOMMENT(),16,39
openbook.tools.parser.JavaLexer.mLINE_COMMENT(),20,58
openbook.tools.parser.JavaLexer.mTokens(),18,159
openbook.tools.parser.JavaLexer.DFA18.DFA18(BaseRecognizer),11,28
openbook.tools.parser.JavaLexer.DFA18.getDescription(),7,15
openbook.tools.parser.JavaLexer.DFA29.DFA29(BaseRecognizer),11,28
openbook.tools.parser.JavaLexer.DFA29.getDescription(),12,19
org.apache.openjpa.jdbc.sql.FoxProDictionary.FoxProDictionary(),54,122
"org.apache.openjpa.jdbc.sql.FoxProDictionary.getString(ResultSet,int)",13,21
"org.apache.openjpa.jdbc.sql.FoxProDictionary.setNull(PreparedStatement,int,int,Column)",19,37
"org.apache.openjpa.jdbc.sql.FoxProDictionary.appendSize(Column,String)",14,33
org.apache.openjpa.jdbc.sql.FoxProDictionary.getPrimaryKeyConstraintSQL(PrimaryKey),10,13
org.apache.openjpa.jdbc.sql.FoxProDictionary.getCreateIndexSQL(Index),10,13
"org.apache.openjpa.jdbc.sql.FoxProDictionary.getColumns(DatabaseMetaData,String,String,String,String,Connection)",15,39
"org.apache.openjpa.jdbc.sql.FoxProDictionary.getColumns(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",37,78
"org.apache.openjpa.jdbc.sql.FoxProDictionary.getPrimaryKeys(DatabaseMetaData,String,String,String,Connection)",18,23
"org.apache.openjpa.jdbc.sql.FoxProDictionary.getPrimaryKeys(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",18,23
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.MarketSummaryDataBean(),4,4
"org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.MarketSummaryDataBean(BigDecimal,BigDecimal,double,Collection,Collection)",22,54
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.getRandomInstance(),18,56
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.toString(),17,62
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.toHTML(),16,59
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.print(),3,4
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.getGainPercent(),5,14
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.getTSIA(),4,6
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.setTSIA(BigDecimal),6,12
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.getOpenTSIA(),3,6
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.setOpenTSIA(BigDecimal),5,12
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.getVolume(),3,5
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.setVolume(double),4,11
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.getTopGainers(),4,9
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.setTopGainers(Collection),6,19
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.getTopLosers(),4,9
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.setTopLosers(Collection),6,19
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.getSummaryDate(),3,9
org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.setSummaryDate(Date),5,19
"org.apache.openjpa.integration.daytrader.MarketSummaryDataBean.computeGainPercent(BigDecimal,BigDecimal)",14,34
"org.apache.openjpa.kernel.exps.BindKeyVariableExpression.BindKeyVariableExpression(BoundVariable,Val)",10,21
org.apache.openjpa.kernel.exps.BindKeyVariableExpression.getCollection(Object),6,12
org.apache.openjpa.persistence.jest.JSONObjectFormatter.getMimeType(),4,6
"org.apache.openjpa.persistence.jest.JSONObjectFormatter.encode(Object,JPAServletContext)",22,40
"org.apache.openjpa.persistence.jest.JSONObjectFormatter.writeOut(Collection<OpenJPAStateManager>,Metamodel,String,String,String,OutputStream)",17,27
"org.apache.openjpa.persistence.jest.JSONObjectFormatter.encode(Collection<OpenJPAStateManager>,Metamodel)",10,13
"org.apache.openjpa.persistence.jest.JSONObjectFormatter.encodeManagedInstance(OpenJPAStateManager,Metamodel)",18,33
"org.apache.openjpa.persistence.jest.JSONObjectFormatter.encodeManagedInstances(Collection<OpenJPAStateManager>,Metamodel)",17,31
"org.apache.openjpa.persistence.jest.JSONObjectFormatter.encodeManagedInstance(OpenJPAStateManager,Set<OpenJPAStateManager>,int,boolean,Metamodel)",84,354
org.apache.openjpa.persistence.jest.JSONObjectFormatter.typeOf(OpenJPAStateManager),9,10
org.apache.openjpa.persistence.jest.JSONObjectFormatter.streamToString(Object),23,56
org.apache.openjpa.persistence.jest.JSONObjectFormatter.encode(Metamodel),9,9
"org.apache.openjpa.persistence.jest.JSONObjectFormatter.writeOut(Metamodel,String,String,String,OutputStream)",13,16
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.DBIdentifierUtilImpl(),3,3
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.DBIdentifierUtilImpl(IdentifierConfiguration),5,7
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.getValidColumnIdentifier(DBIdentifier,Table,int,boolean)",16,45
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.getValidForeignKeyIdentifier(DBIdentifier,Table,Table,int)",12,43
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.getValidUniqueIdentifier(DBIdentifier,Table,int)",11,40
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.getValidIndexIdentifier(DBIdentifier,Table,int)",11,40
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.getValidSequenceIdentifier(DBIdentifier,Schema,int)",10,38
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.getValidTableIdentifier(DBIdentifier,Schema,int)",10,38
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.makeNameValid(String,NameSet,int,int,boolean)",14,48
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.makeIdentifierValid(DBIdentifier,NameSet,int,boolean)",39,208
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.toDBName(DBIdentifier),10,17
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.toDBName(DBIdentifier,boolean)",25,67
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.toDBName(String),8,12
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.toDBName(String,boolean)",13,26
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.toDBName(String,String,boolean)",19,43
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.fromDBName(String,DBIdentifierType)",33,111
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.append(DBIdentifierType,DBIdentifier)",7,25
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.appendColumns(Column[]),9,31
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.delimit(DBIdentifier,boolean)",21,83
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.shorten(String,int)",6,11
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.getGeneratedKeySequenceName(Column,int)",22,59
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.convertSchemaCase(DBIdentifier),27,81
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.convertAlias(String),19,45
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.makeName(String,DBIdentifier,Table,String)",25,58
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.makeName(String,DBIdentifier,String)",13,28
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.getMaxLen(String,DBIdentifier,int)",16,51
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.getConfiguration(),4,6
org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl.setConfiguration(Configuration),4,8
"org.apache.openjpa.integration.daytrader.TradeAction.TradeAction(Log,EntityManagerFactory,boolean)",8,12
"org.apache.openjpa.integration.daytrader.TradeAction.doAccount(StringBuilder,String,String)",44,140
"org.apache.openjpa.integration.daytrader.TradeAction.doAccountUpdate(StringBuilder,String,String,String,String,String,String,String)",56,172
"org.apache.openjpa.integration.daytrader.TradeAction.doBuy(StringBuilder,String,String,String)",48,124
"org.apache.openjpa.integration.daytrader.TradeAction.doHome(StringBuilder,String,String)",61,213
"org.apache.openjpa.integration.daytrader.TradeAction.doLogin(StringBuilder,String,String)",51,145
"org.apache.openjpa.integration.daytrader.TradeAction.doLogout(StringBuilder,String)",38,86
"org.apache.openjpa.integration.daytrader.TradeAction.doPortfolio(StringBuilder,String,String)",55,175
"org.apache.openjpa.integration.daytrader.TradeAction.doQuotes(StringBuilder,String,String)",43,111
"org.apache.openjpa.integration.daytrader.TradeAction.doRegister(StringBuilder,String,String,String,String,String,String,String,String)",55,153
"org.apache.openjpa.integration.daytrader.TradeAction.doSell(StringBuilder,String,Integer)",40,94
"org.apache.openjpa.integration.daytrader.TradeAction.doWelcome(StringBuilder,String)",17,28
"org.apache.openjpa.integration.daytrader.TradeAction.setAttribute(StringBuilder,String,Object)",14,22
"org.apache.openjpa.jdbc.kernel.exps.Concat.Concat(Val,Val)",6,13
org.apache.openjpa.jdbc.kernel.exps.Concat.getVal1(),1,3
org.apache.openjpa.jdbc.kernel.exps.Concat.getVal2(),1,3
org.apache.openjpa.jdbc.kernel.exps.Concat.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.Concat.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.Concat.getType(),2,2
org.apache.openjpa.jdbc.kernel.exps.Concat.setImplicitType(Class),3,4
"org.apache.openjpa.jdbc.kernel.exps.Concat.initialize(Select,ExpContext,int)",10,23
"org.apache.openjpa.jdbc.kernel.exps.Concat.select(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.Concat.selectColumns(Select,ExpContext,ExpState,boolean)",10,26
"org.apache.openjpa.jdbc.kernel.exps.Concat.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.Concat.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.Concat.newSQLBuffer(Select,ExpContext,ExpState)",13,27
"org.apache.openjpa.jdbc.kernel.exps.Concat.load(ExpContext,ExpState,Result)",15,19
"org.apache.openjpa.jdbc.kernel.exps.Concat.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",10,27
"org.apache.openjpa.jdbc.kernel.exps.Concat.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.Concat.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",27,92
org.apache.openjpa.jdbc.kernel.exps.Concat.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.jdbc.kernel.exps.Concat.getId(),2,3
org.apache.openjpa.jdbc.kernel.exps.Size.Size(Val),2,4
"org.apache.openjpa.jdbc.kernel.exps.Size.initialize(Select,ExpContext,int)",10,16
"org.apache.openjpa.jdbc.kernel.exps.Size.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",13,26
org.apache.openjpa.jdbc.kernel.exps.Size.getType(Class),1,1
org.apache.openjpa.jdbc.kernel.exps.Size.getOperator(),8,8
org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.startConfiguration(),2,2
org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.setConfiguration(Configuration),7,13
org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.endConfiguration(),1,1
org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.getRestoreFieldState(),11,15
org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.setRestoreFieldState(boolean),12,19
"org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.newSavepoint(String,Broker)",12,24
org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.supportsIncrementalFlush(),3,3
org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.rollbackDataStore(ConnectionSavepoint),6,9
org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.setDataStore(ConnectionSavepoint),6,9
"org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.ConnectionSavepoint.ConnectionSavepoint(Broker,String,boolean)",6,10
org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.ConnectionSavepoint.getDataStoreSavepoint(),5,8
org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.ConnectionSavepoint.setDataStoreSavepoint(Object),7,13
org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.ConnectionSavepoint.getConnection(),10,15
org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.ConnectionSavepoint.rollback(Collection),8,12
org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.ConnectionSavepoint.save(Collection),8,9
org.apache.openjpa.jdbc.kernel.AbstractJDBCSavepointManager.ConnectionSavepoint.writeObject(ObjectOutputStream),6,8
org.apache.openjpa.datacache.DelegatingDataCache.DelegatingDataCache(DataCache),6,10
"org.apache.openjpa.datacache.DelegatingDataCache.DelegatingDataCache(DataCache,RuntimeExceptionTranslator)",8,24
org.apache.openjpa.datacache.DelegatingDataCache.getDelegate(),4,6
org.apache.openjpa.datacache.DelegatingDataCache.getInnermostDelegate(),5,10
org.apache.openjpa.datacache.DelegatingDataCache.hashCode(),5,9
org.apache.openjpa.datacache.DelegatingDataCache.equals(Object),8,15
org.apache.openjpa.datacache.DelegatingDataCache.translate(RuntimeException),5,11
org.apache.openjpa.datacache.DelegatingDataCache.getName(),6,8
org.apache.openjpa.datacache.DelegatingDataCache.setName(String),7,12
org.apache.openjpa.datacache.DelegatingDataCache.initialize(DataCacheManager),7,12
"org.apache.openjpa.datacache.DelegatingDataCache.commit(Collection<DataCachePCData>,Collection<DataCachePCData>,Collection<DataCachePCData>,Collection<Object>)",12,31
org.apache.openjpa.datacache.DelegatingDataCache.contains(Object),7,10
org.apache.openjpa.datacache.DelegatingDataCache.containsAll(Collection<Object>),12,15
org.apache.openjpa.datacache.DelegatingDataCache.get(Object),7,11
org.apache.openjpa.datacache.DelegatingDataCache.put(DataCachePCData),6,13
org.apache.openjpa.datacache.DelegatingDataCache.update(DataCachePCData),7,12
org.apache.openjpa.datacache.DelegatingDataCache.remove(Object),8,13
org.apache.openjpa.datacache.DelegatingDataCache.removeAll(Collection<Object>),12,15
"org.apache.openjpa.datacache.DelegatingDataCache.removeAll(Class<>,boolean)",7,11
org.apache.openjpa.datacache.DelegatingDataCache.clear(),4,5
org.apache.openjpa.datacache.DelegatingDataCache.pin(Object),7,10
org.apache.openjpa.datacache.DelegatingDataCache.pinAll(Collection<Object>),12,15
"org.apache.openjpa.datacache.DelegatingDataCache.pinAll(Class<>,boolean)",7,11
org.apache.openjpa.datacache.DelegatingDataCache.unpin(Object),7,10
org.apache.openjpa.datacache.DelegatingDataCache.unpinAll(Collection<Object>),12,15
"org.apache.openjpa.datacache.DelegatingDataCache.unpinAll(Class<>,boolean)",7,11
org.apache.openjpa.datacache.DelegatingDataCache.writeLock(),6,9
org.apache.openjpa.datacache.DelegatingDataCache.writeUnlock(),6,9
org.apache.openjpa.datacache.DelegatingDataCache.addExpirationListener(ExpirationListener),8,15
org.apache.openjpa.datacache.DelegatingDataCache.removeExpirationListener(ExpirationListener),8,15
org.apache.openjpa.datacache.DelegatingDataCache.close(),5,7
org.apache.openjpa.datacache.DelegatingDataCache.getAll(List<Object>),9,14
org.apache.openjpa.datacache.DelegatingDataCache.getStatistics(),2,6
"org.apache.openjpa.datacache.DelegatingDataCache.getPartition(String,boolean)",9,14
org.apache.openjpa.datacache.DelegatingDataCache.getPartitionNames(),8,11
org.apache.openjpa.datacache.DelegatingDataCache.isPartitioned(),5,7
org.apache.openjpa.datacache.DelegatingDataCache.getEvictOnBulkUpdate(),7,11
org.apache.openjpa.jdbc.meta.strats.AbstractStrategy.getAlias(),3,3
org.apache.openjpa.jdbc.meta.strats.AbstractStrategy.map(boolean),2,2
org.apache.openjpa.jdbc.meta.strats.AbstractStrategy.initialize(),1,1
"org.apache.openjpa.jdbc.meta.strats.AbstractStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",8,10
"org.apache.openjpa.jdbc.meta.strats.AbstractStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",8,10
"org.apache.openjpa.jdbc.meta.strats.AbstractStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",8,10
"org.apache.openjpa.jdbc.meta.strats.AbstractStrategy.isCustomInsert(OpenJPAStateManager,JDBCStore)",6,7
"org.apache.openjpa.jdbc.meta.strats.AbstractStrategy.isCustomUpdate(OpenJPAStateManager,JDBCStore)",6,7
"org.apache.openjpa.jdbc.meta.strats.AbstractStrategy.isCustomDelete(OpenJPAStateManager,JDBCStore)",6,7
"org.apache.openjpa.jdbc.meta.strats.AbstractStrategy.customInsert(OpenJPAStateManager,JDBCStore)",8,9
"org.apache.openjpa.jdbc.meta.strats.AbstractStrategy.customUpdate(OpenJPAStateManager,JDBCStore)",8,9
"org.apache.openjpa.jdbc.meta.strats.AbstractStrategy.customDelete(OpenJPAStateManager,JDBCStore)",8,9
org.apache.openjpa.jdbc.meta.strats.TimestampVersionStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.TimestampVersionStrategy.getJavaType(),5,6
org.apache.openjpa.jdbc.meta.strats.TimestampVersionStrategy.nextVersion(Object),7,9
org.apache.openjpa.jdbc.meta.strats.TimestampVersionStrategy.getBulkUpdateValues(),12,21
"org.apache.openjpa.event.ExceptionOrphanedKeyAction.orphan(Object,OpenJPAStateManager,ValueMetaData)",14,18
org.apache.openjpa.kernel.DelegatingExtent<T>.DelegatingExtent(Extent<T>),5,8
"org.apache.openjpa.kernel.DelegatingExtent<T>.DelegatingExtent(Extent<T>,RuntimeExceptionTranslator)",10,25
org.apache.openjpa.kernel.DelegatingExtent<T>.getDelegate(),3,5
org.apache.openjpa.kernel.DelegatingExtent<T>.getInnermostDelegate(),4,9
org.apache.openjpa.kernel.DelegatingExtent<T>.hashCode(),4,6
org.apache.openjpa.kernel.DelegatingExtent<T>.equals(Object),6,11
org.apache.openjpa.kernel.DelegatingExtent<T>.translate(RuntimeException),5,11
org.apache.openjpa.kernel.DelegatingExtent<T>.getElementType(),6,8
org.apache.openjpa.kernel.DelegatingExtent<T>.hasSubclasses(),5,6
org.apache.openjpa.kernel.DelegatingExtent<T>.getBroker(),5,7
org.apache.openjpa.kernel.DelegatingExtent<T>.getFetchConfiguration(),6,10
org.apache.openjpa.kernel.DelegatingExtent<T>.getIgnoreChanges(),6,8
org.apache.openjpa.kernel.DelegatingExtent<T>.setIgnoreChanges(boolean),8,14
org.apache.openjpa.kernel.DelegatingExtent<T>.list(),5,7
org.apache.openjpa.kernel.DelegatingExtent<T>.iterator(),5,7
org.apache.openjpa.kernel.DelegatingExtent<T>.closeAll(),5,6
org.apache.openjpa.kernel.DelegatingExtent<T>.lock(),5,6
org.apache.openjpa.kernel.DelegatingExtent<T>.unlock(),5,6
org.apache.openjpa.kernel.exps.ExpressionFactory.emptyExpression(),4,7
org.apache.openjpa.kernel.exps.ExpressionFactory.asExpression(Value),3,6
"org.apache.openjpa.kernel.exps.ExpressionFactory.equal(Value,Value)",5,7
"org.apache.openjpa.kernel.exps.ExpressionFactory.notEqual(Value,Value)",5,7
"org.apache.openjpa.kernel.exps.ExpressionFactory.lessThan(Value,Value)",4,6
"org.apache.openjpa.kernel.exps.ExpressionFactory.greaterThan(Value,Value)",4,6
"org.apache.openjpa.kernel.exps.ExpressionFactory.lessThanEqual(Value,Value)",5,7
"org.apache.openjpa.kernel.exps.ExpressionFactory.greaterThanEqual(Value,Value)",5,7
org.apache.openjpa.kernel.exps.ExpressionFactory.isEmpty(Value),6,7
org.apache.openjpa.kernel.exps.ExpressionFactory.isNotEmpty(Value),6,7
"org.apache.openjpa.kernel.exps.ExpressionFactory.contains(Value,Value)",7,9
"org.apache.openjpa.kernel.exps.ExpressionFactory.containsKey(Value,Value)",8,10
"org.apache.openjpa.kernel.exps.ExpressionFactory.containsValue(Value,Value)",7,10
"org.apache.openjpa.kernel.exps.ExpressionFactory.getMapValue(Value,Value)",6,10
"org.apache.openjpa.kernel.exps.ExpressionFactory.isInstance(Value,Class)",4,6
"org.apache.openjpa.kernel.exps.ExpressionFactory.and(Expression,Expression)",3,6
"org.apache.openjpa.kernel.exps.ExpressionFactory.or(Expression,Expression)",3,6
org.apache.openjpa.kernel.exps.ExpressionFactory.not(Expression),3,5
"org.apache.openjpa.kernel.exps.ExpressionFactory.bindVariable(Value,Value)",7,11
"org.apache.openjpa.kernel.exps.ExpressionFactory.bindKeyVariable(Value,Value)",8,14
"org.apache.openjpa.kernel.exps.ExpressionFactory.bindValueVariable(Value,Value)",7,14
"org.apache.openjpa.kernel.exps.ExpressionFactory.endsWith(Value,Value)",4,6
"org.apache.openjpa.kernel.exps.ExpressionFactory.matches(Value,Value,String,String,String)",19,45
"org.apache.openjpa.kernel.exps.ExpressionFactory.notMatches(Value,Value,String,String,String)",19,44
"org.apache.openjpa.kernel.exps.ExpressionFactory.startsWith(Value,Value)",5,8
org.apache.openjpa.kernel.exps.ExpressionFactory.stringLength(Value),6,9
"org.apache.openjpa.kernel.exps.ExpressionFactory.trim(Value,Value,Boolean)",11,28
"org.apache.openjpa.kernel.exps.ExpressionFactory.newSubquery(ClassMetaData,boolean,String)",18,33
org.apache.openjpa.kernel.exps.ExpressionFactory.newPath(),15,18
org.apache.openjpa.kernel.exps.ExpressionFactory.newPath(Value),15,20
"org.apache.openjpa.kernel.exps.ExpressionFactory.newLiteral(Object,int)",11,14
org.apache.openjpa.kernel.exps.ExpressionFactory.getThis(),3,5
org.apache.openjpa.kernel.exps.ExpressionFactory.getNull(),2,3
org.apache.openjpa.kernel.exps.ExpressionFactory.getCurrentDate(Class<T>),5,10
org.apache.openjpa.kernel.exps.ExpressionFactory.getCurrentTime(Class<T>),6,10
org.apache.openjpa.kernel.exps.ExpressionFactory.getCurrentTimestamp(Class<T>),6,10
"org.apache.openjpa.kernel.exps.ExpressionFactory.newParameter(Object,Class)",8,15
"org.apache.openjpa.kernel.exps.ExpressionFactory.newCollectionValuedParameter(Object,Class)",10,18
"org.apache.openjpa.kernel.exps.ExpressionFactory.newExtension(FilterListener,Value,Value)",6,11
"org.apache.openjpa.kernel.exps.ExpressionFactory.newAggregate(AggregateListener,Value)",5,9
"org.apache.openjpa.kernel.exps.ExpressionFactory.newArgumentList(Value,Value)",8,14
org.apache.openjpa.kernel.exps.ExpressionFactory.newArgumentList(Value),7,12
"org.apache.openjpa.kernel.exps.ExpressionFactory.newUnboundVariable(String,Class)",12,19
"org.apache.openjpa.kernel.exps.ExpressionFactory.newBoundVariable(String,Class)",18,28
"org.apache.openjpa.kernel.exps.ExpressionFactory.cast(Value,Class)",4,7
"org.apache.openjpa.kernel.exps.ExpressionFactory.add(Value,Value)",6,10
"org.apache.openjpa.kernel.exps.ExpressionFactory.subtract(Value,Value)",5,10
"org.apache.openjpa.kernel.exps.ExpressionFactory.multiply(Value,Value)",6,10
"org.apache.openjpa.kernel.exps.ExpressionFactory.divide(Value,Value)",5,10
"org.apache.openjpa.kernel.exps.ExpressionFactory.mod(Value,Value)",5,10
org.apache.openjpa.kernel.exps.ExpressionFactory.abs(Value),5,8
"org.apache.openjpa.kernel.exps.ExpressionFactory.indexOf(Value,Value)",12,17
"org.apache.openjpa.kernel.exps.ExpressionFactory.concat(Value,Value)",7,11
org.apache.openjpa.kernel.exps.ExpressionFactory.sqrt(Value),5,7
"org.apache.openjpa.kernel.exps.ExpressionFactory.substring(Value,Value)",15,21
org.apache.openjpa.kernel.exps.ExpressionFactory.toUpperCase(Value),3,6
org.apache.openjpa.kernel.exps.ExpressionFactory.toLowerCase(Value),4,6
org.apache.openjpa.kernel.exps.ExpressionFactory.avg(Value),5,7
org.apache.openjpa.kernel.exps.ExpressionFactory.count(Value),4,7
org.apache.openjpa.kernel.exps.ExpressionFactory.max(Value),4,7
org.apache.openjpa.kernel.exps.ExpressionFactory.min(Value),5,7
org.apache.openjpa.kernel.exps.ExpressionFactory.sum(Value),5,7
org.apache.openjpa.kernel.exps.ExpressionFactory.any(Value),5,6
org.apache.openjpa.kernel.exps.ExpressionFactory.all(Value),5,6
org.apache.openjpa.kernel.exps.ExpressionFactory.size(Value),6,7
org.apache.openjpa.kernel.exps.ExpressionFactory.index(Value),6,9
org.apache.openjpa.kernel.exps.ExpressionFactory.type(Value),3,6
"org.apache.openjpa.kernel.exps.ExpressionFactory.mapEntry(Value,Value)",5,10
"org.apache.openjpa.kernel.exps.ExpressionFactory.mapKey(Value,Value)",4,10
org.apache.openjpa.kernel.exps.ExpressionFactory.getKey(Value),7,9
org.apache.openjpa.kernel.exps.ExpressionFactory.distinct(Value),3,4
org.apache.openjpa.kernel.exps.ExpressionFactory.getObjectId(Value),3,6
"org.apache.openjpa.kernel.exps.ExpressionFactory.simpleCaseExpression(Value,Expression[],Value)",6,11
"org.apache.openjpa.kernel.exps.ExpressionFactory.generalCaseExpression(Expression[],Value)",4,7
"org.apache.openjpa.kernel.exps.ExpressionFactory.whenCondition(Expression,Value)",7,8
"org.apache.openjpa.kernel.exps.ExpressionFactory.whenScalar(Value,Value)",5,9
org.apache.openjpa.kernel.exps.ExpressionFactory.coalesceExpression(Value[]),4,7
"org.apache.openjpa.kernel.exps.ExpressionFactory.nullIfExpression(Value,Value)",4,8
"org.apache.openjpa.kernel.exps.ExpressionFactory.newTypeLiteral(Object,int)",11,15
"org.apache.openjpa.kernel.exps.ExpressionFactory.newFunction(String,Class<>,Value)",10,14
org.apache.openjpa.kernel.exps.ExpressionFactory.isVerticalType(Value),8,11
"org.apache.openjpa.kernel.exps.Path.get(FieldMetaData,boolean)",11,19
org.apache.openjpa.kernel.exps.Path.last(),5,8
"org.apache.openjpa.kernel.exps.Path.get(FieldMetaData,XMLMetaData)",15,29
"org.apache.openjpa.kernel.exps.Path.get(XMLMetaData,String)",13,21
org.apache.openjpa.kernel.exps.Path.getXmlMapping(),8,10
org.apache.openjpa.kernel.exps.Path.setSchemaAlias(String),9,16
org.apache.openjpa.kernel.exps.Path.getSchemaAlias(),3,3
"org.apache.openjpa.kernel.exps.Path.setSubqueryContext(Context,String)",6,8
org.apache.openjpa.kernel.exps.Path.getCorrelationVar(),3,3
"org.apache.openjpa.jdbc.kernel.exps.JDBCAggregateListener.appendTo(SQLBuffer,FilterValue[],ClassMapping,JDBCStore)",21,39
jpa.tools.swing.ErrorDialog.ErrorDialog(Throwable),9,12
"jpa.tools.swing.ErrorDialog.ErrorDialog(JComponent,Throwable)",5,6
"jpa.tools.swing.ErrorDialog.ErrorDialog(JComponent,Icon,Throwable)",30,62
jpa.tools.swing.ErrorDialog.createContent(),42,134
jpa.tools.swing.ErrorDialog.createContent().$1.actionPerformed(ActionEvent),31,73
jpa.tools.swing.ErrorDialog.createContent().$2.actionPerformed(ActionEvent),17,23
jpa.tools.swing.ErrorDialog.createErrorMessage(Throwable),19,34
jpa.tools.swing.ErrorDialog.createDetailedMessage(Throwable),18,34
"jpa.tools.swing.ErrorDialog.generateStackTrace(Throwable,StringBuilder)",14,35
jpa.tools.swing.ErrorDialog.toString(StackTraceElement[]),14,30
jpa.tools.swing.ErrorDialog.isSuppressed(String),8,12
jpa.tools.swing.ErrorDialog.main(String[]),29,48
org.apache.openjpa.trader.client.OpenTradeImageBundle.login(),3,3
org.apache.openjpa.trader.client.OpenTradeImageBundle.logo(),3,3
org.apache.openjpa.jdbc.sql.OracleDictionary.OracleDictionary(),129,269
org.apache.openjpa.jdbc.sql.OracleDictionary.endConfiguration(),5,8
org.apache.openjpa.jdbc.sql.OracleDictionary.connectedConfiguration(Connection),64,212
org.apache.openjpa.jdbc.sql.OracleDictionary.cacheDriverBehavior(String),15,44
org.apache.openjpa.jdbc.sql.OracleDictionary.ensureDriverVendor(),24,44
org.apache.openjpa.jdbc.sql.OracleDictionary.supportsLocking(Select),10,18
"org.apache.openjpa.jdbc.sql.OracleDictionary.getSelects(Select,boolean,boolean)",41,127
"org.apache.openjpa.jdbc.sql.OracleDictionary.canOuterJoin(int,ForeignKey)",9,17
org.apache.openjpa.jdbc.sql.OracleDictionary.toNativeJoin(Join),28,98
"org.apache.openjpa.jdbc.sql.OracleDictionary.toSelect(SQLBuffer,JDBCFetchConfiguration,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,boolean,long,long,boolean,Select)",12,35
"org.apache.openjpa.jdbc.sql.OracleDictionary.toSelect(SQLBuffer,JDBCFetchConfiguration,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,boolean,long,long,Select)",45,162
"org.apache.openjpa.jdbc.sql.OracleDictionary.requiresSubselectForRange(long,long,boolean,SQLBuffer)",12,20
org.apache.openjpa.jdbc.sql.OracleDictionary.getSelectOperation(JDBCFetchConfiguration),14,33
"org.apache.openjpa.jdbc.sql.OracleDictionary.setString(PreparedStatement,int,String,Column)",70,193
"org.apache.openjpa.jdbc.sql.OracleDictionary.setBinaryStream(PreparedStatement,int,InputStream,int,Column)",16,30
"org.apache.openjpa.jdbc.sql.OracleDictionary.setClobString(PreparedStatement,int,String,Column)",51,126
"org.apache.openjpa.jdbc.sql.OracleDictionary.setNull(PreparedStatement,int,int,Column)",33,119
"org.apache.openjpa.jdbc.sql.OracleDictionary.getClobString(ResultSet,int)",27,52
"org.apache.openjpa.jdbc.sql.OracleDictionary.getTimestamp(ResultSet,int,Calendar)",25,48
"org.apache.openjpa.jdbc.sql.OracleDictionary.getObject(ResultSet,int,Map)",22,50
"org.apache.openjpa.jdbc.sql.OracleDictionary.convertFromOracleType(Object,String)",17,43
"org.apache.openjpa.jdbc.sql.OracleDictionary.getColumns(DatabaseMetaData,String,String,String,String,Connection)",15,39
"org.apache.openjpa.jdbc.sql.OracleDictionary.getColumns(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",33,116
"org.apache.openjpa.jdbc.sql.OracleDictionary.getPrimaryKeys(DatabaseMetaData,String,String,String,Connection)",16,35
"org.apache.openjpa.jdbc.sql.OracleDictionary.getPrimaryKeys(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",48,144
"org.apache.openjpa.jdbc.sql.OracleDictionary.getIndexInfo(DatabaseMetaData,String,String,String,boolean,boolean,Connection)",17,38
"org.apache.openjpa.jdbc.sql.OracleDictionary.getIndexInfo(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,boolean,boolean,Connection)",47,144
"org.apache.openjpa.jdbc.sql.OracleDictionary.getImportedKeys(DatabaseMetaData,String,String,String,Connection,boolean)",18,39
"org.apache.openjpa.jdbc.sql.OracleDictionary.getImportedKeys(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,Connection,boolean)",68,277
org.apache.openjpa.jdbc.sql.OracleDictionary.getCreateTableSQL(Table),46,144
"org.apache.openjpa.jdbc.sql.OracleDictionary.getJDBCType(int,boolean,int,int,boolean)",8,18
"org.apache.openjpa.jdbc.sql.OracleDictionary.getSequencesSQL(String,String)",7,19
"org.apache.openjpa.jdbc.sql.OracleDictionary.getSequencesSQL(DBIdentifier,DBIdentifier)",12,54
"org.apache.openjpa.jdbc.sql.OracleDictionary.isSystemSequence(String,String,boolean)",7,18
"org.apache.openjpa.jdbc.sql.OracleDictionary.isSystemSequence(DBIdentifier,DBIdentifier,boolean)",17,46
"org.apache.openjpa.jdbc.sql.OracleDictionary.getGeneratedKey(Column,Connection)",40,77
org.apache.openjpa.jdbc.sql.OracleDictionary.getGeneratedKeyTriggerName(Column),18,33
org.apache.openjpa.jdbc.sql.OracleDictionary.getOpenJPA3GeneratedKeySequenceName(Column),23,40
org.apache.openjpa.jdbc.sql.OracleDictionary.getOpenJPA3GeneratedKeyTriggerName(Column),23,40
"org.apache.openjpa.jdbc.sql.OracleDictionary.putBytes(Blob,byte[])",9,21
"org.apache.openjpa.jdbc.sql.OracleDictionary.putString(Clob,String)",9,22
"org.apache.openjpa.jdbc.sql.OracleDictionary.putChars(Clob,char[])",9,20
"org.apache.openjpa.jdbc.sql.OracleDictionary.invokePutLobMethod(Method,Object,Object)",12,38
org.apache.openjpa.jdbc.sql.OracleDictionary.getEmptyClob(),19,33
org.apache.openjpa.jdbc.sql.OracleDictionary.getEmptyBlob(),19,33
org.apache.openjpa.jdbc.sql.OracleDictionary.isOraclePreparedStatement(Statement),8,14
"org.apache.openjpa.jdbc.sql.OracleDictionary.appendXmlComparison(SQLBuffer,String,FilterValue,FilterValue,boolean,boolean)",24,71
"org.apache.openjpa.jdbc.sql.OracleDictionary.appendXmlComparison1(SQLBuffer,String,FilterValue,FilterValue)",21,52
"org.apache.openjpa.jdbc.sql.OracleDictionary.appendXmlComparison2(SQLBuffer,String,FilterValue,FilterValue)",23,62
"org.apache.openjpa.jdbc.sql.OracleDictionary.appendXmlExtractValue(SQLBuffer,FilterValue)",14,28
"org.apache.openjpa.jdbc.sql.OracleDictionary.insertClobForStreamingLoad(Row,Column,Object)",14,24
org.apache.openjpa.jdbc.sql.OracleDictionary.getBatchUpdateCount(PreparedStatement),14,33
"org.apache.openjpa.jdbc.sql.OracleDictionary.isFatalException(int,SQLException)",10,39
"org.apache.openjpa.jdbc.sql.OracleDictionary.insertBlobForStreamingLoad(Row,Column,JDBCStore,Object,Select)",18,29
org.apache.openjpa.jdbc.sql.OracleDictionary.isImplicitJoin(),4,6
"org.apache.openjpa.jdbc.sql.OracleDictionary.getMarkerForInsertUpdate(Column,Object)",12,21
org.apache.openjpa.jdbc.sql.OracleDictionary.guessJDBCVersion(Connection),25,39
"org.apache.openjpa.jdbc.sql.OracleDictionary.getIsNullSQL(String,int)",10,23
"org.apache.openjpa.jdbc.sql.OracleDictionary.getIsNotNullSQL(String,int)",10,23
"org.apache.openjpa.jdbc.sql.OracleDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",10,30
"org.apache.openjpa.util.AbstractLRSProxyCollection.AbstractLRSProxyCollection(Class,boolean)",15,25
"org.apache.openjpa.util.AbstractLRSProxyCollection.setOwner(OpenJPAStateManager,int)",20,42
org.apache.openjpa.util.AbstractLRSProxyCollection.getOwner(),3,3
org.apache.openjpa.util.AbstractLRSProxyCollection.getOwnerField(),2,3
org.apache.openjpa.util.AbstractLRSProxyCollection.getChangeTracker(),2,4
org.apache.openjpa.util.AbstractLRSProxyCollection.copy(Object),8,11
org.apache.openjpa.util.AbstractLRSProxyCollection.add(Object),8,10
org.apache.openjpa.util.AbstractLRSProxyCollection.addAll(Collection),11,23
org.apache.openjpa.util.AbstractLRSProxyCollection.remove(Object),6,8
org.apache.openjpa.util.AbstractLRSProxyCollection.removeAll(Collection),9,22
org.apache.openjpa.util.AbstractLRSProxyCollection.retainAll(Collection),12,26
org.apache.openjpa.util.AbstractLRSProxyCollection.clear(),8,18
org.apache.openjpa.util.AbstractLRSProxyCollection.contains(Object),7,11
org.apache.openjpa.util.AbstractLRSProxyCollection.containsAll(Collection),4,8
org.apache.openjpa.util.AbstractLRSProxyCollection.toArray(),3,4
org.apache.openjpa.util.AbstractLRSProxyCollection.toArray(Object[]),3,5
org.apache.openjpa.util.AbstractLRSProxyCollection.asList(),6,17
org.apache.openjpa.util.AbstractLRSProxyCollection.size(),7,14
org.apache.openjpa.util.AbstractLRSProxyCollection.isEmpty(),2,2
org.apache.openjpa.util.AbstractLRSProxyCollection.iterator(),15,30
org.apache.openjpa.util.AbstractLRSProxyCollection.isIterated(),10,11
org.apache.openjpa.util.AbstractLRSProxyCollection.setIterated(boolean),11,12
org.apache.openjpa.util.AbstractLRSProxyCollection.writeReplace(),6,7
org.apache.openjpa.util.AbstractLRSProxyCollection.itr(),19,26
org.apache.openjpa.util.AbstractLRSProxyCollection.has(Object),4,4
org.apache.openjpa.util.AbstractLRSProxyCollection.count(),7,7
org.apache.openjpa.util.AbstractLRSProxyCollection.evaluate(Object),4,4
org.apache.openjpa.util.AbstractLRSProxyCollection.isTracking(),1,2
org.apache.openjpa.util.AbstractLRSProxyCollection.startTracking(),3,5
org.apache.openjpa.util.AbstractLRSProxyCollection.stopTracking(),3,5
org.apache.openjpa.util.AbstractLRSProxyCollection.reset(),5,6
org.apache.openjpa.util.AbstractLRSProxyCollection.getAdded(),2,3
org.apache.openjpa.util.AbstractLRSProxyCollection.getRemoved(),2,3
org.apache.openjpa.util.AbstractLRSProxyCollection.getChanged(),2,3
org.apache.openjpa.util.AbstractLRSProxyCollection.added(Object),3,5
org.apache.openjpa.util.AbstractLRSProxyCollection.removed(Object),3,5
org.apache.openjpa.util.AbstractLRSProxyCollection.getNextSequence(),1,2
org.apache.openjpa.util.AbstractLRSProxyCollection.setNextSequence(int),3,6
org.apache.openjpa.util.AbstractLRSProxyCollection.Itr.Itr(IteratorChain),3,6
org.apache.openjpa.util.AbstractLRSProxyCollection.Itr.hasNext(),7,7
org.apache.openjpa.util.AbstractLRSProxyCollection.Itr.next(),4,4
org.apache.openjpa.util.AbstractLRSProxyCollection.Itr.remove(),10,15
org.apache.openjpa.util.AbstractLRSProxyCollection.Itr.close(),3,3
org.apache.openjpa.util.AbstractLRSProxyCollection.Itr.free(),11,24
org.apache.openjpa.util.AbstractLRSProxyCollection.Itr.finalize(),2,2
embeddables.Main.main(String[]),16,25
embeddables.Main.runQueries(EntityManager),29,100
embeddables.Main.init(EntityManager),31,55
org.apache.openjpa.ant.ApplicationIdToolTask.ApplicationIdToolTask(),7,8
org.apache.openjpa.ant.ApplicationIdToolTask.setDirectory(String),8,14
org.apache.openjpa.ant.ApplicationIdToolTask.setIgnoreErrors(boolean),4,13
org.apache.openjpa.ant.ApplicationIdToolTask.setName(String),9,14
org.apache.openjpa.ant.ApplicationIdToolTask.setSuffix(String),10,15
org.apache.openjpa.ant.ApplicationIdToolTask.setToken(String),10,15
org.apache.openjpa.ant.ApplicationIdToolTask.createCodeFormat(),7,11
org.apache.openjpa.ant.ApplicationIdToolTask.newConfiguration(),3,6
org.apache.openjpa.ant.ApplicationIdToolTask.executeOn(String[]),16,24
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getTableName(),8,12
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getTableIdentifier(),3,8
org.apache.openjpa.jdbc.meta.FieldMappingInfo.setTableName(String),9,19
org.apache.openjpa.jdbc.meta.FieldMappingInfo.setTableIdentifier(DBIdentifier),4,10
org.apache.openjpa.jdbc.meta.FieldMappingInfo.isJoinOuter(),5,9
org.apache.openjpa.jdbc.meta.FieldMappingInfo.setJoinOuter(boolean),6,12
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getOrderColumn(),4,6
org.apache.openjpa.jdbc.meta.FieldMappingInfo.setOrderColumn(Column),5,7
org.apache.openjpa.jdbc.meta.FieldMappingInfo.canOrderColumn(),2,3
org.apache.openjpa.jdbc.meta.FieldMappingInfo.setCanOrderColumn(boolean),3,4
"org.apache.openjpa.jdbc.meta.FieldMappingInfo.getTable(FieldMapping,boolean,boolean)",19,69
"org.apache.openjpa.jdbc.meta.FieldMappingInfo.getTable(FieldMapping,boolean,boolean).$1.get(Schema)",13,20
"org.apache.openjpa.jdbc.meta.FieldMappingInfo.getTable(FieldMapping,boolean,boolean).$1.getIdentifier(Schema)",12,18
"org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoinForeignKey(FieldMapping,Table,boolean)",16,28
"org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoin(FieldMapping,Table,boolean)",16,31
"org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoin(FieldMapping,Table,boolean,List<Column>)",23,70
"org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoin(FieldMapping,Table,boolean,List<Column>).$2.get(Table,Table,boolean)",10,18
"org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoin(FieldMapping,Table,boolean,List<Column>).$2.populate(Table,Table,Column,Object,boolean,int,int)",16,27
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getDefiningMapping(FieldMapping),9,33
"org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoinUnique(FieldMapping,boolean,boolean)",16,40
org.apache.openjpa.jdbc.meta.FieldMappingInfo.addJoinTableUnique(Unique),8,23
"org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoinTableUniques(FieldMapping,boolean,boolean)",11,21
"org.apache.openjpa.jdbc.meta.FieldMappingInfo.getUniques(FieldMapping,List<Unique>,boolean,boolean)",21,79
"org.apache.openjpa.jdbc.meta.FieldMappingInfo.getJoinIndex(FieldMapping,boolean)",14,35
"org.apache.openjpa.jdbc.meta.FieldMappingInfo.getOrderColumn(FieldMapping,Table,boolean)",48,141
org.apache.openjpa.jdbc.meta.FieldMappingInfo.syncWith(FieldMapping),24,82
org.apache.openjpa.jdbc.meta.FieldMappingInfo.syncStrategy(FieldMapping),16,39
org.apache.openjpa.jdbc.meta.FieldMappingInfo.syncOrderColumn(FieldMapping),9,21
"org.apache.openjpa.jdbc.meta.FieldMappingInfo.syncJoinTableUniques(MetaDataContext,Unique[])",22,48
org.apache.openjpa.jdbc.meta.FieldMappingInfo.hasSchemaComponents(),6,8
org.apache.openjpa.jdbc.meta.FieldMappingInfo.clear(boolean),5,8
org.apache.openjpa.jdbc.meta.FieldMappingInfo.copy(MappingInfo),12,46
org.apache.openjpa.jdbc.meta.FieldMappingInfo.getComments(),3,6
org.apache.openjpa.jdbc.meta.FieldMappingInfo.setComments(String[]),3,6
org.apache.openjpa.integration.persistence.provider.TestPersistenceProviderResolver.setUp(),24,73
org.apache.openjpa.integration.persistence.provider.TestPersistenceProviderResolver.tearDown(),10,15
org.apache.openjpa.integration.persistence.provider.TestPersistenceProviderResolver.testDefault(),10,17
org.apache.openjpa.integration.persistence.provider.TestPersistenceProviderResolver.testDefaultMultipleJars(),36,79
org.apache.openjpa.integration.persistence.provider.TestPersistenceProviderResolver.testDefaultMultipleProviders(),35,86
org.apache.openjpa.integration.persistence.provider.TestPersistenceProviderResolver.testClearCachedProviders(),14,41
org.apache.openjpa.integration.persistence.provider.TestPersistenceProviderResolver.testNonDefaultResolver(),9,52
org.apache.openjpa.integration.persistence.provider.TestPersistenceProviderResolver.deleteTargetJars(),5,15
"org.apache.openjpa.integration.persistence.provider.TestPersistenceProviderResolver.buildFile(String,String[])",33,91
org.apache.openjpa.integration.persistence.provider.TestPersistenceProviderResolver.buildTargetJar(File),21,65
org.apache.openjpa.integration.persistence.provider.TestPersistenceProviderResolver.checkProviders(List<String>),13,49
"org.apache.openjpa.integration.persistence.provider.TestPersistenceProviderResolver.TempUrlLoader.TempUrlLoader(URL[],ClassLoader)",5,9
org.apache.openjpa.ee.ManagedRuntime.getTransactionManager(),16,22
org.apache.openjpa.ee.ManagedRuntime.setRollbackOnly(Throwable),18,28
org.apache.openjpa.ee.ManagedRuntime.getRollbackCause(),12,16
org.apache.openjpa.ee.ManagedRuntime.getTransactionKey(),9,14
org.apache.openjpa.ee.ManagedRuntime.doNonTransactionalWork(Runnable),20,32
"jpa.tools.swing.Maze.isReachable(int,int)",1,1
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.AnnotationPersistenceMetaDataSerializer(OpenJPAConfiguration),17,38
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.getConfiguration(),3,5
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.getLog(),2,5
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.setLog(Log),3,8
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.getMode(),11,14
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.setMode(int),12,17
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.setMode(int,boolean)",11,30
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.isMetaDataMode(),8,14
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.isQueryMode(),9,13
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.isMappingMode(),9,13
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.isMappingMode(ClassMetaData),21,42
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.isMappingMode(ValueMetaData),17,26
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addMetaData(ClassMetaData),12,25
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addSequenceMetaData(SequenceMetaData),19,59
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addQueryMetaData(QueryMetaData),19,59
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addAll(MetaDataRepository),12,47
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.removeMetaData(ClassMetaData),11,20
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.removeSequenceMetaData(SequenceMetaData),16,44
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.removeQueryMetaData(QueryMetaData),16,44
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.removeAll(MetaDataRepository),17,62
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.clear(),6,9
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addSystemMappingElements(Collection),8,12
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializationSort(List),11,19
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.newSerializationComparator(),6,9
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addSequenceMetaDatas(Collection),17,37
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addQueryMetaDatas(Collection),19,43
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.newAnnotationBuilder(Class<>),6,17
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addAnnotation(AnnotationBuilder,Object)",9,44
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addAnnotation(AnnotationBuilder,ClassMetaData)",14,44
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addAnnotation(AnnotationBuilder,FieldMetaData)",15,47
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addAnnotation(AnnotationBuilder,SequenceMetaData)",15,47
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addAnnotation(AnnotationBuilder,QueryMetaData)",15,47
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addAnnotation(Class<>,ClassMetaData)",13,28
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addAnnotation(Class<>,FieldMetaData)",14,29
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addAnnotation(Class<>,SequenceMetaData)",14,29
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addAnnotation(Class<>,QueryMetaData)",14,29
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serialize(Collection),18,67
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.type(Object),21,37
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeSystemMappingElement(Object),8,12
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeQuery(QueryMetaData),29,88
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeQueryHints(QueryMetaData,AnnotationBuilder)",16,44
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeSequence(SequenceMetaData),34,123
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeClass(ClassMetaData),52,221
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.getEntityAnnotationType(ClassMetaData),11,23
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.getFieldAnnotationType(FieldMetaData,PersistenceStrategy)",15,46
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.getEntityTag(ClassMetaData),15,46
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addClassMappingAnnotations(ClassMetaData),6,9
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeIdClass(ClassMetaData),14,38
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeClassMappingContent(ClassMetaData),5,9
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeInheritanceContent(ClassMetaData),6,9
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeQueryMappings(ClassMetaData),5,9
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeField(FieldMetaData,FieldMetaData)",39,187
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addFieldMappingAttributes(FieldMetaData,FieldMetaData,AnnotationBuilder)",10,18
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeAttributeOverride(FieldMetaData,FieldMetaData)",9,12
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeAttributeOverrideContent(FieldMetaData,FieldMetaData)",14,34
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeAttributeOverrideMappingContent(FieldMetaData,FieldMetaData,AnnotationBuilder)",12,20
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeCascades(ValueMetaData,AnnotationBuilder)",23,95
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.getStrategy(FieldMetaData),28,111
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addBasicAttributes(FieldMetaData,AnnotationBuilder)",15,27
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addManyToOneAttributes(FieldMetaData,AnnotationBuilder)",14,25
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addOneToOneAttributes(FieldMetaData,AnnotationBuilder)",14,25
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addOneToManyAttributes(FieldMetaData,AnnotationBuilder)",14,22
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addManyToManyAttributes(FieldMetaData,AnnotationBuilder)",14,22
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addTargetEntityAttribute(FieldMetaData,AnnotationBuilder)",24,63
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serializeFieldMappingContent(FieldMetaData,PersistenceStrategy,AnnotationBuilder)",14,23
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.addStrategyMappingAttributes(FieldMetaData,AnnotationBuilder)",13,22
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.getObjects(),18,34
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.writeAnnotations(Object,List<AnnotationBuilder>,Map)",14,25
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serialize(Map,int)",21,75
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serialize(File,int)",16,30
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serialize(Writer,int)",18,44
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.serialize(int),5,6
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassSeqs.ClassSeqs(List<SequenceMetaData>),12,25
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassSeqs.getSequences(),5,5
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassSeqs.compare(SequenceMetaData,SequenceMetaData)",6,14
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassSeqs.getSourceFile(),3,6
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassSeqs.getSourceScope(),4,6
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassSeqs.getSourceType(),3,5
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassSeqs.getResourceName(),4,6
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassSeqs.getLineNumber(),2,3
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassSeqs.getColNumber(),2,3
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassSeqs.compareTo(ClassSeqs),6,13
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassQueries.ClassQueries(List<QueryMetaData>),12,25
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassQueries.getQueries(),4,5
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassQueries.compare(QueryMetaData,QueryMetaData)",18,34
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassQueries.getSourceFile(),3,6
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassQueries.getSourceScope(),4,6
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassQueries.getSourceType(),3,5
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassQueries.getResourceName(),4,6
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassQueries.getLineNumber(),2,3
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassQueries.getColNumber(),2,3
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.ClassQueries.compareTo(ClassQueries),6,13
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.SerializationComparator.compare(Object,Object)",12,40
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.SerializationComparator.compareUnknown(Object,Object)",8,11
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.SerializationComparator.compare(ClassMetaData,ClassMetaData)",12,34
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.SerializationComparator.compare(QueryMetaData,QueryMetaData)",15,26
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.SerializationComparator.compare(SequenceMetaData,SequenceMetaData)",6,13
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.FieldComparator.compare(Object,Object)",14,61
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.FieldComparator.compareListingOrder(FieldMetaData,FieldMetaData)",8,22
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataSerializer.getClassMetaData(),7,11
openbook.domain.Customer.Customer(),1,1
openbook.domain.Customer.getId(),0,0
openbook.domain.Customer.getName(),2,3
openbook.domain.Customer.setName(String),3,6
openbook.domain.Customer.getEmail(),2,3
openbook.domain.Customer.setEmail(String),3,6
openbook.domain.Customer.newCart(),5,10
openbook.domain.Customer.toString(),2,3
openbook.domain.Customer.getVersion(),1,2
openbook.util.Randomizer.probability(double),3,4
openbook.util.Randomizer.random(int),5,6
"openbook.util.Randomizer.random(int,int)",9,13
"openbook.util.Randomizer.random(double,double)",4,7
openbook.util.Randomizer.randomString(int),15,31
openbook.util.Randomizer.selectRandom(List<T>),7,18
"openbook.util.Randomizer.selectRandom(List<T>,int)",18,47
org.apache.openjpa.persistence.criteria.BindableParameter.setValue(Object),3,4
org.apache.openjpa.persistence.criteria.BindableParameter.value(),2,2
org.apache.openjpa.trader.service.MockTradingService.MockTradingService(),12,20
"org.apache.openjpa.trader.service.MockTradingService.ask(Trader,Stock,int,double)",8,14
"org.apache.openjpa.trader.service.MockTradingService.bid(Trader,Stock,int,double)",10,23
org.apache.openjpa.trader.service.MockTradingService.getLog(),10,22
org.apache.openjpa.trader.service.MockTradingService.getStock(String),6,12
org.apache.openjpa.trader.service.MockTradingService.getStocks(),8,16
"org.apache.openjpa.trader.service.MockTradingService.getTrades(Timestamp,Timestamp)",4,5
"org.apache.openjpa.trader.service.MockTradingService.getTrades(Trader,Boolean,Timestamp,Timestamp)",7,9
org.apache.openjpa.trader.service.MockTradingService.login(String),7,14
org.apache.openjpa.trader.service.MockTradingService.matchAsk(Ask),8,19
org.apache.openjpa.trader.service.MockTradingService.matchBid(Bid),7,19
org.apache.openjpa.trader.service.MockTradingService.refresh(Tradable),2,3
org.apache.openjpa.trader.service.MockTradingService.trade(Match),3,11
"org.apache.openjpa.trader.service.MockTradingService.matches(Ask,Bid)",9,19
org.apache.openjpa.trader.service.MockTradingService.log(String),13,15
org.apache.openjpa.trader.service.MockTradingService.withdraw(Tradable),3,4
org.apache.openjpa.trader.service.MockTradingService.close(),1,1
org.apache.openjpa.trader.service.MockTradingService.getServiceURI(),4,4
org.apache.openjpa.jdbc.meta.ClassStrategy.setClassMapping(ClassMapping),6,9
org.apache.openjpa.jdbc.meta.ClassStrategy.isPrimaryKeyObjectId(boolean),32,75
"org.apache.openjpa.jdbc.meta.ClassStrategy.joinSuperclass(Joins,boolean)",8,18
"org.apache.openjpa.jdbc.meta.ClassStrategy.supportsEagerSelect(Select,OpenJPAStateManager,JDBCStore,ClassMapping,JDBCFetchConfiguration)",18,27
"org.apache.openjpa.jdbc.meta.ClassStrategy.customLoad(JDBCStore,boolean,JDBCFetchConfiguration,long,long)",22,27
"org.apache.openjpa.jdbc.meta.ClassStrategy.customLoad(OpenJPAStateManager,JDBCStore,PCState,JDBCFetchConfiguration)",33,48
"org.apache.openjpa.jdbc.meta.ClassStrategy.customLoad(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",22,30
org.apache.openjpa.event.RemoteCommitEventManager.RemoteCommitEventManager(OpenJPAConfiguration),12,23
org.apache.openjpa.event.RemoteCommitEventManager.areRemoteEventsEnabled(),4,7
org.apache.openjpa.event.RemoteCommitEventManager.getRemoteCommitProvider(),5,12
org.apache.openjpa.event.RemoteCommitEventManager.getTransmitPersistedObjectIds(),9,11
org.apache.openjpa.event.RemoteCommitEventManager.setTransmitPersistedObjectIds(boolean),10,14
org.apache.openjpa.event.RemoteCommitEventManager.addInternalListener(RemoteCommitListener),29,43
org.apache.openjpa.event.RemoteCommitEventManager.addListener(RemoteCommitListener),9,14
org.apache.openjpa.event.RemoteCommitEventManager.close(),11,21
"org.apache.openjpa.event.RemoteCommitEventManager.fireEvent(Object,Object)",7,23
org.apache.openjpa.event.RemoteCommitEventManager.fireLocalStaleNotification(Object),17,32
org.apache.openjpa.event.RemoteCommitEventManager.afterCommit(TransactionEvent),8,18
org.apache.openjpa.event.RemoteCommitEventManager.createRemoteCommitEvent(TransactionEvent),45,159
org.apache.openjpa.event.RemoteCommitEventManager.toClassNames(Collection),11,22
org.apache.openjpa.event.RemoteCommitEventManager.beforeCommit(TransactionEvent),3,4
org.apache.openjpa.event.RemoteCommitEventManager.afterRollback(TransactionEvent),3,4
org.apache.openjpa.event.RemoteCommitEventManager.afterCommitComplete(TransactionEvent),4,5
org.apache.openjpa.event.RemoteCommitEventManager.afterRollbackComplete(TransactionEvent),4,5
org.apache.openjpa.event.RemoteCommitEventManager.afterStateTransitions(TransactionEvent),3,4
org.apache.openjpa.jdbc.meta.strats.ByteArrayValueHandler.getInstance(),5,7
"org.apache.openjpa.jdbc.meta.strats.ByteArrayValueHandler.map(ValueMapping,String,ColumnIO,boolean)",14,27
"org.apache.openjpa.jdbc.meta.strats.ByteArrayValueHandler.map(ValueMapping,DBIdentifier,ColumnIO,boolean)",15,28
"org.apache.openjpa.jdbc.meta.strats.ByteArrayValueHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)",11,16
"org.apache.openjpa.jdbc.meta.strats.ByteArrayValueHandler.toObjectValue(ValueMapping,Object)",7,13
"org.apache.openjpa.kernel.EDirtyState.initialize(StateManagerImpl,PCState)",7,8
"org.apache.openjpa.kernel.EDirtyState.beforeFlush(StateManagerImpl,boolean,OpCallbacks)",8,12
org.apache.openjpa.kernel.EDirtyState.commit(StateManagerImpl),4,4
org.apache.openjpa.kernel.EDirtyState.commitRetain(StateManagerImpl),6,6
org.apache.openjpa.kernel.EDirtyState.rollback(StateManagerImpl),4,4
org.apache.openjpa.kernel.EDirtyState.rollbackRestore(StateManagerImpl),7,9
org.apache.openjpa.kernel.EDirtyState.delete(StateManagerImpl),6,8
org.apache.openjpa.kernel.EDirtyState.nontransactional(StateManagerImpl),6,7
org.apache.openjpa.kernel.EDirtyState.release(StateManagerImpl),4,4
org.apache.openjpa.kernel.EDirtyState.afterRefresh(),2,2
org.apache.openjpa.kernel.EDirtyState.afterOptimisticRefresh(),3,3
org.apache.openjpa.kernel.EDirtyState.isTransactional(),1,1
org.apache.openjpa.kernel.EDirtyState.isPersistent(),1,1
org.apache.openjpa.kernel.EDirtyState.isDirty(),1,1
org.apache.openjpa.kernel.EDirtyState.toString(),3,4
jpa.tools.swing.ScrollingTextPane.appendText(String),18,25
jpa.tools.swing.ScrollingTextPane.main(String[]),33,54
jpa.tools.swing.ScrollingTextPane.main(String[]).$1.actionPerformed(ActionEvent),9,10
"org.apache.openjpa.jdbc.meta.strats.XMLValueHandler.map(ValueMapping,String,ColumnIO,boolean)",14,27
"org.apache.openjpa.jdbc.meta.strats.XMLValueHandler.map(ValueMapping,DBIdentifier,ColumnIO,boolean)",18,43
"org.apache.openjpa.jdbc.meta.strats.XMLValueHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)",36,65
"org.apache.openjpa.jdbc.meta.strats.XMLValueHandler.toObjectValue(ValueMapping,Object)",22,43
org.apache.openjpa.jdbc.sql.Raw.Raw(String),3,5
org.apache.openjpa.jdbc.sql.Raw.toString(),2,3
org.apache.openjpa.jdbc.meta.Joinable.getFieldIndex(),3,6
"org.apache.openjpa.jdbc.meta.Joinable.getPrimaryKeyValue(Result,Column[],ForeignKey,JDBCStore,Joins)",20,33
org.apache.openjpa.jdbc.meta.Joinable.getColumns(),4,5
"org.apache.openjpa.jdbc.meta.Joinable.getJoinValue(Object,Column,JDBCStore)",11,23
"org.apache.openjpa.jdbc.meta.Joinable.getJoinValue(OpenJPAStateManager,Column,JDBCStore)",11,20
"org.apache.openjpa.jdbc.meta.Joinable.setAutoAssignedValue(OpenJPAStateManager,JDBCStore,Column,Object)",16,21
"org.apache.openjpa.trader.client.ui.ScrollableTable<T>.ScrollableTable(String,int,int)",13,24
"org.apache.openjpa.trader.client.ui.ScrollableTable<T>.ScrollableTable(String,int,int,boolean)",17,34
"org.apache.openjpa.trader.client.ui.ScrollableTable<T>.ScrollableTable(String,String,String,boolean)",40,108
org.apache.openjpa.trader.client.ui.ScrollableTable<T>.getModel(),6,10
org.apache.openjpa.trader.client.ui.ScrollableTable<T>.setCaption(String),9,18
"org.apache.openjpa.trader.client.ui.ScrollableTable<T>.setSize(int,int)",8,13
"org.apache.openjpa.trader.client.ui.ScrollableTable<T>.setRenderer(int,GridCellRenderer<T>)",8,24
"org.apache.openjpa.trader.client.ui.ScrollableTable<T>.setColumnHeader(int,String,String)",13,30
org.apache.openjpa.trader.client.ui.ScrollableTable<T>.setStripeRows(boolean),3,7
org.apache.openjpa.trader.client.ui.ScrollableTable<T>.isStripeRows(),2,4
org.apache.openjpa.trader.client.ui.ScrollableTable<T>.insert(T),6,8
org.apache.openjpa.trader.client.ui.ScrollableTable<T>.remove(T),5,9
"org.apache.openjpa.trader.client.ui.ScrollableTable<T>.update(T,Integer[])",8,15
"org.apache.openjpa.trader.client.ui.ScrollableTable<T>.updateCell(int,int,Widget,boolean)",16,51
org.apache.openjpa.trader.client.ui.ScrollableTable<T>.getRowCount(),3,5
"org.apache.openjpa.trader.client.ui.ScrollableTable<T>.setRow(int,T,Integer[])",30,64
org.apache.openjpa.trader.client.ui.ScrollableTable<T>.findRow(T),4,7
"org.apache.openjpa.trader.client.ui.ScrollableTable<T>.containsColumn(Integer[],int)",5,8
org.apache.openjpa.trader.client.ui.ScrollableTable<T>.get(int),2,4
org.apache.openjpa.trader.client.ui.ScrollableTable<T>.scrollToBottom(),2,5
org.apache.openjpa.trader.client.ui.ScrollableTable<T>.addHelp(String),15,29
org.apache.openjpa.jdbc.meta.strats.AbstractVersionStrategy.setVersion(Version),4,6
"org.apache.openjpa.jdbc.meta.strats.AbstractVersionStrategy.select(Select,ClassMapping)",3,5
"org.apache.openjpa.jdbc.meta.strats.AbstractVersionStrategy.load(OpenJPAStateManager,JDBCStore,Result)",10,11
"org.apache.openjpa.jdbc.meta.strats.AbstractVersionStrategy.load(OpenJPAStateManager,JDBCStore,Result,Joins)",11,13
"org.apache.openjpa.jdbc.meta.strats.AbstractVersionStrategy.afterLoad(OpenJPAStateManager,JDBCStore)",5,6
"org.apache.openjpa.jdbc.meta.strats.AbstractVersionStrategy.checkVersion(OpenJPAStateManager,JDBCStore,boolean)",9,13
"org.apache.openjpa.jdbc.meta.strats.AbstractVersionStrategy.compareVersion(Object,Object)",5,7
org.apache.openjpa.jdbc.meta.strats.AbstractVersionStrategy.getBulkUpdateValues(),6,7
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.makeIdentifierValid(DBIdentifier,NameSet,int,boolean)",32,43
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.makeNameValid(String,NameSet,int,int,boolean)",33,45
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.getValidColumnIdentifier(DBIdentifier,Table,int,boolean)",15,31
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.getValidIndexIdentifier(DBIdentifier,Table,int)",15,28
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.getValidSequenceIdentifier(DBIdentifier,Schema,int)",17,28
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.getValidTableIdentifier(DBIdentifier,Schema,int)",13,25
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.getValidUniqueIdentifier(DBIdentifier,Table,int)",14,26
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.getValidForeignKeyIdentifier(DBIdentifier,Table,Table,int)",14,31
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.toDBName(DBIdentifier),9,12
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.toDBName(DBIdentifier,boolean)",12,18
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.toDBName(String),8,12
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.toDBName(String,boolean)",11,16
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.fromDBName(String,DBIdentifierType)",9,15
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.appendColumns(Column[]),10,14
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.convertSchemaCase(DBIdentifier),12,14
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.append(DBIdentifierType,DBIdentifier)",12,18
"org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.getGeneratedKeySequenceName(Column,int)",11,20
org.apache.openjpa.jdbc.identifier.DBIdentifierUtil.convertAlias(String),9,13
org.apache.openjpa.lib.util.Clearable.clear(),0,0
org.apache.openjpa.kernel.ResultShape<T>.ResultShape(Class<T>),9,11
"org.apache.openjpa.kernel.ResultShape<T>.ResultShape(Class<T>,boolean)",15,38
"org.apache.openjpa.kernel.ResultShape<T>.ResultShape(Class<T>,FillStrategy<T>)",7,13
"org.apache.openjpa.kernel.ResultShape<T>.ResultShape(Class<T>,FillStrategy<T>,boolean)",12,26
org.apache.openjpa.kernel.ResultShape<T>.getType(),5,6
org.apache.openjpa.kernel.ResultShape<T>.getStrategy(),2,4
org.apache.openjpa.kernel.ResultShape<T>.setAlias(String),5,8
org.apache.openjpa.kernel.ResultShape<T>.getAlias(),2,3
org.apache.openjpa.kernel.ResultShape<T>.getCompositeTypes(),19,36
org.apache.openjpa.kernel.ResultShape<T>.getTypes(),20,35
"org.apache.openjpa.kernel.ResultShape<T>.nest(Class<X>,FillStrategy,Class<>)",17,32
org.apache.openjpa.kernel.ResultShape<T>.nest(ResultShape<>),14,35
org.apache.openjpa.kernel.ResultShape<T>.addParent(ResultShape<>),8,16
org.apache.openjpa.kernel.ResultShape<T>.add(Class<>),9,19
org.apache.openjpa.kernel.ResultShape<T>.getChildren(),8,10
org.apache.openjpa.kernel.ResultShape<T>.isCompound(),6,6
org.apache.openjpa.kernel.ResultShape<T>.isPrimitive(),6,10
org.apache.openjpa.kernel.ResultShape<T>.isNesting(),5,8
org.apache.openjpa.kernel.ResultShape<T>.isNested(),5,6
org.apache.openjpa.kernel.ResultShape<T>.isParent(ResultShape<>),9,17
org.apache.openjpa.kernel.ResultShape<T>.assertNotPrimitive(),7,10
org.apache.openjpa.kernel.ResultShape<T>.getParents(),8,15
org.apache.openjpa.kernel.ResultShape<T>.argLength(),13,19
org.apache.openjpa.kernel.ResultShape<T>.length(),8,9
"org.apache.openjpa.kernel.ResultShape<T>.pack(Object[],Class<>[],String[])",43,120
"org.apache.openjpa.kernel.ResultShape<T>.chop(X[],int,int)",11,24
org.apache.openjpa.kernel.ResultShape<T>.toString(),16,34
org.apache.openjpa.integration.validation.DefGrpEntity.setId(int),1,1
org.apache.openjpa.integration.validation.DefGrpEntity.getId(),0,0
org.apache.openjpa.integration.validation.DefGrpEntity.setDgName(String),3,6
org.apache.openjpa.integration.validation.DefGrpEntity.getDgName(),2,3
"org.apache.openjpa.kernel.exps.GreaterThanEqualExpression.GreaterThanEqualExpression(Val,Val)",7,12
"org.apache.openjpa.kernel.exps.GreaterThanEqualExpression.compare(Object,Object)",3,6
"org.apache.openjpa.jdbc.kernel.BatchingConstraintUpdateManager.newPreparedStatementManager(JDBCStore,Connection)",12,25
"org.apache.openjpa.jdbc.kernel.BatchingConstraintUpdateManager.flush(RowManager,PreparedStatementManager,Collection)",22,59
org.apache.openjpa.kernel.exps.StringLength.StringLength(Val),7,10
org.apache.openjpa.kernel.exps.StringLength.getType(),2,3
org.apache.openjpa.kernel.exps.StringLength.setImplicitType(Class),4,6
"org.apache.openjpa.kernel.exps.StringLength.eval(Object,Object,StoreContext,Object[])",11,23
org.apache.openjpa.kernel.exps.StringLength.acceptVisit(ExpressionVisitor),7,13
"org.apache.openjpa.kernel.exps.LessThanExpression.LessThanExpression(Val,Val)",6,11
"org.apache.openjpa.kernel.exps.LessThanExpression.compare(Object,Object)",3,6
org.apache.openjpa.kernel.exps.ToUpperCase.ToUpperCase(Val),5,9
org.apache.openjpa.kernel.exps.ToUpperCase.getType(),2,2
org.apache.openjpa.kernel.exps.ToUpperCase.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.ToUpperCase.eval(Object,Object,StoreContext,Object[])",11,19
org.apache.openjpa.kernel.exps.ToUpperCase.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.integration.validation.TestConstraintViolation.setUp(),37,69
org.apache.openjpa.integration.validation.TestConstraintViolation.testPersistNormalValidation(),50,112
org.apache.openjpa.integration.validation.TestConstraintViolation.testPersistImageNullValidation(),51,143
org.apache.openjpa.integration.validation.TestConstraintViolation.testPersistEmbedCityNullValidation(),55,151
org.apache.openjpa.integration.validation.TestConstraintViolation.testRemoveEmbedCityNullValidation(),59,174
org.apache.openjpa.integration.validation.TestConstraintViolation.testFlushEmbedCityNullValidation(),64,188
org.apache.openjpa.jdbc.kernel.exps.MapKey.MapKey(Val),8,14
org.apache.openjpa.jdbc.kernel.exps.MapKey.KeyExpState.KeyExpState(ExpState),2,6
"org.apache.openjpa.jdbc.kernel.exps.MapKey.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",11,24
"org.apache.openjpa.jdbc.kernel.exps.MapKey.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",10,22
"org.apache.openjpa.jdbc.kernel.exps.MapKey.groupBy(Select,ExpContext,ExpState)",7,16
"org.apache.openjpa.jdbc.kernel.exps.MapKey.orderBy(Select,ExpContext,ExpState,boolean)",8,18
"org.apache.openjpa.jdbc.kernel.exps.MapKey.initialize(Select,ExpContext,int)",8,18
"org.apache.openjpa.jdbc.kernel.exps.MapKey.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.MapKey.load(ExpContext,ExpState,Result)",11,24
"org.apache.openjpa.jdbc.kernel.exps.MapKey.select(Select,ExpContext,ExpState,boolean)",7,13
"org.apache.openjpa.jdbc.kernel.exps.MapKey.selectColumns(Select,ExpContext,ExpState,boolean)",9,22
org.apache.openjpa.jdbc.kernel.exps.MapKey.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.MapKey.getType(),2,3
org.apache.openjpa.jdbc.kernel.exps.MapKey.setImplicitType(Class),3,4
org.apache.openjpa.jdbc.kernel.exps.MapKey.setMetaData(ClassMetaData),3,8
"org.apache.openjpa.jdbc.kernel.exps.MapKey.toDataStoreValue(Select,ExpContext,ExpState,Object)",12,26
jpa.tools.swing.MetamodelView.MetamodelView(Metamodel),21,54
jpa.tools.swing.MetamodelView.findViewByType(EntityType<>),6,27
jpa.tools.swing.MetamodelView.paint(Graphics),32,78
"jpa.tools.swing.MetamodelView.getConnectLocation(EntityTypeView<>,Attribute<>)",11,19
"jpa.tools.swing.MetamodelView.isReachable(int,int)",8,10
org.apache.openjpa.util.DelayedLinkedHashSetProxy.DelayedLinkedHashSetProxy(Collection<>),7,10
"org.apache.openjpa.util.DelayedLinkedHashSetProxy.DelayedLinkedHashSetProxy(int,float)",6,9
org.apache.openjpa.util.DelayedLinkedHashSetProxy.DelayedLinkedHashSetProxy(int),6,7
org.apache.openjpa.util.DelayedLinkedHashSetProxy.DelayedLinkedHashSetProxy(),5,5
"org.apache.openjpa.util.DelayedLinkedHashSetProxy.setOwner(OpenJPAStateManager,int)",18,45
"org.apache.openjpa.util.DelayedLinkedHashSetProxy.detaching(OpenJPAStateManager,int)",5,19
org.apache.openjpa.util.DelayedLinkedHashSetProxy.getOwner(),3,3
org.apache.openjpa.util.DelayedLinkedHashSetProxy.getOwnerField(),2,3
org.apache.openjpa.util.DelayedLinkedHashSetProxy.getChangeTracker(),2,6
org.apache.openjpa.util.DelayedLinkedHashSetProxy.setChangeTracker(CollectionChangeTracker),4,8
org.apache.openjpa.util.DelayedLinkedHashSetProxy.copy(Object),7,11
org.apache.openjpa.util.DelayedLinkedHashSetProxy.getElementType(),2,4
org.apache.openjpa.util.DelayedLinkedHashSetProxy.setElementType(Class<>),4,9
"org.apache.openjpa.util.DelayedLinkedHashSetProxy.newInstance(Class,Comparator,boolean,boolean)",15,36
org.apache.openjpa.util.DelayedLinkedHashSetProxy.clone(),10,19
org.apache.openjpa.util.DelayedLinkedHashSetProxy.add(Object),8,24
org.apache.openjpa.util.DelayedLinkedHashSetProxy.clear(),6,7
org.apache.openjpa.util.DelayedLinkedHashSetProxy.iterator(),8,17
org.apache.openjpa.util.DelayedLinkedHashSetProxy.remove(Object),9,30
org.apache.openjpa.util.DelayedLinkedHashSetProxy.removeAll(Collection),7,14
org.apache.openjpa.util.DelayedLinkedHashSetProxy.addAll(Collection),7,14
org.apache.openjpa.util.DelayedLinkedHashSetProxy.retainAll(Collection),9,17
org.apache.openjpa.util.DelayedLinkedHashSetProxy.writeReplace(),8,12
org.apache.openjpa.util.DelayedLinkedHashSetProxy.size(),5,7
org.apache.openjpa.util.DelayedLinkedHashSetProxy.isEmpty(),5,7
org.apache.openjpa.util.DelayedLinkedHashSetProxy.contains(Object),6,8
org.apache.openjpa.util.DelayedLinkedHashSetProxy.toArray(),6,8
org.apache.openjpa.util.DelayedLinkedHashSetProxy.toArray(Object[]),6,9
org.apache.openjpa.util.DelayedLinkedHashSetProxy.containsAll(Collection),6,8
org.apache.openjpa.util.DelayedLinkedHashSetProxy.toString(),5,8
org.apache.openjpa.util.DelayedLinkedHashSetProxy.equals(Object),7,12
org.apache.openjpa.util.DelayedLinkedHashSetProxy.hashCode(),6,9
org.apache.openjpa.util.DelayedLinkedHashSetProxy.getDelayedField(),5,10
org.apache.openjpa.util.DelayedLinkedHashSetProxy.getDelayedOwner(),5,6
org.apache.openjpa.util.DelayedLinkedHashSetProxy.isDirectAccess(),2,4
org.apache.openjpa.util.DelayedLinkedHashSetProxy.setDirectAccess(boolean),3,7
org.apache.openjpa.util.DelayedLinkedHashSetProxy.getBrokerFactory(),2,6
org.apache.openjpa.util.DelayedLinkedHashSetProxy.load(),4,5
org.apache.openjpa.util.DelayedLinkedHashSetProxy.getBroker(),3,12
org.apache.openjpa.util.DelayedLinkedHashSetProxy.closeBroker(),6,16
org.apache.openjpa.util.DelayedLinkedHashSetProxy.getOwnerStateManager(),3,5
org.apache.openjpa.util.DelayedLinkedHashSetProxy.isDetached(),1,2
org.apache.openjpa.util.DelayedLinkedHashSetProxy.isDelayLoad(),5,5
org.apache.openjpa.trader.client.event.ServiceEventHandler.AddTradableHandler.onTradableAdded(ServiceEvent.TradableAdded),4,7
org.apache.openjpa.trader.client.event.ServiceEventHandler.AddTradeHandler.onTradeCommitted(ServiceEvent.TradeCommitted),4,7
org.apache.openjpa.trader.client.event.ServiceEventHandler.RemoveTradableHandler.onTradableRemoved(ServiceEvent.TradableRemoved),4,7
org.apache.openjpa.trader.client.event.ServiceEventHandler.UpdateStockHandler.onStockUpdated(ServiceEvent.StockUpdated),4,7
org.apache.openjpa.persistence.query.PredicateOperand.equal(PredicateOperand),13,19
org.apache.openjpa.persistence.query.PredicateOperand.equal(Class),11,14
org.apache.openjpa.persistence.query.PredicateOperand.equal(Number),11,14
org.apache.openjpa.persistence.query.PredicateOperand.equal(String),12,16
org.apache.openjpa.persistence.query.PredicateOperand.equal(boolean),11,14
org.apache.openjpa.persistence.query.PredicateOperand.equal(Date),11,15
org.apache.openjpa.persistence.query.PredicateOperand.equal(Calendar),11,15
org.apache.openjpa.persistence.query.PredicateOperand.equal(Enum<>),9,11
org.apache.openjpa.persistence.query.PredicateOperand.notEqual(PredicateOperand),13,19
org.apache.openjpa.persistence.query.PredicateOperand.notEqual(Class),11,14
org.apache.openjpa.persistence.query.PredicateOperand.notEqual(Number),12,15
org.apache.openjpa.persistence.query.PredicateOperand.notEqual(String),12,16
org.apache.openjpa.persistence.query.PredicateOperand.notEqual(boolean),11,14
org.apache.openjpa.persistence.query.PredicateOperand.notEqual(Date),11,15
org.apache.openjpa.persistence.query.PredicateOperand.notEqual(Calendar),11,15
org.apache.openjpa.persistence.query.PredicateOperand.notEqual(Enum<>),9,11
org.apache.openjpa.persistence.query.PredicateOperand.greaterThan(PredicateOperand),10,18
org.apache.openjpa.persistence.query.PredicateOperand.greaterThan(Number),9,13
org.apache.openjpa.persistence.query.PredicateOperand.greaterThan(String),9,14
org.apache.openjpa.persistence.query.PredicateOperand.greaterThan(Date),9,14
org.apache.openjpa.persistence.query.PredicateOperand.greaterThan(Calendar),9,14
org.apache.openjpa.persistence.query.PredicateOperand.greaterEqual(PredicateOperand),11,20
org.apache.openjpa.persistence.query.PredicateOperand.greaterEqual(Number),10,15
org.apache.openjpa.persistence.query.PredicateOperand.greaterEqual(String),10,16
org.apache.openjpa.persistence.query.PredicateOperand.greaterEqual(Date),10,16
org.apache.openjpa.persistence.query.PredicateOperand.greaterEqual(Calendar),10,16
org.apache.openjpa.persistence.query.PredicateOperand.lessThan(PredicateOperand),10,18
org.apache.openjpa.persistence.query.PredicateOperand.lessThan(Number),9,13
org.apache.openjpa.persistence.query.PredicateOperand.lessThan(String),9,14
org.apache.openjpa.persistence.query.PredicateOperand.lessThan(Date),9,14
org.apache.openjpa.persistence.query.PredicateOperand.lessThan(Calendar),9,14
org.apache.openjpa.persistence.query.PredicateOperand.lessEqual(PredicateOperand),11,20
org.apache.openjpa.persistence.query.PredicateOperand.lessEqual(Number),10,15
org.apache.openjpa.persistence.query.PredicateOperand.lessEqual(String),10,16
org.apache.openjpa.persistence.query.PredicateOperand.lessEqual(Date),10,16
org.apache.openjpa.persistence.query.PredicateOperand.lessEqual(Calendar),10,16
"org.apache.openjpa.persistence.query.PredicateOperand.between(PredicateOperand,PredicateOperand)",12,29
"org.apache.openjpa.persistence.query.PredicateOperand.between(PredicateOperand,Number)",13,24
"org.apache.openjpa.persistence.query.PredicateOperand.between(Number,PredicateOperand)",13,24
"org.apache.openjpa.persistence.query.PredicateOperand.between(Number,Number)",11,19
"org.apache.openjpa.persistence.query.PredicateOperand.between(PredicateOperand,String)",13,25
"org.apache.openjpa.persistence.query.PredicateOperand.between(String,PredicateOperand)",13,25
"org.apache.openjpa.persistence.query.PredicateOperand.between(String,String)",11,21
"org.apache.openjpa.persistence.query.PredicateOperand.between(PredicateOperand,Date)",13,25
"org.apache.openjpa.persistence.query.PredicateOperand.between(Date,PredicateOperand)",13,25
"org.apache.openjpa.persistence.query.PredicateOperand.between(Date,Date)",11,21
"org.apache.openjpa.persistence.query.PredicateOperand.between(PredicateOperand,Calendar)",13,25
"org.apache.openjpa.persistence.query.PredicateOperand.between(Calendar,PredicateOperand)",13,25
"org.apache.openjpa.persistence.query.PredicateOperand.between(Calendar,Calendar)",11,21
org.apache.openjpa.persistence.query.PredicateOperand.like(PredicateOperand),8,15
"org.apache.openjpa.persistence.query.PredicateOperand.like(PredicateOperand,PredicateOperand)",9,20
"org.apache.openjpa.persistence.query.PredicateOperand.like(PredicateOperand,char)",4,5
org.apache.openjpa.persistence.query.PredicateOperand.like(String),9,14
"org.apache.openjpa.persistence.query.PredicateOperand.like(String,PredicateOperand)",10,19
"org.apache.openjpa.persistence.query.PredicateOperand.like(String,char)",10,17
org.apache.openjpa.integration.validation.ConstraintDecimal.createInvalidMin(),13,22
org.apache.openjpa.integration.validation.ConstraintDecimal.createInvalidMax(),9,17
org.apache.openjpa.integration.validation.ConstraintDecimal.createInvalidMinMax(),10,18
org.apache.openjpa.integration.validation.ConstraintDecimal.createValid(),10,16
org.apache.openjpa.integration.validation.ConstraintDecimal.ConstraintDecimal(),5,5
org.apache.openjpa.integration.validation.ConstraintDecimal.getId(),0,0
org.apache.openjpa.integration.validation.ConstraintDecimal.getMinZero(),3,5
org.apache.openjpa.integration.validation.ConstraintDecimal.setMinZero(BigDecimal),4,6
org.apache.openjpa.integration.validation.ConstraintDecimal.getMaxZero(),3,5
org.apache.openjpa.integration.validation.ConstraintDecimal.setMaxZero(BigDecimal),4,6
org.apache.openjpa.example.gallery.constraint.ImageValidator.initialize(ImageConstraint),14,21
"org.apache.openjpa.example.gallery.constraint.ImageValidator.isValid(Image,ConstraintValidatorContext)",42,117
org.apache.openjpa.lib.util.TestAbstractEventManager.TestAbstractEventManager(String),4,6
org.apache.openjpa.lib.util.TestAbstractEventManager.testReentrantAdd(),12,23
org.apache.openjpa.lib.util.TestAbstractEventManager.testReentrantRemove(),14,25
org.apache.openjpa.lib.util.TestAbstractEventManager.suite(),4,7
org.apache.openjpa.lib.util.TestAbstractEventManager.main(String[]),7,7
"org.apache.openjpa.lib.util.TestAbstractEventManager.EventManager.fireEvent(Object,Object)",4,9
org.apache.openjpa.lib.util.TestAbstractEventManager.Listener.Listener(int),2,4
org.apache.openjpa.lib.util.TestAbstractEventManager.Listener.fire(),7,12
org.apache.openjpa.util.custom.CustomProxyDefaultScopeList<E>.size(),2,3
org.apache.openjpa.util.custom.CustomProxyDefaultScopeList<E>.listIterator(int),4,9
org.apache.openjpa.util.custom.CustomProxyDefaultScopeList<E>.instance(),7,7
openbook.tools.converter.Java2HTMLConverter.main(String[]),8,9
openbook.tools.converter.Java2HTMLConverter.registerOptions(CommandProcessor),14,36
"openbook.tools.converter.Java2HTMLConverter.createRenderer(CommandProcessor,File)",30,95
"openbook.tools.converter.Java2HTMLConverter.getRelativeStylesheet(File,File)",16,53
"org.apache.openjpa.lib.log.LogOutputStream.LogOutputStream(Log,int)",6,19
org.apache.openjpa.lib.log.LogOutputStream.flush(),26,40
org.apache.openjpa.lib.log.LogOutputStream.log(String),9,29
"relations.Deity.Deity(String,Gender)",4,9
"relations.Deity.giveBirth(String,Deity,Gender)",27,88
relations.Deity.setName(String),3,6
relations.Deity.getName(),2,3
relations.Deity.setGender(Gender),2,6
relations.Deity.getGender(),1,3
relations.Deity.setMother(Deity),3,6
relations.Deity.getMother(),2,3
relations.Deity.setFather(Deity),3,6
relations.Deity.getFather(),2,3
relations.Deity.setChildren(Set<Deity>),3,7
relations.Deity.getChildren(),3,4
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.PreparedQueryCacheImpl(),16,34
"org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.register(String,Query,FetchConfiguration)",23,55
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.getMapView(),14,32
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.cache(PreparedQuery),24,56
"org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.initialize(String,Object)",10,19
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.invalidate(String),15,21
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.get(String),6,6
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.isCachable(String),8,10
"org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.markUncachable(String,Exclusion)",19,31
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.isExcluded(String),5,6
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.setExcludes(String),13,23
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.getExcludes(),6,8
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.addExclusionPattern(String),32,65
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.removeExclusionPattern(String),29,58
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.getStatistics(),4,5
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.getMatchedExclusionPattern(String),7,15
"org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.getMatchedKeys(String,Map<String,Exclusion>)",19,43
"org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.getMatchedKeys(String,Collection<String>)",14,29
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.lock(boolean),3,9
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.unlock(boolean),6,17
"org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.matches(String,String)",5,12
"org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.isHinted(FetchConfiguration,String)",9,17
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.clear(),2,2
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.setEnableStatistics(boolean),5,7
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.getEnableStatistics(),4,4
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.setConfiguration(Configuration),6,11
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.startConfiguration(),2,2
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.endConfiguration(),7,11
"org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.ExclusionPattern(boolean,String,String)",5,13
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.getPattern(),2,3
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.getReason(),2,3
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.isStrong(),1,2
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.matches(String),4,7
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.equals(Object),7,12
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.hashCode(),4,7
org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.ExclusionPattern.toString(),7,20
"org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.StrongExclusion.StrongExclusion(String,String)",5,8
"org.apache.openjpa.jdbc.kernel.PreparedQueryCacheImpl.WeakExclusion.WeakExclusion(String,String)",5,8
org.apache.openjpa.lib.util.ParseException.ParseException(),2,2
org.apache.openjpa.lib.util.ParseException.ParseException(String),4,5
org.apache.openjpa.lib.util.ParseException.ParseException(Localizer.Message),5,7
org.apache.openjpa.lib.util.ParseException.ParseException(Throwable),4,5
"org.apache.openjpa.lib.util.ParseException.ParseException(String,Throwable)",6,8
"org.apache.openjpa.lib.util.ParseException.ParseException(Localizer.Message,Throwable)",7,10
"org.apache.openjpa.meta.ClassMetaData.ClassMetaData(Class<>,MetaDataRepository)",15,25
org.apache.openjpa.meta.ClassMetaData.ClassMetaData(ValueMetaData),19,34
org.apache.openjpa.meta.ClassMetaData.getRepository(),5,7
org.apache.openjpa.meta.ClassMetaData.getEmbeddingMetaData(),10,13
org.apache.openjpa.meta.ClassMetaData.getDescribedType(),5,7
org.apache.openjpa.meta.ClassMetaData.getDescribedTypeString(),7,11
org.apache.openjpa.meta.ClassMetaData.setDescribedType(Class<>),25,45
org.apache.openjpa.meta.ClassMetaData.getEnvClassLoader(),8,15
org.apache.openjpa.meta.ClassMetaData.setEnvClassLoader(ClassLoader),9,18
org.apache.openjpa.meta.ClassMetaData.getPCSuperclass(),5,6
org.apache.openjpa.meta.ClassMetaData.setPCSuperclass(Class<>),8,9
org.apache.openjpa.meta.ClassMetaData.getPCSuperclassMetaData(),11,25
org.apache.openjpa.meta.ClassMetaData.setPCSuperclassMetaData(ClassMetaData),9,19
org.apache.openjpa.meta.ClassMetaData.isMapped(),9,11
org.apache.openjpa.meta.ClassMetaData.getMappedPCSuperclassMetaData(),6,24
org.apache.openjpa.meta.ClassMetaData.getPCSubclasses(),22,34
org.apache.openjpa.meta.ClassMetaData.getPCSubclassMetaDatas(),22,54
org.apache.openjpa.meta.ClassMetaData.getMappedPCSubclassMetaDatas(),19,61
org.apache.openjpa.meta.ClassMetaData.getIdentityType(),25,73
org.apache.openjpa.meta.ClassMetaData.setIdentityType(int),21,44
org.apache.openjpa.meta.ClassMetaData.getObjectIdType(),40,147
"org.apache.openjpa.meta.ClassMetaData.setObjectIdType(Class<>,boolean)",36,62
org.apache.openjpa.meta.ClassMetaData.isObjectIdTypeShared(),13,24
org.apache.openjpa.meta.ClassMetaData.isOpenJPAIdentity(),8,16
org.apache.openjpa.meta.ClassMetaData.getIdentityStrategy(),15,36
org.apache.openjpa.meta.ClassMetaData.setIdentityStrategy(int),11,22
org.apache.openjpa.meta.ClassMetaData.getIdentitySequenceName(),11,25
org.apache.openjpa.meta.ClassMetaData.setIdentitySequenceName(String),12,26
org.apache.openjpa.meta.ClassMetaData.getIdentitySequenceMetaData(),9,27
org.apache.openjpa.meta.ClassMetaData.getLifecycleMetaData(),6,11
org.apache.openjpa.meta.ClassMetaData.getTypeAlias(),10,20
org.apache.openjpa.meta.ClassMetaData.setTypeAlias(String),17,30
org.apache.openjpa.meta.ClassMetaData.getAccessType(),2,6
org.apache.openjpa.meta.ClassMetaData.setAccessType(int),19,59
"org.apache.openjpa.meta.ClassMetaData.mergeFieldAccess(FieldMetaData,int)",15,33
org.apache.openjpa.meta.ClassMetaData.isExplicitAccess(),8,12
org.apache.openjpa.meta.ClassMetaData.isMixedAccess(),7,12
org.apache.openjpa.meta.ClassMetaData.getRequiresExtent(),11,23
org.apache.openjpa.meta.ClassMetaData.setRequiresExtent(boolean),6,10
org.apache.openjpa.meta.ClassMetaData.isEmbeddedOnly(),8,18
org.apache.openjpa.meta.ClassMetaData.setEmbeddedOnly(boolean),5,8
org.apache.openjpa.meta.ClassMetaData.isEmbeddable(),1,2
org.apache.openjpa.meta.ClassMetaData.setEmbeddable(),2,3
org.apache.openjpa.meta.ClassMetaData.isIntercepting(),7,8
org.apache.openjpa.meta.ClassMetaData.setIntercepting(boolean),8,11
org.apache.openjpa.meta.ClassMetaData.isManagedInterface(),3,5
org.apache.openjpa.meta.ClassMetaData.setManagedInterface(boolean),17,32
org.apache.openjpa.meta.ClassMetaData.getInterfaceImpl(),3,4
org.apache.openjpa.meta.ClassMetaData.setInterfaceImpl(Class<>),4,8
org.apache.openjpa.meta.ClassMetaData.getDeclaredInterfaces(),10,15
org.apache.openjpa.meta.ClassMetaData.addDeclaredInterface(Class<>),13,21
org.apache.openjpa.meta.ClassMetaData.removeDeclaredInterface(Class<>),5,10
"org.apache.openjpa.meta.ClassMetaData.setInterfacePropertyAlias(Class<>,String,String)",20,48
"org.apache.openjpa.meta.ClassMetaData.getInterfacePropertyAlias(Class<>,String)",9,22
org.apache.openjpa.meta.ClassMetaData.getInterfaceAliasedProperties(Class<>),14,27
org.apache.openjpa.meta.ClassMetaData.getExtraFieldDataLength(),12,22
org.apache.openjpa.meta.ClassMetaData.getExtraFieldDataIndex(int),9,30
org.apache.openjpa.meta.ClassMetaData.getExtraFieldDataTable(),14,41
org.apache.openjpa.meta.ClassMetaData.isAccessibleField(String),27,53
org.apache.openjpa.meta.ClassMetaData.getProxyFields(),27,100
org.apache.openjpa.meta.ClassMetaData.getLrsFields(),14,45
org.apache.openjpa.meta.ClassMetaData.getFields(),18,74
"org.apache.openjpa.meta.ClassMetaData.replaceDefinedSuperclassFields(FieldMetaData[],int)",20,50
org.apache.openjpa.meta.ClassMetaData.getSuperclassField(FieldMetaData),14,44
org.apache.openjpa.meta.ClassMetaData.getDeclaredFields(),19,62
org.apache.openjpa.meta.ClassMetaData.getPrimaryKeyFields(),29,84
org.apache.openjpa.meta.ClassMetaData.getDefaultFetchGroupFields(),16,50
org.apache.openjpa.meta.ClassMetaData.getVersionField(),14,39
org.apache.openjpa.meta.ClassMetaData.getField(int),11,22
org.apache.openjpa.meta.ClassMetaData.getDeclaredField(int),12,27
org.apache.openjpa.meta.ClassMetaData.getField(String),16,44
org.apache.openjpa.meta.ClassMetaData.getDeclaredField(String),17,37
org.apache.openjpa.meta.ClassMetaData.getDeclaredUnmanagedFields(),20,54
"org.apache.openjpa.meta.ClassMetaData.addDeclaredField(String,Class<>)",13,29
org.apache.openjpa.meta.ClassMetaData.removeDeclaredField(FieldMetaData),11,21
org.apache.openjpa.meta.ClassMetaData.getDefinedSuperclassField(String),10,23
"org.apache.openjpa.meta.ClassMetaData.addDefinedSuperclassField(String,Class<>,Class<>)",20,54
org.apache.openjpa.meta.ClassMetaData.removeDefinedSuperclassField(FieldMetaData),15,29
org.apache.openjpa.meta.ClassMetaData.defineSuperclassFields(boolean),48,108
org.apache.openjpa.meta.ClassMetaData.resolveDefinedSuperclassFields(),28,65
org.apache.openjpa.meta.ClassMetaData.getDefinedFields(),22,68
org.apache.openjpa.meta.ClassMetaData.getFieldsInListingOrder(),30,134
org.apache.openjpa.meta.ClassMetaData.getDefinedFieldsInListingOrder(),32,100
org.apache.openjpa.meta.ClassMetaData.getDataCacheName(),24,72
org.apache.openjpa.meta.ClassMetaData.setDataCacheName(String),8,19
org.apache.openjpa.meta.ClassMetaData.getDataCacheEnabled(),14,20
org.apache.openjpa.meta.ClassMetaData.getDataCacheTimeout(),11,29
org.apache.openjpa.meta.ClassMetaData.setDataCacheTimeout(int),5,12
org.apache.openjpa.meta.ClassMetaData.getDataCache(),9,22
org.apache.openjpa.meta.ClassMetaData.isDetachable(),6,12
org.apache.openjpa.meta.ClassMetaData.setDetachable(boolean),3,7
org.apache.openjpa.meta.ClassMetaData.getDetachedState(),13,28
org.apache.openjpa.meta.ClassMetaData.setDetachedState(String),7,10
org.apache.openjpa.meta.ClassMetaData.getDetachedStateField(),16,32
org.apache.openjpa.meta.ClassMetaData.usesDetachedState(),9,18
"org.apache.openjpa.meta.ClassMetaData.usesDetachedState(String,boolean)",24,50
org.apache.openjpa.meta.ClassMetaData.clearAllFieldCache(),11,22
org.apache.openjpa.meta.ClassMetaData.clearDefinedFieldCache(),6,10
org.apache.openjpa.meta.ClassMetaData.clearFieldCache(),11,15
org.apache.openjpa.meta.ClassMetaData.clearSubclassCache(),8,11
org.apache.openjpa.meta.ClassMetaData.clearExtraFieldDataTable(),6,12
org.apache.openjpa.meta.ClassMetaData.cacheFields(),6,9
org.apache.openjpa.meta.ClassMetaData.hashCode(),2,4
org.apache.openjpa.meta.ClassMetaData.equals(Object),6,9
org.apache.openjpa.meta.ClassMetaData.compareTo(ClassMetaData),6,11
org.apache.openjpa.meta.ClassMetaData.toString(),4,5
org.apache.openjpa.meta.ClassMetaData.getResolve(),4,6
org.apache.openjpa.meta.ClassMetaData.setResolve(int),5,9
"org.apache.openjpa.meta.ClassMetaData.setResolve(int,boolean)",6,18
org.apache.openjpa.meta.ClassMetaData.resolve(int),23,91
org.apache.openjpa.meta.ClassMetaData.resolveMeta(boolean),99,304
org.apache.openjpa.meta.ClassMetaData.recursiveEmbed(ValueMetaData),12,30
org.apache.openjpa.meta.ClassMetaData.validateMeta(boolean),13,19
org.apache.openjpa.meta.ClassMetaData.resolveMapping(boolean),21,39
org.apache.openjpa.meta.ClassMetaData.validateMapping(boolean),4,6
org.apache.openjpa.meta.ClassMetaData.initializeMapping(),14,23
org.apache.openjpa.meta.ClassMetaData.validateDataCache(),19,57
org.apache.openjpa.meta.ClassMetaData.validateIdentity(),42,109
org.apache.openjpa.meta.ClassMetaData.validateAppIdClass(),49,148
org.apache.openjpa.meta.ClassMetaData.useIdClassFromParent(),23,68
org.apache.openjpa.meta.ClassMetaData.hasConcretePCSuperclass(),7,15
org.apache.openjpa.meta.ClassMetaData.validateAppIdClassMethods(Class<>),40,82
"org.apache.openjpa.meta.ClassMetaData.validateAppIdClassPKs(ClassMetaData,FieldMetaData[],Class<>)",42,137
org.apache.openjpa.meta.ClassMetaData.validateNoPKFields(),14,25
org.apache.openjpa.meta.ClassMetaData.validateAccessType(),29,84
org.apache.openjpa.meta.ClassMetaData.validateDetachable(),19,55
org.apache.openjpa.meta.ClassMetaData.getDeclaredFetchGroups(),10,20
org.apache.openjpa.meta.ClassMetaData.getCustomFetchGroups(),25,69
org.apache.openjpa.meta.ClassMetaData.getFetchGroup(String),19,45
org.apache.openjpa.meta.ClassMetaData.addDeclaredFetchGroup(String),23,45
org.apache.openjpa.meta.ClassMetaData.removeDeclaredFetchGroup(FetchGroup),7,12
org.apache.openjpa.meta.ClassMetaData.getSourceFile(),3,5
org.apache.openjpa.meta.ClassMetaData.getSourceScope(),3,3
org.apache.openjpa.meta.ClassMetaData.getSourceType(),3,4
"org.apache.openjpa.meta.ClassMetaData.setSource(File,int,String)",7,20
org.apache.openjpa.meta.ClassMetaData.getResourceName(),4,5
org.apache.openjpa.meta.ClassMetaData.getLineNumber(),2,3
org.apache.openjpa.meta.ClassMetaData.setLineNumber(int),3,8
org.apache.openjpa.meta.ClassMetaData.getColNumber(),2,3
org.apache.openjpa.meta.ClassMetaData.setColNumber(int),3,8
org.apache.openjpa.meta.ClassMetaData.getSourceMode(),5,8
org.apache.openjpa.meta.ClassMetaData.setSourceMode(int),6,11
"org.apache.openjpa.meta.ClassMetaData.setSourceMode(int,boolean)",7,20
org.apache.openjpa.meta.ClassMetaData.getListingIndex(),7,12
org.apache.openjpa.meta.ClassMetaData.setListingIndex(int),9,16
org.apache.openjpa.meta.ClassMetaData.getComments(),3,6
org.apache.openjpa.meta.ClassMetaData.setComments(String[]),3,6
org.apache.openjpa.meta.ClassMetaData.copy(ClassMetaData),65,217
"org.apache.openjpa.meta.ClassMetaData.copy(ClassMetaData,ClassMetaData)",14,35
org.apache.openjpa.meta.ClassMetaData.addExtensionKeys(Collection),9,13
org.apache.openjpa.meta.ClassMetaData.ListingOrderComparator.getInstance(),5,7
"org.apache.openjpa.meta.ClassMetaData.ListingOrderComparator.compare(FieldMetaData,FieldMetaData)",7,28
org.apache.openjpa.meta.ClassMetaData.registerForValueUpdate(String),10,19
org.apache.openjpa.meta.ClassMetaData.valueChanged(Value),9,15
org.apache.openjpa.meta.ClassMetaData.getFieldNames(),10,13
org.apache.openjpa.meta.ClassMetaData.getDeclaredFieldNames(),11,16
org.apache.openjpa.meta.ClassMetaData.toNames(FieldMetaData[]),15,29
org.apache.openjpa.meta.ClassMetaData.isAbstract(),0,0
org.apache.openjpa.meta.ClassMetaData.setAbstract(boolean),2,3
org.apache.openjpa.meta.ClassMetaData.hasAbstractPKField(),22,49
org.apache.openjpa.meta.ClassMetaData.hasPKFieldsFromAbstractClass(),28,82
org.apache.openjpa.meta.ClassMetaData.setCacheEnabled(boolean),6,11
org.apache.openjpa.meta.ClassMetaData.getCacheEnabled(),15,30
org.apache.openjpa.meta.ClassMetaData.getSourceName(),4,5
org.apache.openjpa.meta.ClassMetaData.getPkAndNonPersistentManagedFmdIndexes(),20,55
org.apache.openjpa.meta.ClassMetaData.hasInverseManagedFields(),11,26
org.apache.openjpa.meta.ClassMetaData.getMappyedByIdFields(),16,55
org.apache.openjpa.meta.ClassMetaData.getUseSchemaElement(),7,10
org.apache.openjpa.meta.ClassMetaData.setUseSchemaElement(boolean),7,14
org.apache.openjpa.persistence.EntityManagerFactoryValue.newFactory(BrokerFactory),18,45
org.apache.openjpa.persistence.EntityManagerFactoryValue.EntityManagerFactoryValue(),9,15
org.apache.openjpa.jdbc.schema.Column.Column(),2,2
"org.apache.openjpa.jdbc.schema.Column.Column(String,Table)",9,19
"org.apache.openjpa.jdbc.schema.Column.Column(DBIdentifier,Table)",6,22
org.apache.openjpa.jdbc.schema.Column.remove(),30,151
org.apache.openjpa.jdbc.schema.Column.getTable(),2,5
org.apache.openjpa.jdbc.schema.Column.getTableName(),6,10
org.apache.openjpa.jdbc.schema.Column.getTableIdentifier(),3,8
org.apache.openjpa.jdbc.schema.Column.setTableName(String),10,21
org.apache.openjpa.jdbc.schema.Column.setTableIdentifier(DBIdentifier),7,14
org.apache.openjpa.jdbc.schema.Column.resetTableName(String),9,20
org.apache.openjpa.jdbc.schema.Column.resetTableIdentifier(DBIdentifier),4,10
org.apache.openjpa.jdbc.schema.Column.getSchemaName(),6,10
org.apache.openjpa.jdbc.schema.Column.getSchemaIdentifier(),3,8
org.apache.openjpa.jdbc.schema.Column.setSchemaName(String),11,26
org.apache.openjpa.jdbc.schema.Column.setSchemaIdentifier(DBIdentifier),7,13
org.apache.openjpa.jdbc.schema.Column.getName(),5,8
org.apache.openjpa.jdbc.schema.Column.getIdentifier(),2,5
org.apache.openjpa.jdbc.schema.Column.setName(String),11,23
org.apache.openjpa.jdbc.schema.Column.setIdentifier(DBIdentifier),7,12
org.apache.openjpa.jdbc.schema.Column.getFullName(),7,11
org.apache.openjpa.jdbc.schema.Column.getFullDBIdentifier(),3,5
org.apache.openjpa.jdbc.schema.Column.getQualifiedPath(),4,13
org.apache.openjpa.jdbc.schema.Column.getType(),7,10
org.apache.openjpa.jdbc.schema.Column.setType(int),8,16
org.apache.openjpa.jdbc.schema.Column.getTypeName(),9,12
org.apache.openjpa.jdbc.schema.Column.getTypeIdentifier(),3,8
org.apache.openjpa.jdbc.schema.Column.setTypeName(String),11,20
org.apache.openjpa.jdbc.schema.Column.setTypeIdentifier(DBIdentifier),4,13
org.apache.openjpa.jdbc.schema.Column.getJavaType(),8,16
org.apache.openjpa.jdbc.schema.Column.setJavaType(int),9,19
org.apache.openjpa.jdbc.schema.Column.getSize(),2,4
org.apache.openjpa.jdbc.schema.Column.setSize(int),3,8
org.apache.openjpa.jdbc.schema.Column.getDecimalDigits(),5,7
org.apache.openjpa.jdbc.schema.Column.setDecimalDigits(int),5,10
org.apache.openjpa.jdbc.schema.Column.getDefaultString(),5,6
org.apache.openjpa.jdbc.schema.Column.setDefaultString(String),6,9
org.apache.openjpa.jdbc.schema.Column.getDefault(),25,113
org.apache.openjpa.jdbc.schema.Column.setDefault(Object),7,11
org.apache.openjpa.jdbc.schema.Column.isNotNull(),2,2
org.apache.openjpa.jdbc.schema.Column.setNotNull(boolean),2,3
org.apache.openjpa.jdbc.schema.Column.isNotNullExplicit(),3,3
org.apache.openjpa.jdbc.schema.Column.isAutoAssigned(),6,9
org.apache.openjpa.jdbc.schema.Column.setAutoAssigned(boolean),8,21
org.apache.openjpa.jdbc.schema.Column.isRelationId(),14,19
org.apache.openjpa.jdbc.schema.Column.setRelationId(boolean),16,28
org.apache.openjpa.jdbc.schema.Column.getTarget(),8,13
org.apache.openjpa.jdbc.schema.Column.getTargetIdentifier(),2,6
org.apache.openjpa.jdbc.schema.Column.setTarget(String),11,24
org.apache.openjpa.jdbc.schema.Column.setTargetIdentifier(DBIdentifier),4,11
org.apache.openjpa.jdbc.schema.Column.getTargetField(),7,10
org.apache.openjpa.jdbc.schema.Column.setTargetField(String),9,17
org.apache.openjpa.jdbc.schema.Column.getFlag(int),6,9
"org.apache.openjpa.jdbc.schema.Column.setFlag(int,boolean)",7,12
org.apache.openjpa.jdbc.schema.Column.isPrimaryKey(),5,7
org.apache.openjpa.jdbc.schema.Column.setPrimaryKey(boolean),6,9
org.apache.openjpa.jdbc.schema.Column.getIndex(),5,11
org.apache.openjpa.jdbc.schema.Column.setIndex(int),6,11
org.apache.openjpa.jdbc.schema.Column.isLob(),9,14
"org.apache.openjpa.jdbc.schema.Column.isCompatible(int,String,int,int)",40,142
org.apache.openjpa.jdbc.schema.Column.toString(),5,7
org.apache.openjpa.jdbc.schema.Column.getDescription(),12,41
org.apache.openjpa.jdbc.schema.Column.equalsColumn(Column),16,35
org.apache.openjpa.jdbc.schema.Column.copy(Column),27,101
org.apache.openjpa.jdbc.schema.Column.isXML(),3,5
org.apache.openjpa.jdbc.schema.Column.setXML(boolean),4,8
org.apache.openjpa.jdbc.schema.Column.getVersionStrategy(),2,6
org.apache.openjpa.jdbc.schema.Column.setVersionStrategy(VersionStrategy),3,9
org.apache.openjpa.jdbc.schema.Column.hasComment(),5,7
org.apache.openjpa.jdbc.schema.Column.getComment(),2,3
org.apache.openjpa.jdbc.schema.Column.setComment(String),3,6
org.apache.openjpa.jdbc.schema.Column.isImplicitRelation(),13,18
org.apache.openjpa.jdbc.schema.Column.setImplicitRelation(boolean),26,33
org.apache.openjpa.jdbc.schema.Column.isUni1MFK(),16,21
org.apache.openjpa.jdbc.schema.Column.setUni1MFK(boolean),15,24
org.apache.openjpa.jdbc.schema.Column.addConstraint(Constraint),5,8
org.apache.openjpa.jdbc.schema.Column.removeConstraint(Constraint),5,8
org.apache.openjpa.jdbc.schema.Column.hasConstraint(Class<>),6,10
org.apache.openjpa.jdbc.schema.Column.getConstraints(),6,7
org.apache.openjpa.jdbc.schema.Column.getConstraints(Class<T>),10,18
org.apache.openjpa.jdbc.schema.Column.isUniqueConstraint(),5,9
org.apache.openjpa.jdbc.schema.Column.isIndex(),5,8
org.apache.openjpa.jdbc.schema.Column.isForeignKey(),6,11
"org.apache.openjpa.persistence.NonUniqueResultException.NonUniqueResultException(String,Throwable[],Object,boolean)",10,17
org.apache.openjpa.persistence.NonUniqueResultException.getType(),2,2
org.apache.openjpa.persistence.NonUniqueResultException.getSubtype(),4,4
org.apache.openjpa.persistence.NonUniqueResultException.isFatal(),1,2
org.apache.openjpa.persistence.NonUniqueResultException.getCause(),5,6
org.apache.openjpa.persistence.NonUniqueResultException.getNestedThrowables(),5,8
org.apache.openjpa.persistence.NonUniqueResultException.getFailedObject(),2,4
org.apache.openjpa.persistence.NonUniqueResultException.toString(),2,4
org.apache.openjpa.persistence.NonUniqueResultException.printStackTrace(),5,8
org.apache.openjpa.persistence.NonUniqueResultException.printStackTrace(PrintStream),7,12
org.apache.openjpa.persistence.NonUniqueResultException.printStackTrace(PrintWriter),7,12
org.apache.openjpa.persistence.NonUniqueResultException.writeObject(ObjectOutputStream),11,22
org.apache.openjpa.persistence.NonUniqueResultException.readObject(ObjectInputStream),10,17
org.apache.openjpa.persistence.QueryResultCache.pin(Query),5,6
org.apache.openjpa.persistence.QueryResultCache.unpin(Query),5,7
org.apache.openjpa.persistence.QueryResultCache.evict(Query),4,6
org.apache.openjpa.persistence.QueryResultCache.evictAll(),2,2
org.apache.openjpa.persistence.QueryResultCache.evictAll(Class),5,6
org.apache.openjpa.persistence.QueryResultCache.getDelegate(),15,18
"org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.SimpleCaseExpression(Val,Exp[],Val)",6,15
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.getCaseOperand(),2,3
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.getExp(),1,3
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.getVal(),1,3
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.getType(),10,20
"org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.initialize(Select,ExpContext,int)",12,58
"org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.SimpleCaseExpState.SimpleCaseExpState(Joins,ExpState[])",3,6
"org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",22,73
"org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.selectColumns(Select,ExpContext,ExpState,boolean)",12,39
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.acceptVisit(ExpressionVisitor),10,23
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.getId(),2,3
"org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",15,53
"org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.newSQLBuffer(Select,ExpContext,ExpState)",14,28
"org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.load(ExpContext,ExpState,Result)",15,19
"org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.select(Select,ExpContext,ExpState,boolean)",8,14
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.setImplicitType(Class),4,6
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.setOtherPath(Value),3,3
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.getOtherPath(),2,2
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.setOtherState(ExpState),2,2
org.apache.openjpa.jdbc.kernel.exps.SimpleCaseExpression.getOtherState(),1,1
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.TestConfigurationImpl(String),4,6
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.setUp(),6,8
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.tearDown(),7,8
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.testGlobals(),36,123
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.testToProperties(),21,69
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.testPropertiesCaching(),19,70
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.testEquals(),13,76
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.testBeanAccessors(),30,86
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.testFreezing(),16,37
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.testSerialization(),22,109
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.testProductDerivationCloseCallback(),11,21
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.main(String[]),3,4
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.ConfigurationTest(),2,2
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.ConfigurationTest(boolean),9,30
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.getTestKey(),3,5
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.setTestKey(String),5,9
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.getSysKey(),3,5
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.setSysKey(String),5,9
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.getPluginKey(),3,6
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.setPluginKey(String),5,10
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.getPluginKeyInstance(),5,12
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.setPluginKey(Object),5,9
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.getObjectKey(),2,5
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.setObjectKey(Object),4,9
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.deriveObjectKey(Object),5,9
org.apache.openjpa.lib.conf.test.TestConfigurationImpl.ConfigurationTest.isInvalidProperty(String),6,8
org.apache.openjpa.util.NoResultException.NoResultException(Message),4,5
"org.apache.openjpa.util.NoResultException.NoResultException(Message,Object)",7,11
org.apache.openjpa.util.NoResultException.getSubtype(),2,2
openbook.server.QueryDecorator.decorate(Query),2,2
embeddables.Phone.Phone(),1,1
"embeddables.Phone.Phone(String,String)",3,4
embeddables.Phone.toString(),2,4
"org.apache.openjpa.jdbc.kernel.exps.Trim.Trim(Val,Val,Boolean)",6,13
org.apache.openjpa.jdbc.kernel.exps.Trim.getVal(),1,3
org.apache.openjpa.jdbc.kernel.exps.Trim.getTrimChar(),2,3
org.apache.openjpa.jdbc.kernel.exps.Trim.getWhere(),0,0
org.apache.openjpa.jdbc.kernel.exps.Trim.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.Trim.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.Trim.getType(),2,2
org.apache.openjpa.jdbc.kernel.exps.Trim.setImplicitType(Class),3,4
"org.apache.openjpa.jdbc.kernel.exps.Trim.initialize(Select,ExpContext,int)",11,26
"org.apache.openjpa.jdbc.kernel.exps.Trim.TrimExpState.TrimExpState(Joins,ExpState,ExpState)",4,10
"org.apache.openjpa.jdbc.kernel.exps.Trim.select(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.Trim.selectColumns(Select,ExpContext,ExpState,boolean)",11,27
"org.apache.openjpa.jdbc.kernel.exps.Trim.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.Trim.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.Trim.newSQLBuffer(Select,ExpContext,ExpState)",13,27
"org.apache.openjpa.jdbc.kernel.exps.Trim.load(ExpContext,ExpState,Result)",15,19
"org.apache.openjpa.jdbc.kernel.exps.Trim.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",10,28
"org.apache.openjpa.jdbc.kernel.exps.Trim.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.Trim.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",37,147
org.apache.openjpa.jdbc.kernel.exps.Trim.acceptVisit(ExpressionVisitor),8,17
org.apache.openjpa.jdbc.kernel.exps.Trim.getId(),2,3
org.apache.openjpa.jdbc.ant.SchemaToolTask.setAction(Action),9,14
org.apache.openjpa.jdbc.ant.SchemaToolTask.setIgnoreErrors(boolean),7,16
org.apache.openjpa.jdbc.ant.SchemaToolTask.setDropTables(boolean),6,15
org.apache.openjpa.jdbc.ant.SchemaToolTask.setOpenJPATables(boolean),7,15
org.apache.openjpa.jdbc.ant.SchemaToolTask.setDropSequences(boolean),6,15
org.apache.openjpa.jdbc.ant.SchemaToolTask.setSequences(boolean),6,11
org.apache.openjpa.jdbc.ant.SchemaToolTask.setPrimaryKeys(boolean),8,13
org.apache.openjpa.jdbc.ant.SchemaToolTask.setForeignKeys(boolean),8,13
org.apache.openjpa.jdbc.ant.SchemaToolTask.setIndexes(boolean),7,10
org.apache.openjpa.jdbc.ant.SchemaToolTask.setRecord(boolean),6,12
org.apache.openjpa.jdbc.ant.SchemaToolTask.setFile(String),7,12
org.apache.openjpa.jdbc.ant.SchemaToolTask.newConfiguration(),3,6
org.apache.openjpa.jdbc.ant.SchemaToolTask.executeOn(String[]),21,39
org.apache.openjpa.jdbc.ant.SchemaToolTask.Action.getValues(),5,5
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.newInstance(ConfigurationProvider),15,29
"org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.getInstance(ConfigurationProvider,ClassLoader)",24,60
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.JDBCBrokerFactory(JDBCConfiguration),11,15
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.getProperties(),19,33
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.postCreationCallback(),3,6
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.newStoreManager(),3,7
"org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.newBrokerImpl(String,String)",14,33
"org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.synchronizeMappings(ClassLoader,JDBCConfiguration)",42,86
org.apache.openjpa.jdbc.kernel.JDBCBrokerFactory.synchronizeMappings(ClassLoader),5,10
org.apache.openjpa.jdbc.kernel.exps.ConstPath.ConstPath(Const),5,8
org.apache.openjpa.jdbc.kernel.exps.ConstPath.getType(),10,25
org.apache.openjpa.jdbc.kernel.exps.ConstPath.setImplicitType(Class),5,7
"org.apache.openjpa.jdbc.kernel.exps.ConstPath.get(FieldMetaData,boolean)",6,8
org.apache.openjpa.jdbc.kernel.exps.ConstPath.getKey(),1,1
org.apache.openjpa.jdbc.kernel.exps.ConstPath.last(),11,26
org.apache.openjpa.jdbc.kernel.exps.ConstPath.getValue(Object[]),5,6
"org.apache.openjpa.jdbc.kernel.exps.ConstPath.getValue(ExpContext,ExpState)",6,9
"org.apache.openjpa.jdbc.kernel.exps.ConstPath.getSQLValue(Select,ExpContext,ExpState)",9,13
"org.apache.openjpa.jdbc.kernel.exps.ConstPath.initialize(Select,ExpContext,int)",9,14
"org.apache.openjpa.jdbc.kernel.exps.ConstPath.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",59,163
"org.apache.openjpa.jdbc.kernel.exps.ConstPath.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",15,38
org.apache.openjpa.jdbc.kernel.exps.ConstPath.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.jdbc.kernel.exps.ConstPath.ConstPathExpState.ConstPathExpState(ExpState),3,6
"org.apache.openjpa.jdbc.kernel.exps.ConstPath.get(FieldMetaData,XMLMetaData)",5,8
"org.apache.openjpa.jdbc.kernel.exps.ConstPath.get(XMLMetaData,String)",5,6
org.apache.openjpa.jdbc.kernel.exps.ConstPath.getXmlMapping(),4,5
org.apache.openjpa.jdbc.kernel.exps.ConstPath.setSchemaAlias(String),4,6
org.apache.openjpa.jdbc.kernel.exps.ConstPath.getSchemaAlias(),3,3
"org.apache.openjpa.jdbc.kernel.exps.ConstPath.setSubqueryContext(Context,String)",7,8
org.apache.openjpa.jdbc.kernel.exps.ConstPath.getCorrelationVar(),3,3
"org.apache.openjpa.persistence.jdbc.LRSSizeAlgorithm.LRSSizeAlgorithm(int,String)",8,11
org.apache.openjpa.persistence.jdbc.LRSSizeAlgorithm.toKernelConstant(),3,4
org.apache.openjpa.persistence.jdbc.LRSSizeAlgorithm.fromKernelConstant(int),11,27
org.apache.openjpa.persistence.jdbc.LRSSizeAlgorithm.convertToKernelConstant(String),7,10
org.apache.openjpa.persistence.jdbc.LRSSizeAlgorithm.convertToKernelConstant(int),18,22
org.apache.openjpa.persistence.jdbc.LRSSizeAlgorithm.toKernelConstantFromString(String),18,36
org.apache.openjpa.ee.TestWASManagedRuntime.testInterfaceAdded(),38,61
org.apache.openjpa.jdbc.sql.Joins.isEmpty(),2,2
org.apache.openjpa.jdbc.sql.Joins.isOuter(),4,6
"org.apache.openjpa.jdbc.sql.Joins.crossJoin(Table,Table)",8,13
"org.apache.openjpa.jdbc.sql.Joins.join(ForeignKey,boolean,boolean)",6,9
"org.apache.openjpa.jdbc.sql.Joins.outerJoin(ForeignKey,boolean,boolean)",7,10
"org.apache.openjpa.jdbc.sql.Joins.joinRelation(String,ForeignKey,ClassMapping,int,boolean,boolean)",15,20
"org.apache.openjpa.jdbc.sql.Joins.outerJoinRelation(String,ForeignKey,ClassMapping,int,boolean,boolean)",16,21
org.apache.openjpa.jdbc.sql.Joins.setVariable(String),8,10
org.apache.openjpa.jdbc.sql.Joins.setSubselect(String),6,8
org.apache.openjpa.jdbc.sql.Joins.setJoinContext(Context),9,17
org.apache.openjpa.jdbc.sql.Joins.setCorrelatedVariable(String),9,12
org.apache.openjpa.jdbc.sql.Joins.getCorrelatedVariable(),4,6
org.apache.openjpa.jdbc.sql.Joins.moveJoinsToParent(),5,8
org.apache.openjpa.enhance.ids.DeviceId.DeviceId(),2,2
"org.apache.openjpa.enhance.ids.DeviceId.DeviceId(int,int)",3,3
org.apache.openjpa.enhance.ids.DeviceId.DeviceId(int),2,2
org.apache.openjpa.enhance.ids.DeviceId.getId(),0,0
org.apache.openjpa.enhance.ids.DeviceId.getType(),1,2
org.apache.openjpa.enhance.ids.DeviceId.equals(Object),5,10
org.apache.openjpa.enhance.ids.DeviceId.hashCode(),3,3
"org.apache.openjpa.lib.graph.Edge.Edge(Object,Object,boolean)",10,23
"org.apache.openjpa.lib.graph.Edge.Edge(Object,Object,boolean,Object)",11,30
org.apache.openjpa.lib.graph.Edge.getFrom(),4,4
org.apache.openjpa.lib.graph.Edge.getTo(),4,4
org.apache.openjpa.lib.graph.Edge.getOther(Object),5,11
org.apache.openjpa.lib.graph.Edge.isTo(Object),11,16
org.apache.openjpa.lib.graph.Edge.isFrom(Object),11,16
org.apache.openjpa.lib.graph.Edge.isDirected(),2,4
org.apache.openjpa.lib.graph.Edge.getWeight(),2,4
org.apache.openjpa.lib.graph.Edge.setWeight(double),3,8
org.apache.openjpa.lib.graph.Edge.getUserObject(),6,10
org.apache.openjpa.lib.graph.Edge.setUserObject(Object),7,13
org.apache.openjpa.lib.graph.Edge.getType(),4,5
org.apache.openjpa.lib.graph.Edge.setType(int),5,8
org.apache.openjpa.lib.graph.Edge.getCycle(),8,13
org.apache.openjpa.lib.graph.Edge.setCycle(List<Edge>),8,16
org.apache.openjpa.lib.graph.Edge.isRemovedFromGraph(),4,7
org.apache.openjpa.lib.graph.Edge.setRemovedFromGraph(),5,9
org.apache.openjpa.lib.graph.Edge.clearTraversal(),4,5
org.apache.openjpa.lib.graph.Edge.toString(),3,7
org.apache.openjpa.persistence.HintValueConverter.convert(Object),15,27
org.apache.openjpa.persistence.HintValueConverter.canConvert(Class<>),5,7
"org.apache.openjpa.persistence.HintValueConverter.EnumToInteger.EnumToInteger(Class<>,int[])",10,19
org.apache.openjpa.persistence.HintValueConverter.EnumToInteger.convert(Object),5,6
org.apache.openjpa.persistence.HintValueConverter.EnumToInteger.canConvert(Class<>),3,4
org.apache.openjpa.persistence.HintValueConverter.OpenJPAEnumToInteger.OpenJPAEnumToInteger(OpenJPAEnum<>),3,6
org.apache.openjpa.persistence.HintValueConverter.OpenJPAEnumToInteger.convert(Object),8,19
org.apache.openjpa.persistence.HintValueConverter.OpenJPAEnumToInteger.canConvert(Class<>),6,10
org.apache.openjpa.persistence.HintValueConverter.StringToInteger.StringToInteger(),7,9
"org.apache.openjpa.persistence.HintValueConverter.StringToInteger.StringToInteger(String[],int[])",16,34
org.apache.openjpa.persistence.HintValueConverter.StringToInteger.convert(Object),19,37
org.apache.openjpa.persistence.HintValueConverter.StringToInteger.canConvert(Class<>),3,4
org.apache.openjpa.persistence.HintValueConverter.StringToBoolean.convert(Object),4,6
org.apache.openjpa.persistence.HintValueConverter.StringToBoolean.canConvert(Class<>),3,6
"org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.FilterValueImpl(Select,ExpContext,ExpState,Val)",9,17
org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.getType(),2,3
org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.length(),4,5
org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.appendTo(SQLBuffer),4,6
"org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.appendTo(SQLBuffer,int)",8,11
org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.getColumnAlias(Column),6,10
"org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.getColumnAlias(String,Table)",7,13
org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.toDataStoreValue(Object),7,13
org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.isConstant(),2,2
org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.getValue(),6,7
org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.getSQLValue(),7,9
org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.isPath(),2,3
org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.getClassMapping(),3,6
org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.getFieldMapping(),4,9
org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.getXPath(),2,8
org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.getXmlMapping(),5,9
org.apache.openjpa.jdbc.kernel.exps.FilterValueImpl.requiresCast(),4,6
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.isRemoveHungarianNotation(),3,6
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setRemoveHungarianNotation(boolean),4,13
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getBaseClassStrategy(),4,8
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setBaseClassStrategy(String),5,13
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getSubclassStrategy(),4,8
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setSubclassStrategy(String),5,13
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getVersionStrategy(),4,8
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setVersionStrategy(String),5,13
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getDiscriminatorStrategy(),5,8
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setDiscriminatorStrategy(String),6,13
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setFieldStrategies(String),17,32
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setFieldStrategy(String,String)",11,30
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getFieldStrategy(String),9,19
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getStoreEnumOrdinal(),6,9
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setStoreEnumOrdinal(boolean),7,12
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getStoreUnmappedObjectIdString(),13,17
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setStoreUnmappedObjectIdString(boolean),14,20
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getJoinForeignKeyDeleteAction(),8,15
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setJoinForeignKeyDeleteAction(int),9,20
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setJoinForeignKeyDeleteAction(String),11,24
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getForeignKeyDeleteAction(),8,13
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setForeignKeyDeleteAction(int),9,16
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setForeignKeyDeleteAction(String),11,20
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getIndexLogicalForeignKeys(),5,10
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setIndexLogicalForeignKeys(boolean),6,13
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getIndexDiscriminator(),5,8
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setIndexDiscriminator(boolean),6,13
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getIndexVersion(),5,8
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setIndexVersion(boolean),6,13
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getOrderLists(),5,7
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setOrderLists(boolean),6,10
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getAddNullIndicator(),7,10
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setAddNullIndicator(boolean),8,15
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getDeferConstraints(),3,6
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setDeferConstraints(boolean),4,9
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getDataStoreIdColumnName(),13,19
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getDataStoreIdColumnIdentifier(),5,8
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setDataStoreIdColumnName(String),14,24
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setDataStoreIdColumnIdentifier(DBIdentifier),6,9
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getVersionColumnName(),11,17
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getVersionColumnIdentifier(),5,9
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setVersionColumnName(String),13,24
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setVersionColumnIdentifier(DBIdentifier),6,11
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getDiscriminatorColumnName(),10,16
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getDiscriminatorColumnIdentifier(),5,9
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setDiscriminatorColumnName(String),12,23
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setDiscriminatorColumnIdentifier(DBIdentifier),6,11
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getOrderColumnName(),9,13
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getOrderColumnIdentifier(),3,6
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setOrderColumnName(String),10,18
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setOrderColumnIdentifier(DBIdentifier),4,7
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getNullIndicatorColumnName(),10,16
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getNullIndicatorColumnIdentifier(),5,9
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setNullIndicatorColumnName(String),12,23
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setNullIndicatorColumnIdentifier(DBIdentifier),6,11
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.defaultMissingInfo(),3,4
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setDefaultMissingInfo(boolean),4,9
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.useClassCriteria(),1,2
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setUseClassCriteria(boolean),2,5
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getStrategy(ClassMapping,boolean)",11,16
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getStrategy(Version,boolean)",12,21
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getStrategy(Discriminator,boolean)",12,22
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getStrategy(ValueMapping,Class<>,boolean)",20,38
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getDiscriminatorValue(Discriminator,boolean)",40,95
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getTableName(ClassMapping,Schema)",18,31
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getTableIdentifier(ClassMapping,Schema)",6,13
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getTableName(FieldMapping,Schema)",7,11
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getTableIdentifier(FieldMapping,Schema)",13,41
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateDataStoreIdColumns(ClassMapping,Table,Column[])",17,34
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.correctName(Table,Column)",17,48
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.removeHungarianNotation(String),7,13
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateColumns(Version,Table,Column[])",15,53
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateColumns(Discriminator,Table,Column[])",15,36
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateJoinColumn(ClassMapping,Table,Table,Column,Object,int,int)",14,18
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateJoinColumn(FieldMapping,Table,Table,Column,Object,int,int)",15,19
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateForeignKeyColumn(ValueMapping,String,Table,Table,Column,Object,boolean,int,int)",18,34
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateForeignKeyColumn(ValueMapping,DBIdentifier,Table,Table,Column,Object,boolean,int,int)",19,40
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateColumns(ValueMapping,String,Table,Column[])",10,17
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateColumns(ValueMapping,DBIdentifier,Table,Column[])",11,16
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateOrderColumns(FieldMapping,Table,Column[])",23,41
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateNullIndicatorColumns(ValueMapping,String,Table,Column[])",12,20
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.populateNullIndicatorColumns(ValueMapping,DBIdentifier,Table,Column[])",18,41
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getJoinForeignKey(ClassMapping,Table,Table)",13,29
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getJoinForeignKey(FieldMapping,Table,Table)",13,29
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getForeignKey(ValueMapping,String,Table,Table,boolean)",11,23
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getForeignKey(ValueMapping,DBIdentifier,Table,Table,boolean)",15,29
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getJoinIndex(FieldMapping,Table,Column[])",16,33
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.areAllPrimaryKeyColumns(Column[]),6,14
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getIndexName(String,Table,Column[])",9,21
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getIndexName(DBIdentifier,Table,Column[])",16,39
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getIndex(ValueMapping,String,Table,Column[])",10,17
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getIndex(ValueMapping,DBIdentifier,Table,Column[])",15,32
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getIndex(Version,Table,Column[])",10,23
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getIndex(Discriminator,Table,Column[])",10,23
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getJoinUnique(FieldMapping,Table,Column[])",7,9
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getUnique(ValueMapping,String,Table,Column[])",9,11
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getUnique(ValueMapping,DBIdentifier,Table,Column[])",8,10
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getPrimaryKeyName(ClassMapping,Table)",7,8
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.getPrimaryKeyIdentifier(ClassMapping,Table)",5,8
"org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.installPrimaryKey(FieldMapping,Table)",6,7
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.setConfiguration(Configuration),7,10
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.startConfiguration(),2,2
org.apache.openjpa.jdbc.meta.MappingDefaultsImpl.endConfiguration(),1,1
org.apache.openjpa.jdbc.meta.TestMappingToolTemporal.setUp(),4,5
org.apache.openjpa.jdbc.meta.TestMappingToolTemporal.testMappingToolTemporal(),31,148
org.apache.openjpa.ant.PCEnhancerTask.setDirectory(String),8,14
org.apache.openjpa.ant.PCEnhancerTask.setAddDefaultConstructor(boolean),8,19
org.apache.openjpa.ant.PCEnhancerTask.setEnforcePropertyRestrictions(boolean),12,22
org.apache.openjpa.ant.PCEnhancerTask.setTmpClassLoader(boolean),7,15
org.apache.openjpa.ant.PCEnhancerTask.newConfiguration(),3,6
org.apache.openjpa.ant.PCEnhancerTask.executeOn(String[]),20,35
"org.apache.openjpa.datacache.CacheStatisticsSPI.newGet(Class<>,boolean)",9,15
org.apache.openjpa.datacache.CacheStatisticsSPI.newPut(Class<>),7,9
org.apache.openjpa.datacache.CacheStatisticsSPI.enable(),3,4
org.apache.openjpa.datacache.CacheStatisticsSPI.disable(),3,4
org.apache.openjpa.persistence.access.PropertySub2.getCreateDate(),3,5
org.apache.openjpa.persistence.access.PropertySub2.setCreateDate(Date),4,8
org.apache.openjpa.persistence.access.PropertySub2.equals(Object),9,29
org.apache.openjpa.event.AbstractRemoteCommitProvider.setConfiguration(Configuration),6,11
org.apache.openjpa.event.AbstractRemoteCommitProvider.startConfiguration(),2,2
org.apache.openjpa.event.AbstractRemoteCommitProvider.endConfiguration(),1,1
org.apache.openjpa.event.AbstractRemoteCommitProvider.setRemoteCommitEventManager(RemoteCommitEventManager),6,13
org.apache.openjpa.event.AbstractRemoteCommitProvider.fireEvent(RemoteCommitEvent),17,37
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.JDBCExpressionFactory(ClassMapping),8,11
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.setBooleanLiteralAsNumeric(boolean),3,9
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.getSelectConstructor(),5,8
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.emptyExpression(),2,5
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.asExpression(Value),5,7
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.equal(Value,Value)",16,43
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.verifyTypeOperation(Value,Value,boolean)",35,96
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.notEqual(Value,Value)",8,26
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.lessThan(Value,Value)",4,9
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.greaterThan(Value,Value)",4,9
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.lessThanEqual(Value,Value)",5,11
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.greaterThanEqual(Value,Value)",5,11
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.isEmpty(Value),4,8
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.isNotEmpty(Value),4,8
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.contains(Value,Value)",21,50
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.containsKey(Value,Value)",7,20
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.containsValue(Value,Value)",6,19
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.isInstance(Value,Class)",5,10
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.and(Expression,Expression)",4,36
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.or(Expression,Expression)",2,10
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.not(Expression),6,21
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.bindVariable(Value,Value)",20,48
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.bindKeyVariable(Value,Value)",21,50
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.bindValueVariable(Value,Value)",6,12
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.startsWith(Value,Value)",4,8
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.endsWith(Value,Value)",3,6
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.notMatches(Value,Value,String,String,String)",7,14
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.matches(Value,Value,String,String,String)",18,37
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newSubquery(ClassMetaData,boolean,String)",16,26
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newPath(),2,4
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newPath(Value),6,16
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newLiteral(Object,int)",5,8
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newTypeLiteral(Object,int)",6,10
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.getThis(),3,3
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.getNull(),1,1
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.getCurrentDate(Class<T>),4,10
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.getCurrentTime(Class<T>),5,10
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.getCurrentTimestamp(Class<T>),5,10
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newParameter(Object,Class)",5,8
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newCollectionValuedParameter(Object,Class)",7,11
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newExtension(FilterListener,Value,Value)",9,19
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newAggregate(AggregateListener,Value)",7,15
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newArgumentList(Value,Value)",6,8
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newArgumentList(Value),8,14
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newUnboundVariable(String,Class)",6,9
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newBoundVariable(String,Class)",7,10
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.cast(Value,Class)",7,11
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.add(Value,Value)",4,9
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.subtract(Value,Value)",4,9
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.multiply(Value,Value)",4,9
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.divide(Value,Value)",4,9
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.mod(Value,Value)",4,9
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.abs(Value),3,7
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.indexOf(Value,Value)",3,7
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.concat(Value,Value)",3,7
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.stringLength(Value),5,9
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.trim(Value,Value,Boolean)",4,11
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.sqrt(Value),3,7
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.substring(Value,Value)",3,7
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.toUpperCase(Value),3,7
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.toLowerCase(Value),3,7
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.avg(Value),3,7
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.count(Value),3,7
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.distinct(Value),3,7
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.max(Value),3,7
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.min(Value),3,7
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.sum(Value),3,7
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.any(Value),2,5
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.all(Value),2,5
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.size(Value),3,7
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.index(Value),7,12
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.type(Value),3,7
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.mapEntry(Value,Value)",5,13
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.mapKey(Value,Value)",4,11
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.getKey(Value),4,8
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.getObjectId(Value),4,10
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.getMapValue(Value,Value)",6,17
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.getLiteralRawString(Value),13,73
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.simpleCaseExpression(Value,Expression[],Value)",11,31
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.generalCaseExpression(Expression[],Value)",9,25
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.whenCondition(Expression,Value)",8,16
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.whenScalar(Value,Value)",7,21
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.coalesceExpression(Value[]),11,21
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.nullIfExpression(Value,Value)",6,21
"org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.newFunction(String,Class<>,Value)",10,18
org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory.isVerticalType(Value),14,24
org.apache.openjpa.jdbc.kernel.exps.StringLength.StringLength(Val),6,9
org.apache.openjpa.jdbc.kernel.exps.StringLength.getType(),2,3
org.apache.openjpa.jdbc.kernel.exps.StringLength.setImplicitType(Class),4,6
"org.apache.openjpa.jdbc.kernel.exps.StringLength.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",22,53
org.apache.openjpa.jdbc.kernel.exps.StringLength.getId(),2,3
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.assertNotMappedBy(),11,18
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.setFieldMapping(FieldMapping),4,8
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.supportsSelect(Select,int,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",10,14
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.selectEagerJoin(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",11,16
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.selectEagerParallel(SelectExecutor,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",12,17
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.isEagerSelectToMany(),2,2
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.select(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",10,14
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.loadEagerParallel(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Object)",13,18
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.loadEagerJoin(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",13,16
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",11,14
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",9,12
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.toDataStoreValue(Object,JDBCStore)",6,10
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.toKeyDataStoreValue(Object,JDBCStore)",7,11
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.appendIsEmpty(SQLBuffer,Select,Joins)",7,11
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.appendIsNotEmpty(SQLBuffer,Select,Joins)",7,11
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.appendIsNull(SQLBuffer,Select,Joins)",6,10
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.appendIsNotNull(SQLBuffer,Select,Joins)",6,10
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.appendSize(SQLBuffer,Select,Joins)",7,11
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.appendIndex(SQLBuffer,Select,Joins)",7,11
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.appendType(SQLBuffer,Select,Joins)",7,11
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.join(Joins,boolean)",4,7
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.joinKey(Joins,boolean)",5,8
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.joinRelation(Joins,boolean,boolean)",6,9
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.joinKeyRelation(Joins,boolean,boolean)",7,10
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.loadProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)",12,16
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.loadKeyProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)",13,17
org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.isVersionable(),1,1
"org.apache.openjpa.jdbc.meta.strats.AbstractFieldStrategy.where(OpenJPAStateManager,JDBCStore,RowManager,Object)",10,12
org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy.getInstance(),4,6
org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy.NoneClassStrategy(),4,4
org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy.setClassMapping(ClassMapping),3,4
"org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",9,12
"org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",9,12
"org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",9,12
org.apache.openjpa.jdbc.meta.strats.NoneClassStrategy.throwFlushException(OpenJPAStateManager),18,25
org.apache.openjpa.jdbc.meta.Strategy.getAlias(),6,7
org.apache.openjpa.jdbc.meta.Strategy.map(boolean),16,25
org.apache.openjpa.jdbc.meta.Strategy.initialize(),12,12
"org.apache.openjpa.jdbc.meta.Strategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",18,23
"org.apache.openjpa.jdbc.meta.Strategy.update(OpenJPAStateManager,JDBCStore,RowManager)",14,16
"org.apache.openjpa.jdbc.meta.Strategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",22,26
"org.apache.openjpa.jdbc.meta.Strategy.isCustomInsert(OpenJPAStateManager,JDBCStore)",17,29
"org.apache.openjpa.jdbc.meta.Strategy.isCustomUpdate(OpenJPAStateManager,JDBCStore)",17,28
"org.apache.openjpa.jdbc.meta.Strategy.isCustomDelete(OpenJPAStateManager,JDBCStore)",18,28
"org.apache.openjpa.jdbc.meta.Strategy.customInsert(OpenJPAStateManager,JDBCStore)",23,29
"org.apache.openjpa.jdbc.meta.Strategy.customUpdate(OpenJPAStateManager,JDBCStore)",16,18
"org.apache.openjpa.jdbc.meta.Strategy.customDelete(OpenJPAStateManager,JDBCStore)",20,24
org.apache.openjpa.jdbc.schema.DriverDataSource.setConnectionURL(String),5,8
org.apache.openjpa.jdbc.schema.DriverDataSource.getConnectionURL(),4,5
org.apache.openjpa.jdbc.schema.DriverDataSource.setConnectionDriverName(String),5,10
org.apache.openjpa.jdbc.schema.DriverDataSource.getConnectionDriverName(),4,6
org.apache.openjpa.jdbc.schema.DriverDataSource.setConnectionUserName(String),6,11
org.apache.openjpa.jdbc.schema.DriverDataSource.getConnectionUserName(),5,7
org.apache.openjpa.jdbc.schema.DriverDataSource.setConnectionPassword(String),5,8
org.apache.openjpa.jdbc.schema.DriverDataSource.setClassLoader(ClassLoader),4,6
org.apache.openjpa.jdbc.schema.DriverDataSource.getClassLoader(),5,6
org.apache.openjpa.jdbc.schema.DriverDataSource.setConnectionFactoryProperties(Properties),7,9
org.apache.openjpa.jdbc.schema.DriverDataSource.getConnectionFactoryProperties(),5,7
org.apache.openjpa.jdbc.schema.DriverDataSource.setConnectionProperties(Properties),5,7
org.apache.openjpa.jdbc.schema.DriverDataSource.getConnectionProperties(),3,5
org.apache.openjpa.jdbc.schema.DriverDataSource.createConnectionDecorators(),7,9
org.apache.openjpa.jdbc.schema.DriverDataSource.initDBDictionary(DBDictionary),6,8
org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.getFieldMapping(),2,5
org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.getIndependentKeyMappings(boolean),6,8
org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.getIndependentValueMappings(boolean),6,9
org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.getKeyColumns(ClassMapping),11,16
org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.getValueColumns(ClassMapping),7,9
org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.getJoinForeignKey(ClassMapping),5,11
"org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.selectKey(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Joins)",19,41
"org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.loadKey(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",21,35
"org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.deriveKey(JDBCStore,Object)",17,25
"org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.deriveValue(JDBCStore,Object)",6,8
"org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.selectValue(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Joins)",15,29
"org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.loadValue(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",15,24
"org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.getResults(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,Joins[],boolean)",34,70
"org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.getResults(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,Joins[],boolean).$1.select(Select,int)",9,13
"org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.joinKeyRelation(Joins,ClassMapping)",5,9
"org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.joinKeyRelation(Joins,boolean,boolean)",22,61
"org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.joinValueRelation(Joins,ClassMapping)",7,13
org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.newLRSProxy(),3,6
"org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.add(JDBCStore,Object,Object)",9,16
org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.toCollection(Object),5,8
org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.map(boolean),14,27
"org.apache.openjpa.jdbc.meta.strats.RelationMapInverseKeyFieldStrategy.joinKey(Joins,boolean)",6,15
org.apache.openjpa.persistence.jest.PropertiesCommand.PropertiesCommand(JPAServletContext),6,7
org.apache.openjpa.persistence.jest.PropertiesCommand.getMaximumArguments(),2,2
org.apache.openjpa.persistence.jest.PropertiesCommand.process(),36,70
"org.apache.openjpa.persistence.jest.PropertiesCommand.removeBadEntries(Map<String,Object>)",12,20
org.apache.openjpa.persistence.jest.PropertiesCommand.getDefaultFormat(),2,4
org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.getKeyColumns(ClassMapping),6,6
org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.getValueColumns(ClassMapping),6,6
"org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.selectKey(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Joins)",13,21
"org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.selectValue(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Joins)",13,21
"org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.getResults(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,Joins[],boolean)",29,55
"org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.loadKey(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",20,31
"org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.loadValue(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",21,31
org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.map(boolean),33,88
org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.initialize(),12,25
"org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",13,17
"org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager,Map)",33,85
"org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",57,220
"org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.toDataStoreValue(Object,JDBCStore)",12,20
"org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.toKeyDataStoreValue(Object,JDBCStore)",12,21
"org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.joinRelation(Joins,boolean,boolean)",12,16
"org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy.joinKeyRelation(Joins,boolean,boolean)",12,17
org.apache.openjpa.kernel.TimeSeededSeq.setType(int),2,3
org.apache.openjpa.kernel.TimeSeededSeq.getIncrement(),1,2
org.apache.openjpa.kernel.TimeSeededSeq.setIncrement(int),2,5
"org.apache.openjpa.kernel.TimeSeededSeq.next(StoreContext,ClassMetaData)",7,8
"org.apache.openjpa.kernel.TimeSeededSeq.current(StoreContext,ClassMetaData)",7,8
"org.apache.openjpa.kernel.TimeSeededSeq.allocate(int,StoreContext,ClassMetaData)",7,8
org.apache.openjpa.kernel.TimeSeededSeq.close(),1,1
org.apache.openjpa.jdbc.schema.ReferenceCounter.getRefCount(),2,3
org.apache.openjpa.jdbc.schema.ReferenceCounter.ref(),2,2
org.apache.openjpa.jdbc.schema.ReferenceCounter.deref(),2,2
org.apache.openjpa.kernel.exps.Literal.getValue(),3,4
org.apache.openjpa.kernel.exps.Literal.setValue(Object),5,6
org.apache.openjpa.kernel.exps.Literal.getParseType(),4,5
org.apache.openjpa.meta.MetaDataInheritanceComparator.toClass(Object),6,8
"org.apache.openjpa.meta.MetaDataInheritanceComparator.compare(Object,Object)",14,43
org.apache.openjpa.jdbc.sql.IngresDictionary.IngresDictionary(),303,493
org.apache.openjpa.jdbc.sql.IngresDictionary.connectedConfiguration(Connection),18,27
org.apache.openjpa.jdbc.sql.IngresDictionary.isVersion9_2orLater(Connection),10,30
"org.apache.openjpa.jdbc.sql.IngresDictionary.appendSelectRange(SQLBuffer,long,long,boolean)",39,86
"org.apache.openjpa.jdbc.sql.IngresDictionary.getSequencesSQL(String,String)",7,19
"org.apache.openjpa.jdbc.sql.IngresDictionary.getSequencesSQL(DBIdentifier,DBIdentifier)",10,48
org.apache.openjpa.jdbc.sql.IngresDictionary.newSequence(ResultSet),9,21
"org.apache.openjpa.jdbc.sql.IngresDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",11,37
"org.apache.openjpa.jdbc.sql.IngresDictionary.substring(SQLBuffer,FilterValue,FilterValue,FilterValue)",15,59
org.apache.openjpa.util.NonUniqueResultException.NonUniqueResultException(Message),5,6
"org.apache.openjpa.util.NonUniqueResultException.NonUniqueResultException(Message,Object)",8,12
org.apache.openjpa.util.NonUniqueResultException.getSubtype(),3,3
"org.apache.openjpa.persistence.query.AbstractPath.AbstractPath(QueryDefinitionImpl,AbstractPath,PathOperator,Object)",8,15
org.apache.openjpa.persistence.query.AbstractPath.getOwner(),4,5
org.apache.openjpa.persistence.query.AbstractPath.getParent(),5,8
org.apache.openjpa.persistence.query.AbstractPath.getOperator(),5,8
org.apache.openjpa.persistence.query.AbstractPath.getLastSegment(),7,8
org.apache.openjpa.persistence.query.AbstractPath.avg(),4,4
org.apache.openjpa.persistence.query.AbstractPath.count(),3,4
org.apache.openjpa.persistence.query.AbstractPath.isEmpty(),3,4
org.apache.openjpa.persistence.query.AbstractPath.max(),3,4
org.apache.openjpa.persistence.query.AbstractPath.min(),3,4
org.apache.openjpa.persistence.query.AbstractPath.size(),2,4
org.apache.openjpa.persistence.query.AbstractPath.sum(),3,4
org.apache.openjpa.persistence.query.AbstractPath.type(),2,4
org.apache.openjpa.persistence.query.AbstractPath.split(),4,8
"org.apache.openjpa.persistence.query.AbstractPath._split(AbstractPath,LinkedList<AbstractPath>)",6,20
org.apache.openjpa.ee.WASManagedRuntime.getTransactionManager(),9,15
org.apache.openjpa.ee.WASManagedRuntime.WASTransaction.getStatus(),10,22
org.apache.openjpa.ee.WASManagedRuntime.WASTransaction.getTransaction(),16,25
org.apache.openjpa.ee.WASManagedRuntime.WASTransaction.registerSynchronization(Synchronization),24,43
org.apache.openjpa.ee.WASManagedRuntime.WASTransaction.getGlobalId(),17,31
org.apache.openjpa.ee.WASManagedRuntime.WASTransaction.begin(),12,16
org.apache.openjpa.ee.WASManagedRuntime.WASTransaction.commit(),15,26
org.apache.openjpa.ee.WASManagedRuntime.WASTransaction.resume(Transaction),13,21
org.apache.openjpa.ee.WASManagedRuntime.WASTransaction.rollback(),21,33
org.apache.openjpa.ee.WASManagedRuntime.WASTransaction.setRollbackOnly(),21,34
org.apache.openjpa.ee.WASManagedRuntime.WASTransaction.setTransactionTimeout(int),14,19
org.apache.openjpa.ee.WASManagedRuntime.WASTransaction.suspend(),12,15
"org.apache.openjpa.ee.WASManagedRuntime.WASTransaction.delistResource(XAResource,int)",13,21
org.apache.openjpa.ee.WASManagedRuntime.WASTransaction.enlistResource(XAResource),14,22
org.apache.openjpa.ee.WASManagedRuntime.WASSynchronization.WASSynchronization(Synchronization),2,5
"org.apache.openjpa.ee.WASManagedRuntime.WASSynchronization.afterCompletion(int,byte[],boolean)",14,27
"org.apache.openjpa.ee.WASManagedRuntime.WASSynchronization.beforeCompletion(int,byte[])",10,15
org.apache.openjpa.ee.WASManagedRuntime.setConfiguration(Configuration),11,22
org.apache.openjpa.ee.WASManagedRuntime.endConfiguration(),31,66
org.apache.openjpa.ee.WASManagedRuntime.startConfiguration(),3,5
org.apache.openjpa.ee.WASManagedRuntime.main(String[]),21,29
org.apache.openjpa.ee.WASManagedRuntime.setRollbackOnly(Throwable),10,15
org.apache.openjpa.ee.WASManagedRuntime.getRollbackCause(),7,9
org.apache.openjpa.jdbc.meta.Version.Version(ClassMapping),7,14
org.apache.openjpa.jdbc.meta.Version.getRepository(),4,6
org.apache.openjpa.jdbc.meta.Version.getMappingRepository(),2,7
org.apache.openjpa.jdbc.meta.Version.getClassMapping(),2,5
org.apache.openjpa.jdbc.meta.Version.getStrategy(),3,6
"org.apache.openjpa.jdbc.meta.Version.setStrategy(VersionStrategy,Boolean)",17,43
org.apache.openjpa.jdbc.meta.Version.getMappingInfo(),5,9
org.apache.openjpa.jdbc.meta.Version.getColumns(),4,5
org.apache.openjpa.jdbc.meta.Version.setColumns(Column[]),7,13
org.apache.openjpa.jdbc.meta.Version.getColumnIO(),5,7
org.apache.openjpa.jdbc.meta.Version.setColumnIO(ColumnIO),5,6
org.apache.openjpa.jdbc.meta.Version.getIndex(),5,7
org.apache.openjpa.jdbc.meta.Version.setIndex(Index),6,10
org.apache.openjpa.jdbc.meta.Version.refSchemaComponents(),8,12
org.apache.openjpa.jdbc.meta.Version.clearMapping(),14,19
org.apache.openjpa.jdbc.meta.Version.syncMappingInfo(),23,60
org.apache.openjpa.jdbc.meta.Version.getResolve(),3,5
org.apache.openjpa.jdbc.meta.Version.setResolve(int),4,8
"org.apache.openjpa.jdbc.meta.Version.setResolve(int,boolean)",5,17
org.apache.openjpa.jdbc.meta.Version.resolve(int),9,33
org.apache.openjpa.jdbc.meta.Version.resolveMapping(),32,71
org.apache.openjpa.jdbc.meta.Version.getAlias(),3,4
org.apache.openjpa.jdbc.meta.Version.map(boolean),3,5
org.apache.openjpa.jdbc.meta.Version.initialize(),2,3
"org.apache.openjpa.jdbc.meta.Version.insert(OpenJPAStateManager,JDBCStore,RowManager)",9,13
"org.apache.openjpa.jdbc.meta.Version.update(OpenJPAStateManager,JDBCStore,RowManager)",9,13
"org.apache.openjpa.jdbc.meta.Version.delete(OpenJPAStateManager,JDBCStore,RowManager)",9,13
"org.apache.openjpa.jdbc.meta.Version.isCustomInsert(OpenJPAStateManager,JDBCStore)",7,11
"org.apache.openjpa.jdbc.meta.Version.isCustomUpdate(OpenJPAStateManager,JDBCStore)",7,11
"org.apache.openjpa.jdbc.meta.Version.isCustomDelete(OpenJPAStateManager,JDBCStore)",7,11
"org.apache.openjpa.jdbc.meta.Version.customInsert(OpenJPAStateManager,JDBCStore)",9,13
"org.apache.openjpa.jdbc.meta.Version.customUpdate(OpenJPAStateManager,JDBCStore)",9,13
"org.apache.openjpa.jdbc.meta.Version.customDelete(OpenJPAStateManager,JDBCStore)",9,13
org.apache.openjpa.jdbc.meta.Version.setVersion(Version),4,8
"org.apache.openjpa.jdbc.meta.Version.select(Select,ClassMapping)",4,9
"org.apache.openjpa.jdbc.meta.Version.load(OpenJPAStateManager,JDBCStore,Result)",11,15
"org.apache.openjpa.jdbc.meta.Version.load(OpenJPAStateManager,JDBCStore,Result,Joins)",12,18
"org.apache.openjpa.jdbc.meta.Version.afterLoad(OpenJPAStateManager,JDBCStore)",6,9
"org.apache.openjpa.jdbc.meta.Version.checkVersion(OpenJPAStateManager,JDBCStore,boolean)",10,17
"org.apache.openjpa.jdbc.meta.Version.compareVersion(Object,Object)",4,7
org.apache.openjpa.jdbc.meta.Version.assertStrategy(),4,7
org.apache.openjpa.jdbc.meta.Version.toString(),3,4
org.apache.openjpa.jdbc.meta.Version.getBulkUpdateValues(),10,19
org.apache.openjpa.event.StoreListener.beforeStore(LifecycleEvent),5,7
org.apache.openjpa.event.StoreListener.afterStore(LifecycleEvent),4,6
org.apache.openjpa.persistence.query.PathExpression.get(String),20,37
org.apache.openjpa.persistence.query.PathExpression.type(),15,25
org.apache.openjpa.persistence.query.PathExpression.size(),14,24
org.apache.openjpa.persistence.query.PathExpression.isEmpty(),17,25
org.apache.openjpa.persistence.query.PathExpression.avg(),21,25
org.apache.openjpa.persistence.query.PathExpression.max(),21,25
org.apache.openjpa.persistence.query.PathExpression.min(),21,25
org.apache.openjpa.persistence.query.PathExpression.count(),17,19
org.apache.openjpa.persistence.query.PathExpression.sum(),2,2
org.apache.openjpa.jdbc.meta.strats.SuperclassDiscriminatorStrategy.map(boolean),16,41
org.apache.openjpa.jdbc.meta.strats.SuperclassDiscriminatorStrategy.loadSubclasses(JDBCStore),13,21
"org.apache.openjpa.jdbc.meta.strats.SuperclassDiscriminatorStrategy.getClass(JDBCStore,ClassMapping,Result)",12,19
"org.apache.openjpa.jdbc.meta.strats.SuperclassDiscriminatorStrategy.hasClassConditions(ClassMapping,boolean)",7,12
"org.apache.openjpa.jdbc.meta.strats.SuperclassDiscriminatorStrategy.getClassConditions(Select,Joins,ClassMapping,boolean)",12,20
org.apache.openjpa.jdbc.sql.HSQLDictionary.HSQLDictionary(),79,127
org.apache.openjpa.jdbc.sql.HSQLDictionary.connectedConfiguration(Connection),46,101
org.apache.openjpa.jdbc.sql.HSQLDictionary.determineHSQLDBVersion(Connection),25,71
"org.apache.openjpa.jdbc.sql.HSQLDictionary.getJDBCType(int,boolean)",10,25
org.apache.openjpa.jdbc.sql.HSQLDictionary.getPreferredType(int),9,20
org.apache.openjpa.jdbc.sql.HSQLDictionary.getAddPrimaryKeySQL(PrimaryKey),5,8
org.apache.openjpa.jdbc.sql.HSQLDictionary.getDropPrimaryKeySQL(PrimaryKey),5,8
org.apache.openjpa.jdbc.sql.HSQLDictionary.getAddColumnSQL(Column),8,18
org.apache.openjpa.jdbc.sql.HSQLDictionary.getCreateTableSQL(Table),26,87
org.apache.openjpa.jdbc.sql.HSQLDictionary.getPrimaryKeyConstraintSQL(PrimaryKey),11,19
"org.apache.openjpa.jdbc.sql.HSQLDictionary.isSystemIndex(String,Table)",8,10
"org.apache.openjpa.jdbc.sql.HSQLDictionary.isSystemIndex(DBIdentifier,Table)",8,13
"org.apache.openjpa.jdbc.sql.HSQLDictionary.getSequencesSQL(String,String)",7,19
"org.apache.openjpa.jdbc.sql.HSQLDictionary.getSequencesSQL(DBIdentifier,DBIdentifier)",13,55
"org.apache.openjpa.jdbc.sql.HSQLDictionary.toOperation(String,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,long,long,String)",15,36
"org.apache.openjpa.jdbc.sql.HSQLDictionary.getColumns(DatabaseMetaData,String,String,String,String,Connection)",15,39
"org.apache.openjpa.jdbc.sql.HSQLDictionary.getColumns(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",22,48
"org.apache.openjpa.jdbc.sql.HSQLDictionary.setDouble(PreparedStatement,int,double,Column)",17,33
"org.apache.openjpa.jdbc.sql.HSQLDictionary.setBigDecimal(PreparedStatement,int,BigDecimal,Column)",22,60
"org.apache.openjpa.jdbc.sql.HSQLDictionary.appendSelectRange(SQLBuffer,long,long,boolean)",18,48
"org.apache.openjpa.jdbc.sql.HSQLDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",10,30
org.apache.openjpa.jdbc.sql.HSQLDictionary.getPlaceholderValueString(Column),12,32
"org.apache.openjpa.jdbc.sql.HSQLDictionary.newStoreException(String,SQLException[],Object)",18,38
org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.UnenhancedCompoundPKPropertyAccess(),4,4
"org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.UnenhancedCompoundPKPropertyAccess(int,int)",4,4
org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.getId0(),0,0
org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.setId0(int),1,1
org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.getId1(),0,0
org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.setId1(int),1,1
org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.PK.PK(),0,0
"org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.PK.PK(int,int)",0,0
org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.PK.getId0(),0,0
org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.PK.setId0(int),1,1
org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.PK.getId1(),0,0
org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.PK.setId1(int),1,1
org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.PK.toString(),2,6
org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.PK.hashCode(),2,2
org.apache.openjpa.enhance.UnenhancedCompoundPKPropertyAccess.PK.equals(Object),3,7
"org.apache.openjpa.kernel.ExtentImpl<T>.ExtentImpl(Broker,Class<T>,boolean,FetchConfiguration)",19,46
org.apache.openjpa.kernel.ExtentImpl<T>.getFetchConfiguration(),2,4
org.apache.openjpa.kernel.ExtentImpl<T>.getIgnoreChanges(),2,3
org.apache.openjpa.kernel.ExtentImpl<T>.setIgnoreChanges(boolean),4,9
org.apache.openjpa.kernel.ExtentImpl<T>.list(),8,18
org.apache.openjpa.kernel.ExtentImpl<T>.iterator(),57,149
org.apache.openjpa.kernel.ExtentImpl<T>.getBroker(),1,3
org.apache.openjpa.kernel.ExtentImpl<T>.getElementType(),2,3
org.apache.openjpa.kernel.ExtentImpl<T>.hasSubclasses(),2,2
org.apache.openjpa.kernel.ExtentImpl<T>.closeAll(),13,29
org.apache.openjpa.kernel.ExtentImpl<T>.lock(),1,4
org.apache.openjpa.kernel.ExtentImpl<T>.unlock(),2,4
org.apache.openjpa.kernel.ExtentImpl<T>.CloseableIterator<T>.setRemoveOnClose(ExtentImpl<T>),6,11
org.apache.openjpa.kernel.ExtentImpl<T>.CloseableIteratorChain.hasNext(),1,1
org.apache.openjpa.kernel.ExtentImpl<T>.CloseableIteratorChain.next(),4,4
org.apache.openjpa.kernel.ExtentImpl<T>.CloseableIteratorChain.remove(),4,4
org.apache.openjpa.kernel.ExtentImpl<T>.CloseableIteratorChain.setRemoveOnClose(ExtentImpl),5,8
org.apache.openjpa.kernel.ExtentImpl<T>.CloseableIteratorChain.close(),12,21
org.apache.openjpa.kernel.ExtentImpl<T>.FilterDeletedIterator.FilterDeletedIterator(Iterator),6,8
org.apache.openjpa.kernel.ExtentImpl<T>.FilterDeletedIterator.hasNext(),1,1
org.apache.openjpa.kernel.ExtentImpl<T>.FilterDeletedIterator.next(),4,4
org.apache.openjpa.kernel.ExtentImpl<T>.FilterDeletedIterator.remove(),4,4
org.apache.openjpa.kernel.ExtentImpl<T>.FilterDeletedIterator.setRemoveOnClose(ExtentImpl),5,8
org.apache.openjpa.kernel.ExtentImpl<T>.FilterDeletedIterator.close(),10,16
org.apache.openjpa.kernel.ExtentImpl<T>.FilterDeletedIterator.evaluate(Object),5,5
org.apache.openjpa.kernel.ExtentImpl<T>.FilterNewIterator.FilterNewIterator(),7,8
org.apache.openjpa.kernel.ExtentImpl<T>.FilterNewIterator.close(),1,1
org.apache.openjpa.kernel.ExtentImpl<T>.FilterNewIterator.evaluate(Object),6,11
org.apache.openjpa.jdbc.kernel.TestJDBCStoreOptSelect.setUp(),5,6
org.apache.openjpa.jdbc.kernel.TestJDBCStoreOptSelect.test(),60,154
org.apache.openjpa.jdbc.kernel.TestJDBCStoreOptSelect.getFetchPlan(OpenJPAEntityManagerSPI),23,47
org.apache.openjpa.jdbc.kernel.TestJDBCStoreOptSelect.createData(),20,36
org.apache.openjpa.kernel.TestBrokerFactoryEventManager.testCreateEvent(),18,48
org.apache.openjpa.kernel.TestBrokerFactoryEventManager.ListenerImpl.eventFired(BrokerFactoryEvent),8,18
org.apache.openjpa.trader.domain.Match.Match(),6,6
"org.apache.openjpa.trader.domain.Match.Match(Ask,Bid)",20,42
org.apache.openjpa.trader.domain.Match.getAsk(),3,6
org.apache.openjpa.trader.domain.Match.getBid(),4,9
org.apache.openjpa.trader.domain.Match.toString(),3,4
org.apache.openjpa.conf.SeqValue.SeqValue(String),7,13
relations.Main.main(String[]),36,68
relations.Main.initFamilyTree(EntityManager),68,248
relations.Main.runQueries(EntityManager),40,126
org.apache.openjpa.integration.validation.Image.getId(),0,0
org.apache.openjpa.integration.validation.Image.setId(int),1,1
org.apache.openjpa.integration.validation.Image.getFileName(),3,5
org.apache.openjpa.integration.validation.Image.setFileName(String),4,10
org.apache.openjpa.integration.validation.Image.getLocation(),1,3
org.apache.openjpa.integration.validation.Image.setLocation(Location),2,6
org.apache.openjpa.integration.validation.Image.toString(),6,7
org.apache.openjpa.lib.log.Log4JLogFactory.newLogAdapter(String),6,12
org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.LogAdapter(Logger),4,6
org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.getDelegate(),3,3
org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.isTraceEnabled(),5,6
org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.isInfoEnabled(),4,6
org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.isWarnEnabled(),4,6
org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.isErrorEnabled(),4,6
org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.isFatalEnabled(),4,6
org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.trace(Object),4,4
"org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.trace(Object,Throwable)",5,5
org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.info(Object),3,4
"org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.info(Object,Throwable)",4,5
org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.warn(Object),3,4
"org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.warn(Object,Throwable)",4,5
org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.error(Object),3,4
"org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.error(Object,Throwable)",4,5
org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.fatal(Object),3,4
"org.apache.openjpa.lib.log.Log4JLogFactory.LogAdapter.fatal(Object,Throwable)",4,5
org.apache.openjpa.persistence.access.MixedMultEmbedEntity.setId(int),2,2
org.apache.openjpa.persistence.access.MixedMultEmbedEntity.getId(),1,1
org.apache.openjpa.persistence.access.MixedMultEmbedEntity.setName(String),3,6
org.apache.openjpa.persistence.access.MixedMultEmbedEntity.getName(),2,3
org.apache.openjpa.persistence.access.MixedMultEmbedEntity.getEmbedProp(),4,6
org.apache.openjpa.persistence.access.MixedMultEmbedEntity.setEmbedProp(EmbedPropAccess),5,7
org.apache.openjpa.persistence.access.MixedMultEmbedEntity.getEmbedField(),4,6
org.apache.openjpa.persistence.access.MixedMultEmbedEntity.setEmbedField(EmbedFieldAccess),5,7
org.apache.openjpa.persistence.access.MixedMultEmbedEntity.equals(Object),10,30
"jpa.tools.swing.FileScanner.FileScanner(String,boolean)",6,9
jpa.tools.swing.FileScanner.scan(File),9,18
"jpa.tools.swing.FileScanner.scan(File,List<File>)",12,25
org.apache.openjpa.jdbc.sql.SelectImpl.getTablePerClassMeta(),4,5
org.apache.openjpa.jdbc.sql.SelectImpl.setTablePerClassMeta(ClassMapping),5,8
org.apache.openjpa.jdbc.sql.SelectImpl.setJoinedTableClassMeta(List),6,9
org.apache.openjpa.jdbc.sql.SelectImpl.getJoinedTableClassMeta(),5,6
org.apache.openjpa.jdbc.sql.SelectImpl.setExcludedJoinedTableClassMeta(List),7,10
org.apache.openjpa.jdbc.sql.SelectImpl.getExcludedJoinedTableClassMeta(),6,7
org.apache.openjpa.jdbc.sql.SelectImpl.toAlias(int),9,19
org.apache.openjpa.jdbc.sql.SelectImpl.toOrderAlias(int),9,16
org.apache.openjpa.jdbc.sql.SelectImpl.SelectImpl(JDBCConfiguration),13,22
org.apache.openjpa.jdbc.sql.SelectImpl.setContext(Context),4,10
org.apache.openjpa.jdbc.sql.SelectImpl.ctx(),2,3
org.apache.openjpa.jdbc.sql.SelectImpl.setSchemaAlias(String),4,10
org.apache.openjpa.jdbc.sql.SelectImpl.getConfiguration(),3,4
"org.apache.openjpa.jdbc.sql.SelectImpl.toSelect(boolean,JDBCFetchConfiguration)",8,12
org.apache.openjpa.jdbc.sql.SelectImpl.getSQL(),2,3
org.apache.openjpa.jdbc.sql.SelectImpl.toSelectCount(),5,7
org.apache.openjpa.jdbc.sql.SelectImpl.getAutoDistinct(),4,5
org.apache.openjpa.jdbc.sql.SelectImpl.setAutoDistinct(boolean),6,11
org.apache.openjpa.jdbc.sql.SelectImpl.isDistinct(),4,11
org.apache.openjpa.jdbc.sql.SelectImpl.setDistinct(boolean),7,21
org.apache.openjpa.jdbc.sql.SelectImpl.isLRS(),2,3
org.apache.openjpa.jdbc.sql.SelectImpl.setLRS(boolean),3,8
org.apache.openjpa.jdbc.sql.SelectImpl.getExpectedResultCount(),13,20
"org.apache.openjpa.jdbc.sql.SelectImpl.setExpectedResultCount(int,boolean)",6,21
org.apache.openjpa.jdbc.sql.SelectImpl.getJoinSyntax(),2,4
org.apache.openjpa.jdbc.sql.SelectImpl.setJoinSyntax(int),3,9
org.apache.openjpa.jdbc.sql.SelectImpl.supportsRandomAccess(boolean),7,11
org.apache.openjpa.jdbc.sql.SelectImpl.supportsLocking(),3,5
org.apache.openjpa.jdbc.sql.SelectImpl.hasMultipleSelects(),9,19
org.apache.openjpa.jdbc.sql.SelectImpl.getCount(JDBCStore),28,69
"org.apache.openjpa.jdbc.sql.SelectImpl.execute(JDBCStore,JDBCFetchConfiguration)",12,25
"org.apache.openjpa.jdbc.sql.SelectImpl.execute(JDBCStore,JDBCFetchConfiguration,int)",11,25
"org.apache.openjpa.jdbc.sql.SelectImpl.execute(StoreContext,JDBCStore,JDBCFetchConfiguration,int)",42,117
"org.apache.openjpa.jdbc.sql.SelectImpl.addEagerResults(SelectResult,SelectImpl,JDBCStore,JDBCFetchConfiguration)",41,95
"org.apache.openjpa.jdbc.sql.SelectImpl.prepareStatement(Connection,SQLBuffer,JDBCFetchConfiguration,int,int,boolean)",19,39
"org.apache.openjpa.jdbc.sql.SelectImpl.prepareStatement(Connection,String)",14,22
"org.apache.openjpa.jdbc.sql.SelectImpl.executeQuery(Connection,PreparedStatement,SQLBuffer,boolean,JDBCStore)",20,29
"org.apache.openjpa.jdbc.sql.SelectImpl.executeQuery(Connection,PreparedStatement,String,JDBCStore,Object[],Column[])",23,31
org.apache.openjpa.jdbc.sql.SelectImpl.getCount(ResultSet),11,15
"org.apache.openjpa.jdbc.sql.SelectImpl.getEagerResult(Connection,PreparedStatement,ResultSet,JDBCStore,JDBCFetchConfiguration,boolean,SQLBuffer)",29,62
org.apache.openjpa.jdbc.sql.SelectImpl.indexOf(),1,1
org.apache.openjpa.jdbc.sql.SelectImpl.getSubselects(),5,7
org.apache.openjpa.jdbc.sql.SelectImpl.getParent(),2,3
org.apache.openjpa.jdbc.sql.SelectImpl.getSubselectPath(),4,5
"org.apache.openjpa.jdbc.sql.SelectImpl.setParent(Select,String)",33,76
org.apache.openjpa.jdbc.sql.SelectImpl.setHasSubselect(boolean),3,5
org.apache.openjpa.jdbc.sql.SelectImpl.getHasSubselect(),2,2
org.apache.openjpa.jdbc.sql.SelectImpl.getAliases(),2,3
org.apache.openjpa.jdbc.sql.SelectImpl.removeAlias(Object),5,7
org.apache.openjpa.jdbc.sql.SelectImpl.getTables(),2,3
org.apache.openjpa.jdbc.sql.SelectImpl.removeTable(Object),5,7
org.apache.openjpa.jdbc.sql.SelectImpl.getFromSelect(),1,2
org.apache.openjpa.jdbc.sql.SelectImpl.setFromSelect(Select),5,8
org.apache.openjpa.jdbc.sql.SelectImpl.hasEagerJoin(boolean),3,6
org.apache.openjpa.jdbc.sql.SelectImpl.hasJoin(boolean),4,5
org.apache.openjpa.jdbc.sql.SelectImpl.isSelected(Table),5,12
org.apache.openjpa.jdbc.sql.SelectImpl.getTableAliases(),8,9
org.apache.openjpa.jdbc.sql.SelectImpl.getSelects(),4,6
org.apache.openjpa.jdbc.sql.SelectImpl.getSelectAliases(),5,6
org.apache.openjpa.jdbc.sql.SelectImpl.getIdentifierAliases(),5,6
org.apache.openjpa.jdbc.sql.SelectImpl.getOrdering(),2,2
org.apache.openjpa.jdbc.sql.SelectImpl.getGrouping(),2,2
org.apache.openjpa.jdbc.sql.SelectImpl.getWhere(),2,2
org.apache.openjpa.jdbc.sql.SelectImpl.getHaving(),2,2
org.apache.openjpa.jdbc.sql.SelectImpl.addJoinClassConditions(),16,35
org.apache.openjpa.jdbc.sql.SelectImpl.getJoins(),1,3
org.apache.openjpa.jdbc.sql.SelectImpl.getJoinIterator(),5,13
org.apache.openjpa.jdbc.sql.SelectImpl.getStartIndex(),3,4
org.apache.openjpa.jdbc.sql.SelectImpl.getEndIndex(),2,2
"org.apache.openjpa.jdbc.sql.SelectImpl.setRange(long,long)",4,7
org.apache.openjpa.jdbc.sql.SelectImpl.getColumnAlias(Column),5,9
"org.apache.openjpa.jdbc.sql.SelectImpl.getColumnAlias(Column,Joins)",5,12
"org.apache.openjpa.jdbc.sql.SelectImpl.getColumnAlias(Column,PathJoins)",9,16
"org.apache.openjpa.jdbc.sql.SelectImpl.getColumnAlias(String,Table)",6,12
"org.apache.openjpa.jdbc.sql.SelectImpl.getColumnAlias(String,Table,Joins)",6,15
"org.apache.openjpa.jdbc.sql.SelectImpl.getColumnAlias(Column,Object)",22,71
"org.apache.openjpa.jdbc.sql.SelectImpl.getColumnAlias(String,Table,PathJoins)",12,21
"org.apache.openjpa.jdbc.sql.SelectImpl.getTableAlias(Table,PathJoins)",13,42
org.apache.openjpa.jdbc.sql.SelectImpl.isAggregate(),2,3
org.apache.openjpa.jdbc.sql.SelectImpl.setAggregate(boolean),4,8
org.apache.openjpa.jdbc.sql.SelectImpl.isLob(),2,3
org.apache.openjpa.jdbc.sql.SelectImpl.setLob(boolean),3,8
org.apache.openjpa.jdbc.sql.SelectImpl.clearSelects(),1,2
"org.apache.openjpa.jdbc.sql.SelectImpl.select(SQLBuffer,Object)",4,7
"org.apache.openjpa.jdbc.sql.SelectImpl.select(SQLBuffer,Object,Joins)",5,13
"org.apache.openjpa.jdbc.sql.SelectImpl.select(Object,Object,Joins)",13,32
org.apache.openjpa.jdbc.sql.SelectImpl.nullId(),7,10
"org.apache.openjpa.jdbc.sql.SelectImpl.select(String,Object)",4,6
"org.apache.openjpa.jdbc.sql.SelectImpl.select(String,Object,Joins)",5,12
org.apache.openjpa.jdbc.sql.SelectImpl.selectPlaceholder(String),8,15
"org.apache.openjpa.jdbc.sql.SelectImpl.insertPlaceholder(String,int)",16,27
org.apache.openjpa.jdbc.sql.SelectImpl.clearPlaceholderSelects(),7,9
org.apache.openjpa.jdbc.sql.SelectImpl.select(Column),4,6
"org.apache.openjpa.jdbc.sql.SelectImpl.select(Column,Joins)",4,11
org.apache.openjpa.jdbc.sql.SelectImpl.select(Column[]),3,5
"org.apache.openjpa.jdbc.sql.SelectImpl.select(Column[],Joins)",7,21
"org.apache.openjpa.jdbc.sql.SelectImpl.select(Column,PathJoins,boolean)",26,52
"org.apache.openjpa.jdbc.sql.SelectImpl.select(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,int)",8,18
"org.apache.openjpa.jdbc.sql.SelectImpl.select(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,int,Joins)",9,21
"org.apache.openjpa.jdbc.sql.SelectImpl.select(Select,ClassMapping,int,JDBCStore,JDBCFetchConfiguration,int,Joins,boolean)",48,130
org.apache.openjpa.jdbc.sql.SelectImpl.selectIdentifier(Column),5,8
"org.apache.openjpa.jdbc.sql.SelectImpl.selectIdentifier(Column,Joins)",5,12
org.apache.openjpa.jdbc.sql.SelectImpl.selectIdentifier(Column[]),4,7
"org.apache.openjpa.jdbc.sql.SelectImpl.selectIdentifier(Column[],Joins)",8,22
"org.apache.openjpa.jdbc.sql.SelectImpl.selectIdentifier(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,int)",9,20
"org.apache.openjpa.jdbc.sql.SelectImpl.selectIdentifier(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,int,Joins)",10,22
org.apache.openjpa.jdbc.sql.SelectImpl.selectPrimaryKey(ClassMapping),4,9
"org.apache.openjpa.jdbc.sql.SelectImpl.selectPrimaryKey(ClassMapping,Joins)",6,12
"org.apache.openjpa.jdbc.sql.SelectImpl.primaryKeyOperation(ClassMapping,boolean,Boolean,Joins,boolean)",31,122
"org.apache.openjpa.jdbc.sql.SelectImpl.columnOperation(Column,boolean,Boolean,PathJoins,boolean)",22,48
"org.apache.openjpa.jdbc.sql.SelectImpl.appendOrdering(Object,boolean)",10,23
"org.apache.openjpa.jdbc.sql.SelectImpl.orderByPrimaryKey(ClassMapping,boolean,boolean)",5,11
"org.apache.openjpa.jdbc.sql.SelectImpl.orderByPrimaryKey(ClassMapping,boolean,Joins,boolean)",6,14
"org.apache.openjpa.jdbc.sql.SelectImpl.orderByPrimaryKey(ClassMapping,boolean,Joins,boolean,boolean)",13,22
"org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(Column,boolean,boolean)",4,7
"org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(Column,boolean,Joins,boolean)",5,10
"org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(Column,boolean,Joins,boolean,boolean)",12,20
"org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(Column[],boolean,boolean)",4,7
"org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(Column[],boolean,Joins,boolean)",5,10
"org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(Column[],boolean,Joins,boolean,boolean)",15,27
"org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(SQLBuffer,boolean,boolean,Value)",6,12
"org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(SQLBuffer,boolean,Joins,boolean,Value)",6,14
"org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(SQLBuffer,boolean,Joins,boolean,boolean,Value)",13,22
"org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(Object,boolean,Joins,boolean,boolean,Value)",20,47
"org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(String,boolean,boolean)",4,7
"org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(String,boolean,Joins,boolean)",5,10
"org.apache.openjpa.jdbc.sql.SelectImpl.orderBy(String,boolean,Joins,boolean,boolean)",12,18
org.apache.openjpa.jdbc.sql.SelectImpl.clearOrdering(),0,0
org.apache.openjpa.jdbc.sql.SelectImpl.setRecordOrderedIndexes(boolean),9,16
org.apache.openjpa.jdbc.sql.SelectImpl.getOrderedIndexes(),12,19
"org.apache.openjpa.jdbc.sql.SelectImpl.wherePrimaryKey(Object,ClassMapping,JDBCStore)",7,14
"org.apache.openjpa.jdbc.sql.SelectImpl.wherePrimaryKey(Object,ClassMapping,Joins,JDBCStore)",25,71
"org.apache.openjpa.jdbc.sql.SelectImpl.whereForeignKey(ForeignKey,Object,ClassMapping,JDBCStore)",7,16
"org.apache.openjpa.jdbc.sql.SelectImpl.whereForeignKey(ForeignKey,Object,ClassMapping,Joins,JDBCStore)",33,109
"org.apache.openjpa.jdbc.sql.SelectImpl.where(Object,ClassMapping,Column[],Column[],Object[],Column[],PathJoins,JDBCStore)",47,155
"org.apache.openjpa.jdbc.sql.SelectImpl.containsAll(Column[],Column[])",13,32
org.apache.openjpa.jdbc.sql.SelectImpl.where(Joins),2,5
org.apache.openjpa.jdbc.sql.SelectImpl.where(SQLBuffer),3,5
"org.apache.openjpa.jdbc.sql.SelectImpl.where(SQLBuffer,Joins)",3,8
"org.apache.openjpa.jdbc.sql.SelectImpl.where(SQLBuffer,PathJoins)",10,19
org.apache.openjpa.jdbc.sql.SelectImpl.where(String),3,4
"org.apache.openjpa.jdbc.sql.SelectImpl.where(String,Joins)",3,7
"org.apache.openjpa.jdbc.sql.SelectImpl.where(String,PathJoins)",12,19
org.apache.openjpa.jdbc.sql.SelectImpl.having(SQLBuffer),3,5
"org.apache.openjpa.jdbc.sql.SelectImpl.having(SQLBuffer,Joins)",3,8
"org.apache.openjpa.jdbc.sql.SelectImpl.having(SQLBuffer,PathJoins)",10,19
org.apache.openjpa.jdbc.sql.SelectImpl.having(String),3,4
"org.apache.openjpa.jdbc.sql.SelectImpl.having(String,Joins)",3,7
"org.apache.openjpa.jdbc.sql.SelectImpl.having(String,PathJoins)",12,19
org.apache.openjpa.jdbc.sql.SelectImpl.groupBy(SQLBuffer),3,5
"org.apache.openjpa.jdbc.sql.SelectImpl.groupBy(SQLBuffer,Joins)",4,10
org.apache.openjpa.jdbc.sql.SelectImpl.groupBy(String),3,4
"org.apache.openjpa.jdbc.sql.SelectImpl.groupBy(String,Joins)",4,8
org.apache.openjpa.jdbc.sql.SelectImpl.groupBy(Column),2,3
"org.apache.openjpa.jdbc.sql.SelectImpl.groupBy(Column,Joins)",6,12
org.apache.openjpa.jdbc.sql.SelectImpl.groupBy(Column[]),2,3
"org.apache.openjpa.jdbc.sql.SelectImpl.groupBy(Column[],Joins)",7,14
org.apache.openjpa.jdbc.sql.SelectImpl.groupByAppend(String),9,15
"org.apache.openjpa.jdbc.sql.SelectImpl.groupBy(ClassMapping,int,JDBCStore,JDBCFetchConfiguration)",6,14
"org.apache.openjpa.jdbc.sql.SelectImpl.groupBy(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,Joins)",27,45
org.apache.openjpa.jdbc.sql.SelectImpl.isGrouping(),5,5
"org.apache.openjpa.jdbc.sql.SelectImpl.getJoins(Joins,boolean)",18,61
org.apache.openjpa.jdbc.sql.SelectImpl.whereClone(int),39,140
org.apache.openjpa.jdbc.sql.SelectImpl.fullClone(int),20,61
"org.apache.openjpa.jdbc.sql.SelectImpl.eagerClone(FieldMapping,int,boolean,int)",32,83
org.apache.openjpa.jdbc.sql.SelectImpl.parallelClone(),17,45
org.apache.openjpa.jdbc.sql.SelectImpl.getEagerMap(),4,7
org.apache.openjpa.jdbc.sql.SelectImpl.logEagerRelations(),9,16
org.apache.openjpa.jdbc.sql.SelectImpl.getEager(FieldMapping),9,18
"org.apache.openjpa.jdbc.sql.SelectImpl.toEagerKey(FieldMapping,PathJoins)",9,18
org.apache.openjpa.jdbc.sql.SelectImpl.newJoins(),7,17
org.apache.openjpa.jdbc.sql.SelectImpl.newOuterJoins(),4,8
"org.apache.openjpa.jdbc.sql.SelectImpl.append(SQLBuffer,Joins)",17,59
"org.apache.openjpa.jdbc.sql.SelectImpl.and(Joins,Joins)",2,11
org.apache.openjpa.jdbc.sql.SelectImpl.getSelect(),1,2
"org.apache.openjpa.jdbc.sql.SelectImpl.and(PathJoins,PathJoins,boolean)",10,52
"org.apache.openjpa.jdbc.sql.SelectImpl.or(Joins,Joins)",19,108
org.apache.openjpa.jdbc.sql.SelectImpl.outer(Joins),16,72
org.apache.openjpa.jdbc.sql.SelectImpl.collectOuterJoins(PathJoins),29,87
"org.apache.openjpa.jdbc.sql.SelectImpl.getTableIndex(Table,PathJoins,boolean)",33,69
"org.apache.openjpa.jdbc.sql.SelectImpl.findAliasForQuery(Table,PathJoins,Object,boolean)",19,68
org.apache.openjpa.jdbc.sql.SelectImpl.isPathInThisContext(PathJoins),22,58
"org.apache.openjpa.jdbc.sql.SelectImpl.getAlias(Table,Object)",6,14
"org.apache.openjpa.jdbc.sql.SelectImpl.createAlias(Table,Object)",15,24
"org.apache.openjpa.jdbc.sql.SelectImpl.findAlias(Table,Object)",7,24
"org.apache.openjpa.jdbc.sql.SelectImpl.recordTableAlias(Table,Object,Integer)",16,37
"org.apache.openjpa.jdbc.sql.SelectImpl.aliasSize(boolean,SelectImpl)",10,31
org.apache.openjpa.jdbc.sql.SelectImpl.toString(),3,4
org.apache.openjpa.jdbc.sql.SelectImpl.isOuter(),1,1
org.apache.openjpa.jdbc.sql.SelectImpl.setOuter(boolean),5,9
org.apache.openjpa.jdbc.sql.SelectImpl.isDirty(),1,1
org.apache.openjpa.jdbc.sql.SelectImpl.path(),3,3
org.apache.openjpa.jdbc.sql.SelectImpl.getPathStr(),3,3
org.apache.openjpa.jdbc.sql.SelectImpl.joins(),3,3
org.apache.openjpa.jdbc.sql.SelectImpl.joinCount(),2,2
org.apache.openjpa.jdbc.sql.SelectImpl.nullJoins(),1,1
org.apache.openjpa.jdbc.sql.SelectImpl.isEmpty(),1,1
"org.apache.openjpa.jdbc.sql.SelectImpl.crossJoin(Table,Table)",7,17
"org.apache.openjpa.jdbc.sql.SelectImpl.join(ForeignKey,boolean,boolean)",6,9
"org.apache.openjpa.jdbc.sql.SelectImpl.outerJoin(ForeignKey,boolean,boolean)",7,11
"org.apache.openjpa.jdbc.sql.SelectImpl.joinRelation(String,ForeignKey,ClassMapping,int,boolean,boolean)",12,19
"org.apache.openjpa.jdbc.sql.SelectImpl.outerJoinRelation(String,ForeignKey,ClassMapping,int,boolean,boolean)",13,21
org.apache.openjpa.jdbc.sql.SelectImpl.setVariable(String),6,11
org.apache.openjpa.jdbc.sql.SelectImpl.setSubselect(String),6,11
org.apache.openjpa.jdbc.sql.SelectImpl.clone(Context),14,37
"org.apache.openjpa.jdbc.sql.SelectImpl.Key.Key(String,Object)",4,9
org.apache.openjpa.jdbc.sql.SelectImpl.Key.hashCode(),4,10
org.apache.openjpa.jdbc.sql.SelectImpl.Key.equals(Object),4,14
org.apache.openjpa.jdbc.sql.SelectImpl.Key.toString(),3,4
org.apache.openjpa.jdbc.sql.SelectImpl.Key.getKey(),2,3
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.SelectResult(Connection,Statement,ResultSet,DBDictionary)",10,14
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.getSelect(),4,6
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.setSelect(SelectImpl),5,9
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.getEager(FieldMapping),16,32
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.putEager(FieldMapping,Object)",13,27
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.load(ClassMapping,JDBCStore,JDBCFetchConfiguration,Joins)",17,44
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.newJoins(),6,22
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.containsInternal(Object,Joins)",18,56
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.containsAllInternal(Object[],Joins)",14,29
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.pushBack(),4,5
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.absoluteInternal(int),6,9
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.nextInternal(),4,5
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.findObject(Object,Joins)",56,138
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.getJoins(Joins),5,16
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.getPreJoins(),15,43
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.getColumnAlias(Column,PathJoins)",16,47
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.isOuter(),1,1
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.setOuter(boolean),4,5
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.isDirty(),1,1
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.path(),3,3
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.getPathStr(),3,3
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.joins(),3,3
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.joinCount(),2,2
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.nullJoins(),1,1
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.isEmpty(),1,1
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.crossJoin(Table,Table)",6,9
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.join(ForeignKey,boolean,boolean)",5,5
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.outerJoin(ForeignKey,boolean,boolean)",6,6
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.joinRelation(String,ForeignKey,ClassMapping,int,boolean,boolean)",13,20
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.outerJoinRelation(String,ForeignKey,ClassMapping,int,boolean,boolean)",14,22
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.setVariable(String),7,12
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.setSubselect(String),7,12
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.setCorrelatedVariable(String),6,6
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.setJoinContext(Context),5,6
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.getCorrelatedVariable(),3,3
org.apache.openjpa.jdbc.sql.SelectImpl.SelectResult.moveJoinsToParent(),3,3
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.getSelect(),1,2
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.isOuter(),1,1
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.setOuter(boolean),4,5
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.isDirty(),3,3
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.path(),3,4
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.joins(),3,3
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.joinCount(),2,2
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.nullJoins(),1,1
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.setVariable(String),5,7
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.getVariable(),3,3
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.setCorrelatedVariable(String),6,9
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.getCorrelatedVariable(),4,5
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.setJoinContext(Context),4,8
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.setSubselect(String),6,7
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.isEmpty(),1,1
"org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.crossJoin(Table,Table)",8,12
"org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.join(ForeignKey,boolean,boolean)",7,8
"org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.outerJoin(ForeignKey,boolean,boolean)",8,9
"org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.joinRelation(String,ForeignKey,ClassMapping,int,boolean,boolean)",13,16
"org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.outerJoinRelation(String,ForeignKey,ClassMapping,int,boolean,boolean)",14,17
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.append(String),5,15
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.getPathStr(),3,11
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.toString(),7,10
org.apache.openjpa.jdbc.sql.SelectImpl.PathJoinsImpl.moveJoinsToParent(),3,3
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.SelectJoins(SelectImpl),4,7
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.getSelect(),2,3
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.isOuter(),1,2
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.setOuter(boolean),4,7
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.isDirty(),2,3
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.joins(),3,4
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.setJoins(JoinSet),5,15
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.joinCount(),6,9
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.nullJoins(),5,9
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.isEmpty(),2,4
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.crossJoin(Table,Table)",39,114
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.join(ForeignKey,boolean,boolean)",5,7
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.outerJoin(ForeignKey,boolean,boolean)",6,8
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.joinRelation(String,ForeignKey,ClassMapping,int,boolean,boolean)",11,16
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.outerJoinRelation(String,ForeignKey,ClassMapping,int,boolean,boolean)",12,17
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.join(String,ForeignKey,ClassMapping,int,boolean,boolean,boolean)",47,173
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.setCorrelated(Join),15,37
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.moveJoinsToParent(),12,32
"org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.addJoinsToParent(SelectImpl,Join)",17,64
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.clone(SelectImpl),13,28
org.apache.openjpa.jdbc.sql.SelectImpl.SelectJoins.toString(),3,5
org.apache.openjpa.jdbc.sql.SelectImpl.newSelects(),1,3
org.apache.openjpa.jdbc.sql.SelectImpl.getDictionary(),2,3
org.apache.openjpa.jdbc.sql.SelectImpl.Selects.addAll(Selects),12,60
org.apache.openjpa.jdbc.sql.SelectImpl.Selects.getAlias(Object),4,7
"org.apache.openjpa.jdbc.sql.SelectImpl.Selects.setAlias(Object,Object,boolean)",15,34
"org.apache.openjpa.jdbc.sql.SelectImpl.Selects.setAlias(int,Object)",7,13
"org.apache.openjpa.jdbc.sql.SelectImpl.Selects.insertAlias(int,Object,Object)",14,25
org.apache.openjpa.jdbc.sql.SelectImpl.Selects.indexOfAlias(Object),7,13
"org.apache.openjpa.jdbc.sql.SelectImpl.Selects.getAliases(boolean,boolean)",9,14
"org.apache.openjpa.jdbc.sql.SelectImpl.Selects.getAliases(boolean,boolean).$1.size()",4,7
"org.apache.openjpa.jdbc.sql.SelectImpl.Selects.getAliases(boolean,boolean).$1.get(int)",18,46
"org.apache.openjpa.jdbc.sql.SelectImpl.Selects.setSelectAs(Object,String)",9,13
org.apache.openjpa.jdbc.sql.SelectImpl.Selects.clearPlaceholders(),10,17
org.apache.openjpa.jdbc.sql.SelectImpl.Selects.contains(Object),4,6
org.apache.openjpa.jdbc.sql.SelectImpl.Selects.get(int),6,7
org.apache.openjpa.jdbc.sql.SelectImpl.Selects.size(),2,4
org.apache.openjpa.jdbc.sql.SelectImpl.Selects.clear(),4,4
org.apache.openjpa.jdbc.sql.SelectImpl.setCorrelatedVariable(String),7,13
org.apache.openjpa.jdbc.sql.SelectImpl.setJoinContext(Context),6,13
org.apache.openjpa.jdbc.sql.SelectImpl.getCorrelatedVariable(),3,3
org.apache.openjpa.jdbc.sql.SelectImpl.moveJoinsToParent(),3,3
org.apache.openjpa.jdbc.sql.PathJoins.setOuter(boolean),5,9
org.apache.openjpa.jdbc.sql.PathJoins.isDirty(),5,5
org.apache.openjpa.jdbc.sql.PathJoins.path(),7,8
org.apache.openjpa.jdbc.sql.PathJoins.joins(),6,8
org.apache.openjpa.jdbc.sql.PathJoins.joinCount(),7,7
org.apache.openjpa.jdbc.sql.PathJoins.nullJoins(),5,5
org.apache.openjpa.jdbc.sql.PathJoins.getSelect(),3,5
org.apache.openjpa.jdbc.sql.PathJoins.getPathStr(),3,3
embeddables.Coordinates.Coordinates(),1,1
"embeddables.Coordinates.Coordinates(String,String)",6,9
org.apache.openjpa.trader.client.OpenTrader.onModuleLoad(),14,17
org.apache.openjpa.trader.client.OpenTrader.getService(),13,27
org.apache.openjpa.trader.client.OpenTrader.getName(),4,9
org.apache.openjpa.trader.client.OpenTrader.getTrader(),3,6
org.apache.openjpa.trader.client.OpenTrader.getTradedStocks(),14,23
org.apache.openjpa.trader.client.OpenTrader.getServiceURI(),3,5
"org.apache.openjpa.trader.client.OpenTrader.init(Trader,String,List<Stock>)",56,224
org.apache.openjpa.trader.client.OpenTrader.decorate(Widget),11,19
org.apache.openjpa.trader.client.OpenTrader.setUpHelp(),21,58
org.apache.openjpa.trader.client.OpenTrader.createHeader(),19,38
org.apache.openjpa.trader.client.OpenTrader.createFooter(),17,28
org.apache.openjpa.trader.client.OpenTrader.onUncaughtException(Throwable),9,14
org.apache.openjpa.trader.client.OpenTrader.handleError(Throwable),10,17
"org.apache.openjpa.trader.client.OpenTrader.registerHandler(Type<H>,H)",25,39
org.apache.openjpa.trader.client.OpenTrader.fireEvent(GwtEvent<>),13,26
org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getInstance(),4,5
org.apache.openjpa.jdbc.meta.NoneMappingDefaults.defaultMissingInfo(),2,2
org.apache.openjpa.jdbc.meta.NoneMappingDefaults.useClassCriteria(),1,1
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getStrategy(ClassMapping,boolean)",5,5
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getStrategy(Version,boolean)",5,5
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getStrategy(Discriminator,boolean)",5,5
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getStrategy(ValueMapping,Class<>,boolean)",6,6
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getDiscriminatorValue(Discriminator,boolean)",5,6
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getTableName(ClassMapping,Schema)",10,13
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getTableName(FieldMapping,Schema)",6,8
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.populateDataStoreIdColumns(ClassMapping,Table,Column[])",9,10
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.populateColumns(Version,Table,Column[])",7,8
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.populateColumns(Discriminator,Table,Column[])",7,8
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.populateJoinColumn(ClassMapping,Table,Table,Column,Object,int,int)",12,14
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.populateJoinColumn(FieldMapping,Table,Table,Column,Object,int,int)",13,15
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.populateForeignKeyColumn(ValueMapping,String,Table,Table,Column,Object,boolean,int,int)",17,20
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.populateColumns(ValueMapping,String,Table,Column[])",10,11
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.populateOrderColumns(FieldMapping,Table,Column[])",7,8
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.populateNullIndicatorColumns(ValueMapping,String,Table,Column[])",11,12
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getJoinForeignKey(ClassMapping,Table,Table)",7,11
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getJoinForeignKey(FieldMapping,Table,Table)",7,11
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getForeignKey(ValueMapping,String,Table,Table,boolean)",10,14
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getJoinIndex(FieldMapping,Table,Column[])",7,9
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getIndex(ValueMapping,String,Table,Column[])",8,10
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getIndex(Version,Table,Column[])",6,8
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getIndex(Discriminator,Table,Column[])",6,8
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getJoinUnique(FieldMapping,Table,Column[])",7,9
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getUnique(ValueMapping,String,Table,Column[])",8,10
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getPrimaryKeyName(ClassMapping,Table)",6,7
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.installPrimaryKey(FieldMapping,Table)",6,7
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getForeignKey(ValueMapping,DBIdentifier,Table,Table,boolean)",9,13
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getIndex(ValueMapping,DBIdentifier,Table,Column[])",8,10
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getUnique(ValueMapping,DBIdentifier,Table,Column[])",8,10
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.populateColumns(ValueMapping,DBIdentifier,Table,Column[])",9,10
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.populateForeignKeyColumn(ValueMapping,DBIdentifier,Table,Table,Column,Object,boolean,int,int)",16,19
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.populateNullIndicatorColumns(ValueMapping,DBIdentifier,Table,Column[])",10,11
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getTableIdentifier(ClassMapping,Schema)",6,13
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getTableIdentifier(FieldMapping,Schema)",6,12
"org.apache.openjpa.jdbc.meta.NoneMappingDefaults.getPrimaryKeyIdentifier(ClassMapping,Table)",5,8
org.apache.openjpa.lib.util.JavaVendors.JavaVendors(String),5,5
org.apache.openjpa.lib.util.JavaVendors.getCurrentVendor(),7,10
org.apache.openjpa.lib.util.JavaVendors.isIBM(),7,9
org.apache.openjpa.lib.util.JavaVendors.isSun(),7,9
org.apache.openjpa.lib.util.JavaVendors.getVirtualMachineClassName(),4,6
org.apache.openjpa.integration.persistence.provider.DummyPersistenceProviderResolver.clearCachedProviders(),2,2
org.apache.openjpa.integration.persistence.provider.DummyPersistenceProviderResolver.getPersistenceProviders(),4,5
org.apache.openjpa.enhance.PCDataGenerator.PCDataGenerator(OpenJPAConfiguration),8,16
org.apache.openjpa.enhance.PCDataGenerator.getConfiguration(),3,5
"org.apache.openjpa.enhance.PCDataGenerator.generatePCData(Object,ClassMetaData)",23,60
org.apache.openjpa.enhance.PCDataGenerator.generateStorage(ClassMetaData),19,39
"org.apache.openjpa.enhance.PCDataGenerator.finish(DynamicPCData,ClassMetaData)",10,13
org.apache.openjpa.enhance.PCDataGenerator.getCreateFieldMethods(int),16,20
org.apache.openjpa.enhance.PCDataGenerator.declareClasses(BCClass),6,10
org.apache.openjpa.enhance.PCDataGenerator.getClassName(Object),9,11
org.apache.openjpa.enhance.PCDataGenerator.getUniqueName(Class<>),13,18
"org.apache.openjpa.enhance.PCDataGenerator.decorate(Object,BCClass,int[])",20,54
"org.apache.openjpa.enhance.PCDataGenerator.decorate(BCClass,ClassMetaData)",7,8
org.apache.openjpa.enhance.PCDataGenerator.enhanceConstructor(BCClass),30,71
"org.apache.openjpa.enhance.PCDataGenerator.addGetType(BCClass,ClassMetaData)",49,154
org.apache.openjpa.enhance.PCDataGenerator.addBaseFields(BCClass),17,30
"org.apache.openjpa.enhance.PCDataGenerator.addImplDataMethods(BCClass,ClassMetaData)",41,215
"org.apache.openjpa.enhance.PCDataGenerator.addFieldImplDataMethods(BCClass,ClassMetaData)",64,498
org.apache.openjpa.enhance.PCDataGenerator.addVersionMethods(BCClass),33,133
"org.apache.openjpa.enhance.PCDataGenerator.addLoadMethod(BCClass,ClassMetaData)",53,212
"org.apache.openjpa.enhance.PCDataGenerator.addLoadWithFieldsMethod(BCClass,ClassMetaData)",48,212
"org.apache.openjpa.enhance.PCDataGenerator.addLoadMethod(BCClass,boolean)",22,73
"org.apache.openjpa.enhance.PCDataGenerator.addLoad(BCClass,Code,FieldMetaData,int,int,boolean)",41,196
"org.apache.openjpa.enhance.PCDataGenerator.addLoadIntermediate(Code,int,int,Collection<Instruction>,int)",32,111
"org.apache.openjpa.enhance.PCDataGenerator.addStoreMethods(BCClass,ClassMetaData)",11,23
"org.apache.openjpa.enhance.PCDataGenerator.addStoreMethod(BCClass,ClassMetaData,boolean)",55,284
"org.apache.openjpa.enhance.PCDataGenerator.addStore(BCClass,Code,FieldMetaData,int)",48,347
org.apache.openjpa.enhance.PCDataGenerator.addNewEmbedded(BCClass),26,84
org.apache.openjpa.enhance.PCDataGenerator.addGetData(BCClass),17,37
org.apache.openjpa.enhance.PCDataGenerator.replaceType(FieldMetaData),14,20
org.apache.openjpa.enhance.PCDataGenerator.usesIntermediate(FieldMetaData),7,11
org.apache.openjpa.enhance.PCDataGenerator.usesImplData(ClassMetaData),6,10
org.apache.openjpa.enhance.PCDataGenerator.usesImplData(FieldMetaData),6,13
org.apache.openjpa.enhance.PCDataGenerator.countImplDataFields(ClassMetaData),9,25
"org.apache.openjpa.enhance.PCDataGenerator.callAbstractPCData(BCClass,String,Class<>,Class<>[])",25,61
"org.apache.openjpa.enhance.PCDataGenerator.setTarget(Instruction,Collection<Instruction>)",11,26
org.apache.openjpa.enhance.PCDataGenerator.toStrings(Class<>[]),8,18
org.apache.openjpa.enhance.PCDataGenerator.DynamicPCData.setId(Object),3,3
org.apache.openjpa.enhance.PCDataGenerator.DynamicPCData.getStorageGenerator(),3,4
org.apache.openjpa.enhance.PCDataGenerator.DynamicPCData.setStorageGenerator(PCDataGenerator),4,6
"org.apache.openjpa.event.NoneOrphanedKeyAction.orphan(Object,OpenJPAStateManager,ValueMetaData)",9,10
org.apache.openjpa.persistence.query.LowerExpression.LowerExpression(Expression),5,7
org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.orderDirty(),1,1
"org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.newPreparedStatementManager(JDBCStore,Connection)",8,17
org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.newRowManager(),3,7
"org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.flush(RowManager,PreparedStatementManager,Collection)",50,196
"org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.analyzeForeignKeys(Collection,Collection,Collection,RowManagerImpl,Graph[])",55,216
"org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.getInsertRow(Map,RowManagerImpl,Row)",20,61
"org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.analyzeAgainstInserts(Collection,RowManagerImpl,Graph)",48,151
org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.getBaseTable(OpenJPAStateManager),11,24
"org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.addEdge(Graph,PrimaryRow,PrimaryRow,Object)",21,65
"org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.flushGraph(Graph,PreparedStatementManager,boolean)",53,145
"org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.flush(Collection,Collection,PreparedStatementManager)",13,24
"org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.addDeleteUpdate(Edge,Collection)",39,102
"org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.addInsertUpdate(PrimaryRow,Edge,Collection)",46,151
org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.findBreakableLink(List),22,65
"org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.recalculateDepthFirstAnalysis(Graph,boolean)",26,57
"org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.resolveCycles(Graph,Collection,Collection,Collection)",59,165
"org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.newDepthFirstAnalysis(Graph,boolean)",9,20
"org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager.flush(Collection,PreparedStatementManager)",17,37
org.apache.openjpa.persistence.query.SelectItem.asc(),9,14
org.apache.openjpa.persistence.query.SelectItem.desc(),9,14
"org.apache.openjpa.kernel.AbstractBrokerFactory.toPoolKey(Map<String,Object>)",10,20
"org.apache.openjpa.kernel.AbstractBrokerFactory.pool(Object,AbstractBrokerFactory)",9,25
org.apache.openjpa.kernel.AbstractBrokerFactory.getPooledFactoryForKey(Object),11,22
org.apache.openjpa.kernel.AbstractBrokerFactory.AbstractBrokerFactory(OpenJPAConfiguration),12,15
org.apache.openjpa.kernel.AbstractBrokerFactory.getConfiguration(),4,6
org.apache.openjpa.kernel.AbstractBrokerFactory.newBroker(),6,10
"org.apache.openjpa.kernel.AbstractBrokerFactory.newBroker(String,String)",11,18
"org.apache.openjpa.kernel.AbstractBrokerFactory.newBroker(boolean,int)",10,18
"org.apache.openjpa.kernel.AbstractBrokerFactory.newBroker(String,String,boolean,int)",8,17
"org.apache.openjpa.kernel.AbstractBrokerFactory.newBroker(String,String,boolean,int,boolean)",9,19
"org.apache.openjpa.kernel.AbstractBrokerFactory.newBroker(String,String,boolean,int,boolean,String,String)",26,77
"org.apache.openjpa.kernel.AbstractBrokerFactory.initializeBroker(boolean,int,Broker,boolean)",36,71
org.apache.openjpa.kernel.AbstractBrokerFactory.addListeners(Broker),17,48
org.apache.openjpa.kernel.AbstractBrokerFactory.loadPersistentTypes(ClassLoader),70,161
org.apache.openjpa.kernel.AbstractBrokerFactory.needsSub(Class<>),5,7
"org.apache.openjpa.kernel.AbstractBrokerFactory.addLifecycleListener(Object,Class<>[])",10,19
org.apache.openjpa.kernel.AbstractBrokerFactory.removeLifecycleListener(Object),7,13
org.apache.openjpa.kernel.AbstractBrokerFactory.addTransactionListener(Object),9,18
org.apache.openjpa.kernel.AbstractBrokerFactory.removeTransactionListener(Object),7,13
org.apache.openjpa.kernel.AbstractBrokerFactory.isClosed(),4,6
org.apache.openjpa.kernel.AbstractBrokerFactory.close(),35,68
org.apache.openjpa.kernel.AbstractBrokerFactory.getProperties(),24,51
org.apache.openjpa.kernel.AbstractBrokerFactory.getSupportedProperties(),7,7
org.apache.openjpa.kernel.AbstractBrokerFactory.getUserObject(Object),6,12
"org.apache.openjpa.kernel.AbstractBrokerFactory.putUserObject(Object,Object)",10,28
org.apache.openjpa.kernel.AbstractBrokerFactory.lock(),1,3
org.apache.openjpa.kernel.AbstractBrokerFactory.unlock(),2,3
org.apache.openjpa.kernel.AbstractBrokerFactory.readResolve(),35,61
org.apache.openjpa.kernel.AbstractBrokerFactory.newBrokerSet(),20,48
org.apache.openjpa.kernel.AbstractBrokerFactory.newStoreManager(),11,15
"org.apache.openjpa.kernel.AbstractBrokerFactory.findBroker(String,String,boolean)",24,38
"org.apache.openjpa.kernel.AbstractBrokerFactory.newBrokerImpl(String,String)",16,35
org.apache.openjpa.kernel.AbstractBrokerFactory.setup(),16,20
"org.apache.openjpa.kernel.AbstractBrokerFactory.findTransactionalBroker(String,String)",36,81
org.apache.openjpa.kernel.AbstractBrokerFactory.configureBroker(BrokerImpl),26,83
org.apache.openjpa.kernel.AbstractBrokerFactory.makeReadOnly(),80,188
org.apache.openjpa.kernel.AbstractBrokerFactory.getFactoryInitializationBanner(),15,19
org.apache.openjpa.kernel.AbstractBrokerFactory.assertOpen(),14,30
org.apache.openjpa.kernel.AbstractBrokerFactory.assertNoActiveTransaction(),30,62
"org.apache.openjpa.kernel.AbstractBrokerFactory.syncWithManagedTransaction(BrokerImpl,boolean)",43,105
org.apache.openjpa.kernel.AbstractBrokerFactory.getOpenBrokers(),12,17
org.apache.openjpa.kernel.AbstractBrokerFactory.releaseBroker(BrokerImpl),11,21
org.apache.openjpa.kernel.AbstractBrokerFactory.getPoolKey(),7,11
org.apache.openjpa.kernel.AbstractBrokerFactory.setPoolKey(Object),8,15
org.apache.openjpa.kernel.AbstractBrokerFactory.RemoveTransactionSync.RemoveTransactionSync(Object),5,7
org.apache.openjpa.kernel.AbstractBrokerFactory.RemoveTransactionSync.beforeCompletion(),1,1
org.apache.openjpa.kernel.AbstractBrokerFactory.RemoveTransactionSync.afterCompletion(int),5,5
org.apache.openjpa.kernel.AbstractBrokerFactory.getPcClassLoaders(),13,22
org.apache.openjpa.kernel.AbstractBrokerFactory.createDelegatingStoreManager(),28,77
org.apache.openjpa.kernel.AbstractBrokerFactory.postCreationCallback(),73,140
org.apache.openjpa.jdbc.meta.strats.VerticalClassStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.VerticalClassStrategy.map(boolean),43,150
org.apache.openjpa.jdbc.meta.strats.VerticalClassStrategy.initialize(),16,21
"org.apache.openjpa.jdbc.meta.strats.VerticalClassStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",17,34
"org.apache.openjpa.jdbc.meta.strats.VerticalClassStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",15,29
"org.apache.openjpa.jdbc.meta.strats.VerticalClassStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",15,28
org.apache.openjpa.jdbc.meta.strats.VerticalClassStrategy.isPrimaryKeyObjectId(boolean),5,6
"org.apache.openjpa.jdbc.meta.strats.VerticalClassStrategy.joinSuperclass(Joins,boolean)",7,18
"org.apache.openjpa.jdbc.meta.strats.VerticalClassStrategy.supportsEagerSelect(Select,OpenJPAStateManager,JDBCStore,ClassMapping,JDBCFetchConfiguration)",19,27
org.apache.openjpa.persistence.jest.Closure.Closure(OpenJPAStateManager),6,7
org.apache.openjpa.persistence.jest.Closure.Closure(Collection<OpenJPAStateManager>),6,9
org.apache.openjpa.persistence.jest.Closure.visit(OpenJPAStateManager),31,92
org.apache.openjpa.persistence.jest.Closure.toStateManager(Object),5,11
org.apache.openjpa.persistence.jest.Closure.iterator(),4,6
org.apache.openjpa.persistence.jest.Closure.ior(OpenJPAStateManager),11,11
org.apache.openjpa.kernel.InMemorySavepointManager.getPreFlush(),14,20
org.apache.openjpa.kernel.InMemorySavepointManager.setPreFlush(boolean),14,26
"org.apache.openjpa.kernel.InMemorySavepointManager.newSavepoint(String,Broker)",11,28
org.apache.openjpa.kernel.InMemorySavepointManager.supportsIncrementalFlush(),7,8
org.apache.openjpa.jdbc.sql.PostgresDictionary.PostgresDictionary(),172,314
"org.apache.openjpa.jdbc.sql.PostgresDictionary.getDate(ResultSet,int)",28,53
"org.apache.openjpa.jdbc.sql.PostgresDictionary.getByte(ResultSet,int)",19,25
"org.apache.openjpa.jdbc.sql.PostgresDictionary.getShort(ResultSet,int)",19,25
"org.apache.openjpa.jdbc.sql.PostgresDictionary.getInt(ResultSet,int)",19,25
"org.apache.openjpa.jdbc.sql.PostgresDictionary.getLong(ResultSet,int)",19,25
"org.apache.openjpa.jdbc.sql.PostgresDictionary.setBoolean(PreparedStatement,int,boolean,Column)",16,21
"org.apache.openjpa.jdbc.sql.PostgresDictionary.setNull(PreparedStatement,int,int,Column)",15,32
"org.apache.openjpa.jdbc.sql.PostgresDictionary.appendSelectRange(SQLBuffer,long,long,boolean)",12,23
"org.apache.openjpa.jdbc.sql.PostgresDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",11,37
org.apache.openjpa.jdbc.sql.PostgresDictionary.supportsDeferredUniqueConstraints(),7,10
"org.apache.openjpa.jdbc.sql.PostgresDictionary.getSequencesSQL(String,String)",7,19
"org.apache.openjpa.jdbc.sql.PostgresDictionary.getSequencesSQL(DBIdentifier,DBIdentifier)",9,34
"org.apache.openjpa.jdbc.sql.PostgresDictionary.isSystemSequence(String,String,boolean)",8,18
"org.apache.openjpa.jdbc.sql.PostgresDictionary.isSystemSequence(DBIdentifier,DBIdentifier,boolean)",6,14
"org.apache.openjpa.jdbc.sql.PostgresDictionary.isSystemSequence(DBIdentifier,DBIdentifier,boolean,Connection)",9,21
"org.apache.openjpa.jdbc.sql.PostgresDictionary.isOwnedSequence(DBIdentifier,DBIdentifier,Connection)",68,147
"org.apache.openjpa.jdbc.sql.PostgresDictionary.queryOwnership(Connection,String[],DBIdentifier)",36,90
org.apache.openjpa.jdbc.sql.PostgresDictionary.buildNames(String),42,120
org.apache.openjpa.jdbc.sql.PostgresDictionary.isOwnedSequence(String),30,50
"org.apache.openjpa.jdbc.sql.PostgresDictionary.isSystemTable(String,String,boolean)",7,18
"org.apache.openjpa.jdbc.sql.PostgresDictionary.isSystemTable(DBIdentifier,DBIdentifier,boolean)",15,32
"org.apache.openjpa.jdbc.sql.PostgresDictionary.isSystemIndex(String,Table)",6,12
"org.apache.openjpa.jdbc.sql.PostgresDictionary.isSystemIndex(DBIdentifier,Table)",14,28
org.apache.openjpa.jdbc.sql.PostgresDictionary.decorate(Connection),10,14
"org.apache.openjpa.jdbc.sql.PostgresDictionary.getLOBStream(JDBCStore,ResultSet,int)",18,35
"org.apache.openjpa.jdbc.sql.PostgresDictionary.insertBlobForStreamingLoad(Row,Column,JDBCStore,Object,Select)",17,39
"org.apache.openjpa.jdbc.sql.PostgresDictionary.insertPostgresBlob(Row,Column,JDBCStore,Object)",36,74
"org.apache.openjpa.jdbc.sql.PostgresDictionary.updatePostgresBlob(Row,Column,JDBCStore,Object,Select)",52,157
"org.apache.openjpa.jdbc.sql.PostgresDictionary.updateBlob(Select,JDBCStore,InputStream)",10,11
"org.apache.openjpa.jdbc.sql.PostgresDictionary.deleteStream(JDBCStore,Select)",38,95
org.apache.openjpa.jdbc.sql.PostgresDictionary.connectedConfiguration(Connection),39,97
"org.apache.openjpa.jdbc.sql.PostgresDictionary.setClobString(PreparedStatement,int,String,Column)",22,48
"org.apache.openjpa.jdbc.sql.PostgresDictionary.getObject(ResultSet,int,Map)",36,80
"org.apache.openjpa.jdbc.sql.PostgresDictionary.appendXmlComparison(SQLBuffer,String,FilterValue,FilterValue,boolean,boolean)",22,80
"org.apache.openjpa.jdbc.sql.PostgresDictionary.appendXmlValue(SQLBuffer,FilterValue)",29,77
org.apache.openjpa.jdbc.sql.PostgresDictionary.getPlaceholderValueString(Column),10,19
org.apache.openjpa.jdbc.sql.PostgresDictionary.getLargeObjectManager(DelegatingConnection),11,19
org.apache.openjpa.jdbc.sql.PostgresDictionary.getPGConnection(DelegatingConnection),19,43
org.apache.openjpa.jdbc.sql.PostgresDictionary.getDbcpDelegate(Connection),39,122
"org.apache.openjpa.jdbc.sql.PostgresDictionary.unwrapConnection(Connection,Class<>)",28,59
"org.apache.openjpa.jdbc.sql.PostgresDictionary.PostgresConnection.PostgresConnection(Connection,PostgresDictionary)",5,10
"org.apache.openjpa.jdbc.sql.PostgresDictionary.PostgresConnection.prepareStatement(String,boolean)",14,22
"org.apache.openjpa.jdbc.sql.PostgresDictionary.PostgresConnection.prepareStatement(String,int,int,boolean)",16,26
"org.apache.openjpa.jdbc.sql.PostgresDictionary.PostgresPreparedStatement.PostgresPreparedStatement(PreparedStatement,Connection,PostgresDictionary)",7,13
org.apache.openjpa.jdbc.sql.PostgresDictionary.PostgresPreparedStatement.executeQuery(boolean),23,43
org.apache.openjpa.jdbc.sql.PostgresDictionary.PostgresPreparedStatement.setFetchSize(int),16,39
org.apache.openjpa.kernel.exps.Count.Count(Val),5,8
org.apache.openjpa.kernel.exps.Count.getType(Class),1,1
"org.apache.openjpa.kernel.exps.Count.operate(Collection,Class)",6,11
"org.apache.openjpa.jdbc.kernel.exps.InSubQExpression.InSubQExpression(Val,SubQ)",8,15
"org.apache.openjpa.jdbc.kernel.exps.InSubQExpression.initialize(Select,ExpContext,Map)",13,27
"org.apache.openjpa.jdbc.kernel.exps.InSubQExpression.InSubQExpState.InSubQExpState(Joins,ExpState,ExpState)",5,13
"org.apache.openjpa.jdbc.kernel.exps.InSubQExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",15,45
"org.apache.openjpa.jdbc.kernel.exps.InSubQExpression.selectColumns(Select,ExpContext,ExpState,boolean)",12,29
org.apache.openjpa.jdbc.kernel.exps.InSubQExpression.acceptVisit(ExpressionVisitor),8,17
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getContext(),3,4
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.setContext(StoreContext),6,12
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.setContext(StoreContext,JDBCConfiguration)",21,51
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.useConnectionFactory2(StoreContext),8,12
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getDataSource(StoreContext),8,20
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getConfiguration(),3,4
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getDBDictionary(),2,3
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getSQLFactory(),2,5
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getLockManager(),3,5
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getFetchConfiguration(),4,11
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.beginOptimistic(),2,2
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.rollbackOptimistic(),2,2
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.begin(),17,23
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.commit(),15,21
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.rollback(),16,21
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.retainConnection(),5,6
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.releaseConnection(),5,6
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getClientConnection(),3,6
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getConnection(),3,4
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getDataSource(),2,4
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.exists(OpenJPAStateManager,Object)",17,23
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.isCached(List<Object>,BitSet)",12,14
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.exists(ClassMapping,Object,Object)",30,53
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.syncVersion(OpenJPAStateManager,Object)",18,24
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getReadLockLevel(),6,14
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.compareVersion(OpenJPAStateManager,Object,Object)",8,15
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.initialize(OpenJPAStateManager,PCState,FetchConfiguration,Object)",24,40
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.initializeState(OpenJPAStateManager,PCState,JDBCFetchConfiguration,ConnectionInfo)",69,276
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.setInverseRelation(OpenJPAStateManager,ClassMapping,Result)",54,134
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.setMappedBy(OpenJPAStateManager,FieldMapping,Object)",14,35
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getVersion(ClassMapping,OpenJPAStateManager,Result)",16,22
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.isEmptyResult(Result),12,18
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getType(Result,ClassMapping)",12,19
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.customLoad(OpenJPAStateManager,ClassMapping,PCState,JDBCFetchConfiguration)",21,36
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getInitializeStateResult(OpenJPAStateManager,ClassMapping,JDBCFetchConfiguration,int)",35,77
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getInitializeStateUnionResult(OpenJPAStateManager,ClassMapping,ClassMapping[],JDBCFetchConfiguration)",35,86
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getInitializeStateUnionResult(OpenJPAStateManager,ClassMapping,ClassMapping[],JDBCFetchConfiguration).$1.select(Select,int)",11,18
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.selectPrimaryKey(OpenJPAStateManager,ClassMapping,JDBCFetchConfiguration)",39,84
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.load(OpenJPAStateManager,BitSet,FetchConfiguration,int,Object)",85,208
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.isDelayedLoadOnly(OpenJPAStateManager,BitSet,ClassMapping)",22,33
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.removeLoadedFields(OpenJPAStateManager,BitSet)",12,20
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.loadAll(Collection,PCState,int,FetchConfiguration,Object)",9,17
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.beforeStateChange(OpenJPAStateManager,PCState,PCState)",3,3
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.flush(Collection),14,20
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.cancelAll(),21,38
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.assignObjectId(OpenJPAStateManager,boolean)",26,55
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.assignField(OpenJPAStateManager,int,boolean)",17,28
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getManagedType(Object),4,7
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getDataStoreIdType(ClassMetaData),4,6
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.copyDataStoreId(Object,ClassMetaData)",9,14
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.newDataStoreId(Object,ClassMetaData)",8,13
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.newDataStoreId(long,ClassMapping,boolean)",6,9
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.executeExtent(ClassMetaData,boolean,FetchConfiguration)",62,213
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.executeExtent(ClassMetaData,boolean,FetchConfiguration).$2.select(Select,int)",8,13
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.selectExtent(Select,ClassMapping,JDBCFetchConfiguration,boolean)",29,74
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.newStoreQuery(String),12,36
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.newQuery(String),13,36
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.newFetchConfiguration(),4,8
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getDataStoreIdSequence(ClassMetaData),12,21
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getValueSequence(FieldMetaData),7,7
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.close(),3,4
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.connect(boolean),15,25
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.connectInternal(),11,16
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getNewConnection(),6,9
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.find(Object,ValueMapping,JDBCFetchConfiguration)",20,56
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.load(ClassMapping,JDBCFetchConfiguration,BitSet,Result)",30,78
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.excludeInverseRelation(ClassMapping,ConnectionInfo,BitSet)",16,44
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.load(ClassMapping,OpenJPAStateManager,JDBCFetchConfiguration,Result)",29,54
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.load(ClassMapping,OpenJPAStateManager,JDBCFetchConfiguration,Result,FieldMapping)",43,134
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.select(Select,ClassMapping,int,OpenJPAStateManager,BitSet,JDBCFetchConfiguration,int,boolean,boolean)",78,205
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getJoinedSupers(Select,ClassMapping,int,boolean)",15,37
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.needClassCondition(ClassMapping,int,OpenJPAStateManager)",17,40
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.createEagerSelects(Select,ClassMapping,OpenJPAStateManager,BitSet,JDBCFetchConfiguration,int)",60,216
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.requiresSelect(FieldMapping,OpenJPAStateManager,BitSet,JDBCFetchConfiguration)",17,28
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.selectBaseMappings(Select,ClassMapping,ClassMapping,OpenJPAStateManager,BitSet,JDBCFetchConfiguration,int,FieldMapping,boolean,boolean)",93,316
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.optSelect(FieldMapping,Select,OpenJPAStateManager,JDBCFetchConfiguration)",30,44
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.selectSubclassMappings(Select,ClassMapping,OpenJPAStateManager,JDBCFetchConfiguration)",62,187
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.joinSubclass(Select,ClassMapping,ClassMapping,Joins)",22,54
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.loadSubclasses(ClassMapping),27,49
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.beforeExecuteStatement(Statement),7,10
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.afterExecuteStatement(Statement),7,11
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getFinder(ClassMapping,FetchConfiguration)",7,21
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.cacheFinder(ClassMapping,SelectExecutor,FetchConfiguration)",7,21
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getFinderCache(),8,14
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.ClientConnection.ClientConnection(Connection),3,5
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.ClientConnection.close(),4,5
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.ClientConnection.finalize(),5,5
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.RefCountConnection.RefCountConnection(Connection),4,6
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.RefCountConnection.getRetain(),1,2
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.RefCountConnection.setRetain(boolean),4,9
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.RefCountConnection.ref(),7,7
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.RefCountConnection.close(),13,16
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.RefCountConnection.free(),27,31
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.RefCountConnection.createStatement(boolean),9,13
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.RefCountConnection.createStatement(int,int,boolean)",11,17
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.RefCountConnection.prepareStatement(String,boolean)",11,18
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.RefCountConnection.prepareStatement(String,int,int,boolean)",13,22
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getCancelPreparedStatement(PreparedStatement,Connection)",12,38
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.getCancelStatement(Statement,Connection)",10,30
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelStatement.CancelStatement(Statement,Connection)",5,8
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelStatement.executeUpdate(String),6,13
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelStatement.executeQuery(String,boolean)",9,17
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelStatement.execute(String),5,11
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelStatement.executeUpdate(String,int)",6,13
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelStatement.executeUpdate(String,int[])",6,13
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelStatement.executeUpdate(String,String[])",6,14
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelStatement.execute(String,int)",5,11
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelStatement.execute(String,int[])",5,11
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelStatement.execute(String,String[])",5,12
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelStatement.close(),7,11
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.CancelPreparedStatement(PreparedStatement,Connection)",6,10
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.executeUpdate(),5,10
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.executeQuery(boolean),8,14
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.executeBatch(),5,10
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.execute(),4,8
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.execute(String),5,9
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.executeUpdate(String),6,11
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.executeUpdate(String,int)",6,11
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.executeUpdate(String,int[])",6,11
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.executeUpdate(String,String[])",6,12
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.execute(String,int)",5,9
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.execute(String,int[])",5,9
"org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.execute(String,String[])",5,10
org.apache.openjpa.jdbc.kernel.JDBCStoreManager.CancelPreparedStatement.close(),8,13
org.apache.openjpa.jdbc.meta.FieldStrategy.setFieldMapping(FieldMapping),7,11
"org.apache.openjpa.jdbc.meta.FieldStrategy.supportsSelect(Select,int,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",24,38
"org.apache.openjpa.jdbc.meta.FieldStrategy.selectEagerParallel(SelectExecutor,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",15,24
"org.apache.openjpa.jdbc.meta.FieldStrategy.selectEagerJoin(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",15,22
org.apache.openjpa.jdbc.meta.FieldStrategy.isEagerSelectToMany(),5,6
"org.apache.openjpa.jdbc.meta.FieldStrategy.select(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",28,58
"org.apache.openjpa.jdbc.meta.FieldStrategy.loadEagerParallel(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Object)",24,34
"org.apache.openjpa.jdbc.meta.FieldStrategy.loadEagerJoin(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",14,20
"org.apache.openjpa.jdbc.meta.FieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",21,30
"org.apache.openjpa.jdbc.meta.FieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",13,19
"org.apache.openjpa.jdbc.meta.FieldStrategy.toDataStoreValue(Object,JDBCStore)",19,27
"org.apache.openjpa.jdbc.meta.FieldStrategy.toKeyDataStoreValue(Object,JDBCStore)",18,27
"org.apache.openjpa.jdbc.meta.FieldStrategy.appendIsEmpty(SQLBuffer,Select,Joins)",14,19
"org.apache.openjpa.jdbc.meta.FieldStrategy.appendIsNotEmpty(SQLBuffer,Select,Joins)",13,18
"org.apache.openjpa.jdbc.meta.FieldStrategy.appendIsNull(SQLBuffer,Select,Joins)",10,13
"org.apache.openjpa.jdbc.meta.FieldStrategy.appendIsNotNull(SQLBuffer,Select,Joins)",10,13
"org.apache.openjpa.jdbc.meta.FieldStrategy.appendSize(SQLBuffer,Select,Joins)",11,15
"org.apache.openjpa.jdbc.meta.FieldStrategy.appendIndex(SQLBuffer,Select,Joins)",10,13
"org.apache.openjpa.jdbc.meta.FieldStrategy.appendType(SQLBuffer,Select,Joins)",11,14
"org.apache.openjpa.jdbc.meta.FieldStrategy.join(Joins,boolean)",6,9
"org.apache.openjpa.jdbc.meta.FieldStrategy.joinKey(Joins,boolean)",7,11
"org.apache.openjpa.jdbc.meta.FieldStrategy.joinRelation(Joins,boolean,boolean)",15,23
"org.apache.openjpa.jdbc.meta.FieldStrategy.joinKeyRelation(Joins,boolean,boolean)",16,25
"org.apache.openjpa.jdbc.meta.FieldStrategy.loadProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)",19,28
"org.apache.openjpa.jdbc.meta.FieldStrategy.loadKeyProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)",20,30
org.apache.openjpa.jdbc.meta.FieldStrategy.isVersionable(),5,5
"org.apache.openjpa.jdbc.meta.FieldStrategy.where(OpenJPAStateManager,JDBCStore,RowManager,Object)",22,27
"org.apache.openjpa.kernel.SaveFieldManager.SaveFieldManager(StateManagerImpl,PersistenceCapable,BitSet)",31,60
org.apache.openjpa.kernel.SaveFieldManager.getState(),7,9
org.apache.openjpa.kernel.SaveFieldManager.getUnloaded(),7,9
org.apache.openjpa.kernel.SaveFieldManager.saveField(int),56,138
org.apache.openjpa.kernel.SaveFieldManager.restoreField(int),20,45
"org.apache.openjpa.kernel.SaveFieldManager.isFieldEqual(int,Object)",18,52
org.apache.openjpa.kernel.SaveFieldManager.fetchObjectField(int),8,15
"org.apache.openjpa.kernel.SaveFieldManager.storeObjectField(int,Object)",33,99
org.apache.openjpa.kernel.SaveFieldManager.writeObject(ObjectOutputStream),6,12
org.apache.openjpa.kernel.SaveFieldManager.readObject(ObjectInputStream),7,14
org.apache.openjpa.instrumentation.TestInstrumentationProvider.setUp(),14,20
org.apache.openjpa.instrumentation.TestInstrumentationProvider.testProviderConfig(),42,138
org.apache.openjpa.instrumentation.TestInstrumentationProvider.testDynamicInstrumentConfig(),26,46
org.apache.openjpa.instrumentation.TestInstrumentationProvider.testDynamicProviderConfig(),28,49
org.apache.openjpa.instrumentation.TestInstrumentationProvider.verifyBrokerLevelInstrument(InstrumentationProvider),18,56
org.apache.openjpa.instrumentation.TestInstrumentationProvider.testDataCacheInstrument(),60,182
org.apache.openjpa.instrumentation.TestInstrumentationProvider.testMultipleProviderConfig(),45,107
"org.apache.openjpa.jdbc.meta.strats.TestReaderLob.newLobEntity(String,int)",8,24
"org.apache.openjpa.jdbc.meta.strats.TestReaderLob.newLobEntityForLoadContent(String,int)",10,22
org.apache.openjpa.jdbc.meta.strats.TestReaderLob.getLobEntityClass(),3,5
org.apache.openjpa.jdbc.meta.strats.TestReaderLob.getSelectQuery(),6,7
org.apache.openjpa.jdbc.meta.strats.TestReaderLob.getStreamContentAsString(Object),8,20
"org.apache.openjpa.jdbc.meta.strats.TestReaderLob.changeStream(LobEntity,String)",8,10
openbook.client.Images.getIcon(String),6,18
"openbook.client.Images.getIcon(String,boolean)",4,7
"openbook.client.Images.getIcon(String,int,int)",10,26
openbook.client.Images.createImageIcon(String),20,46
org.apache.openjpa.kernel.exps.ExpressionVisitor.enter(Expression),6,9
org.apache.openjpa.kernel.exps.ExpressionVisitor.exit(Expression),4,5
org.apache.openjpa.kernel.exps.ExpressionVisitor.enter(Value),6,9
org.apache.openjpa.kernel.exps.ExpressionVisitor.exit(Value),4,5
org.apache.openjpa.trader.domain.Trader.Trader(),1,1
org.apache.openjpa.trader.domain.Trader.Trader(String),3,5
org.apache.openjpa.trader.domain.Trader.getName(),2,3
org.apache.openjpa.trader.domain.Trader.getVersion(),1,2
org.apache.openjpa.trader.domain.Trader.toString(),2,3
org.apache.openjpa.trader.domain.Trader.hashCode(),5,12
org.apache.openjpa.trader.domain.Trader.equals(Object),5,14
org.apache.openjpa.meta.AbstractMetaDataFactory.setTypes(Set),7,12
org.apache.openjpa.meta.AbstractMetaDataFactory.setTypes(String),20,27
org.apache.openjpa.meta.AbstractMetaDataFactory.setRepository(MetaDataRepository),9,17
org.apache.openjpa.meta.AbstractMetaDataFactory.setStoreDirectory(File),5,7
org.apache.openjpa.meta.AbstractMetaDataFactory.setStoreMode(int),3,6
org.apache.openjpa.meta.AbstractMetaDataFactory.setStrict(boolean),2,5
"org.apache.openjpa.meta.AbstractMetaDataFactory.store(ClassMetaData[],QueryMetaData[],SequenceMetaData[],int,Map<File,String>)",13,17
"org.apache.openjpa.meta.AbstractMetaDataFactory.drop(Class[],int,ClassLoader)",5,6
"org.apache.openjpa.meta.AbstractMetaDataFactory.getPersistentTypeNames(boolean,ClassLoader)",8,9
"org.apache.openjpa.meta.AbstractMetaDataFactory.getQueryScope(String,ClassLoader)",5,7
"org.apache.openjpa.meta.AbstractMetaDataFactory.getResultSetMappingScope(String,ClassLoader)",7,11
org.apache.openjpa.meta.AbstractMetaDataFactory.newClassArgParser(),2,6
org.apache.openjpa.meta.AbstractMetaDataFactory.clear(),0,0
org.apache.openjpa.meta.AbstractMetaDataFactory.addClassExtensionKeys(Collection),5,5
org.apache.openjpa.meta.AbstractMetaDataFactory.addFieldExtensionKeys(Collection),6,6
org.apache.openjpa.meta.B.getCs(),1,1
org.apache.openjpa.meta.B.setCs(Set<C>),1,2
org.apache.openjpa.meta.B.getAs(),1,1
org.apache.openjpa.meta.B.setAs(Set<A>),1,2
org.apache.openjpa.integration.validation.Publisher.Publisher(),1,1
org.apache.openjpa.integration.validation.Publisher.getName(),2,4
org.apache.openjpa.integration.validation.Publisher.setName(String),4,10
org.apache.openjpa.integration.validation.Publisher.getPublisherID(),2,4
org.apache.openjpa.integration.validation.Publisher.setPublisherID(String),4,10
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.getSequence(),5,6
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.setSequence(String),9,18
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.getInitialValue(),3,6
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.setInitialValue(int),4,10
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.getAllocate(),2,4
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.setAllocate(int),3,8
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.getIncrement(),2,4
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.setIncrement(int),3,8
"org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.addSchema(ClassMapping,SchemaGroup)",15,58
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.getConfiguration(),3,4
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.setConfiguration(Configuration),4,8
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.startConfiguration(),2,2
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.endConfiguration(),33,55
"org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.nextInternal(JDBCStore,ClassMapping)",13,29
"org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.allocateInternal(int,JDBCStore,ClassMapping)",44,82
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.buildSequence(),33,94
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.refreshSequence(),20,37
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.dropSequence(),20,38
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.getSequence(Connection),28,48
"org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.updateSql(Connection,String)",29,47
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.main(String[]),62,97
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.main(String[]).$1.run(Options),11,18
"org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.run(JDBCConfiguration,String[],Options)",17,29
"org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.run(JDBCConfiguration,String[],String)",38,75
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.setSchema(String),5,9
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.getSchema(),4,5
org.apache.openjpa.jdbc.kernel.NativeJDBCSeq.getSchemaIdentifier(),2,4
org.apache.openjpa.lib.util.TestTemporaryClassLoader.testTemporaryClassLoader(),17,29
org.apache.openjpa.util.GeneralException.GeneralException(),1,1
org.apache.openjpa.util.GeneralException.GeneralException(String),3,4
org.apache.openjpa.util.GeneralException.GeneralException(Message),3,4
org.apache.openjpa.util.GeneralException.GeneralException(Throwable),3,4
"org.apache.openjpa.util.GeneralException.GeneralException(Message,Throwable)",5,7
"org.apache.openjpa.util.GeneralException.GeneralException(String,Throwable)",5,7
org.apache.openjpa.util.GeneralException.getType(),1,1
"org.apache.openjpa.jdbc.kernel.exps.CompareExpression.CompareExpression(Val,Val,String)",8,15
"org.apache.openjpa.jdbc.kernel.exps.CompareExpression.initialize(Select,ExpContext,Map)",11,24
"org.apache.openjpa.jdbc.kernel.exps.CompareExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",27,76
"org.apache.openjpa.jdbc.kernel.exps.CompareExpression.selectColumns(Select,ExpContext,ExpState,boolean)",10,26
org.apache.openjpa.jdbc.kernel.exps.CompareExpression.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.datacache.PartitionedDataCache.initialize(DataCacheManager),7,13
org.apache.openjpa.datacache.PartitionedDataCache.setPartitionType(String),32,68
org.apache.openjpa.datacache.PartitionedDataCache.setPartitions(String),37,101
org.apache.openjpa.datacache.PartitionedDataCache.getPartitions(),8,9
"org.apache.openjpa.datacache.PartitionedDataCache.getPartition(String,boolean)",7,8
org.apache.openjpa.datacache.PartitionedDataCache.getPartitionNames(),8,10
org.apache.openjpa.datacache.PartitionedDataCache.isPartitioned(),4,4
org.apache.openjpa.datacache.PartitionedDataCache.endConfiguration(),9,10
org.apache.openjpa.datacache.PartitionedDataCache.parsePartitionProperties(String),33,89
org.apache.openjpa.kernel.exps.WildcardMatch.getTag(),2,3
org.apache.openjpa.kernel.exps.WildcardMatch.expectsArguments(),2,2
org.apache.openjpa.kernel.exps.WildcardMatch.expectsTarget(),2,2
"org.apache.openjpa.kernel.exps.WildcardMatch.evaluate(Object,Class,Object[],Class[],Object,StoreContext)",23,41
"org.apache.openjpa.kernel.exps.WildcardMatch.getType(Class,Class[])",4,4
org.apache.openjpa.jdbc.kernel.exps.All.All(Val),1,3
org.apache.openjpa.jdbc.kernel.exps.All.getOperator(),2,2
"org.apache.openjpa.event.LifecycleEvent.LifecycleEvent(Object,int)",9,15
"org.apache.openjpa.event.LifecycleEvent.LifecycleEvent(Object,Object,int)",12,26
org.apache.openjpa.event.LifecycleEvent.getType(),2,4
org.apache.openjpa.event.LifecycleEvent.getRelated(),2,3
org.apache.openjpa.kernel.DelegatingSeq.DelegatingSeq(Seq),5,8
"org.apache.openjpa.kernel.DelegatingSeq.DelegatingSeq(Seq,RuntimeExceptionTranslator)",10,25
org.apache.openjpa.kernel.DelegatingSeq.getDelegate(),3,5
org.apache.openjpa.kernel.DelegatingSeq.getInnermostDelegate(),4,9
org.apache.openjpa.kernel.DelegatingSeq.hashCode(),4,6
org.apache.openjpa.kernel.DelegatingSeq.equals(Object),6,11
org.apache.openjpa.kernel.DelegatingSeq.translate(RuntimeException),5,11
org.apache.openjpa.kernel.DelegatingSeq.setType(int),6,10
"org.apache.openjpa.kernel.DelegatingSeq.next(StoreContext,ClassMetaData)",10,13
"org.apache.openjpa.kernel.DelegatingSeq.current(StoreContext,ClassMetaData)",11,15
"org.apache.openjpa.kernel.DelegatingSeq.allocate(int,StoreContext,ClassMetaData)",11,16
org.apache.openjpa.kernel.DelegatingSeq.close(),5,6
"jpa.tools.swing.IndexedMap<K,V>.clear()",2,2
"jpa.tools.swing.IndexedMap<K,V>.containsKey(Object)",5,10
"jpa.tools.swing.IndexedMap<K,V>.containsValue(Object)",4,7
"jpa.tools.swing.IndexedMap<K,V>.entrySet()",9,11
"jpa.tools.swing.IndexedMap<K,V>.get(Object)",4,5
"jpa.tools.swing.IndexedMap<K,V>.isEmpty()",4,5
"jpa.tools.swing.IndexedMap<K,V>.keySet()",7,12
"jpa.tools.swing.IndexedMap<K,V>.put(K,V)",9,17
"jpa.tools.swing.IndexedMap<K,V>.putAll(Map<>)",3,3
"jpa.tools.swing.IndexedMap<K,V>.remove(Object)",5,7
"jpa.tools.swing.IndexedMap<K,V>.size()",3,5
"jpa.tools.swing.IndexedMap<K,V>.values()",10,15
"jpa.tools.swing.IndexedMap<K,V>.indexOf(Object)",4,6
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess.setVersion(int),2,5
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess.getVersion(),1,2
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess.setStrProp(String),6,9
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess.getStrProp(),4,5
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess.equals(Object),11,31
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess.setStrField(String),4,10
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess.getStrField(),3,5
"org.apache.openjpa.trader.client.TradeOrderWindow.TradeOrderWindow(OpenTrader,int,int)",56,182
"org.apache.openjpa.trader.client.TradeOrderWindow.TradeOrderWindow(OpenTrader,int,int).$1.onKeyUp(KeyUpEvent)",25,54
"org.apache.openjpa.trader.client.TradeOrderWindow.TradeOrderWindow(OpenTrader,int,int).$2.onKeyUp(KeyUpEvent)",21,49
"org.apache.openjpa.trader.client.TradeOrderWindow.TradeOrderWindow(OpenTrader,int,int).$3.onChange(ChangeEvent)",5,10
"org.apache.openjpa.trader.client.TradeOrderWindow.TradeOrderWindow(OpenTrader,int,int).$4.onClick(ClickEvent)",16,21
"org.apache.openjpa.trader.client.TradeOrderWindow.TradeOrderWindow(OpenTrader,int,int).$5.onClick(ClickEvent)",17,23
"org.apache.openjpa.trader.client.TradeOrderWindow.initialize(Stock,boolean)",29,115
org.apache.openjpa.trader.client.TradeOrderWindow.addHelp(String),14,24
org.apache.openjpa.trader.client.TradeOrderWindow.getSelectedStock(),7,9
org.apache.openjpa.trader.client.TradeOrderWindow.validateData(),14,49
"org.apache.openjpa.trader.client.TradeOrderWindow.calculateDiff(double,double)",5,5
org.apache.openjpa.trader.client.TradeOrderWindow.truncate(double),5,13
org.apache.openjpa.trader.client.TradeOrderWindow.onStockUpdated(ServiceEvent.StockUpdated),11,24
org.apache.openjpa.trader.client.TradeOrderWindow.AskCallback.onSuccess(Ask),8,10
org.apache.openjpa.trader.client.TradeOrderWindow.AskCallback.onFailure(Throwable),6,7
org.apache.openjpa.trader.client.TradeOrderWindow.BidCallback.onSuccess(Bid),9,11
org.apache.openjpa.trader.client.TradeOrderWindow.BidCallback.onFailure(Throwable),6,7
org.apache.openjpa.event.DirtyListener.beforeDirty(LifecycleEvent),6,7
org.apache.openjpa.event.DirtyListener.afterDirty(LifecycleEvent),6,7
org.apache.openjpa.event.DirtyListener.beforeDirtyFlushed(LifecycleEvent),8,10
org.apache.openjpa.event.DirtyListener.afterDirtyFlushed(LifecycleEvent),8,10
"org.apache.openjpa.lib.conf.PluginValue.PluginValue(String,boolean)",5,8
org.apache.openjpa.lib.conf.PluginValue.isSingleton(),2,4
org.apache.openjpa.lib.conf.PluginValue.getClassName(),3,5
org.apache.openjpa.lib.conf.PluginValue.setClassName(String),10,21
org.apache.openjpa.lib.conf.PluginValue.getProperties(),4,5
org.apache.openjpa.lib.conf.PluginValue.setProperties(String),10,20
"org.apache.openjpa.lib.conf.PluginValue.instantiate(Class<>,Configuration,boolean)",31,66
"org.apache.openjpa.lib.conf.PluginValue.getIncompatiblePluginMessage(Object,Class<>)",9,19
"org.apache.openjpa.lib.conf.PluginValue.configure(Object,Configuration,boolean)",12,19
"org.apache.openjpa.lib.conf.PluginValue.set(Object,boolean)",10,14
org.apache.openjpa.lib.conf.PluginValue.getString(),6,7
org.apache.openjpa.lib.conf.PluginValue.setString(String),12,20
org.apache.openjpa.lib.conf.PluginValue.getValueType(),3,4
org.apache.openjpa.lib.conf.PluginValue.objectChanged(),6,10
org.apache.openjpa.lib.conf.PluginValue.getInternalString(),5,6
org.apache.openjpa.lib.conf.PluginValue.setInternalString(String),7,8
org.apache.openjpa.lib.meta.MetaDataIteratorChain.MetaDataIteratorChain(),5,5
"org.apache.openjpa.lib.meta.MetaDataIteratorChain.MetaDataIteratorChain(MetaDataIterator,MetaDataIterator)",11,26
org.apache.openjpa.lib.meta.MetaDataIteratorChain.addIterator(MetaDataIterator),12,22
org.apache.openjpa.lib.meta.MetaDataIteratorChain.hasNext(),8,22
org.apache.openjpa.lib.meta.MetaDataIteratorChain.next(),4,5
org.apache.openjpa.lib.meta.MetaDataIteratorChain.getInputStream(),5,11
org.apache.openjpa.lib.meta.MetaDataIteratorChain.getFile(),4,8
org.apache.openjpa.lib.meta.MetaDataIteratorChain.close(),6,9
"org.apache.openjpa.persistence.ParameterImpl<T>.ParameterImpl(Integer,Class<T>)",11,24
"org.apache.openjpa.persistence.ParameterImpl<T>.ParameterImpl(String,Class<T>)",11,24
org.apache.openjpa.persistence.ParameterImpl<T>.getName(),2,3
org.apache.openjpa.persistence.ParameterImpl<T>.getPosition(),2,3
org.apache.openjpa.persistence.ParameterImpl<T>.getParameterType(),4,5
org.apache.openjpa.persistence.ParameterImpl<T>.equals(Object),5,13
org.apache.openjpa.persistence.ParameterImpl<T>.hashCode(),7,15
org.apache.openjpa.persistence.ParameterImpl<T>.toString(),9,26
org.apache.openjpa.jdbc.meta.strats.ClassNameDiscriminatorStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.ClassNameDiscriminatorStrategy.getJavaType(),4,5
org.apache.openjpa.jdbc.meta.strats.ClassNameDiscriminatorStrategy.getDiscriminatorValue(ClassMapping),8,9
"org.apache.openjpa.jdbc.meta.strats.ClassNameDiscriminatorStrategy.getClass(Object,JDBCStore)",9,15
org.apache.openjpa.jdbc.meta.strats.ClassNameDiscriminatorStrategy.loadSubclasses(JDBCStore),47,126
org.apache.openjpa.jdbc.meta.strats.ClassNameDiscriminatorStrategy.getClassLoader(JDBCStore),13,20
org.apache.openjpa.kernel.exps.AggregateListener.getTag(),4,5
org.apache.openjpa.kernel.exps.AggregateListener.expectsArguments(),11,18
"org.apache.openjpa.kernel.exps.AggregateListener.evaluate(Collection,Class[],Collection,StoreContext)",34,54
org.apache.openjpa.kernel.exps.AggregateListener.getType(Class[]),9,14
"org.apache.openjpa.persistence.TransactionRequiredException.TransactionRequiredException(Message,Throwable[],Object,boolean)",10,15
"org.apache.openjpa.persistence.TransactionRequiredException.TransactionRequiredException(String,Throwable[],Object,boolean)",10,17
org.apache.openjpa.persistence.TransactionRequiredException.getType(),2,2
org.apache.openjpa.persistence.TransactionRequiredException.getSubtype(),4,4
org.apache.openjpa.persistence.TransactionRequiredException.isFatal(),1,2
org.apache.openjpa.persistence.TransactionRequiredException.getCause(),5,6
org.apache.openjpa.persistence.TransactionRequiredException.getNestedThrowables(),5,8
org.apache.openjpa.persistence.TransactionRequiredException.getFailedObject(),2,4
org.apache.openjpa.persistence.TransactionRequiredException.toString(),2,4
org.apache.openjpa.persistence.TransactionRequiredException.printStackTrace(),5,8
org.apache.openjpa.persistence.TransactionRequiredException.printStackTrace(PrintStream),7,12
org.apache.openjpa.persistence.TransactionRequiredException.printStackTrace(PrintWriter),7,12
org.apache.openjpa.persistence.TransactionRequiredException.writeObject(ObjectOutputStream),11,22
org.apache.openjpa.persistence.TransactionRequiredException.readObject(ObjectInputStream),10,17
org.apache.openjpa.example.gallery.model.Album.setId(long),1,1
org.apache.openjpa.example.gallery.model.Album.getId(),0,0
org.apache.openjpa.example.gallery.model.Album.setName(String),3,6
org.apache.openjpa.example.gallery.model.Album.getName(),2,3
org.apache.openjpa.example.gallery.model.Album.setImages(List<Image>),4,7
org.apache.openjpa.example.gallery.model.Album.getImages(),3,4
org.apache.openjpa.example.gallery.model.Album.setCreator(List<Creator>),3,7
org.apache.openjpa.example.gallery.model.Album.getCreator(),2,4
org.apache.openjpa.jdbc.kernel.exps.Null.getType(),2,2
org.apache.openjpa.jdbc.kernel.exps.Null.setImplicitType(Class),3,4
org.apache.openjpa.jdbc.kernel.exps.Null.getValue(Object[]),3,4
"org.apache.openjpa.jdbc.kernel.exps.Null.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",8,10
"org.apache.openjpa.jdbc.kernel.exps.Null.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",10,14
org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.getKeyColumns(ClassMapping),6,9
org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.getValueColumns(ClassMapping),6,6
"org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.selectKey(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Joins)",15,33
"org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.selectValue(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Joins)",13,21
"org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.getResults(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,Joins[],boolean)",33,71
"org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.getResults(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,Joins[],boolean).$1.select(Select,int)",25,54
"org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.loadKey(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",20,37
"org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.loadValue(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",21,31
"org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.joinKeyRelation(Joins,ClassMapping)",11,24
org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.map(boolean),32,98
org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.initialize(),10,13
"org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",13,17
"org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager,Map)",35,96
"org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",59,239
"org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.joinRelation(Joins,boolean,boolean)",12,16
"org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.joinKeyRelation(Joins,boolean,boolean)",21,60
"org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.toDataStoreValue(Object,JDBCStore)",12,20
"org.apache.openjpa.jdbc.meta.strats.RelationHandlerMapTableFieldStrategy.toKeyDataStoreValue(Object,JDBCStore)",11,20
openbook.tools.converter.ParseTokenListener.ParseTokenListener(),6,10
openbook.tools.converter.ParseTokenListener.ParseTokenListener(TokenRenderer),10,17
"openbook.tools.converter.ParseTokenListener.ParseTokenListener(TokenRenderer,PrintStream)",14,28
openbook.tools.converter.ParseTokenListener.enterDecision(int),3,4
openbook.tools.converter.ParseTokenListener.exitDecision(int),3,3
openbook.tools.converter.ParseTokenListener.consumeToken(Token),10,15
openbook.tools.converter.ParseTokenListener.consumeHiddenToken(Token),23,58
openbook.tools.converter.ParseTokenListener.changeLine(int),10,31
org.apache.openjpa.lib.util.TypedProperties.TypedProperties(),3,3
org.apache.openjpa.lib.util.TypedProperties.TypedProperties(Properties),6,13
org.apache.openjpa.lib.util.TypedProperties.getBooleanProperty(String),5,9
"org.apache.openjpa.lib.util.TypedProperties.getBooleanProperty(String,boolean)",8,19
org.apache.openjpa.lib.util.TypedProperties.getFloatProperty(String),9,13
"org.apache.openjpa.lib.util.TypedProperties.getFloatProperty(String,float)",10,19
org.apache.openjpa.lib.util.TypedProperties.getDoubleProperty(String),9,13
"org.apache.openjpa.lib.util.TypedProperties.getDoubleProperty(String,double)",10,19
org.apache.openjpa.lib.util.TypedProperties.getLongProperty(String),9,13
"org.apache.openjpa.lib.util.TypedProperties.getLongProperty(String,long)",10,19
org.apache.openjpa.lib.util.TypedProperties.getIntProperty(String),9,13
"org.apache.openjpa.lib.util.TypedProperties.getIntProperty(String,int)",11,20
"org.apache.openjpa.lib.util.TypedProperties.setProperty(String,String)",12,31
"org.apache.openjpa.lib.util.TypedProperties.setProperty(String,boolean)",8,21
"org.apache.openjpa.lib.util.TypedProperties.setProperty(String,double)",8,21
"org.apache.openjpa.lib.util.TypedProperties.setProperty(String,float)",8,21
"org.apache.openjpa.lib.util.TypedProperties.setProperty(String,int)",8,21
"org.apache.openjpa.lib.util.TypedProperties.setProperty(String,long)",8,21
org.apache.openjpa.lib.util.TypedProperties.removeProperty(String),6,14
"org.apache.openjpa.lib.util.TypedProperties.removeProperty(String,String)",7,17
org.apache.openjpa.lib.util.TypedProperties.removeBooleanProperty(String),7,18
"org.apache.openjpa.lib.util.TypedProperties.removeBooleanProperty(String,boolean)",7,16
org.apache.openjpa.lib.util.TypedProperties.removeDoubleProperty(String),9,19
"org.apache.openjpa.lib.util.TypedProperties.removeDoubleProperty(String,double)",11,20
org.apache.openjpa.lib.util.TypedProperties.removeFloatProperty(String),9,19
"org.apache.openjpa.lib.util.TypedProperties.removeFloatProperty(String,float)",11,20
org.apache.openjpa.lib.util.TypedProperties.removeIntProperty(String),10,20
"org.apache.openjpa.lib.util.TypedProperties.removeIntProperty(String,int)",11,20
org.apache.openjpa.lib.util.TypedProperties.removeLongProperty(String),9,19
"org.apache.openjpa.lib.util.TypedProperties.removeLongProperty(String,long)",11,20
"org.apache.openjpa.jdbc.meta.ClassMapping.ClassMapping(Class,MappingRepository)",12,23
org.apache.openjpa.jdbc.meta.ClassMapping.ClassMapping(ValueMetaData),15,26
org.apache.openjpa.jdbc.meta.ClassMapping.getDiscriminator(),2,4
org.apache.openjpa.jdbc.meta.ClassMapping.getVersion(),2,5
"org.apache.openjpa.jdbc.meta.ClassMapping.getObjectId(JDBCStore,Result,ForeignKey,boolean,Joins)",27,57
"org.apache.openjpa.jdbc.meta.ClassMapping.getObjectId(ClassMapping,JDBCStore,Result,ForeignKey,boolean,Joins)",81,222
"org.apache.openjpa.jdbc.meta.ClassMapping.isSelfReference(ForeignKey,Column[])",7,12
"org.apache.openjpa.jdbc.meta.ClassMapping.toDataStoreValue(Object,Column[],JDBCStore)",41,102
org.apache.openjpa.jdbc.meta.ClassMapping.assertJoinable(Column),13,24
org.apache.openjpa.jdbc.meta.ClassMapping.getJoinable(Column),16,43
"org.apache.openjpa.jdbc.meta.ClassMapping.setJoinable(Column,Joinable)",14,31
org.apache.openjpa.jdbc.meta.ClassMapping.isForeignKeyObjectId(ForeignKey),32,100
org.apache.openjpa.jdbc.meta.ClassMapping.getMappingInfo(),4,8
org.apache.openjpa.jdbc.meta.ClassMapping.getStrategy(),3,6
"org.apache.openjpa.jdbc.meta.ClassMapping.setStrategy(ClassStrategy,Boolean)",15,42
org.apache.openjpa.jdbc.meta.ClassMapping.getTable(),3,6
org.apache.openjpa.jdbc.meta.ClassMapping.setTable(Table),4,9
org.apache.openjpa.jdbc.meta.ClassMapping.getPrimaryKeyColumns(),26,66
org.apache.openjpa.jdbc.meta.ClassMapping.setPrimaryKeyColumns(Column[]),16,26
org.apache.openjpa.jdbc.meta.ClassMapping.getColumnIO(),6,9
org.apache.openjpa.jdbc.meta.ClassMapping.setColumnIO(ColumnIO),6,8
org.apache.openjpa.jdbc.meta.ClassMapping.getJoinForeignKey(),9,14
org.apache.openjpa.jdbc.meta.ClassMapping.setJoinForeignKey(ForeignKey),10,15
org.apache.openjpa.jdbc.meta.ClassMapping.refSchemaComponents(),17,35
org.apache.openjpa.jdbc.meta.ClassMapping.clearMapping(),14,19
org.apache.openjpa.jdbc.meta.ClassMapping.syncMappingInfo(),14,27
org.apache.openjpa.jdbc.meta.ClassMapping.setDescribedType(Class),10,20
org.apache.openjpa.jdbc.meta.ClassMapping.getSubclassFetchMode(),13,31
org.apache.openjpa.jdbc.meta.ClassMapping.setSubclassFetchMode(int),9,17
org.apache.openjpa.jdbc.meta.ClassMapping.getMappingRepository(),9,15
org.apache.openjpa.jdbc.meta.ClassMapping.getEmbeddingMapping(),10,19
org.apache.openjpa.jdbc.meta.ClassMapping.isMapped(),11,21
org.apache.openjpa.jdbc.meta.ClassMapping.getPCSuperclassMapping(),9,17
org.apache.openjpa.jdbc.meta.ClassMapping.getMappedPCSuperclassMapping(),10,20
org.apache.openjpa.jdbc.meta.ClassMapping.getJoinablePCSuperclassMapping(),9,20
org.apache.openjpa.jdbc.meta.ClassMapping.getPCSubclassMappings(),11,17
org.apache.openjpa.jdbc.meta.ClassMapping.getMappedPCSubclassMappings(),12,20
org.apache.openjpa.jdbc.meta.ClassMapping.getJoinablePCSubclassMappings(),19,50
org.apache.openjpa.jdbc.meta.ClassMapping.isSubJoinable(ClassMapping),8,16
org.apache.openjpa.jdbc.meta.ClassMapping.getIndependentAssignableMappings(),34,96
org.apache.openjpa.jdbc.meta.ClassMapping.getFieldMappings(),11,15
org.apache.openjpa.jdbc.meta.ClassMapping.getDeclaredFieldMappings(),12,18
org.apache.openjpa.jdbc.meta.ClassMapping.getPrimaryKeyFieldMappings(),13,21
org.apache.openjpa.jdbc.meta.ClassMapping.getVersionFieldMapping(),10,18
org.apache.openjpa.jdbc.meta.ClassMapping.getDefaultFetchGroupFieldMappings(),12,18
org.apache.openjpa.jdbc.meta.ClassMapping.getDefinedFieldMappings(),12,18
org.apache.openjpa.jdbc.meta.ClassMapping.getFieldMappingsInListingOrder(),12,18
org.apache.openjpa.jdbc.meta.ClassMapping.getDefinedFieldMappingsInListingOrder(),13,21
org.apache.openjpa.jdbc.meta.ClassMapping.getFieldMapping(int),10,17
org.apache.openjpa.jdbc.meta.ClassMapping.getDeclaredFieldMapping(int),11,20
org.apache.openjpa.jdbc.meta.ClassMapping.getFieldMapping(String),11,18
org.apache.openjpa.jdbc.meta.ClassMapping.getDeclaredFieldMapping(String),12,21
org.apache.openjpa.jdbc.meta.ClassMapping.getDeclaredUnmanagedFieldMappings(),13,21
"org.apache.openjpa.jdbc.meta.ClassMapping.addDeclaredFieldMapping(String,Class)",14,26
org.apache.openjpa.jdbc.meta.ClassMapping.resolveMapping(boolean),71,185
org.apache.openjpa.jdbc.meta.ClassMapping.resolveNonRelationMappings(),28,74
org.apache.openjpa.jdbc.meta.ClassMapping.initializeMapping(),13,29
org.apache.openjpa.jdbc.meta.ClassMapping.clearDefinedFieldCache(),6,9
org.apache.openjpa.jdbc.meta.ClassMapping.clearSubclassCache(),6,9
org.apache.openjpa.jdbc.meta.ClassMapping.copy(ClassMetaData),11,18
org.apache.openjpa.jdbc.meta.ClassMapping.validateDataStoreExtensionPrefix(String),8,10
org.apache.openjpa.jdbc.meta.ClassMapping.getAlias(),3,4
org.apache.openjpa.jdbc.meta.ClassMapping.map(boolean),3,5
org.apache.openjpa.jdbc.meta.ClassMapping.initialize(),2,3
"org.apache.openjpa.jdbc.meta.ClassMapping.insert(OpenJPAStateManager,JDBCStore,RowManager)",9,13
"org.apache.openjpa.jdbc.meta.ClassMapping.update(OpenJPAStateManager,JDBCStore,RowManager)",9,13
"org.apache.openjpa.jdbc.meta.ClassMapping.delete(OpenJPAStateManager,JDBCStore,RowManager)",9,13
"org.apache.openjpa.jdbc.meta.ClassMapping.isCustomInsert(OpenJPAStateManager,JDBCStore)",7,11
"org.apache.openjpa.jdbc.meta.ClassMapping.isCustomUpdate(OpenJPAStateManager,JDBCStore)",7,11
"org.apache.openjpa.jdbc.meta.ClassMapping.isCustomDelete(OpenJPAStateManager,JDBCStore)",7,11
"org.apache.openjpa.jdbc.meta.ClassMapping.customInsert(OpenJPAStateManager,JDBCStore)",9,13
"org.apache.openjpa.jdbc.meta.ClassMapping.customUpdate(OpenJPAStateManager,JDBCStore)",9,13
"org.apache.openjpa.jdbc.meta.ClassMapping.customDelete(OpenJPAStateManager,JDBCStore)",9,13
org.apache.openjpa.jdbc.meta.ClassMapping.setClassMapping(ClassMapping),4,8
org.apache.openjpa.jdbc.meta.ClassMapping.isPrimaryKeyObjectId(boolean),4,7
"org.apache.openjpa.jdbc.meta.ClassMapping.joinSuperclass(Joins,boolean)",4,9
"org.apache.openjpa.jdbc.meta.ClassMapping.supportsEagerSelect(Select,OpenJPAStateManager,JDBCStore,ClassMapping,JDBCFetchConfiguration)",13,24
"org.apache.openjpa.jdbc.meta.ClassMapping.customLoad(JDBCStore,boolean,JDBCFetchConfiguration,long,long)",15,27
"org.apache.openjpa.jdbc.meta.ClassMapping.customLoad(OpenJPAStateManager,JDBCStore,PCState,JDBCFetchConfiguration)",12,20
"org.apache.openjpa.jdbc.meta.ClassMapping.customLoad(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",12,21
org.apache.openjpa.jdbc.meta.ClassMapping.assertStrategy(),3,6
"org.apache.openjpa.jdbc.meta.ClassMapping.getFieldMappings(Column[],boolean)",15,46
"org.apache.openjpa.jdbc.meta.ClassMapping.hasColumn(Column,boolean)",20,49
"org.apache.openjpa.jdbc.meta.ClassMapping.contains(Column[],Column)",4,8
"org.apache.openjpa.jdbc.meta.ClassMapping.getValueFromUnmanagedInstance(Object,Column[],boolean)",28,56
org.apache.openjpa.jdbc.meta.ClassMapping.isVerticalStrategy(),9,14
reversemapping.Main.print(String),5,6
reversemapping.Main.main(String[]),83,276
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.getExpectedJavaType(),7,13
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.update(OpenJPAStateManager,Row)",10,12
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.isCustom(OpenJPAStateManager,JDBCStore)",7,9
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.putData(OpenJPAStateManager,ResultSet,DBDictionary)",9,14
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.map(boolean),33,119
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.isCustomInsert(OpenJPAStateManager,JDBCStore)",9,12
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.isCustomUpdate(OpenJPAStateManager,JDBCStore)",9,12
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",13,24
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",12,24
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",9,14
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.customInsert(OpenJPAStateManager,JDBCStore)",9,12
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.customUpdate(OpenJPAStateManager,JDBCStore)",42,94
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.supportsSelect(Select,int,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",14,22
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.select(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",15,30
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",17,27
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",25,49
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.load(Column,Result,Joins)",10,17
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.join(Joins,boolean)",5,11
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.loadProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)",14,21
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.isVersionable(),1,1
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.where(OpenJPAStateManager,JDBCStore,RowManager,Object)",10,12
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedLobFieldStrategy.getValue(OpenJPAStateManager),4,4
org.apache.openjpa.jdbc.identifier.ColumnDefIdentifierRule.ColumnDefIdentifierRule(),13,18
org.apache.openjpa.jdbc.schema.SchemaGenerator.SchemaGenerator(JDBCConfiguration),45,94
org.apache.openjpa.jdbc.schema.SchemaGenerator.parseSchemasList(DBIdentifier[]),37,142
org.apache.openjpa.jdbc.schema.SchemaGenerator.getIndexes(),3,5
org.apache.openjpa.jdbc.schema.SchemaGenerator.setIndexes(boolean),4,9
org.apache.openjpa.jdbc.schema.SchemaGenerator.getForeignKeys(),5,7
org.apache.openjpa.jdbc.schema.SchemaGenerator.setForeignKeys(boolean),6,11
org.apache.openjpa.jdbc.schema.SchemaGenerator.getPrimaryKeys(),5,7
org.apache.openjpa.jdbc.schema.SchemaGenerator.setPrimaryKeys(boolean),6,11
org.apache.openjpa.jdbc.schema.SchemaGenerator.getSequences(),4,5
org.apache.openjpa.jdbc.schema.SchemaGenerator.setSequences(boolean),5,9
org.apache.openjpa.jdbc.schema.SchemaGenerator.getOpenJPATables(),9,12
org.apache.openjpa.jdbc.schema.SchemaGenerator.setOpenJPATables(boolean),10,17
org.apache.openjpa.jdbc.schema.SchemaGenerator.getSchemaGroup(),2,5
org.apache.openjpa.jdbc.schema.SchemaGenerator.setSchemaGroup(SchemaGroup),5,8
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSchemas(),20,31
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSchemas(String[]),11,17
org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSchemas(DBIdentifier[]),43,191
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSchema(String,String[])",13,27
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSchema(DBIdentifier,DBIdentifier[])",45,106
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generatePrimaryKeys(String,String[])",25,49
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generatePrimaryKeys(DBIdentifier,DBIdentifier[])",39,80
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generateIndexes(String,String[])",23,46
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generateIndexes(DBIdentifier,DBIdentifier[])",36,76
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generateForeignKeys(String,String[])",25,49
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generateForeignKeys(DBIdentifier,DBIdentifier[])",39,80
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generateTables(String,String,Connection,DatabaseMetaData)",15,29
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generateTables(DBIdentifier,DBIdentifier,Connection,DatabaseMetaData)",66,301
"org.apache.openjpa.jdbc.schema.SchemaGenerator.isAllowedTable(DBIdentifier,DBIdentifier)",12,55
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generatePrimaryKeys(String,String,Connection,DatabaseMetaData)",17,35
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generatePrimaryKeys(DBIdentifier,DBIdentifier,Connection,DatabaseMetaData)",45,175
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generateIndexes(String,String,Connection,DatabaseMetaData)",16,32
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generateIndexes(DBIdentifier,DBIdentifier,Connection,DatabaseMetaData)",60,216
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generateForeignKeys(String,String,Connection,DatabaseMetaData)",16,34
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generateForeignKeys(DBIdentifier,DBIdentifier,Connection,DatabaseMetaData)",85,360
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSequences(String,String,Connection,DatabaseMetaData)",18,35
"org.apache.openjpa.jdbc.schema.SchemaGenerator.generateSequences(DBIdentifier,DBIdentifier,Connection,DatabaseMetaData)",44,131
org.apache.openjpa.jdbc.schema.SchemaGenerator.fireGenerationEvent(Object),19,40
org.apache.openjpa.jdbc.schema.SchemaGenerator.addListener(Listener),10,18
org.apache.openjpa.jdbc.schema.SchemaGenerator.removeListener(Listener),10,17
org.apache.openjpa.jdbc.schema.SchemaGenerator.getTables(DBIdentifier),14,47
org.apache.openjpa.jdbc.schema.SchemaGenerator.Listener.schemaObjectGenerated(Event),4,4
"org.apache.openjpa.jdbc.schema.SchemaGenerator.Event.Event(Object,int)",3,5
org.apache.openjpa.jdbc.schema.SchemaGenerator.Event.getTotal(),1,2
org.apache.openjpa.jdbc.schema.SchemaGenerator.getConn(),4,6
org.apache.openjpa.jdbc.schema.SchemaGenerator.closeConn(),5,9
org.apache.openjpa.jdbc.sql.AbstractDB2Dictionary.AbstractDB2Dictionary(),68,136
"org.apache.openjpa.jdbc.sql.AbstractDB2Dictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",15,54
"org.apache.openjpa.jdbc.sql.AbstractDB2Dictionary.substring(SQLBuffer,FilterValue,FilterValue,FilterValue)",15,65
org.apache.openjpa.kernel.PNewDeletedState.commit(StateManagerImpl),4,4
org.apache.openjpa.kernel.PNewDeletedState.commitRetain(StateManagerImpl),5,5
org.apache.openjpa.kernel.PNewDeletedState.rollback(StateManagerImpl),4,4
org.apache.openjpa.kernel.PNewDeletedState.rollbackRestore(StateManagerImpl),6,8
org.apache.openjpa.kernel.PNewDeletedState.persist(StateManagerImpl),7,8
org.apache.openjpa.kernel.PNewDeletedState.nontransactional(StateManagerImpl),6,7
org.apache.openjpa.kernel.PNewDeletedState.release(StateManagerImpl),6,7
"org.apache.openjpa.kernel.PNewDeletedState.beforeWrite(StateManagerImpl,int,boolean)",8,9
"org.apache.openjpa.kernel.PNewDeletedState.beforeOptimisticWrite(StateManagerImpl,int,boolean)",9,10
org.apache.openjpa.kernel.PNewDeletedState.isTransactional(),1,1
org.apache.openjpa.kernel.PNewDeletedState.isPersistent(),1,1
org.apache.openjpa.kernel.PNewDeletedState.isNew(),0,0
org.apache.openjpa.kernel.PNewDeletedState.isDeleted(),1,1
org.apache.openjpa.kernel.PNewDeletedState.isDirty(),1,1
org.apache.openjpa.kernel.PNewDeletedState.toString(),3,4
"org.apache.openjpa.kernel.exps.CollectionParam.CollectionParam(Object,Class)",9,14
org.apache.openjpa.kernel.exps.CollectionParam.getParameterKey(),3,4
org.apache.openjpa.kernel.exps.CollectionParam.getType(),1,2
org.apache.openjpa.kernel.exps.CollectionParam.setImplicitType(Class),3,6
org.apache.openjpa.kernel.exps.CollectionParam.setIndex(int),2,5
org.apache.openjpa.kernel.exps.CollectionParam.getValue(Object[]),4,6
"org.apache.openjpa.kernel.exps.CollectionParam.eval(Object,Object,StoreContext,Object[])",9,13
org.apache.openjpa.kernel.exps.All.All(Val),1,3
org.apache.openjpa.kernel.exps.All.getType(Class),5,13
"org.apache.openjpa.kernel.exps.All.operate(Object,Class)",7,8
"org.apache.openjpa.kernel.exps.Resolver.classForName(String,String[])",18,25
org.apache.openjpa.kernel.exps.Resolver.getFilterListener(String),5,10
org.apache.openjpa.kernel.exps.Resolver.getAggregateListener(String),6,10
org.apache.openjpa.kernel.exps.Resolver.getConfiguration(),2,5
org.apache.openjpa.kernel.exps.Resolver.getQueryContext(),5,9
org.apache.openjpa.persistence.OpenJPAQuerySPI<X>.addFilterListener(FilterListener),6,12
org.apache.openjpa.persistence.OpenJPAQuerySPI<X>.removeFilterListener(FilterListener),5,12
org.apache.openjpa.persistence.OpenJPAQuerySPI<X>.addAggregateListener(AggregateListener),6,12
org.apache.openjpa.persistence.OpenJPAQuerySPI<X>.removeAggregateListener(AggregateListener),5,12
org.apache.openjpa.meta.XMLMetaData.isXmlRootElement(),4,7
org.apache.openjpa.meta.XMLMetaData.isXmlElement(),3,5
org.apache.openjpa.meta.XMLMetaData.isXmlAttribute(),3,5
org.apache.openjpa.meta.XMLMetaData.getFieldMapping(String),8,16
org.apache.openjpa.meta.XMLMetaData.setType(Class),2,5
org.apache.openjpa.meta.XMLMetaData.getType(),1,2
org.apache.openjpa.meta.XMLMetaData.getTypeCode(),2,4
org.apache.openjpa.meta.XMLMetaData.getName(),3,4
org.apache.openjpa.meta.XMLMetaData.getXmlname(),7,9
org.apache.openjpa.meta.XMLMetaData.getXmlnamespace(),4,4
org.apache.openjpa.meta.XMLMetaData.setName(String),5,11
org.apache.openjpa.meta.XMLMetaData.setXmlname(String),8,15
org.apache.openjpa.meta.XMLMetaData.setXmlnamespace(String),5,8
org.apache.openjpa.meta.XMLMetaData.setXmltype(int),6,10
org.apache.openjpa.meta.XMLMetaData.getXmltype(),1,3
org.apache.openjpa.meta.XMLMetaData.setXmlRootElement(boolean),4,7
"org.apache.openjpa.meta.XMLMetaData.addField(String,XMLMetaData)",7,8
"org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.EndsWithExpression(Val,Val)",5,12
"org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.initialize(Select,ExpContext,Map)",11,24
"org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",39,142
"org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.selectColumns(Select,ExpContext,ExpState,boolean)",10,26
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.acceptVisit(ExpressionVisitor),7,17
"org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.StringLengthDifferenceFilterValue(Select,ExpContext,BinaryOpExpState,String,String)",13,24
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.getType(),1,1
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.length(),1,1
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.appendTo(SQLBuffer),4,6
"org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.appendTo(SQLBuffer,int)",10,29
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.getColumnAlias(Column),6,10
"org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.getColumnAlias(String,Table)",7,13
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.toDataStoreValue(Object),5,7
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.isConstant(),1,1
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.getValue(),2,2
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.getSQLValue(),3,3
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.isPath(),1,1
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.getClassMapping(),1,2
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.getFieldMapping(),2,4
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.getXPath(),1,2
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.getXmlMapping(),4,5
org.apache.openjpa.jdbc.kernel.exps.EndsWithExpression.StringLengthDifferenceFilterValue.requiresCast(),2,2
"org.apache.openjpa.jdbc.kernel.exps.TypeLit.TypeLit(Object,int)",9,13
org.apache.openjpa.jdbc.kernel.exps.TypeLit.getType(),3,4
org.apache.openjpa.jdbc.kernel.exps.TypeLit.setImplicitType(Class),6,9
org.apache.openjpa.jdbc.kernel.exps.TypeLit.getParseType(),3,3
org.apache.openjpa.jdbc.kernel.exps.TypeLit.getValue(),3,3
org.apache.openjpa.jdbc.kernel.exps.TypeLit.setValue(Object),4,6
org.apache.openjpa.jdbc.kernel.exps.TypeLit.getValue(Object[]),3,5
"org.apache.openjpa.jdbc.kernel.exps.TypeLit.initialize(Select,ExpContext,int)",8,10
"org.apache.openjpa.jdbc.kernel.exps.TypeLit.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",19,47
"org.apache.openjpa.jdbc.kernel.exps.TypeLit.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",17,38
org.apache.openjpa.jdbc.kernel.exps.TypeLit.getDiscriminator(LitExpState),13,31
org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.map(boolean),47,165
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",20,40
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",20,40
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",9,14
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.toDataStoreValue(Object,JDBCStore)",12,21
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.supportsSelect(Select,int,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",14,22
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.select(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",13,21
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",18,28
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.appendIsNull(SQLBuffer,Select,Joins)",12,24
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.appendIsNotNull(SQLBuffer,Select,Joins)",12,24
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.join(Joins,boolean)",5,11
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.loadProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)",15,21
org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.isVersionable(),1,1
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.where(OpenJPAStateManager,JDBCStore,RowManager,Object)",17,35
org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.getFieldIndex(),2,4
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.getPrimaryKeyValue(Result,Column[],ForeignKey,JDBCStore,Joins)",16,27
org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.getColumns(),3,4
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.getJoinValue(Object,Column,JDBCStore)",9,13
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.getJoinValue(OpenJPAStateManager,Column,JDBCStore)",12,13
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.setAutoAssignedValue(OpenJPAStateManager,JDBCStore,Column,Object)",16,26
org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.getColumnIO(),2,4
org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.getResultArguments(),3,3
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.toEmbeddedDataStoreValue(Object,JDBCStore)",7,15
org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.toEmbeddedObjectValue(Object),4,7
"org.apache.openjpa.jdbc.meta.strats.StringFieldStrategy.loadEmbedded(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Object)",15,21
"org.apache.openjpa.jdbc.meta.FieldMapping.FieldMapping(String,Class<>,ClassMapping)",18,34
org.apache.openjpa.jdbc.meta.FieldMapping.getMappingInfo(),13,17
org.apache.openjpa.jdbc.meta.FieldMapping.getStrategy(),4,7
"org.apache.openjpa.jdbc.meta.FieldMapping.setStrategy(FieldStrategy,Boolean)",21,57
org.apache.openjpa.jdbc.meta.FieldMapping.getTable(),27,62
org.apache.openjpa.jdbc.meta.FieldMapping.getJoinColumnIO(),5,8
org.apache.openjpa.jdbc.meta.FieldMapping.setJoinColumnIO(ColumnIO),5,7
org.apache.openjpa.jdbc.meta.FieldMapping.getJoinForeignKey(),7,12
org.apache.openjpa.jdbc.meta.FieldMapping.setJoinForeignKey(ForeignKey),8,13
org.apache.openjpa.jdbc.meta.FieldMapping.getJoinUnique(),7,10
org.apache.openjpa.jdbc.meta.FieldMapping.setJoinUnique(Unique),8,13
org.apache.openjpa.jdbc.meta.FieldMapping.getJoinTableUniques(),4,7
org.apache.openjpa.jdbc.meta.FieldMapping.setJoinTableUniques(Unique[]),6,10
org.apache.openjpa.jdbc.meta.FieldMapping.getJoinIndex(),6,9
org.apache.openjpa.jdbc.meta.FieldMapping.setJoinIndex(Index),7,12
org.apache.openjpa.jdbc.meta.FieldMapping.isJoinOuter(),4,7
org.apache.openjpa.jdbc.meta.FieldMapping.setJoinOuter(boolean),5,10
org.apache.openjpa.jdbc.meta.FieldMapping.getOrderColumn(),3,6
org.apache.openjpa.jdbc.meta.FieldMapping.setOrderColumn(Column),4,8
org.apache.openjpa.jdbc.meta.FieldMapping.getOrderColumnIO(),3,6
org.apache.openjpa.jdbc.meta.FieldMapping.setOrderColumnIO(ColumnIO),4,8
org.apache.openjpa.jdbc.meta.FieldMapping.refSchemaComponents(),16,44
org.apache.openjpa.jdbc.meta.FieldMapping.clearMapping(),16,23
org.apache.openjpa.jdbc.meta.FieldMapping.syncMappingInfo(),23,80
org.apache.openjpa.jdbc.meta.FieldMapping.isMapped(),9,15
org.apache.openjpa.jdbc.meta.FieldMapping.getEagerFetchMode(),10,23
org.apache.openjpa.jdbc.meta.FieldMapping.setEagerFetchMode(int),8,17
org.apache.openjpa.jdbc.meta.FieldMapping.getMappingRepository(),10,16
org.apache.openjpa.jdbc.meta.FieldMapping.getDefiningMapping(),10,18
org.apache.openjpa.jdbc.meta.FieldMapping.getDeclaringMapping(),10,18
org.apache.openjpa.jdbc.meta.FieldMapping.getKeyMapping(),11,14
org.apache.openjpa.jdbc.meta.FieldMapping.getElementMapping(),12,14
org.apache.openjpa.jdbc.meta.FieldMapping.getValueMapping(),10,16
org.apache.openjpa.jdbc.meta.FieldMapping.getMappedByMapping(),10,20
org.apache.openjpa.jdbc.meta.FieldMapping.getInverseMappings(),12,20
org.apache.openjpa.jdbc.meta.FieldMapping.resolve(int),6,24
org.apache.openjpa.jdbc.meta.FieldMapping.resolveMapping(),55,163
org.apache.openjpa.jdbc.meta.FieldMapping.copyMappingInfo(FieldMapping),12,34
org.apache.openjpa.jdbc.meta.FieldMapping.initializeMapping(),11,23
org.apache.openjpa.jdbc.meta.FieldMapping.copy(FieldMetaData),12,20
org.apache.openjpa.jdbc.meta.FieldMapping.validateDataStoreExtensionPrefix(String),8,10
org.apache.openjpa.jdbc.meta.FieldMapping.getAlias(),3,4
org.apache.openjpa.jdbc.meta.FieldMapping.map(boolean),3,5
"org.apache.openjpa.jdbc.meta.FieldMapping.mapJoin(boolean,boolean)",34,95
org.apache.openjpa.jdbc.meta.FieldMapping.mapPrimaryKey(boolean),18,31
org.apache.openjpa.jdbc.meta.FieldMapping.initialize(),2,3
"org.apache.openjpa.jdbc.meta.FieldMapping.insert(OpenJPAStateManager,JDBCStore,RowManager)",13,17
org.apache.openjpa.jdbc.meta.FieldMapping.setPKValueFromMappedByIdField(OpenJPAStateManager),21,54
org.apache.openjpa.jdbc.meta.FieldMapping.getPKValue(StateManagerImpl),17,30
"org.apache.openjpa.jdbc.meta.FieldMapping.setPKValue(StateManagerImpl,Object)",31,87
"org.apache.openjpa.jdbc.meta.FieldMapping.setMappedByIdValue(Object,Object,String)",10,21
"org.apache.openjpa.jdbc.meta.FieldMapping.update(OpenJPAStateManager,JDBCStore,RowManager)",9,13
"org.apache.openjpa.jdbc.meta.FieldMapping.delete(OpenJPAStateManager,JDBCStore,RowManager)",9,13
"org.apache.openjpa.jdbc.meta.FieldMapping.deleteRow(OpenJPAStateManager,JDBCStore,RowManager)",19,32
"org.apache.openjpa.jdbc.meta.FieldMapping.getRow(OpenJPAStateManager,JDBCStore,RowManager,int)",54,159
org.apache.openjpa.jdbc.meta.FieldMapping.isNullValue(OpenJPAStateManager),13,48
"org.apache.openjpa.jdbc.meta.FieldMapping.isCustomInsert(OpenJPAStateManager,JDBCStore)",7,11
"org.apache.openjpa.jdbc.meta.FieldMapping.isCustomUpdate(OpenJPAStateManager,JDBCStore)",7,11
"org.apache.openjpa.jdbc.meta.FieldMapping.isCustomDelete(OpenJPAStateManager,JDBCStore)",7,11
"org.apache.openjpa.jdbc.meta.FieldMapping.customInsert(OpenJPAStateManager,JDBCStore)",9,13
"org.apache.openjpa.jdbc.meta.FieldMapping.customUpdate(OpenJPAStateManager,JDBCStore)",9,13
"org.apache.openjpa.jdbc.meta.FieldMapping.customDelete(OpenJPAStateManager,JDBCStore)",9,13
org.apache.openjpa.jdbc.meta.FieldMapping.setFieldMapping(FieldMapping),5,11
"org.apache.openjpa.jdbc.meta.FieldMapping.supportsSelect(Select,int,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",11,21
"org.apache.openjpa.jdbc.meta.FieldMapping.selectEagerParallel(SelectExecutor,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",13,26
"org.apache.openjpa.jdbc.meta.FieldMapping.selectEagerJoin(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",12,25
org.apache.openjpa.jdbc.meta.FieldMapping.isEagerSelectToMany(),3,5
"org.apache.openjpa.jdbc.meta.FieldMapping.select(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",11,21
org.apache.openjpa.jdbc.meta.FieldMapping.join(Select),7,18
"org.apache.openjpa.jdbc.meta.FieldMapping.wherePrimaryKey(Select,OpenJPAStateManager,JDBCStore)",17,38
"org.apache.openjpa.jdbc.meta.FieldMapping.orderLocal(Select,ClassMapping,Joins)",21,35
"org.apache.openjpa.jdbc.meta.FieldMapping.orderRelation(Select,ClassMapping,Joins)",15,28
"org.apache.openjpa.jdbc.meta.FieldMapping.loadEagerParallel(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Object)",14,24
"org.apache.openjpa.jdbc.meta.FieldMapping.loadEagerJoin(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",14,23
"org.apache.openjpa.jdbc.meta.FieldMapping.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",12,19
"org.apache.openjpa.jdbc.meta.FieldMapping.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",10,16
"org.apache.openjpa.jdbc.meta.FieldMapping.toDataStoreValue(Object,JDBCStore)",7,15
"org.apache.openjpa.jdbc.meta.FieldMapping.toKeyDataStoreValue(Object,JDBCStore)",8,17
"org.apache.openjpa.jdbc.meta.FieldMapping.appendIsEmpty(SQLBuffer,Select,Joins)",8,15
"org.apache.openjpa.jdbc.meta.FieldMapping.appendIsNotEmpty(SQLBuffer,Select,Joins)",8,15
"org.apache.openjpa.jdbc.meta.FieldMapping.appendIsNull(SQLBuffer,Select,Joins)",7,13
"org.apache.openjpa.jdbc.meta.FieldMapping.appendIsNotNull(SQLBuffer,Select,Joins)",7,13
"org.apache.openjpa.jdbc.meta.FieldMapping.appendSize(SQLBuffer,Select,Joins)",8,15
"org.apache.openjpa.jdbc.meta.FieldMapping.appendIndex(SQLBuffer,Select,Joins)",8,15
"org.apache.openjpa.jdbc.meta.FieldMapping.appendType(SQLBuffer,Select,Joins)",8,15
"org.apache.openjpa.jdbc.meta.FieldMapping.join(Joins,boolean)",5,11
"org.apache.openjpa.jdbc.meta.FieldMapping.joinKey(Joins,boolean)",6,13
"org.apache.openjpa.jdbc.meta.FieldMapping.joinRelation(Joins,boolean,boolean)",7,15
"org.apache.openjpa.jdbc.meta.FieldMapping.joinKeyRelation(Joins,boolean,boolean)",8,17
"org.apache.openjpa.jdbc.meta.FieldMapping.join(Joins,boolean,boolean)",15,29
"org.apache.openjpa.jdbc.meta.FieldMapping.loadProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)",23,40
"org.apache.openjpa.jdbc.meta.FieldMapping.loadKeyProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)",14,25
org.apache.openjpa.jdbc.meta.FieldMapping.isVersionable(),2,3
"org.apache.openjpa.jdbc.meta.FieldMapping.where(OpenJPAStateManager,JDBCStore,RowManager,Object)",11,16
org.apache.openjpa.jdbc.meta.FieldMapping.assertStrategy(),4,7
org.apache.openjpa.jdbc.meta.FieldMapping.getValueInfo(),4,8
org.apache.openjpa.jdbc.meta.FieldMapping.getHandler(),3,5
org.apache.openjpa.jdbc.meta.FieldMapping.setHandler(ValueHandler),4,9
org.apache.openjpa.jdbc.meta.FieldMapping.getFieldMapping(),2,4
org.apache.openjpa.jdbc.meta.FieldMapping.getTypeMapping(),3,6
org.apache.openjpa.jdbc.meta.FieldMapping.getDeclaredTypeMapping(),4,8
org.apache.openjpa.jdbc.meta.FieldMapping.getEmbeddedMapping(),3,6
org.apache.openjpa.jdbc.meta.FieldMapping.getValueMappedByMapping(),5,9
org.apache.openjpa.jdbc.meta.FieldMapping.getColumns(),25,49
org.apache.openjpa.jdbc.meta.FieldMapping.setColumns(Column[]),5,8
org.apache.openjpa.jdbc.meta.FieldMapping.getColumnIO(),2,4
org.apache.openjpa.jdbc.meta.FieldMapping.setColumnIO(ColumnIO),3,6
org.apache.openjpa.jdbc.meta.FieldMapping.getForeignKey(),3,7
org.apache.openjpa.jdbc.meta.FieldMapping.getForeignKey(ClassMapping),5,10
org.apache.openjpa.jdbc.meta.FieldMapping.setForeignKey(ForeignKey),4,9
org.apache.openjpa.jdbc.meta.FieldMapping.getJoinDirection(),3,5
org.apache.openjpa.jdbc.meta.FieldMapping.setJoinDirection(int),4,9
"org.apache.openjpa.jdbc.meta.FieldMapping.setForeignKey(Row,OpenJPAStateManager)",9,14
"org.apache.openjpa.jdbc.meta.FieldMapping.setForeignKey(Row,OpenJPAStateManager,int)",10,16
"org.apache.openjpa.jdbc.meta.FieldMapping.whereForeignKey(Row,OpenJPAStateManager)",8,12
org.apache.openjpa.jdbc.meta.FieldMapping.getIndependentTypeMappings(),5,8
org.apache.openjpa.jdbc.meta.FieldMapping.getSelectSubclasses(),3,5
org.apache.openjpa.jdbc.meta.FieldMapping.getValueUnique(),3,6
org.apache.openjpa.jdbc.meta.FieldMapping.setValueUnique(Unique),5,10
org.apache.openjpa.jdbc.meta.FieldMapping.getValueIndex(),3,6
org.apache.openjpa.jdbc.meta.FieldMapping.setValueIndex(Index),5,10
org.apache.openjpa.jdbc.meta.FieldMapping.getUseClassCriteria(),2,3
org.apache.openjpa.jdbc.meta.FieldMapping.setUseClassCriteria(boolean),3,7
org.apache.openjpa.jdbc.meta.FieldMapping.getPolymorphic(),2,3
org.apache.openjpa.jdbc.meta.FieldMapping.setPolymorphic(int),4,7
"org.apache.openjpa.jdbc.meta.FieldMapping.mapConstraints(String,boolean)",7,11
"org.apache.openjpa.jdbc.meta.FieldMapping.mapConstraints(DBIdentifier,boolean)",6,10
org.apache.openjpa.jdbc.meta.FieldMapping.copyMappingInfo(ValueMapping),5,9
org.apache.openjpa.jdbc.meta.FieldMapping.isBidirectionalJoinTableMappingOwner(),36,120
org.apache.openjpa.jdbc.meta.FieldMapping.isBidirectionalJoinTableMappingNonOwner(),35,125
org.apache.openjpa.jdbc.meta.FieldMapping.isBiMTo1JT(),2,2
org.apache.openjpa.jdbc.meta.FieldMapping.isUni1ToMFK(),4,9
org.apache.openjpa.jdbc.meta.FieldMapping.isUniMTo1JT(),3,7
org.apache.openjpa.jdbc.meta.FieldMapping.isUni1To1JT(),3,7
org.apache.openjpa.jdbc.meta.FieldMapping.isBi1To1JT(),2,2
org.apache.openjpa.jdbc.meta.FieldMapping.getBi_1ToM_JTField(),5,11
org.apache.openjpa.jdbc.meta.FieldMapping.getBi_MTo1_JTField(),5,11
org.apache.openjpa.jdbc.meta.FieldMapping.getBi1ToMJoinFK(),4,12
org.apache.openjpa.jdbc.meta.FieldMapping.getBi1ToMElemFK(),6,13
org.apache.openjpa.jdbc.meta.FieldMapping.setBi1MJoinTableInfo(),15,54
org.apache.openjpa.jdbc.meta.FieldMapping.isNonDefaultMappingUsingJoinTableStrategy(),6,7
org.apache.openjpa.jdbc.meta.FieldMapping.setMapsIdCols(boolean),3,9
org.apache.openjpa.jdbc.meta.FieldMapping.hasMapsIdCols(),2,4
org.apache.openjpa.jdbc.meta.FieldMapping.isDelayCapable(),4,6
"org.apache.openjpa.persistence.StoreCache.contains(Class,Object)",6,8
"org.apache.openjpa.persistence.StoreCache.containsAll(Class,Object)",6,8
"org.apache.openjpa.persistence.StoreCache.containsAll(Class,Collection)",6,8
"org.apache.openjpa.persistence.StoreCache.pin(Class,Object)",6,8
"org.apache.openjpa.persistence.StoreCache.pinAll(Class,Object)",6,8
"org.apache.openjpa.persistence.StoreCache.pinAll(Class,Collection)",6,8
"org.apache.openjpa.persistence.StoreCache.unpin(Class,Object)",6,8
"org.apache.openjpa.persistence.StoreCache.unpinAll(Class,Object)",6,8
"org.apache.openjpa.persistence.StoreCache.unpinAll(Class,Collection)",6,8
"org.apache.openjpa.persistence.StoreCache.evict(Class,Object)",7,8
"org.apache.openjpa.persistence.StoreCache.evictAll(Class,Object)",7,8
"org.apache.openjpa.persistence.StoreCache.evictAll(Class,Collection)",7,8
org.apache.openjpa.persistence.StoreCache.evictAll(),2,2
org.apache.openjpa.persistence.StoreCache.getStatistics(),8,9
org.apache.openjpa.persistence.StoreCache.getDelegate(),15,17
org.apache.openjpa.jdbc.meta.RuntimeStrategyInstaller.RuntimeStrategyInstaller(MappingRepository),9,10
org.apache.openjpa.jdbc.meta.RuntimeStrategyInstaller.installStrategy(ClassMapping),14,31
org.apache.openjpa.jdbc.meta.RuntimeStrategyInstaller.installStrategy(FieldMapping),36,87
org.apache.openjpa.jdbc.meta.RuntimeStrategyInstaller.getOutermostDefiningMapping(ValueMetaData),11,44
org.apache.openjpa.jdbc.meta.RuntimeStrategyInstaller.installStrategy(Version),7,20
org.apache.openjpa.jdbc.meta.RuntimeStrategyInstaller.installStrategy(Discriminator),8,20
org.apache.openjpa.persistence.annotations.TestAdvAnnot.TestAdvAnnot(String),6,7
org.apache.openjpa.persistence.annotations.TestAdvAnnot.setUp(),21,45
org.apache.openjpa.persistence.annotations.TestAdvAnnot.testTimeTemporalAnnot(),22,37
org.apache.openjpa.persistence.annotations.TestAdvAnnot.testCalendarTemporalAnnot(),22,51
org.apache.openjpa.persistence.annotations.TestAdvAnnot.testUniqueConstraintAnnot(),33,60
"org.apache.openjpa.persistence.query.NotEqualExpression.NotEqualExpression(Expression,Expression)",5,12
org.apache.openjpa.jdbc.sql.TestDB2Dictionary.testGetDefaultSchemaNameDS1(),41,90
org.apache.openjpa.jdbc.sql.TestDB2Dictionary.testGetDefaultSchemaNameDS2(),41,93
org.apache.openjpa.jdbc.sql.TestDB2Dictionary.testGetDefaultSchemaNameNoDS(),28,51
org.apache.openjpa.jdbc.sql.TestDB2Dictionary.testGetDefaultSchemaNameTrimmed(),44,94
org.apache.openjpa.jdbc.sql.TestDB2Dictionary.testConnectedConfigurationOnlyUsesMetaData(),33,70
"org.apache.openjpa.persistence.query.UnaryExpressionPredicate.UnaryExpressionPredicate(Expression,UnaryConditionalOperator,UnaryConditionalOperator)",6,13
org.apache.openjpa.persistence.query.UnaryExpressionPredicate.getOperand(),2,2
org.apache.openjpa.persistence.query.UnaryExpressionPredicate.getOperator(),3,4
org.apache.openjpa.persistence.query.UnaryExpressionPredicate.and(Predicate),1,5
org.apache.openjpa.persistence.query.UnaryExpressionPredicate.or(Predicate),1,5
org.apache.openjpa.persistence.query.UnaryExpressionPredicate.not(),8,10
org.apache.openjpa.persistence.query.UnaryExpressionPredicate.asExpression(AliasContext),6,9
org.apache.openjpa.util.ProxyManagerImpl.ProxyManagerImpl(),8,8
org.apache.openjpa.util.ProxyManagerImpl.getTrackChanges(),17,19
org.apache.openjpa.util.ProxyManagerImpl.setTrackChanges(boolean),18,22
org.apache.openjpa.util.ProxyManagerImpl.getAssertAllowedType(),18,20
org.apache.openjpa.util.ProxyManagerImpl.setAssertAllowedType(boolean),19,23
org.apache.openjpa.util.ProxyManagerImpl.getDelayCollectionLoading(),18,23
org.apache.openjpa.util.ProxyManagerImpl.setDelayCollectionLoading(boolean),11,17
org.apache.openjpa.util.ProxyManagerImpl.getUnproxyable(),8,9
org.apache.openjpa.util.ProxyManagerImpl.setUnproxyable(String),18,27
org.apache.openjpa.util.ProxyManagerImpl.copyArray(Object),15,31
org.apache.openjpa.util.ProxyManagerImpl.copyCollection(Collection),5,24
"org.apache.openjpa.util.ProxyManagerImpl.newCollectionProxy(Class,Class,Comparator,boolean)",12,30
org.apache.openjpa.util.ProxyManagerImpl.copyMap(Map),5,24
"org.apache.openjpa.util.ProxyManagerImpl.newMapProxy(Class,Class,Class,Comparator,boolean)",13,35
org.apache.openjpa.util.ProxyManagerImpl.copyDate(Date),5,24
org.apache.openjpa.util.ProxyManagerImpl.newDateProxy(Class),5,13
org.apache.openjpa.util.ProxyManagerImpl.copyCalendar(Calendar),5,24
"org.apache.openjpa.util.ProxyManagerImpl.newCalendarProxy(Class,TimeZone)",10,32
org.apache.openjpa.util.ProxyManagerImpl.copyCustom(Object),14,51
"org.apache.openjpa.util.ProxyManagerImpl.newCustomProxy(Object,boolean)",26,111
org.apache.openjpa.util.ProxyManagerImpl.toProxyableCollectionType(Class),17,37
org.apache.openjpa.util.ProxyManagerImpl.toProxyableMapType(Class),17,37
"org.apache.openjpa.util.ProxyManagerImpl.toConcreteType(Class,Map)",11,27
org.apache.openjpa.util.ProxyManagerImpl.getFactoryProxyCollection(Class),19,58
org.apache.openjpa.util.ProxyManagerImpl.getFactoryProxyMap(Class),19,58
org.apache.openjpa.util.ProxyManagerImpl.getFactoryProxyDate(Class),19,58
org.apache.openjpa.util.ProxyManagerImpl.getFactoryProxyCalendar(Class),19,58
org.apache.openjpa.util.ProxyManagerImpl.getFactoryProxyBean(Object),32,77
org.apache.openjpa.util.ProxyManagerImpl.getFactoryProxyBean(Object).$1.run(),6,6
org.apache.openjpa.util.ProxyManagerImpl.isUnproxyable(Class),6,14
"org.apache.openjpa.util.ProxyManagerImpl.loadBuildTimeProxy(Class,ClassLoader)",15,33
org.apache.openjpa.util.ProxyManagerImpl.loadDelayedProxy(Class<>),20,108
"org.apache.openjpa.util.ProxyManagerImpl.instantiateProxy(Class,Constructor,Object[])",28,66
"org.apache.openjpa.util.ProxyManagerImpl.generateProxyCollectionBytecode(Class,boolean)",28,61
"org.apache.openjpa.util.ProxyManagerImpl.getProxyClassName(Class,boolean)",11,22
org.apache.openjpa.util.ProxyManagerImpl.assertNotFinal(Class),8,12
org.apache.openjpa.util.ProxyManagerImpl.isProxyable(Class<>),25,32
"org.apache.openjpa.util.ProxyManagerImpl.generateProxyMapBytecode(Class,boolean)",30,76
"org.apache.openjpa.util.ProxyManagerImpl.generateProxyDateBytecode(Class,boolean)",26,53
"org.apache.openjpa.util.ProxyManagerImpl.generateProxyCalendarBytecode(Class,boolean)",26,53
"org.apache.openjpa.util.ProxyManagerImpl.generateProxyBeanBytecode(Class,boolean)",37,83
"org.apache.openjpa.util.ProxyManagerImpl.delegateConstructors(BCClass,Class)",26,55
"org.apache.openjpa.util.ProxyManagerImpl.addProxyMethods(BCClass,boolean)",56,239
"org.apache.openjpa.util.ProxyManagerImpl.addProxyCollectionMethods(BCClass,Class)",61,341
org.apache.openjpa.util.ProxyManagerImpl.allowsDuplicates(Class),6,10
org.apache.openjpa.util.ProxyManagerImpl.isOrdered(Class),13,16
"org.apache.openjpa.util.ProxyManagerImpl.addProxyMapMethods(BCClass,Class)",57,379
"org.apache.openjpa.util.ProxyManagerImpl.addProxyDateMethods(BCClass,Class)",48,230
"org.apache.openjpa.util.ProxyManagerImpl.addProxyCalendarMethods(BCClass,Class)",54,280
"org.apache.openjpa.util.ProxyManagerImpl.addProxyBeanMethods(BCClass,Class,Constructor)",34,115
"org.apache.openjpa.util.ProxyManagerImpl.copyProperties(Class,Code)",31,87
"org.apache.openjpa.util.ProxyManagerImpl.proxyRecognizedMethods(BCClass,Class,Class,Class)",25,101
"org.apache.openjpa.util.ProxyManagerImpl.toHelperParameters(Class[],Class)",11,21
"org.apache.openjpa.util.ProxyManagerImpl.toHelperAfterParameters(Class[],Class,Class)",14,40
"org.apache.openjpa.util.ProxyManagerImpl.proxySetters(BCClass,Class)",15,34
"org.apache.openjpa.util.ProxyManagerImpl.proxyOverrideMethod(BCClass,Method,Method,Class[])",25,57
"org.apache.openjpa.util.ProxyManagerImpl.proxyBeforeAfterMethod(BCClass,Class,Method,Method,Class[],Method,Class[])",30,149
org.apache.openjpa.util.ProxyManagerImpl.isSetter(Method),11,29
"org.apache.openjpa.util.ProxyManagerImpl.findGetter(Class,Method)",14,57
"org.apache.openjpa.util.ProxyManagerImpl.startsWith(String,String)",9,21
"org.apache.openjpa.util.ProxyManagerImpl.proxySetter(BCClass,Class,Method)",29,76
"org.apache.openjpa.util.ProxyManagerImpl.addWriteReplaceMethod(BCClass,boolean)",31,59
org.apache.openjpa.util.ProxyManagerImpl.nextProxyId(),6,8
org.apache.openjpa.util.ProxyManagerImpl.findCopyConstructor(Class),21,52
org.apache.openjpa.util.ProxyManagerImpl.findComparatorConstructor(Class),9,17
org.apache.openjpa.util.ProxyManagerImpl.main(String[]),100,299
org.apache.openjpa.util.ProxyManagerImpl.main(String[]).$2.run(),7,7
org.apache.openjpa.jdbc.schema.NameSet.isNameTaken(String),5,10
org.apache.openjpa.jdbc.schema.NameSet.isNameTaken(DBIdentifier),6,15
"org.apache.openjpa.jdbc.schema.NameSet.addName(String,boolean)",7,14
"org.apache.openjpa.jdbc.schema.NameSet.addName(DBIdentifier,boolean)",30,58
org.apache.openjpa.jdbc.schema.NameSet.removeName(String),7,14
org.apache.openjpa.jdbc.schema.NameSet.removeName(DBIdentifier),6,18
"org.apache.openjpa.conf.SpecificationPlugin.SpecificationPlugin(Configuration,String)",8,11
org.apache.openjpa.conf.SpecificationPlugin.getValueType(),3,3
org.apache.openjpa.conf.SpecificationPlugin.setString(String),4,8
org.apache.openjpa.conf.SpecificationPlugin.set(Object),12,23
org.apache.openjpa.conf.SpecificationPlugin.validateOverwrite(Specification),23,74
org.apache.openjpa.conf.SpecificationPlugin.valueChanged(Value),8,11
org.apache.openjpa.enhance.ManagedInstanceProvider.getManagedInstance(),3,3
org.apache.openjpa.instrumentation.jmx.JMXInstrument.getObjectName(),5,9
org.apache.openjpa.instrumentation.jmx.JMXInstrument.setContextRef(String),12,18
org.apache.openjpa.instrumentation.jmx.JMXInstrument.getContextRef(),10,15
org.apache.openjpa.instrumentation.jmx.JMXInstrument.getConfigId(),7,11
org.apache.openjpa.instrumentation.jmx.JMXInstrument.setConfigId(String),9,14
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.XMLPersistenceMappingSerializer(JDBCConfiguration),9,11
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.getSyncMappingInfo(),11,14
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.setSyncMappingInfo(boolean),12,17
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.addQueryResultMapping(QueryResultMapping),12,24
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.removeQueryResultMapping(QueryResultMapping),10,18
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.addAll(MetaDataRepository),10,22
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.removeAll(MetaDataRepository),11,25
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.clear(),1,2
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.addCommments(Object),13,30
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeClass(ClassMetaData,boolean)",21,64
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeClassMappingContent(ClassMetaData),21,52
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeInheritanceContent(ClassMetaData),33,83
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeTable(String,String,String,ClassMappingInfo,Unique[])",43,133
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeAttributeOverride(FieldMetaData,FieldMetaData)",29,130
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeAttributeOverrideMappingContent(FieldMetaData,FieldMetaData)",19,31
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.getStrategy(FieldMetaData),29,91
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeFieldMappingContent(FieldMetaData,PersistenceStrategy)",56,258
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeOrderColumn(FieldMetaData),23,63
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.isLob(FieldMapping),14,23
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.getTemporal(FieldMapping),25,65
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.getEnumType(FieldMapping),13,28
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeColumns(MappingInfo,ColType,String)",14,34
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeColumn(Column,ColType,String,boolean)",34,140
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeUniqueConstraint(Unique),16,42
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.newSerializationComparator(),3,7
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.addSystemMappingElements(Collection),10,13
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.type(Object),6,11
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.getQueryResultMappings(ClassMetaData),19,64
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeSystemMappingElement(Object),10,20
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeQueryMappings(ClassMetaData),10,21
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeQueryResultMapping(QueryResultMapping),30,106
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.serializeSequence(SequenceMetaData),38,142
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingSerializer.MappingSerializationComparator.compareUnknown(Object,Object)",14,68
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.map(boolean),34,108
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.initialize(),15,40
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",14,31
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.insert(OpenJPAStateManager,OpenJPAStateManager,JDBCStore,RowManager,Row)",28,73
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",30,86
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.update(OpenJPAStateManager,OpenJPAStateManager,JDBCStore,RowManager,Row)",28,72
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",15,33
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.delete(OpenJPAStateManager,OpenJPAStateManager,JDBCStore,RowManager,Row)",23,61
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.setNullIndicatorColumn(OpenJPAStateManager,Row)",19,38
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.isCustomInsert(OpenJPAStateManager,JDBCStore)",13,23
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.isCustomUpdate(OpenJPAStateManager,JDBCStore)",13,23
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.isCustomDelete(OpenJPAStateManager,JDBCStore)",11,18
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.isCustom(int,OpenJPAStateManager,OpenJPAStateManager,JDBCStore)",20,60
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.customInsert(OpenJPAStateManager,JDBCStore)",19,40
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.customUpdate(OpenJPAStateManager,JDBCStore)",21,42
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.customDelete(OpenJPAStateManager,JDBCStore)",19,40
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.supportsSelect(Select,int,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",14,22
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.select(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",29,64
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",47,108
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.containsEmbeddedResult(FetchConfiguration,Result)",32,67
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.checkResult(FieldMapping,Result)",25,49
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.loadFields(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",28,82
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.indicatesNull(Result),20,41
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.toDataStoreValue(Object,JDBCStore)",12,24
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.appendIsNull(SQLBuffer,Select,Joins)",7,13
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.appendIsNotNull(SQLBuffer,Select,Joins)",7,13
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.appendTestNull(SQLBuffer,Select,Joins,boolean)",24,67
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.join(Joins,boolean)",5,11
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.loadProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)",38,85
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.getColumns(),3,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.getColumnIO(),2,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.getResultArguments(),3,3
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.toEmbeddedDataStoreValue(Object,JDBCStore)",7,15
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.toEmbeddedObjectValue(Object),5,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.loadEmbedded(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Object)",14,25
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.NullEmbeddedStateManager(OpenJPAStateManager,ValueMetaData)",12,21
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.initialize(Class,PCState)",4,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.load(FetchConfiguration),5,6
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.assignObjectId(boolean),5,5
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getManagedInstance(),3,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getPersistenceCapable(),2,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getMetaData(),4,8
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getOwner(),3,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getOwnerIndex(),6,7
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isEmbedded(),1,1
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isTransactional(),1,1
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isPersistent(),1,1
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isNew(),1,1
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isDeleted(),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isDetached(),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isVersionUpdateRequired(),4,7
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isVersionCheckRequired(),4,7
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isDirty(),1,1
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isFlushed(),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isFlushedDirty(),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isProvisional(),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getLoaded(),12,21
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getDirty(),12,21
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getFlushed(),5,5
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getUnloaded(FetchConfiguration),7,8
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.newProxy(int),5,5
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.newFieldProxy(int),5,6
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isDefaultValue(int),2,2
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getContext(),3,5
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getId(),2,2
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getObjectId(),2,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.setObjectId(Object),5,6
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getLock(),2,2
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.setLock(Object),5,6
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getVersion(),2,2
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.setVersion(Object),5,6
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.setNextVersion(Object),5,6
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getPCState(),4,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getImplData(),3,3
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.setImplData(Object,boolean)",7,9
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isImplDataCacheable(),3,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getImplData(int),4,4
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.setImplData(int,Object)",7,9
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isImplDataCacheable(int),4,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getIntermediate(int),3,3
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.setIntermediate(int,Object)",7,7
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchBooleanField(int),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchByteField(int),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchCharField(int),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchDoubleField(int),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchFloatField(int),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchIntField(int),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchLongField(int),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchObjectField(int),3,5
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchShortField(int),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchStringField(int),3,5
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchField(int,boolean)",4,5
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeBooleanField(int,boolean)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeByteField(int,byte)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeCharField(int,char)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeDoubleField(int,double)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeFloatField(int,float)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeIntField(int,int)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeLongField(int,long)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeObjectField(int,Object)",7,9
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeShortField(int,short)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeStringField(int,String)",7,9
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeField(int,Object)",6,7
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchBoolean(int),2,2
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchByte(int),2,2
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchChar(int),2,2
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchDouble(int),2,2
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchFloat(int),2,2
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchInt(int),2,2
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchLong(int),2,2
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchObject(int),3,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchShort(int),2,2
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchString(int),3,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetch(int),3,3
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeBoolean(int,boolean)",6,6
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeByte(int,byte)",6,6
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeChar(int,char)",6,6
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeDouble(int,double)",6,6
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeFloat(int,float)",6,6
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeInt(int,int)",6,6
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeLong(int,long)",6,6
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeObject(int,Object)",7,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeShort(int,short)",6,6
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.storeString(int,String)",7,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.store(int,Object)",6,6
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchInitialField(int),6,7
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.dirty(int),4,4
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.removed(int,Object,boolean)",6,7
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.beforeRefresh(boolean),3,4
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.setRemote(int,Object)",7,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getPCPrimaryKey(Object,int)",7,8
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.replaceStateManager(StateManager),4,6
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.getGenericContext(),3,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.dirty(String),5,5
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.fetchObjectId(),2,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.accessingField(int),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.serializing(),3,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.writeDetached(ObjectOutput),6,6
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.proxyDetachedDeserialized(int),6,6
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.settingBooleanField(PersistenceCapable,int,boolean,boolean,int)",8,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.settingCharField(PersistenceCapable,int,char,char,int)",8,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.settingByteField(PersistenceCapable,int,byte,byte,int)",8,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.settingShortField(PersistenceCapable,int,short,short,int)",8,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.settingIntField(PersistenceCapable,int,int,int,int)",8,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.settingLongField(PersistenceCapable,int,long,long,int)",8,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.settingFloatField(PersistenceCapable,int,float,float,int)",8,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.settingDoubleField(PersistenceCapable,int,double,double,int)",8,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.settingStringField(PersistenceCapable,int,String,String,int)",9,13
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.settingObjectField(PersistenceCapable,int,Object,Object,int)",9,13
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.providedBooleanField(PersistenceCapable,int,boolean)",7,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.providedCharField(PersistenceCapable,int,char)",7,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.providedByteField(PersistenceCapable,int,byte)",7,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.providedShortField(PersistenceCapable,int,short)",7,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.providedIntField(PersistenceCapable,int,int)",7,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.providedLongField(PersistenceCapable,int,long)",7,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.providedFloatField(PersistenceCapable,int,float)",7,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.providedDoubleField(PersistenceCapable,int,double)",7,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.providedStringField(PersistenceCapable,int,String)",8,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.providedObjectField(PersistenceCapable,int,Object)",8,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.replaceBooleanField(PersistenceCapable,int)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.replaceCharField(PersistenceCapable,int)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.replaceByteField(PersistenceCapable,int)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.replaceShortField(PersistenceCapable,int)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.replaceIntField(PersistenceCapable,int)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.replaceLongField(PersistenceCapable,int)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.replaceFloatField(PersistenceCapable,int)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.replaceDoubleField(PersistenceCapable,int)",6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.replaceStringField(PersistenceCapable,int)",7,9
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.replaceObjectField(PersistenceCapable,int)",7,9
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.isDelayed(int),2,2
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.setDelayed(int,boolean)",6,6
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.NullEmbeddedStateManager.loadDelayedField(int),6,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRowManager.EmbeddedRowManager(RowManager,Row)",4,14
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRowManager.hasAutoAssignConstraints(),3,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRowManager.getInserts(),4,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRowManager.getUpdates(),4,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRowManager.getDeletes(),4,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRowManager.getSecondaryUpdates(),5,5
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRowManager.getSecondaryDeletes(),5,5
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRowManager.getAllRowUpdates(),5,5
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRowManager.getAllRowDeletes(),5,5
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRowManager.getRow(Table,int,OpenJPAStateManager,boolean)",8,24
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRowManager.getSecondaryRow(Table,int)",5,12
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRowManager.flushSecondaryRow(Row),7,14
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRowManager.getAllRows(Table,int)",5,10
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRowManager.flushAllRows(Row),7,12
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.EmbeddedRow(Row),3,6
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.getDelegate(),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.isValid(),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setValid(boolean),3,7
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setPrimaryKey(OpenJPAStateManager),9,12
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setPrimaryKey(ColumnIO,OpenJPAStateManager)",10,13
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.wherePrimaryKey(OpenJPAStateManager),8,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setForeignKey(ForeignKey,OpenJPAStateManager)",9,14
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setForeignKey(ForeignKey,ColumnIO,OpenJPAStateManager)",10,15
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereForeignKey(ForeignKey,OpenJPAStateManager)",8,12
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setRelationId(Column,OpenJPAStateManager,RelationId)",11,16
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.getOwner(OpenJPAStateManager),3,7
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.getTable(),2,4
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.getAction(),2,3
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.getFailedObject(),3,6
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setFailedObject(Object),4,10
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.getPrimaryKey(),5,7
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setArray(Column,Array)",8,13
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setAsciiStream(Column,InputStream,int)",11,18
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setBigDecimal(Column,BigDecimal)",8,13
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setBigInteger(Column,BigInteger)",8,13
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setBinaryStream(Column,InputStream,int)",11,18
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setBlob(Column,Blob)",8,13
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setBoolean(Column,boolean)",7,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setByte(Column,byte)",7,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setBytes(Column,byte[])",8,12
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setCalendar(Column,Calendar)",8,13
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setChar(Column,char)",7,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setCharacterStream(Column,Reader,int)",11,17
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setClob(Column,Clob)",8,13
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setDate(Column,Date)",8,13
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setDate(Column,java.sql.Date,Calendar)",11,18
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setDouble(Column,double)",7,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setFloat(Column,float)",7,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setInt(Column,int)",7,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setLong(Column,long)",7,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setLocale(Column,Locale)",8,13
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setNull(Column),6,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setNull(Column,boolean)",7,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setNumber(Column,Number)",7,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setObject(Column,Object)",8,13
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setRaw(Column,String)",9,13
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setShort(Column,short)",7,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setString(Column,String)",8,13
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setTime(Column,Time,Calendar)",10,16
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.setTimestamp(Column,Timestamp,Calendar)",10,16
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereArray(Column,Array)",7,11
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereAsciiStream(Column,InputStream,int)",10,16
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereBigDecimal(Column,BigDecimal)",7,11
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereBigInteger(Column,BigInteger)",7,11
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereBinaryStream(Column,InputStream,int)",10,16
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereBlob(Column,Blob)",7,11
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereBoolean(Column,boolean)",6,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereByte(Column,byte)",6,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereBytes(Column,byte[])",7,10
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereCalendar(Column,Calendar)",7,11
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereChar(Column,char)",6,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereCharacterStream(Column,Reader,int)",10,15
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereClob(Column,Clob)",7,11
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereDate(Column,Date)",7,11
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereDate(Column,java.sql.Date,Calendar)",10,16
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereDouble(Column,double)",6,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereFloat(Column,float)",6,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereInt(Column,int)",6,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereLong(Column,long)",6,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereLocale(Column,Locale)",7,11
org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereNull(Column),5,6
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereNumber(Column,Number)",6,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereObject(Column,Object)",7,11
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereRaw(Column,String)",8,11
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereShort(Column,short)",6,8
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereString(Column,String)",7,11
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereTime(Column,Time,Calendar)",9,14
"org.apache.openjpa.jdbc.meta.strats.EmbedFieldStrategy.EmbeddedRow.whereTimestamp(Column,Timestamp,Calendar)",9,14
org.apache.openjpa.kernel.ManagedCache.ManagedCache(BrokerImpl),11,21
"org.apache.openjpa.kernel.ManagedCache.getById(Object,boolean)",26,56
org.apache.openjpa.kernel.ManagedCache.add(StateManagerImpl),35,73
"org.apache.openjpa.kernel.ManagedCache.remove(Object,StateManagerImpl)",17,53
org.apache.openjpa.kernel.ManagedCache.persist(StateManagerImpl),10,11
"org.apache.openjpa.kernel.ManagedCache.assignObjectId(Object,StateManagerImpl)",31,72
"org.apache.openjpa.kernel.ManagedCache.commitNew(Object,StateManagerImpl)",35,96
org.apache.openjpa.kernel.ManagedCache.copy(),21,73
org.apache.openjpa.kernel.ManagedCache.clear(),12,18
org.apache.openjpa.kernel.ManagedCache.clearNew(),4,5
org.apache.openjpa.kernel.ManagedCache.dirtyCheck(),5,8
"org.apache.openjpa.jdbc.kernel.exps.Args.Args(Val,Val)",6,12
org.apache.openjpa.jdbc.kernel.exps.Args.Args(Val),8,27
"org.apache.openjpa.jdbc.kernel.exps.Args.newFilterValues(Select,ExpContext,ExpState)",14,36
org.apache.openjpa.jdbc.kernel.exps.Args.getValues(),3,3
org.apache.openjpa.jdbc.kernel.exps.Args.getVals(),3,3
org.apache.openjpa.jdbc.kernel.exps.Args.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.Args.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.Args.isVariable(),1,1
org.apache.openjpa.jdbc.kernel.exps.Args.getType(),2,2
org.apache.openjpa.jdbc.kernel.exps.Args.getTypes(),4,7
org.apache.openjpa.jdbc.kernel.exps.Args.setImplicitType(Class),3,4
"org.apache.openjpa.jdbc.kernel.exps.Args.initialize(Select,ExpContext,int)",10,31
"org.apache.openjpa.jdbc.kernel.exps.Args.ArgsExpState.ArgsExpState(Joins,ExpState[])",3,6
"org.apache.openjpa.jdbc.kernel.exps.Args.select(Select,ExpContext,ExpState,boolean)",6,8
"org.apache.openjpa.jdbc.kernel.exps.Args.selectColumns(Select,ExpContext,ExpState,boolean)",10,23
"org.apache.openjpa.jdbc.kernel.exps.Args.groupBy(Select,ExpContext,ExpState)",5,6
"org.apache.openjpa.jdbc.kernel.exps.Args.orderBy(Select,ExpContext,ExpState,boolean)",6,7
"org.apache.openjpa.jdbc.kernel.exps.Args.load(ExpContext,ExpState,Result)",7,8
"org.apache.openjpa.jdbc.kernel.exps.Args.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",11,23
"org.apache.openjpa.jdbc.kernel.exps.Args.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.Args.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",9,16
"org.apache.openjpa.jdbc.kernel.exps.Args.appendTo(Select,ExpContext,ExpState,SQLBuffer,int,String)",17,38
"org.apache.openjpa.jdbc.kernel.exps.Args.appendIsEmpty(Select,ExpContext,ExpState,SQLBuffer)",9,11
"org.apache.openjpa.jdbc.kernel.exps.Args.appendIsNotEmpty(Select,ExpContext,ExpState,SQLBuffer)",9,11
"org.apache.openjpa.jdbc.kernel.exps.Args.appendSize(Select,ExpContext,ExpState,SQLBuffer)",9,11
"org.apache.openjpa.jdbc.kernel.exps.Args.appendIsNull(Select,ExpContext,ExpState,SQLBuffer)",8,10
"org.apache.openjpa.jdbc.kernel.exps.Args.appendIsNotNull(Select,ExpContext,ExpState,SQLBuffer)",8,10
org.apache.openjpa.jdbc.kernel.exps.Args.acceptVisit(ExpressionVisitor),8,15
org.apache.openjpa.jdbc.kernel.exps.Args.getId(),2,3
org.apache.openjpa.jdbc.sql.RowManagerImpl.RowManagerImpl(boolean),11,13
org.apache.openjpa.jdbc.sql.RowManagerImpl.hasAutoAssignConstraints(),5,9
org.apache.openjpa.jdbc.sql.RowManagerImpl.getOrdered(),9,13
org.apache.openjpa.jdbc.sql.RowManagerImpl.getInserts(),10,13
org.apache.openjpa.jdbc.sql.RowManagerImpl.getUpdates(),10,13
org.apache.openjpa.jdbc.sql.RowManagerImpl.getDeletes(),10,13
org.apache.openjpa.jdbc.sql.RowManagerImpl.getSecondaryUpdates(),10,16
org.apache.openjpa.jdbc.sql.RowManagerImpl.getSecondaryDeletes(),9,15
org.apache.openjpa.jdbc.sql.RowManagerImpl.getAllRowUpdates(),6,13
org.apache.openjpa.jdbc.sql.RowManagerImpl.getAllRowDeletes(),6,13
"org.apache.openjpa.jdbc.sql.RowManagerImpl.getSecondaryRow(Table,int)",4,10
org.apache.openjpa.jdbc.sql.RowManagerImpl.flushSecondaryRow(Row),15,50
"org.apache.openjpa.jdbc.sql.RowManagerImpl.getAllRows(Table,int)",5,9
org.apache.openjpa.jdbc.sql.RowManagerImpl.flushAllRows(Row),14,41
"org.apache.openjpa.jdbc.sql.RowManagerImpl.getRow(Table,int,OpenJPAStateManager,boolean)",33,114
"org.apache.openjpa.jdbc.sql.RowManagerImpl.Key.Key(Table,OpenJPAStateManager)",4,7
org.apache.openjpa.jdbc.sql.RowManagerImpl.Key.hashCode(),6,11
org.apache.openjpa.jdbc.sql.RowManagerImpl.Key.equals(Object),4,9
openbook.domain.ShoppingCart.ShoppingCart(Customer),10,14
openbook.domain.ShoppingCart.getCustomer(),3,7
openbook.domain.ShoppingCart.getItems(),8,9
"openbook.domain.ShoppingCart.addItem(Book,int)",20,48
"openbook.domain.ShoppingCart.changeQuantity(Book,int)",22,62
openbook.domain.ShoppingCart.remove(Book),14,32
openbook.domain.ShoppingCart.clear(),1,1
openbook.domain.ShoppingCart.isEmpty(),2,3
openbook.domain.ShoppingCart.getTotalCount(),7,9
"org.apache.openjpa.persistence.jest.JESTContext.JESTContext(String,OpenJPAEntityManagerFactory,HttpServletRequest,HttpServletResponse)",21,40
org.apache.openjpa.persistence.jest.JESTContext.getPersistenceUnitName(),4,8
org.apache.openjpa.persistence.jest.JESTContext.getPersistenceContext(),10,16
org.apache.openjpa.persistence.jest.JESTContext.getRequest(),3,6
org.apache.openjpa.persistence.jest.JESTContext.getRequestURI(),10,24
org.apache.openjpa.persistence.jest.JESTContext.getResponse(),3,6
org.apache.openjpa.persistence.jest.JESTContext.execute(),71,160
org.apache.openjpa.persistence.jest.JESTContext.getAction(String),17,60
org.apache.openjpa.persistence.jest.JESTContext.resolve(String),10,17
org.apache.openjpa.persistence.jest.JESTContext.findResource(String),38,92
"org.apache.openjpa.persistence.jest.JESTContext.log(short,String)",13,36
org.apache.openjpa.persistence.jest.JESTContext.isContextRoot(String),6,14
org.apache.openjpa.persistence.jest.JESTContext.isEmpty(String),4,4
org.apache.openjpa.persistence.jest.JESTContext.getRootResource(),50,137
"org.apache.openjpa.kernel.PDeletedState.initialize(StateManagerImpl,PCState)",7,8
org.apache.openjpa.kernel.PDeletedState.flush(StateManagerImpl),5,5
org.apache.openjpa.kernel.PDeletedState.commit(StateManagerImpl),4,4
org.apache.openjpa.kernel.PDeletedState.commitRetain(StateManagerImpl),5,5
org.apache.openjpa.kernel.PDeletedState.rollback(StateManagerImpl),5,5
org.apache.openjpa.kernel.PDeletedState.rollbackRestore(StateManagerImpl),7,9
org.apache.openjpa.kernel.PDeletedState.nontransactional(StateManagerImpl),6,7
org.apache.openjpa.kernel.PDeletedState.persist(StateManagerImpl),8,9
org.apache.openjpa.kernel.PDeletedState.release(StateManagerImpl),6,7
"org.apache.openjpa.kernel.PDeletedState.beforeWrite(StateManagerImpl,int,boolean)",8,9
"org.apache.openjpa.kernel.PDeletedState.beforeOptimisticWrite(StateManagerImpl,int,boolean)",9,10
org.apache.openjpa.kernel.PDeletedState.isTransactional(),1,1
org.apache.openjpa.kernel.PDeletedState.isPersistent(),1,1
org.apache.openjpa.kernel.PDeletedState.isDeleted(),1,1
org.apache.openjpa.kernel.PDeletedState.isDirty(),1,1
org.apache.openjpa.kernel.PDeletedState.toString(),3,4
org.apache.openjpa.jdbc.kernel.EntityF.getListG(),2,4
org.apache.openjpa.jdbc.kernel.EntityF.setListG(List<EntityG>),3,7
org.apache.openjpa.jdbc.kernel.EntityF.getId(),0,0
org.apache.openjpa.jdbc.kernel.EntityF.setId(int),1,1
"org.apache.openjpa.kernel.TDirtyState.initialize(StateManagerImpl,PCState)",10,14
org.apache.openjpa.kernel.TDirtyState.commit(StateManagerImpl),5,5
org.apache.openjpa.kernel.TDirtyState.commitRetain(StateManagerImpl),6,6
org.apache.openjpa.kernel.TDirtyState.rollback(StateManagerImpl),5,5
org.apache.openjpa.kernel.TDirtyState.rollbackRestore(StateManagerImpl),7,9
org.apache.openjpa.kernel.TDirtyState.persist(StateManagerImpl),8,9
org.apache.openjpa.kernel.TDirtyState.delete(StateManagerImpl),5,6
org.apache.openjpa.kernel.TDirtyState.nontransactional(StateManagerImpl),6,7
org.apache.openjpa.kernel.TDirtyState.isTransactional(),1,1
org.apache.openjpa.kernel.TDirtyState.isDirty(),1,1
org.apache.openjpa.kernel.TDirtyState.toString(),2,3
"org.apache.openjpa.jdbc.kernel.exps.GetMapValue.GetMapValue(Val,Val,String)",9,19
org.apache.openjpa.jdbc.kernel.exps.GetMapValue.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.GetMapValue.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.GetMapValue.isVariable(),1,1
org.apache.openjpa.jdbc.kernel.exps.GetMapValue.getType(),3,5
org.apache.openjpa.jdbc.kernel.exps.GetMapValue.setImplicitType(Class),4,6
"org.apache.openjpa.jdbc.kernel.exps.GetMapValue.initialize(Select,ExpContext,int)",11,30
"org.apache.openjpa.jdbc.kernel.exps.GetMapValue.GetMapValueExpState.GetMapValueExpState(Joins,ExpState,ExpState)",5,14
"org.apache.openjpa.jdbc.kernel.exps.GetMapValue.toDataStoreValue(Select,ExpContext,ExpState,Object)",12,28
"org.apache.openjpa.jdbc.kernel.exps.GetMapValue.select(Select,ExpContext,ExpState,boolean)",10,17
"org.apache.openjpa.jdbc.kernel.exps.GetMapValue.selectColumns(Select,ExpContext,ExpState,boolean)",11,30
"org.apache.openjpa.jdbc.kernel.exps.GetMapValue.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.GetMapValue.orderBy(Select,ExpContext,ExpState,boolean)",7,10
"org.apache.openjpa.jdbc.kernel.exps.GetMapValue.newSQLBuffer(Select,ExpContext,ExpState)",13,27
"org.apache.openjpa.jdbc.kernel.exps.GetMapValue.load(ExpContext,ExpState,Result)",15,19
"org.apache.openjpa.jdbc.kernel.exps.GetMapValue.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",11,31
"org.apache.openjpa.jdbc.kernel.exps.GetMapValue.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.GetMapValue.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",51,187
org.apache.openjpa.jira1100.TestBadVersionField.setUp(),3,4
org.apache.openjpa.jira1100.TestBadVersionField.testWrongVersionFieldNotSupported(),14,19
org.apache.openjpa.jira1100.TestBadVersionField.Data.getId(),0,0
org.apache.openjpa.jira1100.TestBadVersionField.Data.getVersion(),2,3
org.apache.openjpa.integration.validation.TestTraversableResolver.setUp(),4,4
"org.apache.openjpa.integration.validation.TestTraversableResolver.createEMF(String,String)",29,51
org.apache.openjpa.integration.validation.TestTraversableResolver.closeEMF(),3,8
org.apache.openjpa.integration.validation.TestTraversableResolver.testLoadedTitle(),36,64
org.apache.openjpa.integration.validation.TestTraversableResolver.testUnloaded(),35,53
org.apache.openjpa.integration.validation.TestTraversableResolver.testCascading(),36,62
org.apache.openjpa.integration.validation.TestTraversableResolver.testPages(),34,88
org.apache.openjpa.integration.validation.TestTraversableResolver.testTitle(),35,81
"org.apache.openjpa.integration.validation.TestTraversableResolver.createBook(int,String,int)",22,49
org.apache.openjpa.integration.validation.TestTraversableResolver.getLeafNodeFromString(String),45,175
org.apache.openjpa.persistence.annotations.TestTablePerClassInheritance.TestTablePerClassInheritance(String),6,7
org.apache.openjpa.persistence.annotations.TestTablePerClassInheritance.testInsertAndRetrieve(),17,79
org.apache.openjpa.lib.ant.AbstractTask.setHaltOnError(boolean),6,13
org.apache.openjpa.lib.ant.AbstractTask.setIsolate(boolean),5,8
org.apache.openjpa.lib.ant.AbstractTask.setUseParentClassloader(boolean),8,13
org.apache.openjpa.lib.ant.AbstractTask.getConfiguration(),7,13
org.apache.openjpa.lib.ant.AbstractTask.newConfiguration(),6,8
org.apache.openjpa.lib.ant.AbstractTask.executeOn(String[]),7,8
org.apache.openjpa.lib.ant.AbstractTask.getClassLoader(),11,21
org.apache.openjpa.lib.ant.AbstractTask.assertFiles(String[]),18,25
org.apache.openjpa.lib.ant.AbstractTask.setClasspath(Path),5,8
org.apache.openjpa.lib.ant.AbstractTask.createClasspath(),4,10
org.apache.openjpa.lib.ant.AbstractTask.createConfig(),4,4
org.apache.openjpa.lib.ant.AbstractTask.addFileset(FileSet),5,9
org.apache.openjpa.lib.ant.AbstractTask.execute(),38,90
org.apache.openjpa.lib.ant.AbstractTask.getConfigPropertiesResourceLoader(),13,33
org.apache.openjpa.lib.ant.AbstractTask.getFiles(),24,53
jpa.tools.swing.SourceCodeViewer.SourceCodeViewer(),35,93
jpa.tools.swing.SourceCodeViewer.SourceCodeViewer().$1.actionPerformed(ActionEvent),8,9
"jpa.tools.swing.SourceCodeViewer.addPage(String,URI)",21,32
jpa.tools.swing.SourceCodeViewer.showAnchor(String),9,18
"jpa.tools.swing.SourceCodeViewer.showPage(String,URI)",21,43
org.apache.openjpa.lib.log.LogFactoryAdapter.getLog(String),9,22
org.apache.openjpa.lib.log.LogFactoryAdapter.newLogAdapter(String),10,15
"org.apache.openjpa.lib.util.OrderedMap<K,V>.OrderedMap()",7,8
"org.apache.openjpa.lib.util.OrderedMap<K,V>.OrderedMap(boolean)",13,16
"org.apache.openjpa.lib.util.OrderedMap<K,V>.indexOf(Object)",6,8
"org.apache.openjpa.lib.util.OrderedMap<K,V>.clear()",0,0
"org.apache.openjpa.lib.util.OrderedMap<K,V>.containsKey(Object)",4,8
"org.apache.openjpa.lib.util.OrderedMap<K,V>.containsValue(Object)",4,8
"org.apache.openjpa.lib.util.OrderedMap<K,V>.entrySet()",6,10
"org.apache.openjpa.lib.util.OrderedMap<K,V>.get(Object)",3,4
"org.apache.openjpa.lib.util.OrderedMap<K,V>.isEmpty()",2,3
"org.apache.openjpa.lib.util.OrderedMap<K,V>.keySet()",3,6
"org.apache.openjpa.lib.util.OrderedMap<K,V>.put(K,V)",3,5
"org.apache.openjpa.lib.util.OrderedMap<K,V>.putAll(Map<>)",2,2
"org.apache.openjpa.lib.util.OrderedMap<K,V>.remove(Object)",4,6
"org.apache.openjpa.lib.util.OrderedMap<K,V>.size()",2,3
"org.apache.openjpa.lib.util.OrderedMap<K,V>.values()",3,4
org.apache.openjpa.lib.rop.TestWindowResultList.TestWindowResultList(String),5,7
org.apache.openjpa.lib.rop.TestWindowResultList.getResultList(ResultObjectProvider),5,12
org.apache.openjpa.lib.rop.TestWindowResultList.main(String[]),3,4
org.apache.openjpa.ee.AbstractManagedRuntime.getTransactionKey(),14,24
org.apache.openjpa.ee.AbstractManagedRuntime.doNonTransactionalWork(Runnable),39,96
org.apache.openjpa.trader.domain.Ask.Ask(),8,8
"org.apache.openjpa.trader.domain.Ask.Ask(Trader,Stock,double,int)",21,40
org.apache.openjpa.trader.domain.Ask.getSeller(),4,8
org.apache.openjpa.trader.domain.Ask.getGain(),5,6
org.apache.openjpa.persistence.access.FieldSub3.getCreateDate(),3,5
org.apache.openjpa.persistence.access.FieldSub3.setCreateDate(Date),4,8
org.apache.openjpa.persistence.access.FieldSub3.equals(Object),9,29
"org.apache.openjpa.persistence.LockTimeoutException.LockTimeoutException(String,Throwable[],Object)",9,17
org.apache.openjpa.persistence.LockTimeoutException.getType(),2,2
org.apache.openjpa.persistence.LockTimeoutException.getSubtype(),4,4
org.apache.openjpa.persistence.LockTimeoutException.isFatal(),1,2
org.apache.openjpa.persistence.LockTimeoutException.getCause(),5,6
org.apache.openjpa.persistence.LockTimeoutException.getNestedThrowables(),5,8
org.apache.openjpa.persistence.LockTimeoutException.getFailedObject(),2,4
org.apache.openjpa.persistence.LockTimeoutException.toString(),2,4
org.apache.openjpa.persistence.LockTimeoutException.printStackTrace(),5,8
org.apache.openjpa.persistence.LockTimeoutException.printStackTrace(PrintStream),7,12
org.apache.openjpa.persistence.LockTimeoutException.printStackTrace(PrintWriter),7,12
org.apache.openjpa.persistence.LockTimeoutException.writeObject(ObjectOutputStream),11,22
org.apache.openjpa.persistence.LockTimeoutException.readObject(ObjectInputStream),10,17
org.apache.openjpa.integration.validation.IAddress.getStreetAddress(),3,3
org.apache.openjpa.integration.validation.IAddress.setStreetAddress(String),4,6
org.apache.openjpa.integration.validation.IAddress.getCity(),2,2
org.apache.openjpa.integration.validation.IAddress.setCity(String),3,4
org.apache.openjpa.integration.validation.IAddress.getState(),1,1
org.apache.openjpa.integration.validation.IAddress.setState(String),2,2
org.apache.openjpa.integration.validation.IAddress.getPostalCode(),3,3
org.apache.openjpa.integration.validation.IAddress.setPostalCode(String),4,6
org.apache.openjpa.integration.validation.IAddress.getPhoneNumber(),2,2
org.apache.openjpa.integration.validation.IAddress.setPhoneNumber(String),3,4
org.apache.openjpa.jdbc.meta.strats.ObjectIdClassStrategy.map(boolean),22,38
"org.apache.openjpa.jdbc.kernel.JDBCLockManager.selectForUpdate(Select,int)",11,14
org.apache.openjpa.jdbc.kernel.JDBCLockManager.loadedForUpdate(OpenJPAStateManager),11,13
org.apache.openjpa.jdbc.kernel.JDBCLockManager.skipRelationFieldLock(),7,8
org.apache.openjpa.persistence.access.xml.XMLEmbedPropAccess.XMLEmbedPropAccess(),4,4
"org.apache.openjpa.persistence.access.xml.XMLEmbedPropAccess.XMLEmbedPropAccess(String,String)",7,10
org.apache.openjpa.persistence.access.xml.XMLEmbedPropAccess.getFirstName(),2,3
org.apache.openjpa.persistence.access.xml.XMLEmbedPropAccess.setFirstName(String),4,6
org.apache.openjpa.persistence.access.xml.XMLEmbedPropAccess.getLastName(),2,3
org.apache.openjpa.persistence.access.xml.XMLEmbedPropAccess.setLastName(String),4,6
org.apache.openjpa.persistence.access.xml.XMLEmbedPropAccess.equals(Object),8,23
"org.apache.openjpa.jdbc.kernel.exps.MatchesExpression.MatchesExpression(Val,Const,String,String,String)",11,23
"org.apache.openjpa.jdbc.kernel.exps.MatchesExpression.initialize(Select,ExpContext,Map)",11,23
"org.apache.openjpa.jdbc.kernel.exps.MatchesExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",51,155
"org.apache.openjpa.jdbc.kernel.exps.MatchesExpression.replaceEscape(String,String,String,String)",30,72
"org.apache.openjpa.jdbc.kernel.exps.MatchesExpression.selectColumns(Select,ExpContext,ExpState,boolean)",10,25
org.apache.openjpa.jdbc.kernel.exps.MatchesExpression.acceptVisit(ExpressionVisitor),7,16
"org.apache.openjpa.jdbc.meta.RelationId.toRelationDataStoreValue(OpenJPAStateManager,Column)",12,14
org.apache.openjpa.event.PersistListener.beforePersist(LifecycleEvent),6,7
org.apache.openjpa.event.PersistListener.afterPersist(LifecycleEvent),6,7
org.apache.openjpa.instrumentation.jmx.DataCacheJMXInstrument.getName(),4,4
org.apache.openjpa.instrumentation.jmx.DataCacheJMXInstrument.getLevel(),3,6
org.apache.openjpa.instrumentation.jmx.DataCacheJMXInstrument.initialize(),33,76
org.apache.openjpa.instrumentation.jmx.DataCacheJMXInstrument.getObjectName(),11,26
org.apache.openjpa.instrumentation.jmx.DataCacheJMXInstrument.start(),3,4
org.apache.openjpa.instrumentation.jmx.DataCacheJMXInstrument.stop(),3,4
org.apache.openjpa.kernel.ClearFieldManager.getInstance(),4,4
org.apache.openjpa.kernel.ClearFieldManager.ClearFieldManager(),2,2
org.apache.openjpa.kernel.ClearFieldManager.fetchBooleanField(int),2,3
org.apache.openjpa.kernel.ClearFieldManager.fetchByteField(int),2,3
org.apache.openjpa.kernel.ClearFieldManager.fetchCharField(int),2,3
org.apache.openjpa.kernel.ClearFieldManager.fetchDoubleField(int),2,3
org.apache.openjpa.kernel.ClearFieldManager.fetchFloatField(int),2,3
org.apache.openjpa.kernel.ClearFieldManager.fetchIntField(int),2,3
org.apache.openjpa.kernel.ClearFieldManager.fetchLongField(int),2,3
org.apache.openjpa.kernel.ClearFieldManager.fetchObjectField(int),3,5
org.apache.openjpa.kernel.ClearFieldManager.fetchShortField(int),2,3
org.apache.openjpa.kernel.ClearFieldManager.fetchStringField(int),3,5
org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer.setConfiguration(Properties),7,12
org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer.setTool(ReverseMappingTool),4,8
"org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer.getTableType(Table,int)",19,82
"org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer.getClassName(Table,String)",17,71
org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer.customize(ClassMapping),17,43
org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer.getClassCode(ClassMapping),3,4
org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer.customize(FieldMapping),10,17
"org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer.getFieldName(ClassMapping,Column[],ForeignKey,String)",27,95
org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer.getInitialValue(FieldMapping),7,10
org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer.getDeclaration(FieldMapping),4,5
org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer.getFieldCode(FieldMapping),4,6
org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer.unmappedTable(Table),2,4
org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer.close(),11,15
org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer.getProperty(String),11,20
"org.apache.openjpa.jdbc.sql.DBDictionaryFactory.newDBDictionary(JDBCConfiguration,String,String)",10,17
"org.apache.openjpa.jdbc.sql.DBDictionaryFactory.calculateDBDictionary(JDBCConfiguration,String,String,String)",17,40
"org.apache.openjpa.jdbc.sql.DBDictionaryFactory.newDBDictionary(JDBCConfiguration,DataSource,String)",35,92
org.apache.openjpa.jdbc.sql.DBDictionaryFactory.getProtocol(String),25,50
"org.apache.openjpa.jdbc.sql.DBDictionaryFactory.newDBDictionary(JDBCConfiguration,String,String,Connection)",58,181
"org.apache.openjpa.jdbc.sql.DBDictionaryFactory.dictionaryClassForString(String,JDBCConfiguration)",65,265
org.apache.openjpa.jdbc.sql.DBDictionaryFactory.toString(DatabaseMetaData),142,1464
"org.apache.openjpa.kernel.DistinctResultList<E>.DistinctResultList(ResultList<E>,RuntimeExceptionTranslator)",11,20
org.apache.openjpa.kernel.DistinctResultList<E>.add(E),4,4
"org.apache.openjpa.kernel.DistinctResultList<E>.add(int,E)",6,6
org.apache.openjpa.kernel.DistinctResultList<E>.addAll(Collection<>),5,5
"org.apache.openjpa.kernel.DistinctResultList<E>.addAll(int,Collection<>)",6,6
org.apache.openjpa.kernel.DistinctResultList<E>.clear(),4,4
org.apache.openjpa.kernel.DistinctResultList<E>.contains(Object),6,7
org.apache.openjpa.kernel.DistinctResultList<E>.containsAll(Collection<>),6,7
org.apache.openjpa.kernel.DistinctResultList<E>.get(int),5,6
org.apache.openjpa.kernel.DistinctResultList<E>.indexOf(Object),6,7
org.apache.openjpa.kernel.DistinctResultList<E>.isEmpty(),5,6
org.apache.openjpa.kernel.DistinctResultList<E>.iterator(),5,7
org.apache.openjpa.kernel.DistinctResultList<E>.lastIndexOf(Object),6,7
org.apache.openjpa.kernel.DistinctResultList<E>.listIterator(),6,10
org.apache.openjpa.kernel.DistinctResultList<E>.listIterator(int),7,12
org.apache.openjpa.kernel.DistinctResultList<E>.remove(Object),5,5
org.apache.openjpa.kernel.DistinctResultList<E>.remove(int),5,5
org.apache.openjpa.kernel.DistinctResultList<E>.removeAll(Collection<>),5,5
org.apache.openjpa.kernel.DistinctResultList<E>.retainAll(Collection<>),5,5
"org.apache.openjpa.kernel.DistinctResultList<E>.set(int,E)",6,6
org.apache.openjpa.kernel.DistinctResultList<E>.size(),5,6
"org.apache.openjpa.kernel.DistinctResultList<E>.subList(int,int)",7,13
org.apache.openjpa.kernel.DistinctResultList<E>.toArray(),6,7
org.apache.openjpa.kernel.DistinctResultList<E>.toArray(T[]),5,6
org.apache.openjpa.kernel.DistinctResultList<E>.translate(RuntimeException),4,8
org.apache.openjpa.kernel.DistinctResultList<E>.writeReplace(),6,7
jpa.tools.swing.PreparedQueryViewer.PreparedQueryViewer(OpenJPAEntityManagerFactory),15,23
org.apache.openjpa.trader.client.ui.GridCellRenderer<T>.render(T),12,19
"org.apache.openjpa.persistence.annotations.AnnotationTestCase.AnnotationTestCase(String,String)",4,6
org.apache.openjpa.persistence.annotations.AnnotationTestCase.computePersistenceXmlResource(String),19,41
org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.PreparedSQLStoreQuery(JDBCStore),5,8
"org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.newDataStoreExecutor(ClassMetaData,boolean)",7,12
org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.setQuery(Object),9,17
org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.getPreparedQuery(),4,6
"org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.PreparedSQLExecutor.PreparedSQLExecutor(PreparedSQLStoreQuery,ClassMetaData)",8,13
org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.PreparedSQLExecutor.getQueryExpressions(),3,9
org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.PreparedSQLExecutor.getProjectionTypes(StoreQuery),5,9
"org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.PreparedSQLExecutor.executeQuery(StoreQuery,Object[],Range)",53,203
"org.apache.openjpa.jdbc.kernel.PreparedSQLStoreQuery.PreparedSQLExecutor.toParameterArray(StoreQuery,Map)",34,72
org.apache.openjpa.jdbc.sql.SQLErrorCodeReader.getDictionaries(InputStream),41,73
"org.apache.openjpa.jdbc.sql.SQLErrorCodeReader.parse(InputStream,String,DBDictionary)",48,97
"org.apache.openjpa.jdbc.sql.SQLErrorCodeReader.readErrorCodes(Node,DBDictionary)",29,83
org.apache.openjpa.jdbc.kernel.exps.Count.Count(Val),7,12
"org.apache.openjpa.jdbc.kernel.exps.Count.initialize(Select,ExpContext,int)",21,41
org.apache.openjpa.jdbc.kernel.exps.Count.getType(Class),1,1
org.apache.openjpa.jdbc.kernel.exps.Count.getOperator(),3,3
org.apache.openjpa.jdbc.kernel.exps.Count.isAggregate(),1,1
org.apache.openjpa.jdbc.kernel.exps.Count.isCountDistinctMultiCols(),5,9
"org.apache.openjpa.jdbc.kernel.exps.Count.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",29,56
org.apache.openjpa.kernel.QueryStatistics<T>.keys(),5,6
org.apache.openjpa.kernel.QueryStatistics<T>.recordExecution(T),4,6
org.apache.openjpa.kernel.QueryStatistics<T>.recordEviction(T),4,6
org.apache.openjpa.kernel.QueryStatistics<T>.getExecutionCount(),5,6
org.apache.openjpa.kernel.QueryStatistics<T>.getTotalExecutionCount(),5,7
org.apache.openjpa.kernel.QueryStatistics<T>.getExecutionCount(T),5,6
org.apache.openjpa.kernel.QueryStatistics<T>.getTotalExecutionCount(T),6,7
org.apache.openjpa.kernel.QueryStatistics<T>.getHitCount(),7,7
org.apache.openjpa.kernel.QueryStatistics<T>.getTotalHitCount(),7,8
org.apache.openjpa.kernel.QueryStatistics<T>.getHitCount(T),6,7
org.apache.openjpa.kernel.QueryStatistics<T>.getTotalHitCount(T),7,8
org.apache.openjpa.kernel.QueryStatistics<T>.getEvictionCount(),2,2
org.apache.openjpa.kernel.QueryStatistics<T>.getTotalEvictionCount(),6,7
org.apache.openjpa.kernel.QueryStatistics<T>.since(),3,3
org.apache.openjpa.kernel.QueryStatistics<T>.start(),3,4
org.apache.openjpa.kernel.QueryStatistics<T>.reset(),4,5
org.apache.openjpa.kernel.QueryStatistics<T>.clear(),4,4
org.apache.openjpa.kernel.QueryStatistics<T>.dump(PrintStream),5,6
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.keys(),4,5
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.getExecutionCount(),4,4
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.getTotalExecutionCount(),5,5
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.getExecutionCount(T),5,7
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.getTotalExecutionCount(T),6,8
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.getHitCount(),3,4
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.getTotalHitCount(),4,5
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.getHitCount(T),4,7
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.getTotalHitCount(T),5,8
"org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.getCount(Map<T,long[]>,T,int)",5,9
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.since(),1,1
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.start(),2,3
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.reset(),6,6
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.clear(),16,29
"org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.addSample(T,int)",8,18
"org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.addSample(Map<T,long[]>,T,int)",8,16
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.recordExecution(T),11,18
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.recordEviction(T),6,8
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.dump(PrintStream),21,59
"org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.pct(long,long)",2,4
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.toString(long[]),5,12
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.getEvictionCount(),4,4
org.apache.openjpa.kernel.QueryStatistics<T>.Default<T>.getTotalEvictionCount(),5,5
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.clear(),0,0
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.dump(PrintStream),3,3
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.getExecutionCount(),2,2
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.getExecutionCount(T),3,3
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.getHitCount(),2,2
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.getHitCount(T),3,3
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.getTotalExecutionCount(),3,3
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.getTotalExecutionCount(T),4,4
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.getTotalHitCount(),3,3
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.getTotalHitCount(T),4,4
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.getEvictionCount(),2,2
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.getTotalEvictionCount(),3,3
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.keys(),4,5
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.recordExecution(T),3,3
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.reset(),3,4
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.since(),1,1
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.start(),2,3
org.apache.openjpa.kernel.QueryStatistics<T>.None<T>.recordEviction(T),3,3
"org.apache.openjpa.datacache.Caches.addTypesByName(OpenJPAConfiguration,Collection<String>,Set<Class<>>)",29,60
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity2.LifeCycleDDEntity2(),3,3
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity2.LifeCycleDDEntity2(String,String)",6,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity2.verifyPrePersist(),10,13
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity2.verifyPostPersist(),10,13
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity2.verifyPreRemove(),10,13
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity2.getId(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity2.setName(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity2.getName(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity2.setSurName(String),5,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity2.getSurName(),4,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEnableSelectedDataCacheTrue.getEntityManagerFactory(),34,76
org.apache.openjpa.conf.CacheMarshallersValue.CacheMarshallersValue(Configuration),14,24
"org.apache.openjpa.conf.CacheMarshallersValue.instantiate(Class<>,Configuration,boolean)",15,29
org.apache.openjpa.conf.CacheMarshallersValue.getMarshallerById(String),17,44
org.apache.openjpa.conf.CacheMarshallersValue.getLog(),3,5
"org.apache.openjpa.conf.CacheMarshallersValue.getMarshallerById(Configuration,String)",15,28
org.apache.openjpa.conf.CacheMarshallersValue.getInstancesAsMap(),6,7
org.apache.openjpa.conf.CacheMarshallersValue.initialize(),6,7
org.apache.openjpa.persistence.query.AnyExpression.AnyExpression(QueryDefinitionImpl),8,9
org.apache.openjpa.event.RemoteCommitEvent.RemoteCommitEvent(),5,5
"org.apache.openjpa.event.RemoteCommitEvent.RemoteCommitEvent(int,Collection,Collection,Collection,Collection)",26,89
org.apache.openjpa.event.RemoteCommitEvent.getPayloadType(),4,6
org.apache.openjpa.event.RemoteCommitEvent.getPersistedObjectIds(),25,45
org.apache.openjpa.event.RemoteCommitEvent.getUpdatedObjectIds(),25,36
org.apache.openjpa.event.RemoteCommitEvent.getDeletedObjectIds(),18,25
org.apache.openjpa.event.RemoteCommitEvent.getPersistedTypeNames(),14,18
org.apache.openjpa.event.RemoteCommitEvent.getUpdatedTypeNames(),18,26
org.apache.openjpa.event.RemoteCommitEvent.getDeletedTypeNames(),18,26
org.apache.openjpa.event.RemoteCommitEvent.writeExternal(ObjectOutput),13,25
org.apache.openjpa.event.RemoteCommitEvent.readExternal(ObjectInput),16,32
org.apache.openjpa.jdbc.kernel.Employee.getId(),0,0
org.apache.openjpa.jdbc.kernel.Employee.setId(int),1,1
org.apache.openjpa.jdbc.kernel.Employee.getFirstName(),2,3
org.apache.openjpa.jdbc.kernel.Employee.setFirstName(String),3,6
org.apache.openjpa.jdbc.kernel.Employee.getLastName(),2,3
org.apache.openjpa.jdbc.kernel.Employee.setLastName(String),3,6
org.apache.openjpa.jdbc.kernel.Employee.getTasks(),3,4
org.apache.openjpa.jdbc.kernel.Employee.setTasks(Collection<Task>),4,7
org.apache.openjpa.jdbc.kernel.Employee.getVersion(),1,2
"org.apache.openjpa.audit.AuditLogger.audit(Broker,Collection<Audited>,Collection<Audited>,Collection<Audited>)",17,63
org.apache.openjpa.audit.AuditLogger.setFile(String),8,14
org.apache.openjpa.audit.AuditLogger.getFile(),2,3
org.apache.openjpa.audit.AuditLogger.isRollbackOnError(),2,2
org.apache.openjpa.audit.AuditLogger.setConfiguration(Configuration),3,4
org.apache.openjpa.audit.AuditLogger.startConfiguration(),2,2
org.apache.openjpa.audit.AuditLogger.endConfiguration(),1,1
org.apache.openjpa.audit.AuditLogger.close(),3,4
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingResultList(ResultList<T>),6,10
"org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingResultList(ResultList<T>,RuntimeExceptionTranslator)",11,19
org.apache.openjpa.kernel.DelegatingResultList<T>.getDelegate(),5,6
org.apache.openjpa.kernel.DelegatingResultList<T>.getInnermostDelegate(),6,16
org.apache.openjpa.kernel.DelegatingResultList<T>.writeReplace(),10,12
org.apache.openjpa.kernel.DelegatingResultList<T>.hashCode(),7,9
org.apache.openjpa.kernel.DelegatingResultList<T>.equals(Object),10,16
org.apache.openjpa.kernel.DelegatingResultList<T>.translate(RuntimeException),5,11
org.apache.openjpa.kernel.DelegatingResultList<T>.isProviderOpen(),5,6
org.apache.openjpa.kernel.DelegatingResultList<T>.getUserObject(),6,9
org.apache.openjpa.kernel.DelegatingResultList<T>.setUserObject(Object),8,13
org.apache.openjpa.kernel.DelegatingResultList<T>.close(),5,6
org.apache.openjpa.kernel.DelegatingResultList<T>.isClosed(),5,6
org.apache.openjpa.kernel.DelegatingResultList<T>.size(),5,6
org.apache.openjpa.kernel.DelegatingResultList<T>.isEmpty(),5,6
org.apache.openjpa.kernel.DelegatingResultList<T>.contains(Object),6,7
org.apache.openjpa.kernel.DelegatingResultList<T>.iterator(),2,4
org.apache.openjpa.kernel.DelegatingResultList<T>.toArray(),6,7
org.apache.openjpa.kernel.DelegatingResultList<T>.toArray(Object[]),6,8
org.apache.openjpa.kernel.DelegatingResultList<T>.add(T),5,6
org.apache.openjpa.kernel.DelegatingResultList<T>.remove(Object),6,7
org.apache.openjpa.kernel.DelegatingResultList<T>.containsAll(Collection<>),6,7
org.apache.openjpa.kernel.DelegatingResultList<T>.addAll(Collection<>),6,7
"org.apache.openjpa.kernel.DelegatingResultList<T>.addAll(int,Collection<>)",7,9
org.apache.openjpa.kernel.DelegatingResultList<T>.removeAll(Collection<>),6,7
org.apache.openjpa.kernel.DelegatingResultList<T>.retainAll(Collection<>),6,7
org.apache.openjpa.kernel.DelegatingResultList<T>.clear(),4,4
org.apache.openjpa.kernel.DelegatingResultList<T>.get(int),5,6
"org.apache.openjpa.kernel.DelegatingResultList<T>.set(int,T)",7,10
"org.apache.openjpa.kernel.DelegatingResultList<T>.add(int,T)",7,10
org.apache.openjpa.kernel.DelegatingResultList<T>.remove(int),6,8
org.apache.openjpa.kernel.DelegatingResultList<T>.indexOf(Object),6,7
org.apache.openjpa.kernel.DelegatingResultList<T>.lastIndexOf(Object),6,7
org.apache.openjpa.kernel.DelegatingResultList<T>.listIterator(),7,13
org.apache.openjpa.kernel.DelegatingResultList<T>.listIterator(int),8,15
"org.apache.openjpa.kernel.DelegatingResultList<T>.subList(int,int)",7,13
org.apache.openjpa.kernel.DelegatingResultList<T>.toString(),5,7
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingListIterator<T>.DelegatingListIterator(ListIterator<T>),7,9
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingListIterator<T>.getDelegate(),5,6
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingListIterator<T>.getInnermostDelegate(),6,16
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingListIterator<T>.hashCode(),7,9
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingListIterator<T>.equals(Object),10,16
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingListIterator<T>.hasNext(),4,4
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingListIterator<T>.next(),4,4
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingListIterator<T>.hasPrevious(),5,6
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingListIterator<T>.previous(),5,6
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingListIterator<T>.nextIndex(),5,6
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingListIterator<T>.previousIndex(),6,8
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingListIterator<T>.remove(),5,6
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingListIterator<T>.set(T),5,6
org.apache.openjpa.kernel.DelegatingResultList<T>.DelegatingListIterator<T>.add(T),5,6
org.apache.openjpa.kernel.TestQueryCompilationCache.testDynamicJPQLWithNamedEntity(),45,94
org.apache.openjpa.kernel.PreparedQuery.getIdentifier(),2,2
org.apache.openjpa.kernel.PreparedQuery.getTargetQuery(),3,3
org.apache.openjpa.kernel.PreparedQuery.getOriginalQuery(),3,5
org.apache.openjpa.kernel.PreparedQuery.getLanguage(),4,5
org.apache.openjpa.kernel.PreparedQuery.setInto(Query),2,2
org.apache.openjpa.kernel.PreparedQuery.initialize(Object),19,24
org.apache.openjpa.kernel.PreparedQuery.isInitialized(),3,4
"org.apache.openjpa.kernel.PreparedQuery.reparametrize(Map,Broker)",18,29
"org.apache.openjpa.kernel.FetchConfigurationImpl.populateHintSetter(Class<>,String,Class<>,String)",19,48
"org.apache.openjpa.kernel.FetchConfigurationImpl.populateHintSetter(Class<>,String,String,Class<>,String)",23,71
org.apache.openjpa.kernel.FetchConfigurationImpl.FetchConfigurationImpl(),3,3
org.apache.openjpa.kernel.FetchConfigurationImpl.FetchConfigurationImpl(ConfigurationState),6,10
org.apache.openjpa.kernel.FetchConfigurationImpl.getContext(),3,4
org.apache.openjpa.kernel.FetchConfigurationImpl.setContext(StoreContext),33,90
org.apache.openjpa.kernel.FetchConfigurationImpl.clone(),21,53
org.apache.openjpa.kernel.FetchConfigurationImpl.newInstance(ConfigurationState),5,10
org.apache.openjpa.kernel.FetchConfigurationImpl.copy(FetchConfiguration),33,108
org.apache.openjpa.kernel.FetchConfigurationImpl.copyHints(FetchConfiguration),9,25
org.apache.openjpa.kernel.FetchConfigurationImpl.getFetchBatchSize(),3,6
org.apache.openjpa.kernel.FetchConfigurationImpl.setFetchBatchSize(int),6,30
org.apache.openjpa.kernel.FetchConfigurationImpl.getMaxFetchDepth(),3,6
org.apache.openjpa.kernel.FetchConfigurationImpl.setMaxFetchDepth(int),8,24
org.apache.openjpa.kernel.FetchConfigurationImpl.getQueryCacheEnabled(),3,5
org.apache.openjpa.kernel.FetchConfigurationImpl.setQueryCacheEnabled(boolean),6,10
org.apache.openjpa.kernel.FetchConfigurationImpl.getFlushBeforeQueries(),3,4
org.apache.openjpa.kernel.FetchConfigurationImpl.getExtendedPathLookup(),3,6
org.apache.openjpa.kernel.FetchConfigurationImpl.setExtendedPathLookup(boolean),7,11
org.apache.openjpa.kernel.FetchConfigurationImpl.setFlushBeforeQueries(int),18,47
org.apache.openjpa.kernel.FetchConfigurationImpl.getFetchGroups(),5,8
org.apache.openjpa.kernel.FetchConfigurationImpl.hasFetchGroup(String),4,9
org.apache.openjpa.kernel.FetchConfigurationImpl.hasFetchGroupDefault(),4,9
org.apache.openjpa.kernel.FetchConfigurationImpl.hasFetchGroupAll(),2,3
org.apache.openjpa.kernel.FetchConfigurationImpl.addFetchGroup(String),5,9
"org.apache.openjpa.kernel.FetchConfigurationImpl.addFetchGroup(String,boolean)",18,39
org.apache.openjpa.kernel.FetchConfigurationImpl.addFetchGroups(Collection<String>),7,12
org.apache.openjpa.kernel.FetchConfigurationImpl.removeFetchGroup(String),4,7
"org.apache.openjpa.kernel.FetchConfigurationImpl.removeFetchGroup(String,boolean)",11,24
org.apache.openjpa.kernel.FetchConfigurationImpl.removeFetchGroups(Collection<String>),8,14
org.apache.openjpa.kernel.FetchConfigurationImpl.clearFetchGroups(),2,4
org.apache.openjpa.kernel.FetchConfigurationImpl.clearFetchGroups(boolean),13,24
org.apache.openjpa.kernel.FetchConfigurationImpl.resetFetchGroups(),10,26
org.apache.openjpa.kernel.FetchConfigurationImpl.verifyDefaultPUFetchGroups(),17,37
org.apache.openjpa.kernel.FetchConfigurationImpl.isDefaultPUFetchGroupConfigurationOnly(),2,3
org.apache.openjpa.kernel.FetchConfigurationImpl.isFetchConfigurationSQLCacheAdmissible(),11,18
org.apache.openjpa.kernel.FetchConfigurationImpl.getFields(),5,8
org.apache.openjpa.kernel.FetchConfigurationImpl.hasField(String),4,7
org.apache.openjpa.kernel.FetchConfigurationImpl.addField(String),15,25
org.apache.openjpa.kernel.FetchConfigurationImpl.addFields(Collection<String>),12,22
org.apache.openjpa.kernel.FetchConfigurationImpl.removeField(String),10,16
org.apache.openjpa.kernel.FetchConfigurationImpl.removeFields(Collection<String>),8,13
org.apache.openjpa.kernel.FetchConfigurationImpl.clearFields(),6,9
org.apache.openjpa.kernel.FetchConfigurationImpl.getCacheRetrieveMode(),4,10
org.apache.openjpa.kernel.FetchConfigurationImpl.getCacheStoreMode(),4,10
org.apache.openjpa.kernel.FetchConfigurationImpl.setCacheRetrieveMode(DataCacheRetrieveMode),5,13
org.apache.openjpa.kernel.FetchConfigurationImpl.setCacheStoreMode(DataCacheStoreMode),5,13
org.apache.openjpa.kernel.FetchConfigurationImpl.getLockTimeout(),2,4
org.apache.openjpa.kernel.FetchConfigurationImpl.setLockTimeout(int),12,27
org.apache.openjpa.kernel.FetchConfigurationImpl.getQueryTimeout(),2,4
org.apache.openjpa.kernel.FetchConfigurationImpl.setQueryTimeout(int),12,27
org.apache.openjpa.kernel.FetchConfigurationImpl.getLockScope(),2,4
org.apache.openjpa.kernel.FetchConfigurationImpl.setLockScope(int),17,36
org.apache.openjpa.kernel.FetchConfigurationImpl.getReadLockLevel(),3,6
org.apache.openjpa.kernel.FetchConfigurationImpl.setReadLockLevel(int),27,98
org.apache.openjpa.kernel.FetchConfigurationImpl.getWriteLockLevel(),3,6
org.apache.openjpa.kernel.FetchConfigurationImpl.setWriteLockLevel(int),27,92
org.apache.openjpa.kernel.FetchConfigurationImpl.newResultList(ResultObjectProvider),14,36
org.apache.openjpa.kernel.FetchConfigurationImpl.assertActiveTransaction(),4,11
org.apache.openjpa.kernel.FetchConfigurationImpl.isActiveTransaction(),3,5
org.apache.openjpa.kernel.FetchConfigurationImpl.getHints(),18,27
org.apache.openjpa.kernel.FetchConfigurationImpl.isHintSet(String),7,13
org.apache.openjpa.kernel.FetchConfigurationImpl.removeHint(String),10,25
org.apache.openjpa.kernel.FetchConfigurationImpl.getSupportedHints(),8,8
"org.apache.openjpa.kernel.FetchConfigurationImpl.setHint(String,Object)",7,23
"org.apache.openjpa.kernel.FetchConfigurationImpl.setHint(String,Object,Object)",53,174
"org.apache.openjpa.kernel.FetchConfigurationImpl.addHint(String,Object)",11,17
org.apache.openjpa.kernel.FetchConfigurationImpl.getHint(String),5,7
org.apache.openjpa.kernel.FetchConfigurationImpl.getRootClasses(),5,10
org.apache.openjpa.kernel.FetchConfigurationImpl.setRootClasses(Collection<Class<>>),11,27
org.apache.openjpa.kernel.FetchConfigurationImpl.getRootInstances(),6,11
org.apache.openjpa.kernel.FetchConfigurationImpl.setRootInstances(Collection<>),12,28
org.apache.openjpa.kernel.FetchConfigurationImpl.lock(),2,4
org.apache.openjpa.kernel.FetchConfigurationImpl.unlock(),2,4
org.apache.openjpa.kernel.FetchConfigurationImpl.requiresFetch(FieldMetaData),31,63
org.apache.openjpa.kernel.FetchConfigurationImpl.requiresLoad(),2,3
org.apache.openjpa.kernel.FetchConfigurationImpl.traverse(FieldMetaData),27,69
org.apache.openjpa.kernel.FetchConfigurationImpl.includes(FieldMetaData),15,28
org.apache.openjpa.kernel.FetchConfigurationImpl.hasExtendedLookupPath(FieldMetaData),9,19
"org.apache.openjpa.kernel.FetchConfigurationImpl.getAvailableRecursionDepth(FieldMetaData,Class<>,String,boolean)",44,168
org.apache.openjpa.kernel.FetchConfigurationImpl.reduce(int),5,7
org.apache.openjpa.kernel.FetchConfigurationImpl.getParent(),3,4
org.apache.openjpa.kernel.FetchConfigurationImpl.isRoot(),2,2
org.apache.openjpa.kernel.FetchConfigurationImpl.getRoot(),4,6
org.apache.openjpa.kernel.FetchConfigurationImpl.getAvailableFetchDepth(),3,5
org.apache.openjpa.kernel.FetchConfigurationImpl.getAvailableRecursionDepth(),3,5
org.apache.openjpa.kernel.FetchConfigurationImpl.getTraversedFromField(),3,4
org.apache.openjpa.kernel.FetchConfigurationImpl.getTraversedFromType(),2,3
org.apache.openjpa.kernel.FetchConfigurationImpl.getPath(),10,16
org.apache.openjpa.kernel.FetchConfigurationImpl.trackPath(List<FetchConfigurationImpl>),8,19
org.apache.openjpa.kernel.FetchConfigurationImpl.toString(),10,12
org.apache.openjpa.kernel.FetchConfigurationImpl.getPathString(),14,35
org.apache.openjpa.kernel.FetchConfigurationImpl.toString(Object),3,5
"org.apache.openjpa.meta.FieldMetaData.FieldMetaData(String,Class<>,ClassMetaData)",19,51
org.apache.openjpa.meta.FieldMetaData.backingMember(Member),34,97
org.apache.openjpa.meta.FieldMetaData.getBackingMember(),2,2
org.apache.openjpa.meta.FieldMetaData.getRepository(),5,8
org.apache.openjpa.meta.FieldMetaData.getDefiningMetaData(),7,9
org.apache.openjpa.meta.FieldMetaData.getDeclaringType(),5,8
org.apache.openjpa.meta.FieldMetaData.setDeclaringType(Class<>),8,12
org.apache.openjpa.meta.FieldMetaData.getDeclaringMetaData(),8,21
org.apache.openjpa.meta.FieldMetaData.getName(),3,5
org.apache.openjpa.meta.FieldMetaData.getFullName(),7,10
org.apache.openjpa.meta.FieldMetaData.getFullName(boolean),14,45
org.apache.openjpa.meta.FieldMetaData.getRealName(),13,17
org.apache.openjpa.meta.FieldMetaData.getValue(),5,9
org.apache.openjpa.meta.FieldMetaData.getKey(),5,8
org.apache.openjpa.meta.FieldMetaData.getElement(),6,8
org.apache.openjpa.meta.FieldMetaData.isMapped(),9,14
org.apache.openjpa.meta.FieldMetaData.getProxyType(),8,14
org.apache.openjpa.meta.FieldMetaData.setProxyType(Class<>),8,14
org.apache.openjpa.meta.FieldMetaData.getInitializer(),14,20
org.apache.openjpa.meta.FieldMetaData.setInitializer(Object),14,23
org.apache.openjpa.meta.FieldMetaData.isTransient(),1,1
org.apache.openjpa.meta.FieldMetaData.setTransient(boolean),3,4
org.apache.openjpa.meta.FieldMetaData.getIndex(),5,7
org.apache.openjpa.meta.FieldMetaData.setIndex(int),6,10
org.apache.openjpa.meta.FieldMetaData.getDeclaredIndex(),7,9
org.apache.openjpa.meta.FieldMetaData.setDeclaredIndex(int),8,12
org.apache.openjpa.meta.FieldMetaData.getListingIndex(),8,14
org.apache.openjpa.meta.FieldMetaData.setListingIndex(int),9,17
org.apache.openjpa.meta.FieldMetaData.getPrimaryKeyIndex(),6,17
org.apache.openjpa.meta.FieldMetaData.setPrimaryKeyIndex(int),7,20
org.apache.openjpa.meta.FieldMetaData.getManagement(),10,25
org.apache.openjpa.meta.FieldMetaData.setManagement(int),13,37
org.apache.openjpa.meta.FieldMetaData.isPrimaryKey(),4,7
org.apache.openjpa.meta.FieldMetaData.setPrimaryKey(boolean),5,12
org.apache.openjpa.meta.FieldMetaData.getObjectIdFieldTypeCode(),23,59
org.apache.openjpa.meta.FieldMetaData.getObjectIdFieldType(),23,62
org.apache.openjpa.meta.FieldMetaData.isVersion(),5,7
org.apache.openjpa.meta.FieldMetaData.setVersion(boolean),6,10
org.apache.openjpa.meta.FieldMetaData.isInDefaultFetchGroup(),22,54
org.apache.openjpa.meta.FieldMetaData.isEnum(),6,9
org.apache.openjpa.meta.FieldMetaData.isSerializable(),7,16
org.apache.openjpa.meta.FieldMetaData.isLobArray(),9,21
org.apache.openjpa.meta.FieldMetaData.setInDefaultFetchGroup(boolean),5,13
org.apache.openjpa.meta.FieldMetaData.isDefaultFetchGroupExplicit(),4,8
org.apache.openjpa.meta.FieldMetaData.setDefaultFetchGroupExplicit(boolean),7,17
org.apache.openjpa.meta.FieldMetaData.getCustomFetchGroups(),18,33
org.apache.openjpa.meta.FieldMetaData.getLoadFetchGroup(),8,10
org.apache.openjpa.meta.FieldMetaData.setLoadFetchGroup(String),9,16
org.apache.openjpa.meta.FieldMetaData.isInFetchGroup(String),12,20
"org.apache.openjpa.meta.FieldMetaData.setInFetchGroup(String,boolean)",22,48
org.apache.openjpa.meta.FieldMetaData.getNullValue(),15,29
org.apache.openjpa.meta.FieldMetaData.setNullValue(int),16,32
org.apache.openjpa.meta.FieldMetaData.isExplicit(),5,6
org.apache.openjpa.meta.FieldMetaData.setExplicit(boolean),6,9
org.apache.openjpa.meta.FieldMetaData.getMappedBy(),5,7
org.apache.openjpa.meta.FieldMetaData.setMappedBy(String),7,12
org.apache.openjpa.meta.FieldMetaData.getMappedByMetaData(),26,115
"org.apache.openjpa.meta.FieldMetaData.getMappedByField(ClassMetaData,String)",11,59
org.apache.openjpa.meta.FieldMetaData.getInverse(),7,12
org.apache.openjpa.meta.FieldMetaData.setInverse(String),6,10
org.apache.openjpa.meta.FieldMetaData.getInverseMetaDatas(),53,218
org.apache.openjpa.meta.FieldMetaData.getValueStrategy(),9,19
org.apache.openjpa.meta.FieldMetaData.setValueStrategy(int),11,23
org.apache.openjpa.meta.FieldMetaData.getValueSequenceName(),9,18
org.apache.openjpa.meta.FieldMetaData.setValueSequenceName(String),10,25
org.apache.openjpa.meta.FieldMetaData.getValueSequenceMetaData(),9,27
org.apache.openjpa.meta.FieldMetaData.getUpdateStrategy(),8,15
org.apache.openjpa.meta.FieldMetaData.setUpdateStrategy(int),3,9
org.apache.openjpa.meta.FieldMetaData.isLRS(),6,8
org.apache.openjpa.meta.FieldMetaData.setLRS(boolean),4,8
org.apache.openjpa.meta.FieldMetaData.isStream(),4,7
org.apache.openjpa.meta.FieldMetaData.setStream(boolean),3,7
org.apache.openjpa.meta.FieldMetaData.usesIntermediate(),12,17
org.apache.openjpa.meta.FieldMetaData.setUsesIntermediate(boolean),15,25
org.apache.openjpa.meta.FieldMetaData.usesImplData(),16,42
org.apache.openjpa.meta.FieldMetaData.setUsesImplData(Boolean),14,33
org.apache.openjpa.meta.FieldMetaData.getOrders(),29,70
org.apache.openjpa.meta.FieldMetaData.setOrders(Order[]),6,6
org.apache.openjpa.meta.FieldMetaData.getOrderDeclaration(),24,45
org.apache.openjpa.meta.FieldMetaData.setOrderDeclaration(String),21,30
org.apache.openjpa.meta.FieldMetaData.order(Object),32,95
org.apache.openjpa.meta.FieldMetaData.isExternalized(),7,8
"org.apache.openjpa.meta.FieldMetaData.getExternalValue(Object,StoreContext)",46,132
"org.apache.openjpa.meta.FieldMetaData.getFieldValue(Object,StoreContext)",50,130
org.apache.openjpa.meta.FieldMetaData.getExternalizer(),6,8
org.apache.openjpa.meta.FieldMetaData.setExternalizer(String),8,14
org.apache.openjpa.meta.FieldMetaData.getFactory(),5,7
org.apache.openjpa.meta.FieldMetaData.setFactory(String),7,12
org.apache.openjpa.meta.FieldMetaData.getExternalValues(),7,12
org.apache.openjpa.meta.FieldMetaData.setExternalValues(String),8,17
org.apache.openjpa.meta.FieldMetaData.getExternalValueMap(),8,14
org.apache.openjpa.meta.FieldMetaData.getFieldValueMap(),7,14
org.apache.openjpa.meta.FieldMetaData.parseExternalValues(),35,118
"org.apache.openjpa.meta.FieldMetaData.transform(String,int)",22,92
org.apache.openjpa.meta.FieldMetaData.getExternalizerMethod(),11,32
org.apache.openjpa.meta.FieldMetaData.getFactoryMethod(),15,39
org.apache.openjpa.meta.FieldMetaData.findMethod(String),13,29
"org.apache.openjpa.meta.FieldMetaData.findMethodByNameAndType(String,Class<>)",46,151
"org.apache.openjpa.meta.FieldMetaData.isConvertibleToByMethodInvocationConversion(Class<>,Class<>)",32,132
org.apache.openjpa.meta.FieldMetaData.unbox(Class<>),13,72
org.apache.openjpa.meta.FieldMetaData.box(Class<>),20,84
"org.apache.openjpa.meta.FieldMetaData.isConvertibleToByWideningPrimitive(Class<>,Class<>)",16,154
"org.apache.openjpa.meta.FieldMetaData.isConvertibleToByIdentityPrimitiveConversion(Class<>,Class<>)",15,37
org.apache.openjpa.meta.FieldMetaData.isStoreContextParameter(Class<>),12,21
org.apache.openjpa.meta.FieldMetaData.equals(Object),6,11
org.apache.openjpa.meta.FieldMetaData.hashCode(),3,5
org.apache.openjpa.meta.FieldMetaData.compareTo(Object),6,8
org.apache.openjpa.meta.FieldMetaData.toString(),2,3
org.apache.openjpa.meta.FieldMetaData.getResolve(),4,6
org.apache.openjpa.meta.FieldMetaData.setResolve(int),5,9
"org.apache.openjpa.meta.FieldMetaData.setResolve(int,boolean)",6,18
org.apache.openjpa.meta.FieldMetaData.resolve(int),46,121
org.apache.openjpa.meta.FieldMetaData.validateLRS(),24,51
org.apache.openjpa.meta.FieldMetaData.validateSupportedType(),40,205
org.apache.openjpa.meta.FieldMetaData.validateValue(),18,37
org.apache.openjpa.meta.FieldMetaData.copy(FieldMetaData),69,210
org.apache.openjpa.meta.FieldMetaData.addExtensionKeys(Collection),10,14
org.apache.openjpa.meta.FieldMetaData.getComments(),3,6
org.apache.openjpa.meta.FieldMetaData.setComments(String[]),3,6
org.apache.openjpa.meta.FieldMetaData.getFieldMetaData(),3,6
org.apache.openjpa.meta.FieldMetaData.getType(),2,3
org.apache.openjpa.meta.FieldMetaData.setType(Class),9,25
org.apache.openjpa.meta.FieldMetaData.getTypeCode(),3,5
org.apache.openjpa.meta.FieldMetaData.setTypeCode(int),4,9
org.apache.openjpa.meta.FieldMetaData.isTypePC(),2,3
org.apache.openjpa.meta.FieldMetaData.getTypeMetaData(),4,9
org.apache.openjpa.meta.FieldMetaData.getDeclaredType(),3,5
org.apache.openjpa.meta.FieldMetaData.setDeclaredType(Class),10,30
org.apache.openjpa.meta.FieldMetaData.getDeclaredTypeCode(),4,7
org.apache.openjpa.meta.FieldMetaData.setDeclaredTypeCode(int),5,11
org.apache.openjpa.meta.FieldMetaData.isDeclaredTypePC(),3,5
org.apache.openjpa.meta.FieldMetaData.getDeclaredTypeMetaData(),5,11
org.apache.openjpa.meta.FieldMetaData.isEmbedded(),2,3
org.apache.openjpa.meta.FieldMetaData.setEmbedded(boolean),3,7
org.apache.openjpa.meta.FieldMetaData.isEmbeddedPC(),2,3
org.apache.openjpa.meta.FieldMetaData.getEmbeddedMetaData(),4,9
org.apache.openjpa.meta.FieldMetaData.addEmbeddedMetaData(int),6,13
org.apache.openjpa.meta.FieldMetaData.addEmbeddedMetaData(),5,11
org.apache.openjpa.meta.FieldMetaData.getCascadeDelete(),3,5
org.apache.openjpa.meta.FieldMetaData.setCascadeDelete(int),4,9
org.apache.openjpa.meta.FieldMetaData.getCascadePersist(),3,5
org.apache.openjpa.meta.FieldMetaData.setCascadePersist(int),4,9
org.apache.openjpa.meta.FieldMetaData.getCascadeAttach(),3,5
org.apache.openjpa.meta.FieldMetaData.setCascadeAttach(int),4,9
org.apache.openjpa.meta.FieldMetaData.getCascadeDetach(),3,5
org.apache.openjpa.meta.FieldMetaData.setCascadeDetach(int),4,9
org.apache.openjpa.meta.FieldMetaData.getCascadeRefresh(),3,5
org.apache.openjpa.meta.FieldMetaData.setCascadeRefresh(int),4,9
org.apache.openjpa.meta.FieldMetaData.isSerialized(),2,3
org.apache.openjpa.meta.FieldMetaData.setSerialized(boolean),3,7
org.apache.openjpa.meta.FieldMetaData.getValueMappedBy(),4,6
org.apache.openjpa.meta.FieldMetaData.setValueMappedBy(String),5,10
org.apache.openjpa.meta.FieldMetaData.getValueMappedByMetaData(),6,12
org.apache.openjpa.meta.FieldMetaData.getTypeOverride(),3,5
org.apache.openjpa.meta.FieldMetaData.setTypeOverride(Class),4,9
org.apache.openjpa.meta.FieldMetaData.copy(ValueMetaData),6,8
org.apache.openjpa.meta.FieldMetaData.isUsedInOrderBy(),3,4
org.apache.openjpa.meta.FieldMetaData.setUsedInOrderBy(boolean),3,4
org.apache.openjpa.meta.FieldMetaData.MemberProvider.MemberProvider(),2,2
org.apache.openjpa.meta.FieldMetaData.MemberProvider.MemberProvider(Member),5,5
org.apache.openjpa.meta.FieldMetaData.MemberProvider.getMember(),0,0
org.apache.openjpa.meta.FieldMetaData.MemberProvider.readExternal(ObjectInput),26,69
org.apache.openjpa.meta.FieldMetaData.MemberProvider.writeExternal(ObjectOutput),11,21
org.apache.openjpa.meta.FieldMetaData.isValueGenerated(),2,3
org.apache.openjpa.meta.FieldMetaData.setValueGenerated(boolean),3,6
org.apache.openjpa.meta.FieldMetaData.isElementCollection(),2,4
org.apache.openjpa.meta.FieldMetaData.setElementCollection(boolean),3,9
org.apache.openjpa.meta.FieldMetaData.getMappedByIdValue(),3,5
org.apache.openjpa.meta.FieldMetaData.setMappedByIdValue(String),4,10
org.apache.openjpa.meta.FieldMetaData.isMappedById(),2,3
org.apache.openjpa.meta.FieldMetaData.getAccessType(),9,28
org.apache.openjpa.meta.FieldMetaData.setAccessType(int),14,28
org.apache.openjpa.meta.FieldMetaData.getAssociationType(),2,4
org.apache.openjpa.meta.FieldMetaData.setAssociationType(int),3,7
org.apache.openjpa.meta.FieldMetaData.isPersistentCollection(),2,4
org.apache.openjpa.meta.FieldMetaData.setPersistentCollection(boolean),3,9
org.apache.openjpa.meta.FieldMetaData.getRelationType(),6,31
org.apache.openjpa.meta.FieldMetaData.isDelayCapable(),18,40
org.apache.openjpa.meta.FieldMetaData.setDelayCapable(Boolean),3,9
org.apache.openjpa.meta.FieldMetaData.getUseSchemaElement(),6,9
org.apache.openjpa.meta.FieldMetaData.setUseSchemaElement(boolean),7,14
org.apache.openjpa.conf.OpenJPAConfigurationImpl.OpenJPAConfigurationImpl(),8,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.OpenJPAConfigurationImpl(boolean),10,15
"org.apache.openjpa.conf.OpenJPAConfigurationImpl.OpenJPAConfigurationImpl(boolean,boolean)",183,1864
org.apache.openjpa.conf.OpenJPAConfigurationImpl.supportedOptions(),4,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getSpecification(),9,16
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getSpecificationInstance(),2,5
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setSpecification(String),10,18
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setSpecification(Specification),3,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setClassResolver(String),4,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getClassResolver(),3,5
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setClassResolver(ClassResolver),3,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getClassResolverInstance(),4,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setBrokerFactory(String),5,11
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getBrokerFactory(),4,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setBrokerImpl(String),5,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getBrokerImpl(),4,6
"org.apache.openjpa.conf.OpenJPAConfigurationImpl.newBrokerInstance(String,String)",10,25
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setDataCacheManager(String),7,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getDataCacheManager(),5,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setDataCacheManager(DataCacheManager),8,23
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getDataCacheManagerInstance(),9,41
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setDataCache(String),5,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getDataCache(),4,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setDataCacheTimeout(int),4,14
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setDataCacheTimeout(Integer),6,19
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getDataCacheTimeout(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setQueryCache(String),5,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getQueryCache(),4,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getRefreshFromDataCache(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setRefreshFromDataCache(boolean),5,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setRefreshFromDataCache(Boolean),6,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getDynamicDataStructs(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setDynamicDataStructs(boolean),4,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setDynamicDataStructs(Boolean),5,11
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setLockManager(String),5,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getLockManager(),4,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.newLockManagerInstance(),13,23
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setInverseManager(String),5,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getInverseManager(),4,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.newInverseManagerInstance(),5,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setSavepointManager(String),5,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getSavepointManager(),4,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getSavepointManagerInstance(),5,19
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setOrphanedKeyAction(String),6,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getOrphanedKeyAction(),5,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getOrphanedKeyActionInstance(),6,23
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setOrphanedKeyAction(OrphanedKeyAction),5,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setRemoteCommitProvider(String),6,16
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getRemoteCommitProvider(),5,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.newRemoteCommitProviderInstance(),6,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setRemoteCommitEventManager(RemoteCommitEventManager),8,27
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getRemoteCommitEventManager(),7,30
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setTransactionMode(String),4,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getTransactionMode(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setTransactionModeManaged(boolean),4,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.isTransactionModeManaged(),3,5
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setManagedRuntime(String),5,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getManagedRuntime(),4,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setManagedRuntime(ManagedRuntime),4,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getManagedRuntimeInstance(),5,19
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setProxyManager(String),5,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getProxyManager(),4,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setProxyManager(ProxyManager),4,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getProxyManagerInstance(),5,19
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setMapping(String),3,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getMapping(),2,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setMetaDataFactory(String),6,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getMetaDataFactory(),5,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.newMetaDataFactoryInstance(),6,17
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setMetaDataRepository(String),6,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getMetaDataRepository(),5,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setMetaDataRepository(MetaDataRepository),4,11
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getMetaDataRepositoryInstance(),4,17
org.apache.openjpa.conf.OpenJPAConfigurationImpl.metaDataRepositoryAvailable(),4,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.newMetaDataRepositoryInstance(),6,17
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionUserName(String),5,16
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionUserName(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionPassword(String),4,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionPassword(),6,14
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionURL(String),4,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionURL(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionDriverName(String),5,14
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionDriverName(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionProperties(String),4,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionProperties(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionFactoryProperties(String),5,16
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionFactoryProperties(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionFactoryMode(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionFactoryMode(String),5,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.isConnectionFactoryModeManaged(),4,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionFactoryModeManaged(boolean),5,11
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionFactoryName(String),5,16
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionFactoryName(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionFactory(Object),4,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionFactory(),7,19
"org.apache.openjpa.conf.OpenJPAConfigurationImpl.lookupConnectionFactory(String,String)",16,30
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnection2UserName(String),5,16
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnection2UserName(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnection2Password(String),4,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnection2Password(),6,14
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnection2URL(String),4,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnection2URL(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnection2DriverName(String),5,14
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnection2DriverName(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnection2Properties(String),4,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnection2Properties(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionFactory2Properties(String),5,16
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionFactory2Properties(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionFactory2Name(String),5,16
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionFactory2Name(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionFactory2(Object),4,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionFactory2(),7,19
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setOptimistic(boolean),2,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setOptimistic(Boolean),3,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getOptimistic(),1,2
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setAutoClear(String),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getAutoClear(),2,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setAutoClear(int),2,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getAutoClearConstant(),2,3
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setRetainState(boolean),2,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setRetainState(Boolean),3,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getRetainState(),1,2
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setRestoreState(String),3,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getRestoreState(),2,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setRestoreState(int),2,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getRestoreStateConstant(),2,3
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setAutoDetach(String),4,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getAutoDetach(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setAutoDetach(int),5,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getAutoDetachConstant(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setDetachState(String),4,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getDetachState(),3,5
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setDetachState(DetachOptions),4,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getDetachStateInstance(),5,15
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setIgnoreChanges(boolean),3,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setIgnoreChanges(Boolean),4,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getIgnoreChanges(),2,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setNontransactionalRead(boolean),3,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setNontransactionalRead(Boolean),4,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getNontransactionalRead(),2,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setNontransactionalWrite(boolean),3,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setNontransactionalWrite(Boolean),4,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getNontransactionalWrite(),2,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setMultithreaded(boolean),2,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setMultithreaded(Boolean),3,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getMultithreaded(),1,2
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setFetchBatchSize(int),4,14
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setFetchBatchSize(Integer),6,19
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getFetchBatchSize(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setMaxFetchDepth(int),4,14
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setMaxFetchDepth(Integer),6,19
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getMaxFetchDepth(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setFetchGroups(String),3,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getFetchGroups(),2,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getFetchGroupsList(),3,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setFetchGroups(String[]),3,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setFlushBeforeQueries(String),4,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getFlushBeforeQueries(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setFlushBeforeQueries(int),3,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getFlushBeforeQueriesConstant(),3,5
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setLockTimeout(int),3,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setLockTimeout(Integer),5,11
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getLockTimeout(),2,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getQueryTimeout(),2,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setQueryTimeout(int),3,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setReadLockLevel(String),5,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getReadLockLevel(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setReadLockLevel(int),4,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getReadLockLevelConstant(),4,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setWriteLockLevel(String),5,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getWriteLockLevel(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setWriteLockLevel(int),4,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getWriteLockLevelConstant(),4,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setSequence(String),5,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getSequence(),4,5
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setSequence(Seq),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getSequenceInstance(),5,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionRetainMode(String),5,16
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionRetainMode(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setConnectionRetainMode(int),4,14
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConnectionRetainModeConstant(),4,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setFilterListeners(String),6,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getFilterListeners(),5,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setFilterListeners(FilterListener[]),5,11
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getFilterListenerInstances(),5,19
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setAggregateListeners(String),6,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getAggregateListeners(),5,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setAggregateListeners(AggregateListener[]),5,11
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getAggregateListenerInstances(),5,19
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setRetryClassRegistration(boolean),3,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setRetryClassRegistration(Boolean),4,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getRetryClassRegistration(),2,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getCompatibility(),3,5
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setCompatibility(String),4,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getCompatibilityInstance(),15,41
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getCallbackOptions(),4,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setCallbackOptions(String),5,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getCallbackOptionsInstance(),5,16
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getQueryCompilationCache(),5,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setQueryCompilationCache(String),6,17
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getQueryCompilationCacheInstance(),7,20
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getStoreFacadeTypeRegistry(),4,11
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getBrokerFactoryEventManager(),4,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getRuntimeUnenhancedClasses(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getRuntimeUnenhancedClassesConstant(),4,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setRuntimeUnenhancedClasses(int),5,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setRuntimeUnenhancedClasses(String),6,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getCacheMarshallers(),5,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setCacheMarshallers(String),6,11
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getCacheMarshallerInstances(),5,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.isInitializeEagerly(),4,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setInitializeEagerly(boolean),6,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setValidationMode(String),4,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getValidationMode(),3,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setValidationGroupPrePersist(String),5,14
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getValidationGroupPrePersist(),4,20
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setValidationGroupPreUpdate(String),5,14
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getValidationGroupPreUpdate(),4,20
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setValidationGroupPreRemove(String),5,14
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getValidationGroupPreRemove(),4,20
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getInstrumentation(),3,5
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setInstrumentation(String),4,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getInstrumentationInstances(),5,15
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setInstrumentationManager(String),5,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getInstrumentationManager(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setInstrumentationManager(InstrumentationManager),5,11
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getInstrumentationManagerInstance(),9,25
org.apache.openjpa.conf.OpenJPAConfigurationImpl.instantiateAll(),17,22
org.apache.openjpa.conf.OpenJPAConfigurationImpl.preClose(),11,21
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getConfigurationLog(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setQuerySQLCache(String),7,17
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setQuerySQLCache(PreparedQueryCache),6,18
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getQuerySQLCache(),6,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getQuerySQLCacheInstance(),7,30
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setFinderCache(String),5,13
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getFinderCache(),4,7
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getFinderCacheInstance(),5,19
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getValidationFactoryInstance(),4,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setValidationFactory(Object),4,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getValidatorInstance(),3,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setValidatorInstance(Object),5,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getLifecycleEventManager(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getLifecycleEventManagerInstance(),8,36
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setLifecycleEventManager(String),21,55
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getDynamicEnhancementAgent(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setDynamicEnhancementAgent(boolean),4,10
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setEncryptionProvider(String),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getEncryptionProvider(),3,15
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setDataCacheMode(String),5,12
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getDataCacheMode(),4,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getCacheDistributionPolicy(),5,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getCacheDistributionPolicyInstance(),6,32
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setCacheDistributionPolicy(String),6,15
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setCacheDistributionPolicyInstance(CacheDistributionPolicy),6,15
"org.apache.openjpa.conf.OpenJPAConfigurationImpl.setPersistenceEnvironment(Map<String,Object>)",6,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getPersistenceEnvironment(),5,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getAuditorInstance(),4,16
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setAuditorInstance(Auditor),4,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getAuditor(),3,5
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setAuditor(String),4,9
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getPostLoadOnMerge(),3,6
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setPostLoadOnMerge(boolean),4,14
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setPostLoadOnMerge(Boolean),5,18
org.apache.openjpa.conf.OpenJPAConfigurationImpl.getOptimizeIdCopy(),2,4
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setOptimizeIdCopy(boolean),3,8
org.apache.openjpa.conf.OpenJPAConfigurationImpl.setOptimizeIdCopy(Boolean),4,10
org.apache.openjpa.lib.identifier.IdentifierImpl.IdentifierImpl(),2,2
org.apache.openjpa.lib.identifier.IdentifierImpl.IdentifierImpl(String),5,7
org.apache.openjpa.lib.identifier.IdentifierImpl.setName(String),3,6
org.apache.openjpa.lib.identifier.IdentifierImpl.getName(),2,3
org.apache.openjpa.lib.identifier.IdentifierImpl.toString(),2,3
org.apache.openjpa.lib.identifier.IdentifierImpl.hashCode(),4,9
org.apache.openjpa.lib.identifier.IdentifierImpl.length(),2,4
org.apache.openjpa.lib.identifier.IdentifierImpl.compareTo(Identifier),3,9
org.apache.openjpa.lib.rop.AbstractSequentialResultList.itr(int),8,8
org.apache.openjpa.lib.rop.AbstractSequentialResultList.contains(Object),6,10
org.apache.openjpa.lib.rop.AbstractSequentialResultList.containsAll(Collection),4,8
org.apache.openjpa.lib.rop.AbstractSequentialResultList.get(int),3,4
org.apache.openjpa.lib.rop.AbstractSequentialResultList.indexOf(Object),6,13
org.apache.openjpa.lib.rop.AbstractSequentialResultList.lastIndexOf(Object),6,13
org.apache.openjpa.lib.rop.AbstractSequentialResultList.isEmpty(),2,2
org.apache.openjpa.lib.rop.AbstractSequentialResultList.iterator(),2,4
org.apache.openjpa.lib.rop.AbstractSequentialResultList.listIterator(),2,6
org.apache.openjpa.lib.rop.AbstractSequentialResultList.listIterator(int),5,10
org.apache.openjpa.lib.rop.AbstractSequentialResultList.toArray(),6,16
org.apache.openjpa.lib.rop.AbstractSequentialResultList.toArray(Object[]),6,17
"org.apache.openjpa.kernel.StateManagerImpl.StateManagerImpl(Object,ClassMetaData,BrokerImpl)",25,45
org.apache.openjpa.kernel.StateManagerImpl.StateManagerImpl(StateManagerImpl),20,28
"org.apache.openjpa.kernel.StateManagerImpl.StateManagerImpl(StateManagerImpl,PCState)",36,74
"org.apache.openjpa.kernel.StateManagerImpl.setOwner(StateManagerImpl,ValueMetaData)",12,25
org.apache.openjpa.kernel.StateManagerImpl.isLoading(),6,7
org.apache.openjpa.kernel.StateManagerImpl.setLoading(boolean),14,24
org.apache.openjpa.kernel.StateManagerImpl.setPCState(PCState),37,84
"org.apache.openjpa.kernel.StateManagerImpl.initialize(Class,PCState)",50,106
"org.apache.openjpa.kernel.StateManagerImpl.initialize(PersistenceCapable,PCState)",69,122
org.apache.openjpa.kernel.StateManagerImpl.isIntercepting(),21,34
org.apache.openjpa.kernel.StateManagerImpl.fireLifecycleEvent(int),17,31
org.apache.openjpa.kernel.StateManagerImpl.load(FetchConfiguration),4,8
"org.apache.openjpa.kernel.StateManagerImpl.load(FetchConfiguration,int,BitSet,Object,boolean)",39,83
org.apache.openjpa.kernel.StateManagerImpl.getManagedInstance(),4,11
org.apache.openjpa.kernel.StateManagerImpl.getPersistenceCapable(),2,4
org.apache.openjpa.kernel.StateManagerImpl.getMetaData(),2,5
org.apache.openjpa.kernel.StateManagerImpl.getOwner(),3,4
org.apache.openjpa.kernel.StateManagerImpl.getOwnerIndex(),2,4
org.apache.openjpa.kernel.StateManagerImpl.setOwner(Object),4,6
org.apache.openjpa.kernel.StateManagerImpl.isEmbedded(),8,9
org.apache.openjpa.kernel.StateManagerImpl.isFlushed(),3,4
org.apache.openjpa.kernel.StateManagerImpl.isFlushedDirty(),4,6
org.apache.openjpa.kernel.StateManagerImpl.getLoaded(),3,4
org.apache.openjpa.kernel.StateManagerImpl.getUnloaded(FetchConfiguration),13,26
"org.apache.openjpa.kernel.StateManagerImpl.getUnloadedInternal(FetchConfiguration,int,BitSet)",30,73
org.apache.openjpa.kernel.StateManagerImpl.getContext(),3,4
org.apache.openjpa.kernel.StateManagerImpl.getBroker(),3,6
org.apache.openjpa.kernel.StateManagerImpl.getId(),1,1
org.apache.openjpa.kernel.StateManagerImpl.getObjectId(),6,12
org.apache.openjpa.kernel.StateManagerImpl.setObjectId(Object),9,17
org.apache.openjpa.kernel.StateManagerImpl.getObjectIdOwner(),4,10
org.apache.openjpa.kernel.StateManagerImpl.assignObjectId(boolean),5,8
"org.apache.openjpa.kernel.StateManagerImpl.assignObjectId(boolean,boolean)",14,31
org.apache.openjpa.kernel.StateManagerImpl.assertObjectIdAssigned(boolean),35,58
"org.apache.openjpa.kernel.StateManagerImpl.assignField(int,boolean)",65,172
org.apache.openjpa.kernel.StateManagerImpl.getLock(),2,3
org.apache.openjpa.kernel.StateManagerImpl.setLock(Object),3,6
org.apache.openjpa.kernel.StateManagerImpl.getVersion(),2,3
org.apache.openjpa.kernel.StateManagerImpl.setVersion(Object),6,11
org.apache.openjpa.kernel.StateManagerImpl.getLoadVersion(),3,5
org.apache.openjpa.kernel.StateManagerImpl.setNextVersion(Object),5,8
org.apache.openjpa.kernel.StateManagerImpl.assignVersionField(Object),14,25
org.apache.openjpa.kernel.StateManagerImpl.getPCState(),0,0
org.apache.openjpa.kernel.StateManagerImpl.getImplData(),3,4
"org.apache.openjpa.kernel.StateManagerImpl.setImplData(Object,boolean)",8,21
org.apache.openjpa.kernel.StateManagerImpl.isImplDataCacheable(),6,7
org.apache.openjpa.kernel.StateManagerImpl.getImplData(int),5,8
"org.apache.openjpa.kernel.StateManagerImpl.setImplData(int,Object)",6,13
org.apache.openjpa.kernel.StateManagerImpl.isImplDataCacheable(int),9,24
org.apache.openjpa.kernel.StateManagerImpl.getIntermediate(int),5,7
"org.apache.openjpa.kernel.StateManagerImpl.setIntermediate(int,Object)",6,11
"org.apache.openjpa.kernel.StateManagerImpl.getExtraFieldData(int,boolean)",15,39
"org.apache.openjpa.kernel.StateManagerImpl.setExtraFieldData(int,Object,boolean)",18,77
org.apache.openjpa.kernel.StateManagerImpl.fetch(int),8,15
"org.apache.openjpa.kernel.StateManagerImpl.fetchField(int,boolean)",26,104
"org.apache.openjpa.kernel.StateManagerImpl.store(int,Object)",7,16
"org.apache.openjpa.kernel.StateManagerImpl.storeField(int,Object)",4,9
org.apache.openjpa.kernel.StateManagerImpl.dirtyCheck(),56,107
org.apache.openjpa.kernel.StateManagerImpl.needsDirtyCheck(),5,5
org.apache.openjpa.kernel.StateManagerImpl.fetchInitialField(int),41,108
"org.apache.openjpa.kernel.StateManagerImpl.fetchField(FieldManager,FieldMetaData)",21,87
"org.apache.openjpa.kernel.StateManagerImpl.setRemote(int,Object)",13,22
org.apache.openjpa.kernel.StateManagerImpl.beforeRead(int),27,54
"org.apache.openjpa.kernel.StateManagerImpl.beforeFlush(int,OpCallbacks)",9,14
org.apache.openjpa.kernel.StateManagerImpl.afterFlush(int),55,156
org.apache.openjpa.kernel.StateManagerImpl.commit(),29,54
org.apache.openjpa.kernel.StateManagerImpl.rollback(),18,36
org.apache.openjpa.kernel.StateManagerImpl.rollbackToSavepoint(SavepointFieldManager),20,48
org.apache.openjpa.kernel.StateManagerImpl.persist(),5,8
org.apache.openjpa.kernel.StateManagerImpl.delete(),5,8
org.apache.openjpa.kernel.StateManagerImpl.nontransactional(),5,8
org.apache.openjpa.kernel.StateManagerImpl.transactional(),5,8
"org.apache.openjpa.kernel.StateManagerImpl.nonprovisional(boolean,OpCallbacks)",7,11
org.apache.openjpa.kernel.StateManagerImpl.release(boolean),5,9
"org.apache.openjpa.kernel.StateManagerImpl.release(boolean,boolean)",12,20
org.apache.openjpa.kernel.StateManagerImpl.evict(),5,8
org.apache.openjpa.kernel.StateManagerImpl.gatherCascadeRefresh(OpCallbacks),25,63
org.apache.openjpa.kernel.StateManagerImpl.beforeRefresh(boolean),29,49
org.apache.openjpa.kernel.StateManagerImpl.afterRefresh(),19,29
"org.apache.openjpa.kernel.StateManagerImpl.setDereferencedDependent(boolean,boolean)",12,34
org.apache.openjpa.kernel.StateManagerImpl.setDereferencedEmbedDependent(boolean),7,23
org.apache.openjpa.kernel.StateManagerImpl.getDereferencedEmbedDependent(),6,7
"org.apache.openjpa.kernel.StateManagerImpl.readLocked(int,int)",21,55
"org.apache.openjpa.kernel.StateManagerImpl.calculateLockLevel(boolean,boolean,FetchConfiguration)",12,62
"org.apache.openjpa.kernel.StateManagerImpl.obtainLocks(boolean,boolean,int,FetchConfiguration,Object)",26,63
org.apache.openjpa.kernel.StateManagerImpl.releaseLocks(),11,23
org.apache.openjpa.kernel.StateManagerImpl.serializing(),25,31
org.apache.openjpa.kernel.StateManagerImpl.writeDetached(ObjectOutput),27,47
org.apache.openjpa.kernel.StateManagerImpl.proxyDetachedDeserialized(int),10,10
org.apache.openjpa.kernel.StateManagerImpl.isTransactional(),8,11
org.apache.openjpa.kernel.StateManagerImpl.isPendingTransactional(),2,4
org.apache.openjpa.kernel.StateManagerImpl.isProvisional(),1,2
org.apache.openjpa.kernel.StateManagerImpl.isPersistent(),1,2
org.apache.openjpa.kernel.StateManagerImpl.isNew(),0,0
org.apache.openjpa.kernel.StateManagerImpl.isDeleted(),1,2
org.apache.openjpa.kernel.StateManagerImpl.isDirty(),1,2
org.apache.openjpa.kernel.StateManagerImpl.isDetached(),4,4
org.apache.openjpa.kernel.StateManagerImpl.getGenericContext(),4,4
org.apache.openjpa.kernel.StateManagerImpl.fetchObjectId(),23,40
org.apache.openjpa.kernel.StateManagerImpl.hasGeneratedKey(),12,18
"org.apache.openjpa.kernel.StateManagerImpl.getPCPrimaryKey(Object,int)",23,68
org.apache.openjpa.kernel.StateManagerImpl.replaceFlags(),11,13
org.apache.openjpa.kernel.StateManagerImpl.replaceStateManager(StateManager),2,4
org.apache.openjpa.kernel.StateManagerImpl.accessingField(int),19,29
org.apache.openjpa.kernel.StateManagerImpl.isDelayed(int),2,5
"org.apache.openjpa.kernel.StateManagerImpl.setDelayed(int,boolean)",5,14
org.apache.openjpa.kernel.StateManagerImpl.loadDelayedField(int),37,74
org.apache.openjpa.kernel.StateManagerImpl.beforeAccessField(int),16,35
org.apache.openjpa.kernel.StateManagerImpl.dirty(String),18,29
org.apache.openjpa.kernel.StateManagerImpl.dirty(int),2,4
org.apache.openjpa.kernel.StateManagerImpl.isEmbeddedNotUpdatable(),9,10
"org.apache.openjpa.kernel.StateManagerImpl.dirty(int,Boolean,boolean)",89,267
org.apache.openjpa.kernel.StateManagerImpl.postDirty(Boolean),14,31
"org.apache.openjpa.kernel.StateManagerImpl.removed(int,Object,boolean)",21,48
org.apache.openjpa.kernel.StateManagerImpl.newProxy(int),26,76
org.apache.openjpa.kernel.StateManagerImpl.newFieldProxy(int),29,99
org.apache.openjpa.kernel.StateManagerImpl.isDefaultValue(int),7,14
"org.apache.openjpa.kernel.StateManagerImpl.settingBooleanField(PersistenceCapable,int,boolean,boolean,int)",21,41
"org.apache.openjpa.kernel.StateManagerImpl.settingByteField(PersistenceCapable,int,byte,byte,int)",21,41
"org.apache.openjpa.kernel.StateManagerImpl.settingCharField(PersistenceCapable,int,char,char,int)",21,41
"org.apache.openjpa.kernel.StateManagerImpl.settingDoubleField(PersistenceCapable,int,double,double,int)",21,41
"org.apache.openjpa.kernel.StateManagerImpl.settingFloatField(PersistenceCapable,int,float,float,int)",21,41
"org.apache.openjpa.kernel.StateManagerImpl.settingIntField(PersistenceCapable,int,int,int,int)",21,41
"org.apache.openjpa.kernel.StateManagerImpl.settingLongField(PersistenceCapable,int,long,long,int)",21,41
"org.apache.openjpa.kernel.StateManagerImpl.settingObjectField(PersistenceCapable,int,Object,Object,int)",57,186
"org.apache.openjpa.kernel.StateManagerImpl.settingShortField(PersistenceCapable,int,short,short,int)",21,41
"org.apache.openjpa.kernel.StateManagerImpl.settingStringField(PersistenceCapable,int,String,String,int)",24,48
org.apache.openjpa.kernel.StateManagerImpl.assertNoPrimaryKeyChange(int),20,27
org.apache.openjpa.kernel.StateManagerImpl.assertNotManagedObjectId(Object),23,38
"org.apache.openjpa.kernel.StateManagerImpl.providedBooleanField(PersistenceCapable,int,boolean)",7,12
"org.apache.openjpa.kernel.StateManagerImpl.providedByteField(PersistenceCapable,int,byte)",7,12
"org.apache.openjpa.kernel.StateManagerImpl.providedCharField(PersistenceCapable,int,char)",7,12
"org.apache.openjpa.kernel.StateManagerImpl.providedDoubleField(PersistenceCapable,int,double)",7,12
"org.apache.openjpa.kernel.StateManagerImpl.providedFloatField(PersistenceCapable,int,float)",7,12
"org.apache.openjpa.kernel.StateManagerImpl.providedIntField(PersistenceCapable,int,int)",7,12
"org.apache.openjpa.kernel.StateManagerImpl.providedLongField(PersistenceCapable,int,long)",7,12
"org.apache.openjpa.kernel.StateManagerImpl.providedObjectField(PersistenceCapable,int,Object)",8,15
"org.apache.openjpa.kernel.StateManagerImpl.providedShortField(PersistenceCapable,int,short)",7,12
"org.apache.openjpa.kernel.StateManagerImpl.providedStringField(PersistenceCapable,int,String)",8,15
"org.apache.openjpa.kernel.StateManagerImpl.replaceBooleanField(PersistenceCapable,int)",5,8
"org.apache.openjpa.kernel.StateManagerImpl.replaceByteField(PersistenceCapable,int)",5,8
"org.apache.openjpa.kernel.StateManagerImpl.replaceCharField(PersistenceCapable,int)",5,8
"org.apache.openjpa.kernel.StateManagerImpl.replaceDoubleField(PersistenceCapable,int)",5,8
"org.apache.openjpa.kernel.StateManagerImpl.replaceFloatField(PersistenceCapable,int)",5,8
"org.apache.openjpa.kernel.StateManagerImpl.replaceIntField(PersistenceCapable,int)",5,8
"org.apache.openjpa.kernel.StateManagerImpl.replaceLongField(PersistenceCapable,int)",5,8
"org.apache.openjpa.kernel.StateManagerImpl.replaceObjectField(PersistenceCapable,int)",6,11
"org.apache.openjpa.kernel.StateManagerImpl.replaceShortField(PersistenceCapable,int)",5,8
"org.apache.openjpa.kernel.StateManagerImpl.replaceStringField(PersistenceCapable,int)",6,11
org.apache.openjpa.kernel.StateManagerImpl.fetchBoolean(int),11,25
org.apache.openjpa.kernel.StateManagerImpl.fetchBooleanField(int),10,22
org.apache.openjpa.kernel.StateManagerImpl.fetchByte(int),11,25
org.apache.openjpa.kernel.StateManagerImpl.fetchByteField(int),10,22
org.apache.openjpa.kernel.StateManagerImpl.fetchChar(int),12,26
org.apache.openjpa.kernel.StateManagerImpl.fetchCharField(int),10,22
org.apache.openjpa.kernel.StateManagerImpl.fetchDouble(int),11,25
org.apache.openjpa.kernel.StateManagerImpl.fetchDoubleField(int),10,22
org.apache.openjpa.kernel.StateManagerImpl.fetchFloat(int),11,25
org.apache.openjpa.kernel.StateManagerImpl.fetchFloatField(int),10,22
org.apache.openjpa.kernel.StateManagerImpl.fetchInt(int),11,25
org.apache.openjpa.kernel.StateManagerImpl.fetchIntField(int),10,22
org.apache.openjpa.kernel.StateManagerImpl.fetchLong(int),11,25
org.apache.openjpa.kernel.StateManagerImpl.fetchLongField(int),10,22
org.apache.openjpa.kernel.StateManagerImpl.fetchObject(int),11,27
org.apache.openjpa.kernel.StateManagerImpl.fetchObjectField(int),11,25
org.apache.openjpa.kernel.StateManagerImpl.fetchShort(int),11,25
org.apache.openjpa.kernel.StateManagerImpl.fetchShortField(int),10,22
org.apache.openjpa.kernel.StateManagerImpl.fetchString(int),12,28
org.apache.openjpa.kernel.StateManagerImpl.fetchStringField(int),11,25
"org.apache.openjpa.kernel.StateManagerImpl.storeBoolean(int,boolean)",11,30
"org.apache.openjpa.kernel.StateManagerImpl.storeBooleanField(int,boolean)",12,23
"org.apache.openjpa.kernel.StateManagerImpl.storeByte(int,byte)",10,28
"org.apache.openjpa.kernel.StateManagerImpl.storeByteField(int,byte)",12,23
"org.apache.openjpa.kernel.StateManagerImpl.storeChar(int,char)",11,29
"org.apache.openjpa.kernel.StateManagerImpl.storeCharField(int,char)",12,23
"org.apache.openjpa.kernel.StateManagerImpl.storeDouble(int,double)",10,28
"org.apache.openjpa.kernel.StateManagerImpl.storeDoubleField(int,double)",12,23
"org.apache.openjpa.kernel.StateManagerImpl.storeFloat(int,float)",10,28
"org.apache.openjpa.kernel.StateManagerImpl.storeFloatField(int,float)",12,23
"org.apache.openjpa.kernel.StateManagerImpl.storeInt(int,int)",10,27
"org.apache.openjpa.kernel.StateManagerImpl.storeIntField(int,int)",12,23
"org.apache.openjpa.kernel.StateManagerImpl.storeLong(int,long)",10,27
"org.apache.openjpa.kernel.StateManagerImpl.storeLongField(int,long)",12,23
"org.apache.openjpa.kernel.StateManagerImpl.storeObject(int,Object)",11,35
"org.apache.openjpa.kernel.StateManagerImpl.storeObjectField(int,Object)",14,28
"org.apache.openjpa.kernel.StateManagerImpl.storeShort(int,short)",10,28
"org.apache.openjpa.kernel.StateManagerImpl.storeShortField(int,short)",12,23
"org.apache.openjpa.kernel.StateManagerImpl.storeString(int,String)",11,30
"org.apache.openjpa.kernel.StateManagerImpl.storeStringField(int,String)",13,26
"org.apache.openjpa.kernel.StateManagerImpl.storeField(int,Object,FieldManager)",26,121
org.apache.openjpa.kernel.StateManagerImpl.eraseFlush(),7,13
org.apache.openjpa.kernel.StateManagerImpl.setLoaded(boolean),20,40
org.apache.openjpa.kernel.StateManagerImpl.setDirty(boolean),29,51
org.apache.openjpa.kernel.StateManagerImpl.clearFields(),42,76
org.apache.openjpa.kernel.StateManagerImpl.saveFields(boolean),26,52
org.apache.openjpa.kernel.StateManagerImpl.saveField(int),44,98
org.apache.openjpa.kernel.StateManagerImpl.clearSavedFields(),10,13
org.apache.openjpa.kernel.StateManagerImpl.getSaveFieldManager(),4,7
org.apache.openjpa.kernel.StateManagerImpl.restoreFields(),34,64
"org.apache.openjpa.kernel.StateManagerImpl.proxyFields(boolean,boolean)",50,86
org.apache.openjpa.kernel.StateManagerImpl.unproxyFields(),14,22
"org.apache.openjpa.kernel.StateManagerImpl.preFlush(boolean,OpCallbacks)",49,93
org.apache.openjpa.kernel.StateManagerImpl.preDelete(),19,36
org.apache.openjpa.kernel.StateManagerImpl.cascadeDelete(OpCallbacks),21,53
org.apache.openjpa.kernel.StateManagerImpl.cascadePersist(OpCallbacks),28,65
"org.apache.openjpa.kernel.StateManagerImpl.loadFields(BitSet,FetchConfiguration,int,Object)",51,146
"org.apache.openjpa.kernel.StateManagerImpl.loadField(int,int,boolean,boolean)",45,161
"org.apache.openjpa.kernel.StateManagerImpl.provideField(PersistenceCapable,FieldManager,int)",13,25
"org.apache.openjpa.kernel.StateManagerImpl.replaceField(PersistenceCapable,FieldManager,int)",13,25
"org.apache.openjpa.kernel.StateManagerImpl.setLoaded(int,boolean)",19,44
org.apache.openjpa.kernel.StateManagerImpl.setPostLoadCallback(boolean),11,20
"org.apache.openjpa.kernel.StateManagerImpl.postLoad(int,FetchConfiguration)",54,127
"org.apache.openjpa.kernel.StateManagerImpl.postLoad(String,FetchConfiguration)",24,50
org.apache.openjpa.kernel.StateManagerImpl.syncVersion(Object),9,14
org.apache.openjpa.kernel.StateManagerImpl.isVersionCheckRequired(),12,27
org.apache.openjpa.kernel.StateManagerImpl.setCheckVersion(boolean),8,21
org.apache.openjpa.kernel.StateManagerImpl.isVersionUpdateRequired(),7,11
org.apache.openjpa.kernel.StateManagerImpl.setUpdateVersion(boolean),8,21
org.apache.openjpa.kernel.StateManagerImpl.translate(RuntimeException),18,32
org.apache.openjpa.kernel.StateManagerImpl.lock(),6,11
org.apache.openjpa.kernel.StateManagerImpl.unlock(),3,6
org.apache.openjpa.kernel.StateManagerImpl.writeObject(ObjectOutputStream),10,22
"org.apache.openjpa.kernel.StateManagerImpl.writePC(ObjectOutputStream,PersistenceCapable)",21,37
org.apache.openjpa.kernel.StateManagerImpl.readObject(ObjectInputStream),26,47
org.apache.openjpa.kernel.StateManagerImpl.readPC(ObjectInputStream),19,36
org.apache.openjpa.kernel.StateManagerImpl.getMappedByIdFields(),6,8
org.apache.openjpa.kernel.StateManagerImpl.requiresFetch(FieldMetaData),9,16
org.apache.openjpa.kernel.StateManagerImpl.setPc(PersistenceCapable),3,3
org.apache.openjpa.kernel.StateManagerImpl.setBroker(BrokerImpl),4,7
org.apache.openjpa.kernel.StateManagerImpl.getFlushed(),7,11
org.apache.openjpa.kernel.StateManagerImpl.isFieldFlushed(int),4,6
org.apache.openjpa.kernel.StateManagerImpl.clearFlushField(int),9,12
org.apache.openjpa.kernel.StateManagerImpl.getDirty(),6,11
org.apache.openjpa.kernel.StateManagerImpl.isFieldDirty(int),3,6
org.apache.openjpa.kernel.StateManagerImpl.setFieldDirty(int),4,7
org.apache.openjpa.kernel.StateManagerImpl.clearDirty(int),7,12
org.apache.openjpa.kernel.StateManagerImpl.toString(),7,8
org.apache.openjpa.kernel.exps.Any.Any(Val),1,3
org.apache.openjpa.kernel.exps.Any.getType(Class),5,13
"org.apache.openjpa.kernel.exps.Any.operate(Object,Class)",7,8
org.apache.openjpa.jdbc.sql.FirebirdDictionary.FirebirdDictionary(),177,317
org.apache.openjpa.jdbc.sql.FirebirdDictionary.connectedConfiguration(Connection),33,67
"org.apache.openjpa.jdbc.sql.FirebirdDictionary.appendSelectRange(SQLBuffer,long,long,boolean)",15,51
org.apache.openjpa.jdbc.sql.FirebirdDictionary.determineFirebirdVersion(Connection),42,121
org.apache.openjpa.jdbc.sql.FirebirdDictionary.determineRangeSyntax(),16,46
org.apache.openjpa.jdbc.sql.FirebirdDictionary.getPlaceholderValueString(Column),7,13
org.apache.openjpa.jdbc.sql.FirebirdDictionary.getTableNameForMetadata(String),7,19
org.apache.openjpa.jdbc.sql.FirebirdDictionary.getTableNameForMetadata(DBIdentifier),7,18
org.apache.openjpa.jdbc.sql.FirebirdDictionary.getColumnNameForMetadata(String),4,14
org.apache.openjpa.jdbc.sql.FirebirdDictionary.getDropColumnSQL(Column),7,16
org.apache.openjpa.jdbc.sql.FirebirdDictionary.getCreateSequenceSQL(Sequence),18,64
"org.apache.openjpa.jdbc.sql.FirebirdDictionary.getSequencesSQL(String,String)",7,19
"org.apache.openjpa.jdbc.sql.FirebirdDictionary.getSequencesSQL(DBIdentifier,DBIdentifier)",10,26
org.apache.openjpa.jdbc.sql.FirebirdDictionary.newSequence(ResultSet),9,21
org.apache.openjpa.jdbc.sql.FirebirdDictionary.getDropSequenceSQL(Sequence),9,19
"org.apache.openjpa.jdbc.sql.FirebirdDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",20,45
"org.apache.openjpa.jdbc.sql.FirebirdDictionary.substring(SQLBuffer,FilterValue,FilterValue,FilterValue)",18,63
"org.apache.openjpa.jdbc.sql.FirebirdDictionary.appendSize(Column,String)",24,127
"org.apache.openjpa.jdbc.sql.FirebirdDictionary.matchErrorState(Map<Set<Integer,String>>,SQLException)",14,27
"org.apache.openjpa.kernel.exps.Concat.Concat(Val,Val)",10,16
org.apache.openjpa.kernel.exps.Concat.getType(),2,2
org.apache.openjpa.kernel.exps.Concat.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.Concat.eval(Object,Object,StoreContext,Object[])",17,50
org.apache.openjpa.kernel.exps.Concat.acceptVisit(ExpressionVisitor),8,17
org.apache.openjpa.kernel.exps.Type.Type(Val),9,12
org.apache.openjpa.kernel.exps.Type.getType(),1,1
org.apache.openjpa.kernel.exps.Type.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.Type.eval(Object,Object,StoreContext,Object[])",10,19
org.apache.openjpa.kernel.exps.Type.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.FinderCacheImpl(),16,23
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.getMapView(),17,39
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.getStatistics(),10,12
"org.apache.openjpa.jdbc.kernel.FinderCacheImpl.get(ClassMapping,FetchConfiguration)",30,96
"org.apache.openjpa.jdbc.kernel.FinderCacheImpl.cache(ClassMapping,SelectExecutor,FetchConfiguration)",45,121
"org.apache.openjpa.jdbc.kernel.FinderCacheImpl.put(ClassMapping,SelectExecutor)",17,47
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.isExcluded(ClassMapping),7,13
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.isExcluded(String),11,19
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.addExclusionPattern(String),28,49
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.removeExclusionPattern(String),24,43
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.getMatchedExclusionPattern(String),8,20
"org.apache.openjpa.jdbc.kernel.FinderCacheImpl.getMatchedKeys(String,Set<ClassMapping>)",15,29
"org.apache.openjpa.jdbc.kernel.FinderCacheImpl.getMatchedKeys(String,Collection<String>)",14,29
"org.apache.openjpa.jdbc.kernel.FinderCacheImpl.matches(String,ClassMapping)",7,11
"org.apache.openjpa.jdbc.kernel.FinderCacheImpl.matches(String,String)",5,12
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.invalidate(ClassMapping),6,8
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.markUncachable(ClassMapping),11,16
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.markUncachable(String),11,13
"org.apache.openjpa.jdbc.kernel.FinderCacheImpl.markUncachable(String,String)",21,31
"org.apache.openjpa.jdbc.kernel.FinderCacheImpl.markUncachable(ClassMapping,String)",22,34
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.searchMappingByName(String),9,15
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.setExcludes(String),15,30
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.getExcludes(),8,15
"org.apache.openjpa.jdbc.kernel.FinderCacheImpl.isHinted(FetchConfiguration,String)",9,17
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.lock(),1,4
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.unlock(),3,6
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.setEnableStats(boolean),6,11
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.getEnableStats(),2,4
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.startConfiguration(),3,4
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.setConfiguration(Configuration),3,4
org.apache.openjpa.jdbc.kernel.FinderCacheImpl.endConfiguration(),1,1
org.apache.openjpa.lib.xml.XMLWriter.XMLWriter(Writer),5,8
"org.apache.openjpa.lib.xml.XMLWriter.write(char[],int,int)",4,7
"org.apache.openjpa.lib.xml.XMLWriter.write(String,int,int)",5,8
org.apache.openjpa.lib.xml.XMLWriter.write(int),42,89
org.apache.openjpa.lib.xml.XMLWriter.writeSpaces(),4,5
org.apache.openjpa.util.CollectionChangeTracker.added(Object),5,6
org.apache.openjpa.util.CollectionChangeTracker.removed(Object),5,6
"org.apache.openjpa.util.ClassResolver.getClassLoader(Class<>,ClassLoader)",18,36
"org.apache.openjpa.jdbc.meta.JDBCRelatedFieldOrder.JDBCRelatedFieldOrder(FieldMapping,FieldMapping,boolean)",17,28
org.apache.openjpa.jdbc.meta.JDBCRelatedFieldOrder.getName(),3,4
org.apache.openjpa.jdbc.meta.JDBCRelatedFieldOrder.getIdentifier(),3,5
org.apache.openjpa.jdbc.meta.JDBCRelatedFieldOrder.isAscending(),2,2
org.apache.openjpa.jdbc.meta.JDBCRelatedFieldOrder.getComparator(),1,2
org.apache.openjpa.jdbc.meta.JDBCRelatedFieldOrder.isInRelation(),1,1
"org.apache.openjpa.jdbc.meta.JDBCRelatedFieldOrder.order(Select,ClassMapping,Joins)",9,19
"org.apache.openjpa.jdbc.meta.JDBCRelatedFieldOrder.getOrderByField(ClassMapping,FieldMapping)",16,58
org.apache.openjpa.persistence.DetachStateType.DetachStateType(int),4,6
org.apache.openjpa.persistence.DetachStateType.toKernelConstant(),3,4
org.apache.openjpa.persistence.DetachStateType.fromKernelConstant(int),9,23
org.apache.openjpa.datacache.ClearableScheduler.ClearableScheduler(OpenJPAConfiguration),8,14
org.apache.openjpa.datacache.ClearableScheduler.getInterval(),6,8
org.apache.openjpa.datacache.ClearableScheduler.setInterval(int),7,11
org.apache.openjpa.datacache.ClearableScheduler.stop(),5,8
org.apache.openjpa.datacache.ClearableScheduler.isStopped(),2,2
"org.apache.openjpa.datacache.ClearableScheduler.scheduleEviction(Clearable,String)",27,48
org.apache.openjpa.datacache.ClearableScheduler.removeFromSchedule(Clearable),7,13
org.apache.openjpa.datacache.ClearableScheduler.run(),31,74
org.apache.openjpa.datacache.ClearableScheduler.evict(Clearable),3,4
org.apache.openjpa.datacache.ClearableScheduler.Schedule.Schedule(String),35,99
"org.apache.openjpa.datacache.ClearableScheduler.Schedule.parse(String,int,int)",22,48
"org.apache.openjpa.datacache.ClearableScheduler.Schedule.matches(Date,Date)",12,26
"org.apache.openjpa.datacache.ClearableScheduler.Schedule.matches(Date,Date,Calendar,int[][],int)",11,38
org.apache.openjpa.event.AttachListener.beforeAttach(LifecycleEvent),6,7
org.apache.openjpa.event.AttachListener.afterAttach(LifecycleEvent),6,7
org.apache.openjpa.example.gallery.model.Location.setCity(String),3,6
org.apache.openjpa.example.gallery.model.Location.getCity(),2,3
org.apache.openjpa.example.gallery.model.Location.setStreet(String),3,6
org.apache.openjpa.example.gallery.model.Location.getStreet(),2,3
org.apache.openjpa.example.gallery.model.Location.setState(String),2,2
org.apache.openjpa.example.gallery.model.Location.getState(),1,1
org.apache.openjpa.example.gallery.model.Location.setCountry(String),3,6
org.apache.openjpa.example.gallery.model.Location.getCountry(),2,3
org.apache.openjpa.example.gallery.model.Location.setZipCode(String),4,10
org.apache.openjpa.example.gallery.model.Location.getZipCode(),3,5
openbook.tools.converter.TokenRenderer.getPrologue(),21,26
openbook.tools.converter.TokenRenderer.getEpilogue(),11,13
"openbook.tools.converter.TokenRenderer.render(int,Token)",20,35
openbook.tools.converter.TokenRenderer.newLine(int),11,21
openbook.tools.converter.TokenRenderer.endLine(int),9,16
"org.apache.openjpa.validation.AbstractValidator.validate(T,int)",5,5
"org.apache.openjpa.validation.AbstractValidator.validateProperty(T,String,int)",7,8
"org.apache.openjpa.validation.AbstractValidator.validateValue(Class<T>,String,Object,int)",8,10
"org.apache.openjpa.validation.AbstractValidator.validating(T,int)",3,3
org.apache.openjpa.conf.OpenJPAConfiguration.supportedOptions(),9,11
org.apache.openjpa.conf.OpenJPAConfiguration.getSpecification(),6,8
org.apache.openjpa.conf.OpenJPAConfiguration.getSpecificationInstance(),5,8
org.apache.openjpa.conf.OpenJPAConfiguration.setSpecification(String),30,39
org.apache.openjpa.conf.OpenJPAConfiguration.setSpecification(Specification),29,39
org.apache.openjpa.conf.OpenJPAConfiguration.getClassResolver(),6,8
org.apache.openjpa.conf.OpenJPAConfiguration.setClassResolver(String),7,10
org.apache.openjpa.conf.OpenJPAConfiguration.getClassResolverInstance(),3,5
org.apache.openjpa.conf.OpenJPAConfiguration.setClassResolver(ClassResolver),3,6
org.apache.openjpa.conf.OpenJPAConfiguration.getBrokerFactory(),4,6
org.apache.openjpa.conf.OpenJPAConfiguration.setBrokerFactory(String),5,8
org.apache.openjpa.conf.OpenJPAConfiguration.getBrokerImpl(),7,10
org.apache.openjpa.conf.OpenJPAConfiguration.setBrokerImpl(String),8,12
"org.apache.openjpa.conf.OpenJPAConfiguration.newBrokerInstance(String,String)",10,14
org.apache.openjpa.conf.OpenJPAConfiguration.getDataCache(),7,10
org.apache.openjpa.conf.OpenJPAConfiguration.setDataCache(String),8,13
org.apache.openjpa.conf.OpenJPAConfiguration.getDataCacheManager(),7,11
org.apache.openjpa.conf.OpenJPAConfiguration.setDataCacheManager(String),9,13
org.apache.openjpa.conf.OpenJPAConfiguration.getDataCacheManagerInstance(),13,28
org.apache.openjpa.conf.OpenJPAConfiguration.setDataCacheManager(DataCacheManager),7,15
org.apache.openjpa.conf.OpenJPAConfiguration.getDataCacheTimeout(),3,6
org.apache.openjpa.conf.OpenJPAConfiguration.setDataCacheTimeout(int),4,8
org.apache.openjpa.conf.OpenJPAConfiguration.setDataCacheTimeout(Integer),9,14
org.apache.openjpa.conf.OpenJPAConfiguration.getRefreshFromDataCache(),22,27
org.apache.openjpa.conf.OpenJPAConfiguration.setRefreshFromDataCache(boolean),18,26
org.apache.openjpa.conf.OpenJPAConfiguration.setRefreshFromDataCache(Boolean),18,26
org.apache.openjpa.conf.OpenJPAConfiguration.getQueryCache(),8,9
org.apache.openjpa.conf.OpenJPAConfiguration.setQueryCache(String),9,12
org.apache.openjpa.conf.OpenJPAConfiguration.getDynamicDataStructs(),8,10
org.apache.openjpa.conf.OpenJPAConfiguration.setDynamicDataStructs(boolean),9,13
org.apache.openjpa.conf.OpenJPAConfiguration.setDynamicDataStructs(Boolean),8,13
org.apache.openjpa.conf.OpenJPAConfiguration.getLockManager(),6,7
org.apache.openjpa.conf.OpenJPAConfiguration.setLockManager(String),7,10
org.apache.openjpa.conf.OpenJPAConfiguration.newLockManagerInstance(),7,12
org.apache.openjpa.conf.OpenJPAConfiguration.getInverseManager(),6,7
org.apache.openjpa.conf.OpenJPAConfiguration.setInverseManager(String),7,9
org.apache.openjpa.conf.OpenJPAConfiguration.newInverseManagerInstance(),7,12
org.apache.openjpa.conf.OpenJPAConfiguration.getSavepointManager(),5,6
org.apache.openjpa.conf.OpenJPAConfiguration.setSavepointManager(String),6,9
org.apache.openjpa.conf.OpenJPAConfiguration.getSavepointManagerInstance(),4,9
org.apache.openjpa.conf.OpenJPAConfiguration.getOrphanedKeyAction(),5,8
org.apache.openjpa.conf.OpenJPAConfiguration.setOrphanedKeyAction(String),6,10
org.apache.openjpa.conf.OpenJPAConfiguration.getOrphanedKeyActionInstance(),5,11
org.apache.openjpa.conf.OpenJPAConfiguration.setOrphanedKeyAction(OrphanedKeyAction),5,12
org.apache.openjpa.conf.OpenJPAConfiguration.getRemoteCommitProvider(),6,8
org.apache.openjpa.conf.OpenJPAConfiguration.setRemoteCommitProvider(String),7,12
org.apache.openjpa.conf.OpenJPAConfiguration.newRemoteCommitProviderInstance(),7,13
org.apache.openjpa.conf.OpenJPAConfiguration.getRemoteCommitEventManager(),7,16
org.apache.openjpa.conf.OpenJPAConfiguration.setRemoteCommitEventManager(RemoteCommitEventManager),8,18
org.apache.openjpa.conf.OpenJPAConfiguration.getTransactionMode(),16,22
org.apache.openjpa.conf.OpenJPAConfiguration.setTransactionMode(String),17,24
org.apache.openjpa.conf.OpenJPAConfiguration.isTransactionModeManaged(),4,5
org.apache.openjpa.conf.OpenJPAConfiguration.setTransactionModeManaged(boolean),5,8
org.apache.openjpa.conf.OpenJPAConfiguration.getManagedRuntime(),6,10
org.apache.openjpa.conf.OpenJPAConfiguration.setManagedRuntime(String),7,13
org.apache.openjpa.conf.OpenJPAConfiguration.getManagedRuntimeInstance(),5,9
org.apache.openjpa.conf.OpenJPAConfiguration.setManagedRuntime(ManagedRuntime),5,10
org.apache.openjpa.conf.OpenJPAConfiguration.getProxyManager(),7,10
org.apache.openjpa.conf.OpenJPAConfiguration.setProxyManager(String),8,13
org.apache.openjpa.conf.OpenJPAConfiguration.getProxyManagerInstance(),4,8
org.apache.openjpa.conf.OpenJPAConfiguration.setProxyManager(ProxyManager),4,9
org.apache.openjpa.conf.OpenJPAConfiguration.getMapping(),5,6
org.apache.openjpa.conf.OpenJPAConfiguration.setMapping(String),6,8
org.apache.openjpa.conf.OpenJPAConfiguration.getMetaDataFactory(),7,11
org.apache.openjpa.conf.OpenJPAConfiguration.setMetaDataFactory(String),8,13
org.apache.openjpa.conf.OpenJPAConfiguration.newMetaDataFactoryInstance(),7,13
org.apache.openjpa.conf.OpenJPAConfiguration.getMetaDataRepository(),7,11
org.apache.openjpa.conf.OpenJPAConfiguration.setMetaDataRepository(String),8,13
org.apache.openjpa.conf.OpenJPAConfiguration.getMetaDataRepositoryInstance(),9,14
org.apache.openjpa.conf.OpenJPAConfiguration.metaDataRepositoryAvailable(),7,10
org.apache.openjpa.conf.OpenJPAConfiguration.newMetaDataRepositoryInstance(),9,13
org.apache.openjpa.conf.OpenJPAConfiguration.setMetaDataRepository(MetaDataRepository),8,12
org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionUserName(),6,9
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionUserName(String),7,13
org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionPassword(),5,7
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionPassword(String),6,10
org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionURL(),5,7
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionURL(String),6,10
org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionDriverName(),4,7
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionDriverName(String),5,10
org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactoryName(),6,9
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionFactoryName(String),7,11
org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactory(),5,7
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionFactory(Object),4,7
org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionProperties(),8,9
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionProperties(String),10,11
org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactoryProperties(),5,8
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionFactoryProperties(String),7,10
org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactoryMode(),19,24
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionFactoryMode(String),20,26
org.apache.openjpa.conf.OpenJPAConfiguration.isConnectionFactoryModeManaged(),9,9
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionFactoryModeManaged(boolean),10,11
org.apache.openjpa.conf.OpenJPAConfiguration.getConnection2UserName(),6,9
org.apache.openjpa.conf.OpenJPAConfiguration.setConnection2UserName(String),7,13
org.apache.openjpa.conf.OpenJPAConfiguration.getConnection2Password(),5,7
org.apache.openjpa.conf.OpenJPAConfiguration.setConnection2Password(String),6,10
org.apache.openjpa.conf.OpenJPAConfiguration.getConnection2URL(),5,7
org.apache.openjpa.conf.OpenJPAConfiguration.setConnection2URL(String),6,10
org.apache.openjpa.conf.OpenJPAConfiguration.getConnection2DriverName(),4,7
org.apache.openjpa.conf.OpenJPAConfiguration.setConnection2DriverName(String),5,10
org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactory2Name(),6,9
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionFactory2Name(String),7,11
org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactory2(),3,5
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionFactory2(Object),4,7
org.apache.openjpa.conf.OpenJPAConfiguration.getConnection2Properties(),8,9
org.apache.openjpa.conf.OpenJPAConfiguration.setConnection2Properties(String),10,11
org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactory2Properties(),5,8
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionFactory2Properties(String),7,10
org.apache.openjpa.conf.OpenJPAConfiguration.getOptimistic(),2,3
org.apache.openjpa.conf.OpenJPAConfiguration.setOptimistic(boolean),3,5
org.apache.openjpa.conf.OpenJPAConfiguration.setOptimistic(Boolean),6,9
org.apache.openjpa.conf.OpenJPAConfiguration.getRetainState(),2,3
org.apache.openjpa.conf.OpenJPAConfiguration.setRetainState(boolean),3,5
org.apache.openjpa.conf.OpenJPAConfiguration.setRetainState(Boolean),6,9
org.apache.openjpa.conf.OpenJPAConfiguration.getAutoClear(),5,5
org.apache.openjpa.conf.OpenJPAConfiguration.setAutoClear(String),6,6
org.apache.openjpa.conf.OpenJPAConfiguration.getAutoClearConstant(),3,5
org.apache.openjpa.conf.OpenJPAConfiguration.setAutoClear(int),5,5
org.apache.openjpa.conf.OpenJPAConfiguration.getRestoreState(),4,5
org.apache.openjpa.conf.OpenJPAConfiguration.setRestoreState(String),5,7
org.apache.openjpa.conf.OpenJPAConfiguration.getRestoreStateConstant(),3,5
org.apache.openjpa.conf.OpenJPAConfiguration.setRestoreState(int),4,6
org.apache.openjpa.conf.OpenJPAConfiguration.getIgnoreChanges(),9,10
org.apache.openjpa.conf.OpenJPAConfiguration.setIgnoreChanges(boolean),10,13
org.apache.openjpa.conf.OpenJPAConfiguration.setIgnoreChanges(Boolean),7,12
org.apache.openjpa.conf.OpenJPAConfiguration.getAutoDetach(),23,30
org.apache.openjpa.conf.OpenJPAConfiguration.setAutoDetach(String),24,32
org.apache.openjpa.conf.OpenJPAConfiguration.getAutoDetachConstant(),5,7
org.apache.openjpa.conf.OpenJPAConfiguration.setAutoDetach(int),5,8
org.apache.openjpa.conf.OpenJPAConfiguration.setDetachState(String),7,8
org.apache.openjpa.conf.OpenJPAConfiguration.getDetachStateInstance(),5,8
org.apache.openjpa.conf.OpenJPAConfiguration.setDetachState(DetachOptions),6,9
org.apache.openjpa.conf.OpenJPAConfiguration.getNontransactionalRead(),6,6
org.apache.openjpa.conf.OpenJPAConfiguration.setNontransactionalRead(boolean),7,8
org.apache.openjpa.conf.OpenJPAConfiguration.setNontransactionalRead(Boolean),7,11
org.apache.openjpa.conf.OpenJPAConfiguration.getNontransactionalWrite(),6,6
org.apache.openjpa.conf.OpenJPAConfiguration.setNontransactionalWrite(boolean),7,8
org.apache.openjpa.conf.OpenJPAConfiguration.setNontransactionalWrite(Boolean),7,11
org.apache.openjpa.conf.OpenJPAConfiguration.getMultithreaded(),7,7
org.apache.openjpa.conf.OpenJPAConfiguration.setMultithreaded(boolean),8,9
org.apache.openjpa.conf.OpenJPAConfiguration.setMultithreaded(Boolean),6,9
org.apache.openjpa.conf.OpenJPAConfiguration.getFetchBatchSize(),11,13
org.apache.openjpa.conf.OpenJPAConfiguration.setFetchBatchSize(int),12,16
org.apache.openjpa.conf.OpenJPAConfiguration.setFetchBatchSize(Integer),9,14
org.apache.openjpa.conf.OpenJPAConfiguration.getMaxFetchDepth(),9,10
org.apache.openjpa.conf.OpenJPAConfiguration.setMaxFetchDepth(int),10,12
org.apache.openjpa.conf.OpenJPAConfiguration.setMaxFetchDepth(Integer),10,14
org.apache.openjpa.conf.OpenJPAConfiguration.getFetchGroups(),10,12
org.apache.openjpa.conf.OpenJPAConfiguration.setFetchGroups(String),10,13
org.apache.openjpa.conf.OpenJPAConfiguration.getFetchGroupsList(),8,11
org.apache.openjpa.conf.OpenJPAConfiguration.setFetchGroups(String[]),8,12
org.apache.openjpa.conf.OpenJPAConfiguration.getFlushBeforeQueries(),10,12
org.apache.openjpa.conf.OpenJPAConfiguration.setFlushBeforeQueries(String),11,14
org.apache.openjpa.conf.OpenJPAConfiguration.getFlushBeforeQueriesConstant(),12,27
org.apache.openjpa.conf.OpenJPAConfiguration.setFlushBeforeQueries(int),7,22
org.apache.openjpa.conf.OpenJPAConfiguration.getLockTimeout(),6,8
org.apache.openjpa.conf.OpenJPAConfiguration.setLockTimeout(int),7,10
org.apache.openjpa.conf.OpenJPAConfiguration.setLockTimeout(Integer),8,12
org.apache.openjpa.conf.OpenJPAConfiguration.getQueryTimeout(),6,8
org.apache.openjpa.conf.OpenJPAConfiguration.setQueryTimeout(int),7,10
org.apache.openjpa.conf.OpenJPAConfiguration.getReadLockLevel(),8,13
org.apache.openjpa.conf.OpenJPAConfiguration.setReadLockLevel(String),9,15
org.apache.openjpa.conf.OpenJPAConfiguration.getReadLockLevelConstant(),5,8
org.apache.openjpa.conf.OpenJPAConfiguration.setReadLockLevel(int),5,9
org.apache.openjpa.conf.OpenJPAConfiguration.getWriteLockLevel(),8,13
org.apache.openjpa.conf.OpenJPAConfiguration.setWriteLockLevel(String),9,15
org.apache.openjpa.conf.OpenJPAConfiguration.getWriteLockLevelConstant(),5,8
org.apache.openjpa.conf.OpenJPAConfiguration.setWriteLockLevel(int),5,9
org.apache.openjpa.conf.OpenJPAConfiguration.getSequence(),6,7
org.apache.openjpa.conf.OpenJPAConfiguration.setSequence(String),7,9
org.apache.openjpa.conf.OpenJPAConfiguration.getSequenceInstance(),4,5
org.apache.openjpa.conf.OpenJPAConfiguration.setSequence(Seq),4,6
org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionRetainMode(),33,53
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionRetainMode(String),34,55
org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionRetainModeConstant(),12,30
org.apache.openjpa.conf.OpenJPAConfiguration.setConnectionRetainMode(int),12,32
org.apache.openjpa.conf.OpenJPAConfiguration.getFilterListeners(),11,12
org.apache.openjpa.conf.OpenJPAConfiguration.setFilterListeners(String),12,14
org.apache.openjpa.conf.OpenJPAConfiguration.getFilterListenerInstances(),12,17
org.apache.openjpa.conf.OpenJPAConfiguration.setFilterListeners(FilterListener[]),8,14
org.apache.openjpa.conf.OpenJPAConfiguration.getAggregateListeners(),11,12
org.apache.openjpa.conf.OpenJPAConfiguration.setAggregateListeners(String),12,14
org.apache.openjpa.conf.OpenJPAConfiguration.getAggregateListenerInstances(),13,17
org.apache.openjpa.conf.OpenJPAConfiguration.setAggregateListeners(AggregateListener[]),9,14
org.apache.openjpa.conf.OpenJPAConfiguration.getRetryClassRegistration(),16,18
org.apache.openjpa.conf.OpenJPAConfiguration.setRetryClassRegistration(boolean),4,4
org.apache.openjpa.conf.OpenJPAConfiguration.setRetryClassRegistration(Boolean),4,4
org.apache.openjpa.conf.OpenJPAConfiguration.getCompatibility(),4,5
org.apache.openjpa.conf.OpenJPAConfiguration.setCompatibility(String),5,7
org.apache.openjpa.conf.OpenJPAConfiguration.getCompatibilityInstance(),4,6
org.apache.openjpa.conf.OpenJPAConfiguration.getCallbackOptions(),5,7
org.apache.openjpa.conf.OpenJPAConfiguration.getCallbackOptionsInstance(),5,8
org.apache.openjpa.conf.OpenJPAConfiguration.setCallbackOptions(String),4,5
org.apache.openjpa.conf.OpenJPAConfiguration.getQueryCompilationCache(),7,13
org.apache.openjpa.conf.OpenJPAConfiguration.setQueryCompilationCache(String),9,15
org.apache.openjpa.conf.OpenJPAConfiguration.getQueryCompilationCacheInstance(),8,14
org.apache.openjpa.conf.OpenJPAConfiguration.getStoreFacadeTypeRegistry(),8,16
org.apache.openjpa.conf.OpenJPAConfiguration.getBrokerFactoryEventManager(),10,19
org.apache.openjpa.conf.OpenJPAConfiguration.getRuntimeUnenhancedClasses(),31,54
org.apache.openjpa.conf.OpenJPAConfiguration.setRuntimeUnenhancedClasses(String),11,15
org.apache.openjpa.conf.OpenJPAConfiguration.getRuntimeUnenhancedClassesConstant(),14,28
org.apache.openjpa.conf.OpenJPAConfiguration.setRuntimeUnenhancedClasses(int),15,30
org.apache.openjpa.conf.OpenJPAConfiguration.getDynamicEnhancementAgent(),7,9
org.apache.openjpa.conf.OpenJPAConfiguration.setDynamicEnhancementAgent(boolean),9,12
org.apache.openjpa.conf.OpenJPAConfiguration.getCacheMarshallers(),11,12
org.apache.openjpa.conf.OpenJPAConfiguration.setCacheMarshallers(String),12,14
org.apache.openjpa.conf.OpenJPAConfiguration.getCacheMarshallerInstances(),6,10
org.apache.openjpa.conf.OpenJPAConfiguration.isInitializeEagerly(),9,10
org.apache.openjpa.conf.OpenJPAConfiguration.setInitializeEagerly(boolean),10,11
org.apache.openjpa.conf.OpenJPAConfiguration.getQuerySQLCacheInstance(),8,13
org.apache.openjpa.conf.OpenJPAConfiguration.getQuerySQLCache(),5,8
org.apache.openjpa.conf.OpenJPAConfiguration.setQuerySQLCache(PreparedQueryCache),6,13
org.apache.openjpa.conf.OpenJPAConfiguration.setQuerySQLCache(String),8,11
org.apache.openjpa.conf.OpenJPAConfiguration.getFinderCacheInstance(),4,8
org.apache.openjpa.conf.OpenJPAConfiguration.getFinderCache(),4,7
org.apache.openjpa.conf.OpenJPAConfiguration.setFinderCache(String),5,10
org.apache.openjpa.conf.OpenJPAConfiguration.getValidationMode(),9,12
org.apache.openjpa.conf.OpenJPAConfiguration.setValidationMode(String),10,16
org.apache.openjpa.conf.OpenJPAConfiguration.getValidationFactoryInstance(),10,12
org.apache.openjpa.conf.OpenJPAConfiguration.setValidationFactory(Object),11,16
org.apache.openjpa.conf.OpenJPAConfiguration.getValidatorInstance(),9,11
org.apache.openjpa.conf.OpenJPAConfiguration.setValidatorInstance(Object),10,15
org.apache.openjpa.conf.OpenJPAConfiguration.getLifecycleEventManager(),6,9
org.apache.openjpa.conf.OpenJPAConfiguration.getLifecycleEventManagerInstance(),4,11
org.apache.openjpa.conf.OpenJPAConfiguration.setLifecycleEventManager(String),9,13
org.apache.openjpa.conf.OpenJPAConfiguration.getValidationGroupPrePersist(),4,7
org.apache.openjpa.conf.OpenJPAConfiguration.setValidationGroupPrePersist(String),6,11
org.apache.openjpa.conf.OpenJPAConfiguration.getValidationGroupPreUpdate(),4,7
org.apache.openjpa.conf.OpenJPAConfiguration.setValidationGroupPreUpdate(String),6,11
org.apache.openjpa.conf.OpenJPAConfiguration.getValidationGroupPreRemove(),4,7
org.apache.openjpa.conf.OpenJPAConfiguration.setValidationGroupPreRemove(String),6,11
org.apache.openjpa.conf.OpenJPAConfiguration.setEncryptionProvider(String),8,11
org.apache.openjpa.conf.OpenJPAConfiguration.getEncryptionProvider(),3,9
org.apache.openjpa.conf.OpenJPAConfiguration.setDataCacheMode(String),9,19
org.apache.openjpa.conf.OpenJPAConfiguration.getDataCacheMode(),7,14
org.apache.openjpa.conf.OpenJPAConfiguration.getCacheDistributionPolicyInstance(),13,22
org.apache.openjpa.conf.OpenJPAConfiguration.setCacheDistributionPolicyInstance(CacheDistributionPolicy),16,27
org.apache.openjpa.conf.OpenJPAConfiguration.getCacheDistributionPolicy(),13,21
org.apache.openjpa.conf.OpenJPAConfiguration.setCacheDistributionPolicy(String),17,26
org.apache.openjpa.conf.OpenJPAConfiguration.getInstrumentation(),7,12
org.apache.openjpa.conf.OpenJPAConfiguration.setInstrumentation(String),10,17
org.apache.openjpa.conf.OpenJPAConfiguration.getInstrumentationManagerInstance(),9,19
org.apache.openjpa.conf.OpenJPAConfiguration.getAuditorInstance(),6,9
org.apache.openjpa.conf.OpenJPAConfiguration.setAuditorInstance(Auditor),3,5
org.apache.openjpa.conf.OpenJPAConfiguration.getAuditor(),6,8
org.apache.openjpa.conf.OpenJPAConfiguration.setAuditor(String),8,10
org.apache.openjpa.conf.OpenJPAConfiguration.getPostLoadOnMerge(),6,9
org.apache.openjpa.conf.OpenJPAConfiguration.setPostLoadOnMerge(boolean),7,13
org.apache.openjpa.conf.OpenJPAConfiguration.setPostLoadOnMerge(Boolean),7,13
org.apache.openjpa.conf.OpenJPAConfiguration.getOptimizeIdCopy(),22,26
org.apache.openjpa.conf.OpenJPAConfiguration.setOptimizeIdCopy(boolean),24,29
org.apache.openjpa.conf.OpenJPAConfiguration.setOptimizeIdCopy(Boolean),4,5
"org.apache.openjpa.persistence.QueryImpl<X>.QueryImpl(EntityManagerImpl,RuntimeExceptionTranslator,org.apache.openjpa.kernel.Query,QueryMetaData)",33,53
"org.apache.openjpa.persistence.QueryImpl<X>.QueryImpl(EntityManagerImpl,RuntimeExceptionTranslator,org.apache.openjpa.kernel.Query)",12,17
"org.apache.openjpa.persistence.QueryImpl<X>.QueryImpl(EntityManagerImpl,org.apache.openjpa.kernel.Query)",13,17
org.apache.openjpa.persistence.QueryImpl<X>.getDelegate(),6,9
org.apache.openjpa.persistence.QueryImpl<X>.getEntityManager(),3,5
org.apache.openjpa.persistence.QueryImpl<X>.getLanguage(),3,4
org.apache.openjpa.persistence.QueryImpl<X>.getOperation(),5,11
org.apache.openjpa.persistence.QueryImpl<X>.getFetchPlan(),14,29
org.apache.openjpa.persistence.QueryImpl<X>.getQueryString(),3,10
org.apache.openjpa.persistence.QueryImpl<X>.getIgnoreChanges(),3,5
org.apache.openjpa.persistence.QueryImpl<X>.setIgnoreChanges(boolean),7,13
org.apache.openjpa.persistence.QueryImpl<X>.addFilterListener(FilterListener),7,15
org.apache.openjpa.persistence.QueryImpl<X>.removeFilterListener(FilterListener),7,15
org.apache.openjpa.persistence.QueryImpl<X>.addAggregateListener(AggregateListener),7,15
org.apache.openjpa.persistence.QueryImpl<X>.removeAggregateListener(AggregateListener),7,15
org.apache.openjpa.persistence.QueryImpl<X>.getCandidateCollection(),3,6
org.apache.openjpa.persistence.QueryImpl<X>.setCandidateCollection(Collection),8,14
org.apache.openjpa.persistence.QueryImpl<X>.getResultClass(),5,10
org.apache.openjpa.persistence.QueryImpl<X>.setResultClass(Class),13,23
org.apache.openjpa.persistence.QueryImpl<X>.hasSubclasses(),2,3
org.apache.openjpa.persistence.QueryImpl<X>.setSubclasses(boolean),12,20
org.apache.openjpa.persistence.QueryImpl<X>.getFirstResult(),4,4
org.apache.openjpa.persistence.QueryImpl<X>.setFirstResult(int),11,26
org.apache.openjpa.persistence.QueryImpl<X>.getMaxResults(),5,7
org.apache.openjpa.persistence.QueryImpl<X>.setMaxResults(int),11,28
org.apache.openjpa.persistence.QueryImpl<X>.compile(),5,7
org.apache.openjpa.persistence.QueryImpl<X>.execute(),23,42
org.apache.openjpa.persistence.QueryImpl<X>.getResultList(),23,56
org.apache.openjpa.persistence.QueryImpl<X>.getSingleResult(),24,67
org.apache.openjpa.persistence.QueryImpl<X>.pushQueryFetchPlan(),20,50
org.apache.openjpa.persistence.QueryImpl<X>.popQueryFetchPlan(boolean),4,13
org.apache.openjpa.persistence.QueryImpl<X>.executeUpdate(),17,45
org.apache.openjpa.persistence.QueryImpl<X>.asInt(long),10,18
org.apache.openjpa.persistence.QueryImpl<X>.getFlushMode(),10,15
org.apache.openjpa.persistence.QueryImpl<X>.setFlushMode(FlushModeType),14,25
org.apache.openjpa.persistence.QueryImpl<X>.assertJPQLOrCriteriaQuery(),18,38
org.apache.openjpa.persistence.QueryImpl<X>.closeAll(),3,5
org.apache.openjpa.persistence.QueryImpl<X>.getDataStoreActions(Map),7,11
org.apache.openjpa.persistence.QueryImpl<X>.getLockMode(),9,13
org.apache.openjpa.persistence.QueryImpl<X>.setLockMode(LockModeType),24,48
org.apache.openjpa.persistence.QueryImpl<X>.hashCode(),3,6
org.apache.openjpa.persistence.QueryImpl<X>.equals(Object),4,8
org.apache.openjpa.persistence.QueryImpl<X>.getHints(),13,18
"org.apache.openjpa.persistence.QueryImpl<X>.setHint(String,Object)",11,22
org.apache.openjpa.persistence.QueryImpl<X>.getSupportedHints(),6,14
org.apache.openjpa.persistence.QueryImpl<X>.unwrap(Class<T>),28,51
org.apache.openjpa.persistence.QueryImpl<X>.preExecute(Map),62,144
org.apache.openjpa.persistence.QueryImpl<X>.postExecute(Object),14,32
org.apache.openjpa.persistence.QueryImpl<X>.invalidatePreparedQuery(),6,21
org.apache.openjpa.persistence.QueryImpl<X>.ignorePreparedQuery(),29,66
org.apache.openjpa.persistence.QueryImpl<X>.setId(String),4,4
org.apache.openjpa.persistence.QueryImpl<X>.lock(),1,4
org.apache.openjpa.persistence.QueryImpl<X>.unlock(),2,4
org.apache.openjpa.persistence.QueryImpl<X>.assertOpen(),1,1
org.apache.openjpa.persistence.QueryImpl<X>.getParamTypes(),6,7
org.apache.openjpa.persistence.QueryImpl<X>.toString(),3,9
org.apache.openjpa.event.DeleteListener.beforeDelete(LifecycleEvent),7,8
org.apache.openjpa.event.DeleteListener.afterDelete(LifecycleEvent),7,8
"org.apache.openjpa.kernel.PNonTransDirtyState.initialize(StateManagerImpl,PCState)",7,8
org.apache.openjpa.kernel.PNonTransDirtyState.delete(StateManagerImpl),6,8
org.apache.openjpa.kernel.PNonTransDirtyState.transactional(StateManagerImpl),5,5
org.apache.openjpa.kernel.PNonTransDirtyState.release(StateManagerImpl),6,7
org.apache.openjpa.kernel.PNonTransDirtyState.evict(StateManagerImpl),5,5
org.apache.openjpa.kernel.PNonTransDirtyState.afterNontransactionalRefresh(),3,3
org.apache.openjpa.kernel.PNonTransDirtyState.isPendingTransactional(),2,2
org.apache.openjpa.kernel.PNonTransDirtyState.isPersistent(),1,1
org.apache.openjpa.kernel.PNonTransDirtyState.isDirty(),1,1
org.apache.openjpa.kernel.PNonTransDirtyState.toString(),4,5
"openbook.domain.Range<N>.Range(Object,Object)",4,7
"openbook.domain.Range<N>.Range(N,N)",10,28
openbook.domain.Range<N>.type(),1,2
openbook.domain.Range<N>.contains(Number),12,20
openbook.domain.Range<N>.contains(Range<X>),12,23
openbook.domain.Range<N>.getMinimum(),3,4
openbook.domain.Range<N>.getMaximum(),3,4
openbook.domain.Range<N>.adjust(N),8,16
openbook.domain.Range<N>.hashCode(),7,26
openbook.domain.Range<N>.equals(Object),7,24
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.setConfiguration(Configuration),10,19
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.startConfiguration(),2,2
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.endConfiguration(),1,1
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.readSchema(),2,3
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.storeSchema(SchemaGroup),2,4
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.isKnownTable(Table),1,5
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.isKnownTable(String),3,5
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.isKnownTable(QualifiedDBIdentifier),4,6
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.findTable(String),3,6
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.findTable(DBIdentifier),5,14
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.findTable(QualifiedDBIdentifier),15,82
"org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.newTable(DBIdentifier,Schema)",5,10
"org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.newColumn(DBIdentifier,Table)",5,10
"org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicTable.DynamicTable(String,Schema)",5,8
"org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicTable.DynamicTable(DBIdentifier,Schema)",5,8
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicTable.getColumn(String),4,7
"org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicTable.getColumn(DBIdentifier,boolean)",4,8
org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicTable.getColumn(DBIdentifier),3,6
"org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicTable.getColumn(String,DBDictionary)",7,13
"org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicTable.getColumn(DBIdentifier,DBDictionary)",5,9
"org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicTable.getColumn(DBIdentifier,DBDictionary,boolean)",19,51
"org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicColumn.DynamicColumn(String,Table)",6,9
"org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicColumn.DynamicColumn(DBIdentifier,Table)",5,8
"org.apache.openjpa.jdbc.schema.DynamicSchemaFactory.DynamicColumn.isCompatible(int,String,int,int)",16,45
"jpa.tools.swing.EntityDataModel<T>.EntityDataModel(Class<T>,List<T>,Metamodel,int)",38,150
"jpa.tools.swing.EntityDataModel<T>.populate(Class<T>,Attribute<>)",14,22
jpa.tools.swing.EntityDataModel<T>.getAttribute(int),7,14
jpa.tools.swing.EntityDataModel<T>.getRow(int),4,7
jpa.tools.swing.EntityDataModel<T>.getColumnClass(int),3,7
jpa.tools.swing.EntityDataModel<T>.getColumnCount(),4,5
jpa.tools.swing.EntityDataModel<T>.getColumnName(int),5,9
jpa.tools.swing.EntityDataModel<T>.getRowCount(),4,4
"jpa.tools.swing.EntityDataModel<T>.getValueAt(int,int)",11,34
"jpa.tools.swing.EntityDataModel<T>.isCellEditable(int,int)",5,6
"jpa.tools.swing.EntityDataModel<T>.setValueAt(Object,int,int)",7,9
"jpa.tools.swing.EntityDataModel<T>.getValueByReflection(int,Object,int,Method)",21,47
jpa.tools.swing.EntityDataModel<T>.wrap(Class<>),6,6
"jpa.tools.swing.EntityDataModel<T>.getMethod(Class<T>,String)",13,18
jpa.tools.swing.EntityDataModel<T>.updateData(List<T>),6,10
jpa.tools.swing.EntityDataModel<T>.iterator(),2,4
org.apache.openjpa.kernel.UUIDType4StringSeq.getInstance(),6,8
org.apache.openjpa.kernel.UUIDType4StringSeq.UUIDType4StringSeq(),6,6
org.apache.openjpa.kernel.UUIDType4StringSeq.setType(int),2,3
"org.apache.openjpa.kernel.UUIDType4StringSeq.next(StoreContext,ClassMetaData)",10,13
"org.apache.openjpa.kernel.UUIDType4StringSeq.current(StoreContext,ClassMetaData)",7,8
"org.apache.openjpa.kernel.UUIDType4StringSeq.allocate(int,StoreContext,ClassMetaData)",7,8
org.apache.openjpa.kernel.UUIDType4StringSeq.close(),1,1
org.apache.openjpa.lib.jdbc.SQLFormatter.setNewline(String),4,6
org.apache.openjpa.lib.jdbc.SQLFormatter.getNewline(),2,3
org.apache.openjpa.lib.jdbc.SQLFormatter.setLineLength(int),4,7
org.apache.openjpa.lib.jdbc.SQLFormatter.getLineLength(),2,4
org.apache.openjpa.lib.jdbc.SQLFormatter.setWrapIndent(String),5,8
org.apache.openjpa.lib.jdbc.SQLFormatter.getWrapIndent(),3,5
org.apache.openjpa.lib.jdbc.SQLFormatter.setClauseIndent(String),5,8
org.apache.openjpa.lib.jdbc.SQLFormatter.getClauseIndent(),3,5
org.apache.openjpa.lib.jdbc.SQLFormatter.setMultiLine(boolean),6,14
org.apache.openjpa.lib.jdbc.SQLFormatter.getMultiLine(),5,9
org.apache.openjpa.lib.jdbc.SQLFormatter.setDoubleSpace(boolean),7,10
org.apache.openjpa.lib.jdbc.SQLFormatter.getDoubleSpace(),6,7
org.apache.openjpa.lib.jdbc.SQLFormatter.prettyPrint(Object),23,73
org.apache.openjpa.lib.jdbc.SQLFormatter.prettyPrintLine(Object),33,148
org.apache.openjpa.lib.jdbc.SQLFormatter.wrapLine(String),25,102
org.apache.openjpa.lib.jdbc.SQLFormatter.main(String[]),14,24
org.apache.openjpa.jdbc.sql.SQLBuffer.SQLBuffer(DBDictionary),5,7
org.apache.openjpa.jdbc.sql.SQLBuffer.SQLBuffer(SQLBuffer),7,12
org.apache.openjpa.jdbc.sql.SQLBuffer.clone(),6,9
org.apache.openjpa.jdbc.sql.SQLBuffer.isEmpty(),5,5
org.apache.openjpa.jdbc.sql.SQLBuffer.append(SQLBuffer),8,17
org.apache.openjpa.jdbc.sql.SQLBuffer.appendParamOnly(SQLBuffer),10,18
"org.apache.openjpa.jdbc.sql.SQLBuffer.append(SQLBuffer,int,int,boolean,boolean)",45,272
org.apache.openjpa.jdbc.sql.SQLBuffer.append(DBIdentifier),6,10
org.apache.openjpa.jdbc.sql.SQLBuffer.append(Table),6,10
org.apache.openjpa.jdbc.sql.SQLBuffer.append(Sequence),7,10
org.apache.openjpa.jdbc.sql.SQLBuffer.append(Column),7,11
org.apache.openjpa.jdbc.sql.SQLBuffer.append(String),4,6
"org.apache.openjpa.jdbc.sql.SQLBuffer.append(Select,JDBCFetchConfiguration)",11,18
"org.apache.openjpa.jdbc.sql.SQLBuffer.appendCount(Select,JDBCFetchConfiguration)",12,20
"org.apache.openjpa.jdbc.sql.SQLBuffer.append(Select,JDBCFetchConfiguration,boolean)",22,50
"org.apache.openjpa.jdbc.sql.SQLBuffer.replace(Select,Select)",7,19
org.apache.openjpa.jdbc.sql.SQLBuffer.appendValue(Object),6,10
"org.apache.openjpa.jdbc.sql.SQLBuffer.appendValue(Object,Column)",11,17
"org.apache.openjpa.jdbc.sql.SQLBuffer.appendValue(Object,Column,Parameter)",25,47
"org.apache.openjpa.jdbc.sql.SQLBuffer.appendValue(Object,Column,Parameter,boolean)",36,131
org.apache.openjpa.jdbc.sql.SQLBuffer.validParamLiteralType(Class<>),8,17
org.apache.openjpa.jdbc.sql.SQLBuffer.getParameters(),7,10
org.apache.openjpa.jdbc.sql.SQLBuffer.getUserParameters(),22,42
org.apache.openjpa.jdbc.sql.SQLBuffer.getSQL(),3,5
org.apache.openjpa.jdbc.sql.SQLBuffer.getSQL(boolean),21,64
org.apache.openjpa.jdbc.sql.SQLBuffer.resolveSubselects(),23,51
org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(Connection),18,27
"org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(Connection,int,int)",14,23
"org.apache.openjpa.jdbc.sql.SQLBuffer.prepareStatement(Connection,JDBCFetchConfiguration,int,int)",28,114
org.apache.openjpa.jdbc.sql.SQLBuffer.prepareCall(Connection),20,27
"org.apache.openjpa.jdbc.sql.SQLBuffer.prepareCall(Connection,int,int)",16,23
"org.apache.openjpa.jdbc.sql.SQLBuffer.prepareCall(Connection,JDBCFetchConfiguration,int,int)",29,114
org.apache.openjpa.jdbc.sql.SQLBuffer.setParameters(PreparedStatement),17,27
org.apache.openjpa.jdbc.sql.SQLBuffer.hashCode(),4,12
org.apache.openjpa.jdbc.sql.SQLBuffer.sqlEquals(String),9,15
org.apache.openjpa.jdbc.sql.SQLBuffer.equals(Object),7,19
"org.apache.openjpa.jdbc.sql.SQLBuffer.addCastForParam(String,Val)",13,39
"org.apache.openjpa.jdbc.sql.SQLBuffer.replaceSqlString(int,int,String)",8,25
"org.apache.openjpa.jdbc.sql.SQLBuffer.Subselect.clone(int,int)",9,37
org.apache.openjpa.jdbc.sql.SQLBuffer.setParameters(List),4,6
org.apache.openjpa.jdbc.sql.SQLBuffer.getColumns(),3,3
org.apache.openjpa.lib.meta.SuffixMetaDataFilter.SuffixMetaDataFilter(String),8,12
org.apache.openjpa.lib.meta.SuffixMetaDataFilter.matches(Resource),6,10
"org.apache.openjpa.jdbc.kernel.PreparedProjectionResultObjectProvider.PreparedProjectionResultObjectProvider(SelectExecutor,QueryExpressions,QueryExpressionsState,ExpContext,Result)",15,23
"org.apache.openjpa.jdbc.kernel.PreparedProjectionResultObjectProvider.PreparedProjectionResultObjectProvider(SelectExecutor,QueryExpressions[],QueryExpressionsState[],ExpContext,Result)",15,23
org.apache.openjpa.jdbc.kernel.PreparedProjectionResultObjectProvider.getResult(),2,3
org.apache.openjpa.jdbc.kernel.PreparedProjectionResultObjectProvider.open(),2,2
"org.apache.openjpa.jdbc.kernel.exps.Aggregate.Aggregate(JDBCAggregateListener,Val,ClassMapping)",8,16
org.apache.openjpa.jdbc.kernel.exps.Aggregate.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.Aggregate.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.Aggregate.isAggregate(),1,1
org.apache.openjpa.jdbc.kernel.exps.Aggregate.getType(),5,7
org.apache.openjpa.jdbc.kernel.exps.Aggregate.getArgTypes(),4,10
org.apache.openjpa.jdbc.kernel.exps.Aggregate.setImplicitType(Class),4,6
"org.apache.openjpa.jdbc.kernel.exps.Aggregate.initialize(Select,ExpContext,int)",30,42
"org.apache.openjpa.jdbc.kernel.exps.Aggregate.select(Select,ExpContext,ExpState,boolean)",10,17
"org.apache.openjpa.jdbc.kernel.exps.Aggregate.selectColumns(Select,ExpContext,ExpState,boolean)",8,15
"org.apache.openjpa.jdbc.kernel.exps.Aggregate.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.Aggregate.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.Aggregate.newSQLBuffer(Select,ExpContext,ExpState)",13,27
"org.apache.openjpa.jdbc.kernel.exps.Aggregate.load(ExpContext,ExpState,Result)",15,19
"org.apache.openjpa.jdbc.kernel.exps.Aggregate.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",9,16
"org.apache.openjpa.jdbc.kernel.exps.Aggregate.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.Aggregate.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",14,24
"org.apache.openjpa.jdbc.kernel.exps.Aggregate.getArgs(Select,ExpContext,ExpState)",11,26
org.apache.openjpa.jdbc.kernel.exps.Aggregate.acceptVisit(ExpressionVisitor),7,14
"org.apache.openjpa.persistence.meta.Members.Member<X,Y>.Member(AbstractManagedType<X>,FieldMetaData)",16,25
"org.apache.openjpa.persistence.meta.Members.Member<X,Y>.getDeclaringType()",6,13
"org.apache.openjpa.persistence.meta.Members.Member<X,Y>.getJavaMember()",6,10
"org.apache.openjpa.persistence.meta.Members.Member<X,Y>.getJavaType()",4,5
"org.apache.openjpa.persistence.meta.Members.Member<X,Y>.getName()",4,6
"org.apache.openjpa.persistence.meta.Members.Member<X,Y>.getType()",7,13
"org.apache.openjpa.persistence.meta.Members.Member<X,Y>.isAssociation()",6,7
"org.apache.openjpa.persistence.meta.Members.Member<X,Y>.isCollection()",11,25
"org.apache.openjpa.persistence.meta.Members.Member<X,Y>.getPersistentAttributeType()",10,28
"org.apache.openjpa.persistence.meta.Members.Member<X,Y>.compareTo(Member<X,Y>)",3,6
"org.apache.openjpa.persistence.meta.Members.Member<X,Y>.toString()",3,4
"org.apache.openjpa.persistence.meta.Members.SingularAttributeImpl<X,T>.SingularAttributeImpl(AbstractManagedType<X>,FieldMetaData)",10,12
"org.apache.openjpa.persistence.meta.Members.SingularAttributeImpl<X,T>.isId()",5,6
"org.apache.openjpa.persistence.meta.Members.SingularAttributeImpl<X,T>.isVersion()",5,8
"org.apache.openjpa.persistence.meta.Members.SingularAttributeImpl<X,T>.isOptional()",9,9
"org.apache.openjpa.persistence.meta.Members.SingularAttributeImpl<X,T>.getBindableType()",9,20
"org.apache.openjpa.persistence.meta.Members.SingularAttributeImpl<X,T>.getBindableJavaType()",6,7
"org.apache.openjpa.persistence.meta.Members.SingularAttributeImpl<X,T>.getPersistentAttributeType()",14,38
"org.apache.openjpa.persistence.meta.Members.PluralAttributeImpl<X,C,E>.PluralAttributeImpl(AbstractManagedType<X>,FieldMetaData)",10,12
"org.apache.openjpa.persistence.meta.Members.PluralAttributeImpl<X,C,E>.getElementType()",9,15
"org.apache.openjpa.persistence.meta.Members.PluralAttributeImpl<X,C,E>.getBindableType()",6,12
"org.apache.openjpa.persistence.meta.Members.PluralAttributeImpl<X,C,E>.getBindableJavaType()",6,7
"org.apache.openjpa.persistence.meta.Members.PluralAttributeImpl<X,C,E>.getPersistentAttributeType()",3,9
"org.apache.openjpa.persistence.meta.Members.CollectionAttributeImpl<X,E>.CollectionAttributeImpl(AbstractManagedType<X>,FieldMetaData)",10,12
"org.apache.openjpa.persistence.meta.Members.CollectionAttributeImpl<X,E>.getCollectionType()",2,7
"org.apache.openjpa.persistence.meta.Members.ListAttributeImpl<X,E>.ListAttributeImpl(AbstractManagedType<X>,FieldMetaData)",10,12
"org.apache.openjpa.persistence.meta.Members.ListAttributeImpl<X,E>.getCollectionType()",3,7
"org.apache.openjpa.persistence.meta.Members.SetAttributeImpl<X,E>.SetAttributeImpl(AbstractManagedType<X>,FieldMetaData)",10,12
"org.apache.openjpa.persistence.meta.Members.SetAttributeImpl<X,E>.getCollectionType()",3,7
"org.apache.openjpa.persistence.meta.Members.KeyAttributeImpl<X,K>.KeyAttributeImpl(AbstractManagedType<X>,FieldMetaData)",10,12
"org.apache.openjpa.persistence.meta.Members.KeyAttributeImpl<X,K>.getBindableJavaType()",6,7
"org.apache.openjpa.persistence.meta.Members.MapAttributeImpl<X,K,V>.MapAttributeImpl(AbstractManagedType<X>,FieldMetaData)",10,12
"org.apache.openjpa.persistence.meta.Members.MapAttributeImpl<X,K,V>.getCollectionType()",3,7
"org.apache.openjpa.persistence.meta.Members.MapAttributeImpl<X,K,V>.getKeyJavaType()",5,7
"org.apache.openjpa.persistence.meta.Members.MapAttributeImpl<X,K,V>.getKeyType()",5,9
"org.apache.openjpa.persistence.meta.Members.MapAttributeImpl<X,K,V>.getPersistentAttributeType()",3,9
org.apache.openjpa.persistence.jest.JESTServlet.init(ServletConfig),28,78
"org.apache.openjpa.persistence.jest.JESTServlet.doGet(HttpServletRequest,HttpServletResponse)",17,37
org.apache.openjpa.persistence.jest.JESTServlet.createPersistenceUnit(),27,60
org.apache.openjpa.persistence.jest.JESTServlet.findPersistenceUnit(),26,49
"org.apache.openjpa.persistence.jest.JESTServlet.handleError(JPAServletContext,Throwable)",12,21
org.apache.openjpa.persistence.jest.JESTServlet.destroy(),3,3
org.apache.openjpa.persistence.jest.JESTServlet.debug(HttpServletRequest),15,51
org.apache.openjpa.persistence.jest.JESTServlet.log(String),10,14
org.apache.openjpa.jdbc.ant.MappingToolTask.setAction(Action),9,14
org.apache.openjpa.jdbc.ant.MappingToolTask.setSchemaAction(SchemaAction),9,17
org.apache.openjpa.jdbc.ant.MappingToolTask.setReadSchema(boolean),6,15
org.apache.openjpa.jdbc.ant.MappingToolTask.setIgnoreErrors(boolean),7,16
org.apache.openjpa.jdbc.ant.MappingToolTask.setDropTables(boolean),6,15
org.apache.openjpa.jdbc.ant.MappingToolTask.setOpenJPATables(boolean),6,14
org.apache.openjpa.jdbc.ant.MappingToolTask.setDropSequences(boolean),6,15
org.apache.openjpa.jdbc.ant.MappingToolTask.setSequences(boolean),6,11
org.apache.openjpa.jdbc.ant.MappingToolTask.setPrimaryKeys(boolean),8,13
org.apache.openjpa.jdbc.ant.MappingToolTask.setForeignKeys(boolean),8,13
org.apache.openjpa.jdbc.ant.MappingToolTask.setIndexes(boolean),7,10
org.apache.openjpa.jdbc.ant.MappingToolTask.setFile(String),7,12
org.apache.openjpa.jdbc.ant.MappingToolTask.setSchemaFile(String),8,17
org.apache.openjpa.jdbc.ant.MappingToolTask.setSQLFile(String),9,18
org.apache.openjpa.jdbc.ant.MappingToolTask.setSQLEncode(String),10,17
org.apache.openjpa.jdbc.ant.MappingToolTask.setSQLTerminator(String),10,13
org.apache.openjpa.jdbc.ant.MappingToolTask.setMeta(boolean),7,11
org.apache.openjpa.jdbc.ant.MappingToolTask.newConfiguration(),3,6
org.apache.openjpa.jdbc.ant.MappingToolTask.executeOn(String[]),37,124
org.apache.openjpa.jdbc.ant.MappingToolTask.Action.getValues(),5,5
org.apache.openjpa.jdbc.ant.MappingToolTask.SchemaAction.getValues(),9,24
org.apache.openjpa.jdbc.ant.MappingToolTask.setTmpClassLoader(boolean),8,20
org.apache.openjpa.kernel.exps.UnaryMathVal.UnaryMathVal(Val),7,11
org.apache.openjpa.kernel.exps.UnaryMathVal.getType(),2,4
org.apache.openjpa.kernel.exps.UnaryMathVal.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.UnaryMathVal.eval(Object,Object,StoreContext,Object[])",11,21
org.apache.openjpa.kernel.exps.UnaryMathVal.getType(Class),5,7
"org.apache.openjpa.kernel.exps.UnaryMathVal.operate(Object,Class)",6,7
org.apache.openjpa.kernel.exps.UnaryMathVal.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.datacache.DataCachePCDataGenerator.DataCachePCDataGenerator(OpenJPAConfiguration),6,8
org.apache.openjpa.datacache.DataCachePCDataGenerator.getUniqueName(Class),5,8
"org.apache.openjpa.datacache.DataCachePCDataGenerator.finish(DynamicPCData,ClassMetaData)",12,26
"org.apache.openjpa.datacache.DataCachePCDataGenerator.decorate(BCClass,ClassMetaData)",10,16
org.apache.openjpa.datacache.DataCachePCDataGenerator.enhanceToData(BCClass),31,90
org.apache.openjpa.datacache.DataCachePCDataGenerator.enhanceToNestedData(BCClass),48,185
org.apache.openjpa.datacache.DataCachePCDataGenerator.replaceNewEmbeddedPCData(BCClass),27,80
org.apache.openjpa.datacache.DataCachePCDataGenerator.addTimeout(BCClass),35,105
org.apache.openjpa.datacache.DataCachePCDataGenerator.addSynchronization(BCClass),25,56
org.apache.openjpa.datacache.DataCachePCDataGenerator.Timed.setTimeout(long),3,3
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.JDBCConfigurationImpl(),7,7
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.JDBCConfigurationImpl(boolean),10,15
"org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.JDBCConfigurationImpl(boolean,boolean)",166,1221
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.JDBCConfigurationImpl(JDBCConfiguration),7,12
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setSchema(String),3,8
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getSchema(),2,4
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setSchemas(String),3,8
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getSchemas(),2,4
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setSchemas(String[]),3,7
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getSchemasList(),3,4
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setTransactionIsolation(String),4,12
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getTransactionIsolation(),3,6
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setTransactionIsolation(int),3,10
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getTransactionIsolationConstant(),3,5
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setResultSetType(String),4,16
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getResultSetType(),4,8
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setResultSetType(int),3,14
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getResultSetTypeConstant(),4,7
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setFetchDirection(String),4,12
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getFetchDirection(),3,6
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setFetchDirection(int),3,10
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getFetchDirectionConstant(),3,5
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setEagerFetchMode(String),5,16
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getEagerFetchMode(),4,8
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setEagerFetchMode(int),4,14
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getEagerFetchModeConstant(),4,7
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setSubclassFetchMode(String),5,16
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getSubclassFetchMode(),4,8
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setSubclassFetchMode(int),4,14
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getSubclassFetchModeConstant(),4,7
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setLRSSize(String),4,12
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getLRSSize(),3,6
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setLRSSize(int),3,10
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getLRSSizeConstant(),3,5
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setSynchronizeMappings(String),4,11
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getSynchronizeMappings(),3,5
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setJDBCListeners(String),6,13
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getJDBCListeners(),5,7
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setJDBCListeners(JDBCListener[]),5,11
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getJDBCListenerInstances(),5,19
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setConnectionDecorators(String),6,13
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getConnectionDecorators(),5,7
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setConnectionDecorators(ConnectionDecorator[]),5,11
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getConnectionDecoratorInstances(),5,19
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setDBDictionary(String),5,9
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getDBDictionary(),4,5
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setDBDictionary(DBDictionary),13,23
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getDBDictionaryInstance(),47,123
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setUpdateManager(String),5,13
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getUpdateManager(),4,7
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setUpdateManager(UpdateManager),4,13
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getUpdateManagerInstance(),5,19
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setDriverDataSource(String),6,17
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getDriverDataSource(),5,9
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.newDriverDataSourceInstance(),6,18
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setSchemaFactory(String),5,13
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getSchemaFactory(),4,7
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setSchemaFactory(SchemaFactory),4,13
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getSchemaFactoryInstance(),5,19
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setSQLFactory(String),5,13
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getSQLFactory(),4,7
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setSQLFactory(SQLFactory),4,13
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getSQLFactoryInstance(),5,19
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getMappingFactory(),4,7
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setMappingFactory(String),5,11
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.newMetaDataFactoryInstance(),7,18
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setMappingDefaults(String),5,11
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getMappingDefaults(),4,7
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setMappingDefaults(MappingDefaults),4,11
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getMappingDefaultsInstance(),5,19
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getMappingRepositoryInstance(),5,11
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.newMappingRepositoryInstance(),5,11
"org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.newBrokerInstance(String,String)",9,29
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getConnectionFactory(),12,26
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setConnectionFactory(Object),24,47
"org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setupConnectionFactory(DataSource,boolean)",13,50
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getConnectionFactory2(),35,89
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setConnectionFactory2(Object),16,38
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.createConnectionFactory(),17,86
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getDataSource(StoreContext),32,90
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getDataSource2(StoreContext),46,151
"org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getDataSource(StoreContext,DataSource)",26,67
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.preClose(),12,35
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.isInvalidProperty(String),17,31
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getIdentifierUtil(),4,7
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.getIdentifierUtilInstance(),5,19
org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl.setIdentifierUtil(DBIdentifierUtil),4,11
org.apache.openjpa.trader.client.FormatUtil.formatPrice(double),6,12
"org.apache.openjpa.trader.client.FormatUtil.formatPrice(double,boolean)",20,46
org.apache.openjpa.trader.client.FormatUtil.formatVolume(int),8,19
"org.apache.openjpa.trader.client.FormatUtil.formatChange(double,double,boolean)",26,58
org.apache.openjpa.trader.client.FormatUtil.formatChange(double),18,33
org.apache.openjpa.jdbc.identifier.Normalizer.getNamingConfiguration(),4,7
org.apache.openjpa.jdbc.identifier.Normalizer.normalizeMulti(String),13,27
org.apache.openjpa.jdbc.identifier.Normalizer.normalizeString(String),12,27
org.apache.openjpa.jdbc.identifier.Normalizer.isDelimited(String),10,17
"org.apache.openjpa.jdbc.identifier.Normalizer.fullNamesEqual(String,String)",23,69
"org.apache.openjpa.jdbc.identifier.Normalizer.namesEqual(String,String)",16,42
org.apache.openjpa.jdbc.identifier.Normalizer.normalizeUpper(String),12,29
org.apache.openjpa.jdbc.identifier.Normalizer.splitName(String),9,16
"org.apache.openjpa.jdbc.identifier.Normalizer.splitName(String,String)",15,28
org.apache.openjpa.jdbc.identifier.Normalizer.joinNames(String[]),11,18
"org.apache.openjpa.jdbc.identifier.Normalizer.joinNames(String[],String)",11,21
"org.apache.openjpa.jdbc.identifier.Normalizer.joinNames(String,String)",9,19
"org.apache.openjpa.jdbc.identifier.Normalizer.truncate(String,int)",11,21
"org.apache.openjpa.jdbc.identifier.Normalizer.convert(IdentifierConfiguration,String,String)",17,33
"org.apache.openjpa.jdbc.identifier.Normalizer.combine(String,String)",11,21
org.apache.openjpa.jdbc.identifier.Normalizer.combine(String),12,19
"org.apache.openjpa.jdbc.identifier.Normalizer.append(String,String)",11,21
org.apache.openjpa.jdbc.identifier.Normalizer.removeHungarianNotation(String),9,20
org.apache.openjpa.jdbc.identifier.Normalizer.removeDelimiters(String),8,17
"org.apache.openjpa.jdbc.identifier.Normalizer.delimit(String,boolean)",11,19
org.apache.openjpa.jdbc.identifier.Normalizer.canSplit(String),9,16
"org.apache.openjpa.jdbc.identifier.Normalizer.canSplit(String,String)",14,23
openbook.domain.LineItem.LineItem(),2,2
"openbook.domain.LineItem.LineItem(PurchaseOrder,int,Book,int)",18,68
openbook.domain.LineItem.getBook(),3,7
openbook.domain.LineItem.getQuantity(),5,7
openbook.domain.LineItem.getOrder(),4,6
openbook.domain.LineItem.getIndex(),7,10
openbook.domain.LineItem.LineItemId.equals(Object),5,10
openbook.domain.LineItem.LineItemId.hashCode(),3,3
"org.apache.openjpa.trader.service.TradeEvent.TradeEvent(Type,long)",5,9
"org.apache.openjpa.trader.service.TradeEvent.TradeEvent(Type,long,String)",8,15
org.apache.openjpa.util.CacheMap.CacheMap(),7,9
org.apache.openjpa.util.CacheMap.CacheMap(boolean),8,18
"org.apache.openjpa.util.CacheMap.CacheMap(boolean,int)",6,11
"org.apache.openjpa.util.CacheMap.CacheMap(boolean,int,int,float)",9,17
"org.apache.openjpa.util.CacheMap.CacheMap(boolean,int,int,float,int)",22,64
"org.apache.openjpa.util.CacheMap.CacheMap(boolean,int,int,float,int).$1.overflowRemoved(Object,Object)",7,12
"org.apache.openjpa.util.CacheMap.CacheMap(boolean,int,int,float,int).$1.valueExpired(Object)",6,9
"org.apache.openjpa.util.CacheMap.CacheMap(boolean,int,int,float,int).$2.overflowRemoved(Object,Object)",7,12
"org.apache.openjpa.util.CacheMap.CacheMap(boolean,int,int,float,int).$3.overflowRemoved(Object,Object)",7,12
"org.apache.openjpa.util.CacheMap.cacheMapOverflowRemoved(Object,Object)",14,31
"org.apache.openjpa.util.CacheMap.softMapOverflowRemoved(Object,Object)",11,20
org.apache.openjpa.util.CacheMap.softMapValueExpired(Object),10,14
"org.apache.openjpa.util.CacheMap.put(Map,Object,Object)",9,16
"org.apache.openjpa.util.CacheMap.remove(Map,Object)",8,16
org.apache.openjpa.util.CacheMap.readLock(),3,10
org.apache.openjpa.util.CacheMap.readUnlock(),4,10
org.apache.openjpa.util.CacheMap.writeLock(),3,8
org.apache.openjpa.util.CacheMap.writeUnlock(),4,8
org.apache.openjpa.util.CacheMap.isLRU(),6,7
org.apache.openjpa.util.CacheMap.setCacheSize(int),15,23
org.apache.openjpa.util.CacheMap.getCacheSize(),11,17
org.apache.openjpa.util.CacheMap.setSoftReferenceSize(int),15,24
org.apache.openjpa.util.CacheMap.getSoftReferenceSize(),11,18
org.apache.openjpa.util.CacheMap.getPinnedKeys(),10,17
org.apache.openjpa.util.CacheMap.pin(Object),29,72
org.apache.openjpa.util.CacheMap.unpin(Object),15,22
"org.apache.openjpa.util.CacheMap.entryRemoved(Object,Object,boolean)",27,51
"org.apache.openjpa.util.CacheMap.entryAdded(Object,Object)",7,12
org.apache.openjpa.util.CacheMap.get(Object),14,34
"org.apache.openjpa.util.CacheMap.put(Object,Object)",24,88
org.apache.openjpa.util.CacheMap.putAll(Map),1,3
"org.apache.openjpa.util.CacheMap.putAll(Map,boolean)",10,28
org.apache.openjpa.util.CacheMap.remove(Object),21,62
org.apache.openjpa.util.CacheMap.clear(),16,38
org.apache.openjpa.util.CacheMap.notifyEntryRemovals(Set),10,25
org.apache.openjpa.util.CacheMap.size(),8,13
org.apache.openjpa.util.CacheMap.isEmpty(),2,2
org.apache.openjpa.util.CacheMap.containsKey(Object),10,21
org.apache.openjpa.util.CacheMap.containsValue(Object),11,23
org.apache.openjpa.util.CacheMap.keySet(),2,5
org.apache.openjpa.util.CacheMap.values(),3,4
org.apache.openjpa.util.CacheMap.entrySet(),2,5
org.apache.openjpa.util.CacheMap.toString(),7,14
org.apache.openjpa.util.CacheMap.EntrySet.size(),3,4
org.apache.openjpa.util.CacheMap.EntrySet.add(Object),6,11
org.apache.openjpa.util.CacheMap.EntrySet.iterator(),2,7
org.apache.openjpa.util.CacheMap.KeySet.size(),3,4
org.apache.openjpa.util.CacheMap.KeySet.iterator(),3,7
org.apache.openjpa.util.CacheMap.ValueCollection.size(),3,4
org.apache.openjpa.util.CacheMap.ValueCollection.iterator(),3,7
org.apache.openjpa.util.CacheMap.EntryIterator.EntryIterator(int),11,25
org.apache.openjpa.util.CacheMap.EntryIterator.getView(Map),10,18
org.apache.openjpa.util.CacheMap.EntryIterator.hasNext(),1,1
org.apache.openjpa.util.CacheMap.EntryIterator.next(),2,2
org.apache.openjpa.util.CacheMap.EntryIterator.remove(),2,3
org.apache.openjpa.util.CacheMap.EntryIterator.evaluate(Object),7,11
"org.apache.openjpa.kernel.PreparedQueryCache.register(String,Query,FetchConfiguration)",21,35
"org.apache.openjpa.kernel.PreparedQueryCache.initialize(String,Object)",24,51
org.apache.openjpa.kernel.PreparedQueryCache.getMapView(),7,11
org.apache.openjpa.kernel.PreparedQueryCache.cache(PreparedQuery),18,34
org.apache.openjpa.kernel.PreparedQueryCache.invalidate(String),7,7
org.apache.openjpa.kernel.PreparedQueryCache.get(String),6,8
org.apache.openjpa.kernel.PreparedQueryCache.isCachable(String),19,24
"org.apache.openjpa.kernel.PreparedQueryCache.markUncachable(String,Exclusion)",25,33
org.apache.openjpa.kernel.PreparedQueryCache.isExcluded(String),8,11
org.apache.openjpa.kernel.PreparedQueryCache.getExcludes(),4,5
org.apache.openjpa.kernel.PreparedQueryCache.setExcludes(String),20,21
org.apache.openjpa.kernel.PreparedQueryCache.addExclusionPattern(String),17,20
org.apache.openjpa.kernel.PreparedQueryCache.removeExclusionPattern(String),17,23
org.apache.openjpa.kernel.PreparedQueryCache.clear(),3,3
org.apache.openjpa.kernel.PreparedQueryCache.setEnableStatistics(boolean),3,4
org.apache.openjpa.kernel.PreparedQueryCache.getEnableStatistics(),4,5
org.apache.openjpa.kernel.PreparedQueryCache.getStatistics(),10,14
org.apache.openjpa.kernel.PreparedQueryCache.Exclusion.isStrong(),4,5
org.apache.openjpa.kernel.PreparedQueryCache.Exclusion.getReason(),7,8
org.apache.openjpa.kernel.PreparedQueryCache.Exclusion.getPattern(),8,10
org.apache.openjpa.kernel.PreparedQueryCache.Exclusion.matches(String),5,6
org.apache.openjpa.lib.util.concurrent.TestNullSafeConcurrentHashMap.newMap(),4,9
org.apache.openjpa.lib.util.concurrent.TestNullSafeConcurrentHashMap.testRemoveRandomIsNotTotallyDeterministic(),6,7
org.apache.openjpa.lib.util.concurrent.TestNullSafeConcurrentHashMap.testRandomIteratorIsNotTotallyDeterministic(),7,7
org.apache.openjpa.lib.util.concurrent.TestNullSafeConcurrentHashMap.removeHelper(boolean),27,86
org.apache.openjpa.lib.util.concurrent.TestNullSafeConcurrentHashMap.testNullKeys(),6,9
"org.apache.openjpa.lib.util.concurrent.TestNullSafeConcurrentHashMap.helper(Object,Object,Object,Object)",44,156
org.apache.openjpa.lib.util.concurrent.TestNullSafeConcurrentHashMap.testNullValues(),7,8
org.apache.openjpa.lib.util.concurrent.TestNullSafeConcurrentHashMap.nullValsHelper(Object),9,35
org.apache.openjpa.lib.util.concurrent.TestNullSafeConcurrentHashMap.testNullKeysAndValues(),7,8
org.apache.openjpa.conf.Specification.Specification(String),30,63
org.apache.openjpa.conf.Specification.getName(),2,3
org.apache.openjpa.conf.Specification.getVersion(),2,2
org.apache.openjpa.conf.Specification.getMinorVersion(),3,4
org.apache.openjpa.conf.Specification.getDescription(),2,3
org.apache.openjpa.conf.Specification.setDescription(String),4,7
org.apache.openjpa.conf.Specification.equals(Object),13,21
org.apache.openjpa.conf.Specification.isSame(Specification),7,10
org.apache.openjpa.conf.Specification.isSame(String),7,10
org.apache.openjpa.conf.Specification.compareVersion(Specification),8,18
org.apache.openjpa.conf.Specification.toString(),5,6
org.apache.openjpa.conf.Specification.parse(String),10,35
org.apache.openjpa.conf.Specification.setCompatibility(Compatibility),9,20
org.apache.openjpa.conf.Specification.getCompatibility(),5,8
"org.apache.openjpa.persistence.jest.ProcessingException.ProcessingException(JPAServletContext,Throwable)",10,13
"org.apache.openjpa.persistence.jest.ProcessingException.ProcessingException(JPAServletContext,Throwable,int)",9,17
"org.apache.openjpa.persistence.jest.ProcessingException.ProcessingException(JPAServletContext,Message,int)",10,18
"org.apache.openjpa.persistence.jest.ProcessingException.ProcessingException(JPAServletContext,Throwable,Message)",11,16
"org.apache.openjpa.persistence.jest.ProcessingException.ProcessingException(JPAServletContext,Throwable,Message,int)",11,21
org.apache.openjpa.persistence.jest.ProcessingException.printStackTrace(),37,81
org.apache.openjpa.conf.CacheMarshallerImpl.load(),31,78
org.apache.openjpa.conf.CacheMarshallerImpl.configure(Object),7,12
org.apache.openjpa.conf.CacheMarshallerImpl.store(Object),28,82
org.apache.openjpa.conf.CacheMarshallerImpl.setOutputFile(File),3,8
org.apache.openjpa.conf.CacheMarshallerImpl.getOutputFile(),2,5
org.apache.openjpa.conf.CacheMarshallerImpl.setInputURL(URL),3,8
org.apache.openjpa.conf.CacheMarshallerImpl.setInputResource(String),5,9
org.apache.openjpa.conf.CacheMarshallerImpl.setConsumeSerializationErrors(boolean),4,8
org.apache.openjpa.conf.CacheMarshallerImpl.getId(),1,1
org.apache.openjpa.conf.CacheMarshallerImpl.setId(String),2,2
org.apache.openjpa.conf.CacheMarshallerImpl.setValidationPolicy(String),14,29
org.apache.openjpa.conf.CacheMarshallerImpl.getValidationPolicy(),2,6
org.apache.openjpa.conf.CacheMarshallerImpl.setConfiguration(Configuration),5,12
org.apache.openjpa.conf.CacheMarshallerImpl.startConfiguration(),2,2
org.apache.openjpa.conf.CacheMarshallerImpl.endConfiguration(),16,42
org.apache.openjpa.conf.CacheMarshallerImpl.setInputUrlFromResourceLocation(),35,82
org.apache.openjpa.persistence.validation.ValidatorImpl.ValidatorImpl(),11,14
org.apache.openjpa.persistence.validation.ValidatorImpl.ValidatorImpl(Configuration),22,60
"org.apache.openjpa.persistence.validation.ValidatorImpl.ValidatorImpl(ValidatorFactory,ValidationMode)",17,39
org.apache.openjpa.persistence.validation.ValidatorImpl.initialize(),36,106
"org.apache.openjpa.persistence.validation.ValidatorImpl.addValidationGroup(String,Class<>)",22,43
"org.apache.openjpa.persistence.validation.ValidatorImpl.addValidationGroup(Integer,Class<>)",11,25
"org.apache.openjpa.persistence.validation.ValidatorImpl.addValidationGroup(String,String)",19,43
"org.apache.openjpa.persistence.validation.ValidatorImpl.getValidationGroup(String,String)",23,51
org.apache.openjpa.persistence.validation.ValidatorImpl.getValidationGroup(Integer),8,15
org.apache.openjpa.persistence.validation.ValidatorImpl.isValidating(Integer),11,23
org.apache.openjpa.persistence.validation.ValidatorImpl.getConstraintsForClass(Class<>),9,17
"org.apache.openjpa.persistence.validation.ValidatorImpl.validate(T,int)",24,42
"org.apache.openjpa.persistence.validation.ValidatorImpl.validateProperty(T,String,int)",21,44
"org.apache.openjpa.persistence.validation.ValidatorImpl.validateValue(Class<T>,String,Object,int)",22,50
"org.apache.openjpa.persistence.validation.ValidatorImpl.validating(T,int)",8,11
org.apache.openjpa.persistence.validation.ValidatorImpl.findEvent(String),8,13
org.apache.openjpa.persistence.validation.ValidatorImpl.getDefaultValidatorFactory(),18,34
org.apache.openjpa.persistence.validation.ValidatorImpl.addDefaultValidationGroups(),12,32
org.apache.openjpa.integration.validation.TestValidatingLEM.setUp(),21,36
org.apache.openjpa.integration.validation.TestValidatingLEM.testValidatingLEM1(),41,102
org.apache.openjpa.integration.validation.TestValidatingLEM.testValidatingLEM2(),41,104
org.apache.openjpa.integration.validation.TestValidatingLEM.testValidatingLEM3(),52,133
org.apache.openjpa.integration.validation.TestValidatingLEM.testValidatingLEM4(),56,158
org.apache.openjpa.integration.validation.TestValidatingLEM.cleanup(OpenJPAEntityManagerFactorySPI),14,20
org.apache.openjpa.jdbc.kernel.exps.Distinct.Distinct(Val),2,4
"org.apache.openjpa.jdbc.kernel.exps.Distinct.initialize(Select,ExpContext,int)",12,17
org.apache.openjpa.jdbc.kernel.exps.Distinct.getOperator(),3,3
"org.apache.openjpa.jdbc.kernel.exps.Distinct.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",17,44
org.apache.openjpa.jdbc.kernel.exps.JDBCPath.getKey(),1,1
org.apache.openjpa.ee.SunOneManagedRuntime.SunOneManagedRuntime(),13,21
org.apache.openjpa.ee.SunOneManagedRuntime.getTransactionManager(),6,17
org.apache.openjpa.ee.SunOneManagedRuntime.setRollbackOnly(Throwable),10,15
org.apache.openjpa.ee.SunOneManagedRuntime.getRollbackCause(),7,9
org.apache.openjpa.persistence.cache.jpa.TestCacheModeAllDataCacheTrue.getEntityManagerFactory(),32,95
org.apache.openjpa.conf.TestCacheMarshaller.setUp(),27,43
org.apache.openjpa.conf.TestCacheMarshaller.testCacheMarshallerType(),6,8
org.apache.openjpa.conf.TestCacheMarshaller.testConfiguration(),4,4
org.apache.openjpa.conf.TestCacheMarshaller.testValidation(),19,40
org.apache.openjpa.conf.TestCacheMarshaller.testRoundTrip(),8,8
org.apache.openjpa.conf.TestCacheMarshaller.testendConfiguration(),11,20
org.apache.openjpa.event.LoadListener.afterLoad(LifecycleEvent),6,7
org.apache.openjpa.event.LoadListener.afterRefresh(LifecycleEvent),5,6
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.setQueryCache(QueryCache),3,5
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.setConfigId(String),4,6
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.setContextRef(String),6,8
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.getConfigId(),2,3
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.getContextRef(),4,5
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.setPreparedQueryCache(QueryCache),4,6
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.getStatistics(),3,6
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.getExecutionCount(),6,13
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.getExecutionCount(String),7,21
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.getTotalExecutionCount(),7,15
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.getTotalExecutionCount(String),8,23
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.getHitCount(),6,13
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.getHitCount(String),7,21
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.getTotalHitCount(),7,15
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.getTotalHitCount(String),8,23
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.reset(),5,10
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.sinceDate(),5,10
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.startDate(),6,12
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.getEvictionCount(),10,17
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.getTotalEvictionCount(),10,20
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.queryKeys(),13,31
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.findKey(String),7,18
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.count(),5,12
org.apache.openjpa.instrumentation.AbstractQueryCacheInstrument.getLevel(),3,6
org.apache.openjpa.instrumentation.DCInstrument.getName(),2,3
org.apache.openjpa.instrumentation.DCInstrument.initialize(),11,19
org.apache.openjpa.instrumentation.DCInstrument.start(),3,3
org.apache.openjpa.instrumentation.DCInstrument.stop(),3,3
"org.apache.openjpa.kernel.FinderQuery<K,V,R>.getIdentifier()",2,3
"org.apache.openjpa.kernel.FinderQuery<K,V,R>.getDelegate()",5,5
"org.apache.openjpa.kernel.FinderQuery<K,V,R>.execute(OpenJPAStateManager,StoreManager,FetchConfiguration)",18,31
"org.apache.openjpa.kernel.FinderQuery<K,V,R>.getQueryString()",2,5
openbook.client.SupplyPage.SupplyPage(OpenBookService),40,96
openbook.client.SupplyPage.SupplyPage(OpenBookService).$1.actionPerformed(ActionEvent),11,13
openbook.client.SupplyPage.SupplyPage(OpenBookService).$2.actionPerformed(ActionEvent),9,10
openbook.client.SupplyPage.SupplyPage(OpenBookService).$2.actionPerformed(ActionEvent).$1.doInBackground(),20,35
openbook.client.SupplyPage.SupplyPage(OpenBookService).$2.actionPerformed(ActionEvent).$1.done(),12,13
openbook.client.SupplyPage.getInventory(Integer),24,36
openbook.client.SupplyPage.getInventory(Integer).$3.doInBackground(),9,9
"org.apache.openjpa.kernel.PCResultObjectProvider.initialize(OpenJPAStateManager,PCState,FetchConfiguration)",8,12
org.apache.openjpa.jdbc.kernel.exps.StringFunction.StringFunction(Val),6,10
org.apache.openjpa.jdbc.kernel.exps.StringFunction.getValue(),2,3
org.apache.openjpa.jdbc.kernel.exps.StringFunction.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.StringFunction.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.StringFunction.getType(),2,2
org.apache.openjpa.jdbc.kernel.exps.StringFunction.setImplicitType(Class),3,4
"org.apache.openjpa.jdbc.kernel.exps.StringFunction.initialize(Select,ExpContext,int)",8,13
"org.apache.openjpa.jdbc.kernel.exps.StringFunction.select(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.StringFunction.selectColumns(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.StringFunction.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.StringFunction.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.StringFunction.newSQLBuffer(Select,ExpContext,ExpState)",13,27
"org.apache.openjpa.jdbc.kernel.exps.StringFunction.load(ExpContext,ExpState,Result)",15,19
"org.apache.openjpa.jdbc.kernel.exps.StringFunction.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",8,15
"org.apache.openjpa.jdbc.kernel.exps.StringFunction.length(Select,ExpContext,ExpState)",6,7
org.apache.openjpa.jdbc.kernel.exps.StringFunction.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLStoreQuery(JDBCStore),7,12
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.getStore(),2,4
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.supportsParameterDeclarations(),3,3
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.supportsDataStoreExecution(),4,4
"org.apache.openjpa.jdbc.kernel.SQLStoreQuery.newDataStoreExecutor(ClassMetaData,boolean)",6,11
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.requiresCandidateType(),3,3
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.requiresParameterDeclarations(),3,3
"org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.SQLExecutor(SQLStoreQuery,ClassMetaData)",32,80
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.getOperation(StoreQuery),12,21
"org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.executeUpdate(StoreQuery,Object[])",39,114
"org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.executeQuery(StoreQuery,Object[],Range)",57,208
"org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.getDataStoreActions(StoreQuery,Object[],Range)",9,14
org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.isPacking(StoreQuery),6,6
"org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.prepareCall(Connection,SQLBuffer)",16,24
"org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.executeUpdate(JDBCStore,Connection,PreparedStatement,SQLBuffer)",22,39
"org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.prepareCall(Connection,SQLBuffer,JDBCFetchConfiguration,int,int)",20,33
"org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.prepareStatement(Connection,SQLBuffer)",15,23
"org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.prepareStatement(Connection,SQLBuffer,JDBCFetchConfiguration,int,int)",19,32
"org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.executeQuery(JDBCStore,Connection,PreparedStatement,SQLBuffer,List)",22,31
"org.apache.openjpa.jdbc.kernel.SQLStoreQuery.SQLExecutor.toParameterArray(StoreQuery,Map)",47,116
"org.apache.openjpa.jdbc.kernel.SQLStoreQuery.substituteParams(String,List<Integer>)",53,137
"org.apache.openjpa.util.ObjectId.ObjectId(Class,Object)",3,7
"org.apache.openjpa.util.ObjectId.ObjectId(Class,Object,boolean)",4,9
org.apache.openjpa.util.ObjectId.getId(),2,2
org.apache.openjpa.util.ObjectId.setId(Object),6,6
org.apache.openjpa.util.ObjectId.getIdObject(),2,3
org.apache.openjpa.util.ObjectId.idHash(),3,5
org.apache.openjpa.util.ObjectId.idEquals(OpenJPAId),4,11
"org.apache.openjpa.kernel.FinderCache<K,V,R>.get(K,FetchConfiguration)",14,23
"org.apache.openjpa.kernel.FinderCache<K,V,R>.cache(K,V,FetchConfiguration)",17,39
"org.apache.openjpa.kernel.FinderCache<K,V,R>.getMapView()",6,10
"org.apache.openjpa.kernel.FinderCache<K,V,R>.invalidate(K)",6,7
"org.apache.openjpa.kernel.FinderCache<K,V,R>.markUncachable(K)",22,30
"org.apache.openjpa.kernel.FinderCache<K,V,R>.isExcluded(K)",2,2
"org.apache.openjpa.kernel.FinderCache<K,V,R>.getExcludes()",6,6
"org.apache.openjpa.kernel.FinderCache<K,V,R>.addExclusionPattern(String)",17,20
"org.apache.openjpa.kernel.FinderCache<K,V,R>.removeExclusionPattern(String)",15,19
"org.apache.openjpa.kernel.FinderCache<K,V,R>.getStatistics()",6,8
org.apache.openjpa.persistence.common.apps.FemaleUser.FemaleUser(),2,2
"org.apache.openjpa.persistence.common.apps.FemaleUser.FemaleUser(String,String,Address,int,int)",8,13
org.apache.openjpa.kernel.SavepointManager.supportsIncrementalFlush(),9,10
"org.apache.openjpa.kernel.SavepointManager.newSavepoint(String,Broker)",5,9
"org.apache.openjpa.validation.Validator.validate(T,int)",13,23
"org.apache.openjpa.validation.Validator.validateProperty(T,String,int)",15,31
"org.apache.openjpa.validation.Validator.validateValue(Class<T>,String,Object,int)",22,43
"org.apache.openjpa.validation.Validator.validating(T,int)",11,22
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.CoalesceExpression(Val[]),5,7
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.getVal(),2,3
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.getType(),8,18
"org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.initialize(Select,ExpContext,int)",11,31
"org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.CoalesceExpState.CoalesceExpState(Joins,ExpState[])",3,6
"org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",16,34
"org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.selectColumns(Select,ExpContext,ExpState,boolean)",11,23
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.acceptVisit(ExpressionVisitor),8,15
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.getId(),2,3
"org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",12,23
"org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.newSQLBuffer(Select,ExpContext,ExpState)",14,28
"org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.load(ExpContext,ExpState,Result)",15,19
"org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.select(Select,ExpContext,ExpState,boolean)",8,14
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.setImplicitType(Class),4,6
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.setOtherPath(Value),3,3
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.getOtherPath(),2,2
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.setOtherState(ExpState),2,2
org.apache.openjpa.jdbc.kernel.exps.CoalesceExpression.getOtherState(),1,1
org.apache.openjpa.persistence.Country1.Country1(),1,1
"org.apache.openjpa.persistence.Country1.Country1(long,String)",3,5
org.apache.openjpa.persistence.Country1.getId(),0,0
org.apache.openjpa.persistence.Country1.getName(),2,3
org.apache.openjpa.persistence.Country1.setName(String),3,6
org.apache.openjpa.datacache.DataCachePCData.isTimedOut(),2,3
org.apache.openjpa.datacache.DataCachePCData.getTimeOut(),4,5
org.apache.openjpa.integration.validation.ConstraintNumber.createInvalidMin(),12,19
org.apache.openjpa.integration.validation.ConstraintNumber.createInvalidMax(),8,14
org.apache.openjpa.integration.validation.ConstraintNumber.createInvalidMinMax(),9,15
org.apache.openjpa.integration.validation.ConstraintNumber.createValid(),9,13
org.apache.openjpa.integration.validation.ConstraintNumber.ConstraintNumber(),4,4
org.apache.openjpa.integration.validation.ConstraintNumber.getId(),0,0
org.apache.openjpa.integration.validation.ConstraintNumber.getMinZero(),2,4
org.apache.openjpa.integration.validation.ConstraintNumber.setMinZero(long),3,5
org.apache.openjpa.integration.validation.ConstraintNumber.getMaxZero(),2,4
org.apache.openjpa.integration.validation.ConstraintNumber.setMaxZero(long),3,5
org.apache.openjpa.jdbc.kernel.exps.SQLExpression.getTag(),2,3
"org.apache.openjpa.jdbc.kernel.exps.Substring.Substring(Val,Val)",6,13
org.apache.openjpa.jdbc.kernel.exps.Substring.getVal1(),1,3
org.apache.openjpa.jdbc.kernel.exps.Substring.getVal2(),1,3
org.apache.openjpa.jdbc.kernel.exps.Substring.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.Substring.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.Substring.getType(),2,2
org.apache.openjpa.jdbc.kernel.exps.Substring.setImplicitType(Class),3,4
"org.apache.openjpa.jdbc.kernel.exps.Substring.initialize(Select,ExpContext,int)",10,23
"org.apache.openjpa.jdbc.kernel.exps.Substring.select(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.Substring.selectColumns(Select,ExpContext,ExpState,boolean)",10,26
"org.apache.openjpa.jdbc.kernel.exps.Substring.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.Substring.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.Substring.newSQLBuffer(Select,ExpContext,ExpState)",13,27
"org.apache.openjpa.jdbc.kernel.exps.Substring.load(ExpContext,ExpState,Result)",15,19
"org.apache.openjpa.jdbc.kernel.exps.Substring.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",10,27
"org.apache.openjpa.jdbc.kernel.exps.Substring.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.Substring.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",24,64
org.apache.openjpa.jdbc.kernel.exps.Substring.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.jdbc.kernel.exps.Substring.getId(),2,3
"org.apache.openjpa.kernel.exps.ContainsExpression.ContainsExpression(Val,Val)",9,19
"org.apache.openjpa.kernel.exps.ContainsExpression.eval(Object,Object,StoreContext,Object[])",14,33
"org.apache.openjpa.kernel.exps.ContainsExpression.eval(Collection,StoreContext,Object[])",13,39
org.apache.openjpa.kernel.exps.ContainsExpression.getCollection(Object),7,14
org.apache.openjpa.kernel.exps.ContainsExpression.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.persistence.query.AllExpression.AllExpression(QueryDefinitionImpl),8,9
"org.apache.openjpa.util.BigDecimalId.BigDecimalId(Class,String)",4,8
"org.apache.openjpa.util.BigDecimalId.BigDecimalId(Class,BigDecimal)",3,7
"org.apache.openjpa.util.BigDecimalId.BigDecimalId(Class,BigDecimal,boolean)",4,9
org.apache.openjpa.util.BigDecimalId.getId(),2,2
org.apache.openjpa.util.BigDecimalId.getIdObject(),2,3
org.apache.openjpa.util.BigDecimalId.toString(),2,5
org.apache.openjpa.util.BigDecimalId.idHash(),3,5
org.apache.openjpa.util.BigDecimalId.idEquals(OpenJPAId),5,9
org.apache.openjpa.jdbc.meta.VersionStrategy.setVersion(Version),5,8
"org.apache.openjpa.jdbc.meta.VersionStrategy.select(Select,ClassMapping)",11,17
"org.apache.openjpa.jdbc.meta.VersionStrategy.load(OpenJPAStateManager,JDBCStore,Result)",11,13
"org.apache.openjpa.jdbc.meta.VersionStrategy.load(OpenJPAStateManager,JDBCStore,Result,Joins)",12,15
"org.apache.openjpa.jdbc.meta.VersionStrategy.afterLoad(OpenJPAStateManager,JDBCStore)",13,14
"org.apache.openjpa.jdbc.meta.VersionStrategy.checkVersion(OpenJPAStateManager,JDBCStore,boolean)",14,21
"org.apache.openjpa.jdbc.meta.VersionStrategy.compareVersion(Object,Object)",5,8
org.apache.openjpa.jdbc.meta.VersionStrategy.getBulkUpdateValues(),8,15
org.apache.openjpa.jdbc.kernel.UpdateManager.orderDirty(),6,6
"org.apache.openjpa.jdbc.kernel.UpdateManager.flush(Collection,JDBCStore)",11,17
"org.apache.openjpa.util.Id.newInstance(Class,Object)",16,34
org.apache.openjpa.util.Id.Id(String),8,10
"org.apache.openjpa.util.Id.Id(String,OpenJPAConfiguration,ClassLoader)",13,24
"org.apache.openjpa.util.Id.Id(String,ClassLoader)",27,43
"org.apache.openjpa.util.Id.Id(Class,String)",20,31
"org.apache.openjpa.util.Id.Id(Class,Long)",4,9
"org.apache.openjpa.util.Id.Id(Class,long)",4,7
"org.apache.openjpa.util.Id.Id(Class,long,boolean)",5,9
org.apache.openjpa.util.Id.getId(),2,2
org.apache.openjpa.util.Id.getIdObject(),1,2
org.apache.openjpa.util.Id.idHash(),1,1
org.apache.openjpa.util.Id.idEquals(OpenJPAId),2,2
openbook.tools.converter.SourceRenderer.run(String[]),42,113
openbook.tools.converter.SourceRenderer.getDestinationDirectory(),4,5
openbook.tools.converter.SourceRenderer.getSourceDirectory(),4,5
openbook.tools.converter.SourceRenderer.registerOptions(CommandProcessor),4,5
"openbook.tools.converter.SourceRenderer.createRenderer(CommandProcessor,File)",7,9
"openbook.tools.converter.SourceRenderer.render(InputStream,TokenRenderer,PrintStream)",22,53
"openbook.tools.converter.SourceRenderer.getInputStream(File,String)",18,51
openbook.tools.converter.SourceRenderer.createOutput(File),17,39
"openbook.tools.converter.SourceRenderer.suffix(String,String)",4,12
openbook.tools.converter.SourceRenderer.verbose(String),5,6
openbook.tools.converter.SourceRenderer.warn(String),5,5
"org.apache.openjpa.util.Serialization.serialize(Object,StoreContext)",20,43
"org.apache.openjpa.util.Serialization.deserialize(byte[],StoreContext)",10,19
"org.apache.openjpa.util.Serialization.deserialize(InputStream,StoreContext)",12,28
"org.apache.openjpa.util.Serialization.PersistentObjectOutputStream.PersistentObjectOutputStream(OutputStream,StoreContext)",16,23
"org.apache.openjpa.util.Serialization.PersistentObjectOutputStream.PersistentObjectOutputStream(OutputStream,StoreContext).$1.run()",4,5
org.apache.openjpa.util.Serialization.PersistentObjectOutputStream.replaceObject(Object),6,15
org.apache.openjpa.util.Serialization.ClassResolvingObjectInputStream.ClassResolvingObjectInputStream(InputStream),6,9
org.apache.openjpa.util.Serialization.ClassResolvingObjectInputStream.resolveClass(ObjectStreamClass),19,37
org.apache.openjpa.util.Serialization.ClassResolvingObjectInputStream.addContextClassLoaders(MultiClassLoader),11,17
"org.apache.openjpa.util.Serialization.PersistentObjectInputStream.PersistentObjectInputStream(InputStream,StoreContext)",18,27
"org.apache.openjpa.util.Serialization.PersistentObjectInputStream.PersistentObjectInputStream(InputStream,StoreContext).$1.run()",4,5
org.apache.openjpa.util.Serialization.PersistentObjectInputStream.addContextClassLoaders(MultiClassLoader),6,15
org.apache.openjpa.util.Serialization.PersistentObjectInputStream.resolveObject(Object),18,47
org.apache.openjpa.util.Serialization.ObjectIdMarker.ObjectIdMarker(Object),3,6
"org.apache.openjpa.lib.meta.ClassMetaDataIterator.ClassMetaDataIterator(Class<>,String,boolean)",13,19
"org.apache.openjpa.lib.meta.ClassMetaDataIterator.ClassMetaDataIterator(Class<>,String,ClassLoader,boolean)",60,237
org.apache.openjpa.lib.meta.ClassMetaDataIterator.hasNext(),19,32
org.apache.openjpa.lib.meta.ClassMetaDataIterator.next(),4,6
org.apache.openjpa.lib.meta.ClassMetaDataIterator.getInputStream(),14,27
org.apache.openjpa.lib.meta.ClassMetaDataIterator.getFile(),16,28
org.apache.openjpa.lib.meta.ClassMetaDataIterator.close(),1,1
org.apache.openjpa.lib.conf.ObjectValue.ObjectValue(String),4,5
org.apache.openjpa.lib.conf.ObjectValue.get(),3,4
org.apache.openjpa.lib.conf.ObjectValue.set(Object),5,7
"org.apache.openjpa.lib.conf.ObjectValue.set(Object,boolean)",12,28
"org.apache.openjpa.lib.conf.ObjectValue.instantiate(Class<>,Configuration)",8,17
"org.apache.openjpa.lib.conf.ObjectValue.instantiate(Class<>,Configuration,boolean)",10,12
"org.apache.openjpa.lib.conf.ObjectValue.configure(Object,Configuration)",5,11
"org.apache.openjpa.lib.conf.ObjectValue.configure(Object,Configuration,boolean)",9,12
"org.apache.openjpa.lib.conf.ObjectValue.newInstance(String,Class<>,Configuration,boolean)",28,50
org.apache.openjpa.lib.conf.ObjectValue.getValueType(),3,3
org.apache.openjpa.lib.conf.ObjectValue.objectChanged(),8,9
org.apache.openjpa.lib.conf.ObjectValue.getInternalString(),2,3
org.apache.openjpa.lib.conf.ObjectValue.setInternalString(String),11,16
org.apache.openjpa.lib.conf.ObjectValue.setInternalObject(Object),4,7
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeInvalid.setUp(),1,1
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeInvalid.testInvalidPropertyValue(),29,55
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeInvalid.getEntityManagerFactory(),5,8
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeInvalid.getListener(),2,3
"org.apache.openjpa.jdbc.kernel.exps.Exp.initialize(Select,ExpContext,Map)",21,32
"org.apache.openjpa.jdbc.kernel.exps.Exp.appendTo(Select,ExpContext,ExpState,SQLBuffer)",13,19
"org.apache.openjpa.jdbc.kernel.exps.Exp.selectColumns(Select,ExpContext,ExpState,boolean)",8,12
org.apache.openjpa.integration.daytrader.QuoteDataBean.QuoteDataBean(),3,3
"org.apache.openjpa.integration.daytrader.QuoteDataBean.QuoteDataBean(String,String,double,BigDecimal,BigDecimal,BigDecimal,BigDecimal,double)",13,38
org.apache.openjpa.integration.daytrader.QuoteDataBean.getRandomInstance(),16,46
org.apache.openjpa.integration.daytrader.QuoteDataBean.QuoteDataBean(String),9,15
org.apache.openjpa.integration.daytrader.QuoteDataBean.toString(),10,17
org.apache.openjpa.integration.daytrader.QuoteDataBean.toHTML(),11,17
org.apache.openjpa.integration.daytrader.QuoteDataBean.print(),3,4
org.apache.openjpa.integration.daytrader.QuoteDataBean.getSymbol(),2,3
org.apache.openjpa.integration.daytrader.QuoteDataBean.setSymbol(String),3,6
org.apache.openjpa.integration.daytrader.QuoteDataBean.getCompanyName(),3,5
org.apache.openjpa.integration.daytrader.QuoteDataBean.setCompanyName(String),4,10
org.apache.openjpa.integration.daytrader.QuoteDataBean.getPrice(),2,3
org.apache.openjpa.integration.daytrader.QuoteDataBean.setPrice(BigDecimal),3,6
org.apache.openjpa.integration.daytrader.QuoteDataBean.getOpen(),1,1
org.apache.openjpa.integration.daytrader.QuoteDataBean.setOpen(BigDecimal),2,2
org.apache.openjpa.integration.daytrader.QuoteDataBean.getLow(),2,3
org.apache.openjpa.integration.daytrader.QuoteDataBean.setLow(BigDecimal),3,6
org.apache.openjpa.integration.daytrader.QuoteDataBean.getHigh(),1,1
org.apache.openjpa.integration.daytrader.QuoteDataBean.setHigh(BigDecimal),2,2
org.apache.openjpa.integration.daytrader.QuoteDataBean.getChange(),1,2
org.apache.openjpa.integration.daytrader.QuoteDataBean.setChange(double),2,5
org.apache.openjpa.integration.daytrader.QuoteDataBean.getVolume(),1,2
org.apache.openjpa.integration.daytrader.QuoteDataBean.setVolume(double),2,5
org.apache.openjpa.integration.daytrader.QuoteDataBean.hashCode(),3,9
org.apache.openjpa.integration.daytrader.QuoteDataBean.equals(Object),12,26
org.apache.openjpa.validation.ValidationException.ValidationException(RuntimeException),3,4
"org.apache.openjpa.validation.ValidationException.ValidationException(RuntimeException,boolean)",5,8
"org.apache.openjpa.lib.util.SimpleResourceBundleProvider.findResource(String,Locale,ClassLoader)",7,31
org.apache.openjpa.jdbc.identifier.DBIdentifierRule.DBIdentifierRule(),22,52
"org.apache.openjpa.jdbc.identifier.DBIdentifierRule.DBIdentifierRule(DBIdentifierType,Set<String>)",10,22
"org.apache.openjpa.jdbc.kernel.ProjectionResultObjectProvider.ProjectionResultObjectProvider(SelectExecutor,QueryExpressions,QueryExpressionsState,ExpContext)",18,39
"org.apache.openjpa.jdbc.kernel.ProjectionResultObjectProvider.ProjectionResultObjectProvider(SelectExecutor,QueryExpressions[],QueryExpressionsState[],ExpContext)",20,41
org.apache.openjpa.jdbc.kernel.ProjectionResultObjectProvider.getResultObject(),17,40
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.DelegatingPreparedStatement(PreparedStatement,Connection)",7,11
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.initialize(PreparedStatement,Connection)",8,20
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.wrapResult(ResultSet,boolean)",4,11
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getDelegate(),5,6
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getInnermostDelegate(),10,14
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.hashCode(),4,6
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.equals(Object),7,13
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.toString(),8,16
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.appendInfo(StringBuffer),6,10
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.executeQuery(String),8,11
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.executeQuery(String,boolean)",14,31
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.executeUpdate(String),7,10
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.execute(String),6,8
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.close(),4,5
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getMaxFieldSize(),6,9
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setMaxFieldSize(int),7,11
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getMaxRows(),5,7
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setMaxRows(int),6,9
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setEscapeProcessing(boolean),7,11
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getQueryTimeout(),5,7
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setQueryTimeout(int),6,9
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.cancel(),4,5
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getWarnings(),5,7
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.clearWarnings(),4,5
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setCursorName(String),8,12
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getResultSet(),4,8
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getResultSet(boolean),11,27
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getUpdateCount(),5,7
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getMoreResults(),4,5
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setFetchDirection(int),6,9
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getFetchDirection(),5,7
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setFetchSize(int),6,9
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getFetchSize(),5,7
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getResultSetConcurrency(),6,9
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getResultSetType(),6,9
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.addBatch(String),7,10
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.clearBatch(),4,5
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.executeBatch(),5,7
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getConnection(),4,5
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.executeQuery(),6,8
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.executeQuery(boolean),13,27
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.executeUpdate(),5,7
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setNull(int,int)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setBoolean(int,boolean)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setByte(int,byte)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setShort(int,short)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setInt(int,int)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setLong(int,long)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setFloat(int,float)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setDouble(int,double)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setBigDecimal(int,BigDecimal)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setString(int,String)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setBytes(int,byte[])",5,7
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setDate(int,Date)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setTime(int,Time)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setTimestamp(int,Timestamp)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setAsciiStream(int,InputStream,int)",7,11
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setUnicodeStream(int,InputStream,int)",8,12
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setBinaryStream(int,InputStream,int)",7,11
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.clearParameters(),4,5
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setObject(int,Object,int,int)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setObject(int,Object,int)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setObject(int,Object)",5,8
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.execute(),4,5
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.addBatch(),5,7
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setCharacterStream(int,Reader,int)",7,10
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setRef(int,Ref)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setBlob(int,Blob)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setClob(int,Clob)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setArray(int,Array)",5,8
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getMetaData(),7,11
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setDate(int,Date,Calendar)",6,9
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setTime(int,Time,Calendar)",6,9
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setTimestamp(int,Timestamp,Calendar)",6,9
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setNull(int,int,String)",5,6
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getMoreResults(int),4,5
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getGeneratedKeys(),7,9
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.executeUpdate(String,int)",6,8
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.executeUpdate(String,int[])",6,8
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.executeUpdate(String,String[])",6,9
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.execute(String,int)",5,6
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.execute(String,int[])",5,6
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.execute(String,String[])",5,7
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getResultSetHoldability(),6,9
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setURL(int,URL)",5,10
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.getParameterMetaData(),6,12
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.isWrapperFor(Class<>),6,7
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.unwrap(Class<T>),6,7
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setAsciiStream(int,InputStream,long)",10,17
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setAsciiStream(int,InputStream)",9,15
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setBinaryStream(int,InputStream,long)",10,17
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setBinaryStream(int,InputStream)",9,15
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setBlob(int,InputStream,long)",10,19
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setBlob(int,InputStream)",9,17
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setCharacterStream(int,Reader,long)",10,18
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setCharacterStream(int,Reader)",9,16
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setClob(int,Reader,long)",9,16
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setClob(int,Reader)",8,14
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setNCharacterStream(int,Reader,long)",11,18
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setNCharacterStream(int,Reader)",10,16
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setNClob(int,NClob)",8,14
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setNClob(int,Reader,long)",9,16
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setNClob(int,Reader)",8,14
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setNString(int,String)",8,14
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setRowId(int,RowId)",7,12
"org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setSQLXML(int,SQLXML)",9,16
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.isClosed(),4,5
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.isPoolable(),4,5
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.setPoolable(boolean),5,9
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.isCloseOnCompletion(),6,7
org.apache.openjpa.lib.jdbc.DelegatingPreparedStatement.closeOnCompletion(),6,7
"org.apache.openjpa.jdbc.kernel.exps.ContainsKeyExpression.ContainsKeyExpression(Val,Val)",8,13
"org.apache.openjpa.jdbc.kernel.exps.ContainsKeyExpression.initialize(Select,ExpContext,Map)",12,21
org.apache.openjpa.lib.jdbc.DelegatingDataSource.DelegatingDataSource(DataSource),7,18
org.apache.openjpa.lib.jdbc.DelegatingDataSource.getDelegate(),4,6
org.apache.openjpa.lib.jdbc.DelegatingDataSource.getInnermostDelegate(),7,11
org.apache.openjpa.lib.jdbc.DelegatingDataSource.hashCode(),4,6
org.apache.openjpa.lib.jdbc.DelegatingDataSource.equals(Object),7,13
org.apache.openjpa.lib.jdbc.DelegatingDataSource.toString(),8,16
org.apache.openjpa.lib.jdbc.DelegatingDataSource.appendInfo(StringBuffer),6,10
org.apache.openjpa.lib.jdbc.DelegatingDataSource.getLogWriter(),5,8
org.apache.openjpa.lib.jdbc.DelegatingDataSource.setLogWriter(PrintWriter),6,10
org.apache.openjpa.lib.jdbc.DelegatingDataSource.getLoginTimeout(),4,6
org.apache.openjpa.lib.jdbc.DelegatingDataSource.setLoginTimeout(int),5,10
org.apache.openjpa.lib.jdbc.DelegatingDataSource.getConnection(),3,5
"org.apache.openjpa.lib.jdbc.DelegatingDataSource.getConnection(String,String)",29,58
org.apache.openjpa.lib.jdbc.DelegatingDataSource.close(),3,5
org.apache.openjpa.lib.jdbc.DelegatingDataSource.isWrapperFor(Class),8,10
org.apache.openjpa.lib.jdbc.DelegatingDataSource.unwrap(Class),5,6
"org.apache.openjpa.lib.jdbc.DelegatingDataSource.setBeanProperty(Object,String,Object)",11,20
org.apache.openjpa.lib.jdbc.DelegatingDataSource.getParentLogger(),6,11
"org.apache.openjpa.event.BrokerFactoryEvent.BrokerFactoryEvent(BrokerFactory,int)",4,15
org.apache.openjpa.event.BrokerFactoryEvent.getBrokerFactory(),3,7
org.apache.openjpa.event.BrokerFactoryEvent.getEventType(),4,9
org.apache.openjpa.lib.meta.MetaDataFilter.matches(Resource),6,7
org.apache.openjpa.lib.meta.MetaDataFilter.Resource.getName(),3,4
org.apache.openjpa.lib.meta.MetaDataFilter.Resource.getContent(),3,4
org.apache.openjpa.persistence.OpenJPAPersistenceUtil.getIdentifier(Object),6,16
"org.apache.openjpa.persistence.OpenJPAPersistenceUtil.getIdentifier(OpenJPAEntityManagerFactory,Object)",17,57
"org.apache.openjpa.persistence.OpenJPAPersistenceUtil.isManagedBy(OpenJPAEntityManagerFactory,Object)",27,82
"org.apache.openjpa.persistence.OpenJPAPersistenceUtil.isLoaded(Object,String)",28,68
"org.apache.openjpa.persistence.OpenJPAPersistenceUtil.isLoaded(OpenJPAStateManager,String,HashSet<OpenJPAStateManager>)",40,100
"org.apache.openjpa.persistence.OpenJPAPersistenceUtil.requiresFetch(OpenJPAStateManager,FieldMetaData)",9,17
"org.apache.openjpa.persistence.OpenJPAPersistenceUtil.addToLoadSet(HashSet<OpenJPAStateManager>,OpenJPAStateManager)",7,23
"org.apache.openjpa.persistence.OpenJPAPersistenceUtil.isLoadedField(OpenJPAStateManager,FieldMetaData,HashSet<OpenJPAStateManager>)",32,96
"org.apache.openjpa.persistence.OpenJPAPersistenceUtil.isLoadedCollection(OpenJPAStateManager,ValueMetaData,Collection<>,HashSet<OpenJPAStateManager>)",25,41
"org.apache.openjpa.persistence.OpenJPAPersistenceUtil.isLoadedArray(OpenJPAStateManager,ValueMetaData,Object[],HashSet<OpenJPAStateManager>)",23,43
"org.apache.openjpa.persistence.OpenJPAPersistenceUtil.isLoadedMap(OpenJPAStateManager,FieldMetaData,Map<>,HashSet<OpenJPAStateManager>)",30,80
org.apache.openjpa.persistence.OpenJPAPersistenceUtil.getStateManager(Object),6,20
org.apache.openjpa.persistence.osgi.BundleUtils.runningUnderOSGi(),19,36
org.apache.openjpa.persistence.osgi.BundleUtils.getBundleClassLoader(),28,37
org.apache.openjpa.persistence.query.IsEmptyExpression.IsEmptyExpression(Expression),6,11
org.apache.openjpa.persistence.query.IsEmptyExpression.asExpression(AliasContext),7,9
org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy.map(boolean),34,122
"org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy.isCustomInsert(OpenJPAStateManager,JDBCStore)",6,7
"org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",13,21
"org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",26,57
"org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy.customInsert(OpenJPAStateManager,JDBCStore)",26,43
"org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy.isCustomUpdate(OpenJPAStateManager,JDBCStore)",6,7
"org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",27,57
"org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy.customUpdate(OpenJPAStateManager,JDBCStore)",25,43
"org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy.supportsSelect(Select,int,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",14,22
"org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy.select(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",13,21
"org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",22,39
org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy.assertNotMappedBy(),5,7
org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy.setFieldMapping(FieldMapping),19,46
"org.apache.openjpa.jdbc.meta.strats.LobFieldStrategy.createSelect(OpenJPAStateManager,JDBCStore)",18,37
org.apache.openjpa.integration.daytrader.TradeConfig.getHostname(),20,41
org.apache.openjpa.integration.daytrader.TradeConfig.getPage(int),3,6
org.apache.openjpa.integration.daytrader.TradeConfig.getRunTimeModeNames(),10,21
org.apache.openjpa.integration.daytrader.TradeConfig.getScenarioAction(boolean),33,61
org.apache.openjpa.integration.daytrader.TradeConfig.getUserID(),3,12
org.apache.openjpa.integration.daytrader.TradeConfig.getOrderFee(String),9,15
org.apache.openjpa.integration.daytrader.TradeConfig.incrementSellDeficit(),6,11
org.apache.openjpa.integration.daytrader.TradeConfig.nextUserID(),7,20
org.apache.openjpa.integration.daytrader.TradeConfig.random(),2,3
org.apache.openjpa.integration.daytrader.TradeConfig.rndAddress(),4,5
org.apache.openjpa.integration.daytrader.TradeConfig.rndBalance(),7,7
org.apache.openjpa.integration.daytrader.TradeConfig.rndCreditCard(),4,8
org.apache.openjpa.integration.daytrader.TradeConfig.rndEmail(String),5,8
org.apache.openjpa.integration.daytrader.TradeConfig.rndFullName(),3,5
org.apache.openjpa.integration.daytrader.TradeConfig.rndInt(int),3,3
org.apache.openjpa.integration.daytrader.TradeConfig.rndFloat(int),3,3
org.apache.openjpa.integration.daytrader.TradeConfig.rndBigDecimal(float),7,10
org.apache.openjpa.integration.daytrader.TradeConfig.rndBoolean(),3,3
org.apache.openjpa.integration.daytrader.TradeConfig.rndNewUserID(),14,16
org.apache.openjpa.integration.daytrader.TradeConfig.rndPrice(),4,5
org.apache.openjpa.integration.daytrader.TradeConfig.getRandomPriceChangeFactor(),16,38
org.apache.openjpa.integration.daytrader.TradeConfig.rndQuantity(),4,5
org.apache.openjpa.integration.daytrader.TradeConfig.rndSymbol(),5,6
org.apache.openjpa.integration.daytrader.TradeConfig.rndSymbols(),7,20
org.apache.openjpa.integration.daytrader.TradeConfig.rndUserID(),10,19
org.apache.openjpa.integration.daytrader.TradeConfig.getNextUserIDFromDeck(),16,30
org.apache.openjpa.integration.daytrader.TradeConfig.setRunTimeModeNames(java.lang.String[]),12,36
"org.apache.openjpa.integration.daytrader.TradeConfig.setConfigParam(String,String)",75,482
org.apache.openjpa.integration.daytrader.TradeConfig.getOrderProcessingModeNames(),5,12
org.apache.openjpa.integration.daytrader.TradeConfig.getWorkloadMixNames(),5,12
org.apache.openjpa.integration.daytrader.TradeConfig.getWebInterfaceNames(),4,9
org.apache.openjpa.integration.daytrader.TradeConfig.getCachingTypeNames(),6,11
org.apache.openjpa.integration.daytrader.TradeConfig.getScenarioMixes(),3,7
org.apache.openjpa.integration.daytrader.TradeConfig.getTrace(),2,4
org.apache.openjpa.integration.daytrader.TradeConfig.setTrace(boolean),5,13
org.apache.openjpa.integration.daytrader.TradeConfig.getMAX_USERS(),3,6
org.apache.openjpa.integration.daytrader.TradeConfig.setMAX_USERS(int),9,19
org.apache.openjpa.integration.daytrader.TradeConfig.getMAX_QUOTES(),3,6
org.apache.openjpa.integration.daytrader.TradeConfig.setMAX_QUOTES(int),5,13
org.apache.openjpa.integration.daytrader.TradeConfig.getMAX_HOLDINGS(),3,6
org.apache.openjpa.integration.daytrader.TradeConfig.setMAX_HOLDINGS(int),5,13
org.apache.openjpa.integration.daytrader.TradeConfig.getActionTrace(),3,7
org.apache.openjpa.integration.daytrader.TradeConfig.setActionTrace(boolean),7,20
org.apache.openjpa.integration.daytrader.TradeConfig.getScenarioCount(),3,7
org.apache.openjpa.integration.daytrader.TradeConfig.setScenarioCount(int),7,20
org.apache.openjpa.integration.daytrader.TradeConfig.incrementScenarioCount(),3,5
org.apache.openjpa.integration.daytrader.TradeConfig.getJDBCDriverNeedsGlobalTransaction(),16,27
org.apache.openjpa.integration.daytrader.TradeConfig.setJDBCDriverNeedsGlobalTransaction(boolean),9,31
org.apache.openjpa.integration.daytrader.TradeConfig.getUpdateQuotePrices(),4,10
org.apache.openjpa.integration.daytrader.TradeConfig.setUpdateQuotePrices(boolean),8,27
org.apache.openjpa.integration.daytrader.TradeConfig.getSoapURL(),3,5
org.apache.openjpa.integration.daytrader.TradeConfig.setSoapURL(String),11,15
org.apache.openjpa.integration.daytrader.TradeConfig.getAccessMode(),2,4
org.apache.openjpa.integration.daytrader.TradeConfig.setAccessMode(int),11,14
org.apache.openjpa.integration.daytrader.TradeConfig.getRunTimeMode(),3,6
org.apache.openjpa.integration.daytrader.TradeConfig.setRunTimeMode(int),5,9
org.apache.openjpa.integration.daytrader.TradeConfig.getPrimIterations(),2,4
org.apache.openjpa.integration.daytrader.TradeConfig.setPrimIterations(int),4,7
org.apache.openjpa.integration.daytrader.TradeConfig.getLongRun(),1,2
org.apache.openjpa.integration.daytrader.TradeConfig.setLongRun(boolean),4,7
org.apache.openjpa.integration.daytrader.TradeConfig.setPublishQuotePriceChange(boolean),7,19
org.apache.openjpa.integration.daytrader.TradeConfig.getPublishQuotePriceChange(),4,8
org.apache.openjpa.integration.daytrader.TradeConfig.setMarketSummaryInterval(int),6,9
org.apache.openjpa.integration.daytrader.TradeConfig.getMarketSummaryInterval(),5,8
org.apache.openjpa.integration.daytrader.TradeConfig.getJPALayerNames(),6,9
org.apache.openjpa.integration.daytrader.TradeConfig.setLog(Log),6,10
org.apache.openjpa.enhance.UnenhancedPropertyAccessSubclass.getRelated(),3,4
org.apache.openjpa.enhance.UnenhancedPropertyAccessSubclass.setRelated(UnenhancedType),6,10
org.apache.openjpa.enhance.UnenhancedPropertyAccessSubclass.setIntField(int),2,3
org.apache.openjpa.enhance.UnenhancedPropertyAccessSubclass.getIntField(),1,2
org.apache.openjpa.enhance.UnenhancedPropertyAccessSubclass.clone(),11,20
"org.apache.openjpa.jdbc.meta.ValueHandler.map(ValueMapping,String,ColumnIO,boolean)",29,53
org.apache.openjpa.jdbc.meta.ValueHandler.isVersionable(ValueMapping),8,8
org.apache.openjpa.jdbc.meta.ValueHandler.objectValueRequiresLoad(ValueMapping),12,16
org.apache.openjpa.jdbc.meta.ValueHandler.getResultArgument(ValueMapping),19,25
"org.apache.openjpa.jdbc.meta.ValueHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)",19,28
"org.apache.openjpa.jdbc.meta.ValueHandler.toObjectValue(ValueMapping,Object)",20,29
"org.apache.openjpa.jdbc.meta.ValueHandler.toObjectValue(ValueMapping,Object,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",32,46
org.apache.openjpa.integration.validation.ConstraintNull.createInvalidNotNull(),7,10
org.apache.openjpa.integration.validation.ConstraintNull.createInvalidNull(),5,9
org.apache.openjpa.integration.validation.ConstraintNull.createValid(),6,9
org.apache.openjpa.integration.validation.ConstraintNull.ConstraintNull(),4,4
org.apache.openjpa.integration.validation.ConstraintNull.getId(),0,0
org.apache.openjpa.integration.validation.ConstraintNull.getNullRequired(),2,3
org.apache.openjpa.integration.validation.ConstraintNull.setNullRequired(String),3,4
org.apache.openjpa.integration.validation.ConstraintNull.getNullInvalid(),2,3
org.apache.openjpa.integration.validation.ConstraintNull.setNullInvalid(String),3,4
org.apache.openjpa.lib.util.BytecodeWriter.write(BCClass),3,3
org.apache.openjpa.lib.util.svn.SVNUtils.svnInfoToInteger(String),27,48
"org.apache.openjpa.jdbc.kernel.exps.EmptyExpression.initialize(Select,ExpContext,Map)",8,10
"org.apache.openjpa.jdbc.kernel.exps.EmptyExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",9,10
"org.apache.openjpa.jdbc.kernel.exps.EmptyExpression.selectColumns(Select,ExpContext,ExpState,boolean)",7,9
org.apache.openjpa.jdbc.kernel.exps.EmptyExpression.acceptVisit(ExpressionVisitor),6,9
org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.getKeyColumns(ClassMapping),6,9
org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.getValueColumns(ClassMapping),7,9
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.selectKey(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Joins)",15,33
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.selectValue(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Joins)",17,33
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.getResults(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,Joins[],boolean)",41,130
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.getResults(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,Joins[],boolean).$1.select(Select,int)",39,99
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.getResults(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,Joins[],boolean).$2.select(Select,int)",36,101
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.loadKey(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",20,37
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.loadValue(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",22,37
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.joinKeyRelation(Joins,ClassMapping)",11,25
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.joinValueRelation(Joins,ClassMapping)",13,27
org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.map(boolean),34,115
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.mapTypeJoin(ValueMapping,DBIdentifier,boolean)",21,47
org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.initialize(),5,7
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",13,17
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.insert(OpenJPAStateManager,RowManager,Map,JDBCStore)",50,162
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",74,536
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.joinRelation(Joins,boolean,boolean)",23,56
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.joinKeyRelation(Joins,boolean,boolean)",21,59
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.toDataStoreValue(Object,JDBCStore)",11,19
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.toKeyDataStoreValue(Object,JDBCStore)",11,20
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",19,30
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.updateSetNull(OpenJPAStateManager,JDBCStore,RowManager,Set)",14,24
"org.apache.openjpa.jdbc.meta.strats.RelationRelationMapTableFieldStrategy.updateSetNull(OpenJPAStateManager,RowManager,Object)",30,98
"org.apache.openjpa.persistence.query.SubStringExpression.SubStringExpression(Expression,Expression)",9,13
"org.apache.openjpa.persistence.query.SubStringExpression.SubStringExpression(Expression,int)",10,14
"org.apache.openjpa.persistence.query.SubStringExpression.SubStringExpression(Expression,int,int)",11,18
"org.apache.openjpa.persistence.query.SubStringExpression.SubStringExpression(Expression,Expression,Expression)",10,16
org.apache.openjpa.persistence.query.SubStringExpression.asExpression(AliasContext),8,17
org.apache.openjpa.jdbc.sql.AbstractSQLServerDictionary.AbstractSQLServerDictionary(),74,158
"org.apache.openjpa.jdbc.sql.AbstractSQLServerDictionary.getColumns(DatabaseMetaData,String,String,String,String,Connection)",22,46
org.apache.openjpa.jdbc.sql.AbstractSQLServerDictionary.getFullName(Index),10,16
"org.apache.openjpa.jdbc.sql.AbstractSQLServerDictionary.setNull(PreparedStatement,int,int,Column)",17,37
"org.apache.openjpa.jdbc.sql.AbstractSQLServerDictionary.appendSelectRange(SQLBuffer,long,long,boolean)",16,21
"org.apache.openjpa.jdbc.sql.AbstractSQLServerDictionary.substring(SQLBuffer,FilterValue,FilterValue,FilterValue)",11,45
org.apache.openjpa.jdbc.sql.MySQLDictionary.MySQLDictionary(),150,280
org.apache.openjpa.jdbc.sql.MySQLDictionary.connectedConfiguration(Connection),42,94
org.apache.openjpa.jdbc.sql.MySQLDictionary.decorate(Connection),16,26
org.apache.openjpa.jdbc.sql.MySQLDictionary.getMajorMinorVersions(String),23,63
org.apache.openjpa.jdbc.sql.MySQLDictionary.getCreateTableSQL(Table),8,23
org.apache.openjpa.jdbc.sql.MySQLDictionary.getDropIndexSQL(Index),6,14
org.apache.openjpa.jdbc.sql.MySQLDictionary.getDropPrimaryKeySQL(PrimaryKey),9,18
"org.apache.openjpa.jdbc.sql.MySQLDictionary.getDropForeignKeySQL(ForeignKey,Connection)",14,43
org.apache.openjpa.jdbc.sql.MySQLDictionary.getAddPrimaryKeySQL(PrimaryKey),22,58
"org.apache.openjpa.jdbc.sql.MySQLDictionary.getDeleteTableContentsSQL(Table[],Connection)",21,48
"org.apache.openjpa.jdbc.sql.MySQLDictionary.appendSelectRange(SQLBuffer,long,long,boolean)",11,26
org.apache.openjpa.jdbc.sql.MySQLDictionary.newColumn(ResultSet),9,21
"org.apache.openjpa.jdbc.sql.MySQLDictionary.getBlobObject(ResultSet,int,JDBCStore)",21,37
org.apache.openjpa.jdbc.sql.MySQLDictionary.getPreferredType(int),6,12
"org.apache.openjpa.jdbc.sql.MySQLDictionary.appendXmlComparison(SQLBuffer,String,FilterValue,FilterValue,boolean,boolean)",13,45
"org.apache.openjpa.jdbc.sql.MySQLDictionary.appendXmlValue(SQLBuffer,FilterValue)",18,42
org.apache.openjpa.jdbc.sql.MySQLDictionary.getBatchFetchSize(int),6,9
org.apache.openjpa.jdbc.sql.MySQLDictionary.getSelectOperation(JDBCFetchConfiguration),8,21
org.apache.openjpa.jdbc.sql.MySQLDictionary.getSelectTableAliases(Select),16,31
"org.apache.openjpa.jdbc.sql.MySQLDictionary.matchErrorState(Map<Set<Integer,String>>,SQLException)",27,53
"org.apache.openjpa.jdbc.sql.MySQLDictionary.isFatalException(int,SQLException)",9,23
org.apache.openjpa.jdbc.sql.MySQLDictionary.getTypeName(Column),17,52
"org.apache.openjpa.jdbc.sql.MySQLDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",10,30
"org.apache.openjpa.jdbc.kernel.exps.JDBCStringContains.appendTo(SQLBuffer,FilterValue,FilterValue[],ClassMapping,JDBCStore)",19,38
org.apache.openjpa.jdbc.kernel.M21UniDepartment.getDeptid(),2,3
org.apache.openjpa.jdbc.kernel.M21UniDepartment.setDeptid(String),3,6
org.apache.openjpa.jdbc.kernel.M21UniDepartment.getVersion(),1,2
org.apache.openjpa.jdbc.kernel.M21UniDepartment.setVersion(int),2,5
org.apache.openjpa.jdbc.kernel.M21UniDepartment.getCostCode(),3,5
org.apache.openjpa.jdbc.kernel.M21UniDepartment.setCostCode(String),4,10
org.apache.openjpa.jdbc.kernel.M21UniDepartment.getName(),2,3
org.apache.openjpa.jdbc.kernel.M21UniDepartment.setName(String),3,6
"org.apache.openjpa.jdbc.sql.ResultSetResult.ResultSetResult(Connection,Statement,ResultSet,DBDictionary)",10,22
"org.apache.openjpa.jdbc.sql.ResultSetResult.ResultSetResult(Connection,Statement,ResultSet,JDBCStore)",10,20
"org.apache.openjpa.jdbc.sql.ResultSetResult.ResultSetResult(Connection,ResultSet,DBDictionary)",8,15
"org.apache.openjpa.jdbc.sql.ResultSetResult.ResultSetResult(ResultSet,DBDictionary)",15,26
"org.apache.openjpa.jdbc.sql.ResultSetResult.ResultSetResult(ResultSet,JDBCStore)",13,25
org.apache.openjpa.jdbc.sql.ResultSetResult.getStatement(),4,6
org.apache.openjpa.jdbc.sql.ResultSetResult.getResultSet(),2,6
org.apache.openjpa.jdbc.sql.ResultSetResult.getDBDictionary(),2,4
org.apache.openjpa.jdbc.sql.ResultSetResult.getStore(),10,13
org.apache.openjpa.jdbc.sql.ResultSetResult.setStore(JDBCStore),11,16
org.apache.openjpa.jdbc.sql.ResultSetResult.getCloseConnection(),6,9
org.apache.openjpa.jdbc.sql.ResultSetResult.setCloseConnection(boolean),7,14
org.apache.openjpa.jdbc.sql.ResultSetResult.close(),5,16
org.apache.openjpa.jdbc.sql.ResultSetResult.supportsRandomAccess(),9,10
org.apache.openjpa.jdbc.sql.ResultSetResult.absoluteInternal(int),7,15
org.apache.openjpa.jdbc.sql.ResultSetResult.nextInternal(),4,4
org.apache.openjpa.jdbc.sql.ResultSetResult.size(),5,10
"org.apache.openjpa.jdbc.sql.ResultSetResult.containsInternal(Object,Joins)",9,12
"org.apache.openjpa.jdbc.sql.ResultSetResult.getArrayInternal(Object,Joins)",9,13
"org.apache.openjpa.jdbc.sql.ResultSetResult.getAsciiStreamInternal(Object,Joins)",11,16
"org.apache.openjpa.jdbc.sql.ResultSetResult.getBigDecimalInternal(Object,Joins)",9,13
"org.apache.openjpa.jdbc.sql.ResultSetResult.getNumberInternal(Object,Joins)",8,10
"org.apache.openjpa.jdbc.sql.ResultSetResult.getBigIntegerInternal(Object,Joins)",9,13
"org.apache.openjpa.jdbc.sql.ResultSetResult.getBinaryStreamInternal(Object,Joins)",11,16
"org.apache.openjpa.jdbc.sql.ResultSetResult.getBlobInternal(Object,Joins)",9,13
"org.apache.openjpa.jdbc.sql.ResultSetResult.getBooleanInternal(Object,Joins)",8,10
"org.apache.openjpa.jdbc.sql.ResultSetResult.getByteInternal(Object,Joins)",8,10
"org.apache.openjpa.jdbc.sql.ResultSetResult.getBytesInternal(Object,Joins)",9,12
"org.apache.openjpa.jdbc.sql.ResultSetResult.getCalendarInternal(Object,Joins)",9,13
"org.apache.openjpa.jdbc.sql.ResultSetResult.getCharInternal(Object,Joins)",8,10
"org.apache.openjpa.jdbc.sql.ResultSetResult.getCharacterStreamInternal(Object,Joins)",11,15
"org.apache.openjpa.jdbc.sql.ResultSetResult.getClobInternal(Object,Joins)",9,13
"org.apache.openjpa.jdbc.sql.ResultSetResult.getDateInternal(Object,Joins)",9,13
"org.apache.openjpa.jdbc.sql.ResultSetResult.getDateInternal(Object,Calendar,Joins)",12,18
"org.apache.openjpa.jdbc.sql.ResultSetResult.getDoubleInternal(Object,Joins)",8,10
"org.apache.openjpa.jdbc.sql.ResultSetResult.getFloatInternal(Object,Joins)",8,10
"org.apache.openjpa.jdbc.sql.ResultSetResult.getIntInternal(Object,Joins)",8,10
"org.apache.openjpa.jdbc.sql.ResultSetResult.getLocaleInternal(Object,Joins)",9,13
"org.apache.openjpa.jdbc.sql.ResultSetResult.getLongInternal(Object,Joins)",8,10
"org.apache.openjpa.jdbc.sql.ResultSetResult.getStreamInternal(JDBCStore,Object,int,Object,Joins)",14,23
"org.apache.openjpa.jdbc.sql.ResultSetResult.getObjectInternal(Object,int,Object,Joins)",42,316
"org.apache.openjpa.jdbc.sql.ResultSetResult.getSQLObjectInternal(Object,Map,Joins)",9,17
"org.apache.openjpa.jdbc.sql.ResultSetResult.getRefInternal(Object,Map,Joins)",10,16
"org.apache.openjpa.jdbc.sql.ResultSetResult.getShortInternal(Object,Joins)",8,10
"org.apache.openjpa.jdbc.sql.ResultSetResult.getStringInternal(Object,Joins,boolean)",10,22
"org.apache.openjpa.jdbc.sql.ResultSetResult.getTimeInternal(Object,Calendar,Joins)",11,16
"org.apache.openjpa.jdbc.sql.ResultSetResult.getTimestampInternal(Object,Calendar,Joins)",11,16
org.apache.openjpa.jdbc.sql.ResultSetResult.wasNull(),2,2
"org.apache.openjpa.jdbc.sql.ResultSetResult.translate(Object,Joins)",6,13
"org.apache.openjpa.jdbc.sql.ResultSetResult.findObject(Object,Joins)",21,38
"org.apache.openjpa.jdbc.sql.ResultSetResult.getLOBStreamInternal(JDBCStore,Object,Joins)",13,20
"org.apache.openjpa.kernel.DetachedValueStateManager.DetachedValueStateManager(Object,StoreContext)",18,28
"org.apache.openjpa.kernel.DetachedValueStateManager.DetachedValueStateManager(PersistenceCapable,ClassMetaData,StoreContext)",13,21
"org.apache.openjpa.kernel.DetachedValueStateManager.initialize(Class,PCState)",5,5
org.apache.openjpa.kernel.DetachedValueStateManager.load(FetchConfiguration),6,7
org.apache.openjpa.kernel.DetachedValueStateManager.getManagedInstance(),3,3
org.apache.openjpa.kernel.DetachedValueStateManager.getPersistenceCapable(),2,4
org.apache.openjpa.kernel.DetachedValueStateManager.getMetaData(),2,5
org.apache.openjpa.kernel.DetachedValueStateManager.getOwner(),3,3
org.apache.openjpa.kernel.DetachedValueStateManager.getOwnerIndex(),5,5
org.apache.openjpa.kernel.DetachedValueStateManager.isEmbedded(),1,1
org.apache.openjpa.kernel.DetachedValueStateManager.isFlushed(),1,1
org.apache.openjpa.kernel.DetachedValueStateManager.isFlushedDirty(),2,2
org.apache.openjpa.kernel.DetachedValueStateManager.isProvisional(),1,1
org.apache.openjpa.kernel.DetachedValueStateManager.getLoaded(),6,6
org.apache.openjpa.kernel.DetachedValueStateManager.getDirty(),6,6
org.apache.openjpa.kernel.DetachedValueStateManager.getFlushed(),6,6
org.apache.openjpa.kernel.DetachedValueStateManager.getUnloaded(FetchConfiguration),8,9
org.apache.openjpa.kernel.DetachedValueStateManager.newProxy(int),6,6
org.apache.openjpa.kernel.DetachedValueStateManager.newFieldProxy(int),6,7
org.apache.openjpa.kernel.DetachedValueStateManager.isDefaultValue(int),5,5
org.apache.openjpa.kernel.DetachedValueStateManager.getContext(),3,4
org.apache.openjpa.kernel.DetachedValueStateManager.getPCState(),3,3
org.apache.openjpa.kernel.DetachedValueStateManager.getId(),1,2
org.apache.openjpa.kernel.DetachedValueStateManager.getObjectId(),4,5
org.apache.openjpa.kernel.DetachedValueStateManager.setObjectId(Object),6,7
org.apache.openjpa.kernel.DetachedValueStateManager.assignObjectId(boolean),6,6
org.apache.openjpa.kernel.DetachedValueStateManager.getLock(),5,5
org.apache.openjpa.kernel.DetachedValueStateManager.setLock(Object),6,7
org.apache.openjpa.kernel.DetachedValueStateManager.getVersion(),5,5
org.apache.openjpa.kernel.DetachedValueStateManager.setVersion(Object),6,7
org.apache.openjpa.kernel.DetachedValueStateManager.setNextVersion(Object),6,7
org.apache.openjpa.kernel.DetachedValueStateManager.isVersionUpdateRequired(),6,6
org.apache.openjpa.kernel.DetachedValueStateManager.isVersionCheckRequired(),6,6
org.apache.openjpa.kernel.DetachedValueStateManager.getImplData(),6,6
"org.apache.openjpa.kernel.DetachedValueStateManager.setImplData(Object,boolean)",8,10
org.apache.openjpa.kernel.DetachedValueStateManager.isImplDataCacheable(),6,6
org.apache.openjpa.kernel.DetachedValueStateManager.getImplData(int),7,7
"org.apache.openjpa.kernel.DetachedValueStateManager.setImplData(int,Object)",8,10
org.apache.openjpa.kernel.DetachedValueStateManager.isImplDataCacheable(int),7,7
org.apache.openjpa.kernel.DetachedValueStateManager.getIntermediate(int),6,6
"org.apache.openjpa.kernel.DetachedValueStateManager.setIntermediate(int,Object)",8,8
org.apache.openjpa.kernel.DetachedValueStateManager.provideField(int),10,17
org.apache.openjpa.kernel.DetachedValueStateManager.fetchBoolean(int),5,5
org.apache.openjpa.kernel.DetachedValueStateManager.fetchByte(int),5,5
org.apache.openjpa.kernel.DetachedValueStateManager.fetchChar(int),5,5
org.apache.openjpa.kernel.DetachedValueStateManager.fetchDouble(int),5,5
org.apache.openjpa.kernel.DetachedValueStateManager.fetchFloat(int),5,5
org.apache.openjpa.kernel.DetachedValueStateManager.fetchInt(int),5,5
org.apache.openjpa.kernel.DetachedValueStateManager.fetchLong(int),5,5
org.apache.openjpa.kernel.DetachedValueStateManager.fetchObject(int),6,7
org.apache.openjpa.kernel.DetachedValueStateManager.fetchShort(int),5,5
org.apache.openjpa.kernel.DetachedValueStateManager.fetchString(int),6,7
"org.apache.openjpa.kernel.DetachedValueStateManager.fetchFromDetachedSM(DetachedStateManager,int)",9,17
org.apache.openjpa.kernel.DetachedValueStateManager.fetch(int),22,45
"org.apache.openjpa.kernel.DetachedValueStateManager.fetchField(int,boolean)",7,12
"org.apache.openjpa.kernel.DetachedValueStateManager.fetchField(FieldManager,int)",17,84
org.apache.openjpa.kernel.DetachedValueStateManager.fetchInitialField(int),7,8
"org.apache.openjpa.kernel.DetachedValueStateManager.storeBoolean(int,boolean)",7,7
"org.apache.openjpa.kernel.DetachedValueStateManager.storeByte(int,byte)",7,7
"org.apache.openjpa.kernel.DetachedValueStateManager.storeChar(int,char)",7,7
"org.apache.openjpa.kernel.DetachedValueStateManager.storeDouble(int,double)",7,7
"org.apache.openjpa.kernel.DetachedValueStateManager.storeFloat(int,float)",7,7
"org.apache.openjpa.kernel.DetachedValueStateManager.storeInt(int,int)",7,7
"org.apache.openjpa.kernel.DetachedValueStateManager.storeLong(int,long)",7,7
"org.apache.openjpa.kernel.DetachedValueStateManager.storeObject(int,Object)",8,9
"org.apache.openjpa.kernel.DetachedValueStateManager.storeShort(int,short)",7,7
"org.apache.openjpa.kernel.DetachedValueStateManager.storeString(int,String)",8,9
"org.apache.openjpa.kernel.DetachedValueStateManager.store(int,Object)",7,7
"org.apache.openjpa.kernel.DetachedValueStateManager.storeField(int,Object)",7,8
org.apache.openjpa.kernel.DetachedValueStateManager.dirty(int),5,5
"org.apache.openjpa.kernel.DetachedValueStateManager.removed(int,Object,boolean)",7,8
org.apache.openjpa.kernel.DetachedValueStateManager.beforeRefresh(boolean),4,5
"org.apache.openjpa.kernel.DetachedValueStateManager.setRemote(int,Object)",8,8
org.apache.openjpa.kernel.DetachedValueStateManager.getGenericContext(),4,4
"org.apache.openjpa.kernel.DetachedValueStateManager.getPCPrimaryKey(Object,int)",8,9
org.apache.openjpa.kernel.DetachedValueStateManager.replaceStateManager(StateManager),2,4
org.apache.openjpa.kernel.DetachedValueStateManager.isDirty(),1,1
org.apache.openjpa.kernel.DetachedValueStateManager.isTransactional(),1,1
org.apache.openjpa.kernel.DetachedValueStateManager.isPersistent(),1,1
org.apache.openjpa.kernel.DetachedValueStateManager.isNew(),0,0
org.apache.openjpa.kernel.DetachedValueStateManager.isDeleted(),1,1
org.apache.openjpa.kernel.DetachedValueStateManager.isDetached(),1,1
org.apache.openjpa.kernel.DetachedValueStateManager.dirty(String),6,6
org.apache.openjpa.kernel.DetachedValueStateManager.fetchObjectId(),2,4
org.apache.openjpa.kernel.DetachedValueStateManager.serializing(),4,4
org.apache.openjpa.kernel.DetachedValueStateManager.writeDetached(ObjectOutput),7,7
org.apache.openjpa.kernel.DetachedValueStateManager.proxyDetachedDeserialized(int),7,7
org.apache.openjpa.kernel.DetachedValueStateManager.accessingField(int),6,6
"org.apache.openjpa.kernel.DetachedValueStateManager.providedBooleanField(PersistenceCapable,int,boolean)",7,8
"org.apache.openjpa.kernel.DetachedValueStateManager.providedCharField(PersistenceCapable,int,char)",7,8
"org.apache.openjpa.kernel.DetachedValueStateManager.providedByteField(PersistenceCapable,int,byte)",7,8
"org.apache.openjpa.kernel.DetachedValueStateManager.providedShortField(PersistenceCapable,int,short)",7,8
"org.apache.openjpa.kernel.DetachedValueStateManager.providedIntField(PersistenceCapable,int,int)",7,8
"org.apache.openjpa.kernel.DetachedValueStateManager.providedLongField(PersistenceCapable,int,long)",7,8
"org.apache.openjpa.kernel.DetachedValueStateManager.providedFloatField(PersistenceCapable,int,float)",7,8
"org.apache.openjpa.kernel.DetachedValueStateManager.providedDoubleField(PersistenceCapable,int,double)",7,8
"org.apache.openjpa.kernel.DetachedValueStateManager.providedStringField(PersistenceCapable,int,String)",8,10
"org.apache.openjpa.kernel.DetachedValueStateManager.providedObjectField(PersistenceCapable,int,Object)",8,10
"org.apache.openjpa.kernel.DetachedValueStateManager.settingBooleanField(PersistenceCapable,int,boolean,boolean,int)",10,10
"org.apache.openjpa.kernel.DetachedValueStateManager.settingCharField(PersistenceCapable,int,char,char,int)",10,10
"org.apache.openjpa.kernel.DetachedValueStateManager.settingByteField(PersistenceCapable,int,byte,byte,int)",10,10
"org.apache.openjpa.kernel.DetachedValueStateManager.settingShortField(PersistenceCapable,int,short,short,int)",10,10
"org.apache.openjpa.kernel.DetachedValueStateManager.settingIntField(PersistenceCapable,int,int,int,int)",10,10
"org.apache.openjpa.kernel.DetachedValueStateManager.settingLongField(PersistenceCapable,int,long,long,int)",10,10
"org.apache.openjpa.kernel.DetachedValueStateManager.settingFloatField(PersistenceCapable,int,float,float,int)",10,10
"org.apache.openjpa.kernel.DetachedValueStateManager.settingDoubleField(PersistenceCapable,int,double,double,int)",10,10
"org.apache.openjpa.kernel.DetachedValueStateManager.settingStringField(PersistenceCapable,int,String,String,int)",11,13
"org.apache.openjpa.kernel.DetachedValueStateManager.settingObjectField(PersistenceCapable,int,Object,Object,int)",11,13
"org.apache.openjpa.kernel.DetachedValueStateManager.replaceBooleanField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.DetachedValueStateManager.replaceCharField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.DetachedValueStateManager.replaceByteField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.DetachedValueStateManager.replaceShortField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.DetachedValueStateManager.replaceIntField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.DetachedValueStateManager.replaceLongField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.DetachedValueStateManager.replaceFloatField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.DetachedValueStateManager.replaceDoubleField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.DetachedValueStateManager.replaceStringField(PersistenceCapable,int)",9,10
"org.apache.openjpa.kernel.DetachedValueStateManager.replaceObjectField(PersistenceCapable,int)",9,10
org.apache.openjpa.kernel.DetachedValueStateManager.isDelayed(int),2,2
"org.apache.openjpa.kernel.DetachedValueStateManager.setDelayed(int,boolean)",7,7
org.apache.openjpa.kernel.DetachedValueStateManager.loadDelayedField(int),6,7
org.apache.openjpa.meta.AbstractThing.getId(),1,1
org.apache.openjpa.meta.AbstractThing.setId(String),2,2
org.apache.openjpa.meta.Item.Item(),5,5
org.apache.openjpa.meta.Item.Item(String),6,12
org.apache.openjpa.meta.Item.getId(),13,17
org.apache.openjpa.meta.Item.getTitle(),4,7
org.apache.openjpa.meta.Item.setTitle(String),13,22
org.apache.openjpa.meta.Item.getArtist(),8,14
org.apache.openjpa.meta.Item.setArtist(Artist),9,17
"org.apache.openjpa.jdbc.kernel.exps.OrExpression.OrExpression(Exp,Exp)",6,13
"org.apache.openjpa.jdbc.kernel.exps.OrExpression.initialize(Select,ExpContext,Map)",30,88
"org.apache.openjpa.jdbc.kernel.exps.OrExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",14,46
"org.apache.openjpa.jdbc.kernel.exps.OrExpression.selectColumns(Select,ExpContext,ExpState,boolean)",9,28
org.apache.openjpa.jdbc.kernel.exps.OrExpression.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.jdbc.sql.Select.indexOf(),3,4
org.apache.openjpa.jdbc.sql.Select.getSubselects(),6,7
org.apache.openjpa.jdbc.sql.Select.getParent(),3,5
org.apache.openjpa.jdbc.sql.Select.getSubselectPath(),4,7
"org.apache.openjpa.jdbc.sql.Select.setParent(Select,String)",7,9
org.apache.openjpa.jdbc.sql.Select.getFromSelect(),7,10
org.apache.openjpa.jdbc.sql.Select.setFromSelect(Select),9,12
org.apache.openjpa.jdbc.sql.Select.hasEagerJoin(boolean),5,7
org.apache.openjpa.jdbc.sql.Select.hasJoin(boolean),4,5
org.apache.openjpa.jdbc.sql.Select.isSelected(Table),3,5
org.apache.openjpa.jdbc.sql.Select.getTableAliases(),4,6
org.apache.openjpa.jdbc.sql.Select.getSelects(),7,9
org.apache.openjpa.jdbc.sql.Select.getSelectAliases(),11,14
org.apache.openjpa.jdbc.sql.Select.getIdentifierAliases(),13,17
org.apache.openjpa.jdbc.sql.Select.getOrdering(),3,4
org.apache.openjpa.jdbc.sql.Select.getGrouping(),3,4
org.apache.openjpa.jdbc.sql.Select.getWhere(),5,5
org.apache.openjpa.jdbc.sql.Select.getHaving(),4,4
org.apache.openjpa.jdbc.sql.Select.addJoinClassConditions(),10,15
org.apache.openjpa.jdbc.sql.Select.getJoins(),4,6
org.apache.openjpa.jdbc.sql.Select.getJoinIterator(),7,9
org.apache.openjpa.jdbc.sql.Select.getStartIndex(),3,5
org.apache.openjpa.jdbc.sql.Select.getEndIndex(),2,3
"org.apache.openjpa.jdbc.sql.Select.setRange(long,long)",5,7
org.apache.openjpa.jdbc.sql.Select.getColumnAlias(Column),4,7
"org.apache.openjpa.jdbc.sql.Select.getColumnAlias(Column,Joins)",5,9
"org.apache.openjpa.jdbc.sql.Select.getColumnAlias(String,Table)",5,9
"org.apache.openjpa.jdbc.sql.Select.getColumnAlias(String,Table,Joins)",6,11
org.apache.openjpa.jdbc.sql.Select.isAggregate(),2,3
org.apache.openjpa.jdbc.sql.Select.setAggregate(boolean),4,6
org.apache.openjpa.jdbc.sql.Select.isLob(),3,4
org.apache.openjpa.jdbc.sql.Select.setLob(boolean),5,8
org.apache.openjpa.jdbc.sql.Select.clearSelects(),3,4
org.apache.openjpa.jdbc.sql.Select.selectPlaceholder(String),6,9
"org.apache.openjpa.jdbc.sql.Select.select(SQLBuffer,Object)",11,15
"org.apache.openjpa.jdbc.sql.Select.select(SQLBuffer,Object,Joins)",12,17
"org.apache.openjpa.jdbc.sql.Select.select(String,Object)",11,14
"org.apache.openjpa.jdbc.sql.Select.select(String,Object,Joins)",12,16
org.apache.openjpa.jdbc.sql.Select.select(Column),4,6
"org.apache.openjpa.jdbc.sql.Select.select(Column,Joins)",5,8
org.apache.openjpa.jdbc.sql.Select.select(Column[]),8,10
"org.apache.openjpa.jdbc.sql.Select.select(Column[],Joins)",9,12
"org.apache.openjpa.jdbc.sql.Select.select(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,int)",17,25
"org.apache.openjpa.jdbc.sql.Select.select(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,int,Joins)",18,27
org.apache.openjpa.jdbc.sql.Select.selectIdentifier(Column),19,25
"org.apache.openjpa.jdbc.sql.Select.selectIdentifier(Column,Joins)",20,27
org.apache.openjpa.jdbc.sql.Select.selectIdentifier(Column[]),24,30
"org.apache.openjpa.jdbc.sql.Select.selectIdentifier(Column[],Joins)",25,32
"org.apache.openjpa.jdbc.sql.Select.selectIdentifier(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,int)",34,48
"org.apache.openjpa.jdbc.sql.Select.selectIdentifier(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,int,Joins)",35,50
org.apache.openjpa.jdbc.sql.Select.selectPrimaryKey(ClassMapping),13,20
"org.apache.openjpa.jdbc.sql.Select.selectPrimaryKey(ClassMapping,Joins)",14,22
org.apache.openjpa.jdbc.sql.Select.clearOrdering(),2,2
"org.apache.openjpa.jdbc.sql.Select.orderByPrimaryKey(ClassMapping,boolean,boolean)",14,19
"org.apache.openjpa.jdbc.sql.Select.orderByPrimaryKey(ClassMapping,boolean,Joins,boolean)",16,22
"org.apache.openjpa.jdbc.sql.Select.orderBy(Column,boolean,boolean)",8,9
"org.apache.openjpa.jdbc.sql.Select.orderBy(Column,boolean,Joins,boolean)",9,11
"org.apache.openjpa.jdbc.sql.Select.orderBy(Column[],boolean,boolean)",9,9
"org.apache.openjpa.jdbc.sql.Select.orderBy(Column[],boolean,Joins,boolean)",10,11
"org.apache.openjpa.jdbc.sql.Select.orderBy(SQLBuffer,boolean,boolean,Value)",11,13
"org.apache.openjpa.jdbc.sql.Select.orderBy(SQLBuffer,boolean,Joins,boolean,Value)",12,15
"org.apache.openjpa.jdbc.sql.Select.orderBy(String,boolean,boolean)",10,10
"org.apache.openjpa.jdbc.sql.Select.orderBy(String,boolean,Joins,boolean)",11,12
"org.apache.openjpa.jdbc.sql.Select.wherePrimaryKey(Object,ClassMapping,JDBCStore)",16,26
"org.apache.openjpa.jdbc.sql.Select.whereForeignKey(ForeignKey,Object,ClassMapping,JDBCStore)",12,20
org.apache.openjpa.jdbc.sql.Select.where(Joins),3,4
org.apache.openjpa.jdbc.sql.Select.where(SQLBuffer),4,5
"org.apache.openjpa.jdbc.sql.Select.where(SQLBuffer,Joins)",5,7
org.apache.openjpa.jdbc.sql.Select.where(String),4,4
"org.apache.openjpa.jdbc.sql.Select.where(String,Joins)",5,6
org.apache.openjpa.jdbc.sql.Select.having(SQLBuffer),4,5
"org.apache.openjpa.jdbc.sql.Select.having(SQLBuffer,Joins)",5,7
org.apache.openjpa.jdbc.sql.Select.having(String),4,4
"org.apache.openjpa.jdbc.sql.Select.having(String,Joins)",5,6
org.apache.openjpa.jdbc.sql.Select.groupBy(Column),2,3
"org.apache.openjpa.jdbc.sql.Select.groupBy(Column,Joins)",3,5
org.apache.openjpa.jdbc.sql.Select.groupBy(Column[]),3,3
"org.apache.openjpa.jdbc.sql.Select.groupBy(Column[],Joins)",4,5
org.apache.openjpa.jdbc.sql.Select.groupBy(SQLBuffer),4,5
"org.apache.openjpa.jdbc.sql.Select.groupBy(SQLBuffer,Joins)",5,7
org.apache.openjpa.jdbc.sql.Select.groupBy(String),4,4
"org.apache.openjpa.jdbc.sql.Select.groupBy(String,Joins)",5,6
"org.apache.openjpa.jdbc.sql.Select.groupBy(ClassMapping,int,JDBCStore,JDBCFetchConfiguration)",12,18
"org.apache.openjpa.jdbc.sql.Select.groupBy(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,Joins)",13,20
org.apache.openjpa.jdbc.sql.Select.whereClone(int),10,12
org.apache.openjpa.jdbc.sql.Select.fullClone(int),9,12
"org.apache.openjpa.jdbc.sql.Select.eagerClone(FieldMapping,int,boolean,int)",26,51
org.apache.openjpa.jdbc.sql.Select.getEager(FieldMapping),6,9
org.apache.openjpa.jdbc.sql.Select.newJoins(),3,4
org.apache.openjpa.jdbc.sql.Select.newOuterJoins(),4,6
"org.apache.openjpa.jdbc.sql.Select.append(SQLBuffer,Joins)",5,9
"org.apache.openjpa.jdbc.sql.Select.and(Joins,Joins)",3,9
"org.apache.openjpa.jdbc.sql.Select.or(Joins,Joins)",4,10
org.apache.openjpa.jdbc.sql.Select.outer(Joins),4,9
org.apache.openjpa.jdbc.sql.Select.toString(),6,9
"org.apache.openjpa.jdbc.sql.Select.getColumnAlias(Column,Object)",8,12
org.apache.openjpa.jdbc.sql.Select.setContext(Context),6,11
org.apache.openjpa.jdbc.sql.Select.ctx(),5,6
org.apache.openjpa.jdbc.sql.Select.setSchemaAlias(String),9,15
org.apache.openjpa.jdbc.sql.Select.setHasSubselect(boolean),8,10
org.apache.openjpa.jdbc.sql.Select.getHasSubselect(),6,7
org.apache.openjpa.jdbc.sql.Select.logEagerRelations(),6,8
org.apache.openjpa.jdbc.sql.Select.setTablePerClassMeta(ClassMapping),7,10
org.apache.openjpa.jdbc.sql.Select.getTablePerClassMeta(),6,7
org.apache.openjpa.jdbc.sql.Select.setJoinedTableClassMeta(List),8,12
org.apache.openjpa.jdbc.sql.Select.getJoinedTableClassMeta(),7,9
org.apache.openjpa.jdbc.sql.Select.setExcludedJoinedTableClassMeta(List),9,14
org.apache.openjpa.jdbc.sql.Select.getExcludedJoinedTableClassMeta(),8,11
org.apache.openjpa.jdbc.sql.Select.getDictionary(),1,2
org.apache.openjpa.persistence.jest.JSON.asString(int),9,14
org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.LRSProxyCollection(LRSCollectionFieldStrategy),11,20
org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.count(),23,38
"org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.count().$1.select(Select,int)",15,25
org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.has(Object),25,39
"org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.has(Object).$2.select(Select,int)",29,79
org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.itr(),39,86
"org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.itr().$3.select(Select,int)",28,62
org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.assertOwner(),10,14
org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.getStore(),7,11
"org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.ResultIterator.ResultIterator(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins[])",10,23
org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.ResultIterator.hasNext(),7,9
org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.ResultIterator.next(),13,19
org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.ResultIterator.remove(),4,4
org.apache.openjpa.jdbc.meta.strats.LRSProxyCollection.ResultIterator.close(),2,3
org.apache.openjpa.conf.CacheMarshaller.load(),14,25
org.apache.openjpa.conf.CacheMarshaller.store(Object),4,6
org.apache.openjpa.conf.CacheMarshaller.setId(String),7,7
org.apache.openjpa.conf.CacheMarshaller.getId(),3,3
org.apache.openjpa.conf.CacheMarshaller.setValidationPolicy(String),27,40
org.apache.openjpa.conf.CacheMarshaller.ValidationPolicy.getValidData(Object),9,18
org.apache.openjpa.conf.CacheMarshaller.ValidationPolicy.getCacheableData(Object),7,9
org.apache.openjpa.lib.util.TestParameterTemplate.TestParameterTemplate(String),4,6
org.apache.openjpa.lib.util.TestParameterTemplate.testParameters(),22,69
org.apache.openjpa.lib.util.TestParameterTemplate.suite(),4,7
org.apache.openjpa.lib.util.TestParameterTemplate.main(String[]),7,7
org.apache.openjpa.jdbc.kernel.exps.ConstGetObjectId.ConstGetObjectId(Const),5,8
org.apache.openjpa.jdbc.kernel.exps.ConstGetObjectId.getType(),2,2
org.apache.openjpa.jdbc.kernel.exps.ConstGetObjectId.setImplicitType(Class),3,4
org.apache.openjpa.jdbc.kernel.exps.ConstGetObjectId.getValue(Object[]),14,21
"org.apache.openjpa.jdbc.kernel.exps.ConstGetObjectId.getValue(ExpContext,ExpState)",7,16
"org.apache.openjpa.jdbc.kernel.exps.ConstGetObjectId.initialize(Select,ExpContext,int)",9,14
"org.apache.openjpa.jdbc.kernel.exps.ConstGetObjectId.getSQLValue(Select,ExpContext,ExpState)",8,13
"org.apache.openjpa.jdbc.kernel.exps.ConstGetObjectId.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",16,55
"org.apache.openjpa.jdbc.kernel.exps.ConstGetObjectId.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",14,38
org.apache.openjpa.jdbc.kernel.exps.ConstGetObjectId.ConstGetObjectIdExpState.ConstGetObjectIdExpState(ExpState),3,6
org.apache.openjpa.persistence.TestPersistenceProductDerivation.setUp(),47,132
org.apache.openjpa.persistence.TestPersistenceProductDerivation.tearDown(),39,51
org.apache.openjpa.persistence.TestPersistenceProductDerivation.testGetAnchorsInResource(),27,48
org.apache.openjpa.persistence.TestPersistenceProductDerivation.testEncryptionPluginConfiguration(),27,87
org.apache.openjpa.persistence.TestPersistenceProductDerivation.testEncryptionPluginConfigurationDefaultValue(),18,39
org.apache.openjpa.persistence.TestPersistenceProductDerivation.testJPA1ExcludeUnlistedClasses(),38,140
org.apache.openjpa.persistence.TestPersistenceProductDerivation.testExcludeUnlistedClasses(),38,144
org.apache.openjpa.persistence.TestPersistenceProductDerivation.getResourceURL(String),26,54
"org.apache.openjpa.persistence.TestPersistenceProductDerivation.buildJar(File,File)",19,56
"org.apache.openjpa.persistence.TestPersistenceProductDerivation.TempUrlLoader.TempUrlLoader(URL[],ClassLoader)",5,9
org.apache.openjpa.persistence.TestPersistenceProductDerivation.TestEncryptionProvider.getEncryptedPassword(),3,5
org.apache.openjpa.persistence.TestPersistenceProductDerivation.TestEncryptionProvider.decrypt(String),10,18
org.apache.openjpa.persistence.TestPersistenceProductDerivation.TestEncryptionProvider.encrypt(String),5,9
org.apache.openjpa.jdbc.kernel.exps.IsNotEmptyExpression.IsNotEmptyExpression(Val),7,10
"org.apache.openjpa.jdbc.kernel.exps.IsNotEmptyExpression.initialize(Select,ExpContext,Map)",10,15
"org.apache.openjpa.jdbc.kernel.exps.IsNotEmptyExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",14,25
"org.apache.openjpa.jdbc.kernel.exps.IsNotEmptyExpression.selectColumns(Select,ExpContext,ExpState,boolean)",8,14
org.apache.openjpa.jdbc.kernel.exps.IsNotEmptyExpression.acceptVisit(ExpressionVisitor),7,13
"org.apache.openjpa.persistence.jdbc.JDBCPersistenceProductDerivation.putBrokerFactoryAliases(Map<String,String>)",5,6
org.apache.openjpa.persistence.jdbc.JDBCPersistenceProductDerivation.getType(),3,4
org.apache.openjpa.persistence.jdbc.JDBCPersistenceProductDerivation.validate(),16,16
org.apache.openjpa.persistence.jdbc.JDBCPersistenceProductDerivation.beforeConfigurationLoad(Configuration),35,133
org.apache.openjpa.persistence.jdbc.JDBCPersistenceProductDerivation.afterSpecificationSet(Configuration),21,55
org.apache.openjpa.persistence.jdbc.JDBCPersistenceProductDerivation.getSupportedQueryHints(),5,6
org.apache.openjpa.persistence.access.SuperPropertyEntity.setId(int),1,1
org.apache.openjpa.persistence.access.SuperPropertyEntity.getId(),0,0
org.apache.openjpa.persistence.access.SuperPropertyEntity.setName(String),3,6
org.apache.openjpa.persistence.access.SuperPropertyEntity.getName(),2,3
org.apache.openjpa.persistence.access.SuperPropertyEntity.equals(Object),7,17
org.apache.openjpa.event.BeginTransactionListener.afterBegin(TransactionEvent),5,10
"org.apache.openjpa.event.TransactionEvent.TransactionEvent(Broker,int,Collection,Collection,Collection,Collection)",24,83
org.apache.openjpa.event.TransactionEvent.getType(),2,4
org.apache.openjpa.event.TransactionEvent.getTransactionalObjects(),13,18
org.apache.openjpa.event.TransactionEvent.getPersistedTypes(),13,13
org.apache.openjpa.event.TransactionEvent.getUpdatedTypes(),13,13
org.apache.openjpa.event.TransactionEvent.getDeletedTypes(),12,13
org.apache.openjpa.persistence.jdbc.PersistenceMappingFactory.newAnnotationParser(),23,43
org.apache.openjpa.persistence.jdbc.PersistenceMappingFactory.newAnnotationSerializer(),13,26
org.apache.openjpa.persistence.jdbc.PersistenceMappingFactory.newXMLParser(boolean),24,45
org.apache.openjpa.persistence.jdbc.PersistenceMappingFactory.newXMLSerializer(),13,26
org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.getFieldMapping(),3,7
org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.getIndependentKeyMappings(boolean),15,23
org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.getIndependentValueMappings(boolean),14,23
org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.getJoinForeignKey(ClassMapping),11,21
org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.getKeyColumns(ClassMapping),12,20
org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.getValueColumns(ClassMapping),12,20
"org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.selectKey(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Joins)",22,32
"org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.loadKey(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",17,25
"org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.deriveKey(JDBCStore,Object)",11,14
"org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.deriveValue(JDBCStore,Object)",11,14
"org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.selectValue(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Joins)",21,28
"org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.loadValue(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",14,21
"org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.getResults(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,Joins[],boolean)",30,46
"org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.joinKeyRelation(Joins,ClassMapping)",10,18
"org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy.joinValueRelation(Joins,ClassMapping)",11,18
org.apache.openjpa.jdbc.kernel.exps.SelectConstructor.isExtent(),11,14
org.apache.openjpa.jdbc.kernel.exps.SelectConstructor.setSubselect(Select),3,6
"org.apache.openjpa.jdbc.kernel.exps.SelectConstructor.evaluate(ExpContext,Select,String,QueryExpressions,QueryExpressionsState)",68,210
"org.apache.openjpa.jdbc.kernel.exps.SelectConstructor.newSelect(ExpContext,Select,String,QueryExpressions,QueryExpressionsState)",73,279
"org.apache.openjpa.jdbc.kernel.exps.SelectConstructor.initialize(Select,ExpContext,QueryExpressions,QueryExpressionsState)",52,224
"org.apache.openjpa.jdbc.kernel.exps.SelectConstructor.contains(Val,Value[])",5,11
"org.apache.openjpa.jdbc.kernel.exps.SelectConstructor.buildWhere(Select,ExpContext,ExpState,Expression)",15,38
"org.apache.openjpa.jdbc.kernel.exps.SelectConstructor.select(Select,ExpContext,ClassMapping,boolean,QueryExpressions,QueryExpressionsState,int)",73,260
org.apache.openjpa.jdbc.kernel.exps.SelectConstructor.ProjectionExpressionVisitor.hasCandidateProjections(Value[]),10,16
org.apache.openjpa.jdbc.kernel.exps.SelectConstructor.ProjectionExpressionVisitor.enter(Value),8,15
org.apache.openjpa.jdbc.kernel.exps.SelectConstructor.ProjectionExpressionVisitor.exit(Value),4,4
org.apache.openjpa.jdbc.schema.Schemas.getNewTableSchema(JDBCConfiguration),11,16
org.apache.openjpa.jdbc.schema.Schemas.getNewTableSchemaIdentifier(JDBCConfiguration),16,37
org.apache.openjpa.jdbc.schema.Schemas.getJDBCName(int),33,89
org.apache.openjpa.jdbc.schema.Schemas.getJDBCType(String),40,181
"org.apache.openjpa.jdbc.schema.Schemas.getJavaType(int,int,int)",26,57
org.apache.openjpa.util.MapChangeTracker.getTrackKeys(),8,14
org.apache.openjpa.util.MapChangeTracker.setTrackKeys(boolean),8,16
"org.apache.openjpa.util.MapChangeTracker.added(Object,Object)",7,9
"org.apache.openjpa.util.MapChangeTracker.removed(Object,Object)",7,9
"org.apache.openjpa.util.MapChangeTracker.changed(Object,Object,Object)",7,10
org.apache.openjpa.jdbc.sql.SelectExecutor.getConfiguration(),3,5
"org.apache.openjpa.jdbc.sql.SelectExecutor.toSelect(boolean,JDBCFetchConfiguration)",11,14
org.apache.openjpa.jdbc.sql.SelectExecutor.getSQL(),10,12
org.apache.openjpa.jdbc.sql.SelectExecutor.toSelectCount(),8,11
org.apache.openjpa.jdbc.sql.SelectExecutor.getAutoDistinct(),9,10
org.apache.openjpa.jdbc.sql.SelectExecutor.setAutoDistinct(boolean),10,12
org.apache.openjpa.jdbc.sql.SelectExecutor.isDistinct(),3,4
org.apache.openjpa.jdbc.sql.SelectExecutor.setDistinct(boolean),4,6
org.apache.openjpa.jdbc.sql.SelectExecutor.isLRS(),5,6
org.apache.openjpa.jdbc.sql.SelectExecutor.setLRS(boolean),5,8
org.apache.openjpa.jdbc.sql.SelectExecutor.getExpectedResultCount(),4,7
"org.apache.openjpa.jdbc.sql.SelectExecutor.setExpectedResultCount(int,boolean)",11,21
org.apache.openjpa.jdbc.sql.SelectExecutor.getJoinSyntax(),6,10
org.apache.openjpa.jdbc.sql.SelectExecutor.setJoinSyntax(int),7,13
org.apache.openjpa.jdbc.sql.SelectExecutor.supportsRandomAccess(boolean),9,11
org.apache.openjpa.jdbc.sql.SelectExecutor.supportsLocking(),5,5
org.apache.openjpa.jdbc.sql.SelectExecutor.getCount(JDBCStore),8,9
"org.apache.openjpa.jdbc.sql.SelectExecutor.execute(JDBCStore,JDBCFetchConfiguration)",11,16
"org.apache.openjpa.jdbc.sql.SelectExecutor.execute(JDBCStore,JDBCFetchConfiguration,int)",13,18
org.apache.openjpa.jdbc.sql.SelectExecutor.hasMultipleSelects(),7,8
"org.apache.openjpa.util.StringId.StringId(Class<>,String)",5,11
"org.apache.openjpa.util.StringId.StringId(Class<>,String,boolean)",6,13
org.apache.openjpa.util.StringId.getId(),2,2
org.apache.openjpa.util.StringId.getIdObject(),2,3
org.apache.openjpa.util.StringId.toString(),2,3
org.apache.openjpa.util.StringId.idHash(),3,4
org.apache.openjpa.util.StringId.idEquals(OpenJPAId),4,6
org.apache.openjpa.jdbc.sql.SolidDBDictionary.SolidDBDictionary(),57,101
org.apache.openjpa.jdbc.sql.SolidDBDictionary.endConfiguration(),5,8
"org.apache.openjpa.jdbc.sql.SolidDBDictionary.getCreateTableSQL(Table,SchemaGroup)",73,276
"org.apache.openjpa.jdbc.sql.SolidDBDictionary.sequenceExists(String,String,SchemaGroup)",13,47
org.apache.openjpa.jdbc.sql.SolidDBDictionary.getGeneratedKeyTriggerName(Column),18,33
org.apache.openjpa.jdbc.sql.SolidDBDictionary.getOpenJPA3GeneratedKeySequenceName(Column),23,40
org.apache.openjpa.jdbc.sql.SolidDBDictionary.getOpenJPA3GeneratedKeyTriggerName(Column),23,40
org.apache.openjpa.jdbc.sql.SolidDBDictionary.getAutoGenSeqName(Column),14,37
"org.apache.openjpa.jdbc.sql.SolidDBDictionary.getGenKeySeqName(String,Column)",12,19
org.apache.openjpa.jdbc.sql.SolidDBDictionary.convertSchemaCase(DBIdentifier),6,15
"org.apache.openjpa.jdbc.sql.SolidDBDictionary.substring(SQLBuffer,FilterValue,FilterValue,FilterValue)",15,68
"org.apache.openjpa.jdbc.sql.SolidDBDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",10,30
"org.apache.openjpa.jdbc.sql.SolidDBDictionary.isSystemIndex(DBIdentifier,Table)",14,35
"org.apache.openjpa.jdbc.sql.SolidDBDictionary.isSystemSequence(DBIdentifier,DBIdentifier,boolean)",11,60
"org.apache.openjpa.jdbc.sql.SolidDBDictionary.setBigDecimal(PreparedStatement,int,BigDecimal,Column)",17,61
"org.apache.openjpa.jdbc.sql.SolidDBDictionary.setDouble(PreparedStatement,int,double,Column)",15,52
"org.apache.openjpa.jdbc.sql.SolidDBDictionary.needsToCreateIndex(Index,Table,Unique[])",26,71
"org.apache.openjpa.jdbc.sql.SolidDBDictionary.getSequencesSQL(String,String)",7,19
"org.apache.openjpa.jdbc.sql.SolidDBDictionary.getSequencesSQL(DBIdentifier,DBIdentifier)",10,49
"org.apache.openjpa.jdbc.sql.SolidDBDictionary.appendSelect(SQLBuffer,Object,Select,int)",35,111
org.apache.openjpa.jdbc.sql.SolidDBDictionary.newForeignKey(ResultSet),8,16
"org.apache.openjpa.jdbc.sql.SolidDBDictionary.isFatalException(int,SQLException)",10,23
org.apache.openjpa.jdbc.sql.MariaDBDictionary.MariaDBDictionary(),151,280
org.apache.openjpa.jdbc.sql.MariaDBDictionary.connectedConfiguration(Connection),30,57
org.apache.openjpa.jdbc.sql.MariaDBDictionary.setDelimitedCase(DatabaseMetaData),13,16
org.apache.openjpa.jdbc.sql.MariaDBDictionary.decorate(Connection),5,10
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getMajorMinorVersions(String),23,63
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getCreateTableSQL(Table),8,23
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getDropIndexSQL(Index),6,14
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getDropPrimaryKeySQL(PrimaryKey),9,18
"org.apache.openjpa.jdbc.sql.MariaDBDictionary.getDropForeignKeySQL(ForeignKey,Connection)",14,43
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getAddPrimaryKeySQL(PrimaryKey),22,58
"org.apache.openjpa.jdbc.sql.MariaDBDictionary.getDeleteTableContentsSQL(Table[],Connection)",21,48
"org.apache.openjpa.jdbc.sql.MariaDBDictionary.appendSelectRange(SQLBuffer,long,long,boolean)",11,26
org.apache.openjpa.jdbc.sql.MariaDBDictionary.newColumn(ResultSet),9,21
"org.apache.openjpa.jdbc.sql.MariaDBDictionary.getBlobObject(ResultSet,int,JDBCStore)",21,37
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getPreferredType(int),6,12
"org.apache.openjpa.jdbc.sql.MariaDBDictionary.appendXmlComparison(SQLBuffer,String,FilterValue,FilterValue,boolean,boolean)",13,45
"org.apache.openjpa.jdbc.sql.MariaDBDictionary.appendXmlValue(SQLBuffer,FilterValue)",18,42
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getBatchFetchSize(int),6,9
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getSelectOperation(JDBCFetchConfiguration),8,21
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getSelectTableAliases(Select),16,31
"org.apache.openjpa.jdbc.sql.MariaDBDictionary.matchErrorState(Map<Set<Integer,String>>,SQLException)",15,29
"org.apache.openjpa.jdbc.sql.MariaDBDictionary.isFatalException(int,SQLException)",11,30
org.apache.openjpa.jdbc.sql.MariaDBDictionary.getTypeName(Column),17,52
"org.apache.openjpa.jdbc.sql.MariaDBDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",10,30
org.apache.openjpa.persistence.jest.JESTCommand.getExecutionContext(),5,10
org.apache.openjpa.persistence.jest.JESTCommand.parse(),23,36
org.apache.openjpa.persistence.jest.JESTCommand.process(),8,12
org.apache.openjpa.persistence.jest.JESTCommand.getArguments(),9,12
org.apache.openjpa.persistence.jest.JESTCommand.getArgument(String),12,16
org.apache.openjpa.persistence.jest.JESTCommand.hasArgument(String),12,14
org.apache.openjpa.persistence.jest.JESTCommand.getQualifiers(),9,12
org.apache.openjpa.persistence.jest.JESTCommand.getQualifier(String),12,16
org.apache.openjpa.persistence.jest.JESTCommand.hasQualifier(String),12,14
demo.Movie.Movie(),1,1
"demo.Movie.Movie(String,String,int)",3,6
demo.Movie.getId(),1,1
demo.Movie.getTitle(),2,3
demo.Movie.addActor(Actor),5,10
demo.Movie.getActors(),3,4
demo.Movie.getYear(),0,0
org.apache.openjpa.lib.conf.ProductDerivations.getProductDerivations(),6,10
org.apache.openjpa.lib.conf.ProductDerivations.getConfigurationPrefixes(),5,8
org.apache.openjpa.lib.conf.ProductDerivations.setConfigurationPrefixes(String[]),9,14
"org.apache.openjpa.lib.conf.ProductDerivations.getConfigurationKey(String,Map)",34,98
org.apache.openjpa.lib.conf.ProductDerivations.beforeConfigurationConstruct(ConfigurationProvider),21,33
org.apache.openjpa.lib.conf.ProductDerivations.beforeConfigurationLoad(Configuration),21,33
org.apache.openjpa.lib.conf.ProductDerivations.afterSpecificationSet(Configuration),22,33
org.apache.openjpa.lib.conf.ProductDerivations.beforeClose(Configuration),15,23
"org.apache.openjpa.lib.conf.ProductDerivations.load(String,String,ClassLoader)",38,91
"org.apache.openjpa.lib.conf.ProductDerivations.load(File,String,ClassLoader)",39,97
org.apache.openjpa.lib.conf.ProductDerivations.loadDefaults(ClassLoader),8,14
org.apache.openjpa.lib.conf.ProductDerivations.loadGlobals(ClassLoader),8,14
"org.apache.openjpa.lib.conf.ProductDerivations.load(ClassLoader,boolean)",29,65
"org.apache.openjpa.lib.conf.ProductDerivations.reportErrors(StringBuilder,String,Throwable)",17,29
org.apache.openjpa.lib.conf.ProductDerivations.getFullyQualifiedAnchorsInPropertiesLocation(String),36,124
"org.apache.openjpa.lib.conf.ProductDerivations.addAll(Collection,String,Collection)",8,21
org.apache.openjpa.lib.conf.ProductDerivations.getSupportedQueryHints(),12,24
"org.apache.openjpa.lib.conf.ProductDerivations.ProductDerivationComparator.compare(ProductDerivation,ProductDerivation)",7,18
org.apache.openjpa.lib.conf.ProductDerivations.main(String[]),16,21
org.apache.openjpa.lib.conf.ProductDerivations.derivationErrorsToString(),12,43
org.apache.openjpa.persistence.query.AbsExpression.AbsExpression(ExpressionImpl),6,8
org.apache.openjpa.jdbc.meta.JDBCOrder.isInRelation(),7,7
"org.apache.openjpa.jdbc.meta.JDBCOrder.order(Select,ClassMapping,Joins)",10,14
org.apache.openjpa.jdbc.meta.JDBCOrder.getIdentifier(),1,2
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.AbstractExpressionBuilder(ExpressionFactory,Resolver)",11,23
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getClassLoader(),7,9
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.parseException(int,String,Object[],Exception)",24,53
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.addAccessPath(ClassMetaData),9,19
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getAccessPath(),8,18
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.isBound(Value),6,11
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.bind(Value),10,17
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getVariable(String,boolean)",10,15
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.createVariable(String,boolean)",27,73
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.assertUnboundVariablesValid(),27,47
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.isDeclaredVariable(String),18,22
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.isSeenVariable(String),6,10
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getMetaData(Class<>,boolean)",8,13
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getMetaData(Class<>,boolean,ClassLoader)",12,21
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.traversePath(Path,String)",5,14
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.traverseXPath(Path,String)",24,58
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.traversePath(Path,String,boolean,boolean)",42,139
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.traverseStaticField(Class<>,String)",11,17
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.isMultiValuedTraversalAttempt(Path,String)",12,26
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getDeclaredVariableType(String),7,10
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.setImplicitTypes(Value,Value,Class<>)",12,24
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.setImplicitTypes(Value,Value,Class<>,Resolver)",26,93
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.convertTypes(Value,Value)",30,122
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.convertTypesQuotedNumbers(Value,Value)",26,141
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.isNumeric(Class<>),7,14
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.setImplicitContainsTypes(Value,Value,int)",24,104
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.setImplicitType(Value,Class<>)",10,23
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getLocalizer(),6,8
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.currentQuery(),3,3
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.addSchemaToContext(String,ClassMetaData)",12,19
"org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.addVariableToContext(String,Value)",14,18
org.apache.openjpa.kernel.exps.AbstractExpressionBuilder.getVariable(String),8,9
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.setUp(),14,17
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.tearDown(),6,11
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.testOldStylePersistenceUnitConfiguration(),24,46
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.testNewStylePersistenceUnitConfiguration(),24,46
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.testMixedStylePersistenceUnitConfiguration(),26,49
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.testConflictStylePersistenceUnitConfiguration(),16,22
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.testNewStyleSystemPropertyConfiguration(),28,73
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.testOldStyleSystemPropertyConfiguration(),28,73
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.testMixedStyleSystemPropertyConfiguration(),30,75
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.testConflictStyleSystemPropertyConfiguration(),28,55
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.testOldStyleRuntimePropertyConfiguration(),28,65
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.testNewStyleRuntimePropertyConfiguration(),28,65
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.testMixedStyleRuntimePropertyConfiguration(),30,67
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.testConflictStyleRuntimePropertyConfiguration(),27,47
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.verifyDatabaseConnection(),18,24
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.containsProperty(String),6,9
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.getConfiguration(),9,13
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.backup(),8,16
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.clear(Properties),6,9
org.apache.openjpa.lib.conf.TestEquivalentConfiguration.restore(Properties),8,13
org.apache.openjpa.persistence.access.DefPropMixedFieldAccess.setId(int),1,1
org.apache.openjpa.persistence.access.DefPropMixedFieldAccess.getId(),0,0
org.apache.openjpa.persistence.access.DefPropMixedFieldAccess.setVersion(int),2,5
org.apache.openjpa.persistence.access.DefPropMixedFieldAccess.getVersion(),1,2
org.apache.openjpa.persistence.access.DefPropMixedFieldAccess.setStrProp(String),6,8
org.apache.openjpa.persistence.access.DefPropMixedFieldAccess.getStrProp(),4,5
org.apache.openjpa.persistence.access.DefPropMixedFieldAccess.equals(Object),10,28
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.ReverseMappingToolTask(),11,13
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setPackage(String),7,10
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setDirectory(String),8,14
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setUseSchemaName(boolean),6,15
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setUseSchemaElement(boolean),7,15
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setUseForeignKeyName(boolean),7,20
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setNullableAsObject(boolean),8,16
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setBlobAsObject(boolean),9,17
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setUseGenericCollections(boolean),7,17
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setTypeMap(String),6,15
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setPrimaryKeyOnJoin(boolean),8,20
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setUseDataStoreIdentity(boolean),6,17
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setUseBuiltinIdentityClass(boolean),6,14
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setInverseRelations(boolean),5,15
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setDetachable(boolean),5,10
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setDiscriminatorStrategy(String),9,15
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setVersionStrategy(String),8,15
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setInnerIdentityClasses(boolean),8,18
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setIdentityClassSuffix(String),9,17
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setMetadata(Level),8,14
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setGenerateAnnotations(boolean),8,15
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setAccessType(AccessType),11,23
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setCustomizerClass(String),3,8
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.setCustomizerProperties(String),6,15
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.createCodeFormat(),5,6
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.newConfiguration(),3,6
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.executeOn(String[]),45,131
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.Level.getValues(),3,4
org.apache.openjpa.jdbc.ant.ReverseMappingToolTask.AccessType.getValues(),4,5
org.apache.openjpa.ee.RegistryManagedRuntime.getTransactionManager(),14,26
org.apache.openjpa.ee.RegistryManagedRuntime.setRollbackOnly(Throwable),10,15
org.apache.openjpa.ee.RegistryManagedRuntime.getRollbackCause(),7,9
org.apache.openjpa.ee.RegistryManagedRuntime.setRegistryName(String),4,10
org.apache.openjpa.ee.RegistryManagedRuntime.getRegistryName(),3,5
org.apache.openjpa.ee.RegistryManagedRuntime.getTransactionKey(),5,8
org.apache.openjpa.ee.RegistryManagedRuntime.TransactionManagerRegistryFacade.TransactionManagerRegistryFacade(TransactionSynchronizationRegistry),5,10
org.apache.openjpa.ee.RegistryManagedRuntime.TransactionManagerRegistryFacade.getTransaction(),6,8
org.apache.openjpa.ee.RegistryManagedRuntime.TransactionManagerRegistryFacade.registerSynchronization(Synchronization),9,15
org.apache.openjpa.ee.RegistryManagedRuntime.TransactionManagerRegistryFacade.setRollbackOnly(),6,9
org.apache.openjpa.ee.RegistryManagedRuntime.TransactionManagerRegistryFacade.getStatus(),5,6
org.apache.openjpa.ee.RegistryManagedRuntime.TransactionManagerRegistryFacade.getTransactionKey(),4,6
org.apache.openjpa.ee.RegistryManagedRuntime.TransactionManagerRegistryFacade.begin(),4,7
org.apache.openjpa.ee.RegistryManagedRuntime.TransactionManagerRegistryFacade.commit(),8,17
org.apache.openjpa.ee.RegistryManagedRuntime.TransactionManagerRegistryFacade.resume(Transaction),7,12
org.apache.openjpa.ee.RegistryManagedRuntime.TransactionManagerRegistryFacade.rollback(),5,9
org.apache.openjpa.ee.RegistryManagedRuntime.TransactionManagerRegistryFacade.setTransactionTimeout(int),5,7
org.apache.openjpa.ee.RegistryManagedRuntime.TransactionManagerRegistryFacade.suspend(),4,6
"org.apache.openjpa.ee.RegistryManagedRuntime.TransactionManagerRegistryFacade.delistResource(XAResource,int)",7,11
org.apache.openjpa.ee.RegistryManagedRuntime.TransactionManagerRegistryFacade.enlistResource(XAResource),7,12
org.apache.openjpa.ee.RegistryManagedRuntime.doNonTransactionalWork(Runnable),12,16
org.apache.openjpa.lib.identifier.IdentifierUtil.getIdentifierConfiguration(),3,6
org.apache.openjpa.lib.identifier.IdentifierUtil.setIdentifierConfiguration(IdentifierConfiguration),8,16
"org.apache.openjpa.lib.identifier.IdentifierUtil.delimit(String,String)",9,20
"org.apache.openjpa.lib.identifier.IdentifierUtil.delimit(IdentifierRule,String)",10,21
"org.apache.openjpa.lib.identifier.IdentifierUtil.delimit(String,String,boolean)",14,34
"org.apache.openjpa.lib.identifier.IdentifierUtil.delimit(IdentifierRule,String,boolean)",15,35
"org.apache.openjpa.lib.identifier.IdentifierUtil.removeDelimiters(String,String)",8,20
"org.apache.openjpa.lib.identifier.IdentifierUtil.removeDelimiters(IdentifierConfiguration,String,String)",11,23
"org.apache.openjpa.lib.identifier.IdentifierUtil.removeDelimiters(IdentifierRule,String)",9,21
"org.apache.openjpa.lib.identifier.IdentifierUtil.isDelimited(String,String)",9,17
"org.apache.openjpa.lib.identifier.IdentifierUtil.isDelimited(IdentifierRule,String)",10,18
"org.apache.openjpa.lib.identifier.IdentifierUtil.requiresDelimiters(String,String)",19,30
"org.apache.openjpa.lib.identifier.IdentifierUtil.requiresDelimiters(IdentifierRule,String)",20,31
"org.apache.openjpa.lib.identifier.IdentifierUtil.combineNames(String,String[],String[])",12,18
"org.apache.openjpa.lib.identifier.IdentifierUtil.combineNames(IdentifierRule,IdentifierRule[],String[])",13,20
"org.apache.openjpa.lib.identifier.IdentifierUtil.combineNames(String,String[])",12,17
"org.apache.openjpa.lib.identifier.IdentifierUtil.combineNames(IdentifierRule,String[])",13,18
"org.apache.openjpa.lib.identifier.IdentifierUtil.combineNames(String,String,String)",11,16
"org.apache.openjpa.lib.identifier.IdentifierUtil.combineNames(IdentifierRule,String,String)",12,17
"org.apache.openjpa.lib.identifier.IdentifierUtil.joinNames(String[],String[])",11,17
"org.apache.openjpa.lib.identifier.IdentifierUtil.joinNames(IdentifierRule[],String[])",13,18
"org.apache.openjpa.lib.identifier.IdentifierUtil.joinNames(String,String[])",12,17
"org.apache.openjpa.lib.identifier.IdentifierUtil.joinNames(IdentifierRule,String[])",13,18
"org.apache.openjpa.lib.identifier.IdentifierUtil.joinNames(IdentifierRule,String[],String)",12,19
"org.apache.openjpa.lib.identifier.IdentifierUtil.joinNames(String,String[],String)",11,18
"org.apache.openjpa.lib.identifier.IdentifierUtil.splitName(String,String)",16,27
"org.apache.openjpa.lib.identifier.IdentifierUtil.splitName(IdentifierRule,String)",17,28
"org.apache.openjpa.lib.identifier.IdentifierUtil.splitName(String,String,String)",17,30
"org.apache.openjpa.lib.identifier.IdentifierUtil.splitName(IdentifierRule,String,String)",18,31
"org.apache.openjpa.lib.identifier.IdentifierUtil.isReservedWord(String,String)",7,11
"org.apache.openjpa.lib.identifier.IdentifierUtil.isReservedWord(IdentifierRule,String)",8,12
"org.apache.openjpa.lib.identifier.IdentifierUtil.convert(IdentifierConfiguration,String,String)",10,17
"org.apache.openjpa.lib.identifier.IdentifierUtil.truncateName(String,String,int)",8,12
"org.apache.openjpa.lib.identifier.IdentifierUtil.truncateName(IdentifierRule,String,int)",9,13
"org.apache.openjpa.lib.identifier.IdentifierUtil.appendNames(IdentifierRule,String,String)",8,14
"org.apache.openjpa.lib.identifier.IdentifierUtil.appendNames(String,String,String)",7,13
"org.apache.openjpa.lib.identifier.IdentifierUtil.convertFull(IdentifierConfiguration,String,String)",16,23
"org.apache.openjpa.lib.identifier.IdentifierUtil.removeHungarianNotation(String,String)",8,13
"org.apache.openjpa.lib.identifier.IdentifierUtil.removeHungarianNotation(IdentifierRule,String)",9,14
"org.apache.openjpa.lib.identifier.IdentifierUtil.canSplit(String,String)",7,10
"org.apache.openjpa.lib.identifier.IdentifierUtil.canSplit(IdentifierRule,String)",8,11
"org.apache.openjpa.lib.identifier.IdentifierUtil.canSplit(String,String,String)",12,16
"org.apache.openjpa.lib.identifier.IdentifierUtil.canSplit(IdentifierRule,String,String)",13,17
org.apache.openjpa.trader.client.ui.ProgressMonitor.ProgressMonitor(),32,73
org.apache.openjpa.trader.client.ui.ProgressMonitor.showProgress(String),12,16
org.apache.openjpa.trader.client.ui.ProgressMonitor.stop(),5,6
org.apache.openjpa.trader.client.ui.ProgressMonitor.run(),12,30
org.apache.openjpa.jdbc.meta.MappingDefaults.defaultMissingInfo(),11,15
org.apache.openjpa.jdbc.meta.MappingDefaults.useClassCriteria(),6,7
"org.apache.openjpa.jdbc.meta.MappingDefaults.getStrategy(ClassMapping,boolean)",17,29
"org.apache.openjpa.jdbc.meta.MappingDefaults.getStrategy(Version,boolean)",16,28
"org.apache.openjpa.jdbc.meta.MappingDefaults.getStrategy(Discriminator,boolean)",16,28
"org.apache.openjpa.jdbc.meta.MappingDefaults.getStrategy(ValueMapping,Class<>,boolean)",20,34
"org.apache.openjpa.jdbc.meta.MappingDefaults.getDiscriminatorValue(Discriminator,boolean)",6,9
"org.apache.openjpa.jdbc.meta.MappingDefaults.getTableName(ClassMapping,Schema)",12,16
"org.apache.openjpa.jdbc.meta.MappingDefaults.getTableIdentifier(ClassMapping,Schema)",11,15
"org.apache.openjpa.jdbc.meta.MappingDefaults.getTableName(FieldMapping,Schema)",13,19
"org.apache.openjpa.jdbc.meta.MappingDefaults.getTableIdentifier(FieldMapping,Schema)",12,18
"org.apache.openjpa.jdbc.meta.MappingDefaults.populateDataStoreIdColumns(ClassMapping,Table,Column[])",20,23
"org.apache.openjpa.jdbc.meta.MappingDefaults.populateColumns(Version,Table,Column[])",16,20
"org.apache.openjpa.jdbc.meta.MappingDefaults.populateColumns(Discriminator,Table,Column[])",16,20
"org.apache.openjpa.jdbc.meta.MappingDefaults.populateJoinColumn(ClassMapping,Table,Table,Column,Object,int,int)",27,51
"org.apache.openjpa.jdbc.meta.MappingDefaults.populateJoinColumn(FieldMapping,Table,Table,Column,Object,int,int)",28,53
"org.apache.openjpa.jdbc.meta.MappingDefaults.populateForeignKeyColumn(ValueMapping,String,Table,Table,Column,Object,boolean,int,int)",32,70
"org.apache.openjpa.jdbc.meta.MappingDefaults.populateForeignKeyColumn(ValueMapping,DBIdentifier,Table,Table,Column,Object,boolean,int,int)",31,69
"org.apache.openjpa.jdbc.meta.MappingDefaults.populateColumns(ValueMapping,String,Table,Column[])",21,30
"org.apache.openjpa.jdbc.meta.MappingDefaults.populateColumns(ValueMapping,DBIdentifier,Table,Column[])",20,29
"org.apache.openjpa.jdbc.meta.MappingDefaults.populateOrderColumns(FieldMapping,Table,Column[])",19,26
"org.apache.openjpa.jdbc.meta.MappingDefaults.populateNullIndicatorColumns(ValueMapping,String,Table,Column[])",25,40
"org.apache.openjpa.jdbc.meta.MappingDefaults.populateNullIndicatorColumns(ValueMapping,DBIdentifier,Table,Column[])",24,39
"org.apache.openjpa.jdbc.meta.MappingDefaults.getJoinForeignKey(ClassMapping,Table,Table)",17,32
"org.apache.openjpa.jdbc.meta.MappingDefaults.getJoinForeignKey(FieldMapping,Table,Table)",18,33
"org.apache.openjpa.jdbc.meta.MappingDefaults.getForeignKey(ValueMapping,String,Table,Table,boolean)",24,46
"org.apache.openjpa.jdbc.meta.MappingDefaults.getForeignKey(ValueMapping,DBIdentifier,Table,Table,boolean)",23,45
"org.apache.openjpa.jdbc.meta.MappingDefaults.getJoinIndex(FieldMapping,Table,Column[])",15,25
"org.apache.openjpa.jdbc.meta.MappingDefaults.getIndex(ValueMapping,String,Table,Column[])",19,34
"org.apache.openjpa.jdbc.meta.MappingDefaults.getIndex(ValueMapping,DBIdentifier,Table,Column[])",18,33
"org.apache.openjpa.jdbc.meta.MappingDefaults.getIndex(Version,Table,Column[])",14,24
"org.apache.openjpa.jdbc.meta.MappingDefaults.getIndex(Discriminator,Table,Column[])",14,24
"org.apache.openjpa.jdbc.meta.MappingDefaults.getJoinUnique(FieldMapping,Table,Column[])",16,25
"org.apache.openjpa.jdbc.meta.MappingDefaults.getUnique(ValueMapping,String,Table,Column[])",20,34
"org.apache.openjpa.jdbc.meta.MappingDefaults.getUnique(ValueMapping,DBIdentifier,Table,Column[])",19,33
"org.apache.openjpa.jdbc.meta.MappingDefaults.getPrimaryKeyName(ClassMapping,Table)",8,13
"org.apache.openjpa.jdbc.meta.MappingDefaults.getPrimaryKeyIdentifier(ClassMapping,Table)",7,12
"org.apache.openjpa.jdbc.meta.MappingDefaults.installPrimaryKey(FieldMapping,Table)",8,13
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.setDataCache(DataCache),3,5
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.setDataCacheManager(DataCacheManager),5,10
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.setConfigId(String),4,6
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.setContextRef(String),6,8
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getHitCount(),5,11
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getReadCount(),5,11
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getTotalHitCount(),6,13
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getTotalReadCount(),6,13
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getTotalWriteCount(),6,13
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getWriteCount(),5,11
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.reset(),4,8
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.sinceDate(),4,8
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.startDate(),5,10
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getConfigId(),2,3
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getContextRef(),4,5
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getCacheName(),3,4
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getStatistics(),2,4
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getWriteCount(String),6,12
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getTotalWriteCount(String),7,14
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getTotalReadCount(String),7,14
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getTotalHitCount(String),7,14
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getReadCount(String),6,12
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getHitCount(String),6,12
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getLevel(),3,6
"org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.cache(String,boolean)",8,13
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.listKnownTypes(),5,7
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.collectStatistics(boolean),7,16
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getStatisticsEnabled(),5,12
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.getCacheStatistics(),4,6
org.apache.openjpa.instrumentation.AbstractDataCacheInstrument.clear(),0,0
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.JDBCStoreQuery(JDBCStore,ExpressionParser)",8,16
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getStore(),2,5
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getFilterListener(String),5,10
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.newCompilationKey(),9,16
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.supportsDataStoreExecution(),4,4
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getIndependentExpressionCandidates(ClassMetaData,boolean)",9,18
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getExpressionFactory(ClassMetaData),12,25
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.executeQuery(Executor,ClassMetaData,ClassMetaData[],boolean,ExpressionFactory[],QueryExpressions[],Object[],Range)",81,374
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.populateUnion(Union,ClassMapping[],boolean,ExpressionFactory[],QueryExpressions[],QueryExpressionsState[],ExpContext,boolean,int,long,long)",26,43
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.populateUnion(Union,ClassMapping[],boolean,ExpressionFactory[],QueryExpressions[],QueryExpressionsState[],ExpContext,boolean,int,long,long).$1.select(Select,int)",18,28
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.populateSelect(Select,ClassMapping,boolean,JDBCExpressionFactory,QueryExpressions,QueryExpressionsState,ExpContext,boolean,int,long,long)",35,74
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.executeUnion(Union,ClassMapping[],QueryExpressions[],QueryExpressionsState[],ExpContext,BitSet[])",25,57
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.executeSelect(Select,ClassMapping,QueryExpressions,QueryExpressionsState,ExpContext,BitSet,long,long)",24,54
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.createWhereSelects(List,ClassMapping[],List,boolean,BitSet,BitSet,ExpressionFactory[],QueryExpressions[],QueryExpressionsState[],ExpContext,int)",65,211
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getJoinedTableMeta(Select),14,44
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getVerticalMappings(ClassMapping,boolean,QueryExpressions,int)",25,53
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.addSubclasses(ClassMapping,Collection)",38,71
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.hasVerticalSubclasses(ClassMapping),9,18
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.calculateEagerMode(QueryExpressions,long,long)",25,52
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.executeDelete(Executor,ClassMetaData,ClassMetaData[],boolean,ExpressionFactory[],QueryExpressions[],Object[])",17,24
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.executeUpdate(Executor,ClassMetaData,ClassMetaData[],boolean,ExpressionFactory[],QueryExpressions[],Object[])",18,26
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.executeBulkOperation(ClassMetaData[],boolean,ExpressionFactory[],QueryExpressions[],Object[],Map)",82,253
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.isSingleTableMapping(ClassMapping,boolean)",44,90
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getTable(FieldMapping[],Table)",9,22
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getTable(FieldMapping,Table)",23,51
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.executeUpdate(ClassMetaData,ClassMetaData[],boolean,ExpressionFactory[],QueryExpressions[],Object[])",14,16
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getDataStoreActions(ClassMetaData,ClassMetaData[],boolean,ExpressionFactory[],QueryExpressions[],Object[],Range)",66,279
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.executeUpdate(Connection,PreparedStatement,SQLBuffer,boolean)",17,25
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.prepareStatement(Connection,SQLBuffer)",14,23
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.evaluate(Object,Object,Object[],OpenJPAStateManager)",28,117
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.handleMathVal(Object,Object,Object[],OpenJPAStateManager)",26,123
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.handleConcatVal(Object,Object,Object[],OpenJPAStateManager)",17,55
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.handleSubstringVal(Object,Object,Object[],OpenJPAStateManager)",23,95
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.handleArgsVal(Object,Object,Object[],OpenJPAStateManager)",15,31
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.handleLowerVal(Object,Object,Object[],OpenJPAStateManager)",15,38
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.handleUpperVal(Object,Object,Object[],OpenJPAStateManager)",15,38
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.handleLengthVal(Object,Object,Object[],OpenJPAStateManager)",17,42
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.handleTrimVal(Object,Object,Object[],OpenJPAStateManager)",19,81
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.trimLeading(String,char)",9,20
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.trimTrailing(String,char)",8,17
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.handleIndexOfVal(Object,Object,Object[],OpenJPAStateManager)",18,61
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.handleAbsVal(Object,Object,Object[],OpenJPAStateManager)",20,69
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.handleSqrtVal(Object,Object,Object[],OpenJPAStateManager)",20,68
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getValue(Object,Object,Object[],OpenJPAStateManager)",11,32
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getValue(Object,FieldMapping,OpenJPAStateManager)",23,101
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.ThreadLocalContext.initialValue(),3,3
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getThreadLocalContext(),3,6
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getThreadLocalContext(Context),7,21
org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getThreadLocalSelect(Select),11,33
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.getThreadLocalContext(Context,Context)",12,38
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.clone(Context[],Context)",6,18
"org.apache.openjpa.jdbc.kernel.JDBCStoreQuery.clone(Context,Context)",21,88
org.apache.openjpa.jdbc.kernel.exps.Sum.Sum(Val),6,8
org.apache.openjpa.jdbc.kernel.exps.Sum.getType(Class),4,8
org.apache.openjpa.jdbc.kernel.exps.Sum.getOperator(),3,3
org.apache.openjpa.jdbc.kernel.exps.Sum.isAggregate(),1,1
"org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays.toObjectValue(ValueMapping,char[])",11,32
org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays.toCharArray(Object),8,15
"org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays.toObjectValue(ValueMapping,byte[])",10,28
org.apache.openjpa.jdbc.meta.strats.PrimitiveWrapperArrays.toByteArray(Object),7,12
org.apache.openjpa.util.OptimisticException.OptimisticException(Message),4,5
org.apache.openjpa.util.OptimisticException.OptimisticException(Object),10,14
org.apache.openjpa.util.OptimisticException.OptimisticException(Throwable[]),9,12
"org.apache.openjpa.util.OptimisticException.OptimisticException(Collection,Throwable[])",14,17
org.apache.openjpa.util.OptimisticException.getSubtype(),2,2
jpa.tools.swing.RoundButton.RoundButton(),2,2
jpa.tools.swing.RoundButton.RoundButton(Icon),3,5
jpa.tools.swing.RoundButton.RoundButton(String),4,5
jpa.tools.swing.RoundButton.RoundButton(Action),4,5
"jpa.tools.swing.RoundButton.RoundButton(String,Icon)",33,61
jpa.tools.swing.RoundButton.initShape(),11,14
jpa.tools.swing.RoundButton.paintBorder(Graphics),16,34
"jpa.tools.swing.RoundButton.contains(int,int)",3,5
org.apache.openjpa.kernel.DelegatingQuery.DelegatingQuery(Query),5,8
"org.apache.openjpa.kernel.DelegatingQuery.DelegatingQuery(Query,RuntimeExceptionTranslator)",10,25
org.apache.openjpa.kernel.DelegatingQuery.getDelegate(),3,5
org.apache.openjpa.kernel.DelegatingQuery.getInnermostDelegate(),4,9
org.apache.openjpa.kernel.DelegatingQuery.hashCode(),4,6
org.apache.openjpa.kernel.DelegatingQuery.equals(Object),6,11
org.apache.openjpa.kernel.DelegatingQuery.translate(RuntimeException),5,11
org.apache.openjpa.kernel.DelegatingQuery.getBroker(),5,7
org.apache.openjpa.kernel.DelegatingQuery.getQuery(),1,2
org.apache.openjpa.kernel.DelegatingQuery.getStoreContext(),6,10
org.apache.openjpa.kernel.DelegatingQuery.getOperation(),5,6
org.apache.openjpa.kernel.DelegatingQuery.getLanguage(),6,7
org.apache.openjpa.kernel.DelegatingQuery.getFetchConfiguration(),6,10
org.apache.openjpa.kernel.DelegatingQuery.getQueryString(),5,9
org.apache.openjpa.kernel.DelegatingQuery.getIgnoreChanges(),6,8
org.apache.openjpa.kernel.DelegatingQuery.getCompilation(),6,7
org.apache.openjpa.kernel.DelegatingQuery.getAlias(),6,7
org.apache.openjpa.kernel.DelegatingQuery.getProjectionAliases(),7,9
org.apache.openjpa.kernel.DelegatingQuery.getProjectionTypes(),6,8
org.apache.openjpa.kernel.DelegatingQuery.isAggregate(),5,6
org.apache.openjpa.kernel.DelegatingQuery.hasGrouping(),4,4
org.apache.openjpa.kernel.DelegatingQuery.getAccessPathMetaDatas(),9,14
org.apache.openjpa.kernel.DelegatingQuery.getFilterListener(String),8,13
org.apache.openjpa.kernel.DelegatingQuery.getAggregateListener(String),8,13
org.apache.openjpa.kernel.DelegatingQuery.getFilterListeners(),7,9
org.apache.openjpa.kernel.DelegatingQuery.getAggregateListeners(),7,9
org.apache.openjpa.kernel.DelegatingQuery.getCandidateCollection(),6,9
org.apache.openjpa.kernel.DelegatingQuery.getCandidateType(),6,8
org.apache.openjpa.kernel.DelegatingQuery.hasSubclasses(),5,6
"org.apache.openjpa.kernel.DelegatingQuery.setCandidateType(Class,boolean)",9,14
org.apache.openjpa.kernel.DelegatingQuery.isReadOnly(),5,6
org.apache.openjpa.kernel.DelegatingQuery.setReadOnly(boolean),6,10
org.apache.openjpa.kernel.DelegatingQuery.getResultMappingScope(),7,10
org.apache.openjpa.kernel.DelegatingQuery.getResultMappingName(),8,11
"org.apache.openjpa.kernel.DelegatingQuery.setResultMapping(Class,String)",10,15
org.apache.openjpa.kernel.DelegatingQuery.isUnique(),5,6
org.apache.openjpa.kernel.DelegatingQuery.setUnique(boolean),6,10
org.apache.openjpa.kernel.DelegatingQuery.isDistinct(),5,6
org.apache.openjpa.kernel.DelegatingQuery.getResultType(),6,8
org.apache.openjpa.kernel.DelegatingQuery.setResultType(Class),8,12
org.apache.openjpa.kernel.DelegatingQuery.getStartRange(),6,8
org.apache.openjpa.kernel.DelegatingQuery.getEndRange(),5,6
"org.apache.openjpa.kernel.DelegatingQuery.setRange(long,long)",7,10
org.apache.openjpa.kernel.DelegatingQuery.getParameterDeclaration(),7,9
org.apache.openjpa.kernel.DelegatingQuery.getOrderedParameterTypes(),8,10
org.apache.openjpa.kernel.DelegatingQuery.getParameterTypes(),8,10
org.apache.openjpa.kernel.DelegatingQuery.getUpdates(),6,7
org.apache.openjpa.kernel.DelegatingQuery.declareParameters(String),8,11
"org.apache.openjpa.kernel.DelegatingQuery.deleteInMemory(StoreQuery,StoreQuery.Executor,Object[])",10,16
"org.apache.openjpa.kernel.DelegatingQuery.updateInMemory(StoreQuery,StoreQuery.Executor,Object[])",10,16
"org.apache.openjpa.kernel.DelegatingQuery.classForName(String,String[])",7,12
org.apache.openjpa.kernel.DelegatingQuery.lock(),5,6
org.apache.openjpa.kernel.DelegatingQuery.unlock(),5,6
org.apache.openjpa.kernel.DelegatingQuery.addFilterListener(FilterListener),7,14
org.apache.openjpa.kernel.DelegatingQuery.removeFilterListener(FilterListener),7,14
org.apache.openjpa.kernel.DelegatingQuery.addAggregateListener(AggregateListener),7,14
org.apache.openjpa.kernel.DelegatingQuery.removeAggregateListener(AggregateListener),7,14
org.apache.openjpa.kernel.DelegatingQuery.getCandidateExtent(),6,9
org.apache.openjpa.kernel.DelegatingQuery.setCandidateExtent(Extent),7,13
org.apache.openjpa.kernel.DelegatingQuery.setCandidateCollection(Collection),8,13
org.apache.openjpa.kernel.DelegatingQuery.compile(),5,6
org.apache.openjpa.kernel.DelegatingQuery.execute(),6,7
org.apache.openjpa.kernel.DelegatingQuery.execute(Map),8,10
org.apache.openjpa.kernel.DelegatingQuery.execute(Object[]),7,10
org.apache.openjpa.kernel.DelegatingQuery.deleteAll(),5,6
org.apache.openjpa.kernel.DelegatingQuery.deleteAll(Object[]),7,9
org.apache.openjpa.kernel.DelegatingQuery.deleteAll(Map),7,11
org.apache.openjpa.kernel.DelegatingQuery.updateAll(),5,6
org.apache.openjpa.kernel.DelegatingQuery.updateAll(Object[]),7,9
org.apache.openjpa.kernel.DelegatingQuery.updateAll(Map),7,11
org.apache.openjpa.kernel.DelegatingQuery.closeAll(),5,6
org.apache.openjpa.kernel.DelegatingQuery.closeResources(),6,8
org.apache.openjpa.kernel.DelegatingQuery.getDataStoreActions(Map),10,14
org.apache.openjpa.kernel.DelegatingQuery.setQuery(Object),6,11
org.apache.openjpa.kernel.DelegatingQuery.setIgnoreChanges(boolean),7,12
org.apache.openjpa.kernel.DelegatingQuery.assertOpen(),4,4
org.apache.openjpa.kernel.DelegatingQuery.assertNotReadOnly(),5,6
org.apache.openjpa.kernel.DelegatingQuery.assertNotSerialized(),5,6
openbook.server.QueryParameterBinder.QueryParameterBinder(Object),8,13
openbook.server.QueryParameterBinder.decorate(Query),14,32
org.apache.openjpa.lib.identifier.Identifier.getName(),2,2
org.apache.openjpa.lib.identifier.Identifier.setName(String),3,4
org.apache.openjpa.lib.identifier.Identifier.length(),1,1
org.apache.openjpa.lib.rop.LazyForwardResultList.LazyForwardResultList(ResultObjectProvider),12,20
org.apache.openjpa.lib.rop.LazyForwardResultList.isProviderOpen(),1,1
org.apache.openjpa.lib.rop.LazyForwardResultList.isClosed(),1,2
org.apache.openjpa.lib.rop.LazyForwardResultList.close(),3,4
org.apache.openjpa.lib.rop.LazyForwardResultList.get(int),8,15
org.apache.openjpa.lib.rop.LazyForwardResultList.itr(int),4,10
org.apache.openjpa.lib.rop.LazyForwardResultList.size(),8,18
org.apache.openjpa.lib.rop.LazyForwardResultList.addNext(),11,17
org.apache.openjpa.lib.rop.LazyForwardResultList.free(),5,5
org.apache.openjpa.lib.rop.LazyForwardResultList.writeReplace(),11,16
org.apache.openjpa.lib.rop.LazyForwardResultList.hashCode(),10,12
org.apache.openjpa.lib.rop.LazyForwardResultList.equals(Object),8,8
"org.apache.openjpa.lib.rop.LazyForwardResultList.subList(int,int)",3,10
org.apache.openjpa.lib.rop.LazyForwardResultList.Itr.Itr(int),7,10
org.apache.openjpa.lib.rop.LazyForwardResultList.Itr.nextIndex(),2,2
org.apache.openjpa.lib.rop.LazyForwardResultList.Itr.previousIndex(),3,3
org.apache.openjpa.lib.rop.LazyForwardResultList.Itr.hasNext(),4,4
org.apache.openjpa.lib.rop.LazyForwardResultList.Itr.hasPrevious(),2,2
org.apache.openjpa.lib.rop.LazyForwardResultList.Itr.previous(),6,7
org.apache.openjpa.lib.rop.LazyForwardResultList.Itr.next(),5,5
org.apache.openjpa.integration.validation.Customer.setShippingAddress(IAddress),3,11
org.apache.openjpa.integration.validation.Customer.getShippingAddress(),2,5
org.apache.openjpa.integration.validation.Customer.setBillingAddress(IAddress),3,11
org.apache.openjpa.integration.validation.Customer.getBillingAddress(),2,5
"org.apache.openjpa.trader.client.TradingWindow.TradingWindow(OpenTrader,int,int)",33,124
"org.apache.openjpa.trader.client.TradingWindow.TradingWindow(OpenTrader,int,int).$1.render(Tradable)",7,8
"org.apache.openjpa.trader.client.TradingWindow.TradingWindow(OpenTrader,int,int).$2.render(Tradable)",9,12
"org.apache.openjpa.trader.client.TradingWindow.TradingWindow(OpenTrader,int,int).$3.render(Tradable)",7,10
"org.apache.openjpa.trader.client.TradingWindow.TradingWindow(OpenTrader,int,int).$4.render(Tradable)",7,10
"org.apache.openjpa.trader.client.TradingWindow.TradingWindow(OpenTrader,int,int).$5.render(Tradable)",7,8
"org.apache.openjpa.trader.client.TradingWindow.TradingWindow(OpenTrader,int,int).$6.render(Tradable)",13,18
"org.apache.openjpa.trader.client.TradingWindow.TradingWindow(OpenTrader,int,int).$7.render(Tradable)",9,14
org.apache.openjpa.trader.client.TradingWindow.startTradableRefresher(),18,29
org.apache.openjpa.trader.client.TradingWindow.startTradableRefresher().$8.run(),8,10
org.apache.openjpa.trader.client.TradingWindow.stopTradableRefresher(),6,10
org.apache.openjpa.trader.client.TradingWindow.onTradableAdded(ServiceEvent.TradableAdded),6,10
org.apache.openjpa.trader.client.TradingWindow.onTradableRemoved(ServiceEvent.TradableRemoved),6,10
org.apache.openjpa.trader.client.TradingWindow.onStockUpdated(ServiceEvent.StockUpdated),11,25
org.apache.openjpa.trader.client.TradingWindow.WithdrawCallback.WithdrawCallback(Tradable),4,6
org.apache.openjpa.trader.client.TradingWindow.WithdrawCallback.onFailure(Throwable),6,7
org.apache.openjpa.trader.client.TradingWindow.WithdrawCallback.onSuccess(Tradable),8,11
org.apache.openjpa.trader.client.TradingWindow.WithdrawCallback.onClick(ClickEvent),6,8
org.apache.openjpa.trader.client.TradingWindow.MatchCallback.MatchCallback(Tradable),3,6
org.apache.openjpa.trader.client.TradingWindow.MatchCallback.onFailure(Throwable),6,7
org.apache.openjpa.trader.client.TradingWindow.MatchCallback.onSuccess(List<Match>),8,10
org.apache.openjpa.trader.client.TradingWindow.MatchCallback.onClick(ClickEvent),7,15
org.apache.openjpa.trader.client.TradingWindow.RefreshTradableCallback.onSuccess(Tradable),11,16
org.apache.openjpa.trader.client.TradingWindow.RefreshTradableCallback.onFailure(Throwable),5,5
org.apache.openjpa.persistence.access.xml.XMLPropMixedEntity.setId(int),2,3
org.apache.openjpa.persistence.access.xml.XMLPropMixedEntity.getId(),1,1
org.apache.openjpa.persistence.access.xml.XMLPropMixedEntity.setName(String),3,6
org.apache.openjpa.persistence.access.xml.XMLPropMixedEntity.getName(),4,5
org.apache.openjpa.persistence.access.xml.XMLPropMixedEntity.getEmbedProp(),6,7
org.apache.openjpa.persistence.access.xml.XMLPropMixedEntity.setEmbedProp(XMLEmbedMixedAccess),7,9
org.apache.openjpa.persistence.access.xml.XMLPropMixedEntity.equals(Object),9,25
org.apache.openjpa.persistence.access.xml.XMLPropMixedEntity.setIdval(int),2,5
org.apache.openjpa.persistence.access.xml.XMLPropMixedEntity.getIdval(),1,2
org.apache.openjpa.persistence.access.xml.XMLPropMixedEntity.setEma(XMLEmbedMixedAccess),6,9
org.apache.openjpa.persistence.access.xml.XMLPropMixedEntity.getEma(),5,6
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.getInternal(int),9,11
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.contains(Object),7,12
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.containsAll(Collection),4,8
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.get(int),7,11
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.indexOf(Object),7,12
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.lastIndexOf(Object),7,15
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.isEmpty(),3,3
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.iterator(),2,4
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.listIterator(),2,6
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.listIterator(int),5,10
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.toArray(),7,18
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.toArray(Object[]),7,19
"org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.subList(int,int)",6,8
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.Itr.Itr(int),3,4
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.Itr.nextIndex(),2,2
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.Itr.previousIndex(),3,3
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.Itr.hasNext(),3,3
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.Itr.hasPrevious(),2,2
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.Itr.previous(),6,7
org.apache.openjpa.lib.rop.AbstractNonSequentialResultList.Itr.next(),4,4
"org.apache.openjpa.jdbc.kernel.SQLProjectionResultObjectProvider.SQLProjectionResultObjectProvider(JDBCStore,JDBCFetchConfiguration,ResultSetResult,Class)",24,63
org.apache.openjpa.jdbc.kernel.SQLProjectionResultObjectProvider.supportsRandomAccess(),5,8
org.apache.openjpa.jdbc.kernel.SQLProjectionResultObjectProvider.open(),0,0
org.apache.openjpa.jdbc.kernel.SQLProjectionResultObjectProvider.getResultObject(),14,37
org.apache.openjpa.jdbc.kernel.SQLProjectionResultObjectProvider.next(),3,3
org.apache.openjpa.jdbc.kernel.SQLProjectionResultObjectProvider.absolute(int),5,7
org.apache.openjpa.jdbc.kernel.SQLProjectionResultObjectProvider.size(),14,18
org.apache.openjpa.jdbc.kernel.SQLProjectionResultObjectProvider.reset(),3,3
org.apache.openjpa.jdbc.kernel.SQLProjectionResultObjectProvider.close(),2,3
org.apache.openjpa.jdbc.kernel.SQLProjectionResultObjectProvider.handleCheckedException(Exception),7,15
"org.apache.openjpa.kernel.ECopyState.initialize(StateManagerImpl,PCState)",16,19
"org.apache.openjpa.kernel.ECopyState.beforeFlush(StateManagerImpl,boolean,OpCallbacks)",8,12
org.apache.openjpa.kernel.ECopyState.commit(StateManagerImpl),4,4
org.apache.openjpa.kernel.ECopyState.commitRetain(StateManagerImpl),6,6
org.apache.openjpa.kernel.ECopyState.rollback(StateManagerImpl),4,4
org.apache.openjpa.kernel.ECopyState.rollbackRestore(StateManagerImpl),6,6
org.apache.openjpa.kernel.ECopyState.delete(StateManagerImpl),6,8
org.apache.openjpa.kernel.ECopyState.nontransactional(StateManagerImpl),6,7
org.apache.openjpa.kernel.ECopyState.release(StateManagerImpl),4,4
org.apache.openjpa.kernel.ECopyState.isTransactional(),1,1
org.apache.openjpa.kernel.ECopyState.isPersistent(),1,1
org.apache.openjpa.kernel.ECopyState.isDirty(),1,1
org.apache.openjpa.kernel.ECopyState.toString(),3,4
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSchema(),4,5
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setSchema(String),5,7
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSchemas(),8,9
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setSchemas(String),9,11
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSchemasList(),6,6
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setSchemas(String[]),6,7
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getTransactionIsolation(),20,81
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setTransactionIsolation(String),21,83
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getTransactionIsolationConstant(),9,13
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setTransactionIsolation(int),10,15
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getResultSetType(),15,55
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getResultSetTypeConstant(),4,10
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setResultSetType(String),15,57
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setResultSetType(int),4,10
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getFetchDirection(),15,49
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getFetchDirectionConstant(),5,8
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setFetchDirection(String),15,51
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setFetchDirection(int),5,10
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getEagerFetchMode(),26,49
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setEagerFetchMode(String),27,51
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getEagerFetchModeConstant(),12,28
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setEagerFetchMode(int),12,32
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSubclassFetchMode(),20,37
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setSubclassFetchMode(String),21,39
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSubclassFetchModeConstant(),13,28
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setSubclassFetchMode(int),13,32
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getLRSSize(),26,47
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getLRSSizeConstant(),8,11
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setLRSSize(String),26,50
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setLRSSize(int),7,11
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSynchronizeMappings(),10,10
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setSynchronizeMappings(String),11,13
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getJDBCListeners(),11,14
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setJDBCListeners(String),12,17
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getJDBCListenerInstances(),4,8
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setJDBCListeners(JDBCListener[]),5,10
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getConnectionDecorators(),12,13
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setConnectionDecorators(String),13,15
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getConnectionDecoratorInstances(),4,8
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setConnectionDecorators(ConnectionDecorator[]),5,9
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getDBDictionary(),7,8
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setDBDictionary(String),9,10
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getDBDictionaryInstance(),3,5
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setDBDictionary(DBDictionary),4,6
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getUpdateManager(),7,9
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setUpdateManager(String),8,12
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getUpdateManagerInstance(),8,12
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setUpdateManager(UpdateManager),8,14
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getDriverDataSource(),7,15
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setDriverDataSource(String),8,19
org.apache.openjpa.jdbc.conf.JDBCConfiguration.newDriverDataSourceInstance(),8,20
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSchemaFactory(),9,13
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setSchemaFactory(String),10,16
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSchemaFactoryInstance(),5,10
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setSchemaFactory(SchemaFactory),5,12
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSQLFactory(),4,7
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSQLFactoryInstance(),4,9
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setSQLFactory(String),5,10
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setSQLFactory(SQLFactory),4,11
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getMappingFactory(),12,16
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setMappingFactory(String),13,19
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getMappingDefaults(),6,9
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setMappingDefaults(String),8,11
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getMappingDefaultsInstance(),5,9
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setMappingDefaults(MappingDefaults),6,10
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getMappingRepositoryInstance(),8,13
org.apache.openjpa.jdbc.conf.JDBCConfiguration.newMappingRepositoryInstance(),10,15
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getDataSource(StoreContext),29,55
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getDataSource2(StoreContext),20,46
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getIdentifierUtil(),8,15
org.apache.openjpa.jdbc.conf.JDBCConfiguration.getIdentifierUtilInstance(),4,10
org.apache.openjpa.jdbc.conf.JDBCConfiguration.setIdentifierUtil(DBIdentifierUtil),8,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.ContractEmployee.ContractEmployee(),2,2
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.ContractEmployee.ContractEmployee(int,String,int,int)",7,12
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.ContractEmployee.verifyTerm(),14,19
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.ContractEmployee.getDailyRate(),2,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.ContractEmployee.setDailyRate(int),3,9
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.ContractEmployee.getTerm(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.ContractEmployee.setTerm(int),2,5
org.apache.openjpa.conf.DetachOptions.getDetachState(),3,4
org.apache.openjpa.conf.DetachOptions.getDetachedStateField(),5,8
org.apache.openjpa.conf.DetachOptions.setDetachedStateField(boolean),8,13
org.apache.openjpa.conf.DetachOptions.setDetachedStateField(String),13,33
org.apache.openjpa.conf.DetachOptions.isDetachedStateTransient(),1,2
org.apache.openjpa.conf.DetachOptions.setDetachedStateTransient(boolean),3,5
org.apache.openjpa.conf.DetachOptions.getDetachedStateManager(),11,19
org.apache.openjpa.conf.DetachOptions.setDetachedStateManager(boolean),13,22
org.apache.openjpa.conf.DetachOptions.getAccessUnloaded(),9,13
org.apache.openjpa.conf.DetachOptions.setAccessUnloaded(boolean),11,16
org.apache.openjpa.conf.DetachOptions.setLiteAutoDetach(boolean),9,16
org.apache.openjpa.conf.DetachOptions.getLiteAutoDetach(),9,18
org.apache.openjpa.conf.DetachOptions.setDetachProxyFields(boolean),4,10
org.apache.openjpa.conf.DetachOptions.getDetachProxyFields(),8,18
org.apache.openjpa.conf.DetachOptions.Loaded.getDetachState(),2,3
org.apache.openjpa.conf.DetachOptions.FetchGroups.getDetachState(),2,3
org.apache.openjpa.conf.DetachOptions.All.getDetachState(),1,2
org.apache.openjpa.integration.validation.IPerson.getFirstName(),2,2
org.apache.openjpa.integration.validation.IPerson.setFirstName(String),3,4
org.apache.openjpa.integration.validation.IPerson.getLastName(),2,2
org.apache.openjpa.integration.validation.IPerson.setLastName(String),3,4
org.apache.openjpa.integration.validation.IPerson.getHomeAddress(),2,3
org.apache.openjpa.integration.validation.IPerson.setHomeAddress(IAddress),3,6
org.apache.openjpa.enhance.RedefinitionHelper.dirtyCheck(StateManager),7,19
"org.apache.openjpa.enhance.RedefinitionHelper.accessingField(Object,int)",13,23
"org.apache.openjpa.enhance.RedefinitionHelper.settingField(Object,int,boolean,boolean)",14,23
"org.apache.openjpa.enhance.RedefinitionHelper.settingField(Object,int,char,char)",14,23
"org.apache.openjpa.enhance.RedefinitionHelper.settingField(Object,int,byte,byte)",14,23
"org.apache.openjpa.enhance.RedefinitionHelper.settingField(Object,int,short,short)",14,23
"org.apache.openjpa.enhance.RedefinitionHelper.settingField(Object,int,int,int)",14,23
"org.apache.openjpa.enhance.RedefinitionHelper.settingField(Object,int,long,long)",14,23
"org.apache.openjpa.enhance.RedefinitionHelper.settingField(Object,int,float,float)",14,23
"org.apache.openjpa.enhance.RedefinitionHelper.settingField(Object,int,double,double)",14,23
"org.apache.openjpa.enhance.RedefinitionHelper.settingField(Object,int,String,String)",15,26
"org.apache.openjpa.enhance.RedefinitionHelper.settingField(Object,int,Object,Object)",14,26
org.apache.openjpa.enhance.RedefinitionHelper.assignLazyLoadProxies(StateManagerImpl),39,64
"org.apache.openjpa.enhance.RedefinitionHelper.newLazyLoadingProxy(Class,int,StateManagerImpl)",12,20
"org.apache.openjpa.enhance.RedefinitionHelper.newLazyLoadingProxy(Class,int,StateManagerImpl).$1.invoke(Object,Method,Object[])",20,30
org.apache.openjpa.jdbc.kernel.PessimisticLockManager.PessimisticLockManager(),9,13
org.apache.openjpa.jdbc.kernel.PessimisticLockManager.setContext(StoreContext),8,16
"org.apache.openjpa.jdbc.kernel.PessimisticLockManager.selectForUpdate(Select,int)",23,45
org.apache.openjpa.jdbc.kernel.PessimisticLockManager.loadedForUpdate(OpenJPAStateManager),18,28
"org.apache.openjpa.jdbc.kernel.PessimisticLockManager.lockInternal(OpenJPAStateManager,int,int,Object,boolean)",25,48
"org.apache.openjpa.jdbc.kernel.PessimisticLockManager.lockRow(OpenJPAStateManager,int,int)",65,162
"org.apache.openjpa.jdbc.kernel.PessimisticLockManager.getLockRows(DBDictionary,Object,ClassMapping,JDBCFetchConfiguration,SQLFactory)",23,58
"org.apache.openjpa.jdbc.kernel.PessimisticLockManager.lockJoinTables(List<SQLBuffer>,DBDictionary,Object,ClassMapping,JDBCFetchConfiguration,SQLFactory)",29,63
org.apache.openjpa.jdbc.kernel.PessimisticLockManager.ensureStoreManagerTransaction(),23,35
org.apache.openjpa.jdbc.kernel.PessimisticLockManager.getStore(),2,4
"org.apache.openjpa.jdbc.kernel.PessimisticLockManager.prepareStatement(Connection,SQLBuffer)",14,23
"org.apache.openjpa.jdbc.kernel.PessimisticLockManager.executeQuery(Connection,PreparedStatement,SQLBuffer)",18,25
"org.apache.openjpa.jdbc.kernel.PessimisticLockManager.checkLock(ResultSet,OpenJPAStateManager,int)",17,24
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.DateValidator.prePersist(Schedule),10,12
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.DateValidator.postPersist(Schedule),10,12
org.apache.openjpa.kernel.AbstractLockManager.setContext(StoreContext),8,15
org.apache.openjpa.kernel.AbstractLockManager.getContext(),3,4
"org.apache.openjpa.kernel.AbstractLockManager.lockAll(Collection,int,int,Object)",14,26
org.apache.openjpa.kernel.AbstractLockManager.beginTransaction(),2,2
org.apache.openjpa.kernel.AbstractLockManager.endTransaction(),1,1
org.apache.openjpa.kernel.AbstractLockManager.close(),1,1
org.apache.openjpa.kernel.AbstractLockManager.skipRelationFieldLock(),8,12
"org.apache.openjpa.jdbc.kernel.exps.CompareEqualExpression.CompareEqualExpression(Val,Val)",10,27
org.apache.openjpa.jdbc.kernel.exps.CompareEqualExpression.getValue1(),2,3
org.apache.openjpa.jdbc.kernel.exps.CompareEqualExpression.getValue2(),2,3
"org.apache.openjpa.jdbc.kernel.exps.CompareEqualExpression.initialize(Select,ExpContext,Map)",19,77
"org.apache.openjpa.jdbc.kernel.exps.CompareEqualExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",22,80
"org.apache.openjpa.jdbc.kernel.exps.CompareEqualExpression.selectColumns(Select,ExpContext,ExpState,boolean)",10,26
"org.apache.openjpa.jdbc.kernel.exps.CompareEqualExpression.appendTo(Select,ExpContext,BinaryOpExpState,SQLBuffer,boolean,boolean)",12,16
org.apache.openjpa.jdbc.kernel.exps.CompareEqualExpression.isDirectComparison(),13,16
org.apache.openjpa.jdbc.kernel.exps.CompareEqualExpression.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.jdbc.kernel.exps.Index.Index(Val),2,4
"org.apache.openjpa.jdbc.kernel.exps.Index.initialize(Select,ExpContext,int)",10,16
"org.apache.openjpa.jdbc.kernel.exps.Index.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",12,26
org.apache.openjpa.jdbc.kernel.exps.Index.getType(Class),1,1
org.apache.openjpa.jdbc.kernel.exps.Index.getOperator(),8,8
openbook.tools.CommandProcessor.setFrom(String[]),14,30
"openbook.tools.CommandProcessor.setFrom(String[],int,int)",31,79
openbook.tools.CommandProcessor.lastIndex(String[]),28,50
"openbook.tools.CommandProcessor.register(boolean,String)",16,36
openbook.tools.CommandProcessor.findCommand(String),21,68
openbook.tools.CommandProcessor.getUnregisteredCommands(),10,16
"openbook.tools.CommandProcessor.assertValidIndex(int,T[],String)",8,10
openbook.tools.CommandProcessor.getValue(String),8,19
openbook.tools.CommandProcessor.getValue(Option),8,21
openbook.tools.CommandProcessor.getAllowsUnregisteredOption(),3,9
openbook.tools.CommandProcessor.setAllowsUnregisteredOption(boolean),5,21
openbook.tools.CommandProcessor.Option.isValidName(String),10,17
openbook.tools.CommandProcessor.Option.Option(String),12,17
"openbook.tools.CommandProcessor.Option.Option(boolean,String)",25,52
openbook.tools.CommandProcessor.Option.getName(),4,5
openbook.tools.CommandProcessor.Option.setDefault(String),13,25
openbook.tools.CommandProcessor.Option.setDescription(String),5,8
openbook.tools.CommandProcessor.Option.getDescription(),2,3
openbook.tools.CommandProcessor.Option.match(String),8,14
openbook.tools.CommandProcessor.Option.requiresInput(),5,8
openbook.tools.CommandProcessor.Option.getDefaultValue(),5,9
openbook.tools.CommandProcessor.Option.toString(),2,3
"org.apache.openjpa.jdbc.kernel.exps.BindVariableExpression.BindVariableExpression(Variable,PCPath,boolean)",11,20
org.apache.openjpa.jdbc.kernel.exps.BindVariableExpression.getVariable(),2,3
"org.apache.openjpa.jdbc.kernel.exps.BindVariableExpression.initialize(Select,ExpContext,Map)",9,13
"org.apache.openjpa.jdbc.kernel.exps.BindVariableExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",9,12
"org.apache.openjpa.jdbc.kernel.exps.BindVariableExpression.selectColumns(Select,ExpContext,ExpState,boolean)",7,9
org.apache.openjpa.jdbc.kernel.exps.BindVariableExpression.acceptVisit(ExpressionVisitor),7,13
"org.apache.openjpa.kernel.exps.SimpleCase.SimpleCase(Val,Exp[],Val)",4,13
"org.apache.openjpa.kernel.exps.SimpleCase.eval(Object,Object,StoreContext,Object[])",17,50
"org.apache.openjpa.kernel.exps.SimpleCase.eval(Object,StoreContext,Object[])",16,44
"org.apache.openjpa.kernel.exps.SimpleCase.compare(Object,Object)",4,6
org.apache.openjpa.kernel.exps.SimpleCase.getType(),7,11
org.apache.openjpa.kernel.exps.SimpleCase.setImplicitType(Class),3,4
org.apache.openjpa.kernel.exps.SimpleCase.acceptVisit(ExpressionVisitor),10,23
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeUnspecified.getEntityManagerFactory(),19,42
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeUnspecified.getListener(),4,10
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeUnspecified.getSql(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeUnspecified.testCacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeUnspecified.testUncacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeUnspecified.testUnspecified(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeUnspecified.getExpectedInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeUnspecified.getExpectedNotInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeUnspecified.getCacheEnabled(),2,2
org.apache.openjpa.persistence.meta.AnnotationProcessor6.TypeCategory.TypeCategory(String),3,6
org.apache.openjpa.persistence.meta.AnnotationProcessor6.TypeCategory.getMetaModelType(),4,5
"org.apache.openjpa.persistence.meta.AnnotationProcessor6.toMetaModelTypeCategory(TypeMirror,String,boolean)",20,60
org.apache.openjpa.persistence.meta.AnnotationProcessor6.init(ProcessingEnvironment),33,53
"org.apache.openjpa.persistence.meta.AnnotationProcessor6.process(Set<>,RoundEnvironment)",12,27
org.apache.openjpa.persistence.meta.AnnotationProcessor6.process(TypeElement),60,284
"org.apache.openjpa.persistence.meta.AnnotationProcessor6.annotate(SourceCode,String)",17,38
org.apache.openjpa.persistence.meta.AnnotationProcessor6.comment(SourceCode),13,25
org.apache.openjpa.persistence.meta.AnnotationProcessor6.setSourceVersion(),26,48
org.apache.openjpa.persistence.meta.AnnotationProcessor6.setNamingPolicy(),19,35
org.apache.openjpa.persistence.meta.AnnotationProcessor6.setHeader(),19,39
"org.apache.openjpa.persistence.meta.AnnotationProcessor6.createSourceFile(String,String,TypeElement)",26,44
org.apache.openjpa.persistence.meta.AnnotationProcessor6.getOptionValue(String),14,28
org.apache.openjpa.trader.server.ExceptionAdapter.setPrintServerSideStackTrace(boolean),6,10
org.apache.openjpa.trader.server.ExceptionAdapter.translate(Throwable),12,27
org.apache.openjpa.trader.server.ExceptionAdapter.searchForKnownButNonTranslatableException(Throwable),7,15
org.apache.openjpa.trader.server.ExceptionAdapter.isAssignable(Class<>),7,9
"org.apache.openjpa.jdbc.kernel.exps.IndexOf.IndexOf(Val,Val)",6,13
org.apache.openjpa.jdbc.kernel.exps.IndexOf.getVal1(),1,3
org.apache.openjpa.jdbc.kernel.exps.IndexOf.getVal2(),1,3
org.apache.openjpa.jdbc.kernel.exps.IndexOf.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.IndexOf.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.IndexOf.getType(),2,3
org.apache.openjpa.jdbc.kernel.exps.IndexOf.setImplicitType(Class),4,6
"org.apache.openjpa.jdbc.kernel.exps.IndexOf.initialize(Select,ExpContext,int)",10,23
"org.apache.openjpa.jdbc.kernel.exps.IndexOf.select(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.IndexOf.selectColumns(Select,ExpContext,ExpState,boolean)",10,26
"org.apache.openjpa.jdbc.kernel.exps.IndexOf.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.IndexOf.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.IndexOf.newSQLBuffer(Select,ExpContext,ExpState)",13,27
"org.apache.openjpa.jdbc.kernel.exps.IndexOf.load(ExpContext,ExpState,Result)",15,19
"org.apache.openjpa.jdbc.kernel.exps.IndexOf.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",10,27
"org.apache.openjpa.jdbc.kernel.exps.IndexOf.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.IndexOf.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",23,64
org.apache.openjpa.jdbc.kernel.exps.IndexOf.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.jdbc.kernel.exps.IndexOf.getId(),2,3
org.apache.openjpa.kernel.PNewFlushedDeletedState.flush(StateManagerImpl),5,5
org.apache.openjpa.kernel.PNewFlushedDeletedState.commit(StateManagerImpl),4,4
org.apache.openjpa.kernel.PNewFlushedDeletedState.commitRetain(StateManagerImpl),5,5
org.apache.openjpa.kernel.PNewFlushedDeletedState.rollback(StateManagerImpl),4,4
org.apache.openjpa.kernel.PNewFlushedDeletedState.rollbackRestore(StateManagerImpl),6,8
org.apache.openjpa.kernel.PNewFlushedDeletedState.persist(StateManagerImpl),5,5
org.apache.openjpa.kernel.PNewFlushedDeletedState.nontransactional(StateManagerImpl),6,7
org.apache.openjpa.kernel.PNewFlushedDeletedState.release(StateManagerImpl),6,7
"org.apache.openjpa.kernel.PNewFlushedDeletedState.beforeWrite(StateManagerImpl,int,boolean)",8,9
"org.apache.openjpa.kernel.PNewFlushedDeletedState.beforeOptimisticWrite(StateManagerImpl,int,boolean)",9,10
org.apache.openjpa.kernel.PNewFlushedDeletedState.isTransactional(),1,1
org.apache.openjpa.kernel.PNewFlushedDeletedState.isPersistent(),1,1
org.apache.openjpa.kernel.PNewFlushedDeletedState.isNew(),0,0
org.apache.openjpa.kernel.PNewFlushedDeletedState.isDeleted(),1,1
org.apache.openjpa.kernel.PNewFlushedDeletedState.isDirty(),1,1
org.apache.openjpa.kernel.PNewFlushedDeletedState.toString(),4,5
org.apache.openjpa.meta.MetaDataDefaults.getDefaultAccessType(),8,13
org.apache.openjpa.meta.MetaDataDefaults.getDefaultIdentityType(),7,9
org.apache.openjpa.meta.MetaDataDefaults.getCallbackMode(),4,5
org.apache.openjpa.meta.MetaDataDefaults.getCallbacksBeforeListeners(int),6,9
org.apache.openjpa.meta.MetaDataDefaults.isDeclaredInterfacePersistent(),6,8
org.apache.openjpa.meta.MetaDataDefaults.isDataStoreObjectIdFieldUnwrapped(),16,20
org.apache.openjpa.meta.MetaDataDefaults.setIgnoreNonPersistent(boolean),6,9
"org.apache.openjpa.meta.MetaDataDefaults.populate(ClassMetaData,int)",10,16
"org.apache.openjpa.meta.MetaDataDefaults.populate(ClassMetaData,int,boolean)",11,17
org.apache.openjpa.meta.MetaDataDefaults.getBackingMember(FieldMetaData),4,6
"org.apache.openjpa.meta.MetaDataDefaults.getMemberByProperty(ClassMetaData,String,int,boolean)",22,42
org.apache.openjpa.meta.MetaDataDefaults.getUnimplementedExceptionType(),7,8
org.apache.openjpa.meta.MetaDataDefaults.isAbstractMappingUniDirectional(OpenJPAConfiguration),8,10
org.apache.openjpa.meta.MetaDataDefaults.isNonDefaultMappingAllowed(OpenJPAConfiguration),5,7
"org.apache.openjpa.jdbc.kernel.InstanceResultObjectProvider.InstanceResultObjectProvider(SelectExecutor,ClassMapping,JDBCStore,JDBCFetchConfiguration)",19,41
org.apache.openjpa.jdbc.kernel.InstanceResultObjectProvider.getResultObject(),15,35
org.apache.openjpa.persistence.query.Expression.member(PathExpression),17,34
org.apache.openjpa.persistence.query.Expression.isNull(),6,8
org.apache.openjpa.persistence.query.Expression.in(String),11,14
org.apache.openjpa.persistence.query.Expression.in(Number),10,13
org.apache.openjpa.persistence.query.Expression.in(Enum<>),10,13
org.apache.openjpa.persistence.query.Expression.in(Class),10,13
org.apache.openjpa.persistence.query.Expression.in(Expression),10,14
org.apache.openjpa.persistence.query.Expression.in(Subquery),9,14
org.apache.openjpa.persistence.query.Expression.length(),7,13
org.apache.openjpa.persistence.query.Expression.concat(String),13,25
org.apache.openjpa.persistence.query.Expression.concat(Expression),13,27
org.apache.openjpa.persistence.query.Expression.substring(int),15,24
org.apache.openjpa.persistence.query.Expression.substring(Expression),15,27
"org.apache.openjpa.persistence.query.Expression.substring(int,int)",16,26
"org.apache.openjpa.persistence.query.Expression.substring(int,Expression)",15,28
"org.apache.openjpa.persistence.query.Expression.substring(Expression,int)",15,28
"org.apache.openjpa.persistence.query.Expression.substring(Expression,Expression)",15,31
org.apache.openjpa.persistence.query.Expression.lower(),9,14
org.apache.openjpa.persistence.query.Expression.upper(),9,14
org.apache.openjpa.persistence.query.Expression.trim(),11,15
org.apache.openjpa.persistence.query.Expression.trim(TrimSpec),15,25
org.apache.openjpa.persistence.query.Expression.trim(char),13,20
"org.apache.openjpa.persistence.query.Expression.trim(char,TrimSpec)",17,31
org.apache.openjpa.persistence.query.Expression.trim(Expression),16,28
"org.apache.openjpa.persistence.query.Expression.trim(Expression,TrimSpec)",19,39
org.apache.openjpa.persistence.query.Expression.locate(String),15,35
org.apache.openjpa.persistence.query.Expression.locate(Expression),15,37
"org.apache.openjpa.persistence.query.Expression.locate(String,int)",17,40
"org.apache.openjpa.persistence.query.Expression.locate(String,Expression)",17,43
"org.apache.openjpa.persistence.query.Expression.locate(Expression,int)",17,42
"org.apache.openjpa.persistence.query.Expression.locate(Expression,Expression)",17,45
org.apache.openjpa.persistence.query.Expression.plus(Number),11,14
org.apache.openjpa.persistence.query.Expression.plus(Expression),11,17
org.apache.openjpa.persistence.query.Expression.minus(),7,13
org.apache.openjpa.persistence.query.Expression.minus(Number),13,20
org.apache.openjpa.persistence.query.Expression.minus(Expression),14,24
org.apache.openjpa.persistence.query.Expression.dividedBy(Number),13,20
org.apache.openjpa.persistence.query.Expression.dividedBy(Expression),14,24
org.apache.openjpa.persistence.query.Expression.times(Number),13,20
org.apache.openjpa.persistence.query.Expression.times(Expression),3,4
org.apache.openjpa.persistence.query.Expression.abs(),7,12
org.apache.openjpa.persistence.query.Expression.sqrt(),7,12
org.apache.openjpa.persistence.query.Expression.mod(int),15,25
org.apache.openjpa.persistence.query.Expression.mod(Expression),15,28
"org.apache.openjpa.persistence.query.MinusExpression.MinusExpression(Expression,Expression)",5,8
"org.apache.openjpa.persistence.query.PlusExpression.PlusExpression(Expression,Expression)",5,8
org.apache.openjpa.persistence.compat.TestQuerySQLCache.setUp(),13,18
org.apache.openjpa.persistence.compat.TestQuerySQLCache.testBadCustomCacheSetting(),40,84
org.apache.openjpa.persistence.compat.TestQuerySQLCache.testMultiEMCachingAll(),21,28
org.apache.openjpa.persistence.compat.TestQuerySQLCache.testMultiEMCachingTrue(),27,39
org.apache.openjpa.persistence.compat.TestQuerySQLCache.testEagerFetch(),45,156
org.apache.openjpa.persistence.compat.TestQuerySQLCache.runMultiEMCaching(Map),41,93
"org.apache.openjpa.persistence.compat.TestQuerySQLCache.FindPeople.FindPeople(EntityManagerFactory,int,int,int,int)",8,16
org.apache.openjpa.persistence.compat.TestQuerySQLCache.FindPeople.hadFailures(),1,2
org.apache.openjpa.persistence.compat.TestQuerySQLCache.FindPeople.run(),16,24
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.isVariable(),1,1
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.isAggregate(),1,1
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.isXPath(),1,1
"org.apache.openjpa.jdbc.kernel.exps.AbstractVal.toDataStoreValue(Select,ExpContext,ExpState,Object)",10,13
"org.apache.openjpa.jdbc.kernel.exps.AbstractVal.appendIsEmpty(Select,ExpContext,ExpState,SQLBuffer)",9,13
"org.apache.openjpa.jdbc.kernel.exps.AbstractVal.appendIsNotEmpty(Select,ExpContext,ExpState,SQLBuffer)",9,13
"org.apache.openjpa.jdbc.kernel.exps.AbstractVal.appendIsNull(Select,ExpContext,ExpState,SQLBuffer)",9,18
"org.apache.openjpa.jdbc.kernel.exps.AbstractVal.appendIsNotNull(Select,ExpContext,ExpState,SQLBuffer)",9,18
"org.apache.openjpa.jdbc.kernel.exps.AbstractVal.appendIndex(Select,ExpContext,ExpState,SQLBuffer)",9,13
"org.apache.openjpa.jdbc.kernel.exps.AbstractVal.appendType(Select,ExpContext,ExpState,SQLBuffer)",9,13
"org.apache.openjpa.jdbc.kernel.exps.AbstractVal.appendSize(Select,ExpContext,ExpState,SQLBuffer)",9,13
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.acceptVisit(ExpressionVisitor),6,9
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.getId(),1,2
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.getAlias(),2,3
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.setAlias(String),3,6
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.getSelectAs(),3,3
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.getPath(),1,2
org.apache.openjpa.jdbc.kernel.exps.AbstractVal.getName(),2,2
org.apache.openjpa.kernel.QueryLanguages.parserForLanguage(String),10,25
org.apache.openjpa.integration.jmx.CachedEntity.setId(int),1,1
org.apache.openjpa.integration.jmx.CachedEntity.getId(),0,0
org.apache.openjpa.integration.jmx.CachedEntity.setName(String),3,6
org.apache.openjpa.integration.jmx.CachedEntity.getName(),2,3
"org.apache.openjpa.jdbc.kernel.exps.Extension.Extension(JDBCFilterListener,Val,Val,ClassMapping)",10,20
org.apache.openjpa.jdbc.kernel.exps.Extension.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.Extension.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.Extension.isVariable(),1,1
org.apache.openjpa.jdbc.kernel.exps.Extension.isAggregate(),1,1
org.apache.openjpa.jdbc.kernel.exps.Extension.getType(),6,12
org.apache.openjpa.jdbc.kernel.exps.Extension.getArgTypes(),4,10
org.apache.openjpa.jdbc.kernel.exps.Extension.setImplicitType(Class),4,6
"org.apache.openjpa.jdbc.kernel.exps.Extension.initialize(Select,ExpContext,int)",31,67
"org.apache.openjpa.jdbc.kernel.exps.Extension.ExtensionExpState.ExtensionExpState(Joins,ExpState,ExpState)",5,13
"org.apache.openjpa.jdbc.kernel.exps.Extension.select(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.Extension.selectColumns(Select,ExpContext,ExpState,boolean)",11,30
"org.apache.openjpa.jdbc.kernel.exps.Extension.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.Extension.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.Extension.newSQLBuffer(Select,ExpContext,ExpState)",13,27
"org.apache.openjpa.jdbc.kernel.exps.Extension.load(ExpContext,ExpState,Result)",15,19
"org.apache.openjpa.jdbc.kernel.exps.Extension.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",12,31
"org.apache.openjpa.jdbc.kernel.exps.Extension.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.Extension.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",21,44
"org.apache.openjpa.jdbc.kernel.exps.Extension.getArgs(Select,ExpContext,ExpState)",11,26
org.apache.openjpa.jdbc.kernel.exps.Extension.acceptVisit(ExpressionVisitor),9,21
"org.apache.openjpa.jdbc.kernel.exps.Extension.initialize(Select,ExpContext,Map)",8,12
"org.apache.openjpa.jdbc.kernel.exps.Extension.appendTo(Select,ExpContext,ExpState,SQLBuffer)",11,22
org.apache.openjpa.integration.validation.ICustomer.setShippingAddress(IAddress),3,6
org.apache.openjpa.integration.validation.ICustomer.getShippingAddress(),2,3
org.apache.openjpa.integration.validation.ICustomer.setBillingAddress(IAddress),3,6
org.apache.openjpa.integration.validation.ICustomer.getBillingAddress(),2,3
org.apache.openjpa.jdbc.kernel.exps.Max.Max(Val),6,8
org.apache.openjpa.jdbc.kernel.exps.Max.getOperator(),3,3
org.apache.openjpa.jdbc.kernel.exps.Max.isAggregate(),1,1
org.apache.openjpa.kernel.LockManager.setContext(StoreContext),10,15
org.apache.openjpa.kernel.LockManager.getLockLevel(OpenJPAStateManager),10,14
"org.apache.openjpa.kernel.LockManager.lock(OpenJPAStateManager,int,int,Object)",51,85
"org.apache.openjpa.kernel.LockManager.refreshLock(OpenJPAStateManager,int,int,Object)",16,20
"org.apache.openjpa.kernel.LockManager.lockAll(Collection,int,int,Object)",11,12
org.apache.openjpa.kernel.LockManager.release(OpenJPAStateManager),18,38
org.apache.openjpa.kernel.LockManager.beginTransaction(),13,14
org.apache.openjpa.kernel.LockManager.endTransaction(),8,9
org.apache.openjpa.kernel.LockManager.close(),3,3
org.apache.openjpa.util.DelayedTreeSetProxy.DelayedTreeSetProxy(),4,4
org.apache.openjpa.util.DelayedTreeSetProxy.DelayedTreeSetProxy(Comparator),6,9
org.apache.openjpa.util.DelayedTreeSetProxy.DelayedTreeSetProxy(Collection),6,9
org.apache.openjpa.util.DelayedTreeSetProxy.DelayedTreeSetProxy(SortedSet),6,12
"org.apache.openjpa.util.DelayedTreeSetProxy.setOwner(OpenJPAStateManager,int)",18,45
"org.apache.openjpa.util.DelayedTreeSetProxy.detaching(OpenJPAStateManager,int)",5,19
org.apache.openjpa.util.DelayedTreeSetProxy.getOwner(),3,3
org.apache.openjpa.util.DelayedTreeSetProxy.getOwnerField(),2,3
org.apache.openjpa.util.DelayedTreeSetProxy.getChangeTracker(),2,6
org.apache.openjpa.util.DelayedTreeSetProxy.setChangeTracker(CollectionChangeTracker),4,8
org.apache.openjpa.util.DelayedTreeSetProxy.copy(Object),6,11
org.apache.openjpa.util.DelayedTreeSetProxy.getElementType(),2,4
org.apache.openjpa.util.DelayedTreeSetProxy.setElementType(Class<>),4,9
"org.apache.openjpa.util.DelayedTreeSetProxy.newInstance(Class,Comparator,boolean,boolean)",14,36
org.apache.openjpa.util.DelayedTreeSetProxy.clone(),10,19
org.apache.openjpa.util.DelayedTreeSetProxy.writeReplace(),8,12
org.apache.openjpa.util.DelayedTreeSetProxy.getDelayedField(),5,10
org.apache.openjpa.util.DelayedTreeSetProxy.getDelayedOwner(),5,6
org.apache.openjpa.util.DelayedTreeSetProxy.isDirectAccess(),2,4
org.apache.openjpa.util.DelayedTreeSetProxy.setDirectAccess(boolean),3,7
org.apache.openjpa.util.DelayedTreeSetProxy.getBrokerFactory(),2,6
org.apache.openjpa.util.DelayedTreeSetProxy.load(),4,5
org.apache.openjpa.util.DelayedTreeSetProxy.getBroker(),3,12
org.apache.openjpa.util.DelayedTreeSetProxy.closeBroker(),6,16
org.apache.openjpa.util.DelayedTreeSetProxy.getOwnerStateManager(),3,5
org.apache.openjpa.util.DelayedTreeSetProxy.isDetached(),1,2
org.apache.openjpa.util.DelayedTreeSetProxy.isDelayLoad(),5,5
org.apache.openjpa.util.DelayedTreeSetProxy.clear(),6,7
org.apache.openjpa.util.DelayedTreeSetProxy.iterator(),8,17
org.apache.openjpa.util.DelayedTreeSetProxy.remove(Object),9,30
org.apache.openjpa.util.DelayedTreeSetProxy.size(),5,7
org.apache.openjpa.util.DelayedTreeSetProxy.isEmpty(),5,7
org.apache.openjpa.util.DelayedTreeSetProxy.contains(Object),6,10
org.apache.openjpa.util.DelayedTreeSetProxy.toArray(),6,8
org.apache.openjpa.util.DelayedTreeSetProxy.toArray(Object[]),6,11
org.apache.openjpa.util.DelayedTreeSetProxy.comparator(),5,8
org.apache.openjpa.util.DelayedTreeSetProxy.first(),5,6
org.apache.openjpa.util.DelayedTreeSetProxy.last(),5,6
org.apache.openjpa.util.DelayedTreeSetProxy.add(Object),8,24
org.apache.openjpa.util.DelayedTreeSetProxy.containsAll(Collection),6,8
org.apache.openjpa.util.DelayedTreeSetProxy.addAll(Collection),7,14
org.apache.openjpa.util.DelayedTreeSetProxy.retainAll(Collection),9,17
org.apache.openjpa.util.DelayedTreeSetProxy.removeAll(Collection),7,14
org.apache.openjpa.util.DelayedTreeSetProxy.lower(Object),6,9
org.apache.openjpa.util.DelayedTreeSetProxy.floor(Object),6,9
org.apache.openjpa.util.DelayedTreeSetProxy.ceiling(Object),6,9
org.apache.openjpa.util.DelayedTreeSetProxy.higher(Object),5,7
org.apache.openjpa.util.DelayedTreeSetProxy.pollFirst(),6,8
org.apache.openjpa.util.DelayedTreeSetProxy.pollLast(),6,8
org.apache.openjpa.util.DelayedTreeSetProxy.descendingSet(),7,11
org.apache.openjpa.util.DelayedTreeSetProxy.descendingIterator(),9,20
"org.apache.openjpa.util.DelayedTreeSetProxy.subSet(Object,boolean,Object,boolean)",10,21
"org.apache.openjpa.util.DelayedTreeSetProxy.headSet(Object,boolean)",10,16
"org.apache.openjpa.util.DelayedTreeSetProxy.tailSet(Object,boolean)",10,16
"org.apache.openjpa.util.DelayedTreeSetProxy.subSet(Object,Object)",9,17
org.apache.openjpa.util.DelayedTreeSetProxy.headSet(Object),9,14
org.apache.openjpa.util.DelayedTreeSetProxy.tailSet(Object),9,14
org.apache.openjpa.util.DelayedTreeSetProxy.equals(Object),7,12
org.apache.openjpa.util.DelayedTreeSetProxy.hashCode(),6,9
"org.apache.openjpa.kernel.exps.ContainsValueExpression.ContainsValueExpression(Val,Val)",9,18
org.apache.openjpa.kernel.exps.ContainsValueExpression.getCollection(Object),5,8
org.apache.openjpa.util.ProxyCalendar.newInstance(),4,6
org.apache.openjpa.meta.TestJavaTypes.testIsPrimitiveDefault(),4,38
org.apache.openjpa.meta.TestJavaTypes.TypesHolder.getBoolean(),1,1
org.apache.openjpa.meta.TestJavaTypes.TypesHolder.getShort(),1,1
org.apache.openjpa.meta.TestJavaTypes.TypesHolder.getInt(),1,1
org.apache.openjpa.meta.TestJavaTypes.TypesHolder.getLong(),1,1
org.apache.openjpa.meta.TestJavaTypes.TypesHolder.getDouble(),1,1
org.apache.openjpa.meta.TestJavaTypes.TypesHolder.getChar(),1,1
"org.apache.openjpa.kernel.exps.Val.evaluate(Object,Object,StoreContext,Object[])",16,25
"org.apache.openjpa.kernel.exps.Val.evaluate(Collection,Object,StoreContext,Object[])",20,29
"org.apache.openjpa.kernel.exps.Val.eval(Object,Object,StoreContext,Object[])",9,13
"org.apache.openjpa.kernel.exps.Val.eval(Collection,Object,StoreContext,Object[])",30,56
org.apache.openjpa.kernel.exps.Val.getMetaData(),2,5
org.apache.openjpa.kernel.exps.Val.setMetaData(ClassMetaData),3,8
org.apache.openjpa.kernel.exps.Val.isVariable(),1,1
org.apache.openjpa.kernel.exps.Val.isAggregate(),1,1
org.apache.openjpa.kernel.exps.Val.isXPath(),1,1
org.apache.openjpa.kernel.exps.Val.acceptVisit(ExpressionVisitor),6,9
org.apache.openjpa.kernel.exps.Val.getAlias(),2,3
org.apache.openjpa.kernel.exps.Val.setAlias(String),3,6
org.apache.openjpa.kernel.exps.Val.getSelectAs(),3,3
org.apache.openjpa.kernel.exps.Val.getPath(),1,2
org.apache.openjpa.kernel.exps.Val.getName(),2,2
"org.apache.openjpa.jdbc.kernel.exps.Val.initialize(Select,ExpContext,int)",12,15
"org.apache.openjpa.jdbc.kernel.exps.Val.toDataStoreValue(Select,ExpContext,ExpState,Object)",11,17
"org.apache.openjpa.jdbc.kernel.exps.Val.select(Select,ExpContext,ExpState,boolean)",8,11
"org.apache.openjpa.jdbc.kernel.exps.Val.selectColumns(Select,ExpContext,ExpState,boolean)",8,12
"org.apache.openjpa.jdbc.kernel.exps.Val.groupBy(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.Val.orderBy(Select,ExpContext,ExpState,boolean)",7,8
"org.apache.openjpa.jdbc.kernel.exps.Val.load(ExpContext,ExpState,Result)",11,13
"org.apache.openjpa.jdbc.kernel.exps.Val.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",19,27
"org.apache.openjpa.jdbc.kernel.exps.Val.length(Select,ExpContext,ExpState)",9,10
"org.apache.openjpa.jdbc.kernel.exps.Val.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",11,18
"org.apache.openjpa.jdbc.kernel.exps.Val.appendIsEmpty(Select,ExpContext,ExpState,SQLBuffer)",11,17
"org.apache.openjpa.jdbc.kernel.exps.Val.appendIsNotEmpty(Select,ExpContext,ExpState,SQLBuffer)",11,17
"org.apache.openjpa.jdbc.kernel.exps.Val.appendIndex(Select,ExpContext,ExpState,SQLBuffer)",11,16
"org.apache.openjpa.jdbc.kernel.exps.Val.appendType(Select,ExpContext,ExpState,SQLBuffer)",11,16
"org.apache.openjpa.jdbc.kernel.exps.Val.appendSize(Select,ExpContext,ExpState,SQLBuffer)",11,16
"org.apache.openjpa.jdbc.kernel.exps.Val.appendIsNull(Select,ExpContext,ExpState,SQLBuffer)",10,15
"org.apache.openjpa.jdbc.kernel.exps.Val.appendIsNotNull(Select,ExpContext,ExpState,SQLBuffer)",10,15
org.apache.openjpa.jdbc.kernel.exps.Val.getId(),0,0
org.apache.openjpa.jdbc.kernel.exps.Val.getSelectAs(),2,2
org.apache.openjpa.datacache.QueryKey.newInstance(Query),5,9
"org.apache.openjpa.datacache.QueryKey.newInstance(Query,Object[])",21,30
"org.apache.openjpa.datacache.QueryKey.newInstance(Query,Map<Object,Object>)",22,32
"org.apache.openjpa.datacache.QueryKey.newInstance(QueryContext,boolean,Object[],Class<>,boolean,long,long,Object)",16,36
"org.apache.openjpa.datacache.QueryKey.newInstance(QueryContext,boolean,Map<Object,Object>,Class<>,boolean,long,long,Object)",20,47
"org.apache.openjpa.datacache.QueryKey.createKey(QueryContext,boolean,Class<>,boolean,long,long,Object)",89,293
"org.apache.openjpa.datacache.QueryKey.setParams(QueryKey,QueryContext,Object[])",31,68
"org.apache.openjpa.datacache.QueryKey.setParams(QueryKey,StoreContext,Map<Object,Object>)",58,143
org.apache.openjpa.datacache.QueryKey.QueryKey(),4,4
org.apache.openjpa.datacache.QueryKey.getCandidateTypeName(),6,10
org.apache.openjpa.datacache.QueryKey.getTimeout(),4,5
org.apache.openjpa.datacache.QueryKey.changeInvalidatesQuery(Collection<Class<>>),17,32
"org.apache.openjpa.datacache.QueryKey.intersects(Collection<String>,Collection<Class<>>)",15,27
org.apache.openjpa.datacache.QueryKey.equals(Object),25,47
org.apache.openjpa.datacache.QueryKey.hashCode(),14,28
org.apache.openjpa.datacache.QueryKey.toString(),15,49
org.apache.openjpa.datacache.QueryKey.writeExternal(ObjectOutput),18,32
org.apache.openjpa.datacache.QueryKey.readExternal(ObjectInput),22,41
org.apache.openjpa.datacache.QueryKey.getAcessPathClassNames(),11,19
org.apache.openjpa.persistence.annotations.xml.TestMetaDataComplete.setUp(),20,50
org.apache.openjpa.persistence.annotations.xml.TestMetaDataComplete.tearDown(),11,16
org.apache.openjpa.persistence.annotations.xml.TestMetaDataComplete.getPersistenceUnitName(),7,7
org.apache.openjpa.persistence.annotations.xml.TestMetaDataComplete.testIgnoresClassAnnotationIfMetaDataComplete(),18,29
org.apache.openjpa.persistence.annotations.xml.TestMetaDataComplete.testProcessesClassAnnotationIfMetaDataIsNotComplete(),18,29
org.apache.openjpa.persistence.annotations.xml.TestMetaDataComplete.testIgnoresFieldAnnotationIfMetaDataComplete(),18,30
org.apache.openjpa.persistence.annotations.xml.TestMetaDataComplete.testProcessesFieldAnnotationIfMetaDataIsNotComplete(),19,30
org.apache.openjpa.persistence.annotations.xml.TestMetaDataComplete.testIgnoresNamedQueryIfMetaDataComplete(),21,37
org.apache.openjpa.persistence.annotations.xml.TestMetaDataComplete.testProcessesNamedQueryIfMetaDataIsNotComplete(),15,34
org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller.RefreshStrategyInstaller(MappingRepository),9,10
org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller.isAdapting(),1,1
org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller.installStrategy(ClassMapping),24,56
org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller.installStrategy(FieldMapping),23,63
org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller.installStrategy(Version),22,50
org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller.installStrategy(Discriminator),29,65
org.apache.openjpa.jdbc.meta.RefreshStrategyInstaller.isCustomStrategy(Strategy),10,13
org.apache.openjpa.kernel.QueryContext.getQuery(),9,12
org.apache.openjpa.kernel.QueryContext.getStoreContext(),4,7
org.apache.openjpa.kernel.QueryContext.getFetchConfiguration(),3,7
org.apache.openjpa.kernel.QueryContext.getOperation(),6,8
org.apache.openjpa.kernel.QueryContext.getLanguage(),3,4
org.apache.openjpa.kernel.QueryContext.getQueryString(),2,5
org.apache.openjpa.kernel.QueryContext.getCandidateCollection(),6,11
org.apache.openjpa.kernel.QueryContext.getCandidateType(),8,9
org.apache.openjpa.kernel.QueryContext.hasSubclasses(),5,6
"org.apache.openjpa.kernel.QueryContext.setCandidateType(Class<>,boolean)",5,8
org.apache.openjpa.kernel.QueryContext.isReadOnly(),3,4
org.apache.openjpa.kernel.QueryContext.setReadOnly(boolean),4,6
org.apache.openjpa.kernel.QueryContext.isUnique(),2,3
org.apache.openjpa.kernel.QueryContext.setUnique(boolean),9,12
org.apache.openjpa.kernel.QueryContext.isDistinct(),5,6
org.apache.openjpa.kernel.QueryContext.getResultMappingScope(),6,9
org.apache.openjpa.kernel.QueryContext.getResultMappingName(),7,10
"org.apache.openjpa.kernel.QueryContext.setResultMapping(Class<>,String)",9,13
org.apache.openjpa.kernel.QueryContext.getResultType(),6,10
org.apache.openjpa.kernel.QueryContext.setResultType(Class<>),8,10
org.apache.openjpa.kernel.QueryContext.getStartRange(),6,7
org.apache.openjpa.kernel.QueryContext.getEndRange(),10,10
"org.apache.openjpa.kernel.QueryContext.setRange(long,long)",13,20
org.apache.openjpa.kernel.QueryContext.getParameterDeclaration(),3,5
org.apache.openjpa.kernel.QueryContext.declareParameters(String),7,8
org.apache.openjpa.kernel.QueryContext.getOrderedParameterTypes(),13,16
org.apache.openjpa.kernel.QueryContext.getParameterTypes(),4,4
org.apache.openjpa.kernel.QueryContext.getUpdates(),11,16
org.apache.openjpa.kernel.QueryContext.getIgnoreChanges(),4,6
org.apache.openjpa.kernel.QueryContext.getCompilation(),3,4
org.apache.openjpa.kernel.QueryContext.getAlias(),7,9
org.apache.openjpa.kernel.QueryContext.getProjectionAliases(),4,7
org.apache.openjpa.kernel.QueryContext.getProjectionTypes(),3,6
org.apache.openjpa.kernel.QueryContext.isAggregate(),2,3
org.apache.openjpa.kernel.QueryContext.hasGrouping(),1,1
org.apache.openjpa.kernel.QueryContext.getAccessPathMetaDatas(),8,9
org.apache.openjpa.kernel.QueryContext.getFilterListener(String),4,9
org.apache.openjpa.kernel.QueryContext.getAggregateListener(String),5,9
org.apache.openjpa.kernel.QueryContext.getFilterListeners(),5,8
org.apache.openjpa.kernel.QueryContext.getAggregateListeners(),5,8
"org.apache.openjpa.kernel.QueryContext.deleteInMemory(StoreQuery,StoreQuery.Executor,Object[])",12,17
"org.apache.openjpa.kernel.QueryContext.updateInMemory(StoreQuery,StoreQuery.Executor,Object[])",12,17
"org.apache.openjpa.kernel.QueryContext.classForName(String,String[])",14,19
org.apache.openjpa.kernel.QueryContext.lock(),4,5
org.apache.openjpa.kernel.QueryContext.unlock(),4,5
org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.getFieldMapping(),2,5
org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.getIndependentElementMappings(boolean),6,8
org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.getElementColumns(ClassMapping),6,6
org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.getJoinForeignKey(ClassMapping),6,11
"org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.selectElement(Select,ClassMapping,JDBCStore,JDBCFetchConfiguration,int,Joins)",13,21
"org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.loadElement(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",19,31
"org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.join(Joins,ClassMapping)",4,8
"org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.joinElementRelation(Joins,ClassMapping)",6,11
org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.newLRSProxy(),3,6
org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.map(boolean),33,93
org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.initialize(),17,26
"org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",12,16
"org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager,Object)",56,155
"org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.getRelations(StateManagerImpl,Collection,StoreContext)",19,38
"org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",55,164
"org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",16,28
"org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.supportsSelect(Select,int,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",27,46
"org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.toDataStoreValue(Object,JDBCStore)",12,20
"org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.join(Joins,boolean)",5,11
"org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy.joinRelation(Joins,boolean,boolean)",12,16
org.apache.openjpa.jdbc.meta.MappingRepository.MappingRepository(),14,16
org.apache.openjpa.jdbc.meta.MappingRepository.getDBDictionary(),5,7
org.apache.openjpa.jdbc.meta.MappingRepository.getMappingDefaults(),2,7
org.apache.openjpa.jdbc.meta.MappingRepository.setMappingDefaults(MappingDefaults),3,9
org.apache.openjpa.jdbc.meta.MappingRepository.getSchemaGroup(),9,28
org.apache.openjpa.jdbc.meta.MappingRepository.setSchemaGroup(SchemaGroup),5,12
org.apache.openjpa.jdbc.meta.MappingRepository.getStrategyInstaller(),8,21
org.apache.openjpa.jdbc.meta.MappingRepository.setStrategyInstaller(StrategyInstaller),8,15
"org.apache.openjpa.jdbc.meta.MappingRepository.getQueryResultMapping(Class<>,String,ClassLoader,boolean)",15,48
"org.apache.openjpa.jdbc.meta.MappingRepository.getQueryResultMappingInternal(Class<>,String,ClassLoader)",26,91
org.apache.openjpa.jdbc.meta.MappingRepository.getQueryResultMappings(),11,39
"org.apache.openjpa.jdbc.meta.MappingRepository.getCachedQueryResultMapping(Class,String)",11,35
"org.apache.openjpa.jdbc.meta.MappingRepository.addQueryResultMapping(Class,String)",9,29
"org.apache.openjpa.jdbc.meta.MappingRepository.addQueryResultMappingInternal(Class,String)",14,31
org.apache.openjpa.jdbc.meta.MappingRepository.removeQueryResultMapping(QueryResultMapping),8,25
"org.apache.openjpa.jdbc.meta.MappingRepository.removeQueryResultMapping(Class,String)",10,28
org.apache.openjpa.jdbc.meta.MappingRepository.getQueryResultKey(QueryResultMapping),10,20
"org.apache.openjpa.jdbc.meta.MappingRepository.getQueryResultKey(Class<>,String)",9,15
"org.apache.openjpa.jdbc.meta.MappingRepository.getMapping(Class<>,ClassLoader,boolean)",7,14
org.apache.openjpa.jdbc.meta.MappingRepository.getMappings(),4,5
"org.apache.openjpa.jdbc.meta.MappingRepository.getMapping(Object,ClassLoader,boolean)",8,15
"org.apache.openjpa.jdbc.meta.MappingRepository.getImplementorMappings(Class<>,ClassLoader,boolean)",9,16
org.apache.openjpa.jdbc.meta.MappingRepository.clear(),3,5
org.apache.openjpa.jdbc.meta.MappingRepository.prepareMapping(ClassMetaData),38,94
org.apache.openjpa.jdbc.meta.MappingRepository.newClassMetaData(Class<>),4,7
org.apache.openjpa.jdbc.meta.MappingRepository.newClassMetaDataArray(int),5,8
"org.apache.openjpa.jdbc.meta.MappingRepository.newFieldMetaData(String,Class<>,ClassMetaData)",8,18
org.apache.openjpa.jdbc.meta.MappingRepository.newFieldMetaDataArray(int),6,11
org.apache.openjpa.jdbc.meta.MappingRepository.newEmbeddedClassMetaData(ValueMetaData),6,11
org.apache.openjpa.jdbc.meta.MappingRepository.newValueMetaData(FieldMetaData),7,16
org.apache.openjpa.jdbc.meta.MappingRepository.newSequenceMetaData(String),6,11
"org.apache.openjpa.jdbc.meta.MappingRepository.newValueOrder(FieldMetaData,boolean)",8,12
"org.apache.openjpa.jdbc.meta.MappingRepository.newRelatedFieldOrder(FieldMetaData,FieldMetaData,boolean)",9,21
org.apache.openjpa.jdbc.meta.MappingRepository.newOrderArray(int),3,4
org.apache.openjpa.jdbc.meta.MappingRepository.newVersion(ClassMapping),5,9
org.apache.openjpa.jdbc.meta.MappingRepository.newDiscriminator(ClassMapping),5,9
org.apache.openjpa.jdbc.meta.MappingRepository.newMappingInfo(ClassMapping),10,24
org.apache.openjpa.jdbc.meta.MappingRepository.newMappingInfo(FieldMapping),6,15
org.apache.openjpa.jdbc.meta.MappingRepository.newMappingInfo(ValueMapping),6,15
org.apache.openjpa.jdbc.meta.MappingRepository.newMappingInfo(Version),6,15
org.apache.openjpa.jdbc.meta.MappingRepository.newMappingInfo(Discriminator),7,15
org.apache.openjpa.jdbc.meta.MappingRepository.namedStrategy(ClassMapping),8,20
"org.apache.openjpa.jdbc.meta.MappingRepository.instantiateClassStrategy(String,ClassMapping)",36,106
"org.apache.openjpa.jdbc.meta.MappingRepository.namedStrategy(FieldMapping,boolean)",39,120
org.apache.openjpa.jdbc.meta.MappingRepository.namedStrategy(Discriminator),22,60
"org.apache.openjpa.jdbc.meta.MappingRepository.instantiateDiscriminatorStrategy(String,Discriminator)",35,121
org.apache.openjpa.jdbc.meta.MappingRepository.namedStrategy(Version),21,60
"org.apache.openjpa.jdbc.meta.MappingRepository.instantiateVersionStrategy(String,Version)",34,120
"org.apache.openjpa.jdbc.meta.MappingRepository.instantiateVersionStrategy(Class<>,Version,String)",22,51
org.apache.openjpa.jdbc.meta.MappingRepository.defaultStrategy(ClassMapping),8,14
"org.apache.openjpa.jdbc.meta.MappingRepository.defaultStrategy(ClassMapping,boolean)",43,125
"org.apache.openjpa.jdbc.meta.MappingRepository.defaultStrategy(FieldMapping,boolean)",17,32
"org.apache.openjpa.jdbc.meta.MappingRepository.defaultStrategy(FieldMapping,boolean,boolean)",46,259
"org.apache.openjpa.jdbc.meta.MappingRepository.defaultTypeStrategy(FieldMapping,boolean,boolean)",56,246
"org.apache.openjpa.jdbc.meta.MappingRepository.handlerCollectionStrategy(FieldMapping,ValueHandler,boolean)",25,44
"org.apache.openjpa.jdbc.meta.MappingRepository.handlerMapStrategy(FieldMapping,ValueHandler,ValueHandler,boolean,boolean,boolean)",31,82
org.apache.openjpa.jdbc.meta.MappingRepository.useInverseKeyMapping(FieldMapping),37,115
org.apache.openjpa.jdbc.meta.MappingRepository.isNonDefaultMappingAllowed(),9,13
org.apache.openjpa.jdbc.meta.MappingRepository.isUniMTo1JT(FieldMapping),20,37
org.apache.openjpa.jdbc.meta.MappingRepository.isUni1To1JT(FieldMapping),20,37
org.apache.openjpa.jdbc.meta.MappingRepository.isBi1To1JT(FieldMapping),19,36
org.apache.openjpa.jdbc.meta.MappingRepository.isUni1ToMFK(FieldMapping),17,29
org.apache.openjpa.jdbc.meta.MappingRepository.isBiMTo1JT(FieldMapping),10,31
org.apache.openjpa.jdbc.meta.MappingRepository.getBi_1ToM_JoinTableField(FieldMapping),19,64
org.apache.openjpa.jdbc.meta.MappingRepository.getBi_MTo1_JoinTableField(FieldMapping),15,47
org.apache.openjpa.jdbc.meta.MappingRepository.hasJoinColumn(FieldMapping),8,14
org.apache.openjpa.jdbc.meta.MappingRepository.hasJoinTable(FieldMapping),6,15
org.apache.openjpa.jdbc.meta.MappingRepository.isBidirectional(FieldMapping),14,41
"org.apache.openjpa.jdbc.meta.MappingRepository.mappedStrategy(ValueMapping,Class<>,boolean)",45,107
org.apache.openjpa.jdbc.meta.MappingRepository.namedHandler(ValueMapping),33,82
org.apache.openjpa.jdbc.meta.MappingRepository.defaultHandler(ValueMapping),10,17
"org.apache.openjpa.jdbc.meta.MappingRepository.defaultHandler(ValueMapping,boolean)",45,202
org.apache.openjpa.jdbc.meta.MappingRepository.useUntypedPCHandler(ValueMapping),21,38
"org.apache.openjpa.jdbc.meta.MappingRepository.isClob(ValueMapping,boolean)",20,50
"org.apache.openjpa.jdbc.meta.MappingRepository.warnMaxEmbedded(ValueMapping,int)",18,27
org.apache.openjpa.jdbc.meta.MappingRepository.defaultStrategy(Discriminator),8,16
"org.apache.openjpa.jdbc.meta.MappingRepository.defaultStrategy(Discriminator,boolean)",40,113
org.apache.openjpa.jdbc.meta.MappingRepository.defaultStrategy(Version),7,16
"org.apache.openjpa.jdbc.meta.MappingRepository.defaultStrategy(Version,boolean)",24,84
"org.apache.openjpa.jdbc.meta.MappingRepository.defaultStrategy(Version,FieldMapping)",21,60
org.apache.openjpa.jdbc.meta.MappingRepository.endConfiguration(),12,33
org.apache.openjpa.jdbc.meta.MappingRepository.findBaseClassMapping(ClassMapping),38,117
org.apache.openjpa.jdbc.meta.MappingRepository.setDefaultInheritanceStrategy(ClassMapping),13,34
org.apache.openjpa.jdbc.meta.MappingRepository.hasInheritanceStrategy(ClassMapping),9,20
"org.apache.openjpa.kernel.exps.Add.Add(Val,Val)",5,11
"org.apache.openjpa.kernel.exps.Add.operate(Object,Class,Object,Class)",4,6
org.apache.openjpa.event.EndTransactionListener.beforeCommit(TransactionEvent),5,11
org.apache.openjpa.event.EndTransactionListener.afterCommit(TransactionEvent),6,11
org.apache.openjpa.event.EndTransactionListener.afterRollback(TransactionEvent),5,10
org.apache.openjpa.event.EndTransactionListener.afterStateTransitions(TransactionEvent),5,10
org.apache.openjpa.event.EndTransactionListener.afterCommitComplete(TransactionEvent),8,15
org.apache.openjpa.event.EndTransactionListener.afterRollbackComplete(TransactionEvent),7,14
org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.decorate(Connection),5,9
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.fireEvent(Connection,short,JDBCEvent,Statement,String)",15,39
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.fireEvent(Object,Object)",16,93
org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventConnection.EventConnection(Connection),7,11
org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventConnection.commit(),7,18
org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventConnection.rollback(),7,18
org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventConnection.createStatement(boolean),11,33
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventConnection.createStatement(int,int,boolean)",13,37
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventConnection.prepareStatement(String,boolean)",13,42
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventConnection.prepareStatement(String,int,int,boolean)",15,46
org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventConnection.close(),7,10
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventPreparedStatement.EventPreparedStatement(PreparedStatement,EventConnection,String)",7,15
org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventPreparedStatement.executeUpdate(),10,28
org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventPreparedStatement.executeQuery(boolean),13,32
org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventPreparedStatement.executeBatch(),10,28
org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventPreparedStatement.execute(),9,26
org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventPreparedStatement.executeUpdate(String),11,31
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventPreparedStatement.executeUpdate(String,int)",11,31
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventPreparedStatement.executeUpdate(String,int[])",11,31
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventPreparedStatement.executeUpdate(String,String[])",11,32
org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventPreparedStatement.execute(String),10,29
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventPreparedStatement.execute(String,int)",10,29
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventPreparedStatement.execute(String,int[])",10,29
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventPreparedStatement.execute(String,String[])",10,30
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventStatement.EventStatement(Statement,EventConnection)",5,11
org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventStatement.executeUpdate(String),11,31
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventStatement.executeQuery(String,boolean)",14,35
org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventStatement.execute(String),10,29
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventStatement.executeUpdate(String,int)",11,31
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventStatement.executeUpdate(String,int[])",11,31
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventStatement.executeUpdate(String,String[])",11,32
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventStatement.execute(String,int)",10,29
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventStatement.execute(String,int[])",10,29
"org.apache.openjpa.lib.jdbc.JDBCEventConnectionDecorator.EventStatement.execute(String,String[])",10,30
org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.map(boolean),52,178
org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.initialize(),21,27
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",13,24
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",12,24
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",9,14
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.update(OpenJPAStateManager,Row)",20,85
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.supportsSelect(Select,int,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",14,22
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.select(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",13,21
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",38,101
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.appendIsNull(SQLBuffer,Select,Joins)",12,24
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.appendIsNotNull(SQLBuffer,Select,Joins)",12,24
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.join(Joins,boolean)",5,11
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.loadProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)",14,21
org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.isVersionable(),8,19
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.where(OpenJPAStateManager,JDBCStore,RowManager,Object)",29,50
org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.getFieldIndex(),2,4
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.getPrimaryKeyValue(Result,Column[],ForeignKey,JDBCStore,Joins)",21,33
org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.getColumns(),3,4
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.getJoinValue(Object,Column,JDBCStore)",9,13
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.getJoinValue(OpenJPAStateManager,Column,JDBCStore)",12,13
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.setAutoAssignedValue(OpenJPAStateManager,JDBCStore,Column,Object)",23,134
org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.getColumnIO(),2,4
org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.getResultArguments(),3,3
org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.toEmbeddedObjectValue(Object),4,7
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.toEmbeddedDataStoreValue(Object,JDBCStore)",7,15
"org.apache.openjpa.jdbc.meta.strats.PrimitiveFieldStrategy.loadEmbedded(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Object)",14,19
org.apache.openjpa.enhance.ids.HardwareId.HardwareId(),1,1
"org.apache.openjpa.enhance.ids.HardwareId.HardwareId(String,String)",6,11
"org.apache.openjpa.enhance.ids.HardwareId.HardwareId(String,int)",6,11
org.apache.openjpa.enhance.ids.HardwareId.getSerial(),2,3
org.apache.openjpa.enhance.ids.HardwareId.getModel(),2,3
org.apache.openjpa.enhance.ids.HardwareId.equals(Object),7,17
org.apache.openjpa.enhance.ids.HardwareId.hashCode(),4,8
"org.apache.openjpa.kernel.exps.Exp.evaluate(Object,Object,StoreContext,Object[])",15,24
"org.apache.openjpa.kernel.exps.Exp.evaluate(Collection,StoreContext,Object[])",16,21
"org.apache.openjpa.kernel.exps.Exp.eval(Object,Object,StoreContext,Object[])",11,16
"org.apache.openjpa.kernel.exps.Exp.eval(Collection,StoreContext,Object[])",10,10
org.apache.openjpa.kernel.exps.Exp.acceptVisit(ExpressionVisitor),6,9
org.apache.openjpa.lib.meta.MetaDataSerializer.serialize(int),18,24
"org.apache.openjpa.lib.meta.MetaDataSerializer.serialize(Map,int)",31,46
"org.apache.openjpa.lib.meta.MetaDataSerializer.serialize(File,int)",14,21
"org.apache.openjpa.lib.meta.MetaDataSerializer.serialize(Writer,int)",14,18
org.apache.openjpa.conf.TestSpecificationConfiguration.testSpecificationIsSet(),5,7
org.apache.openjpa.conf.TestSpecificationConfiguration.testSpecificationIsJPA(),5,10
org.apache.openjpa.conf.TestSpecificationConfiguration.testSpecificationVersionIsJPA1(),8,14
org.apache.openjpa.conf.TestSpecificationConfiguration.testSpecificationVersionIsJPA2(),25,49
org.apache.openjpa.conf.TestSpecificationConfiguration.testLowerVersionCanBeSet(),10,15
org.apache.openjpa.conf.TestSpecificationConfiguration.testHigherVersionCanNotBeSet(),35,64
org.apache.openjpa.conf.TestSpecificationConfiguration.testDifferentSpecCanBeSet(),6,7
org.apache.openjpa.conf.TestSpecificationConfiguration.testSpecCanBeSetToNullString(),8,14
org.apache.openjpa.conf.TestSpecificationConfiguration.testSpecCanBeSetToNullSpecification(),7,14
org.apache.openjpa.conf.TestSpecificationConfiguration.getSpecifcation(),5,6
org.apache.openjpa.kernel.exps.This.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.This.eval(Object,Object,StoreContext,Object[])",8,12
org.apache.openjpa.kernel.exps.This.getType(),4,5
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.DefaultIdentifierConfiguration(),5,9
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.delimitAll(),1,1
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getDefaultIdentifierRule(),3,6
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getDelimitedCase(),5,5
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getSchemaCase(),5,5
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getLeadingDelimiter(),6,6
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getIdentifierDelimiter(),5,6
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getIdentifierConcatenator(),5,6
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getIdentifierRule(T),3,6
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getIdentifierRules(),6,8
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getTrailingDelimiter(),6,6
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getSupportsDelimitedIdentifiers(),3,3
org.apache.openjpa.jdbc.identifier.DefaultIdentifierConfiguration.getConversionKey(),3,5
org.apache.openjpa.integration.daytrader.TradeJPADirect.getEm(EntityManagerFactory),6,15
org.apache.openjpa.integration.daytrader.TradeJPADirect.putEm(EntityManager),4,4
"org.apache.openjpa.integration.daytrader.TradeJPADirect.TradeJPADirect(Log,EntityManagerFactory,boolean)",14,22
org.apache.openjpa.integration.daytrader.TradeJPADirect.init(),9,10
org.apache.openjpa.integration.daytrader.TradeJPADirect.destroy(),9,15
org.apache.openjpa.integration.daytrader.TradeJPADirect.getMarketSummary(),52,228
"org.apache.openjpa.integration.daytrader.TradeJPADirect.buy(String,String,double,int)",65,192
"org.apache.openjpa.integration.daytrader.TradeJPADirect.sell(String,Integer,int)",75,236
"org.apache.openjpa.integration.daytrader.TradeJPADirect.queueOrder(Integer,boolean)",14,22
"org.apache.openjpa.integration.daytrader.TradeJPADirect.completeOrder(Integer,boolean)",62,213
"org.apache.openjpa.integration.daytrader.TradeJPADirect.cancelOrder(Integer,boolean)",20,43
"org.apache.openjpa.integration.daytrader.TradeJPADirect.orderCompleted(String,Integer)",9,14
org.apache.openjpa.integration.daytrader.TradeJPADirect.getOrders(String),16,41
org.apache.openjpa.integration.daytrader.TradeJPADirect.getClosedOrders(String),80,239
"org.apache.openjpa.integration.daytrader.TradeJPADirect.createQuote(String,String,BigDecimal)",30,84
org.apache.openjpa.integration.daytrader.TradeJPADirect.getQuote(String),15,37
org.apache.openjpa.integration.daytrader.TradeJPADirect.getAllQuotes(),20,35
"org.apache.openjpa.integration.daytrader.TradeJPADirect.updateQuotePriceVolume(String,BigDecimal,double)",64,188
org.apache.openjpa.integration.daytrader.TradeJPADirect.getHoldings(String),34,73
org.apache.openjpa.integration.daytrader.TradeJPADirect.getHolding(Integer),13,36
org.apache.openjpa.integration.daytrader.TradeJPADirect.getAccountData(String),22,60
org.apache.openjpa.integration.daytrader.TradeJPADirect.getAccountProfileData(String),16,41
org.apache.openjpa.integration.daytrader.TradeJPADirect.updateAccountProfile(AccountProfileDataBean),42,151
"org.apache.openjpa.integration.daytrader.TradeJPADirect.login(String,String)",25,83
org.apache.openjpa.integration.daytrader.TradeJPADirect.logout(String),23,67
"org.apache.openjpa.integration.daytrader.TradeJPADirect.register(String,String,String,String,String,String,BigDecimal)",42,145
org.apache.openjpa.integration.daytrader.TradeJPADirect.resetTrade(boolean),18,34
"org.apache.openjpa.integration.daytrader.TradeJPADirect.publishQuotePriceChange(QuoteDataBean,BigDecimal,BigDecimal,double)",22,46
"org.apache.openjpa.integration.daytrader.TradeJPADirect.createOrder(AccountDataBean,QuoteDataBean,HoldingDataBean,String,double,EntityManager)",41,103
"org.apache.openjpa.integration.daytrader.TradeJPADirect.createHolding(AccountDataBean,QuoteDataBean,double,BigDecimal,EntityManager)",34,90
"org.apache.openjpa.integration.daytrader.TradeJPADirect.investmentReturn(double,double)",11,20
org.apache.openjpa.integration.daytrader.TradeJPADirect.pingTwoPhase(String),18,29
"org.apache.openjpa.integration.daytrader.TradeJPADirect.quotePriceComparator.compare(Object,Object)",6,20
org.apache.openjpa.integration.daytrader.TradeJPADirect.checkDBProductName(),17,37
"org.apache.openjpa.integration.daytrader.TradeJPADirect.recreateDBTables(Object[],java.io.PrintWriter)",21,40
org.apache.openjpa.integration.daytrader.TradeJPADirect.getMode(),6,12
org.apache.openjpa.integration.jmx.TestJMXPlatformMBeans.testDataCacheInstrument(),73,174
org.apache.openjpa.integration.jmx.TestJMXPlatformMBeans.testQueryCacheInstrument(),75,212
org.apache.openjpa.integration.jmx.TestJMXPlatformMBeans.testPreparedQueryCacheInstrument(),78,221
org.apache.openjpa.integration.jmx.TestJMXPlatformMBeans.DCMBeanCallable.call(),57,160
"org.apache.openjpa.integration.jmx.TestJMXPlatformMBeans.QueryCachesMBeanCallable.QueryCachesMBeanCallable(String,String)",9,20
org.apache.openjpa.integration.jmx.TestJMXPlatformMBeans.QueryCachesMBeanCallable.call(),46,154
org.apache.openjpa.integration.jmx.TestJMXPlatformMBeans.QueryCachesMBeanCallable.setObjName(String),5,13
org.apache.openjpa.integration.jmx.TestJMXPlatformMBeans.QueryCachesMBeanCallable.getObjName(),4,6
org.apache.openjpa.integration.jmx.TestJMXPlatformMBeans.QueryCachesMBeanCallable.setQueryMethod(String),4,10
org.apache.openjpa.integration.jmx.TestJMXPlatformMBeans.QueryCachesMBeanCallable.getQueryMethod(),3,5
org.apache.openjpa.enhance.ids.SoftwareId.SoftwareId(),1,1
org.apache.openjpa.enhance.ids.SoftwareId.SoftwareId(int),3,4
"org.apache.openjpa.enhance.ids.SoftwareId.SoftwareId(Integer,int)",5,8
"org.apache.openjpa.enhance.ids.SoftwareId.SoftwareId(Integer,int,String)",7,12
org.apache.openjpa.enhance.ids.SoftwareId.getIdInteger(),1,3
org.apache.openjpa.enhance.ids.SoftwareId.getIdInt(),0,0
org.apache.openjpa.enhance.ids.SoftwareId.getIdString(),1,3
org.apache.openjpa.enhance.ids.SoftwareId.equals(Object),7,18
org.apache.openjpa.enhance.ids.SoftwareId.hashCode(),4,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PropertyAccess1.PropertyAccess1(),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PropertyAccess1.PropertyAccess1(int),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PropertyAccess1.getId(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PropertyAccess1.setId(int),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PropertyAccess1.getName(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PropertyAccess1.setName(String),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PropertyAccess1.getIntValue(),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PropertyAccess1.setIntValue(int),3,5
"org.apache.openjpa.util.CharId.CharId(Class,Character)",4,7
"org.apache.openjpa.util.CharId.CharId(Class,String)",3,6
"org.apache.openjpa.util.CharId.CharId(Class,char)",2,5
"org.apache.openjpa.util.CharId.CharId(Class,char,boolean)",3,7
org.apache.openjpa.util.CharId.getId(),1,1
org.apache.openjpa.util.CharId.getIdObject(),4,5
org.apache.openjpa.util.CharId.toString(),3,5
org.apache.openjpa.util.CharId.idHash(),2,2
org.apache.openjpa.util.CharId.idEquals(OpenJPAId),3,4
org.apache.openjpa.persistence.jest.DomainCommand.DomainCommand(JPAServletContext),6,7
org.apache.openjpa.persistence.jest.DomainCommand.getValidQualifiers(),4,6
org.apache.openjpa.persistence.jest.DomainCommand.getMaximumArguments(),2,2
org.apache.openjpa.persistence.jest.DomainCommand.getAction(),3,3
org.apache.openjpa.persistence.jest.DomainCommand.process(),27,44
"org.apache.openjpa.kernel.PCDataImpl.PCDataImpl(Object,ClassMetaData)",7,12
"org.apache.openjpa.kernel.PCDataImpl.PCDataImpl(Object,ClassMetaData,String)",17,29
org.apache.openjpa.kernel.PCDataImpl.getId(),2,2
org.apache.openjpa.kernel.PCDataImpl.getType(),1,2
org.apache.openjpa.kernel.PCDataImpl.getLoaded(),3,4
org.apache.openjpa.kernel.PCDataImpl.getData(int),9,14
"org.apache.openjpa.kernel.PCDataImpl.setData(int,Object)",6,11
org.apache.openjpa.kernel.PCDataImpl.clearData(int),3,6
org.apache.openjpa.kernel.PCDataImpl.getImplData(),3,4
org.apache.openjpa.kernel.PCDataImpl.setImplData(Object),5,7
org.apache.openjpa.kernel.PCDataImpl.getImplData(int),5,9
"org.apache.openjpa.kernel.PCDataImpl.setImplData(int,Object)",8,23
org.apache.openjpa.kernel.PCDataImpl.getIntermediate(int),5,7
"org.apache.openjpa.kernel.PCDataImpl.setIntermediate(int,Object)",7,10
org.apache.openjpa.kernel.PCDataImpl.isLoaded(int),2,4
"org.apache.openjpa.kernel.PCDataImpl.setLoaded(int,boolean)",3,10
org.apache.openjpa.kernel.PCDataImpl.getVersion(),2,3
org.apache.openjpa.kernel.PCDataImpl.setVersion(Object),3,6
"org.apache.openjpa.kernel.PCDataImpl.load(OpenJPAStateManager,FetchConfiguration,Object)",23,53
"org.apache.openjpa.kernel.PCDataImpl.load(OpenJPAStateManager,BitSet,FetchConfiguration,Object)",26,62
org.apache.openjpa.kernel.PCDataImpl.loadVersion(OpenJPAStateManager),6,12
org.apache.openjpa.kernel.PCDataImpl.loadImplData(OpenJPAStateManager),8,21
"org.apache.openjpa.kernel.PCDataImpl.loadField(OpenJPAStateManager,FieldMetaData,FetchConfiguration,Object)",34,64
"org.apache.openjpa.kernel.PCDataImpl.loadImplData(OpenJPAStateManager,FieldMetaData)",12,29
"org.apache.openjpa.kernel.PCDataImpl.loadIntermediate(OpenJPAStateManager,FieldMetaData)",14,27
org.apache.openjpa.kernel.PCDataImpl.store(OpenJPAStateManager),13,30
"org.apache.openjpa.kernel.PCDataImpl.store(OpenJPAStateManager,BitSet)",15,34
org.apache.openjpa.kernel.PCDataImpl.storeVersion(OpenJPAStateManager),6,11
org.apache.openjpa.kernel.PCDataImpl.storeImplData(OpenJPAStateManager),7,17
"org.apache.openjpa.kernel.PCDataImpl.storeField(OpenJPAStateManager,FieldMetaData)",26,63
"org.apache.openjpa.kernel.PCDataImpl.storeIntermediate(OpenJPAStateManager,FieldMetaData)",13,25
"org.apache.openjpa.kernel.PCDataImpl.storeImplData(OpenJPAStateManager,FieldMetaData,boolean)",13,42
org.apache.openjpa.kernel.PCDataImpl.newEmbeddedPCData(OpenJPAStateManager),12,20
org.apache.openjpa.kernel.PCDataImpl.getCache(),2,3
"org.apache.openjpa.audit.Auditor.audit(Broker,Collection<Audited>,Collection<Audited>,Collection<Audited>)",23,44
org.apache.openjpa.audit.Auditor.isRollbackOnError(),12,15
org.apache.openjpa.persistence.batch.exception.TestBatchLimitException.newEmf(String),31,59
org.apache.openjpa.persistence.batch.exception.TestBatchLimitException.setUp(),5,8
org.apache.openjpa.persistence.batch.exception.TestBatchLimitException.testExceptionInFirstBatch(),42,111
org.apache.openjpa.persistence.batch.exception.TestBatchLimitException.testExceptionSingleBatchedRow(),38,86
org.apache.openjpa.persistence.batch.exception.TestBatchLimitException.testExceptionInSecondBatch(),52,122
org.apache.openjpa.persistence.batch.exception.TestBatchLimitException.testExceptionInThirdBatch(),48,147
org.apache.openjpa.persistence.batch.exception.TestBatchLimitException.testSecondExceptionHasRightIndex(),45,94
org.apache.openjpa.persistence.batch.exception.TestBatchLimitException.testExceptionWithMultipleCommits(),39,106
org.apache.openjpa.persistence.batch.exception.TestBatchLimitException.verifyExDetails(Throwable),17,37
org.apache.openjpa.persistence.batch.exception.TestBatchLimitException.verifyFailedObject(Throwable),15,44
org.apache.openjpa.persistence.batch.exception.TestBatchLimitException.verifyExMsg(String),14,41
"org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.eq(Object,Object)",13,15
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.hc(Object),11,16
"org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.ConcurrentReferenceHashMap(int,int,int,float)",29,119
"org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.ConcurrentReferenceHashMap(int,int,int)",17,46
"org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.ConcurrentReferenceHashMap(int,int)",15,33
"org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.ConcurrentReferenceHashMap(int,int,Map)",22,45
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.getMaxSize(),2,4
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.setMaxSize(int),7,23
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.isFull(),4,8
"org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.overflowRemoved(Object,Object)",5,6
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.size(),16,16
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.isEmpty(),17,17
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.containsValue(Object),18,35
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.containsKey(Object),18,37
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.get(Object),20,43
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.rehash(),28,65
"org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.put(Object,Object)",41,129
"org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.newEntry(int,Object,Object,Entry)",12,48
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.removeOverflow(int),13,24
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.remove(Object),30,63
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.removeExpired(),5,5
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.keyExpired(Object),4,4
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.valueExpired(Object),4,4
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.randomEntryIndex(),7,17
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.removeRandom(),11,26
"org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.findEntry(int,boolean,boolean)",10,27
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.randomEntryIterator(),12,19
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.putAll(Map),15,30
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.clear(),25,34
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.clone(),29,54
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.keySet(),27,50
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.keySet().$1.iterator(),5,7
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.keySet().$1.size(),2,2
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.keySet().$1.contains(Object),3,4
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.keySet().$1.remove(Object),6,7
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.keySet().$1.clear(),4,4
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.values(),26,46
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.values().$2.iterator(),5,7
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.values().$2.size(),2,2
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.values().$2.contains(Object),3,4
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.values().$2.clear(),4,4
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.entrySet(),29,57
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.entrySet().$3.iterator(),5,7
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.entrySet().$3.contains(Object),10,28
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.entrySet().$3.remove(Object),15,40
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.entrySet().$3.size(),2,2
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.entrySet().$3.clear(),4,4
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.expungeStaleEntries(),22,46
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.Entry.getHash(),1,1
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.Entry.getNext(),1,1
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.Entry.setNext(Entry),2,2
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.Entry.clone(ReferenceQueue),4,5
"org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HardEntry.HardEntry(int,Object,Object,Entry)",6,14
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HardEntry.getHash(),1,2
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HardEntry.getNext(),1,1
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HardEntry.setNext(Entry),2,2
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HardEntry.clone(ReferenceQueue),14,15
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HardEntry.getKey(),2,3
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HardEntry.getValue(),2,3
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HardEntry.setValue(Object),3,11
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HardEntry.equals(Object),6,16
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HardEntry.hashCode(),3,7
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HardEntry.toString(),3,5
"org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.WeakEntry.WeakEntry(int,Object,Object,boolean,Entry,ReferenceQueue)",10,29
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.WeakEntry.getHash(),1,2
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.WeakEntry.getNext(),1,1
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.WeakEntry.setNext(Entry),2,2
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.WeakEntry.clone(ReferenceQueue),15,18
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.WeakEntry.getKey(),4,5
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.WeakEntry.getValue(),5,5
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.WeakEntry.setValue(Object),10,18
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.WeakEntry.equals(Object),6,12
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.WeakEntry.hashCode(),5,10
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.WeakEntry.toString(),3,4
"org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.SoftEntry.SoftEntry(int,Object,Object,boolean,Entry,ReferenceQueue)",10,29
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.SoftEntry.getHash(),1,2
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.SoftEntry.getNext(),1,1
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.SoftEntry.setNext(Entry),2,2
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.SoftEntry.clone(ReferenceQueue),15,18
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.SoftEntry.getKey(),4,5
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.SoftEntry.getValue(),5,5
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.SoftEntry.setValue(Object),10,18
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.SoftEntry.equals(Object),6,12
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.SoftEntry.hashCode(),5,10
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.SoftEntry.toString(),3,4
"org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HashIterator.HashIterator(int,int)",5,14
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HashIterator.hasNext(),6,22
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HashIterator.next(),10,13
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.HashIterator.remove(),19,38
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.capacity(),3,3
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashMap.loadFactor(),2,4
org.apache.openjpa.kernel.ResultPacker.ResultPacker(),9,11
"org.apache.openjpa.kernel.ResultPacker.ResultPacker(Class<>,String,Class<>)",7,13
"org.apache.openjpa.kernel.ResultPacker.ResultPacker(Class<>[],String[],Class<>)",12,25
"org.apache.openjpa.kernel.ResultPacker.ResultPacker(Class<>,Class<>[],String[],Class<>)",37,114
"org.apache.openjpa.kernel.ResultPacker.isInterface(Class<>,Class<>)",4,8
"org.apache.openjpa.kernel.ResultPacker.assertConvertable(Class<>,Class<>[],Class<>)",14,23
org.apache.openjpa.kernel.ResultPacker.pack(Object),30,69
org.apache.openjpa.kernel.ResultPacker.pack(Object[]),33,107
org.apache.openjpa.kernel.ResultPacker.packUserType(Object[]),32,95
"org.apache.openjpa.kernel.ResultPacker.findSet(String,Class<>,Field[],Method[])",36,171
org.apache.openjpa.kernel.ResultPacker.findPut(Method[]),10,22
org.apache.openjpa.persistence.query.Visitable.asExpression(AliasContext),8,8
org.apache.openjpa.persistence.query.Visitable.asProjection(AliasContext),7,9
org.apache.openjpa.persistence.query.Visitable.asJoinable(AliasContext),7,8
org.apache.openjpa.persistence.query.Visitable.getAliasHint(AliasContext),6,9
"openbook.util.PropertyHelper.filter(Map<String,Object>,String,boolean,boolean)",29,83
"openbook.util.PropertyHelper.filterArrayKeys(Map<String,Object>,String,boolean)",43,143
openbook.util.PropertyHelper.load(String),27,58
openbook.util.PropertyHelper.canFind(String),14,27
openbook.util.PropertyHelper.toMap(Properties),8,19
"openbook.util.PropertyHelper.overwriteWithSystemProperties(Map<String,Object>)",18,46
"openbook.util.PropertyHelper.getInteger(Map<String,Object>,String,int)",13,24
"openbook.util.PropertyHelper.getDouble(Map<String,Object>,String,double)",12,22
"openbook.util.PropertyHelper.getString(Map<String,Object>,String,String)",7,18
"openbook.util.PropertyHelper.getStringList(Map<String,Object>,String)",8,17
"openbook.util.PropertyHelper.getStringList(Map<String,Object>,String,List<String>)",10,24
"openbook.util.PropertyHelper.getMap(Map<String,Object>,String)",7,16
"openbook.util.PropertyHelper.getMap(Map<String,Object>,String,Map<String,String>)",18,57
openbook.util.PropertyHelper.isArray(String),19,40
openbook.util.PropertyHelper.removeArray(String),6,9
"openbook.util.PropertyHelper.getSubsectionKeys(Set<String>,String)",13,34
openbook.util.PropertyHelper.asPrefix(String),3,5
openbook.util.PropertyHelper.getPrefix(String),5,6
"openbook.util.PropertyHelper.getSection(Map<String,Object>,String)",16,34
"openbook.util.PropertyHelper.getSection(Map<String,Object>,String,boolean)",24,83
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.ClassTableJDBCSeq(),6,8
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.getIgnoreUnmapped(),9,11
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.setIgnoreUnmapped(boolean),10,14
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.setIgnoreVirtual(boolean),11,18
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.getUseAliases(),8,9
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.setUseAliases(boolean),9,12
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.getStatus(ClassMapping),6,21
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.addPrimaryKeyColumn(Table),21,49
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.getPrimaryKey(ClassMapping),4,8
"org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.getKey(ClassMapping,boolean)",11,28
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.main(String[]),66,114
org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.main(String[]).$1.run(Options),12,19
"org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.run(JDBCConfiguration,String[],Options)",17,29
"org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq.run(JDBCConfiguration,String[],String,MappingRepository,ClassLoader)",58,181
org.apache.openjpa.util.MetaDataException.MetaDataException(),5,5
org.apache.openjpa.util.MetaDataException.MetaDataException(String),7,8
org.apache.openjpa.util.MetaDataException.MetaDataException(Message),7,8
"org.apache.openjpa.util.MetaDataException.MetaDataException(Message,Throwable)",9,11
org.apache.openjpa.util.MetaDataException.getSubtype(),2,2
org.apache.openjpa.persistence.TestXMLPersistenceMetaDataParser.setUp(),4,7
org.apache.openjpa.persistence.TestXMLPersistenceMetaDataParser.getPersistenceUnitName(),7,8
org.apache.openjpa.persistence.TestXMLPersistenceMetaDataParser.testManyToOneLazyFetch(),32,188
org.apache.openjpa.persistence.TestXMLPersistenceMetaDataParser.testManyToOneEagerFetch(),22,95
org.apache.openjpa.persistence.TestXMLPersistenceMetaDataParser.printArrayList(ArrayList),7,14
"org.apache.openjpa.persistence.TestXMLPersistenceMetaDataParser.compareselectSQLs(List<String>,List<String>)",19,61
"org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.PreparedStatementManagerImpl(JDBCStore,Connection)",14,29
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.getExceptions(),3,4
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.flush(RowImpl),12,21
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.flushInternal(RowImpl),7,12
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.flushAndUpdate(RowImpl),53,148
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.hasGeneratedKey(ClassMapping),14,29
"org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.populateAutoAssignCols(PreparedStatement,Column[],DBIdentifier[],RowImpl)",36,74
"org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.populateAutoAssignCols(PreparedStatement,Column[],String[],RowImpl)",20,39
"org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.setObjectId(List,Column[],String[],RowImpl)",17,32
"org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.setObjectId(List,Column[],DBIdentifier[],RowImpl)",38,68
"org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.getGeneratedKeys(PreparedStatement,String[])",22,32
"org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.getGeneratedKeys(PreparedStatement,DBIdentifier[])",21,35
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.getAutoAssignColumns(RowImpl),10,24
"org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.getAutoAssignColNames(Column[],RowImpl)",15,49
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.flush(),1,1
"org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.executeUpdate(PreparedStatement,String,RowImpl)",16,23
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.prepareStatement(String),12,19
"org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.prepareStatement(String,String[])",23,46
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.logSQLWarnings(PreparedStatement),13,25
org.apache.openjpa.jdbc.kernel.PreparedStatementManagerImpl.logSQLWarnings(Statement),12,28
"org.apache.openjpa.datacache.TypesChangedEvent.TypesChangedEvent(Object,Collection)",11,20
org.apache.openjpa.datacache.TypesChangedEvent.getTypes(),3,5
org.apache.openjpa.persistence.access.xml.XMLPropAccess2.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLPropAccess2.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLPropAccess2.setVersion(int),2,5
org.apache.openjpa.persistence.access.xml.XMLPropAccess2.getVersion(),1,2
org.apache.openjpa.persistence.access.xml.XMLPropAccess2.setStrProp(String),6,8
org.apache.openjpa.persistence.access.xml.XMLPropAccess2.getStrProp(),4,5
org.apache.openjpa.persistence.access.xml.XMLPropAccess2.equals(Object),7,19
org.apache.openjpa.persistence.callbacks.DuplicateListenerEntity.getId(),0,0
org.apache.openjpa.persistence.callbacks.DuplicateListenerEntity.setId(long),1,1
org.apache.openjpa.persistence.callbacks.DuplicateListenerEntity.getValue(),1,2
org.apache.openjpa.persistence.callbacks.DuplicateListenerEntity.setValue(int),2,5
org.apache.openjpa.util.ProxyBean.newInstance(Object),7,10
"org.apache.openjpa.jdbc.meta.VersionMappingInfo.getColumns(Version,Column[],boolean)",18,44
"org.apache.openjpa.jdbc.meta.VersionMappingInfo.getMultiTableColumns(Version,Column[],boolean)",49,182
"org.apache.openjpa.jdbc.meta.VersionMappingInfo.getIndex(Version,Column[],boolean)",15,33
org.apache.openjpa.jdbc.meta.VersionMappingInfo.syncWith(Version),28,73
org.apache.openjpa.jdbc.meta.VersionMappingInfo.spansMultipleTables(Column[]),16,28
"org.apache.openjpa.jdbc.meta.VersionMappingInfo.getSingleTable(Version,Column[])",12,30
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getTable(),15,34
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setTable(String),24,54
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setTableName(String),11,17
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getSequenceColumn(),9,17
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setSequenceColumn(String),11,23
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getPrimaryKeyColumn(),8,15
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getPrimaryKeyColumnIdentifier(),5,7
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setPrimaryKeyColumn(String),10,23
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getAllocate(),12,16
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setAllocate(int),13,19
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getInitialValue(),6,10
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setInitialValue(int),7,17
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setUniqueColumns(String),24,42
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getUniqueColumns(),11,15
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setIncrement(int),11,15
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getConfiguration(),3,4
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setConfiguration(Configuration),6,15
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.startConfiguration(),2,2
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.endConfiguration(),3,3
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.addSchema(ClassMapping,SchemaGroup)",29,115
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.nextInternal(JDBCStore,ClassMapping)",25,48
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.currentInternal(JDBCStore,ClassMapping)",21,44
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.allocateInternal(int,JDBCStore,ClassMapping)",14,31
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getStatus(ClassMapping),15,36
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.addPrimaryKeyColumn(Table),18,46
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getPrimaryKey(ClassMapping),7,10
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.buildTable(),41,181
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.allocateSequence(JDBCStore,ClassMapping,Status,int,boolean)",34,72
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.insertSequence(ClassMapping,Connection)",54,134
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getSequence(ClassMapping,Connection)",50,131
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setSequence(ClassMapping,Status,int,boolean,Connection)",59,177
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.resolveTableName(ClassMapping,Table)",10,23
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.resolveTableIdentifier(ClassMapping,Table)",9,50
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.refreshTable(),19,32
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.dropTable(),18,33
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.main(String[]),70,116
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.main(String[]).$1.run(Options),12,19
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.run(JDBCConfiguration,String[],Options)",17,29
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.run(JDBCConfiguration,String[],String)",46,132
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.prepareStatement(Connection,SQLBuffer)",15,23
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.executeUpdate(JDBCConfiguration,Connection,PreparedStatement,SQLBuffer,int)",20,27
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.executeQuery(JDBCConfiguration,Connection,PreparedStatement,SQLBuffer)",21,28
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getSequence(ResultSet,DBDictionary)",13,18
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setUniqueConstraintName(String),6,16
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.setUniqueConstraintName(DBIdentifier),5,14
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getUniqueConstraintName(),4,8
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.getUniqueConstraintIdentifier(),4,7
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.AllocateSequenceRunnable.AllocateSequenceRunnable(JDBCStore,ClassMapping,Status,int,boolean)",11,28
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.AllocateSequenceRunnable.run(),62,145
"org.apache.openjpa.jdbc.kernel.TableJDBCSeq.CurrentSequenceRunnable.CurrentSequenceRunnable(JDBCStore,ClassMapping)",6,12
org.apache.openjpa.jdbc.kernel.TableJDBCSeq.CurrentSequenceRunnable.run(),33,60
org.apache.openjpa.persistence.callbacks.TestMultiEmEntityListeners.setUp(),11,14
org.apache.openjpa.persistence.callbacks.TestMultiEmEntityListeners.testListenerInEntity1(),19,142
"org.apache.openjpa.persistence.callbacks.TestMultiEmEntityListeners.assertListenerInEntityStatus(ListenerInEntity,int,int,int,int,int,int,int)",11,61
org.apache.openjpa.persistence.callbacks.TestMultiEmEntityListeners.testAddListenerEntity1(),23,200
"org.apache.openjpa.persistence.callbacks.TestMultiEmEntityListeners.assertAddListenerEntityStatus(PerInstanceListener,int,int,int,int,int,int,int,int,int,int)",12,46
org.apache.openjpa.lib.conf.Configurable.setConfiguration(Configuration),8,9
org.apache.openjpa.lib.conf.Configurable.startConfiguration(),7,8
org.apache.openjpa.lib.conf.Configurable.endConfiguration(),6,7
"org.apache.openjpa.jdbc.kernel.exps.EqualTypeExpression.EqualTypeExpression(Val,Val)",8,13
"org.apache.openjpa.jdbc.kernel.exps.EqualTypeExpression.getSubClassMapping(Val,Val,ExpContext)",15,43
"org.apache.openjpa.jdbc.kernel.exps.EqualTypeExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",16,36
"org.apache.openjpa.jdbc.kernel.exps.EqualTypeExpression.appendTo(Select,ExpContext,BinaryOpExpState,SQLBuffer,boolean,boolean)",34,147
"org.apache.openjpa.jdbc.kernel.exps.EqualTypeExpression.processVerticalTypeAppend(Select,Val,Val,ExpContext,SQLBuffer)",32,75
mapping.BuildUTF8SchemaPC.BuildUTF8SchemaPC(),3,3
mapping.BuildUTF8SchemaPC.BuildUTF8SchemaPC(String),6,8
mapping.BuildUTF8SchemaPC.getStringField(),2,5
mapping.BuildUTF8SchemaPC.setStringField(String),4,8
mapping.BuildUTF8SchemaPC.getId(),0,0
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.MapEntry(Val,Val)",9,18
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.EntryExpState.EntryExpState(ExpState,ExpState)",4,10
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",9,11
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",9,20
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.groupBy(Select,ExpContext,ExpState)",5,6
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.initialize(Select,ExpContext,int)",10,26
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.load(ExpContext,ExpState,Result)",13,36
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.orderBy(Select,ExpContext,ExpState,boolean)",6,7
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.select(Select,ExpContext,ExpState,boolean)",7,13
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.selectColumns(Select,ExpContext,ExpState,boolean)",11,30
org.apache.openjpa.jdbc.kernel.exps.MapEntry.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.MapEntry.getType(),3,3
org.apache.openjpa.jdbc.kernel.exps.MapEntry.setImplicitType(Class),3,4
org.apache.openjpa.jdbc.kernel.exps.MapEntry.setMetaData(ClassMetaData),3,8
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.Entry<K,V>.Entry(K,V)",3,3
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.Entry<K,V>.getKey()",1,2
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.Entry<K,V>.getValue()",1,2
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.Entry<K,V>.setValue(V)",5,5
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.Entry<K,V>.equals(Object)",6,18
"org.apache.openjpa.jdbc.kernel.exps.MapEntry.Entry<K,V>.hashCode()",4,10
org.apache.openjpa.persistence.conf.Person.Person(),1,1
org.apache.openjpa.persistence.conf.Person.Person(int),2,2
"org.apache.openjpa.persistence.conf.Person.Person(int,String)",4,7
org.apache.openjpa.persistence.conf.Person.getId(),0,0
org.apache.openjpa.persistence.conf.Person.setId(int),1,1
org.apache.openjpa.persistence.conf.Person.getVersion(),1,2
org.apache.openjpa.persistence.conf.Person.setVersion(int),2,5
org.apache.openjpa.persistence.conf.Person.getName(),2,3
org.apache.openjpa.persistence.conf.Person.setName(String),3,6
org.apache.openjpa.validation.ValidationUnavailableException.ValidationUnavailableException(String),5,6
"org.apache.openjpa.validation.ValidationUnavailableException.ValidationUnavailableException(String,RuntimeException)",6,8
"org.apache.openjpa.validation.ValidationUnavailableException.ValidationUnavailableException(String,RuntimeException,boolean)",8,12
org.apache.openjpa.validation.ValidationUnavailableException.getType(),2,2
org.apache.openjpa.persistence.compat.EntityA.getName(),2,3
org.apache.openjpa.persistence.compat.EntityA.setName(String),3,6
org.apache.openjpa.persistence.criteria.Dependent.getCurStatusId(),2,4
org.apache.openjpa.persistence.criteria.Dependent.setCurStatusId(int),3,9
org.apache.openjpa.persistence.criteria.Dependent.getId(),1,1
org.apache.openjpa.persistence.criteria.Dependent.setId(DependentId),2,2
org.apache.openjpa.persistence.criteria.Dependent.getEmp(),2,3
org.apache.openjpa.persistence.criteria.Dependent.setEmp(Employee),3,6
org.apache.openjpa.persistence.criteria.Dependent.getEndDate(),1,3
org.apache.openjpa.persistence.criteria.Dependent.setEndDate(Date),2,6
"org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.CriteriaQueryImpl(MetamodelImpl,Class<T>)",12,17
"org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.CriteriaQueryImpl(MetamodelImpl,SubqueryImpl<T>)",19,35
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getDelegator(),5,7
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getMetamodel(),8,10
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getContexts(),4,7
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.distinct(boolean),4,9
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getOrderList(),10,15
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getSelection(),5,10
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.multiselect(Selection<>),49,150
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.registerParameter(ParameterExpressionImpl<>),14,22
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getParameters(),11,18
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getSelectionList(),7,15
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.groupBy(Expression<>),6,8
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.groupBy(List<Expression<>>),6,9
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.having(Expression<Boolean>),6,7
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.having(Predicate),6,10
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.orderBy(Order),5,5
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.orderBy(List<Order>),5,6
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.select(Selection<>),18,33
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.where(Expression<Boolean>),8,10
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.where(Predicate),7,10
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.from(EntityType<X>),6,16
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.from(Class<X>),11,19
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getGroupList(),4,5
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getGroupRestriction(),3,3
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getRestriction(),3,3
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getRoots(),5,6
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getRoot(),3,5
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getRoot(boolean),5,10
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.addRoot(RootImpl<>),7,14
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.isDistinct(),4,6
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.subquery(Class<U>),7,17
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getParameterTypes(),18,28
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getQueryExpressions(ExpressionFactory),18,33
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.assertRoot(),8,10
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.assertSelection(),8,9
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.setContexts(Stack<Context>),5,9
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getAncestor(),11,34
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getAliases(),9,15
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.ctx(),6,9
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getAlias(Selection<>),14,44
"org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.registerVariable(Selection<>,Value,Value)",28,124
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.isRegistered(Selection<>),9,16
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getRegisteredVariable(Selection<>),10,21
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getRegisteredValue(Selection<>),9,21
"org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.registerRoot(Root<>,Value)",24,49
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getRegisteredRootVariable(Root<>),10,27
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getDelegatorParent(),7,24
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.getResultType(),2,3
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.multiselect(List<Selection<>>),7,12
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.isMultiselect(),5,6
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.isDefaultProjection(),14,23
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.invalidateCompilation(),4,4
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.compile(),20,27
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.collectParameters(CriteriaExpressionVisitor),13,24
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.toCQL(),9,16
"org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.render(StringBuilder,Set<Root<>>,List<Join<>>)",19,53
"org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.renderList(StringBuilder,String,Collection<>)",14,25
"org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.renderJoins(StringBuilder,Collection<Join<>>)",12,25
"org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.renderRoots(StringBuilder,Collection<Root<>>)",14,28
"org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.renderFetches(StringBuilder,Set<Fetch>)",11,17
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.toString(),10,16
org.apache.openjpa.persistence.criteria.CriteriaQueryImpl<T>.equals(Object),3,5
org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.map(boolean),39,116
org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.initialize(),15,36
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",28,57
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",28,57
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",9,14
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.supportsSelect(Select,int,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",15,26
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.select(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",21,38
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",24,46
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",34,97
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.toDataStoreValue(Object,JDBCStore)",10,18
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.appendIsNull(SQLBuffer,Select,Joins)",17,36
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.appendIsNotNull(SQLBuffer,Select,Joins)",17,44
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.join(Joins,boolean)",5,11
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.joinRelation(Joins,boolean,boolean)",10,14
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.loadProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)",16,27
org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.isVersionable(),6,9
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.where(OpenJPAStateManager,JDBCStore,RowManager,Object)",16,29
org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.getFieldIndex(),2,4
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.getPrimaryKeyValue(Result,Column[],ForeignKey,JDBCStore,Joins)",31,96
org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.getColumns(),3,3
org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.getResultArguments(),4,4
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.getJoinValue(Object,Column,JDBCStore)",16,35
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.getJoinValue(OpenJPAStateManager,Column,JDBCStore)",12,17
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.setAutoAssignedValue(OpenJPAStateManager,JDBCStore,Column,Object)",29,77
org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.getColumnIO(),1,2
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.toEmbeddedDataStoreValue(Object,JDBCStore)",18,38
org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.toEmbeddedObjectValue(Object),8,14
"org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy.loadEmbedded(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Object)",18,43
org.apache.openjpa.persistence.query.BinaryFunctionalOperator.BinaryFunctionalOperator(String),5,7
org.apache.openjpa.persistence.query.BinaryFunctionalOperator.toString(),2,3
"org.apache.openjpa.persistence.query.LikeExpression.LikeExpression(Expression,Expression,Object)",8,16
"org.apache.openjpa.persistence.query.LikeExpression.LikeExpression(Expression,Expression)",7,13
org.apache.openjpa.persistence.query.LikeExpression.asExpression(AliasContext),11,15
org.apache.openjpa.conf.TestDynamicConfiguration.setUp(),3,4
org.apache.openjpa.conf.TestDynamicConfiguration.testConfigurationIsEqualByValueAndHashCode(),18,68
org.apache.openjpa.conf.TestDynamicConfiguration.testConfigurationIsReadOnlyAfterFirstConstruction(),10,17
org.apache.openjpa.conf.TestDynamicConfiguration.testNonDynamicValuesCanNotBeChanged(),24,39
org.apache.openjpa.conf.TestDynamicConfiguration.testDynamicValuesCanBeChanged(),13,25
org.apache.openjpa.conf.TestDynamicConfiguration.testDynamicValuesAreCorrectlySet(),14,40
org.apache.openjpa.conf.TestDynamicConfiguration.testDynamicChangeDoesNotChangeHashCode(),14,33
org.apache.openjpa.conf.TestDynamicConfiguration.testClassMetaDataRecognizesDataCacheTimeoutValueChange(),26,73
org.apache.openjpa.jdbc.meta.strats.NoneVersionStrategy.getInstance(),5,7
org.apache.openjpa.jdbc.meta.strats.NoneVersionStrategy.NoneVersionStrategy(),5,5
org.apache.openjpa.jdbc.meta.strats.NoneVersionStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.NoneVersionStrategy.setVersion(Version),3,4
org.apache.openjpa.enhance.TestSimpleUnenhancedQuery.setUp(),17,24
org.apache.openjpa.enhance.TestSimpleUnenhancedQuery.testExtentQuery(),13,17
org.apache.openjpa.jdbc.meta.strats.AbstractDiscriminatorStrategy.setDiscriminator(Discriminator),10,15
"org.apache.openjpa.jdbc.meta.strats.AbstractDiscriminatorStrategy.select(Select,ClassMapping)",3,5
org.apache.openjpa.jdbc.meta.strats.AbstractDiscriminatorStrategy.loadSubclasses(JDBCStore),28,40
"org.apache.openjpa.jdbc.meta.strats.AbstractDiscriminatorStrategy.getClass(JDBCStore,ClassMapping,Result)",10,14
"org.apache.openjpa.jdbc.meta.strats.AbstractDiscriminatorStrategy.hasClassConditions(ClassMapping,boolean)",4,4
"org.apache.openjpa.jdbc.meta.strats.AbstractDiscriminatorStrategy.getClassConditions(Select,Joins,ClassMapping,boolean)",9,10
org.apache.openjpa.jdbc.meta.strats.LRSCollectionFieldStrategy.getFieldMapping(),3,7
org.apache.openjpa.jdbc.meta.strats.LRSCollectionFieldStrategy.getIndependentElementMappings(boolean),18,28
org.apache.openjpa.jdbc.meta.strats.LRSCollectionFieldStrategy.getJoinForeignKey(ClassMapping),11,18
org.apache.openjpa.jdbc.meta.strats.LRSCollectionFieldStrategy.getElementColumns(ClassMapping),11,16
"org.apache.openjpa.jdbc.meta.strats.LRSCollectionFieldStrategy.selectElement(Select,ClassMapping,JDBCStore,JDBCFetchConfiguration,int,Joins)",22,34
"org.apache.openjpa.jdbc.meta.strats.LRSCollectionFieldStrategy.loadElement(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",20,28
"org.apache.openjpa.jdbc.meta.strats.LRSCollectionFieldStrategy.joinElementRelation(Joins,ClassMapping)",12,22
"org.apache.openjpa.persistence.query.UnaryOperatorExpression.UnaryOperatorExpression(Expression,UnaryFunctionalOperator)",4,7
org.apache.openjpa.persistence.query.UnaryOperatorExpression.getOperand(),2,2
org.apache.openjpa.persistence.query.UnaryOperatorExpression.getOperator(),3,4
org.apache.openjpa.persistence.query.UnaryOperatorExpression.distinct(),2,4
org.apache.openjpa.persistence.query.UnaryOperatorExpression.asExpression(AliasContext),6,8
org.apache.openjpa.persistence.query.UnaryOperatorExpression.asProjection(AliasContext),6,12
org.apache.openjpa.jdbc.schema.SchemaFactory.readSchema(),6,8
org.apache.openjpa.jdbc.schema.SchemaFactory.storeSchema(SchemaGroup),8,13
org.apache.openjpa.integration.validation.TestValidationGroups.testDefaultValidationGroup(),9,14
org.apache.openjpa.integration.validation.TestValidationGroups.testDefaultValidationGroupFlush(),9,15
org.apache.openjpa.integration.validation.TestValidationGroups.testDefaultPreRemove(),10,16
org.apache.openjpa.integration.validation.TestValidationGroups.testDefaultPreRemoveFlush(),10,17
org.apache.openjpa.integration.validation.TestValidationGroups.testSpecifiedDefaultPreRemove(),5,8
org.apache.openjpa.integration.validation.TestValidationGroups.testSpecifiedDefaultPreRemoveFlush(),8,16
org.apache.openjpa.integration.validation.TestValidationGroups.testPersistNoValidationGroup(),38,82
org.apache.openjpa.integration.validation.TestValidationGroups.testUpdateNoValidationGroup(),36,94
org.apache.openjpa.integration.validation.TestValidationGroups.testUpdateOnlyValidationGroup(),42,109
org.apache.openjpa.integration.validation.TestValidationGroups.testPersistOnlyValidationGroup(),42,125
org.apache.openjpa.integration.validation.TestValidationGroups.testNonDefaultValidationGroup(),8,12
org.apache.openjpa.integration.validation.TestValidationGroups.testNonDefaultValidationGroupFlush(),8,13
org.apache.openjpa.integration.validation.TestValidationGroups.testPesistenceXMLMultipleValidationGroups(),23,46
org.apache.openjpa.integration.validation.TestValidationGroups.testMultipleValidationGroups(),35,97
org.apache.openjpa.integration.validation.TestValidationGroups.verifyMultipleValidationGroups(OpenJPAEntityManagerFactorySPI),40,153
org.apache.openjpa.integration.validation.TestValidationGroups.testNoValidationGroups(),47,133
org.apache.openjpa.integration.validation.TestValidationGroups.verifyDefaultValidationGroup(boolean),48,168
org.apache.openjpa.integration.validation.TestValidationGroups.verifyNonDefaultValidationGroup(boolean),56,267
org.apache.openjpa.integration.validation.TestValidationGroups.verifyDefaultPreRemove(boolean),46,128
org.apache.openjpa.integration.validation.TestValidationGroups.verifySpecifiedDefaultPreRemove(boolean),52,139
"org.apache.openjpa.integration.validation.TestValidationGroups.checkCVE(ConstraintViolationException,String)",21,54
org.apache.openjpa.integration.validation.TestValidationGroups.getLog(OpenJPAEntityManagerFactorySPI),14,19
org.apache.openjpa.instrumentation.QCInstrument.getName(),2,3
org.apache.openjpa.instrumentation.QCInstrument.initialize(),12,19
org.apache.openjpa.instrumentation.QCInstrument.start(),3,3
org.apache.openjpa.instrumentation.QCInstrument.stop(),3,3
org.apache.openjpa.lib.conf.DoubleValue.DoubleValue(String),3,4
org.apache.openjpa.lib.conf.DoubleValue.getValueType(),2,2
org.apache.openjpa.lib.conf.DoubleValue.set(double),5,13
org.apache.openjpa.lib.conf.DoubleValue.get(),2,3
org.apache.openjpa.lib.conf.DoubleValue.getInternalString(),3,6
org.apache.openjpa.lib.conf.DoubleValue.setInternalString(String),7,13
org.apache.openjpa.lib.conf.DoubleValue.setInternalObject(Object),5,10
"org.apache.openjpa.json.JSONObject.JSONObject(String,Object,boolean)",9,17
"org.apache.openjpa.json.JSONObject.set(String,Object)",6,8
org.apache.openjpa.json.JSONObject.write(PrintWriter),5,7
org.apache.openjpa.json.JSONObject.toString(),1,4
org.apache.openjpa.json.JSONObject.asString(int),21,61
"org.apache.openjpa.json.JSONObject.encodeField(String,Object,int)",16,41
org.apache.openjpa.json.JSONObject.newIndent(int),8,14
org.apache.openjpa.json.JSONObject.ior(),5,8
org.apache.openjpa.json.JSONObject.quoteFieldName(String),6,13
"org.apache.openjpa.json.JSONObject.quoteFieldValue(Object,int)",16,42
org.apache.openjpa.json.JSONObject.quoted(Object),7,15
org.apache.openjpa.json.JSONObject.Array.add(Object),2,3
org.apache.openjpa.json.JSONObject.Array.toString(),1,4
org.apache.openjpa.json.JSONObject.Array.asString(int),13,49
"org.apache.openjpa.json.JSONObject.KVMap.put(Object,Object)",2,3
org.apache.openjpa.json.JSONObject.KVMap.toString(),1,4
org.apache.openjpa.json.JSONObject.KVMap.asString(int),19,79
org.apache.openjpa.json.JSONObject.main(String[]),25,64
org.apache.openjpa.enhance.TestUnenhancedFieldAccessPrimitiveWrapper.getUnenhancedClass(),6,8
org.apache.openjpa.enhance.TestUnenhancedFieldAccessPrimitiveWrapper.newUnenhancedInstance(),7,9
org.apache.openjpa.enhance.TestUnenhancedFieldAccessPrimitiveWrapper.getUnenhancedSubclass(),7,10
org.apache.openjpa.enhance.TestUnenhancedFieldAccessPrimitiveWrapper.newUnenhancedSubclassInstance(),8,11
org.apache.openjpa.enhance.TestUnenhancedFieldAccessPrimitiveWrapper.isFieldAccessTest(),3,3
org.apache.openjpa.persistence.datacache.TestStatistics.setUp(),10,17
org.apache.openjpa.persistence.datacache.TestStatistics.testDefaultSettings(),25,35
org.apache.openjpa.persistence.datacache.TestStatistics.testSimpleFind(),25,59
org.apache.openjpa.persistence.datacache.TestStatistics.testFind(),32,154
org.apache.openjpa.persistence.datacache.TestStatistics.testMultipleUnits(),25,69
org.apache.openjpa.persistence.datacache.TestStatistics.testPersist(),23,72
org.apache.openjpa.persistence.datacache.TestStatistics.testRefresh(),19,37
org.apache.openjpa.persistence.datacache.TestStatistics.testMerge(),29,53
"org.apache.openjpa.persistence.datacache.TestStatistics.createData(boolean,boolean)",12,35
org.apache.openjpa.persistence.datacache.TestStatistics.snapshot(),8,16
"org.apache.openjpa.persistence.datacache.TestStatistics.assertion(String,int,int,int,CacheStatistics)",24,73
"org.apache.openjpa.persistence.datacache.TestStatistics.assertDelta(long[],long[],long,long,long)",7,25
"org.apache.openjpa.persistence.datacache.TestStatistics.assertCached(Object,Object,boolean,boolean)",10,22
"org.apache.openjpa.persistence.datacache.TestStatistics.print(String,CacheStatistics)",13,20
org.apache.openjpa.lib.util.ReferenceHashSet.$1.toString(),7,8
org.apache.openjpa.lib.util.ReferenceHashSet.ReferenceHashSet(int),17,61
org.apache.openjpa.lib.util.ReferenceHashSet.add(Object),4,6
org.apache.openjpa.lib.util.ReferenceHashSet.addAll(Collection),4,6
org.apache.openjpa.lib.util.ReferenceHashSet.clear(),1,1
org.apache.openjpa.lib.util.ReferenceHashSet.contains(Object),4,6
org.apache.openjpa.lib.util.ReferenceHashSet.containsAll(Collection),4,6
org.apache.openjpa.lib.util.ReferenceHashSet.isEmpty(),2,3
org.apache.openjpa.lib.util.ReferenceHashSet.iterator(),2,4
org.apache.openjpa.lib.util.ReferenceHashSet.remove(Object),4,6
org.apache.openjpa.lib.util.ReferenceHashSet.removeAll(Collection),4,6
org.apache.openjpa.lib.util.ReferenceHashSet.retainAll(Collection),4,6
org.apache.openjpa.lib.util.ReferenceHashSet.size(),2,3
org.apache.openjpa.lib.util.ReferenceHashSet.toArray(),3,4
org.apache.openjpa.lib.util.ReferenceHashSet.toArray(Object[]),4,7
org.apache.openjpa.lib.util.ReferenceHashSet.hashCode(),3,5
org.apache.openjpa.lib.util.ReferenceHashSet.equals(Object),6,17
org.apache.openjpa.jdbc.conf.FetchModeValue.FetchModeValue(String),10,13
org.apache.openjpa.jdbc.kernel.M2MBiDepartment.getEmployees(),3,4
org.apache.openjpa.jdbc.kernel.M2MBiDepartment.setEmployees(Collection<M2MBiEmployee>),4,7
org.apache.openjpa.jdbc.kernel.M2MBiDepartment.getDeptid(),2,3
org.apache.openjpa.jdbc.kernel.M2MBiDepartment.setDeptid(String),3,6
org.apache.openjpa.jdbc.kernel.M2MBiDepartment.getVersion(),1,2
org.apache.openjpa.jdbc.kernel.M2MBiDepartment.setVersion(int),2,5
org.apache.openjpa.jdbc.kernel.M2MBiDepartment.getCostCode(),3,5
org.apache.openjpa.jdbc.kernel.M2MBiDepartment.setCostCode(String),4,10
org.apache.openjpa.jdbc.kernel.M2MBiDepartment.getName(),2,3
org.apache.openjpa.jdbc.kernel.M2MBiDepartment.setName(String),3,6
"org.apache.openjpa.persistence.jest.PrototypeFactory<K,T>.register(K,Class<>)",6,14
"org.apache.openjpa.persistence.jest.PrototypeFactory<K,T>.newInstance(K,Object)",17,44
"org.apache.openjpa.persistence.jest.PrototypeFactory<K,T>.getRegisteredKeys()",9,16
"org.apache.openjpa.persistence.jest.PrototypeFactory<K,T>.newInstance(Class<>,Object)",9,15
"org.apache.openjpa.persistence.jest.PrototypeFactory<K,T>.getConstructorParameterTypes(Object)",6,18
"org.apache.openjpa.persistence.jest.PrototypeFactory<K,T>.findConstructor(Class<>,Class<>[])",22,54
org.apache.openjpa.meta.TestGetMetaData.setUp(),6,7
org.apache.openjpa.meta.TestGetMetaData.testGetMetaData(),9,17
org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory.getInstance(ConfigurationProvider),17,45
org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory.newInstance(ConfigurationProvider),39,92
"org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory.AbstractStoreBrokerFactory(OpenJPAConfiguration,String,String,String)",12,28
org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory.getProperties(),6,13
org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory.newStoreManager(),5,11
"org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory.createStoreManager(String,String)",22,44
org.apache.openjpa.meta.MetaDataRepository.MetaDataRepository(),15,27
org.apache.openjpa.meta.MetaDataRepository.getConfiguration(),4,6
org.apache.openjpa.meta.MetaDataRepository.getLog(),2,5
org.apache.openjpa.meta.MetaDataRepository.getMetaDataFactory(),5,9
org.apache.openjpa.meta.MetaDataRepository.setMetaDataFactory(MetaDataFactory),7,15
org.apache.openjpa.meta.MetaDataRepository.getValidate(),8,12
org.apache.openjpa.meta.MetaDataRepository.setValidate(int),9,15
"org.apache.openjpa.meta.MetaDataRepository.setValidate(int,boolean)",11,24
org.apache.openjpa.meta.MetaDataRepository.getResolve(),9,13
org.apache.openjpa.meta.MetaDataRepository.setResolve(int),10,16
"org.apache.openjpa.meta.MetaDataRepository.setResolve(int,boolean)",11,25
org.apache.openjpa.meta.MetaDataRepository.getSourceMode(),10,18
org.apache.openjpa.meta.MetaDataRepository.setSourceMode(int),11,21
"org.apache.openjpa.meta.MetaDataRepository.setSourceMode(int,boolean)",12,30
org.apache.openjpa.meta.MetaDataRepository.getPreload(),8,9
org.apache.openjpa.meta.MetaDataRepository.setPreload(boolean),9,10
org.apache.openjpa.meta.MetaDataRepository.preload(),78,189
"org.apache.openjpa.meta.MetaDataRepository.getMetaData(Class<>,ClassLoader,boolean)",15,42
"org.apache.openjpa.meta.MetaDataRepository.getMetaDataInternal(Class<>,ClassLoader,boolean)",33,100
"org.apache.openjpa.meta.MetaDataRepository.getMetaData(String,ClassLoader,boolean)",71,173
org.apache.openjpa.meta.MetaDataRepository.throwNoRegisteredAlias(String),12,31
org.apache.openjpa.meta.MetaDataRepository.getClosestAliasName(String),12,23
org.apache.openjpa.meta.MetaDataRepository.getAliasNames(),8,15
org.apache.openjpa.meta.MetaDataRepository.getAliasNamesInternal(),14,23
"org.apache.openjpa.meta.MetaDataRepository.getMetaDataInternal(Class<>,ClassLoader)",84,203
org.apache.openjpa.meta.MetaDataRepository.toModeString(int),11,41
org.apache.openjpa.meta.MetaDataRepository.prepareMapping(ClassMetaData),21,36
org.apache.openjpa.meta.MetaDataRepository.resolve(ClassMetaData),58,137
org.apache.openjpa.meta.MetaDataRepository.resolveMeta(ClassMetaData),41,141
org.apache.openjpa.meta.MetaDataRepository.loadMapping(ClassMetaData),28,75
org.apache.openjpa.meta.MetaDataRepository.preMapping(ClassMetaData),27,50
org.apache.openjpa.meta.MetaDataRepository.resolveMapping(ClassMetaData),20,49
"org.apache.openjpa.meta.MetaDataRepository.processBuffer(ClassMetaData,List<ClassMetaData>,int)",54,131
org.apache.openjpa.meta.MetaDataRepository.getMetaDatas(),9,15
org.apache.openjpa.meta.MetaDataRepository.getMetaDatasInternal(),25,66
org.apache.openjpa.meta.MetaDataRepository.getCachedMetaData(Class<>),8,14
org.apache.openjpa.meta.MetaDataRepository.addMetaData(Class<>),13,21
"org.apache.openjpa.meta.MetaDataRepository.addMetaData(Class<>,int)",13,24
"org.apache.openjpa.meta.MetaDataRepository.addMetaData(Class<>,int,boolean)",23,49
"org.apache.openjpa.meta.MetaDataRepository.metasPutInternal(Class<>,ClassMetaData)",11,22
org.apache.openjpa.meta.MetaDataRepository.newClassMetaData(Class<>),6,11
org.apache.openjpa.meta.MetaDataRepository.newClassMetaDataArray(int),8,14
"org.apache.openjpa.meta.MetaDataRepository.newFieldMetaData(String,Class<>,ClassMetaData)",10,22
org.apache.openjpa.meta.MetaDataRepository.newFieldMetaDataArray(int),9,18
org.apache.openjpa.meta.MetaDataRepository.newXMLClassMetaDataArray(int),9,18
org.apache.openjpa.meta.MetaDataRepository.newEmbeddedClassMetaData(ValueMetaData),8,16
org.apache.openjpa.meta.MetaDataRepository.newValueMetaData(FieldMetaData),9,19
"org.apache.openjpa.meta.MetaDataRepository.newOrder(FieldMetaData,String,boolean)",29,83
"org.apache.openjpa.meta.MetaDataRepository.getOrderByField(ClassMetaData,String)",11,52
"org.apache.openjpa.meta.MetaDataRepository.newValueOrder(FieldMetaData,boolean)",8,12
"org.apache.openjpa.meta.MetaDataRepository.newRelatedFieldOrder(FieldMetaData,FieldMetaData,boolean)",10,20
org.apache.openjpa.meta.MetaDataRepository.newOrderArray(int),3,6
org.apache.openjpa.meta.MetaDataRepository.removeMetaData(ClassMetaData),9,19
org.apache.openjpa.meta.MetaDataRepository.removeMetaData(Class<>),10,21
org.apache.openjpa.meta.MetaDataRepository.removeMetaDataInternal(Class<>),8,17
"org.apache.openjpa.meta.MetaDataRepository.addDeclaredInterfaceImpl(ClassMetaData,Class<>)",11,25
"org.apache.openjpa.meta.MetaDataRepository.addDeclaredInterfaceImplInternal(ClassMetaData,Class<>)",19,43
"org.apache.openjpa.meta.MetaDataRepository.setInterfaceImpl(ClassMetaData,Class<>)",8,20
"org.apache.openjpa.meta.MetaDataRepository.setInterfaceImplInternal(ClassMetaData,Class<>)",24,60
org.apache.openjpa.meta.MetaDataRepository.getImplGenerator(),3,6
"org.apache.openjpa.meta.MetaDataRepository.getMetaData(Object,ClassLoader,boolean)",44,138
org.apache.openjpa.meta.MetaDataRepository.resolveIdentityClass(Object),46,87
"org.apache.openjpa.meta.MetaDataRepository.getImplementorMetaDatas(Class<>,ClassLoader,boolean)",32,91
"org.apache.openjpa.meta.MetaDataRepository.getImplementorMetaDatasInternal(Collection<Class<>>,ClassLoader,boolean)",17,48
org.apache.openjpa.meta.MetaDataRepository.getPersistenceAware(Class<>),11,19
org.apache.openjpa.meta.MetaDataRepository.getPersistenceAwares(),15,22
org.apache.openjpa.meta.MetaDataRepository.getPersistenceAwaresInternal(),11,21
org.apache.openjpa.meta.MetaDataRepository.addPersistenceAware(Class<>),14,28
org.apache.openjpa.meta.MetaDataRepository.addPersistenceAwareInternal(Class<>),15,45
org.apache.openjpa.meta.MetaDataRepository.removePersistenceAware(Class<>),8,12
org.apache.openjpa.meta.MetaDataRepository.getNonMappedInterface(Class<>),11,17
org.apache.openjpa.meta.MetaDataRepository.getNonMappedInterfaces(),12,22
org.apache.openjpa.meta.MetaDataRepository.getNonMappedInterfacesInternal(),10,21
org.apache.openjpa.meta.MetaDataRepository.addNonMappedInterface(Class<>),12,29
org.apache.openjpa.meta.MetaDataRepository.addNonMappedInterfaceInternal(Class<>),13,43
org.apache.openjpa.meta.MetaDataRepository.removeNonMappedInterface(Class<>),5,10
org.apache.openjpa.meta.MetaDataRepository.clear(),16,24
org.apache.openjpa.meta.MetaDataRepository.clearInternal(),22,22
"org.apache.openjpa.meta.MetaDataRepository.getPersistentTypeNames(boolean,ClassLoader)",21,44
"org.apache.openjpa.meta.MetaDataRepository.getPersistentTypeNamesInternal(boolean,ClassLoader)",10,17
"org.apache.openjpa.meta.MetaDataRepository.loadPersistentTypes(boolean,ClassLoader)",32,52
"org.apache.openjpa.meta.MetaDataRepository.loadPersistentTypes(boolean,ClassLoader,boolean)",40,73
"org.apache.openjpa.meta.MetaDataRepository.loadPersistentTypesInternal(boolean,ClassLoader,boolean)",39,92
"org.apache.openjpa.meta.MetaDataRepository.classForName(String,ClassLoader)",28,86
org.apache.openjpa.meta.MetaDataRepository.getPCSubclasses(Class<>),16,22
org.apache.openjpa.meta.MetaDataRepository.register(Class<>),11,17
org.apache.openjpa.meta.MetaDataRepository.loadRegisteredClassMetaData(ClassLoader),16,32
org.apache.openjpa.meta.MetaDataRepository.processRegisteredClasses(ClassLoader),92,196
org.apache.openjpa.meta.MetaDataRepository.processRegisteredClass(Class<>),66,143
org.apache.openjpa.meta.MetaDataRepository.registerAlias(Class<>),9,16
"org.apache.openjpa.meta.MetaDataRepository.registerAlias(String,Class<>)",15,29
"org.apache.openjpa.meta.MetaDataRepository.updateImpls(Class<>,Class<>,Class<>)",40,84
"org.apache.openjpa.meta.MetaDataRepository.isLeastDerivedImpl(Class<>,Class<>)",14,25
"org.apache.openjpa.meta.MetaDataRepository.addToCollection(Map,Class<>,Class<>,boolean)",9,29
"org.apache.openjpa.meta.MetaDataRepository.addToCollectionInternal(Map,Class<>,Class<>,boolean)",15,37
org.apache.openjpa.meta.MetaDataRepository.setMetaModel(Class<>),9,12
"org.apache.openjpa.meta.MetaDataRepository.setMetaModel(ClassMetaData,Class<>)",9,13
"org.apache.openjpa.meta.MetaDataRepository.getMetaModel(ClassMetaData,boolean)",8,15
"org.apache.openjpa.meta.MetaDataRepository.getMetaModel(Class<>,boolean)",35,70
org.apache.openjpa.meta.MetaDataRepository.setConfiguration(Configuration),12,24
org.apache.openjpa.meta.MetaDataRepository.startConfiguration(),2,2
org.apache.openjpa.meta.MetaDataRepository.endConfiguration(),27,50
org.apache.openjpa.meta.MetaDataRepository.initializeMetaDataFactory(),11,25
"org.apache.openjpa.meta.MetaDataRepository.getQueryMetaData(Class<>,String,ClassLoader,boolean)",13,36
"org.apache.openjpa.meta.MetaDataRepository.getQueryMetaDataInternal(Class<>,String,ClassLoader,boolean)",22,70
org.apache.openjpa.meta.MetaDataRepository.resolveAll(ClassLoader),11,19
"org.apache.openjpa.meta.MetaDataRepository.getQueryMetaDataInternal(Class<>,String,ClassLoader)",22,74
org.apache.openjpa.meta.MetaDataRepository.getQueryMetaDatas(),11,32
"org.apache.openjpa.meta.MetaDataRepository.getCachedQueryMetaData(Class<>,String)",7,15
org.apache.openjpa.meta.MetaDataRepository.getCachedQueryMetaData(String),9,24
"org.apache.openjpa.meta.MetaDataRepository.addQueryMetaData(Class<>,String)",11,41
"org.apache.openjpa.meta.MetaDataRepository.newQueryMetaData(Class<>,String)",18,34
org.apache.openjpa.meta.MetaDataRepository.removeQueryMetaData(QueryMetaData),9,22
"org.apache.openjpa.meta.MetaDataRepository.removeQueryMetaData(Class<>,String)",11,21
org.apache.openjpa.meta.MetaDataRepository.searchQueryMetaDataByName(String),10,20
"org.apache.openjpa.meta.MetaDataRepository.getQueryKey(Class<>,String)",8,26
"org.apache.openjpa.meta.MetaDataRepository.getSequenceMetaData(String,ClassLoader,boolean)",12,33
"org.apache.openjpa.meta.MetaDataRepository.getSequenceMetaDataInternal(String,ClassLoader,boolean)",16,52
"org.apache.openjpa.meta.MetaDataRepository.getSequenceMetaData(ClassMetaData,String,boolean)",25,73
"org.apache.openjpa.meta.MetaDataRepository.getSequenceMetaDataInternal(String,ClassLoader)",18,43
org.apache.openjpa.meta.MetaDataRepository.getSequenceMetaDatas(),11,32
org.apache.openjpa.meta.MetaDataRepository.getCachedSequenceMetaData(String),9,24
org.apache.openjpa.meta.MetaDataRepository.addSequenceMetaData(String),10,38
org.apache.openjpa.meta.MetaDataRepository.newSequenceMetaData(String),8,16
org.apache.openjpa.meta.MetaDataRepository.removeSequenceMetaData(SequenceMetaData),9,22
org.apache.openjpa.meta.MetaDataRepository.removeSequenceMetaData(String),10,19
org.apache.openjpa.meta.MetaDataRepository.is_systemListenersActivated(),11,16
org.apache.openjpa.meta.MetaDataRepository.addSystemListener(Object),16,60
org.apache.openjpa.meta.MetaDataRepository.removeSystemListener(Object),7,20
org.apache.openjpa.meta.MetaDataRepository.removeSystemListenerInternal(Object),17,36
org.apache.openjpa.meta.MetaDataRepository.getSystemListeners(),7,11
org.apache.openjpa.meta.MetaDataRepository.close(),9,12
org.apache.openjpa.meta.MetaDataRepository.closeInternal(),8,13
org.apache.openjpa.meta.MetaDataRepository.QueryKey.hashCode(),4,20
org.apache.openjpa.meta.MetaDataRepository.QueryKey.equals(Object),9,24
org.apache.openjpa.meta.MetaDataRepository.getXMLMetaData(Class<>),10,26
org.apache.openjpa.meta.MetaDataRepository.getXMLMetaDataInternal(Class<>),13,36
org.apache.openjpa.meta.MetaDataRepository.addXMLClassMetaData(Class<>),15,36
org.apache.openjpa.meta.MetaDataRepository.getCachedXMLMetaData(Class<>),7,15
org.apache.openjpa.meta.MetaDataRepository.newXMLClassMetaData(Class<>),8,21
"org.apache.openjpa.meta.MetaDataRepository.newXMLFieldMetaData(Class<>,String)",12,36
org.apache.openjpa.meta.MetaDataRepository.needsPreload(OpenJPAConfiguration),14,22
org.apache.openjpa.meta.MetaDataRepository.checkEnhancementLevel(Class<>),26,55
org.apache.openjpa.meta.MetaDataRepository.getCachedMetaData(String),22,54
"org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.BatchingPreparedStatementManagerImpl(JDBCStore,Connection,int)",19,33
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.flushAndUpdate(RowImpl),18,39
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.batchOrExecuteRow(RowImpl),24,59
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.isBatchDisabled(RowImpl),34,69
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.flushBatch(),72,270
"org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.flushSingleRow(RowImpl,PreparedStatement)",27,59
"org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.checkUpdateCount(int[],int,PreparedStatement)",60,212
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.isBatchDisabled(),3,4
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.setBatchDisabled(boolean),4,9
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.getBatchLimit(),2,4
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.setBatchLimit(int),3,9
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.getBatchedRows(),5,7
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.getBatchedSql(),3,5
"org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.addBatch(PreparedStatement,RowImpl,int)",9,12
org.apache.openjpa.jdbc.kernel.BatchingPreparedStatementManagerImpl.executeBatch(PreparedStatement),6,8
org.apache.openjpa.persistence.TestMixedMappingLocation.getPersistenceUnitName(),5,7
org.apache.openjpa.persistence.TestMixedMappingLocation.setUp(),7,11
org.apache.openjpa.persistence.TestMixedMappingLocation.testMixedOrmAnno(),28,32
org.apache.openjpa.lib.identifier.NewIdConfigurationTestImpl.NewIdConfigurationTestImpl(),6,6
org.apache.openjpa.lib.identifier.NewIdConfigurationTestImpl.delimitAll(),1,1
org.apache.openjpa.lib.identifier.NewIdConfigurationTestImpl.getDefaultIdentifierRule(),3,6
org.apache.openjpa.lib.identifier.NewIdConfigurationTestImpl.getDelimitedCase(),5,5
org.apache.openjpa.lib.identifier.NewIdConfigurationTestImpl.getLeadingDelimiter(),3,3
org.apache.openjpa.lib.identifier.NewIdConfigurationTestImpl.getIdentifierDelimiter(),3,3
org.apache.openjpa.lib.identifier.NewIdConfigurationTestImpl.getIdentifierConcatenator(),3,3
org.apache.openjpa.lib.identifier.NewIdConfigurationTestImpl.getIdentifierRule(T),3,9
org.apache.openjpa.lib.identifier.NewIdConfigurationTestImpl.getIdentifierRules(),4,9
org.apache.openjpa.lib.identifier.NewIdConfigurationTestImpl.getTrailingDelimiter(),3,3
org.apache.openjpa.lib.identifier.NewIdConfigurationTestImpl.getSchemaCase(),5,5
org.apache.openjpa.lib.identifier.NewIdConfigurationTestImpl.getSupportsDelimitedIdentifiers(),3,3
org.apache.openjpa.lib.identifier.NewIdConfigurationTestImpl.getConversionKey(),3,5
org.apache.openjpa.jdbc.conf.MappingRepositoryValue.MappingRepositoryValue(String),5,6
"org.apache.openjpa.jdbc.conf.MappingRepositoryValue.newInstance(String,Class,Configuration,boolean)",34,71
org.apache.openjpa.jdbc.kernel.exps.NotExpression.NotExpression(Exp),5,9
"org.apache.openjpa.jdbc.kernel.exps.NotExpression.initialize(Select,ExpContext,Map)",9,18
"org.apache.openjpa.jdbc.kernel.exps.NotExpression.NotExpState.NotExpState(Joins,ExpState)",2,5
"org.apache.openjpa.jdbc.kernel.exps.NotExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",9,20
"org.apache.openjpa.jdbc.kernel.exps.NotExpression.selectColumns(Select,ExpContext,ExpState,boolean)",7,16
org.apache.openjpa.jdbc.kernel.exps.NotExpression.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.ee.InvocationManagedRuntime.getTransactionManagerMethod(),7,11
org.apache.openjpa.ee.InvocationManagedRuntime.setTransactionManagerMethod(String),17,37
org.apache.openjpa.ee.InvocationManagedRuntime.getTransactionManager(),11,23
org.apache.openjpa.ee.InvocationManagedRuntime.setConfiguration(Configuration),4,8
org.apache.openjpa.ee.InvocationManagedRuntime.startConfiguration(),2,2
org.apache.openjpa.ee.InvocationManagedRuntime.endConfiguration(),1,1
org.apache.openjpa.ee.InvocationManagedRuntime.setRollbackOnly(Throwable),10,15
org.apache.openjpa.ee.InvocationManagedRuntime.getRollbackCause(),7,9
"org.apache.openjpa.jdbc.schema.DataSourceFactory.newDataSource(JDBCConfiguration,boolean)",44,198
"org.apache.openjpa.jdbc.schema.DataSourceFactory.decorateDataSource(DataSource,JDBCConfiguration,boolean)",48,177
"org.apache.openjpa.jdbc.schema.DataSourceFactory.installDBDictionary(DBDictionary,DecoratingDataSource,JDBCConfiguration,boolean)",80,218
"org.apache.openjpa.jdbc.schema.DataSourceFactory.newConnectException(JDBCConfiguration,boolean,Exception)",18,34
"org.apache.openjpa.jdbc.schema.DataSourceFactory.defaultsDataSource(DataSource,String,String)",17,38
org.apache.openjpa.jdbc.schema.DataSourceFactory.closeDataSource(DataSource),8,19
"org.apache.openjpa.jdbc.schema.DataSourceFactory.DefaultsDataSource.DefaultsDataSource(DataSource,String,String)",6,13
org.apache.openjpa.jdbc.schema.DataSourceFactory.DefaultsDataSource.getConnection(),5,7
"org.apache.openjpa.jdbc.schema.DataSourceFactory.DefaultsDataSource.getConnection(String,String)",6,11
"org.apache.openjpa.persistence.EntityExistsException.EntityExistsException(String,Throwable[],Object,boolean)",10,17
org.apache.openjpa.persistence.EntityExistsException.getType(),2,2
org.apache.openjpa.persistence.EntityExistsException.getSubtype(),5,5
org.apache.openjpa.persistence.EntityExistsException.isFatal(),1,2
org.apache.openjpa.persistence.EntityExistsException.getCause(),5,6
org.apache.openjpa.persistence.EntityExistsException.getNestedThrowables(),5,8
org.apache.openjpa.persistence.EntityExistsException.getFailedObject(),2,4
org.apache.openjpa.persistence.EntityExistsException.toString(),2,4
org.apache.openjpa.persistence.EntityExistsException.printStackTrace(),5,8
org.apache.openjpa.persistence.EntityExistsException.printStackTrace(PrintStream),7,12
org.apache.openjpa.persistence.EntityExistsException.printStackTrace(PrintWriter),7,12
org.apache.openjpa.persistence.EntityExistsException.writeObject(ObjectOutputStream),11,22
org.apache.openjpa.persistence.EntityExistsException.readObject(ObjectInputStream),10,17
"org.apache.openjpa.jdbc.kernel.exps.Variable.Variable(String,Class)",6,13
org.apache.openjpa.jdbc.kernel.exps.Variable.getName(),3,5
org.apache.openjpa.jdbc.kernel.exps.Variable.isBound(),3,4
org.apache.openjpa.jdbc.kernel.exps.Variable.getPCPath(),3,6
org.apache.openjpa.jdbc.kernel.exps.Variable.getPath(),1,3
org.apache.openjpa.jdbc.kernel.exps.Variable.setPCPath(PCPath),4,10
org.apache.openjpa.jdbc.kernel.exps.Variable.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.Variable.setMetaData(ClassMetaData),5,13
org.apache.openjpa.jdbc.kernel.exps.Variable.isVariable(),1,1
org.apache.openjpa.jdbc.kernel.exps.Variable.getType(),2,4
org.apache.openjpa.jdbc.kernel.exps.Variable.setImplicitType(Class),5,12
"org.apache.openjpa.jdbc.kernel.exps.Variable.initialize(Select,ExpContext,int)",13,21
"org.apache.openjpa.jdbc.kernel.exps.Variable.select(Select,ExpContext,ExpState,boolean)",6,8
"org.apache.openjpa.jdbc.kernel.exps.Variable.selectColumns(Select,ExpContext,ExpState,boolean)",7,9
"org.apache.openjpa.jdbc.kernel.exps.Variable.groupBy(Select,ExpContext,ExpState)",5,6
"org.apache.openjpa.jdbc.kernel.exps.Variable.orderBy(Select,ExpContext,ExpState,boolean)",6,7
"org.apache.openjpa.jdbc.kernel.exps.Variable.load(ExpContext,ExpState,Result)",9,10
"org.apache.openjpa.jdbc.kernel.exps.Variable.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",9,16
"org.apache.openjpa.jdbc.kernel.exps.Variable.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.Variable.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",9,11
"org.apache.openjpa.jdbc.kernel.exps.Variable.appendIsEmpty(Select,ExpContext,ExpState,SQLBuffer)",10,11
"org.apache.openjpa.jdbc.kernel.exps.Variable.appendIsNotEmpty(Select,ExpContext,ExpState,SQLBuffer)",10,11
"org.apache.openjpa.jdbc.kernel.exps.Variable.appendSize(Select,ExpContext,ExpState,SQLBuffer)",10,11
"org.apache.openjpa.jdbc.kernel.exps.Variable.appendIsNull(Select,ExpContext,ExpState,SQLBuffer)",9,10
"org.apache.openjpa.jdbc.kernel.exps.Variable.appendIsNotNull(Select,ExpContext,ExpState,SQLBuffer)",9,10
org.apache.openjpa.jdbc.kernel.exps.Variable.acceptVisit(ExpressionVisitor),7,14
org.apache.openjpa.persistence.access.EmbedMixedAccess.getFirstName(),2,3
org.apache.openjpa.persistence.access.EmbedMixedAccess.setFirstName(String),4,6
org.apache.openjpa.persistence.access.EmbedMixedAccess.getLastName(),2,3
org.apache.openjpa.persistence.access.EmbedMixedAccess.setLastName(String),4,6
org.apache.openjpa.persistence.access.EmbedMixedAccess.getMiddleName(),3,4
org.apache.openjpa.persistence.access.EmbedMixedAccess.setMiddleName(String),5,7
org.apache.openjpa.persistence.access.EmbedMixedAccess.equals(Object),8,25
org.apache.openjpa.persistence.MixedLockLevelsHelper.toLockLevel(LockModeType),17,101
org.apache.openjpa.persistence.MixedLockLevelsHelper.toLockLevel(int),18,60
org.apache.openjpa.persistence.MixedLockLevelsHelper.fromLockLevel(int),17,101
org.apache.openjpa.persistence.MixedLockLevelsHelper.canConvert(Class<>),6,11
org.apache.openjpa.persistence.MixedLockLevelsHelper.convert(Object),24,75
org.apache.openjpa.util.ProxyDate.newInstance(),4,6
org.apache.openjpa.ee.WLSManagedRuntime.WLSManagedRuntime(),12,25
org.apache.openjpa.ee.WLSManagedRuntime.getTransactionManager(),7,20
org.apache.openjpa.ee.WLSManagedRuntime.setRollbackOnly(Throwable),16,36
org.apache.openjpa.ee.WLSManagedRuntime.getRollbackCause(),14,27
org.apache.openjpa.jdbc.meta.MappingStrategyInstaller.MappingStrategyInstaller(MappingRepository),8,10
org.apache.openjpa.jdbc.meta.MappingStrategyInstaller.isAdapting(),1,1
org.apache.openjpa.jdbc.meta.MappingStrategyInstaller.installStrategy(ClassMapping),13,28
org.apache.openjpa.jdbc.meta.MappingStrategyInstaller.installStrategy(FieldMapping),7,21
org.apache.openjpa.jdbc.meta.MappingStrategyInstaller.installStrategy(Version),7,20
org.apache.openjpa.jdbc.meta.MappingStrategyInstaller.installStrategy(Discriminator),8,20
org.apache.openjpa.lib.meta.MetaDataParser.setClassLoader(ClassLoader),7,9
org.apache.openjpa.lib.meta.MetaDataParser.getResults(),3,4
org.apache.openjpa.lib.meta.MetaDataParser.parse(String),5,6
org.apache.openjpa.lib.meta.MetaDataParser.parse(URL),4,6
org.apache.openjpa.lib.meta.MetaDataParser.parse(File),8,11
"org.apache.openjpa.lib.meta.MetaDataParser.parse(Class<>,boolean)",9,13
"org.apache.openjpa.lib.meta.MetaDataParser.parse(Reader,String)",13,24
org.apache.openjpa.lib.meta.MetaDataParser.parse(MetaDataIterator),8,10
org.apache.openjpa.lib.meta.MetaDataParser.clear(),5,5
org.apache.openjpa.jdbc.meta.Embeddable.getColumns(),3,4
org.apache.openjpa.jdbc.meta.Embeddable.getColumnIO(),3,5
org.apache.openjpa.jdbc.meta.Embeddable.getResultArguments(),9,12
"org.apache.openjpa.jdbc.meta.Embeddable.toEmbeddedDataStoreValue(Object,JDBCStore)",21,28
org.apache.openjpa.jdbc.meta.Embeddable.toEmbeddedObjectValue(Object),24,36
"org.apache.openjpa.jdbc.meta.Embeddable.loadEmbedded(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Object)",29,38
"org.apache.openjpa.jdbc.meta.strats.ElementEmbedValueHandler.map(ValueMapping,String,ColumnIO,boolean)",14,27
"org.apache.openjpa.jdbc.meta.strats.ElementEmbedValueHandler.map(ValueMapping,DBIdentifier,ColumnIO,boolean)",26,73
org.apache.openjpa.jdbc.meta.strats.ElementEmbedValueHandler.objectValueRequiresLoad(ValueMapping),5,6
org.apache.openjpa.jdbc.meta.strats.ElementEmbedValueHandler.getResultArgument(ValueMapping),6,6
"org.apache.openjpa.jdbc.meta.strats.ElementEmbedValueHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)",21,53
"org.apache.openjpa.jdbc.meta.strats.ElementEmbedValueHandler.toObjectValue(ValueMapping,Object,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",33,65
"org.apache.openjpa.jdbc.meta.strats.ElementEmbedValueHandler.toRelationDataStoreValue(OpenJPAStateManager,Column)",9,14
"org.apache.openjpa.jdbc.meta.strats.ElementEmbedValueHandler.toRelationDataStoreValue(OpenJPAStateManager,Column,int)",19,50
"org.apache.openjpa.jdbc.meta.strats.ElementEmbedValueHandler.findField(Column,int)",17,39
org.apache.openjpa.lib.conf.BooleanValue.BooleanValue(String),7,8
org.apache.openjpa.lib.conf.BooleanValue.getValueType(),2,2
org.apache.openjpa.lib.conf.BooleanValue.set(boolean),5,13
org.apache.openjpa.lib.conf.BooleanValue.get(),2,3
org.apache.openjpa.lib.conf.BooleanValue.getInternalString(),3,6
org.apache.openjpa.lib.conf.BooleanValue.setInternalString(String),5,9
org.apache.openjpa.lib.conf.BooleanValue.setInternalObject(Object),5,10
org.apache.openjpa.lib.rop.SoftRandomAccessResultList.SoftRandomAccessResultList(ResultObjectProvider),8,10
org.apache.openjpa.lib.rop.SoftRandomAccessResultList.newRowMap(),3,5
org.apache.openjpa.lib.jdbc.DataSourceLogs.DataSourceLogs(),3,3
org.apache.openjpa.lib.jdbc.DataSourceLogs.getJDBCLog(),7,17
org.apache.openjpa.lib.jdbc.DataSourceLogs.setJDBCLog(Log),5,12
org.apache.openjpa.lib.jdbc.DataSourceLogs.isJDBCEnabled(),5,11
org.apache.openjpa.lib.jdbc.DataSourceLogs.getSQLLog(),7,17
org.apache.openjpa.lib.jdbc.DataSourceLogs.setSQLLog(Log),5,12
org.apache.openjpa.lib.jdbc.DataSourceLogs.isSQLEnabled(),5,11
"org.apache.openjpa.lib.jdbc.DataSourceLogs.logJDBC(String,Connection)",8,16
"org.apache.openjpa.lib.jdbc.DataSourceLogs.logJDBC(String,long,Connection)",10,20
"org.apache.openjpa.lib.jdbc.DataSourceLogs.logSQL(String,Connection)",8,16
"org.apache.openjpa.lib.jdbc.DataSourceLogs.logSQL(String,long,Connection)",10,20
"org.apache.openjpa.lib.jdbc.DataSourceLogs.log(String,Connection,Log)",7,14
"org.apache.openjpa.lib.jdbc.DataSourceLogs.log(String,Connection,Log,long)",27,74
"org.apache.openjpa.enhance.Reflection.getGetterMethod(Class<>,String)",8,27
"org.apache.openjpa.enhance.Reflection.setGetterMethod(Class<>,String,Method)",13,41
"org.apache.openjpa.enhance.Reflection.getSetterMethod(Class<>,String)",8,27
"org.apache.openjpa.enhance.Reflection.setSetterMethod(Class<>,String,Method)",13,41
"org.apache.openjpa.enhance.Reflection.findGetter(Class,String,boolean)",28,67
"org.apache.openjpa.enhance.Reflection.findSetter(Class,String,boolean)",15,30
"org.apache.openjpa.enhance.Reflection.findSetter(Class,String,Class,boolean)",23,50
"org.apache.openjpa.enhance.Reflection.getDeclaredMethod(Class,String,Class)",33,88
"org.apache.openjpa.enhance.Reflection.mostDerived(Method,Method)",15,60
"org.apache.openjpa.enhance.Reflection.findField(Class,String,boolean)",15,29
"org.apache.openjpa.enhance.Reflection.getDeclaredField(Class,String)",24,46
"org.apache.openjpa.enhance.Reflection.get(Object,Field)",11,24
"org.apache.openjpa.enhance.Reflection.getValue(Object,String,boolean)",20,54
"org.apache.openjpa.enhance.Reflection.makeAccessible(AccessibleObject,int)",18,26
"org.apache.openjpa.enhance.Reflection.wrapReflectionException(Throwable,Message)",12,33
"org.apache.openjpa.enhance.Reflection.getBoolean(Object,Field)",11,23
"org.apache.openjpa.enhance.Reflection.getByte(Object,Field)",11,23
"org.apache.openjpa.enhance.Reflection.getChar(Object,Field)",11,23
"org.apache.openjpa.enhance.Reflection.getDouble(Object,Field)",11,23
"org.apache.openjpa.enhance.Reflection.getFloat(Object,Field)",11,23
"org.apache.openjpa.enhance.Reflection.getInt(Object,Field)",11,23
"org.apache.openjpa.enhance.Reflection.getLong(Object,Field)",11,23
"org.apache.openjpa.enhance.Reflection.getShort(Object,Field)",11,23
"org.apache.openjpa.enhance.Reflection.get(Object,Method)",13,26
"org.apache.openjpa.enhance.Reflection.getBoolean(Object,Method)",5,11
"org.apache.openjpa.enhance.Reflection.getByte(Object,Method)",5,11
"org.apache.openjpa.enhance.Reflection.getChar(Object,Method)",6,12
"org.apache.openjpa.enhance.Reflection.getDouble(Object,Method)",5,11
"org.apache.openjpa.enhance.Reflection.getFloat(Object,Method)",5,11
"org.apache.openjpa.enhance.Reflection.getInt(Object,Method)",5,11
"org.apache.openjpa.enhance.Reflection.getLong(Object,Method)",5,11
"org.apache.openjpa.enhance.Reflection.getShort(Object,Method)",5,11
"org.apache.openjpa.enhance.Reflection.set(Object,Field,Object)",12,34
"org.apache.openjpa.enhance.Reflection.set(Object,Field,boolean)",12,31
"org.apache.openjpa.enhance.Reflection.set(Object,Field,byte)",12,31
"org.apache.openjpa.enhance.Reflection.set(Object,Field,char)",12,31
"org.apache.openjpa.enhance.Reflection.set(Object,Field,double)",12,31
"org.apache.openjpa.enhance.Reflection.set(Object,Field,float)",12,31
"org.apache.openjpa.enhance.Reflection.set(Object,Field,int)",12,31
"org.apache.openjpa.enhance.Reflection.set(Object,Field,long)",12,31
"org.apache.openjpa.enhance.Reflection.set(Object,Field,short)",12,31
"org.apache.openjpa.enhance.Reflection.set(Object,Object,Field)",13,23
"org.apache.openjpa.enhance.Reflection.set(Object,boolean,Field)",13,22
"org.apache.openjpa.enhance.Reflection.set(Object,byte,Field)",13,22
"org.apache.openjpa.enhance.Reflection.set(Object,char,Field)",13,22
"org.apache.openjpa.enhance.Reflection.set(Object,double,Field)",13,22
"org.apache.openjpa.enhance.Reflection.set(Object,float,Field)",13,22
"org.apache.openjpa.enhance.Reflection.set(Object,int,Field)",13,22
"org.apache.openjpa.enhance.Reflection.set(Object,long,Field)",13,22
"org.apache.openjpa.enhance.Reflection.set(Object,short,Field)",13,22
"org.apache.openjpa.enhance.Reflection.set(Object,Method,Object)",14,34
"org.apache.openjpa.enhance.Reflection.set(Object,Method,boolean)",7,13
"org.apache.openjpa.enhance.Reflection.set(Object,Method,byte)",7,14
"org.apache.openjpa.enhance.Reflection.set(Object,Method,char)",8,15
"org.apache.openjpa.enhance.Reflection.set(Object,Method,double)",7,13
"org.apache.openjpa.enhance.Reflection.set(Object,Method,float)",7,13
"org.apache.openjpa.enhance.Reflection.set(Object,Method,int)",8,15
"org.apache.openjpa.enhance.Reflection.set(Object,Method,long)",7,14
"org.apache.openjpa.enhance.Reflection.set(Object,Method,short)",7,14
org.apache.openjpa.enhance.Reflection.getBeanStylePropertyNames(Class<>),40,94
org.apache.openjpa.enhance.Reflection.getPublicFieldNames(Class),13,31
"org.apache.openjpa.enhance.Reflection.getFieldValues(Class,int,Class<T>)",27,50
"org.apache.openjpa.enhance.Reflection.canReflect(Reflectable,Reflectable)",17,40
org.apache.openjpa.enhance.Reflection.canReflect(Field),11,20
org.apache.openjpa.enhance.Reflection.canReflect(Method),11,28
org.apache.openjpa.enhance.Reflection.getDeclaringClass(Method),11,23
"org.apache.openjpa.enhance.Reflection.getDeclaringMethod(Class,Method)",9,15
org.apache.openjpa.lib.rop.SimpleResultList.SimpleResultList(ResultObjectProvider),11,19
org.apache.openjpa.lib.rop.SimpleResultList.isProviderOpen(),2,2
org.apache.openjpa.lib.rop.SimpleResultList.isClosed(),1,2
org.apache.openjpa.lib.rop.SimpleResultList.close(),4,6
org.apache.openjpa.lib.rop.SimpleResultList.getInternal(int),12,20
org.apache.openjpa.lib.rop.SimpleResultList.size(),7,16
org.apache.openjpa.lib.rop.SimpleResultList.writeReplace(),13,22
org.apache.openjpa.event.RemoteCommitProvider.setRemoteCommitEventManager(RemoteCommitEventManager),11,21
org.apache.openjpa.event.RemoteCommitProvider.broadcast(RemoteCommitEvent),16,21
org.apache.openjpa.event.RemoteCommitProvider.close(),4,4
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedClobFieldStrategy.getExpectedJavaType(),5,6
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedClobFieldStrategy.update(OpenJPAStateManager,Row)",11,19
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedClobFieldStrategy.isCustom(OpenJPAStateManager,JDBCStore)",12,14
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedClobFieldStrategy.putData(OpenJPAStateManager,ResultSet,DBDictionary)",14,19
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedClobFieldStrategy.map(boolean),13,16
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedClobFieldStrategy.initialize(),10,14
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedClobFieldStrategy.getValue(OpenJPAStateManager),12,14
org.apache.openjpa.jdbc.sql.DB2Dictionary.DB2Dictionary(),226,317
"org.apache.openjpa.jdbc.sql.DB2Dictionary.supportsRandomAccessResultSet(Select,boolean)",8,16
"org.apache.openjpa.jdbc.sql.DB2Dictionary.appendSelectRange(SQLBuffer,long,long,boolean)",19,28
"org.apache.openjpa.jdbc.sql.DB2Dictionary.appendSelect(SQLBuffer,Object,Select,int)",34,113
"org.apache.openjpa.jdbc.sql.DB2Dictionary.getSequencesSQL(String,String)",7,19
"org.apache.openjpa.jdbc.sql.DB2Dictionary.getSequencesSQL(DBIdentifier,DBIdentifier)",10,49
org.apache.openjpa.jdbc.sql.DB2Dictionary.decorate(Connection),25,48
org.apache.openjpa.jdbc.sql.DB2Dictionary.connectedConfiguration(Connection),90,304
org.apache.openjpa.jdbc.sql.DB2Dictionary.supportsIsolationForUpdate(),3,3
"org.apache.openjpa.jdbc.sql.DB2Dictionary.getForUpdateClause(JDBCFetchConfiguration,boolean,Select)",46,197
org.apache.openjpa.jdbc.sql.DB2Dictionary.isDB2UDBV82OrLater(),8,12
org.apache.openjpa.jdbc.sql.DB2Dictionary.isDB2ZOSV8xOrLater(),7,11
org.apache.openjpa.jdbc.sql.DB2Dictionary.isDB2ISeriesV5R3OrEarlier(),8,9
org.apache.openjpa.jdbc.sql.DB2Dictionary.isDB2ISeriesV5R4OrLater(),7,7
org.apache.openjpa.jdbc.sql.DB2Dictionary.isDB2ISeriesV5R4OrEarlier(),8,9
org.apache.openjpa.jdbc.sql.DB2Dictionary.isDB2UDBV81OrEarlier(),9,14
org.apache.openjpa.jdbc.sql.DB2Dictionary.getProductVersionMajorMinorForISeries(),25,108
org.apache.openjpa.jdbc.sql.DB2Dictionary.getProductVersionMajorMinor(),24,63
org.apache.openjpa.jdbc.sql.DB2Dictionary.getOptimizeClause(Select),13,34
"org.apache.openjpa.jdbc.sql.DB2Dictionary.newStoreException(String,SQLException[],Object)",13,30
"org.apache.openjpa.jdbc.sql.DB2Dictionary.appendExtendedExceptionMsg(String,SQLException)",32,169
org.apache.openjpa.jdbc.sql.DB2Dictionary.getDb2ServerType(),2,4
"org.apache.openjpa.jdbc.sql.DB2Dictionary.appendLength(SQLBuffer,int)",13,18
"org.apache.openjpa.jdbc.sql.DB2Dictionary.appendXmlComparison(SQLBuffer,String,FilterValue,FilterValue,boolean,boolean)",27,84
"org.apache.openjpa.jdbc.sql.DB2Dictionary.appendXmlComparison1(SQLBuffer,String,FilterValue,FilterValue)",34,103
"org.apache.openjpa.jdbc.sql.DB2Dictionary.appendXmlComparison2(SQLBuffer,String,FilterValue,FilterValue)",29,86
"org.apache.openjpa.jdbc.sql.DB2Dictionary.appendXmlVar(SQLBuffer,FilterValue)",14,29
"org.apache.openjpa.jdbc.sql.DB2Dictionary.appendXmlExists(SQLBuffer,FilterValue)",15,26
"org.apache.openjpa.jdbc.sql.DB2Dictionary.addCastAsString(String,String,String)",17,44
"org.apache.openjpa.jdbc.sql.DB2Dictionary.addCastAsType(String,Val)",20,53
org.apache.openjpa.jdbc.sql.DB2Dictionary.getBatchLimit(),12,28
"org.apache.openjpa.jdbc.sql.DB2Dictionary.getCastFunction(Val,String)",15,41
"org.apache.openjpa.jdbc.sql.DB2Dictionary.getCastFunction(Val,String,Column)",20,58
"org.apache.openjpa.jdbc.sql.DB2Dictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",15,64
"org.apache.openjpa.jdbc.sql.DB2Dictionary.appendCast(SQLBuffer,FilterValue,int)",32,142
"org.apache.openjpa.jdbc.sql.DB2Dictionary.createIndexIfNecessary(Schema,String,Column)",9,19
"org.apache.openjpa.jdbc.sql.DB2Dictionary.createIndexIfNecessary(Schema,DBIdentifier,Column)",23,62
"org.apache.openjpa.jdbc.sql.DB2Dictionary.isFatalException(int,SQLException)",37,71
org.apache.openjpa.jdbc.sql.DB2Dictionary.setDelimitedCase(DatabaseMetaData),7,10
"org.apache.openjpa.jdbc.sql.DB2Dictionary.setQueryTimeout(PreparedStatement,int)",18,36
"org.apache.openjpa.jdbc.sql.DB2Dictionary.setBytes(PreparedStatement,int,byte[],Column)",27,56
"org.apache.openjpa.jdbc.sql.DB2Dictionary.getBytes(ResultSet,int)",22,56
org.apache.openjpa.jdbc.sql.DB2Dictionary.getCastStringColumnSize(Object),13,35
"org.apache.openjpa.jdbc.sql.DB2Dictionary.insertBlobForStreamingLoad(Row,Column,JDBCStore,Object,Select)",18,26
"org.apache.openjpa.jdbc.sql.DB2Dictionary.insertClobForStreamingLoad(Row,Column,Object)",14,20
"org.apache.openjpa.jdbc.sql.DB2Dictionary.updateBlob(Select,JDBCStore,InputStream)",10,11
"org.apache.openjpa.jdbc.sql.DB2Dictionary.updateClob(Select,JDBCStore,Reader)",9,11
"org.apache.openjpa.jdbc.sql.DB2Dictionary.setDate(PreparedStatement,int,Date,Column)",27,57
org.apache.openjpa.jdbc.sql.DB2Dictionary.getDB2MajorVersion(),2,4
org.apache.openjpa.jdbc.sql.DB2Dictionary.getDB2MinorVersion(),2,4
org.apache.openjpa.jdbc.sql.DB2Dictionary.getDefaultSchemaName(),30,80
org.apache.openjpa.jdbc.sql.DB2Dictionary.getConnection(),24,56
"org.apache.openjpa.jdbc.sql.DB2Dictionary.toSelect(SQLBuffer,JDBCFetchConfiguration,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,SQLBuffer,boolean,boolean,long,long,Select)",36,154
"org.apache.openjpa.jdbc.sql.DB2Dictionary.requiresSubselectForRange(long,long,boolean,SQLBuffer)",12,20
org.apache.openjpa.lib.instrumentation.Instrument.getName(),6,7
org.apache.openjpa.lib.instrumentation.Instrument.getOptions(),7,12
org.apache.openjpa.lib.instrumentation.Instrument.setOptions(String),12,18
org.apache.openjpa.lib.instrumentation.Instrument.getContext(),8,12
org.apache.openjpa.lib.instrumentation.Instrument.setContext(Object),10,15
org.apache.openjpa.lib.instrumentation.Instrument.setProvider(InstrumentationProvider),6,14
org.apache.openjpa.lib.instrumentation.Instrument.getProvider(),3,9
org.apache.openjpa.lib.instrumentation.Instrument.initialize(),10,12
org.apache.openjpa.lib.instrumentation.Instrument.getLevel(),7,16
org.apache.openjpa.lib.instrumentation.Instrument.isStarted(),3,4
org.apache.openjpa.lib.instrumentation.Instrument.setStarted(boolean),6,8
org.apache.openjpa.lib.instrumentation.Instrument.start(),9,10
org.apache.openjpa.lib.instrumentation.Instrument.stop(),9,10
org.apache.openjpa.lib.instrumentation.Instrument.restart(),8,10
"org.apache.openjpa.jdbc.sql.LogicalUnion.LogicalUnion(JDBCConfiguration,int)",11,18
"org.apache.openjpa.jdbc.sql.LogicalUnion.LogicalUnion(JDBCConfiguration,Select[])",12,15
"org.apache.openjpa.jdbc.sql.LogicalUnion.LogicalUnion(JDBCConfiguration,int,Select[])",21,45
"org.apache.openjpa.jdbc.sql.LogicalUnion.newUnionSelect(SelectImpl,int)",8,18
org.apache.openjpa.jdbc.sql.LogicalUnion.getSelects(),3,3
org.apache.openjpa.jdbc.sql.LogicalUnion.isUnion(),1,1
org.apache.openjpa.jdbc.sql.LogicalUnion.abortUnion(),2,2
org.apache.openjpa.jdbc.sql.LogicalUnion.getOrdering(),1,1
org.apache.openjpa.jdbc.sql.LogicalUnion.getConfiguration(),3,5
org.apache.openjpa.jdbc.sql.LogicalUnion.getDBDictionary(),2,3
"org.apache.openjpa.jdbc.sql.LogicalUnion.toSelect(boolean,JDBCFetchConfiguration)",9,13
org.apache.openjpa.jdbc.sql.LogicalUnion.getSQL(),4,7
org.apache.openjpa.jdbc.sql.LogicalUnion.toSelectCount(),6,8
org.apache.openjpa.jdbc.sql.LogicalUnion.getAutoDistinct(),3,5
org.apache.openjpa.jdbc.sql.LogicalUnion.setAutoDistinct(boolean),5,11
org.apache.openjpa.jdbc.sql.LogicalUnion.isDistinct(),1,2
org.apache.openjpa.jdbc.sql.LogicalUnion.setDistinct(boolean),2,5
org.apache.openjpa.jdbc.sql.LogicalUnion.isLRS(),2,3
org.apache.openjpa.jdbc.sql.LogicalUnion.setLRS(boolean),4,9
org.apache.openjpa.jdbc.sql.LogicalUnion.getExpectedResultCount(),4,7
"org.apache.openjpa.jdbc.sql.LogicalUnion.setExpectedResultCount(int,boolean)",7,19
org.apache.openjpa.jdbc.sql.LogicalUnion.getJoinSyntax(),3,5
org.apache.openjpa.jdbc.sql.LogicalUnion.setJoinSyntax(int),5,11
org.apache.openjpa.jdbc.sql.LogicalUnion.supportsRandomAccess(boolean),6,11
org.apache.openjpa.jdbc.sql.LogicalUnion.supportsLocking(),4,12
org.apache.openjpa.jdbc.sql.LogicalUnion.hasMultipleSelects(),4,8
org.apache.openjpa.jdbc.sql.LogicalUnion.getCount(JDBCStore),7,14
"org.apache.openjpa.jdbc.sql.LogicalUnion.execute(JDBCStore,JDBCFetchConfiguration)",11,23
"org.apache.openjpa.jdbc.sql.LogicalUnion.execute(JDBCStore,JDBCFetchConfiguration,int)",41,140
org.apache.openjpa.jdbc.sql.LogicalUnion.select(Union.Selector),5,9
org.apache.openjpa.jdbc.sql.LogicalUnion.toString(),3,4
"org.apache.openjpa.jdbc.sql.LogicalUnion.Selector.select(Select,int)",5,8
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.UnionSelect(SelectImpl,int)",8,14
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getDelegate(),4,6
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getSelectedOrderIndexes(),9,13
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getConfiguration(),3,5
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.indexOf(),2,2
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.toSelect(boolean,JDBCFetchConfiguration)",8,12
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getSQL(),3,5
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.toSelectCount(),5,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getAutoDistinct(),3,5
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setAutoDistinct(boolean),4,9
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.isDistinct(),2,3
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setDistinct(boolean),3,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.isLRS(),2,3
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setLRS(boolean),3,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getJoinSyntax(),3,5
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setJoinSyntax(int),4,11
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.supportsRandomAccess(boolean),5,9
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.supportsLocking(),3,5
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.hasMultipleSelects(),3,5
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getCount(JDBCStore),6,9
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.execute(JDBCStore,JDBCFetchConfiguration)",9,15
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.execute(JDBCStore,JDBCFetchConfiguration,int)",11,19
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getSubselects(),4,5
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getParent(),2,2
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getSubselectPath(),3,3
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setParent(Select,String)",10,11
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setHasSubselect(boolean),4,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getHasSubselect(),2,3
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getFromSelect(),1,2
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setFromSelect(Select),8,9
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.hasEagerJoin(boolean),3,5
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.hasJoin(boolean),2,3
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.isSelected(Table),3,6
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getTableAliases(),4,6
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getSelects(),3,4
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getSelectAliases(),4,6
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getIdentifierAliases(),4,6
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getOrdering(),3,3
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getGrouping(),3,3
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getWhere(),3,3
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getHaving(),3,3
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.addJoinClassConditions(),4,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getJoins(),2,4
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getJoinIterator(),3,6
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getStartIndex(),3,5
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getEndIndex(),2,3
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setRange(long,long)",4,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getColumnAlias(Column),5,9
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getColumnAlias(Column,Joins)",6,12
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getColumnAlias(Column,Object)",6,12
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getColumnAlias(String,Table)",6,12
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getColumnAlias(String,Table,Joins)",7,15
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.isAggregate(),2,3
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setAggregate(boolean),4,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.isLob(),2,3
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setLob(boolean),3,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.selectPlaceholder(String),5,8
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.clearSelects(),2,3
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.select(SQLBuffer,Object)",5,8
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.select(SQLBuffer,Object,Joins)",6,11
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.select(String,Object)",5,7
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.select(String,Object,Joins)",6,10
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.select(Column),4,6
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.select(Column,Joins)",5,9
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.select(Column[]),4,6
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.select(Column[],Joins)",5,9
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.select(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,int)",8,18
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.select(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,int,Joins)",9,21
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.select(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,int,Joins,boolean)",20,39
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.selectIdentifier(Column),5,8
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.selectIdentifier(Column,Joins)",6,11
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.selectIdentifier(Column[]),5,8
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.selectIdentifier(Column[],Joins)",6,11
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.selectIdentifier(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,int)",9,19
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.selectIdentifier(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,int,Joins)",10,22
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.selectPrimaryKey(ClassMapping),5,10
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.selectPrimaryKey(ClassMapping,Joins)",6,13
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderByPrimaryKey(ClassMapping,boolean,boolean)",5,11
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderByPrimaryKey(ClassMapping,boolean,Joins,boolean)",16,38
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.recordOrder(Object,boolean)",14,21
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.recordOrderColumns(Column[],boolean)",6,12
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderBy(Column,boolean,boolean)",4,7
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderBy(Column,boolean,Joins,boolean)",8,15
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderBy(Column[],boolean,boolean)",4,7
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderBy(Column[],boolean,Joins,boolean)",9,16
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderBy(SQLBuffer,boolean,boolean,Value)",6,11
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderBy(SQLBuffer,boolean,Joins,boolean,Value)",9,20
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderBy(String,boolean,boolean)",4,7
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.orderBy(String,boolean,Joins,boolean)",8,15
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.clearOrdering(),1,1
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.wherePrimaryKey(Object,ClassMapping,JDBCStore)",8,15
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.whereForeignKey(ForeignKey,Object,ClassMapping,JDBCStore)",8,17
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.where(Joins),2,4
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.where(SQLBuffer),3,5
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.where(SQLBuffer,Joins)",4,8
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.where(String),3,4
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.where(String,Joins)",4,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.having(SQLBuffer),3,5
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.having(SQLBuffer,Joins)",4,8
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.having(String),3,4
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.having(String,Joins)",4,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.groupBy(SQLBuffer),3,5
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.groupBy(SQLBuffer,Joins)",4,8
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.groupBy(String),3,4
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.groupBy(String,Joins)",4,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.groupBy(Column),3,4
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.groupBy(Column,Joins)",4,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.groupBy(Column[]),3,4
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.groupBy(Column[],Joins)",4,7
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.groupBy(ClassMapping,int,JDBCStore,JDBCFetchConfiguration)",7,15
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.groupBy(ClassMapping,int,JDBCStore,JDBCFetchConfiguration,Joins)",8,18
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.whereClone(int),5,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.fullClone(int),5,7
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.eagerClone(FieldMapping,int,boolean,int)",10,20
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getEager(FieldMapping),7,12
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.newJoins(),2,4
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.newOuterJoins(),3,6
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.append(SQLBuffer,Joins)",6,10
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.and(Joins,Joins)",2,8
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.or(Joins,Joins)",2,8
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.outer(Joins),3,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.toString(),2,4
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getExpectedResultCount(),4,7
"org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setExpectedResultCount(int,boolean)",6,17
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setContext(Context),3,8
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.ctx(),3,4
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setSchemaAlias(String),5,12
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.logEagerRelations(),4,7
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setTablePerClassMeta(ClassMapping),4,5
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getTablePerClassMeta(),4,6
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setJoinedTableClassMeta(List),6,12
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getJoinedTableClassMeta(),5,8
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.setExcludedJoinedTableClassMeta(List),7,14
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getExcludedJoinedTableClassMeta(),6,10
org.apache.openjpa.jdbc.sql.LogicalUnion.UnionSelect.getDictionary(),2,3
"org.apache.openjpa.jdbc.sql.LogicalUnion.ResultComparator.ResultComparator(List[],BitSet,DBDictionary)",8,12
"org.apache.openjpa.jdbc.sql.LogicalUnion.ResultComparator.getOrderingValue(Result,int)",11,31
"org.apache.openjpa.jdbc.sql.LogicalUnion.ResultComparator.getOrderingValue(ResultSet,Object)",12,20
"org.apache.openjpa.jdbc.sql.LogicalUnion.ResultComparator.compare(Object,Object)",6,45
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.AbstractPCResultObjectProvider(StoreContext),11,16
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.getContext(),5,7
"org.apache.openjpa.kernel.AbstractPCResultObjectProvider.initialize(OpenJPAStateManager,PCState,FetchConfiguration)",8,11
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.getResultObject(),15,39
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.getObjectId(ClassMetaData),11,14
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.getPCType(),9,10
"org.apache.openjpa.kernel.AbstractPCResultObjectProvider.load(OpenJPAStateManager,FetchConfiguration)",18,24
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.open(),3,3
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.supportsRandomAccess(),9,12
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.next(),8,8
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.absolute(int),10,13
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.size(),12,16
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.reset(),9,12
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.close(),7,8
org.apache.openjpa.kernel.AbstractPCResultObjectProvider.handleCheckedException(Exception),5,9
org.apache.openjpa.lib.meta.CFMetaDataParser.CFMetaDataParser(),6,6
org.apache.openjpa.lib.meta.CFMetaDataParser.isPackageElementName(String),5,9
org.apache.openjpa.lib.meta.CFMetaDataParser.getPackageAttributeName(),7,12
org.apache.openjpa.lib.meta.CFMetaDataParser.getPackageElementDepth(),3,5
org.apache.openjpa.lib.meta.CFMetaDataParser.isClassElementName(String),5,9
org.apache.openjpa.lib.meta.CFMetaDataParser.getClassAttributeName(),7,12
org.apache.openjpa.lib.meta.CFMetaDataParser.getClassElementDepth(),3,5
"org.apache.openjpa.lib.meta.CFMetaDataParser.startElement(String,Attributes)",28,94
org.apache.openjpa.lib.meta.CFMetaDataParser.endElement(String),26,77
"org.apache.openjpa.lib.meta.CFMetaDataParser.startPackage(String,Attributes)",14,19
org.apache.openjpa.lib.meta.CFMetaDataParser.endPackage(String),8,9
"org.apache.openjpa.lib.meta.CFMetaDataParser.startClass(String,Attributes)",17,23
org.apache.openjpa.lib.meta.CFMetaDataParser.endClass(String),13,15
"org.apache.openjpa.lib.meta.CFMetaDataParser.startExtendedClass(String,Attributes)",8,8
org.apache.openjpa.lib.meta.CFMetaDataParser.endExtendedClass(String),5,5
"org.apache.openjpa.lib.meta.CFMetaDataParser.startSystemElement(String,Attributes)",13,15
org.apache.openjpa.lib.meta.CFMetaDataParser.endSystemElement(String),10,11
"org.apache.openjpa.lib.meta.CFMetaDataParser.startPackageElement(String,Attributes)",12,14
org.apache.openjpa.lib.meta.CFMetaDataParser.endPackageElement(String),9,10
"org.apache.openjpa.lib.meta.CFMetaDataParser.startClassElement(String,Attributes)",12,14
org.apache.openjpa.lib.meta.CFMetaDataParser.endClassElement(String),9,10
org.apache.openjpa.lib.meta.CFMetaDataParser.reset(),10,13
org.apache.openjpa.lib.meta.CFMetaDataParser.currentClassName(),6,8
org.apache.openjpa.lib.meta.CFMetaDataParser.currentPackage(),3,4
"org.apache.openjpa.lib.meta.CFMetaDataParser.classForName(String,boolean)",21,31
"org.apache.openjpa.lib.meta.CFMetaDataParser.classForName(String,String,boolean,ClassLoader)",25,69
org.apache.openjpa.kernel.DetachManager.preSerialize(StateManagerImpl),28,53
"org.apache.openjpa.kernel.DetachManager.writeDetachedState(StateManagerImpl,ObjectOutput,BitSet)",28,69
"org.apache.openjpa.kernel.DetachManager.preDetach(Broker,StateManagerImpl,BitSet,boolean,boolean)",50,128
"org.apache.openjpa.kernel.DetachManager.getDetachedState(StateManagerImpl,BitSet)",27,45
org.apache.openjpa.kernel.DetachManager.flushDirty(StateManagerImpl),19,45
"org.apache.openjpa.kernel.DetachManager.setFetchGroupFields(Broker,StateManagerImpl,BitSet)",20,44
"org.apache.openjpa.kernel.DetachManager.DetachManager(BrokerImpl,boolean,OpCallbacks)",42,99
org.apache.openjpa.kernel.DetachManager.detach(Object),21,37
org.apache.openjpa.kernel.DetachManager.detachAll(Collection),24,61
"org.apache.openjpa.kernel.DetachManager.invokeAfterDetach(Collection,List)",39,81
"org.apache.openjpa.kernel.DetachManager.add(List,RuntimeException)",6,16
org.apache.openjpa.kernel.DetachManager.throwExceptions(List),14,25
org.apache.openjpa.kernel.DetachManager.detachInternal(Object),56,165
"org.apache.openjpa.kernel.DetachManager.useDetachedStateManager(StateManagerImpl,DetachOptions)",10,24
org.apache.openjpa.kernel.DetachManager.DetachFieldManager.setStateManager(StateManagerImpl),4,7
org.apache.openjpa.kernel.DetachManager.DetachFieldManager.detachVersion(),28,66
org.apache.openjpa.kernel.DetachManager.DetachFieldManager.reproxy(DetachedStateManager),35,75
org.apache.openjpa.kernel.DetachManager.DetachFieldManager.getDetachedPersistenceCapable(),4,9
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.InstanceDetachFieldManager(PersistenceCapable,DetachedStateManager)",11,15
org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.getDetachedPersistenceCapable(),3,5
org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.detachFields(BitSet),40,84
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.detachField(PersistenceCapable,int,boolean)",15,26
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.storeBooleanField(int,boolean)",5,13
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.storeByteField(int,byte)",5,13
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.storeCharField(int,char)",5,13
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.storeDoubleField(int,double)",5,13
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.storeFloatField(int,float)",5,13
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.storeIntField(int,int)",5,13
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.storeLongField(int,long)",5,13
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.storeShortField(int,short)",5,13
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.storeStringField(int,String)",6,16
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.storeObjectField(int,Object)",7,19
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.reproxy(Object,int)",11,22
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.detachField(Object,int)",38,249
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.detachArray(Object,FieldMetaData)",16,27
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.detachCollection(Collection,Collection,FieldMetaData)",25,47
"org.apache.openjpa.kernel.DetachManager.InstanceDetachFieldManager.detachMap(Map,Map,FieldMetaData)",30,101
org.apache.openjpa.persistence.TupleImpl.TupleImpl(TupleFactory),11,18
org.apache.openjpa.persistence.TupleImpl.get(TupleElement<X>),8,15
"org.apache.openjpa.persistence.TupleImpl.get(String,Class<X>)",9,14
org.apache.openjpa.persistence.TupleImpl.get(String),3,4
"org.apache.openjpa.persistence.TupleImpl.get(int,Class<X>)",14,20
org.apache.openjpa.persistence.TupleImpl.get(int),1,1
org.apache.openjpa.persistence.TupleImpl.toArray(),3,3
org.apache.openjpa.persistence.TupleImpl.getElements(),5,6
"org.apache.openjpa.persistence.TupleImpl.put(Integer,Object)",10,14
"org.apache.openjpa.persistence.TupleImpl.assertAndConvertType(String,Object,Class<X>)",20,38
org.apache.openjpa.lib.rop.RandomAccessResultList.RandomAccessResultList(ResultObjectProvider),15,23
org.apache.openjpa.lib.rop.RandomAccessResultList.newRowMap(),8,11
org.apache.openjpa.lib.rop.RandomAccessResultList.isProviderOpen(),1,1
org.apache.openjpa.lib.rop.RandomAccessResultList.isClosed(),1,2
org.apache.openjpa.lib.rop.RandomAccessResultList.close(),3,4
org.apache.openjpa.lib.rop.RandomAccessResultList.getInternal(int),10,21
org.apache.openjpa.lib.rop.RandomAccessResultList.instantiateRow(Integer),22,34
org.apache.openjpa.lib.rop.RandomAccessResultList.checkComplete(),33,66
org.apache.openjpa.lib.rop.RandomAccessResultList.size(),8,17
org.apache.openjpa.lib.rop.RandomAccessResultList.free(),6,6
org.apache.openjpa.lib.rop.RandomAccessResultList.writeReplace(),12,24
org.apache.openjpa.lib.rop.RandomAccessResultList.toString(),10,13
org.apache.openjpa.lib.rop.RandomAccessResultList.hashCode(),10,12
org.apache.openjpa.lib.rop.RandomAccessResultList.equals(Object),8,8
org.apache.openjpa.persistence.datacache.OptimisticLockInstance.OptimisticLockInstance(),3,3
org.apache.openjpa.persistence.datacache.OptimisticLockInstance.OptimisticLockInstance(String),5,7
org.apache.openjpa.persistence.datacache.OptimisticLockInstance.getPK(),0,0
org.apache.openjpa.persistence.datacache.OptimisticLockInstance.getOpLock(),2,2
org.apache.openjpa.persistence.datacache.OptimisticLockInstance.getStr(),2,3
"org.apache.openjpa.integration.persistence.provider.DummyProvider2.createContainerEntityManagerFactory(PersistenceUnitInfo,Map)",10,14
"org.apache.openjpa.integration.persistence.provider.DummyProvider2.createEntityManagerFactory(String,Map)",6,10
org.apache.openjpa.integration.persistence.provider.DummyProvider2.getProviderUtil(),2,4
"org.apache.openjpa.lib.util.concurrent.SizedConcurrentHashMap.SizedConcurrentHashMap(int,float,int)",21,47
"org.apache.openjpa.lib.util.concurrent.SizedConcurrentHashMap.putIfAbsent(Object,Object)",9,16
"org.apache.openjpa.lib.util.concurrent.SizedConcurrentHashMap.put(Object,Object)",8,14
org.apache.openjpa.lib.util.concurrent.SizedConcurrentHashMap.getMaxSize(),2,4
org.apache.openjpa.lib.util.concurrent.SizedConcurrentHashMap.setMaxSize(int),10,16
org.apache.openjpa.lib.util.concurrent.SizedConcurrentHashMap.removeOverflow(),4,9
org.apache.openjpa.lib.util.concurrent.SizedConcurrentHashMap.removeOverflow(boolean),25,48
org.apache.openjpa.lib.util.concurrent.SizedConcurrentHashMap.isFull(),2,3
"org.apache.openjpa.lib.util.concurrent.SizedConcurrentHashMap.overflowRemoved(Object,Object)",6,7
org.apache.openjpa.lib.util.concurrent.SizedConcurrentHashMap.writeObject(ObjectOutputStream),7,11
org.apache.openjpa.lib.util.concurrent.SizedConcurrentHashMap.readObject(ObjectInputStream),8,13
openbook.domain.PurchaseOrder.PurchaseOrder(),26,32
openbook.domain.PurchaseOrder.PurchaseOrder(ShoppingCart),26,65
openbook.domain.PurchaseOrder.getId(),6,6
openbook.domain.PurchaseOrder.getCustomer(),4,8
openbook.domain.PurchaseOrder.getStatus(),2,5
openbook.domain.PurchaseOrder.isDelivered(),3,5
openbook.domain.PurchaseOrder.setDelivered(),28,48
openbook.domain.PurchaseOrder.getItems(),7,14
"openbook.domain.PurchaseOrder.addItem(Book,int)",20,49
openbook.domain.PurchaseOrder.getTotal(),3,5
openbook.domain.PurchaseOrder.getPlacedOn(),3,5
openbook.domain.PurchaseOrder.getDeliveredOn(),3,6
org.apache.openjpa.kernel.AuditManager.AuditManager(Auditor),21,38
org.apache.openjpa.kernel.AuditManager.register(Class<>),15,63
org.apache.openjpa.kernel.AuditManager.getAuditor(),1,3
org.apache.openjpa.kernel.AuditManager.getAuditedTypes(),5,7
org.apache.openjpa.kernel.AuditManager.afterBegin(TransactionEvent),16,28
org.apache.openjpa.kernel.AuditManager.beforeCommit(TransactionEvent),9,14
org.apache.openjpa.kernel.AuditManager.forget(Broker),8,12
org.apache.openjpa.kernel.AuditManager.afterCommit(TransactionEvent),6,8
org.apache.openjpa.kernel.AuditManager.afterRollback(TransactionEvent),6,8
org.apache.openjpa.kernel.AuditManager.afterCommitComplete(TransactionEvent),7,9
org.apache.openjpa.kernel.AuditManager.afterRollbackComplete(TransactionEvent),7,9
org.apache.openjpa.kernel.AuditManager.beforeFlush(TransactionEvent),3,4
org.apache.openjpa.kernel.AuditManager.afterFlush(TransactionEvent),3,4
org.apache.openjpa.kernel.AuditManager.afterStateTransitions(TransactionEvent),3,4
org.apache.openjpa.kernel.AuditManager.getPersistenceCapable(LifecycleEvent),10,25
org.apache.openjpa.kernel.AuditManager.getBroker(PersistenceCapable),12,24
org.apache.openjpa.kernel.AuditManager.getImpl(Object),8,20
"org.apache.openjpa.kernel.AuditManager.isAuditable(AuditableOperation,StateManagerImpl)",16,43
org.apache.openjpa.kernel.AuditManager.AuditCallback.AuditCallback(Broker),3,6
org.apache.openjpa.kernel.AuditManager.AuditCallback.audit(),31,64
"org.apache.openjpa.kernel.AuditManager.AuditCallback.save(AuditableOperation,LifecycleEvent)",29,64
org.apache.openjpa.kernel.AuditManager.AuditCallback.clear(),1,1
org.apache.openjpa.kernel.AuditManager.AuditCallback.afterLoad(LifecycleEvent),6,8
org.apache.openjpa.kernel.AuditManager.AuditCallback.afterPersist(LifecycleEvent),7,9
org.apache.openjpa.kernel.AuditManager.AuditCallback.beforeDelete(LifecycleEvent),6,9
org.apache.openjpa.kernel.AuditManager.AuditCallback.beforeDirty(LifecycleEvent),7,9
org.apache.openjpa.kernel.AuditManager.AuditCallback.beforePersist(LifecycleEvent),3,4
org.apache.openjpa.kernel.AuditManager.AuditCallback.afterRefresh(LifecycleEvent),3,4
org.apache.openjpa.kernel.AuditManager.AuditCallback.beforeStore(LifecycleEvent),7,9
org.apache.openjpa.kernel.AuditManager.AuditCallback.afterStore(LifecycleEvent),3,4
org.apache.openjpa.kernel.AuditManager.AuditCallback.beforeClear(LifecycleEvent),2,3
org.apache.openjpa.kernel.AuditManager.AuditCallback.afterClear(LifecycleEvent),2,3
org.apache.openjpa.kernel.AuditManager.AuditCallback.afterDelete(LifecycleEvent),3,4
org.apache.openjpa.kernel.AuditManager.AuditCallback.afterDirty(LifecycleEvent),7,9
org.apache.openjpa.kernel.AuditManager.AuditCallback.beforeDirtyFlushed(LifecycleEvent),4,5
org.apache.openjpa.kernel.AuditManager.AuditCallback.afterDirtyFlushed(LifecycleEvent),4,5
org.apache.openjpa.kernel.AuditManager.AuditCallback.beforeDetach(LifecycleEvent),3,4
org.apache.openjpa.kernel.AuditManager.AuditCallback.afterDetach(LifecycleEvent),3,4
org.apache.openjpa.kernel.AuditManager.AuditCallback.beforeAttach(LifecycleEvent),3,4
org.apache.openjpa.kernel.AuditManager.AuditCallback.afterAttach(LifecycleEvent),7,9
org.apache.openjpa.persistence.datacache.TestPCParametersInQueries.TestPCParametersInQueries(String),5,7
org.apache.openjpa.persistence.datacache.TestPCParametersInQueries.setUp(),29,70
org.apache.openjpa.persistence.datacache.TestPCParametersInQueries.testPCParameter(),22,66
org.apache.openjpa.persistence.access.xml.XMLEmbedFieldAccess.getFirstName(),2,3
org.apache.openjpa.persistence.access.xml.XMLEmbedFieldAccess.setFirstName(String),4,6
org.apache.openjpa.persistence.access.xml.XMLEmbedFieldAccess.getLastName(),2,3
org.apache.openjpa.persistence.access.xml.XMLEmbedFieldAccess.setLastName(String),4,6
org.apache.openjpa.persistence.access.xml.XMLEmbedFieldAccess.equals(Object),8,23
"org.apache.openjpa.lib.util.ZipResourceBundleProvider.findResource(String,Locale,ClassLoader)",25,56
org.apache.openjpa.jdbc.schema.Index.Index(),2,2
"org.apache.openjpa.jdbc.schema.Index.Index(String,Table)",7,17
"org.apache.openjpa.jdbc.schema.Index.Index(DBIdentifier,Table)",4,7
org.apache.openjpa.jdbc.schema.Index.isUnique(),2,4
org.apache.openjpa.jdbc.schema.Index.setUnique(boolean),3,8
org.apache.openjpa.jdbc.schema.Index.isLogical(),1,1
org.apache.openjpa.jdbc.schema.Index.getFullName(),4,5
org.apache.openjpa.jdbc.schema.Index.getFullIdentifier(),3,5
org.apache.openjpa.jdbc.schema.Index.equalsIndex(Index),12,25
"org.apache.openjpa.jdbc.kernel.exps.ConstInstanceofExpression.ConstInstanceofExpression(Const,Class)",9,12
"org.apache.openjpa.jdbc.kernel.exps.ConstInstanceofExpression.initialize(Select,ExpContext,Map)",8,12
"org.apache.openjpa.jdbc.kernel.exps.ConstInstanceofExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",13,22
"org.apache.openjpa.jdbc.kernel.exps.ConstInstanceofExpression.selectColumns(Select,ExpContext,ExpState,boolean)",7,14
org.apache.openjpa.jdbc.kernel.exps.ConstInstanceofExpression.acceptVisit(ExpressionVisitor),6,12
org.apache.openjpa.persistence.annotations.TestPropertyAccess.TestPropertyAccess(String),6,7
org.apache.openjpa.persistence.annotations.TestPropertyAccess.setUp(),4,4
org.apache.openjpa.persistence.annotations.TestPropertyAccess.testPropertyAccessBasicCreation(),19,41
org.apache.openjpa.persistence.annotations.TestPropertyAccess.testPropertyAccessBasicMutation(),21,55
org.apache.openjpa.persistence.annotations.TestPropertyAccess.testJPQL(),16,29
org.apache.openjpa.persistence.annotations.TestPropertyAccess.testJPQLWithFieldNameMismatch(),18,31
org.apache.openjpa.jdbc.conf.MappingFactoryValue.MappingFactoryValue(String),5,6
"org.apache.openjpa.jdbc.conf.MappingFactoryValue.setMetaDataFactoryDefault(String,String)",16,54
"org.apache.openjpa.jdbc.conf.MappingFactoryValue.setMappedMetaDataFactoryDefault(String,String)",14,36
"org.apache.openjpa.jdbc.conf.MappingFactoryValue.instantiateMetaDataFactory(Configuration,PluginValue,String)",14,31
"org.apache.openjpa.jdbc.conf.MappingFactoryValue.instantiateMetaDataFactory(Configuration,PluginValue,String,boolean)",54,281
org.apache.openjpa.jdbc.kernel.exps.Min.Min(Val),6,8
org.apache.openjpa.jdbc.kernel.exps.Min.getOperator(),3,3
org.apache.openjpa.jdbc.kernel.exps.Min.isAggregate(),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Store.getSite(),1,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Store.setSite(Site),2,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Store.setStoreName(String),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Store.getStoreName(),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Store.setStoreDescription(String),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Store.getStoreDescription(),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Store.setSiteId(Long),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Store.getSiteId(),1,2
org.apache.openjpa.lib.rop.TestSimpleResultList.TestSimpleResultList(String),5,7
org.apache.openjpa.lib.rop.TestSimpleResultList.getResultList(ResultObjectProvider),5,12
org.apache.openjpa.lib.rop.TestSimpleResultList.main(String[]),3,4
org.apache.openjpa.persistence.arrays.TestXMLExceptionEntity.getPersistenceUnitName(),5,5
org.apache.openjpa.persistence.arrays.TestXMLExceptionEntity.testExceptionArrayAsLob(),24,51
org.apache.openjpa.persistence.arrays.TestXMLExceptionEntity.testExceptionPersistentCollection(),27,61
org.apache.openjpa.persistence.arrays.TestXMLExceptionEntity.testExceptionElementCollection(),28,63
"org.apache.openjpa.jdbc.kernel.exps.BindVariableAndExpression.BindVariableAndExpression(BindVariableExpression,Exp)",8,17
"org.apache.openjpa.jdbc.kernel.exps.BindVariableAndExpression.initialize(Select,ExpContext,Map)",11,26
"org.apache.openjpa.jdbc.kernel.exps.BindVariableAndExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",11,23
"org.apache.openjpa.jdbc.kernel.exps.BindVariableAndExpression.selectColumns(Select,ExpContext,ExpState,boolean)",8,17
org.apache.openjpa.jdbc.kernel.exps.BindVariableAndExpression.acceptVisit(ExpressionVisitor),8,17
org.apache.openjpa.kernel.exps.ValExpression.ValExpression(Val),5,9
"org.apache.openjpa.kernel.exps.ValExpression.eval(Object,Object,StoreContext,Object[])",10,18
"org.apache.openjpa.kernel.exps.ValExpression.eval(Collection,StoreContext,Object[])",12,18
org.apache.openjpa.kernel.exps.ValExpression.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.persistence.callbacks.ListenerTestEntity.getId(),0,0
org.apache.openjpa.persistence.callbacks.ListenerTestEntity.getValue(),1,1
org.apache.openjpa.persistence.callbacks.ListenerTestEntity.setValue(int),3,3
org.apache.openjpa.persistence.common.apps.Address.Address(),1,1
"org.apache.openjpa.persistence.common.apps.Address.Address(String,String,String,String)",6,17
org.apache.openjpa.persistence.common.apps.Address.getCity(),2,3
org.apache.openjpa.persistence.common.apps.Address.setCity(String),3,6
org.apache.openjpa.persistence.common.apps.Address.getCountry(),2,3
org.apache.openjpa.persistence.common.apps.Address.setCountry(String),3,6
org.apache.openjpa.persistence.common.apps.Address.getId(),0,0
org.apache.openjpa.persistence.common.apps.Address.getStreetAd(),2,3
org.apache.openjpa.persistence.common.apps.Address.setStreetAd(String),3,6
org.apache.openjpa.persistence.common.apps.Address.getZipcode(),2,3
org.apache.openjpa.persistence.common.apps.Address.setZipcode(String),3,6
"org.apache.openjpa.jdbc.kernel.exps.InExpression.InExpression(Val,Const)",9,14
org.apache.openjpa.jdbc.kernel.exps.InExpression.getConstant(),2,3
org.apache.openjpa.jdbc.kernel.exps.InExpression.getValue(),3,5
"org.apache.openjpa.jdbc.kernel.exps.InExpression.initialize(Select,ExpContext,Map)",12,25
"org.apache.openjpa.jdbc.kernel.exps.InExpression.InExpState.InExpState(Joins,ExpState,ExpState)",4,12
"org.apache.openjpa.jdbc.kernel.exps.InExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",35,117
"org.apache.openjpa.jdbc.kernel.exps.InExpression.createInContains(Select,ExpContext,ExpState,SQLBuffer,List,Column[])",27,70
"org.apache.openjpa.jdbc.kernel.exps.InExpression.inContains(Select,ExpContext,ExpState,SQLBuffer,Collection,Column[])",23,48
"org.apache.openjpa.jdbc.kernel.exps.InExpression.orContains(Select,ExpContext,ExpState,SQLBuffer,Collection,Column[])",29,74
"org.apache.openjpa.jdbc.kernel.exps.InExpression.selectColumns(Select,ExpContext,ExpState,boolean)",11,25
"org.apache.openjpa.jdbc.kernel.exps.InExpression.getCollection(ExpContext,ExpState)",24,43
org.apache.openjpa.jdbc.kernel.exps.InExpression.acceptVisit(ExpressionVisitor),7,16
"org.apache.openjpa.kernel.PNewState.initialize(StateManagerImpl,PCState)",10,15
"org.apache.openjpa.kernel.PNewState.beforeFlush(StateManagerImpl,boolean,OpCallbacks)",8,12
org.apache.openjpa.kernel.PNewState.commit(StateManagerImpl),5,5
org.apache.openjpa.kernel.PNewState.commitRetain(StateManagerImpl),6,6
org.apache.openjpa.kernel.PNewState.rollback(StateManagerImpl),4,4
org.apache.openjpa.kernel.PNewState.rollbackRestore(StateManagerImpl),6,8
org.apache.openjpa.kernel.PNewState.delete(StateManagerImpl),8,11
org.apache.openjpa.kernel.PNewState.nontransactional(StateManagerImpl),5,6
org.apache.openjpa.kernel.PNewState.release(StateManagerImpl),5,6
org.apache.openjpa.kernel.PNewState.isVersionCheckRequired(StateManagerImpl),8,9
org.apache.openjpa.kernel.PNewState.isTransactional(),1,1
org.apache.openjpa.kernel.PNewState.isPersistent(),1,1
org.apache.openjpa.kernel.PNewState.isNew(),0,0
org.apache.openjpa.kernel.PNewState.isDirty(),1,1
org.apache.openjpa.kernel.PNewState.toString(),2,3
org.apache.openjpa.persistence.RestoreStateType.RestoreStateType(int),4,6
org.apache.openjpa.persistence.RestoreStateType.toKernelConstant(),3,4
org.apache.openjpa.persistence.RestoreStateType.fromKernelConstant(int),9,23
"org.apache.openjpa.util.GeneratedClasses.getMostDerivedLoader(Class,Class)",11,24
"org.apache.openjpa.util.GeneratedClasses.loadBCClass(BCClass,ClassLoader)",17,26
"org.apache.openjpa.util.GeneratedClasses.canLoad(ClassLoader,Class)",16,33
org.apache.openjpa.integration.validation.ConstraintSize.createInvalidString(),13,20
org.apache.openjpa.integration.validation.ConstraintSize.createInvalidMap(),7,14
org.apache.openjpa.integration.validation.ConstraintSize.createInvalidSize(),8,15
org.apache.openjpa.integration.validation.ConstraintSize.createValid(),8,14
org.apache.openjpa.integration.validation.ConstraintSize.ConstraintSize(),5,5
org.apache.openjpa.integration.validation.ConstraintSize.getId(),0,0
org.apache.openjpa.integration.validation.ConstraintSize.getMyString(),1,3
org.apache.openjpa.integration.validation.ConstraintSize.setMyString(String),2,4
org.apache.openjpa.integration.validation.ConstraintSize.getMyMap(),2,5
"org.apache.openjpa.integration.validation.ConstraintSize.setMyMap(Map<String,String>)",3,6
org.apache.openjpa.integration.validation.ConstraintSize.setInvalidMap(),6,15
org.apache.openjpa.integration.validation.ConstraintSize.setValidMap(),6,13
org.apache.openjpa.jdbc.meta.DiscriminatorMappingInfo.getValue(),4,7
org.apache.openjpa.jdbc.meta.DiscriminatorMappingInfo.setValue(String),5,10
"org.apache.openjpa.jdbc.meta.DiscriminatorMappingInfo.getValue(Discriminator,boolean)",17,45
"org.apache.openjpa.jdbc.meta.DiscriminatorMappingInfo.getColumns(Discriminator,Column[],boolean)",15,33
"org.apache.openjpa.jdbc.meta.DiscriminatorMappingInfo.getIndex(Discriminator,Column[],boolean)",16,33
org.apache.openjpa.jdbc.meta.DiscriminatorMappingInfo.syncWith(Discriminator),38,129
org.apache.openjpa.jdbc.meta.DiscriminatorMappingInfo.clear(boolean),2,3
org.apache.openjpa.jdbc.meta.DiscriminatorMappingInfo.copy(MappingInfo),5,17
org.apache.openjpa.persistence.criteria.TestJoinCondition.testSingleAttributeJoinModel(),12,16
org.apache.openjpa.persistence.criteria.TestJoinCondition.testCollectionJoinModel(),11,15
org.apache.openjpa.persistence.criteria.TestJoinCondition.testSetJoinModel(),10,15
org.apache.openjpa.persistence.criteria.TestJoinCondition.testListJoinModel(),10,15
org.apache.openjpa.persistence.criteria.TestJoinCondition.testInnerJoinSingleAttributeWithoutCondition(),14,21
org.apache.openjpa.persistence.criteria.TestJoinCondition.testCrossJoinWithoutCondition(),12,16
org.apache.openjpa.persistence.criteria.TestJoinCondition.testCrossJoinWithoutCondition1(),13,16
org.apache.openjpa.persistence.criteria.TestJoinCondition.testCrossJoin(),13,20
org.apache.openjpa.persistence.criteria.TestJoinCondition.testInnerJoinSingleAttribute(),15,22
org.apache.openjpa.persistence.criteria.TestJoinCondition.testOuterJoinSingleAttributeWithoutCondition(),16,23
org.apache.openjpa.persistence.criteria.TestJoinCondition.testOuterJoinSingleAttribute(),17,25
org.apache.openjpa.persistence.criteria.TestJoinCondition.testSetJoinWithoutCondition(),11,17
org.apache.openjpa.persistence.criteria.TestJoinCondition.testListJoinWithoutCondition(),11,17
org.apache.openjpa.persistence.criteria.TestJoinCondition.testCollectionJoinWithoutCondition(),12,17
org.apache.openjpa.persistence.criteria.TestJoinCondition.testMapJoinWithoutCondition(),11,17
org.apache.openjpa.persistence.criteria.TestJoinCondition.testKeyExpression(),15,23
org.apache.openjpa.persistence.criteria.TestJoinCondition.testValueExpression(),16,25
org.apache.openjpa.persistence.criteria.TestJoinCondition.testFetchJoin(),11,16
org.apache.openjpa.persistence.criteria.TestJoinCondition.testOuterFetchJoin(),14,21
org.apache.openjpa.util.ProxyMaps.beforeClear(ProxyMap),13,31
org.apache.openjpa.util.ProxyMaps.keySet(ProxyMap),10,30
org.apache.openjpa.util.ProxyMaps.values(ProxyMap),10,28
"org.apache.openjpa.util.ProxyMaps.afterEntrySet(ProxyMap,Set)",7,18
"org.apache.openjpa.util.ProxyMaps.beforeGet(ProxyMap,Object)",10,19
"org.apache.openjpa.util.ProxyMaps.afterGet(ProxyMap,Object,Object,boolean)",23,49
"org.apache.openjpa.util.ProxyMaps.beforePut(ProxyMap,Object,Object)",12,29
"org.apache.openjpa.util.ProxyMaps.afterPut(ProxyMap,Object,Object,Object,boolean)",17,54
"org.apache.openjpa.util.ProxyMaps.beforeSetProperty(ProxyMap,String,String)",11,18
"org.apache.openjpa.util.ProxyMaps.afterSetProperty(ProxyMap,String,String,Object,boolean)",16,37
"org.apache.openjpa.util.ProxyMaps.beforeLoad(ProxyMap,InputStream)",10,13
"org.apache.openjpa.util.ProxyMaps.beforeLoadFromXML(ProxyMap,InputStream)",11,15
"org.apache.openjpa.util.ProxyMaps.putAll(ProxyMap,Map)",11,27
"org.apache.openjpa.util.ProxyMaps.beforeRemove(ProxyMap,Object)",10,17
"org.apache.openjpa.util.ProxyMaps.afterRemove(ProxyMap,Object,Object,boolean)",16,46
org.apache.openjpa.util.ProxyMaps.ProxyEntrySet.setView(int),4,8
"org.apache.openjpa.util.ProxyMaps.ProxyEntrySetImpl.ProxyEntrySetImpl(ProxyMap,Set)",10,20
org.apache.openjpa.util.ProxyMaps.ProxyEntrySetImpl.getView(),2,4
org.apache.openjpa.util.ProxyMaps.ProxyEntrySetImpl.setView(int),3,7
org.apache.openjpa.util.ProxyMaps.ProxyEntrySetImpl.size(),2,3
org.apache.openjpa.util.ProxyMaps.ProxyEntrySetImpl.remove(Object),10,13
org.apache.openjpa.util.ProxyMaps.ProxyEntrySetImpl.iterator(),5,9
org.apache.openjpa.util.ProxyMaps.ProxyEntrySetImpl.iterator().$1.hasNext(),1,1
org.apache.openjpa.util.ProxyMaps.ProxyEntrySetImpl.iterator().$1.next(),9,11
org.apache.openjpa.util.ProxyMaps.ProxyEntrySetImpl.iterator().$1.remove(),10,25
org.apache.openjpa.util.ProxyMaps.ProxyEntrySetImpl.writeReplace(),12,22
org.apache.openjpa.persistence.OpenJPAEnum<E>.toKernelConstant(),5,7
org.apache.openjpa.persistence.OpenJPAEnum<E>.convertToKernelConstant(int),18,26
org.apache.openjpa.persistence.OpenJPAEnum<E>.convertToKernelConstant(String),18,27
org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.getJoinForeignKey(ClassMapping),11,18
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.selectElement(Select,ClassMapping,JDBCStore,JDBCFetchConfiguration,int,Joins)",22,34
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.loadElement(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",20,28
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.joinElementRelation(Joins,ClassMapping)",12,22
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.join(Joins,ClassMapping)",11,16
org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.newLRSProxy(),5,7
org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.toCollection(Object),15,26
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.add(JDBCStore,Object,Object)",14,23
org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.getDefaultElementMapping(boolean),8,17
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.supportsSelect(Select,int,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",28,54
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.selectEagerParallel(SelectExecutor,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",24,57
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.selectEagerParallel(SelectExecutor,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int).$1.select(Select,int)",8,13
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.selectEagerJoin(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",29,59
org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.isEagerSelectToMany(),2,2
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.selectEager(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,boolean,boolean)",59,158
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.loadEagerParallel(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Object)",35,76
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.processEagerParallelResult(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",66,173
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.setMappedBy(Object,Result)",20,59
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.setMappedBy(Object,OpenJPAStateManager,Object,Result)",38,144
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.getNextObjectId(ClassMapping,JDBCStore,Result,Object)",28,63
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.loadEagerJoin(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",51,173
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.getNextRef(ClassMapping,JDBCStore,Result,Object,Joins)",27,78
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",75,279
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration).$2.select(Select,int)",15,23
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.selectAll(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",31,73
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.loadProjection(JDBCStore,JDBCFetchConfiguration,Result,Joins)",13,22
org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.getJoinForeignKey(),5,10
org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.requiresOrderBy(),6,6
"org.apache.openjpa.jdbc.meta.strats.StoreCollectionFieldStrategy.getObjectIdForJoin(ForeignKey,OpenJPAStateManager)",23,55
org.apache.openjpa.persistence.jest.ObjectFormatter<T>.getMimeType(),5,7
"org.apache.openjpa.persistence.jest.ObjectFormatter<T>.encode(Collection<OpenJPAStateManager>,Metamodel)",31,47
org.apache.openjpa.persistence.jest.ObjectFormatter<T>.encode(Metamodel),14,20
"org.apache.openjpa.persistence.jest.ObjectFormatter<T>.writeOut(Collection<OpenJPAStateManager>,Metamodel,String,String,String,OutputStream)",31,56
"org.apache.openjpa.persistence.jest.ObjectFormatter<T>.writeOut(Metamodel,String,String,String,OutputStream)",19,31
org.apache.openjpa.conf.NoOpCacheMarshaller.load(),2,2
org.apache.openjpa.conf.NoOpCacheMarshaller.setId(String),2,2
org.apache.openjpa.conf.NoOpCacheMarshaller.getId(),1,1
org.apache.openjpa.conf.NoOpCacheMarshaller.setValidationPolicy(String),4,5
org.apache.openjpa.conf.NoOpCacheMarshaller.store(Object),2,2
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.getElementCollection(),6,7
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.setElementCollection(Collection<EmbedPropAccess>),8,10
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.getEmbedField(),3,6
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.setEmbedField(EmbedFieldAccess),5,9
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.getVersion(),2,2
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.setVersion(int),3,5
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.getManyToOne(),2,2
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.setManyToOne(PropAccess),3,3
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.getOneToMany(),3,3
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.setOneToMany(Collection<FieldAccess>),4,4
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.getOneToOne(),2,2
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.setOneToOne(PropAccess),3,3
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.getManyToMany(),3,3
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.setManyToMany(Collection<PropAccess>),4,4
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.getName(),2,3
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.setName(String),3,4
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.setEmbedId(EmbedId),3,6
org.apache.openjpa.persistence.access.FieldAccessPropStratsEntity.getEmbedId(),2,3
org.apache.openjpa.lib.conf.ConfigurationImpl.ConfigurationImpl(),11,11
org.apache.openjpa.lib.conf.ConfigurationImpl.ConfigurationImpl(boolean),27,101
org.apache.openjpa.lib.conf.ConfigurationImpl.loadGlobals(),37,81
org.apache.openjpa.lib.conf.ConfigurationImpl.getProductName(),3,4
org.apache.openjpa.lib.conf.ConfigurationImpl.setProductName(String),4,7
org.apache.openjpa.lib.conf.ConfigurationImpl.getLogFactory(),4,18
org.apache.openjpa.lib.conf.ConfigurationImpl.setLogFactory(LogFactory),4,13
org.apache.openjpa.lib.conf.ConfigurationImpl.getLog(),4,6
org.apache.openjpa.lib.conf.ConfigurationImpl.setLog(String),5,10
org.apache.openjpa.lib.conf.ConfigurationImpl.getLog(String),4,8
org.apache.openjpa.lib.conf.ConfigurationImpl.getId(),1,1
org.apache.openjpa.lib.conf.ConfigurationImpl.setId(String),2,3
org.apache.openjpa.lib.conf.ConfigurationImpl.getConfigurationLog(),8,13
org.apache.openjpa.lib.conf.ConfigurationImpl.getValues(),5,8
org.apache.openjpa.lib.conf.ConfigurationImpl.getValue(String),26,42
org.apache.openjpa.lib.conf.ConfigurationImpl.setReadOnly(int),2,4
org.apache.openjpa.lib.conf.ConfigurationImpl.isDeferResourceLoading(),3,6
org.apache.openjpa.lib.conf.ConfigurationImpl.setDeferResourceLoading(boolean),4,13
org.apache.openjpa.lib.conf.ConfigurationImpl.instantiateAll(),30,85
org.apache.openjpa.lib.conf.ConfigurationImpl.isReadOnly(),3,4
org.apache.openjpa.lib.conf.ConfigurationImpl.addPropertyChangeListener(PropertyChangeListener),5,22
org.apache.openjpa.lib.conf.ConfigurationImpl.removePropertyChangeListener(PropertyChangeListener),5,17
org.apache.openjpa.lib.conf.ConfigurationImpl.valueChanged(Value),16,45
org.apache.openjpa.lib.conf.ConfigurationImpl.close(),13,30
org.apache.openjpa.lib.conf.ConfigurationImpl.preClose(),13,17
org.apache.openjpa.lib.conf.ConfigurationImpl.getAdditionalBeanInfo(),3,7
org.apache.openjpa.lib.conf.ConfigurationImpl.getBeanDescriptor(),2,6
org.apache.openjpa.lib.conf.ConfigurationImpl.getDefaultEventIndex(),2,2
org.apache.openjpa.lib.conf.ConfigurationImpl.getDefaultPropertyIndex(),2,2
org.apache.openjpa.lib.conf.ConfigurationImpl.getEventSetDescriptors(),4,9
org.apache.openjpa.lib.conf.ConfigurationImpl.getIcon(int),2,2
org.apache.openjpa.lib.conf.ConfigurationImpl.getMethodDescriptors(),14,53
org.apache.openjpa.lib.conf.ConfigurationImpl.getPropertyDescriptors(),21,58
org.apache.openjpa.lib.conf.ConfigurationImpl.getPropertyDescriptor(Value),68,232
"org.apache.openjpa.lib.conf.ConfigurationImpl.findLocalized(String,boolean,Class<>)",24,54
org.apache.openjpa.lib.conf.ConfigurationImpl.toProperties(boolean),44,111
org.apache.openjpa.lib.conf.ConfigurationImpl.fromProperties(Map),66,164
org.apache.openjpa.lib.conf.ConfigurationImpl.getPropertyKeys(String),8,19
org.apache.openjpa.lib.conf.ConfigurationImpl.getPropertyKeys(),33,69
org.apache.openjpa.lib.conf.ConfigurationImpl.fixPrefix(String),12,31
org.apache.openjpa.lib.conf.ConfigurationImpl.hasKnownPrefix(String),8,15
"org.apache.openjpa.lib.conf.ConfigurationImpl.setValue(Map,Value)",24,61
"org.apache.openjpa.lib.conf.ConfigurationImpl.findValue(Map,Value)",29,72
org.apache.openjpa.lib.conf.ConfigurationImpl.warnInvalidProperty(String),26,73
org.apache.openjpa.lib.conf.ConfigurationImpl.newPropertyList(),18,31
org.apache.openjpa.lib.conf.ConfigurationImpl.isInvalidProperty(String),30,59
org.apache.openjpa.lib.conf.ConfigurationImpl.setProperties(String),28,60
org.apache.openjpa.lib.conf.ConfigurationImpl.setPropertiesFile(File),24,38
org.apache.openjpa.lib.conf.ConfigurationImpl.getPropertiesResource(),11,18
org.apache.openjpa.lib.conf.ConfigurationImpl.equals(Object),23,49
org.apache.openjpa.lib.conf.ConfigurationImpl.hashCode(),11,29
org.apache.openjpa.lib.conf.ConfigurationImpl.toXMLName(String),42,98
org.apache.openjpa.lib.conf.ConfigurationImpl.readExternal(ObjectInput),10,17
org.apache.openjpa.lib.conf.ConfigurationImpl.writeExternal(ObjectOutput),12,21
org.apache.openjpa.lib.conf.ConfigurationImpl.clone(),16,37
org.apache.openjpa.lib.conf.ConfigurationImpl.removeValue(Value),5,10
org.apache.openjpa.lib.conf.ConfigurationImpl.addValue(T),5,11
org.apache.openjpa.lib.conf.ConfigurationImpl.addString(String),8,21
org.apache.openjpa.lib.conf.ConfigurationImpl.addFile(String),9,21
org.apache.openjpa.lib.conf.ConfigurationImpl.addInt(String),8,17
org.apache.openjpa.lib.conf.ConfigurationImpl.addDouble(String),8,17
org.apache.openjpa.lib.conf.ConfigurationImpl.addBoolean(String),8,19
org.apache.openjpa.lib.conf.ConfigurationImpl.addStringList(String),9,25
org.apache.openjpa.lib.conf.ConfigurationImpl.addObject(String),9,21
"org.apache.openjpa.lib.conf.ConfigurationImpl.addPlugin(String,boolean)",10,23
org.apache.openjpa.lib.conf.ConfigurationImpl.addPluginList(String),10,25
org.apache.openjpa.lib.conf.ConfigurationImpl.getUserClassLoader(),2,4
org.apache.openjpa.lib.conf.ConfigurationImpl.setUserClassLoader(ClassLoader),3,5
org.apache.openjpa.jdbc.meta.Discriminator.Discriminator(ClassMapping),7,14
org.apache.openjpa.jdbc.meta.Discriminator.getRepository(),4,6
org.apache.openjpa.jdbc.meta.Discriminator.getMappingRepository(),2,7
org.apache.openjpa.jdbc.meta.Discriminator.getClassMapping(),2,5
org.apache.openjpa.jdbc.meta.Discriminator.getStrategy(),3,6
"org.apache.openjpa.jdbc.meta.Discriminator.setStrategy(DiscriminatorStrategy,Boolean)",17,43
org.apache.openjpa.jdbc.meta.Discriminator.getValue(),3,5
org.apache.openjpa.jdbc.meta.Discriminator.setValue(Object),4,8
org.apache.openjpa.jdbc.meta.Discriminator.getMappingInfo(),5,9
org.apache.openjpa.jdbc.meta.Discriminator.getColumns(),4,5
org.apache.openjpa.jdbc.meta.Discriminator.setColumns(Column[]),7,13
org.apache.openjpa.jdbc.meta.Discriminator.getColumnIO(),5,7
org.apache.openjpa.jdbc.meta.Discriminator.setColumnIO(ColumnIO),5,6
org.apache.openjpa.jdbc.meta.Discriminator.getIndex(),5,7
org.apache.openjpa.jdbc.meta.Discriminator.setIndex(Index),6,10
org.apache.openjpa.jdbc.meta.Discriminator.refSchemaComponents(),8,12
org.apache.openjpa.jdbc.meta.Discriminator.clearMapping(),15,20
org.apache.openjpa.jdbc.meta.Discriminator.syncMappingInfo(),7,12
org.apache.openjpa.jdbc.meta.Discriminator.getResolve(),3,5
org.apache.openjpa.jdbc.meta.Discriminator.setResolve(int),4,8
"org.apache.openjpa.jdbc.meta.Discriminator.setResolve(int,boolean)",5,17
org.apache.openjpa.jdbc.meta.Discriminator.resolve(int),9,33
org.apache.openjpa.jdbc.meta.Discriminator.resolveMapping(),27,56
org.apache.openjpa.jdbc.meta.Discriminator.getSubclassesLoaded(),7,21
org.apache.openjpa.jdbc.meta.Discriminator.setSubclassesLoaded(boolean),5,10
"org.apache.openjpa.jdbc.meta.Discriminator.addClassConditions(Select,boolean,Joins)",24,66
org.apache.openjpa.jdbc.meta.Discriminator.getAlias(),3,4
org.apache.openjpa.jdbc.meta.Discriminator.map(boolean),3,5
org.apache.openjpa.jdbc.meta.Discriminator.initialize(),2,3
"org.apache.openjpa.jdbc.meta.Discriminator.insert(OpenJPAStateManager,JDBCStore,RowManager)",9,13
"org.apache.openjpa.jdbc.meta.Discriminator.update(OpenJPAStateManager,JDBCStore,RowManager)",9,13
"org.apache.openjpa.jdbc.meta.Discriminator.delete(OpenJPAStateManager,JDBCStore,RowManager)",9,13
"org.apache.openjpa.jdbc.meta.Discriminator.isCustomInsert(OpenJPAStateManager,JDBCStore)",7,11
"org.apache.openjpa.jdbc.meta.Discriminator.isCustomUpdate(OpenJPAStateManager,JDBCStore)",7,11
"org.apache.openjpa.jdbc.meta.Discriminator.isCustomDelete(OpenJPAStateManager,JDBCStore)",7,11
"org.apache.openjpa.jdbc.meta.Discriminator.customInsert(OpenJPAStateManager,JDBCStore)",9,13
"org.apache.openjpa.jdbc.meta.Discriminator.customUpdate(OpenJPAStateManager,JDBCStore)",9,13
"org.apache.openjpa.jdbc.meta.Discriminator.customDelete(OpenJPAStateManager,JDBCStore)",9,13
org.apache.openjpa.jdbc.meta.Discriminator.setDiscriminator(Discriminator),4,8
"org.apache.openjpa.jdbc.meta.Discriminator.select(Select,ClassMapping)",4,9
org.apache.openjpa.jdbc.meta.Discriminator.loadSubclasses(JDBCStore),8,13
"org.apache.openjpa.jdbc.meta.Discriminator.getClass(JDBCStore,ClassMapping,Result)",9,15
"org.apache.openjpa.jdbc.meta.Discriminator.hasClassConditions(ClassMapping,boolean)",5,8
"org.apache.openjpa.jdbc.meta.Discriminator.getClassConditions(Select,Joins,ClassMapping,boolean)",10,16
org.apache.openjpa.jdbc.meta.Discriminator.assertStrategy(),4,7
org.apache.openjpa.jdbc.meta.Discriminator.toString(),3,4
org.apache.openjpa.jdbc.meta.Discriminator.setJavaType(int),3,9
org.apache.openjpa.jdbc.meta.Discriminator.getJavaType(),5,20
"org.apache.openjpa.enhance.DynamicStorageGenerator.generateStorage(int[],Object)",33,66
org.apache.openjpa.enhance.DynamicStorageGenerator.getClassName(Object),10,15
org.apache.openjpa.enhance.DynamicStorageGenerator.getFieldAccess(),7,11
org.apache.openjpa.enhance.DynamicStorageGenerator.getFieldName(int),7,14
org.apache.openjpa.enhance.DynamicStorageGenerator.getCreateFieldMethods(int),7,11
"org.apache.openjpa.enhance.DynamicStorageGenerator.decorate(Object,BCClass,int[])",6,7
org.apache.openjpa.enhance.DynamicStorageGenerator.createFactory(BCClass),22,35
org.apache.openjpa.enhance.DynamicStorageGenerator.declareClasses(BCClass),8,9
org.apache.openjpa.enhance.DynamicStorageGenerator.addFactoryMethod(BCClass),21,39
"org.apache.openjpa.enhance.DynamicStorageGenerator.addFieldCount(BCClass,int[],int)",18,61
"org.apache.openjpa.enhance.DynamicStorageGenerator.addInitialize(BCClass,int)",30,74
"org.apache.openjpa.enhance.DynamicStorageGenerator.declareFields(int[],BCClass)",14,39
"org.apache.openjpa.enhance.DynamicStorageGenerator.addSetMethods(BCClass,int[],int)",10,20
"org.apache.openjpa.enhance.DynamicStorageGenerator.addSetMethod(int,BCClass,int[],int)",58,217
"org.apache.openjpa.enhance.DynamicStorageGenerator.addGetMethods(BCClass,int[])",8,14
"org.apache.openjpa.enhance.DynamicStorageGenerator.addGetMethod(int,BCClass,int[])",53,187
"org.apache.openjpa.enhance.DynamicStorageGenerator.replaceMethod(BCClass,String,Class,Class[],boolean)",21,50
"org.apache.openjpa.enhance.DynamicStorageGenerator.addBeanField(BCClass,String,Class)",31,110
"org.apache.openjpa.enhance.DynamicStorageGenerator.isCompatible(int,int)",7,24
"org.apache.openjpa.enhance.DynamicStorageGenerator.throwException(Code,Class)",12,25
org.apache.openjpa.enhance.DynamicStorageGenerator.forType(int),7,26
org.apache.openjpa.enhance.DynamicStorageGenerator.getWrapper(int),6,10
org.apache.openjpa.enhance.DynamicStorageGenerator.getWrapper(Class),5,8
org.apache.openjpa.event.JMSRemoteCommitProvider.setTopic(String),11,19
org.apache.openjpa.event.JMSRemoteCommitProvider.setTopicConnectionFactory(String),12,21
org.apache.openjpa.event.JMSRemoteCommitProvider.setExceptionReconnectAttempts(int),13,22
org.apache.openjpa.event.JMSRemoteCommitProvider.setInto(Options),18,29
org.apache.openjpa.event.JMSRemoteCommitProvider.newContext(),10,17
org.apache.openjpa.event.JMSRemoteCommitProvider.broadcast(RemoteCommitEvent),22,36
org.apache.openjpa.event.JMSRemoteCommitProvider.close(),14,31
org.apache.openjpa.event.JMSRemoteCommitProvider.endConfiguration(),14,18
org.apache.openjpa.event.JMSRemoteCommitProvider.connect(),33,93
org.apache.openjpa.event.JMSRemoteCommitProvider.getMessageListener(),20,29
org.apache.openjpa.event.JMSRemoteCommitProvider.getMessageListener().$1.onMessage(Message),29,103
org.apache.openjpa.event.JMSRemoteCommitProvider.createMessage(RemoteCommitEvent),15,24
org.apache.openjpa.event.JMSRemoteCommitProvider.onException(JMSException),25,79
"openbook.server.OpenBookServiceImpl.OpenBookServiceImpl(String,EntityManagerFactory,boolean,PersistenceContextType)",14,18
"openbook.server.OpenBookServiceImpl.initialize(Map<String,Object>)",53,223
openbook.server.OpenBookServiceImpl.isInitialized(),7,7
openbook.server.OpenBookServiceImpl.login(String),28,78
"openbook.server.OpenBookServiceImpl.select(String,Double,Double,String,QueryDecorator)",21,42
"openbook.server.OpenBookServiceImpl.getQuery(String,Double,Double,String)",21,42
"openbook.server.OpenBookServiceImpl.buildQuery(String,Double,Double,String)",51,161
openbook.server.OpenBookServiceImpl.isEmpty(String),3,4
openbook.server.OpenBookServiceImpl.deliver(PurchaseOrder),36,50
"openbook.server.OpenBookServiceImpl.getOrders(PurchaseOrder.Status,Customer)",25,68
openbook.server.OpenBookServiceImpl.placeOrder(ShoppingCart),21,35
"openbook.server.OpenBookServiceImpl.supply(Book,int)",24,35
openbook.server.OpenBookServiceImpl.getReorderableBooks(int),27,49
openbook.server.OpenBookServiceImpl.count(Class<>),12,22
"openbook.server.OpenBookServiceImpl.selectByExample(Book,QueryDecorator)",8,11
"openbook.server.OpenBookServiceImpl.queryByTemplate(Class<T>,T)",14,31
openbook.server.OpenBookServiceImpl.getExtent(Class<T>),11,22
"openbook.server.OpenBookServiceImpl.query(String,Class<T>,QueryDecorator)",14,33
openbook.server.OpenBookServiceImpl.clean(),20,29
"org.apache.openjpa.trader.client.TradeHistoryPanel.TradeHistoryPanel(OpenTrader,Class<>,int,int)",30,75
"org.apache.openjpa.trader.client.TradeHistoryPanel.TradeHistoryPanel(OpenTrader,Class<>,int,int).$1.render(Trade)",7,8
"org.apache.openjpa.trader.client.TradeHistoryPanel.TradeHistoryPanel(OpenTrader,Class<>,int,int).$2.render(Trade)",6,8
"org.apache.openjpa.trader.client.TradeHistoryPanel.TradeHistoryPanel(OpenTrader,Class<>,int,int).$3.render(Trade)",6,8
"org.apache.openjpa.trader.client.TradeHistoryPanel.TradeHistoryPanel(OpenTrader,Class<>,int,int).$4.render(Trade)",11,14
org.apache.openjpa.trader.client.TradeHistoryPanel.onTradeCommitted(ServiceEvent.TradeCommitted),22,41
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.XMLPersistenceMetaDataSerializer(OpenJPAConfiguration),16,29
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.getConfiguration(),3,5
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.getSerializeAnnotations(),7,9
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.setSerializeAnnotations(boolean),8,12
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.getMode(),11,14
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.setMode(int),12,17
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.setMode(int,boolean)",8,24
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.getSourceFile(Object),6,17
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.isMetaDataMode(),7,11
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.isQueryMode(),6,10
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.isMappingMode(),6,10
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.isMappingMode(ClassMetaData),16,39
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.isMappingMode(ValueMetaData),17,26
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addMetaData(ClassMetaData),12,25
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addSequenceMetaData(SequenceMetaData),19,59
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addQueryMetaData(QueryMetaData),19,59
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addAll(MetaDataRepository),12,47
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.removeMetaData(ClassMetaData),11,20
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.removeSequenceMetaData(SequenceMetaData),16,44
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.removeQueryMetaData(QueryMetaData),16,44
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.removeAll(MetaDataRepository),17,62
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.clear(),6,9
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.getObjects(),18,34
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addSystemMappingElements(Collection),8,12
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializationSort(List),11,19
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.newSerializationComparator(),6,9
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addSequenceMetaDatas(Collection),17,37
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addQueryMetaDatas(Collection),18,40
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serialize(Collection),46,175
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.getPackage(Object),16,35
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.type(Object),21,37
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeNamespaceAttributes(),23,45
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeSystemMappingElement(Object),10,14
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeQuery(QueryMetaData),34,98
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeQueryHints(QueryMetaData),19,41
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeSequence(SequenceMetaData),41,132
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeClass(ClassMetaData,boolean)",61,254
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.getEntityElementName(ClassMetaData),12,23
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.getEntityTag(ClassMetaData),15,40
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addClassAttributes(ClassMetaData,boolean)",19,53
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addClassMappingAttributes(ClassMetaData),7,11
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeIdClass(ClassMetaData),18,41
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeClassMappingContent(ClassMetaData),7,11
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeInheritanceContent(ClassMetaData),8,11
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeQueryMappings(ClassMetaData),7,11
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeField(FieldMetaData,FieldMetaData)",57,278
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addFieldMappingAttributes(FieldMetaData,FieldMetaData)",10,18
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeAttributeOverride(FieldMetaData,FieldMetaData)",9,12
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeAttributeOverrideContent(FieldMetaData,FieldMetaData)",16,37
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeAttributeOverrideMappingContent(FieldMetaData,FieldMetaData)",12,20
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeCascades(ValueMetaData),25,119
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.getStrategy(FieldMetaData),31,118
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addBasicAttributes(FieldMetaData),14,27
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addManyToOneAttributes(FieldMetaData),13,25
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addOneToOneAttributes(FieldMetaData),13,25
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addOneToManyAttributes(FieldMetaData),13,21
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addManyToManyAttributes(FieldMetaData),13,21
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addElementCollectionAttributes(FieldMetaData),15,25
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addTargetEntityAttribute(FieldMetaData),25,67
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeFieldMappingContent(FieldMetaData,PersistenceStrategy)",14,23
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.addStrategyMappingAttributes(FieldMetaData),14,23
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.serializeOrderColumn(FieldMetaData),12,18
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassSeqs.ClassSeqs(List<SequenceMetaData>),12,25
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassSeqs.getSequences(),5,5
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassSeqs.compare(SequenceMetaData,SequenceMetaData)",6,14
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassSeqs.getSourceFile(),3,6
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassSeqs.getSourceScope(),4,6
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassSeqs.getSourceType(),3,5
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassSeqs.getResourceName(),4,6
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassSeqs.getLineNumber(),2,3
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassSeqs.getColNumber(),2,3
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassSeqs.compareTo(ClassSeqs),6,13
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassQueries.ClassQueries(List<QueryMetaData>),12,25
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassQueries.getQueries(),4,5
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassQueries.compare(QueryMetaData,QueryMetaData)",18,34
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassQueries.getSourceFile(),3,6
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassQueries.getSourceScope(),4,6
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassQueries.getSourceType(),3,5
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassQueries.getResourceName(),4,6
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassQueries.getLineNumber(),2,3
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassQueries.getColNumber(),2,3
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.ClassQueries.compareTo(ClassQueries),6,13
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.SerializationComparator.compare(Object,Object)",12,40
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.SerializationComparator.compareUnknown(Object,Object)",8,11
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.SerializationComparator.compare(ClassMetaData,ClassMetaData)",12,34
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.SerializationComparator.compare(QueryMetaData,QueryMetaData)",15,26
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.SerializationComparator.compare(SequenceMetaData,SequenceMetaData)",6,13
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.FieldComparator.compare(Object,Object)",14,61
"org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.FieldComparator.compareListingOrder(FieldMetaData,FieldMetaData)",8,22
org.apache.openjpa.persistence.XMLPersistenceMetaDataSerializer.getClassMetaData(),7,11
org.apache.openjpa.meta.InheritanceComparator.setBase(Class),6,11
org.apache.openjpa.meta.InheritanceComparator.getBase(),1,2
org.apache.openjpa.meta.InheritanceComparator.toClass(Object),9,10
"org.apache.openjpa.meta.InheritanceComparator.compare(Object,Object)",10,16
org.apache.openjpa.meta.InheritanceComparator.levels(Class),10,12
org.apache.openjpa.lib.meta.XMLVersionParser.XMLVersionParser(String),11,17
org.apache.openjpa.lib.meta.XMLVersionParser.endElement(String),5,5
"org.apache.openjpa.lib.meta.XMLVersionParser.startElement(String,Attributes)",20,34
org.apache.openjpa.lib.meta.XMLVersionParser.getVersion(),7,11
org.apache.openjpa.lib.meta.XMLVersionParser.getSchemaLocation(),8,15
org.apache.openjpa.integration.validation.ConstraintBoolean.createInvalidTrue(),9,14
org.apache.openjpa.integration.validation.ConstraintBoolean.createInvalidFalse(),5,9
org.apache.openjpa.integration.validation.ConstraintBoolean.createValid(),5,9
org.apache.openjpa.integration.validation.ConstraintBoolean.ConstraintBoolean(),4,4
org.apache.openjpa.integration.validation.ConstraintBoolean.getId(),0,0
org.apache.openjpa.integration.validation.ConstraintBoolean.getTrueRequired(),1,2
org.apache.openjpa.integration.validation.ConstraintBoolean.setTrueRequired(Boolean),2,3
org.apache.openjpa.integration.validation.ConstraintBoolean.getFalseRequired(),1,2
org.apache.openjpa.integration.validation.ConstraintBoolean.setFalseRequired(Boolean),2,3
org.apache.openjpa.lib.xml.ValidatingErrorHandler.warning(SAXParseException),4,6
org.apache.openjpa.lib.xml.ValidatingErrorHandler.error(SAXParseException),4,6
org.apache.openjpa.lib.xml.ValidatingErrorHandler.fatalError(SAXParseException),5,7
org.apache.openjpa.lib.rop.TestMergedResultObjectProvider.TestMergedResultObjectProvider(String),6,8
org.apache.openjpa.lib.rop.TestMergedResultObjectProvider.getResultList(ResultObjectProvider),5,12
org.apache.openjpa.lib.rop.TestMergedResultObjectProvider.getResultObjectProviders(List),16,100
org.apache.openjpa.lib.rop.TestMergedResultObjectProvider.main(String[]),3,4
org.apache.openjpa.jdbc.kernel.exps.Any.Any(Val),1,3
org.apache.openjpa.jdbc.kernel.exps.Any.getOperator(),2,2
org.apache.openjpa.jdbc.kernel.exps.ExpState.ExpState(),1,1
org.apache.openjpa.jdbc.kernel.exps.ExpState.ExpState(Joins),2,5
org.apache.openjpa.jdbc.kernel.exps.GetColumn.getTag(),2,3
org.apache.openjpa.jdbc.kernel.exps.GetColumn.expectsArguments(),2,2
org.apache.openjpa.jdbc.kernel.exps.GetColumn.expectsTarget(),2,2
"org.apache.openjpa.jdbc.kernel.exps.GetColumn.evaluate(Object,Class,Object[],Class[],Object,StoreContext)",15,19
"org.apache.openjpa.jdbc.kernel.exps.GetColumn.appendTo(SQLBuffer,FilterValue,FilterValue[],ClassMapping,JDBCStore)",29,56
"org.apache.openjpa.jdbc.kernel.exps.GetColumn.getType(Class,Class[])",5,5
org.apache.openjpa.jdbc.identifier.DBIdentifier.DBIdentifier(),6,6
org.apache.openjpa.jdbc.identifier.DBIdentifier.getIgnoreCase(),5,6
org.apache.openjpa.jdbc.identifier.DBIdentifier.setIgnoreCase(boolean),2,5
org.apache.openjpa.jdbc.identifier.DBIdentifier.DBIdentifier(DBIdentifierType),3,7
"org.apache.openjpa.jdbc.identifier.DBIdentifier.DBIdentifier(String,DBIdentifierType)",5,12
"org.apache.openjpa.jdbc.identifier.DBIdentifier.DBIdentifier(String,DBIdentifierType,boolean)",6,14
"org.apache.openjpa.jdbc.identifier.DBIdentifier.DBIdentifier(String,boolean)",5,8
org.apache.openjpa.jdbc.identifier.DBIdentifier.setName(String),4,10
org.apache.openjpa.jdbc.identifier.DBIdentifier.setName(DBIdentifier),6,28
"org.apache.openjpa.jdbc.identifier.DBIdentifier.setName(String,boolean)",16,40
org.apache.openjpa.jdbc.identifier.DBIdentifier.setType(DBIdentifierType),4,12
org.apache.openjpa.jdbc.identifier.DBIdentifier.getType(),2,8
"org.apache.openjpa.jdbc.identifier.DBIdentifier.split(String,DBIdentifierType,String)",18,60
org.apache.openjpa.jdbc.identifier.DBIdentifier.join(DBIdentifier),19,39
"org.apache.openjpa.jdbc.identifier.DBIdentifier.split(DBIdentifierType,String)",20,48
"org.apache.openjpa.jdbc.identifier.DBIdentifier.getTwoPartIdentifier(String[],DBIdentifierType)",13,59
"org.apache.openjpa.jdbc.identifier.DBIdentifier.getThreePartIdentifier(String[],DBIdentifierType)",13,65
"org.apache.openjpa.jdbc.identifier.DBIdentifier.getFourPartIdentifier(String[],DBIdentifierType)",11,57
org.apache.openjpa.jdbc.identifier.DBIdentifier.isEmpty(DBIdentifier),7,15
org.apache.openjpa.jdbc.identifier.DBIdentifier.isNull(DBIdentifier),5,11
org.apache.openjpa.jdbc.identifier.DBIdentifier.clone(),11,25
org.apache.openjpa.jdbc.identifier.DBIdentifier.setNameInternal(String),10,19
org.apache.openjpa.jdbc.identifier.DBIdentifier.getNameInternal(),7,12
org.apache.openjpa.jdbc.identifier.DBIdentifier.trimToNull(DBIdentifier),12,29
org.apache.openjpa.jdbc.identifier.DBIdentifier.equals(Object),20,38
org.apache.openjpa.jdbc.identifier.DBIdentifier.isNull(),6,8
org.apache.openjpa.jdbc.identifier.DBIdentifier.compareTo(Identifier),5,11
"org.apache.openjpa.jdbc.identifier.DBIdentifier.toArray(String[],DBIdentifierType)",11,22
"org.apache.openjpa.jdbc.identifier.DBIdentifier.toArray(String[],DBIdentifierType,boolean)",15,35
org.apache.openjpa.jdbc.identifier.DBIdentifier.toStringArray(DBIdentifier[]),12,27
org.apache.openjpa.jdbc.identifier.DBIdentifier.newCatalog(String),6,13
"org.apache.openjpa.jdbc.identifier.DBIdentifier.newCatalog(String,boolean)",9,18
org.apache.openjpa.jdbc.identifier.DBIdentifier.newTable(String),6,13
"org.apache.openjpa.jdbc.identifier.DBIdentifier.newTable(String,boolean)",9,18
org.apache.openjpa.jdbc.identifier.DBIdentifier.newColumn(String),6,13
"org.apache.openjpa.jdbc.identifier.DBIdentifier.newColumn(String,boolean)",9,18
org.apache.openjpa.jdbc.identifier.DBIdentifier.newSchema(String),6,13
"org.apache.openjpa.jdbc.identifier.DBIdentifier.newSchema(String,boolean)",9,18
org.apache.openjpa.jdbc.identifier.DBIdentifier.newIndex(String),6,13
"org.apache.openjpa.jdbc.identifier.DBIdentifier.newIndex(String,boolean)",9,18
org.apache.openjpa.jdbc.identifier.DBIdentifier.newSequence(String),6,13
"org.apache.openjpa.jdbc.identifier.DBIdentifier.newSequence(String,boolean)",9,18
org.apache.openjpa.jdbc.identifier.DBIdentifier.newForeignKey(String),7,16
"org.apache.openjpa.jdbc.identifier.DBIdentifier.newForeignKey(String,boolean)",10,21
org.apache.openjpa.jdbc.identifier.DBIdentifier.newConstraint(String),6,13
"org.apache.openjpa.jdbc.identifier.DBIdentifier.newConstraint(String,boolean)",9,18
org.apache.openjpa.jdbc.identifier.DBIdentifier.newConstant(String),6,13
org.apache.openjpa.jdbc.identifier.DBIdentifier.newColumnDefinition(String),7,16
org.apache.openjpa.jdbc.identifier.DBIdentifier.newDefault(String),5,10
"org.apache.openjpa.jdbc.identifier.DBIdentifier.newIdentifier(String,DBIdentifierType)",6,13
"org.apache.openjpa.jdbc.identifier.DBIdentifier.newIdentifier(String,DBIdentifierType,boolean)",9,19
"org.apache.openjpa.jdbc.identifier.DBIdentifier.newIdentifier(String,DBIdentifierType,boolean,boolean)",14,26
"org.apache.openjpa.jdbc.identifier.DBIdentifier.newIdentifier(String,DBIdentifierType,boolean,boolean,boolean)",27,64
"org.apache.openjpa.jdbc.identifier.DBIdentifier.equal(DBIdentifier,DBIdentifier)",9,24
org.apache.openjpa.jdbc.identifier.DBIdentifier.assertNotNull(),6,8
"org.apache.openjpa.jdbc.identifier.DBIdentifier.truncate(DBIdentifier,int)",15,43
"org.apache.openjpa.jdbc.identifier.DBIdentifier.append(DBIdentifier,String)",13,38
"org.apache.openjpa.jdbc.identifier.DBIdentifier.combine(DBIdentifier,String)",18,43
org.apache.openjpa.jdbc.identifier.DBIdentifier.toLower(DBIdentifier),7,13
"org.apache.openjpa.jdbc.identifier.DBIdentifier.toLower(DBIdentifier,boolean)",17,49
org.apache.openjpa.jdbc.identifier.DBIdentifier.toUpper(DBIdentifier),7,13
"org.apache.openjpa.jdbc.identifier.DBIdentifier.toUpper(DBIdentifier,boolean)",17,49
"org.apache.openjpa.jdbc.identifier.DBIdentifier.removeLeading(DBIdentifier,String)",18,53
org.apache.openjpa.jdbc.identifier.DBIdentifier.removeHungarianNotation(DBIdentifier),15,41
org.apache.openjpa.jdbc.identifier.DBIdentifier.equalsIgnoreCase(DBIdentifier),4,6
"org.apache.openjpa.jdbc.identifier.DBIdentifier.equalsIgnoreCase(DBIdentifier,DBIdentifier)",4,16
"org.apache.openjpa.jdbc.identifier.DBIdentifier.equals(DBIdentifier,boolean)",7,32
"org.apache.openjpa.jdbc.identifier.DBIdentifier.preCombine(DBIdentifier,String)",18,46
org.apache.openjpa.jdbc.identifier.DBIdentifier.removeDelimiters(DBIdentifier),14,41
org.apache.openjpa.jdbc.identifier.DBIdentifier.trim(DBIdentifier),16,40
org.apache.openjpa.jdbc.identifier.DBIdentifier.length(),6,8
org.apache.openjpa.jdbc.identifier.DBIdentifier.isDelimited(),7,10
"org.apache.openjpa.jdbc.identifier.DBIdentifier.combine(DBIdentifierType,String)",14,22
org.apache.openjpa.jdbc.identifier.DBIdentifier.getUnqualifiedName(),4,7
"org.apache.openjpa.jdbc.kernel.exps.NotEqualTypeExpression.NotEqualTypeExpression(Val,Val)",8,13
"org.apache.openjpa.jdbc.kernel.exps.NotEqualTypeExpression.getSubClassMapping(Val,Val,ExpContext)",15,43
"org.apache.openjpa.jdbc.kernel.exps.NotEqualTypeExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",16,36
"org.apache.openjpa.jdbc.kernel.exps.NotEqualTypeExpression.appendTo(Select,ExpContext,BinaryOpExpState,SQLBuffer,boolean,boolean)",34,148
"org.apache.openjpa.jdbc.kernel.exps.NotEqualTypeExpression.processVerticalTypeAppend(Select,Val,Val,ExpContext,SQLBuffer)",33,95
"org.apache.openjpa.instrumentation.InstrumentationManager.initialize(OpenJPAConfiguration,PluginListValue)",13,25
org.apache.openjpa.instrumentation.InstrumentationManager.manageProvider(InstrumentationProvider),10,18
"org.apache.openjpa.instrumentation.InstrumentationManager.start(InstrumentationLevel,Object)",13,23
"org.apache.openjpa.instrumentation.InstrumentationManager.stop(InstrumentationLevel,Object)",13,23
org.apache.openjpa.instrumentation.InstrumentationManager.getProviders(),7,11
org.apache.openjpa.persistence.criteria.CustomerFullName.CustomerFullName(),2,2
"org.apache.openjpa.persistence.criteria.CustomerFullName.CustomerFullName(String,String)",3,10
org.apache.openjpa.persistence.criteria.CustomerFullName.getLastName(),2,3
org.apache.openjpa.persistence.criteria.CustomerFullName.setLastName(String),3,6
org.apache.openjpa.persistence.criteria.CustomerFullName.getFirstName(),2,3
org.apache.openjpa.persistence.criteria.CustomerFullName.setFirstName(String),3,6
org.apache.openjpa.persistence.criteria.LineItem.getId(),0,0
org.apache.openjpa.persistence.criteria.LineItem.getOrder(),0,0
org.apache.openjpa.persistence.criteria.LineItem.setOrder(Order),1,1
org.apache.openjpa.persistence.criteria.LineItem.getPrice(),1,2
org.apache.openjpa.persistence.criteria.LineItem.setPrice(double),2,5
org.apache.openjpa.persistence.criteria.LineItem.getCost(),1,2
org.apache.openjpa.persistence.criteria.LineItem.setCost(double),2,5
org.apache.openjpa.persistence.criteria.LineItem.getProduct(),1,3
org.apache.openjpa.persistence.criteria.LineItem.setProduct(Product),2,6
org.apache.openjpa.persistence.criteria.LineItem.getQuantity(),1,2
org.apache.openjpa.persistence.criteria.LineItem.setQuantity(int),2,5
org.apache.openjpa.kernel.Bootstrap.newBrokerFactory(),4,9
"org.apache.openjpa.kernel.Bootstrap.newBrokerFactory(ConfigurationProvider,ClassLoader)",33,72
org.apache.openjpa.kernel.Bootstrap.getBrokerFactory(),5,10
"org.apache.openjpa.kernel.Bootstrap.getBrokerFactory(ConfigurationProvider,ClassLoader)",31,67
"org.apache.openjpa.kernel.Bootstrap.invokeFactory(ConfigurationProvider,ClassLoader,String,Class<>[],Object[])",37,81
"org.apache.openjpa.kernel.Bootstrap.getFactoryClassName(ConfigurationProvider,ClassLoader)",8,14
"org.apache.openjpa.kernel.Bootstrap.getFactoryClass(ConfigurationProvider,ClassLoader)",28,69
org.apache.openjpa.persistence.detachment.model.SimpleRef.getId(),0,0
org.apache.openjpa.persistence.detachment.model.SimpleRef.getName(),2,3
org.apache.openjpa.persistence.detachment.model.SimpleRef.setName(String),3,6
"org.apache.openjpa.persistence.criteria.OrderImpl.OrderImpl(Expression<>,boolean)",4,7
org.apache.openjpa.persistence.criteria.OrderImpl.OrderImpl(Expression<>),2,2
org.apache.openjpa.persistence.criteria.OrderImpl.getExpression(),2,3
org.apache.openjpa.persistence.criteria.OrderImpl.isAscending(),1,2
org.apache.openjpa.persistence.criteria.OrderImpl.reverse(),2,3
org.apache.openjpa.persistence.criteria.OrderImpl.acceptVisit(CriteriaExpressionVisitor),8,12
org.apache.openjpa.persistence.criteria.OrderImpl.asValue(AliasContext),10,14
org.apache.openjpa.persistence.criteria.OrderImpl.asProjection(AliasContext),8,9
org.apache.openjpa.persistence.criteria.OrderImpl.asVariable(AliasContext),8,9
org.apache.openjpa.persistence.query.CurrentTimeExpression.CurrentTimeExpression(Class),5,6
org.apache.openjpa.persistence.query.CurrentTimeExpression.asExpression(AliasContext),10,16
org.apache.openjpa.persistence.query.CurrentTimeExpression.asProjection(AliasContext),8,8
org.apache.openjpa.kernel.exps.Arguments.getValues(),3,4
"org.apache.openjpa.kernel.exps.StartsWithExpression.StartsWithExpression(Val,Val)",7,12
"org.apache.openjpa.kernel.exps.StartsWithExpression.compare(Object,Object)",4,6
"org.apache.openjpa.util.ApplicationIds.toPKValues(Object,ClassMetaData)",51,166
"org.apache.openjpa.util.ApplicationIds.wrap(ClassMetaData,Object)",19,50
"org.apache.openjpa.util.ApplicationIds.fromPKValues(Object[],ClassMetaData)",68,391
"org.apache.openjpa.util.ApplicationIds.copy(Object,ClassMetaData)",45,249
org.apache.openjpa.util.ApplicationIds.hasPCPrimaryKeyFields(ClassMetaData),15,28
"org.apache.openjpa.util.ApplicationIds.copy(Object,ClassMetaData,FieldMetaData[])",31,99
"org.apache.openjpa.util.ApplicationIds.get(Object,FieldMetaData)",17,50
"org.apache.openjpa.util.ApplicationIds.create(PersistenceCapable,ClassMetaData)",31,68
"org.apache.openjpa.util.ApplicationIds.assign(OpenJPAStateManager,StoreManager,boolean)",39,99
"org.apache.openjpa.util.ApplicationIds.assign(OpenJPAStateManager,StoreManager,FieldMetaData[],boolean)",40,68
"org.apache.openjpa.util.ApplicationIds.isIdSet(Object,ClassMetaData,String)",18,53
"org.apache.openjpa.util.ApplicationIds.getKey(Object,ClassMetaData)",23,82
"org.apache.openjpa.util.ApplicationIds.setAppId(ObjectId,Object)",8,11
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.setMetaData(ClassMetaData),3,8
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.getStore(),2,3
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.setStore(Object[]),3,6
"org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.storeBooleanField(int,boolean)",3,6
"org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.storeByteField(int,byte)",4,7
"org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.storeCharField(int,char)",5,8
"org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.storeShortField(int,short)",4,7
"org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.storeIntField(int,int)",3,6
"org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.storeLongField(int,long)",3,6
"org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.storeFloatField(int,float)",4,7
"org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.storeDoubleField(int,double)",4,7
"org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.storeStringField(int,String)",4,8
"org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.storeObjectField(int,Object)",4,8
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.fetchBooleanField(int),3,5
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.fetchCharField(int),5,7
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.fetchByteField(int),4,6
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.fetchShortField(int),4,6
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.fetchIntField(int),4,6
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.fetchLongField(int),4,6
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.fetchFloatField(int),4,6
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.fetchDoubleField(int),4,6
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.fetchStringField(int),4,8
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.fetchObjectField(int),4,7
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.store(Object),4,6
org.apache.openjpa.util.ApplicationIds.PrimaryKeyFieldManager.retrieve(int),15,44
org.apache.openjpa.persistence.embed.ProgramManager.getId(),0,0
org.apache.openjpa.persistence.embed.ProgramManager.setId(int),1,1
org.apache.openjpa.persistence.embed.ProgramManager.getManages(),3,4
org.apache.openjpa.persistence.embed.ProgramManager.addManage(Employee),4,5
org.apache.openjpa.persistence.enhance.common.apps.No3NoArgs.No3NoArgs(String),3,3
org.apache.openjpa.jdbc.kernel.exps.SQLValue.getTag(),2,3
org.apache.openjpa.persistence.external.TestExternalValues.setUp(),4,5
org.apache.openjpa.persistence.external.TestExternalValues.testExternalValues(),28,95
org.apache.openjpa.persistence.external.TestExternalValues.testUnrecognizedExternalValue(),29,46
org.apache.openjpa.jdbc.meta.strats.EmbeddedClassStrategy.map(boolean),29,81
org.apache.openjpa.jdbc.meta.strats.EmbeddedClassStrategy.getNullIndicatorValue(OpenJPAStateManager),20,35
org.apache.openjpa.jdbc.meta.strats.EmbeddedClassStrategy.indicatesNull(Object),20,34
org.apache.openjpa.jdbc.meta.strats.EmbeddedClassStrategy.isPrimaryKeyObjectId(boolean),8,13
"org.apache.openjpa.kernel.DetachedStateManager.DetachedStateManager(PersistenceCapable,OpenJPAStateManager,BitSet,boolean,boolean)",45,86
"org.apache.openjpa.kernel.DetachedStateManager.attach(AttachManager,Object,ClassMetaData,PersistenceCapable,OpenJPAStateManager,ValueMetaData,boolean)",98,578
"org.apache.openjpa.kernel.DetachedStateManager.getDetachedObjectId(AttachManager,Object)",5,9
org.apache.openjpa.kernel.DetachedStateManager.provideField(int),2,6
"org.apache.openjpa.kernel.DetachedStateManager.provideField(Object,StateManagerImpl,int)",6,10
org.apache.openjpa.kernel.DetachedStateManager.ignoreLoaded(FieldMetaData),13,56
org.apache.openjpa.kernel.DetachedStateManager.getGenericContext(),3,3
"org.apache.openjpa.kernel.DetachedStateManager.getPCPrimaryKey(Object,int)",8,9
org.apache.openjpa.kernel.DetachedStateManager.replaceStateManager(StateManager),2,4
org.apache.openjpa.kernel.DetachedStateManager.getVersion(),2,3
org.apache.openjpa.kernel.DetachedStateManager.setVersion(Object),5,6
org.apache.openjpa.kernel.DetachedStateManager.isDirty(),2,3
org.apache.openjpa.kernel.DetachedStateManager.isTransactional(),1,1
org.apache.openjpa.kernel.DetachedStateManager.isPersistent(),1,1
org.apache.openjpa.kernel.DetachedStateManager.isNew(),0,0
org.apache.openjpa.kernel.DetachedStateManager.isDeleted(),1,1
org.apache.openjpa.kernel.DetachedStateManager.isDetached(),1,1
org.apache.openjpa.kernel.DetachedStateManager.isVersionUpdateRequired(),3,3
org.apache.openjpa.kernel.DetachedStateManager.isVersionCheckRequired(),3,3
org.apache.openjpa.kernel.DetachedStateManager.dirty(String),8,8
org.apache.openjpa.kernel.DetachedStateManager.fetchObjectId(),3,4
org.apache.openjpa.kernel.DetachedStateManager.accessingField(int),20,26
org.apache.openjpa.kernel.DetachedStateManager.serializing(),1,1
org.apache.openjpa.kernel.DetachedStateManager.writeDetached(ObjectOutput),5,10
org.apache.openjpa.kernel.DetachedStateManager.proxyDetachedDeserialized(int),11,17
"org.apache.openjpa.kernel.DetachedStateManager.settingBooleanField(PersistenceCapable,int,boolean,boolean,int)",14,22
"org.apache.openjpa.kernel.DetachedStateManager.settingCharField(PersistenceCapable,int,char,char,int)",14,22
"org.apache.openjpa.kernel.DetachedStateManager.settingByteField(PersistenceCapable,int,byte,byte,int)",14,22
"org.apache.openjpa.kernel.DetachedStateManager.settingShortField(PersistenceCapable,int,short,short,int)",14,22
"org.apache.openjpa.kernel.DetachedStateManager.settingIntField(PersistenceCapable,int,int,int,int)",14,22
"org.apache.openjpa.kernel.DetachedStateManager.settingLongField(PersistenceCapable,int,long,long,int)",14,22
"org.apache.openjpa.kernel.DetachedStateManager.settingFloatField(PersistenceCapable,int,float,float,int)",14,22
"org.apache.openjpa.kernel.DetachedStateManager.settingDoubleField(PersistenceCapable,int,double,double,int)",14,22
"org.apache.openjpa.kernel.DetachedStateManager.settingStringField(PersistenceCapable,int,String,String,int)",16,29
"org.apache.openjpa.kernel.DetachedStateManager.settingObjectField(PersistenceCapable,int,Object,Object,int)",15,26
"org.apache.openjpa.kernel.DetachedStateManager.providedBooleanField(PersistenceCapable,int,boolean)",7,8
"org.apache.openjpa.kernel.DetachedStateManager.providedCharField(PersistenceCapable,int,char)",7,8
"org.apache.openjpa.kernel.DetachedStateManager.providedByteField(PersistenceCapable,int,byte)",7,8
"org.apache.openjpa.kernel.DetachedStateManager.providedShortField(PersistenceCapable,int,short)",7,8
"org.apache.openjpa.kernel.DetachedStateManager.providedIntField(PersistenceCapable,int,int)",7,8
"org.apache.openjpa.kernel.DetachedStateManager.providedLongField(PersistenceCapable,int,long)",7,8
"org.apache.openjpa.kernel.DetachedStateManager.providedFloatField(PersistenceCapable,int,float)",7,8
"org.apache.openjpa.kernel.DetachedStateManager.providedDoubleField(PersistenceCapable,int,double)",7,8
"org.apache.openjpa.kernel.DetachedStateManager.providedStringField(PersistenceCapable,int,String)",8,10
"org.apache.openjpa.kernel.DetachedStateManager.providedObjectField(PersistenceCapable,int,Object)",8,10
"org.apache.openjpa.kernel.DetachedStateManager.replaceBooleanField(PersistenceCapable,int)",6,6
"org.apache.openjpa.kernel.DetachedStateManager.replaceCharField(PersistenceCapable,int)",6,6
"org.apache.openjpa.kernel.DetachedStateManager.replaceByteField(PersistenceCapable,int)",6,6
"org.apache.openjpa.kernel.DetachedStateManager.replaceShortField(PersistenceCapable,int)",6,6
"org.apache.openjpa.kernel.DetachedStateManager.replaceIntField(PersistenceCapable,int)",6,6
"org.apache.openjpa.kernel.DetachedStateManager.replaceLongField(PersistenceCapable,int)",6,6
"org.apache.openjpa.kernel.DetachedStateManager.replaceFloatField(PersistenceCapable,int)",6,6
"org.apache.openjpa.kernel.DetachedStateManager.replaceDoubleField(PersistenceCapable,int)",6,6
"org.apache.openjpa.kernel.DetachedStateManager.replaceStringField(PersistenceCapable,int)",8,13
"org.apache.openjpa.kernel.DetachedStateManager.replaceObjectField(PersistenceCapable,int)",8,12
"org.apache.openjpa.kernel.DetachedStateManager.initialize(Class,PCState)",5,5
org.apache.openjpa.kernel.DetachedStateManager.load(FetchConfiguration),6,7
org.apache.openjpa.kernel.DetachedStateManager.getManagedInstance(),3,3
org.apache.openjpa.kernel.DetachedStateManager.getPersistenceCapable(),2,4
org.apache.openjpa.kernel.DetachedStateManager.getMetaData(),5,7
org.apache.openjpa.kernel.DetachedStateManager.getOwner(),6,6
org.apache.openjpa.kernel.DetachedStateManager.getOwnerIndex(),5,5
org.apache.openjpa.kernel.DetachedStateManager.isEmbedded(),1,2
org.apache.openjpa.kernel.DetachedStateManager.isFlushed(),4,4
org.apache.openjpa.kernel.DetachedStateManager.isFlushedDirty(),5,5
org.apache.openjpa.kernel.DetachedStateManager.isProvisional(),4,4
org.apache.openjpa.kernel.DetachedStateManager.getLoaded(),3,4
org.apache.openjpa.kernel.DetachedStateManager.getDirty(),3,4
org.apache.openjpa.kernel.DetachedStateManager.getUseDSFForUnproxy(),10,12
org.apache.openjpa.kernel.DetachedStateManager.getFlushed(),6,6
org.apache.openjpa.kernel.DetachedStateManager.getUnloaded(FetchConfiguration),8,9
org.apache.openjpa.kernel.DetachedStateManager.newProxy(int),6,6
org.apache.openjpa.kernel.DetachedStateManager.newFieldProxy(int),6,7
org.apache.openjpa.kernel.DetachedStateManager.isDefaultValue(int),5,5
org.apache.openjpa.kernel.DetachedStateManager.getContext(),2,3
org.apache.openjpa.kernel.DetachedStateManager.getPCState(),3,3
org.apache.openjpa.kernel.DetachedStateManager.getObjectId(),2,3
org.apache.openjpa.kernel.DetachedStateManager.setObjectId(Object),6,7
org.apache.openjpa.kernel.DetachedStateManager.assignObjectId(boolean),3,3
org.apache.openjpa.kernel.DetachedStateManager.getId(),1,2
org.apache.openjpa.kernel.DetachedStateManager.getLock(),5,5
org.apache.openjpa.kernel.DetachedStateManager.setLock(Object),6,7
org.apache.openjpa.kernel.DetachedStateManager.setNextVersion(Object),6,7
org.apache.openjpa.kernel.DetachedStateManager.getImplData(),6,6
"org.apache.openjpa.kernel.DetachedStateManager.setImplData(Object,boolean)",8,10
org.apache.openjpa.kernel.DetachedStateManager.isImplDataCacheable(),3,3
org.apache.openjpa.kernel.DetachedStateManager.getImplData(int),7,7
"org.apache.openjpa.kernel.DetachedStateManager.setImplData(int,Object)",8,10
org.apache.openjpa.kernel.DetachedStateManager.isImplDataCacheable(int),7,7
org.apache.openjpa.kernel.DetachedStateManager.getIntermediate(int),6,6
"org.apache.openjpa.kernel.DetachedStateManager.setIntermediate(int,Object)",8,8
"org.apache.openjpa.kernel.DetachedStateManager.removed(int,Object,boolean)",5,7
org.apache.openjpa.kernel.DetachedStateManager.beforeRefresh(boolean),4,4
org.apache.openjpa.kernel.DetachedStateManager.dirty(int),5,7
"org.apache.openjpa.kernel.DetachedStateManager.storeBoolean(int,boolean)",7,7
"org.apache.openjpa.kernel.DetachedStateManager.storeByte(int,byte)",7,7
"org.apache.openjpa.kernel.DetachedStateManager.storeChar(int,char)",7,7
"org.apache.openjpa.kernel.DetachedStateManager.storeInt(int,int)",7,7
"org.apache.openjpa.kernel.DetachedStateManager.storeShort(int,short)",7,7
"org.apache.openjpa.kernel.DetachedStateManager.storeLong(int,long)",7,7
"org.apache.openjpa.kernel.DetachedStateManager.storeFloat(int,float)",7,7
"org.apache.openjpa.kernel.DetachedStateManager.storeDouble(int,double)",7,7
"org.apache.openjpa.kernel.DetachedStateManager.storeString(int,String)",8,9
"org.apache.openjpa.kernel.DetachedStateManager.storeObject(int,Object)",8,9
"org.apache.openjpa.kernel.DetachedStateManager.store(int,Object)",8,8
"org.apache.openjpa.kernel.DetachedStateManager.storeField(int,Object)",7,8
org.apache.openjpa.kernel.DetachedStateManager.fetchBoolean(int),5,5
org.apache.openjpa.kernel.DetachedStateManager.fetchByte(int),5,5
org.apache.openjpa.kernel.DetachedStateManager.fetchChar(int),5,5
org.apache.openjpa.kernel.DetachedStateManager.fetchShort(int),5,5
org.apache.openjpa.kernel.DetachedStateManager.fetchInt(int),5,5
org.apache.openjpa.kernel.DetachedStateManager.fetchLong(int),5,5
org.apache.openjpa.kernel.DetachedStateManager.fetchFloat(int),5,5
org.apache.openjpa.kernel.DetachedStateManager.fetchDouble(int),5,5
org.apache.openjpa.kernel.DetachedStateManager.fetchString(int),6,7
org.apache.openjpa.kernel.DetachedStateManager.fetchObject(int),6,7
org.apache.openjpa.kernel.DetachedStateManager.fetch(int),6,6
"org.apache.openjpa.kernel.DetachedStateManager.fetchField(int,boolean)",7,8
org.apache.openjpa.kernel.DetachedStateManager.fetchInitialField(int),7,8
"org.apache.openjpa.kernel.DetachedStateManager.setRemote(int,Object)",8,8
org.apache.openjpa.kernel.DetachedStateManager.lock(),1,4
org.apache.openjpa.kernel.DetachedStateManager.unlock(),2,4
org.apache.openjpa.kernel.DetachedStateManager.isDelayed(int),2,2
"org.apache.openjpa.kernel.DetachedStateManager.setDelayed(int,boolean)",7,7
org.apache.openjpa.kernel.DetachedStateManager.loadDelayedField(int),6,7
org.apache.openjpa.persistence.access.xml.XMLFieldSub3.getCreateDate(),3,5
org.apache.openjpa.persistence.access.xml.XMLFieldSub3.setCreateDate(Date),4,8
org.apache.openjpa.persistence.access.xml.XMLFieldSub3.equals(Object),10,32
org.apache.openjpa.persistence.generationtype.DogTable.DogTable(),2,2
org.apache.openjpa.persistence.generationtype.DogTable.DogTable(String),4,6
org.apache.openjpa.persistence.generationtype.DogTable.getId2(),0,0
org.apache.openjpa.persistence.generationtype.DogTable.setId2(int),1,1
org.apache.openjpa.persistence.generationtype.DogTable.getName(),2,3
org.apache.openjpa.persistence.generationtype.DogTable.setName(String),3,6
org.apache.openjpa.persistence.generationtype.DogTable.getPrice(),1,2
org.apache.openjpa.persistence.generationtype.DogTable.setPrice(float),2,5
org.apache.openjpa.persistence.generationtype.DogTable.isDomestic(),1,2
org.apache.openjpa.persistence.generationtype.DogTable.setDomestic(boolean),2,5
"org.apache.openjpa.kernel.TCleanState.initialize(StateManagerImpl,PCState)",18,26
org.apache.openjpa.kernel.TCleanState.persist(StateManagerImpl),8,9
org.apache.openjpa.kernel.TCleanState.delete(StateManagerImpl),5,6
org.apache.openjpa.kernel.TCleanState.nontransactional(StateManagerImpl),4,4
"org.apache.openjpa.kernel.TCleanState.beforeWrite(StateManagerImpl,int,boolean)",7,7
"org.apache.openjpa.kernel.TCleanState.beforeOptimisticWrite(StateManagerImpl,int,boolean)",8,8
org.apache.openjpa.kernel.TCleanState.toString(),2,3
"org.apache.openjpa.kernel.exps.Param.Param(Object,Class)",8,13
org.apache.openjpa.kernel.exps.Param.getParameterKey(),3,4
org.apache.openjpa.kernel.exps.Param.getType(),1,2
org.apache.openjpa.kernel.exps.Param.setImplicitType(Class),3,6
org.apache.openjpa.kernel.exps.Param.setIndex(int),2,5
org.apache.openjpa.kernel.exps.Param.getValue(Object[]),4,6
"org.apache.openjpa.kernel.exps.Param.eval(Object,Object,StoreContext,Object[])",9,13
org.apache.openjpa.meta.LifecycleMetaData.LifecycleMetaData(ClassMetaData),6,11
org.apache.openjpa.meta.LifecycleMetaData.is_activated(),14,15
org.apache.openjpa.meta.LifecycleMetaData.getIgnoreSystemListeners(),5,9
org.apache.openjpa.meta.LifecycleMetaData.setIgnoreSystemListeners(boolean),6,12
org.apache.openjpa.meta.LifecycleMetaData.getIgnoreSuperclassCallbacks(),6,9
org.apache.openjpa.meta.LifecycleMetaData.setIgnoreSuperclassCallbacks(int),7,12
org.apache.openjpa.meta.LifecycleMetaData.getDeclaredCallbacks(int),6,19
org.apache.openjpa.meta.LifecycleMetaData.getCallbacks(int),9,19
"org.apache.openjpa.meta.LifecycleMetaData.setDeclaredCallbacks(int,LifecycleCallbacks[],int)",20,53
org.apache.openjpa.meta.LifecycleMetaData.getNonPCSuperclassCallbacks(int),6,14
"org.apache.openjpa.meta.LifecycleMetaData.setNonPCSuperclassCallbacks(int,LifecycleCallbacks[],int)",24,59
org.apache.openjpa.meta.LifecycleMetaData.resolve(),4,7
org.apache.openjpa.meta.LifecycleMetaData.combineCallbacks(),38,183
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity2.Entity2(),1,1
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity2.Entity2(long,String,int)",3,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity2.getPk(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity2.setStringField(String),4,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity2.getStringField(),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity2.setIntField(int),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity2.getIntField(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity2.toString(),2,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity2.Entity2(),1,1
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity2.Entity2(long,String,int)",3,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity2.getPk(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity2.setStringField(String),4,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity2.getStringField(),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity2.setIntField(int),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity2.getIntField(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity2.toString(),2,8
org.apache.openjpa.persistence.annotations.xml.EntityA.getId(),0,0
org.apache.openjpa.persistence.annotations.xml.EntityA.getName(),2,3
org.apache.openjpa.persistence.annotations.xml.EntityA.setName(String),3,6
org.apache.openjpa.kernel.exps.StringContains.getTag(),2,3
org.apache.openjpa.kernel.exps.StringContains.expectsArguments(),2,2
org.apache.openjpa.kernel.exps.StringContains.expectsTarget(),2,2
"org.apache.openjpa.kernel.exps.StringContains.evaluate(Object,Class,Object[],Class[],Object,StoreContext)",12,21
"org.apache.openjpa.kernel.exps.StringContains.getType(Class,Class[])",4,4
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.map(boolean),77,402
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.setMappedByIdColumns(),27,64
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.getMappedByIdColumns(FieldMapping),30,104
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.isTypeUnjoinedSubclass(ValueMapping),11,27
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.initialize(),13,24
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",54,129
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.setMapKey(OpenJPAStateManager,OpenJPAStateManager,JDBCStore,Row)",40,148
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.getMapField(ClassMetaData),14,34
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.getMapKeyObj(Map,Object)",13,37
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",42,132
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",42,125
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.nullInverse(OpenJPAStateManager,RowManager)",29,50
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.updateInverse(OpenJPAStateManager,OpenJPAStateManager,JDBCStore,RowManager)",50,140
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.supportsSelect(Select,int,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",36,74
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.selectEagerParallel(SelectExecutor,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",23,58
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.selectEagerParallel(SelectExecutor,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int).$1.select(Select,int)",9,14
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.selectEagerParallel(Select,ClassMapping,JDBCStore,JDBCFetchConfiguration,int)",35,68
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.selectEagerJoin(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",33,69
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.eagerJoin(Joins,ClassMapping,boolean)",26,71
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.setEmbeddedVariable(Joins),18,40
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.select(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",20,34
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.loadEagerParallel(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Object)",25,49
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.processEagerParallelResult(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",41,85
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.loadEagerJoin(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",52,151
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",46,127
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",51,127
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.load(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration).$2.select(Select,int)",24,85
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.toDataStoreValue(Object,JDBCStore)",9,17
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.appendIsNull(SQLBuffer,Select,Joins)",30,61
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.appendIsNotNull(SQLBuffer,Select,Joins)",31,62
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.testInverseNull(SQLBuffer,Select,Joins,boolean)",34,62
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.join(Joins,boolean)",27,67
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.joinRelation(Joins,boolean,boolean)",26,67
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.getFieldIndex(),2,4
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.getPrimaryKeyValue(Result,Column[],ForeignKey,JDBCStore,Joins)",34,90
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.createTranslatingForeignKey(ClassMapping,Column[],ForeignKey)",25,63
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.getJoinValue(Object,Column,JDBCStore)",37,131
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.getJoinValue(OpenJPAStateManager,Column,JDBCStore)",12,17
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.setAutoAssignedValue(OpenJPAStateManager,JDBCStore,Column,Object)",14,16
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.getColumns(),3,4
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.getColumnIO(),2,4
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.getResultArguments(),3,3
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.toEmbeddedDataStoreValue(Object,JDBCStore)",7,15
org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.toEmbeddedObjectValue(Object),5,7
"org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy.loadEmbedded(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Object)",42,115
"org.apache.openjpa.util.DoubleId.DoubleId(Class,Double)",3,6
"org.apache.openjpa.util.DoubleId.DoubleId(Class,String)",4,7
"org.apache.openjpa.util.DoubleId.DoubleId(Class,double)",2,5
"org.apache.openjpa.util.DoubleId.DoubleId(Class,double,boolean)",3,7
org.apache.openjpa.util.DoubleId.getId(),1,1
org.apache.openjpa.util.DoubleId.getIdObject(),3,4
org.apache.openjpa.util.DoubleId.toString(),2,4
org.apache.openjpa.util.DoubleId.idHash(),3,5
org.apache.openjpa.util.DoubleId.idEquals(OpenJPAId),3,4
openbook.tools.converter.PlainTokenRenderer.endLine(int),3,4
openbook.tools.converter.PlainTokenRenderer.newLine(int),4,10
"openbook.tools.converter.PlainTokenRenderer.render(int,Token)",5,7
openbook.tools.converter.PlainTokenRenderer.getEpilogue(),3,3
openbook.tools.converter.PlainTokenRenderer.getPrologue(),3,3
openbook.tools.converter.PlainTokenRenderer.getShowLineNumber(),1,2
openbook.tools.converter.PlainTokenRenderer.setShowLineNumber(boolean),2,5
openbook.tools.converter.PlainTokenRenderer.getLineNumberFormat(),3,7
openbook.tools.converter.PlainTokenRenderer.setLineNumberFormat(String),5,16
org.apache.openjpa.persistence.criteria.TestCQL.testLogicalPrecedence(),24,115
org.apache.openjpa.persistence.cache.jpa.model.NegatedCachableEntity.getName(),2,3
org.apache.openjpa.persistence.cache.jpa.model.NegatedCachableEntity.setName(String),3,6
org.apache.openjpa.persistence.cache.jpa.model.NegatedCachableEntity.getId(),0,0
org.apache.openjpa.persistence.cache.jpa.model.NegatedCachableEntity.setId(int),1,1
org.apache.openjpa.persistence.cache.jpa.model.NegatedCachableEntity.getVersion(),1,2
org.apache.openjpa.persistence.cache.jpa.model.NegatedCachableEntity.setVersion(int),2,5
org.apache.openjpa.jdbc.meta.strats.CharArrayValueHandler.getInstance(),5,7
"org.apache.openjpa.jdbc.meta.strats.CharArrayValueHandler.map(ValueMapping,String,ColumnIO,boolean)",14,27
"org.apache.openjpa.jdbc.meta.strats.CharArrayValueHandler.map(ValueMapping,DBIdentifier,ColumnIO,boolean)",13,24
"org.apache.openjpa.jdbc.meta.strats.CharArrayValueHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)",12,19
"org.apache.openjpa.jdbc.meta.strats.CharArrayValueHandler.toObjectValue(ValueMapping,Object)",9,18
org.apache.openjpa.persistence.annotations.TestDDCallbackMethods.TestDDCallbackMethods(String),6,7
org.apache.openjpa.persistence.annotations.TestDDCallbackMethods.setUp(),8,12
org.apache.openjpa.persistence.annotations.TestDDCallbackMethods.testDDPrpPop(),24,46
org.apache.openjpa.persistence.annotations.TestDDCallbackMethods.testDDPrrPor(),25,56
org.apache.openjpa.persistence.annotations.TestDDCallbackMethods.testDDPouPru(),35,66
org.apache.openjpa.persistence.annotations.TestDDCallbackMethods.testDDPol(),24,67
org.apache.openjpa.persistence.annotations.TestDDCallbackMethods.testDefaultPrePostPersistListener(),26,54
org.apache.openjpa.persistence.annotations.TestDDCallbackMethods.testDefaultPrePostUpdateListener(),36,76
org.apache.openjpa.persistence.annotations.TestDDCallbackMethods.testDefaultPostLoadListener(),29,73
org.apache.openjpa.persistence.annotations.TestDDCallbackMethods.testSubClassOverrideSuperCallbacksInh(),27,63
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedCharArrayFieldStrategy.getExpectedJavaType(),6,7
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedCharArrayFieldStrategy.update(OpenJPAStateManager,Row)",22,31
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedCharArrayFieldStrategy.isCustom(OpenJPAStateManager,JDBCStore)",14,18
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedCharArrayFieldStrategy.putData(OpenJPAStateManager,ResultSet,DBDictionary)",19,23
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedCharArrayFieldStrategy.load(Column,Result,Joins)",23,41
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedCharArrayFieldStrategy.map(boolean),10,15
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedCharArrayFieldStrategy.initialize(),10,14
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedCharArrayFieldStrategy.getValue(OpenJPAStateManager),14,15
org.apache.openjpa.persistence.identity.CompoundBooleanIdEntity.CompoundIdEntity(),2,2
org.apache.openjpa.persistence.identity.CompoundBooleanIdEntity.getStringId(),1,3
org.apache.openjpa.persistence.identity.CompoundBooleanIdEntity.setStringId(String),2,6
org.apache.openjpa.persistence.identity.CompoundBooleanIdEntity.getBooleanId(),0,0
org.apache.openjpa.persistence.identity.CompoundBooleanIdEntity.setBooleanId(boolean),1,1
org.apache.openjpa.persistence.callbacks.TestEntityListeners.setUp(),11,38
org.apache.openjpa.persistence.callbacks.TestEntityListeners.getPersistenceUnitName(),5,5
org.apache.openjpa.persistence.callbacks.TestEntityListeners.testEntityListeners(),5,7
org.apache.openjpa.persistence.callbacks.TestEntityListeners.testGlobalListeners(),6,7
org.apache.openjpa.persistence.callbacks.TestEntityListeners.testDuplicateListeners(),16,25
org.apache.openjpa.persistence.callbacks.TestEntityListeners.helper(int),23,84
"org.apache.openjpa.persistence.callbacks.TestEntityListeners.assertStatus(int,int,int,int,int,int,int)",11,71
org.apache.openjpa.persistence.validation.TraversableResolverImpl.TraversableResolverImpl(),3,3
"org.apache.openjpa.persistence.validation.TraversableResolverImpl.isReachable(Object,Node,Class<>,Path,ElementType)",36,72
"org.apache.openjpa.persistence.validation.TraversableResolverImpl.isCascadable(Object,Node,Class<>,Path,ElementType)",27,53
"org.apache.openjpa.util.IntId.IntId(Class,Integer)",4,7
"org.apache.openjpa.util.IntId.IntId(Class,String)",5,8
"org.apache.openjpa.util.IntId.IntId(Class,int)",2,5
"org.apache.openjpa.util.IntId.IntId(Class,int,boolean)",3,7
org.apache.openjpa.util.IntId.getId(),1,1
org.apache.openjpa.util.IntId.getIdObject(),2,3
org.apache.openjpa.util.IntId.toString(),3,5
org.apache.openjpa.util.IntId.idHash(),2,2
org.apache.openjpa.util.IntId.idEquals(OpenJPAId),3,4
org.apache.openjpa.persistence.delimited.identifiers.EntityF.EntityF(String),3,5
org.apache.openjpa.persistence.delimited.identifiers.EntityF.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityF.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityF.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityF.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.EntityF.getNonDelimName(),3,7
org.apache.openjpa.persistence.delimited.identifiers.EntityF.setNonDelimName(String),5,16
org.apache.openjpa.persistence.delimited.identifiers.EntityF.getSecName(),3,7
org.apache.openjpa.persistence.delimited.identifiers.EntityF.setSecName(String),5,16
org.apache.openjpa.persistence.delimited.identifiers.EntityF.getCollectionSet(),3,7
org.apache.openjpa.persistence.delimited.identifiers.EntityF.setCollectionSet(Set<String>),4,16
org.apache.openjpa.persistence.delimited.identifiers.EntityF.addCollectionSet(String),5,8
org.apache.openjpa.persistence.delimited.identifiers.EntityF.getCollectionDelimSet(),5,11
org.apache.openjpa.persistence.delimited.identifiers.EntityF.setCollectionDelimSet(Set<String>),6,23
org.apache.openjpa.persistence.delimited.identifiers.EntityF.addCollectionDelimSet(String),6,11
org.apache.openjpa.persistence.delimited.identifiers.EntityF.getCollectionMap(),3,8
"org.apache.openjpa.persistence.delimited.identifiers.EntityF.setCollectionMap(Map<String,String>)",5,17
"org.apache.openjpa.persistence.delimited.identifiers.EntityF.addCollectionMap(String,String)",6,10
org.apache.openjpa.persistence.delimited.identifiers.EntityF.getDelimCollectionMap(),4,10
"org.apache.openjpa.persistence.delimited.identifiers.EntityF.setDelimCollectionMap(Map<String,String>)",6,22
"org.apache.openjpa.persistence.delimited.identifiers.EntityF.addDelimCollectionMap(String,String)",7,11
org.apache.openjpa.jdbc.schema.Table.Table(),2,2
"org.apache.openjpa.jdbc.schema.Table.Table(String,Schema)",8,19
"org.apache.openjpa.jdbc.schema.Table.Table(DBIdentifier,Schema)",6,19
org.apache.openjpa.jdbc.schema.Table.setAssociation(),2,3
org.apache.openjpa.jdbc.schema.Table.isAssociation(),1,2
org.apache.openjpa.jdbc.schema.Table.remove(),25,52
org.apache.openjpa.jdbc.schema.Table.getSchema(),2,5
org.apache.openjpa.jdbc.schema.Table.getSchemaName(),6,10
org.apache.openjpa.jdbc.schema.Table.getSchemaIdentifier(),3,8
org.apache.openjpa.jdbc.schema.Table.setSchemaName(String),10,21
org.apache.openjpa.jdbc.schema.Table.setSchemaIdentifier(DBIdentifier),7,12
org.apache.openjpa.jdbc.schema.Table.getName(),5,7
org.apache.openjpa.jdbc.schema.Table.getIdentifier(),2,5
org.apache.openjpa.jdbc.schema.Table.setName(String),5,9
org.apache.openjpa.jdbc.schema.Table.setIdentifier(DBIdentifier),13,25
org.apache.openjpa.jdbc.schema.Table.getFullName(),10,12
org.apache.openjpa.jdbc.schema.Table.getQualifiedPath(),5,13
org.apache.openjpa.jdbc.schema.Table.getFullIdentifier(),3,5
org.apache.openjpa.jdbc.schema.Table.getSourceFile(),2,4
org.apache.openjpa.jdbc.schema.Table.getSourceScope(),3,3
org.apache.openjpa.jdbc.schema.Table.getSourceType(),3,4
"org.apache.openjpa.jdbc.schema.Table.setSource(File,int)",5,12
org.apache.openjpa.jdbc.schema.Table.getResourceName(),4,5
org.apache.openjpa.jdbc.schema.Table.getColumns(),15,35
org.apache.openjpa.jdbc.schema.Table.getAutoAssignedColumns(),18,50
org.apache.openjpa.jdbc.schema.Table.getRelationIdColumns(),16,43
org.apache.openjpa.jdbc.schema.Table.getColumnNames(),10,22
org.apache.openjpa.jdbc.schema.Table.getColumn(String),7,15
org.apache.openjpa.jdbc.schema.Table.getColumn(DBIdentifier),6,13
"org.apache.openjpa.jdbc.schema.Table.getColumn(DBIdentifier,boolean)",4,7
org.apache.openjpa.jdbc.schema.Table.containsColumn(String),12,25
org.apache.openjpa.jdbc.schema.Table.containsColumn(DBIdentifier),4,7
"org.apache.openjpa.jdbc.schema.Table.containsColumn(String,DBDictionary)",20,38
"org.apache.openjpa.jdbc.schema.Table.containsColumn(DBIdentifier,DBDictionary)",10,20
org.apache.openjpa.jdbc.schema.Table.containsColumn(Column),11,33
org.apache.openjpa.jdbc.schema.Table.addColumn(String),7,14
org.apache.openjpa.jdbc.schema.Table.addColumn(DBIdentifier),11,44
"org.apache.openjpa.jdbc.schema.Table.addColumn(String,String)",10,24
"org.apache.openjpa.jdbc.schema.Table.addColumn(DBIdentifier,DBIdentifier)",12,49
"org.apache.openjpa.jdbc.schema.Table.addCorrectedColumnName(String,boolean)",9,18
"org.apache.openjpa.jdbc.schema.Table.addCorrectedColumnName(DBIdentifier,boolean)",6,11
org.apache.openjpa.jdbc.schema.Table.removeColumn(Column),17,46
org.apache.openjpa.jdbc.schema.Table.importColumn(Column),16,65
org.apache.openjpa.jdbc.schema.Table.getPrimaryKey(),3,7
org.apache.openjpa.jdbc.schema.Table.addPrimaryKey(),6,13
org.apache.openjpa.jdbc.schema.Table.addPrimaryKey(String),10,18
org.apache.openjpa.jdbc.schema.Table.addPrimaryKey(DBIdentifier),6,26
org.apache.openjpa.jdbc.schema.Table.removePrimaryKey(),9,24
org.apache.openjpa.jdbc.schema.Table.importPrimaryKey(PrimaryKey),14,36
org.apache.openjpa.jdbc.schema.Table.getForeignKey(String),10,22
org.apache.openjpa.jdbc.schema.Table.getForeignKey(DBIdentifier),8,18
org.apache.openjpa.jdbc.schema.Table.getForeignKeys(),13,38
org.apache.openjpa.jdbc.schema.Table.addForeignKey(),5,13
org.apache.openjpa.jdbc.schema.Table.addForeignKey(String),11,23
org.apache.openjpa.jdbc.schema.Table.addForeignKey(DBIdentifier),9,37
org.apache.openjpa.jdbc.schema.Table.removeForeignKey(ForeignKey),10,28
org.apache.openjpa.jdbc.schema.Table.importForeignKey(ForeignKey),21,102
org.apache.openjpa.jdbc.schema.Table.getIndexes(),12,23
org.apache.openjpa.jdbc.schema.Table.getIndex(String),9,18
org.apache.openjpa.jdbc.schema.Table.getIndex(DBIdentifier),6,16
org.apache.openjpa.jdbc.schema.Table.addIndex(String),7,14
org.apache.openjpa.jdbc.schema.Table.addIndex(DBIdentifier),10,45
org.apache.openjpa.jdbc.schema.Table.removeIndex(Index),13,47
org.apache.openjpa.jdbc.schema.Table.importIndex(Index),14,35
org.apache.openjpa.jdbc.schema.Table.getUniques(),11,21
org.apache.openjpa.jdbc.schema.Table.getUnique(String),7,13
org.apache.openjpa.jdbc.schema.Table.getUnique(DBIdentifier),7,15
org.apache.openjpa.jdbc.schema.Table.addUnique(String),8,15
org.apache.openjpa.jdbc.schema.Table.addUnique(DBIdentifier),9,39
org.apache.openjpa.jdbc.schema.Table.removeUnique(Unique),11,33
org.apache.openjpa.jdbc.schema.Table.importUnique(Unique),15,35
org.apache.openjpa.jdbc.schema.Table.indexColumns(),9,12
org.apache.openjpa.jdbc.schema.Table.indexForeignKeys(),11,15
org.apache.openjpa.jdbc.schema.Table.changeAutoAssigned(Column),11,13
org.apache.openjpa.jdbc.schema.Table.changeRelationId(Column),9,10
org.apache.openjpa.jdbc.schema.Table.compareTo(Object),5,20
org.apache.openjpa.jdbc.schema.Table.toString(),3,4
org.apache.openjpa.jdbc.schema.Table.hasComment(),4,7
org.apache.openjpa.jdbc.schema.Table.getComment(),2,3
org.apache.openjpa.jdbc.schema.Table.setComment(String),3,6
org.apache.openjpa.jdbc.schema.Table.getLineNumber(),2,3
org.apache.openjpa.jdbc.schema.Table.setLineNumber(int),3,8
org.apache.openjpa.jdbc.schema.Table.getColNumber(),2,3
org.apache.openjpa.jdbc.schema.Table.setColNumber(int),3,8
org.apache.openjpa.conf.TestSpecification.testStaticConstruction(),10,62
org.apache.openjpa.conf.TestSpecification.testEqualityByName(),7,23
org.apache.openjpa.conf.TestSpecification.testVersionCompare(),6,23
org.apache.openjpa.jdbc.schema.SchemaSerializer.getTables(),4,5
org.apache.openjpa.jdbc.schema.SchemaSerializer.addTable(Table),5,9
org.apache.openjpa.jdbc.schema.SchemaSerializer.removeTable(Table),5,11
org.apache.openjpa.jdbc.schema.SchemaSerializer.addAll(Schema),6,9
org.apache.openjpa.jdbc.schema.SchemaSerializer.addAll(SchemaGroup),5,7
org.apache.openjpa.jdbc.schema.SchemaSerializer.removeAll(Schema),8,13
org.apache.openjpa.jdbc.schema.SchemaSerializer.removeAll(SchemaGroup),8,10
org.apache.openjpa.jdbc.schema.SchemaSerializer.clear(),3,3
org.apache.openjpa.lib.instrumentation.AbstractInstrument.getContext(),2,3
org.apache.openjpa.lib.instrumentation.AbstractInstrument.setContext(Object),3,6
org.apache.openjpa.lib.instrumentation.AbstractInstrument.getOptions(),2,3
org.apache.openjpa.lib.instrumentation.AbstractInstrument.setOptions(String),3,6
org.apache.openjpa.lib.instrumentation.AbstractInstrument.isStarted(),1,2
org.apache.openjpa.lib.instrumentation.AbstractInstrument.setStarted(boolean),2,5
org.apache.openjpa.lib.instrumentation.AbstractInstrument.restart(),3,3
org.apache.openjpa.lib.instrumentation.AbstractInstrument.setProvider(InstrumentationProvider),3,7
org.apache.openjpa.lib.instrumentation.AbstractInstrument.getProvider(),2,4
org.apache.openjpa.lib.instrumentation.AbstractInstrument.getLevel(),3,6
org.apache.openjpa.lib.instrumentation.AbstractInstrument.getName(),2,2
org.apache.openjpa.lib.instrumentation.AbstractInstrument.initialize(),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdClass.getPk1(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdClass.setPk1(long),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdClass.getPk2(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdClass.setPk2(long),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdClass.getPk3(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdClass.setPk3(long),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdClass.toString(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdClass.hashCode(),5,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdClass.equals(Object),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCLeafB1.getLeafB1Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCLeafB1.setLeafB1Data(String),4,10
org.apache.openjpa.persistence.criteria.TestFetchJoin.testFetchJoin(),17,30
org.apache.openjpa.persistence.criteria.TestFetchJoin.testLeftFetchJoin(),18,34
org.apache.openjpa.conf.TestBadAutoDetachProperty.testEmptyValue(),18,33
org.apache.openjpa.conf.TestBadAutoDetachProperty.testCommaOnlyValue(),41,101
org.apache.openjpa.conf.TestBadAutoDetachProperty.testEmptyItemValue(),43,104
org.apache.openjpa.persistence.criteria.VideoStore.getId(),0,0
org.apache.openjpa.persistence.criteria.VideoStore.setId(int),1,1
org.apache.openjpa.persistence.criteria.VideoStore.getName(),2,3
org.apache.openjpa.persistence.criteria.VideoStore.setName(String),3,6
org.apache.openjpa.persistence.criteria.VideoStore.getVideoInventory(),3,5
"org.apache.openjpa.persistence.criteria.VideoStore.addToVideoInventory(Movie,Integer)",5,11
org.apache.openjpa.persistence.criteria.VideoStore.getLocation(),2,3
org.apache.openjpa.persistence.criteria.VideoStore.setLocation(Address),3,6
org.apache.openjpa.enhance.UnenhancedFieldAccessSubclass.getRelated(),3,4
org.apache.openjpa.enhance.UnenhancedFieldAccessSubclass.setRelated(UnenhancedType),6,10
org.apache.openjpa.enhance.UnenhancedFieldAccessSubclass.setIntField(int),2,3
org.apache.openjpa.enhance.UnenhancedFieldAccessSubclass.getIntField(),1,2
org.apache.openjpa.enhance.UnenhancedFieldAccessSubclass.clone(),11,20
"org.apache.openjpa.kernel.exps.Substring.Substring(Val,Val)",8,16
org.apache.openjpa.kernel.exps.Substring.getType(),2,2
org.apache.openjpa.kernel.exps.Substring.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.Substring.eval(Object,Object,StoreContext,Object[])",19,58
org.apache.openjpa.kernel.exps.Substring.acceptVisit(ExpressionVisitor),8,17
org.apache.openjpa.jdbc.sql.TestDictionaryFactory.setUp(),10,11
org.apache.openjpa.jdbc.sql.TestDictionaryFactory.testUrl2Dictionary(),25,35
org.apache.openjpa.trader.client.ui.ErrorDialog.ErrorDialog(),35,80
org.apache.openjpa.trader.client.ui.ErrorDialog.ErrorDialog().$1.onClick(ClickEvent),3,5
org.apache.openjpa.trader.client.ui.ErrorDialog.showError(Throwable),5,6
org.apache.openjpa.trader.client.ui.ErrorDialog.populate(Throwable),10,11
org.apache.openjpa.trader.client.ui.ErrorDialog.addStackTrace(Throwable),15,46
org.apache.openjpa.trader.client.ui.ErrorDialog.createMessageLabel(Throwable),8,16
org.apache.openjpa.trader.client.ui.ErrorDialog.createStackTrace(StackTraceElement),11,20
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_FK.getId(),0,0
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_FK.getName(),2,3
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_FK.setName(String),3,6
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_FK.hashCode(),3,5
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_FK.equals(Object),5,11
org.apache.openjpa.integration.validation.Book.Book(),1,1
org.apache.openjpa.integration.validation.Book.Book(int),1,1
org.apache.openjpa.integration.validation.Book.getId(),0,0
org.apache.openjpa.integration.validation.Book.setId(int),2,3
org.apache.openjpa.integration.validation.Book.getTitle(),2,3
org.apache.openjpa.integration.validation.Book.setTitle(String),4,10
org.apache.openjpa.integration.validation.Book.getPages(),1,3
org.apache.openjpa.integration.validation.Book.setPages(int),3,9
org.apache.openjpa.integration.validation.Book.getPublisher(),1,3
org.apache.openjpa.integration.validation.Book.setPublisher(Publisher),3,10
demo.Actor.Actor(),1,1
"demo.Actor.Actor(String,String,String,Gender,Date)",6,18
demo.Actor.getId(),1,1
demo.Actor.getFirstName(),2,3
demo.Actor.getLastName(),2,3
demo.Actor.getGender(),1,3
demo.Actor.getDob(),2,3
demo.Actor.getPartner(),2,3
demo.Actor.setPartner(Actor),3,6
demo.Actor.getMovies(),3,4
demo.Actor.addMovie(Movie),5,12
org.apache.openjpa.jdbc.sql.AccessDictionary.AccessDictionary(),66,124
"org.apache.openjpa.jdbc.sql.AccessDictionary.setLong(PreparedStatement,int,long,Column)",19,34
org.apache.openjpa.persistence.jdbc.TestLobs.randomByte(),7,9
org.apache.openjpa.persistence.jdbc.TestLobs.setUp(),6,7
org.apache.openjpa.persistence.jdbc.TestLobs.testBlobSetToNull(),22,37
org.apache.openjpa.persistence.jdbc.TestLobs.testBlobPersistQuery(),27,67
org.apache.openjpa.persistence.jdbc.TestLobs.testBlobZeroLengthByteArray(),30,85
org.apache.openjpa.persistence.jdbc.TestLobs.testBlobLargeData(),27,71
org.apache.openjpa.persistence.jdbc.TestLobs.testLobPersistQuery(),24,63
org.apache.openjpa.persistence.jdbc.TestLobs.testLobSetToNull(),19,35
org.apache.openjpa.persistence.jdbc.TestLobs.testLobEmptyString(),27,92
org.apache.openjpa.persistence.jdbc.TestLobs.testLobLargeData(),26,72
"org.apache.openjpa.persistence.jdbc.TestLobs.assertError(Throwable,Class<>)",12,21
org.apache.openjpa.datacache.AbstractQueryCache.setEnableStatistics(boolean),5,7
org.apache.openjpa.datacache.AbstractQueryCache.getEnableStatistics(),4,4
org.apache.openjpa.datacache.AbstractQueryCache.getStatistics(),4,6
org.apache.openjpa.datacache.AbstractQueryCache.initialize(DataCacheManager),37,60
org.apache.openjpa.datacache.AbstractQueryCache.onTypesChanged(TypesChangedEvent),39,89
org.apache.openjpa.datacache.AbstractQueryCache.get(QueryKey),17,51
"org.apache.openjpa.datacache.AbstractQueryCache.put(QueryKey,QueryResult)",11,19
org.apache.openjpa.datacache.AbstractQueryCache.remove(QueryKey),16,35
org.apache.openjpa.datacache.AbstractQueryCache.pin(QueryKey),12,27
org.apache.openjpa.datacache.AbstractQueryCache.unpin(QueryKey),12,27
org.apache.openjpa.datacache.AbstractQueryCache.clear(),8,13
org.apache.openjpa.datacache.AbstractQueryCache.close(),1,2
org.apache.openjpa.datacache.AbstractQueryCache.close(boolean),3,4
org.apache.openjpa.datacache.AbstractQueryCache.isClosed(),1,2
org.apache.openjpa.datacache.AbstractQueryCache.addTypesChangedListener(TypesChangedListener),5,11
org.apache.openjpa.datacache.AbstractQueryCache.removeTypesChangedListener(TypesChangedListener),5,11
org.apache.openjpa.datacache.AbstractQueryCache.afterCommit(RemoteCommitEvent),39,100
"org.apache.openjpa.datacache.AbstractQueryCache.addTypes(Collection,Set)",31,68
org.apache.openjpa.datacache.AbstractQueryCache.keySet(),16,18
org.apache.openjpa.datacache.AbstractQueryCache.getInternal(QueryKey),5,7
"org.apache.openjpa.datacache.AbstractQueryCache.putInternal(QueryKey,QueryResult)",8,14
org.apache.openjpa.datacache.AbstractQueryCache.removeInternal(QueryKey),6,10
org.apache.openjpa.datacache.AbstractQueryCache.removeAllInternal(Collection),11,18
org.apache.openjpa.datacache.AbstractQueryCache.clearInternal(),2,2
org.apache.openjpa.datacache.AbstractQueryCache.pinInternal(QueryKey),6,7
org.apache.openjpa.datacache.AbstractQueryCache.unpinInternal(QueryKey),6,7
org.apache.openjpa.datacache.AbstractQueryCache.setConfiguration(Configuration),6,15
org.apache.openjpa.datacache.AbstractQueryCache.startConfiguration(),2,2
org.apache.openjpa.datacache.AbstractQueryCache.endConfiguration(),7,11
"org.apache.openjpa.datacache.AbstractQueryCache.fireEvent(Object,Object)",13,33
org.apache.openjpa.datacache.AbstractQueryCache.newListenerCollection(),18,27
org.apache.openjpa.datacache.AbstractQueryCache.setEvictPolicy(String),14,29
org.apache.openjpa.datacache.AbstractQueryCache.getEvictPolicy(),9,17
"org.apache.openjpa.datacache.AbstractQueryCache.updateEntityTimestamp(Map<String,Long>)",13,30
org.apache.openjpa.datacache.AbstractQueryCache.getAllEntityTimestamp(List<String>),21,51
org.apache.openjpa.datacache.AbstractQueryCache.setName(String),3,4
org.apache.openjpa.datacache.AbstractQueryCache.getName(),2,3
org.apache.openjpa.datacache.AbstractQueryCache.count(),4,4
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.keys(),4,5
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.getExecutionCount(),4,4
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.getTotalExecutionCount(),5,5
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.getExecutionCount(T),5,7
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.getTotalExecutionCount(T),6,8
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.getHitCount(),3,4
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.getTotalHitCount(),4,5
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.getHitCount(T),4,7
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.getTotalHitCount(T),5,8
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.getEvictionCount(),4,4
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.getTotalEvictionCount(),5,5
"org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.getCount(Map<T,long[]>,T,int)",5,9
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.since(),1,1
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.start(),2,3
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.reset(),6,6
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.clear(),16,29
"org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.addSample(T,int)",8,18
"org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.addSample(Map<T,long[]>,T,int)",8,16
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.recordExecution(T),6,8
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.recordHit(T),5,7
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.recordEviction(T),6,8
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.dump(PrintStream),21,59
"org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.pct(long,long)",2,4
org.apache.openjpa.datacache.AbstractQueryCache.Default<T>.toString(long[]),5,12
org.apache.openjpa.persistence.jdbc.annotations.Flat1.Flat1(),1,1
org.apache.openjpa.persistence.jdbc.annotations.Flat1.Flat1(int),1,1
org.apache.openjpa.persistence.jdbc.annotations.Flat1.setPk(int),2,3
org.apache.openjpa.persistence.jdbc.annotations.Flat1.getPk(),0,0
org.apache.openjpa.persistence.jdbc.annotations.Flat1.getVersion(),1,2
org.apache.openjpa.persistence.jdbc.annotations.Flat1.setBasic(int),2,3
org.apache.openjpa.persistence.jdbc.annotations.Flat1.getBasic(),1,2
org.apache.openjpa.lib.log.NoneLogFactory.getLog(String),5,7
org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.getInstance(),3,4
org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.isErrorEnabled(),2,2
org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.isFatalEnabled(),2,2
org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.isInfoEnabled(),2,2
org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.isTraceEnabled(),2,2
org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.isWarnEnabled(),2,2
org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.trace(Object),2,2
"org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.trace(Object,Throwable)",3,3
org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.info(Object),2,2
"org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.info(Object,Throwable)",3,3
org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.warn(Object),2,2
"org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.warn(Object,Throwable)",3,3
org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.error(Object),2,2
"org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.error(Object,Throwable)",3,3
org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.fatal(Object),2,2
"org.apache.openjpa.lib.log.NoneLogFactory.NoneLog.fatal(Object,Throwable)",3,3
"org.apache.openjpa.kernel.SingleFieldManager.SingleFieldManager(StateManagerImpl,BrokerImpl)",14,23
"org.apache.openjpa.kernel.SingleFieldManager.proxy(boolean,boolean)",50,206
org.apache.openjpa.kernel.SingleFieldManager.checkProxy(FieldMetaData),19,41
org.apache.openjpa.kernel.SingleFieldManager.unproxy(),24,46
org.apache.openjpa.kernel.SingleFieldManager.releaseEmbedded(),21,75
"org.apache.openjpa.kernel.SingleFieldManager.releaseEmbedded(ValueMetaData,Object[])",10,17
"org.apache.openjpa.kernel.SingleFieldManager.releaseEmbedded(ValueMetaData,Collection)",11,20
"org.apache.openjpa.kernel.SingleFieldManager.releaseEmbedded(ValueMetaData,Object)",15,27
org.apache.openjpa.kernel.SingleFieldManager.persist(OpCallbacks),43,101
org.apache.openjpa.kernel.SingleFieldManager.delete(OpCallbacks),6,9
org.apache.openjpa.kernel.SingleFieldManager.dereferenceDependent(),5,6
"org.apache.openjpa.kernel.SingleFieldManager.delete(boolean,OpCallbacks)",4,7
"org.apache.openjpa.kernel.SingleFieldManager.delete(boolean,OpCallbacks,boolean)",37,207
"org.apache.openjpa.kernel.SingleFieldManager.delete(ValueMetaData,Object[],OpCallbacks)",11,18
"org.apache.openjpa.kernel.SingleFieldManager.delete(ValueMetaData,Collection,OpCallbacks)",13,22
"org.apache.openjpa.kernel.SingleFieldManager.delete(ValueMetaData,Object,OpCallbacks)",21,42
org.apache.openjpa.kernel.SingleFieldManager.dereferenceDependent(Object[]),9,14
org.apache.openjpa.kernel.SingleFieldManager.dereferenceDependent(Collection),9,17
org.apache.openjpa.kernel.SingleFieldManager.dereferenceDependent(Object),9,16
org.apache.openjpa.kernel.SingleFieldManager.dereferenceEmbedDependent(StateManagerImpl),7,9
org.apache.openjpa.kernel.SingleFieldManager.gatherCascadeRefresh(OpCallbacks),35,99
"org.apache.openjpa.kernel.SingleFieldManager.gatherCascadeRefresh(Object[],OpCallbacks)",10,17
"org.apache.openjpa.kernel.SingleFieldManager.gatherCascadeRefresh(Collection,OpCallbacks)",11,20
"org.apache.openjpa.kernel.SingleFieldManager.preFlush(boolean,OpCallbacks)",42,66
org.apache.openjpa.kernel.SingleFieldManager.isDefaultValue(),7,9
"org.apache.openjpa.kernel.SingleFieldManager.serialize(ObjectOutput,boolean)",21,66
"org.apache.openjpa.kernel.SingleFieldManager.preFlush(FieldMetaData,boolean,OpCallbacks)",59,150
"org.apache.openjpa.kernel.SingleFieldManager.preFlush(FieldMetaData,int,int,int,boolean,boolean,OpCallbacks)",53,364
"org.apache.openjpa.kernel.SingleFieldManager.preFlushPCs(ValueMetaData,Collection,Map,boolean,OpCallbacks)",18,32
"org.apache.openjpa.kernel.SingleFieldManager.preFlushPCs(ValueMetaData,Object[],boolean,OpCallbacks)",17,26
"org.apache.openjpa.kernel.SingleFieldManager.preFlushPCs(ValueMetaData,Collection,boolean,OpCallbacks)",17,29
"org.apache.openjpa.kernel.SingleFieldManager.preFlushPC(ValueMetaData,Object,boolean,OpCallbacks)",69,171
"org.apache.openjpa.kernel.SingleFieldManager.embed(ValueMetaData,Object[])",11,16
"org.apache.openjpa.kernel.SingleFieldManager.embed(ValueMetaData,Collection)",27,58
"org.apache.openjpa.kernel.SingleFieldManager.embed(FieldMetaData,Map,boolean,boolean)",35,110
"org.apache.openjpa.kernel.SingleFieldManager.embed(ValueMetaData,Object)",11,17
org.apache.openjpa.kernel.SingleFieldManager.getProxyManager(),5,11
org.apache.openjpa.persistence.jdbc.FetchDirection.FetchDirection(int),6,7
org.apache.openjpa.persistence.jdbc.FetchDirection.toKernelConstant(),4,5
org.apache.openjpa.persistence.jdbc.FetchDirection.fromKernelConstant(int),12,28
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementOpOrderPC.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementOpOrderPC.getRel(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementOpOrderPC.setRel(AutoIncrementOpOrderPC),4,7
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementOpOrderPC.getOwner(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementOpOrderPC.setOwner(AutoIncrementOpOrderPC),4,7
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementOpOrderPC.getSecondary(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementOpOrderPC.setSecondary(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementOpOrderPC.getRelList(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementOpOrderPC.getMappedRelList(),3,7
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementOpOrderPC.getInverseKeyRelList(),4,9
"org.apache.openjpa.datacache.ExpirationEvent.ExpirationEvent(Object,Object,boolean)",14,34
org.apache.openjpa.datacache.ExpirationEvent.getKey(),4,7
org.apache.openjpa.datacache.ExpirationEvent.getExpired(),5,9
"org.apache.openjpa.persistence.query.DividedByExpression.DividedByExpression(Expression,Expression)",6,8
org.apache.openjpa.lib.rop.ListResultObjectProvider.ListResultObjectProvider(List),7,11
org.apache.openjpa.lib.rop.ListResultObjectProvider.getDelegate(),2,3
org.apache.openjpa.lib.rop.ListResultObjectProvider.supportsRandomAccess(),3,3
org.apache.openjpa.lib.rop.ListResultObjectProvider.open(),1,1
org.apache.openjpa.lib.rop.ListResultObjectProvider.getResultObject(),5,6
org.apache.openjpa.lib.rop.ListResultObjectProvider.next(),3,3
org.apache.openjpa.lib.rop.ListResultObjectProvider.absolute(int),6,9
org.apache.openjpa.lib.rop.ListResultObjectProvider.size(),3,4
org.apache.openjpa.lib.rop.ListResultObjectProvider.reset(),3,3
org.apache.openjpa.lib.rop.ListResultObjectProvider.close(),4,8
org.apache.openjpa.lib.rop.ListResultObjectProvider.handleCheckedException(Exception),7,9
org.apache.openjpa.persistence.access.xml.XMLFieldSub.getCreateDate(),3,5
org.apache.openjpa.persistence.access.xml.XMLFieldSub.setCreateDate(Date),4,8
org.apache.openjpa.persistence.access.xml.XMLFieldSub.equals(Object),10,32
org.apache.openjpa.persistence.compat.Bi_1ToM_Map_JT.getId(),0,0
org.apache.openjpa.persistence.compat.Bi_1ToM_Map_JT.getName(),2,3
org.apache.openjpa.persistence.compat.Bi_1ToM_Map_JT.setName(String),3,6
org.apache.openjpa.persistence.compat.Bi_1ToM_Map_JT.getEntityCs(),3,6
"org.apache.openjpa.persistence.compat.Bi_1ToM_Map_JT.setEntityCs(Map<String,EntityC_B1M_Map_JT>)",4,9
org.apache.openjpa.persistence.compat.Bi_1ToM_Map_JT.hashCode(),3,5
org.apache.openjpa.persistence.compat.Bi_1ToM_Map_JT.equals(Object),9,26
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DefaultCallbackListener.DefaultCallbackListener(),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DefaultCallbackListener.prePersist(Object),12,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DefaultCallbackListener.postPersist(Object),12,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DefaultCallbackListener.postRemove(Object),12,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DefaultCallbackListener.preRemove(Object),12,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DefaultCallbackListener.postUpdate(Object),12,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DefaultCallbackListener.preUpdate(Object),12,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DefaultCallbackListener.postLoad(Object),12,15
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getConnection(),3,5
"org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getConnection(String,String)",10,30
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getConnection(Properties),6,9
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getSimpleConnection(Properties),14,29
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getLoginTimeout(),2,2
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.setLoginTimeout(int),3,3
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getLogWriter(),5,8
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.setLogWriter(PrintWriter),4,5
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.initDBDictionary(DBDictionary),3,4
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.setConnectionURL(String),4,10
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getConnectionURL(),3,5
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.setConnectionUserName(String),5,14
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getConnectionUserName(),4,7
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.setConnectionPassword(String),4,10
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getConnectionPassword(),7,10
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.setConnectionProperties(Properties),4,8
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getConnectionProperties(),2,5
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.setConnectionFactoryProperties(Properties),5,10
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getConnectionFactoryProperties(),3,7
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.createConnectionDecorators(),5,6
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.setClassLoader(ClassLoader),2,6
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getClassLoader(),1,3
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.setConnectionDriverName(String),5,14
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getConnectionDriverName(),4,7
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getSimpleDriver(),17,58
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.isWrapperFor(Class<>),11,13
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.unwrap(Class),4,5
org.apache.openjpa.jdbc.schema.SimpleDriverDataSource.getParentLogger(),6,11
"org.apache.openjpa.kernel.exps.WhenScalar.WhenScalar(Val,Val)",3,10
org.apache.openjpa.kernel.exps.WhenScalar.getVal1(),1,3
org.apache.openjpa.kernel.exps.WhenScalar.getVal2(),1,3
org.apache.openjpa.kernel.exps.WhenScalar.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.util.TestProxyManager.setUp(),5,5
org.apache.openjpa.util.TestProxyManager.testCopyLists(),12,43
org.apache.openjpa.util.TestProxyManager.populate(Collection),10,20
"org.apache.openjpa.util.TestProxyManager.assertListsEqual(List,List)",6,10
org.apache.openjpa.util.TestProxyManager.testCopySets(),11,30
"org.apache.openjpa.util.TestProxyManager.assertSetsEqual(Set,Set)",6,10
org.apache.openjpa.util.TestProxyManager.testCopySortedSets(),13,73
org.apache.openjpa.util.TestProxyManager.populate(SortedSet),8,24
"org.apache.openjpa.util.TestProxyManager.assertSortedSetsEqual(SortedSet,SortedSet)",6,12
"org.apache.openjpa.util.TestProxyManager.assertSortedSetsEquals(SortedSet,SortedSet)",10,26
org.apache.openjpa.util.TestProxyManager.testCopyNullCollection(),4,6
org.apache.openjpa.util.TestProxyManager.testCopyProxyCollection(),18,54
org.apache.openjpa.util.TestProxyManager.testCloneProxyCollection(),17,36
org.apache.openjpa.util.TestProxyManager.testListMethodsProxied(),10,25
org.apache.openjpa.util.TestProxyManager.assertCollectionMethodsProxied(Class),22,60
org.apache.openjpa.util.TestProxyManager.assertListMethodsProxied(Class),16,44
org.apache.openjpa.util.TestProxyManager.testSetMethodsProxied(),12,50
org.apache.openjpa.util.TestProxyManager.testQueueMethodsProxied(),22,46
org.apache.openjpa.util.TestProxyManager.testLinkedListMethodsProxied(),14,34
org.apache.openjpa.util.TestProxyManager.testVectorMethodsProxied(),18,48
org.apache.openjpa.util.TestProxyManager.testListChangeTracker(),12,35
org.apache.openjpa.util.TestProxyManager.testSetChangeTracker(),12,35
org.apache.openjpa.util.TestProxyManager.testCollectionInterfaceProxy(),5,10
org.apache.openjpa.util.TestProxyManager.testListInterfaceProxy(),6,12
org.apache.openjpa.util.TestProxyManager.testSetInterfaceProxy(),7,15
org.apache.openjpa.util.TestProxyManager.testSortedSetInterfaceProxy(),7,15
org.apache.openjpa.util.TestProxyManager.testQueueInterfaceProxy(),7,16
org.apache.openjpa.util.TestProxyManager.testProxyCustomDefaultScopedType(),26,43
org.apache.openjpa.util.TestProxyManager.testProxyCustomDefaultScopedList(),27,43
org.apache.openjpa.util.TestProxyManager.getQueueClass(),7,11
org.apache.openjpa.util.TestProxyManager.testCopyMaps(),18,56
org.apache.openjpa.util.TestProxyManager.populate(Map),5,15
"org.apache.openjpa.util.TestProxyManager.assertMapsEqual(Map,Map)",6,10
org.apache.openjpa.util.TestProxyManager.testCopySortedMaps(),12,73
"org.apache.openjpa.util.TestProxyManager.assertSortedMapsEqual(SortedMap,SortedMap)",6,12
"org.apache.openjpa.util.TestProxyManager.assertSortedMapsEquals(SortedMap,SortedMap)",14,50
org.apache.openjpa.util.TestProxyManager.testCopyNullMap(),4,6
org.apache.openjpa.util.TestProxyManager.testCopyProxyMap(),15,54
org.apache.openjpa.util.TestProxyManager.testCloneProxyMap(),14,35
org.apache.openjpa.util.TestProxyManager.testMapMethodsProxied(),12,72
org.apache.openjpa.util.TestProxyManager.assertMapMethodsProxied(Class),24,60
org.apache.openjpa.util.TestProxyManager.testPropertiesMethodsProxied(),17,34
org.apache.openjpa.util.TestProxyManager.testCopyDates(),15,64
"org.apache.openjpa.util.TestProxyManager.assertDatesEqual(Date,Date)",5,8
"org.apache.openjpa.util.TestProxyManager.assertDatesEquals(Date,Date)",5,8
org.apache.openjpa.util.TestProxyManager.testCopyNullDate(),4,6
org.apache.openjpa.util.TestProxyManager.testCopyProxyDate(),10,24
org.apache.openjpa.util.TestProxyManager.testCloneProxyDate(),10,22
org.apache.openjpa.util.TestProxyManager.testDateMethodsProxied(),12,53
org.apache.openjpa.util.TestProxyManager.assertDateMethodsProxied(Class),21,60
org.apache.openjpa.util.TestProxyManager.assertTimestampMethodsProxied(Class),13,20
org.apache.openjpa.util.TestProxyManager.testCopyCalendars(),10,28
org.apache.openjpa.util.TestProxyManager.populate(Calendar),10,20
"org.apache.openjpa.util.TestProxyManager.assertCalendarsEqual(Calendar,Calendar)",6,8
"org.apache.openjpa.util.TestProxyManager.assertCalendarsEquals(Calendar,Calendar)",6,8
org.apache.openjpa.util.TestProxyManager.testCopyNullCalendar(),4,6
org.apache.openjpa.util.TestProxyManager.testCopyProxyCalendar(),14,32
org.apache.openjpa.util.TestProxyManager.testCloneProxyCalendar(),14,31
org.apache.openjpa.util.TestProxyManager.testCalendarAbstractClassProxy(),5,10
org.apache.openjpa.util.TestProxyManager.testCalendarMethodsProxied(),11,40
org.apache.openjpa.util.TestProxyManager.assertCalendarMethodsProxied(Class),23,55
org.apache.openjpa.util.TestProxyManager.testCopyBeans(),10,34
org.apache.openjpa.util.TestProxyManager.populate(CustomBean),8,14
org.apache.openjpa.util.TestProxyManager.testNonproxyableBean(),9,18
"org.apache.openjpa.util.TestProxyManager.assertBeansEqual(CustomBean,CustomBean)",6,10
org.apache.openjpa.util.TestProxyManager.testCopyNullBean(),5,6
org.apache.openjpa.util.TestProxyManager.testCopyProxyBean(),11,32
org.apache.openjpa.util.TestProxyManager.testBeanMethodsProxied(),10,29
org.apache.openjpa.util.TestProxyManager.assertBeanMethodsProxied(Class),18,37
org.apache.openjpa.util.TestProxyManager.main(String[]),8,9
org.apache.openjpa.util.TestProxyManager.CustomList.size(),2,3
org.apache.openjpa.util.TestProxyManager.CustomList.listIterator(int),4,9
org.apache.openjpa.util.TestProxyManager.CustomSet.size(),2,3
org.apache.openjpa.util.TestProxyManager.CustomSet.iterator(),2,4
org.apache.openjpa.util.TestProxyManager.CustomSet.add(Object),3,4
org.apache.openjpa.util.TestProxyManager.CustomComparatorSortedSet.CustomComparatorSortedSet(),4,4
org.apache.openjpa.util.TestProxyManager.CustomComparatorSortedSet.CustomComparatorSortedSet(Comparator),5,7
"org.apache.openjpa.util.TestProxyManager.CustomMap.put(Object,Object)",4,8
org.apache.openjpa.util.TestProxyManager.CustomMap.entrySet(),3,6
org.apache.openjpa.util.TestProxyManager.CustomComparatorSortedMap.CustomComparatorSortedMap(),4,4
org.apache.openjpa.util.TestProxyManager.CustomComparatorSortedMap.CustomComparatorSortedMap(Comparator),5,7
"org.apache.openjpa.util.TestProxyManager.CustomComparator.compare(Object,Object)",3,5
org.apache.openjpa.util.TestProxyManager.CustomDate.CustomDate(long),3,4
org.apache.openjpa.util.TestProxyManager.CustomBean.getString(),1,3
org.apache.openjpa.util.TestProxyManager.CustomBean.setString(String),3,6
org.apache.openjpa.util.TestProxyManager.CustomBean.getNumber(),0,0
org.apache.openjpa.util.TestProxyManager.CustomBean.setNumber(int),1,1
org.apache.openjpa.util.TestProxyManager.CustomCopyConstructorBean.CustomCopyConstructorBean(CustomBean),6,13
org.apache.openjpa.util.TestProxyManager.NonproxyableBean.NonproxyableBean(long),5,5
"org.apache.openjpa.persistence.query.RangeExpression.RangeExpression(Expression,Expression)",5,8
org.apache.openjpa.persistence.query.RangeExpression.asExpression(AliasContext),6,11
org.apache.openjpa.meta.NoneMetaDataFactory.getInstance(),5,6
org.apache.openjpa.meta.NoneMetaDataFactory.setRepository(MetaDataRepository),5,6
org.apache.openjpa.meta.NoneMetaDataFactory.setStoreDirectory(File),5,5
org.apache.openjpa.meta.NoneMetaDataFactory.setStoreMode(int),3,4
org.apache.openjpa.meta.NoneMetaDataFactory.setStrict(boolean),2,3
"org.apache.openjpa.meta.NoneMetaDataFactory.load(Class,int,ClassLoader)",5,6
"org.apache.openjpa.meta.NoneMetaDataFactory.store(ClassMetaData[],QueryMetaData[],SequenceMetaData[],int,Map)",11,15
"org.apache.openjpa.meta.NoneMetaDataFactory.drop(Class[],int,ClassLoader)",5,6
org.apache.openjpa.meta.NoneMetaDataFactory.getDefaults(),3,4
"org.apache.openjpa.meta.NoneMetaDataFactory.getPersistentTypeNames(boolean,ClassLoader)",7,8
"org.apache.openjpa.meta.NoneMetaDataFactory.getQueryScope(String,ClassLoader)",5,7
"org.apache.openjpa.meta.NoneMetaDataFactory.getResultSetMappingScope(String,ClassLoader)",7,11
org.apache.openjpa.meta.NoneMetaDataFactory.newClassArgParser(),2,6
org.apache.openjpa.meta.NoneMetaDataFactory.clear(),0,0
org.apache.openjpa.meta.NoneMetaDataFactory.addClassExtensionKeys(Collection),5,5
org.apache.openjpa.meta.NoneMetaDataFactory.addFieldExtensionKeys(Collection),6,6
org.apache.openjpa.meta.NoneMetaDataFactory.getDefaultAccessType(),4,5
org.apache.openjpa.meta.NoneMetaDataFactory.getDefaultIdentityType(),5,5
org.apache.openjpa.meta.NoneMetaDataFactory.getCallbackMode(),3,4
org.apache.openjpa.meta.NoneMetaDataFactory.getCallbacksBeforeListeners(int),3,3
org.apache.openjpa.meta.NoneMetaDataFactory.setIgnoreNonPersistent(boolean),3,4
org.apache.openjpa.meta.NoneMetaDataFactory.isDeclaredInterfacePersistent(),2,2
org.apache.openjpa.meta.NoneMetaDataFactory.isDataStoreObjectIdFieldUnwrapped(),5,5
"org.apache.openjpa.meta.NoneMetaDataFactory.populate(ClassMetaData,int)",4,5
"org.apache.openjpa.meta.NoneMetaDataFactory.populate(ClassMetaData,int,boolean)",5,6
org.apache.openjpa.meta.NoneMetaDataFactory.getBackingMember(FieldMetaData),4,4
"org.apache.openjpa.meta.NoneMetaDataFactory.getMemberByProperty(ClassMetaData,String,int,boolean)",6,8
org.apache.openjpa.meta.NoneMetaDataFactory.getUnimplementedExceptionType(),3,4
org.apache.openjpa.meta.NoneMetaDataFactory.loadXMLMetaData(Class<>),5,5
org.apache.openjpa.meta.NoneMetaDataFactory.getMetaModelClassName(String),5,7
org.apache.openjpa.meta.NoneMetaDataFactory.getManagedClassName(String),4,6
org.apache.openjpa.meta.NoneMetaDataFactory.isMetaClass(Class<>),1,1
org.apache.openjpa.meta.NoneMetaDataFactory.getManagedClass(Class<>),1,1
org.apache.openjpa.meta.NoneMetaDataFactory.isAbstractMappingUniDirectional(OpenJPAConfiguration),6,6
org.apache.openjpa.meta.NoneMetaDataFactory.isNonDefaultMappingAllowed(OpenJPAConfiguration),5,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.CallbackStorage.CallbackStorage(),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.CallbackStorage.getInstance(),4,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.CallbackStorage.getClist(),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.CallbackStorage.setClist(List<String>),6,9
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.CallbackStorage.clearStore(),5,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.CallbackStorage.isEmpty(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.CallbackStorage.size(),2,3
"org.apache.openjpa.kernel.PCleanState.initialize(StateManagerImpl,PCState)",7,9
org.apache.openjpa.kernel.PCleanState.commit(StateManagerImpl),5,5
org.apache.openjpa.kernel.PCleanState.commitRetain(StateManagerImpl),6,6
org.apache.openjpa.kernel.PCleanState.rollback(StateManagerImpl),5,5
org.apache.openjpa.kernel.PCleanState.rollbackRestore(StateManagerImpl),6,6
org.apache.openjpa.kernel.PCleanState.delete(StateManagerImpl),6,8
org.apache.openjpa.kernel.PCleanState.nontransactional(StateManagerImpl),5,5
org.apache.openjpa.kernel.PCleanState.release(StateManagerImpl),4,4
org.apache.openjpa.kernel.PCleanState.evict(StateManagerImpl),5,5
"org.apache.openjpa.kernel.PCleanState.beforeWrite(StateManagerImpl,int,boolean)",7,7
"org.apache.openjpa.kernel.PCleanState.beforeOptimisticWrite(StateManagerImpl,int,boolean)",8,8
org.apache.openjpa.kernel.PCleanState.isTransactional(),1,1
org.apache.openjpa.kernel.PCleanState.isPersistent(),1,1
org.apache.openjpa.kernel.PCleanState.toString(),3,4
org.apache.openjpa.audit.TestAudit.setUp(),18,32
org.apache.openjpa.audit.TestAudit.createManagedObject(),15,19
org.apache.openjpa.audit.TestAudit.clearAuditedEntries(),11,13
org.apache.openjpa.audit.TestAudit.testAuditorIsConfigured(),3,4
org.apache.openjpa.audit.TestAudit.testIsEntityAuditable(),4,5
org.apache.openjpa.audit.TestAudit.testNewInstancesAreAudited(),12,29
org.apache.openjpa.audit.TestAudit.testUpdateOutsideTransactionAreAudited(),20,45
org.apache.openjpa.audit.TestAudit.testUpdateInsideTransactionAreAudited(),19,42
org.apache.openjpa.audit.TestAudit.testAuditDoesNotLeakMemory(),21,49
"org.apache.openjpa.audit.TestAudit.insert(int,EntityManager)",20,30
org.apache.openjpa.audit.TestAudit.findLastAuditedEntry(AuditableOperation),22,37
org.apache.openjpa.audit.TestAudit.ensureGarbageCollection(),14,29
org.apache.openjpa.enhance.RestrictedMetaDataRepository.getExcludedTypes(),3,6
org.apache.openjpa.enhance.RestrictedMetaDataRepository.setExcludedTypes(String),10,21
"org.apache.openjpa.enhance.RestrictedMetaDataRepository.getPersistentTypeNames(boolean,ClassLoader)",14,38
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getCollections(),11,165
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizA(HorizA),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizA(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizB(HorizB),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizB(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizC(HorizC),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizC(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizD(HorizD),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizD(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizE(HorizE),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizE(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizF(HorizF),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizF(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizG(HorizG),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizG(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizH(HorizH),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizH(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizI(HorizI),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizI(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizJ(HorizJ),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizJ(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizK(HorizK),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizK(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizL(HorizL),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizL(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizM(HorizM),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizM(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizN(HorizN),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizN(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizO(HorizO),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizO(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizAppSingleA(HorizAppSingleA),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizAppSingleA(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizAppSingleB(HorizAppSingleB),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizAppSingleB(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizAppSingleC(HorizAppSingleC),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizAppSingleC(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizAppSingleD(HorizAppSingleD),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizAppSingleD(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizAppMultiA(HorizAppMultiA),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizAppMultiA(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizAppMultiB(HorizAppMultiB),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizAppMultiB(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizAppMultiC(HorizAppMultiC),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizAppMultiC(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizAppMultiD(HorizAppMultiD),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizAppMultiD(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizInterFlatA(HorizInterFlatA),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizInterFlatA(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizInterFlatB(HorizInterFlatB),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizInterFlatB(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizInterFlatC(HorizInterFlatC),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizInterFlatC(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizInterFlatD(HorizInterFlatD),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizInterFlatD(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizInterVerticalA(HorizInterVerticalA),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizInterVerticalA(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizInterVerticalB(HorizInterVerticalB),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizInterVerticalB(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizInterVerticalC(HorizInterVerticalC),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizInterVerticalC(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setObHorizInterVerticalD(HorizInterVerticalD),4,16
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getObHorizInterVerticalD(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.getCHorizInterVerticalB(),5,8
org.apache.openjpa.persistence.jdbc.common.apps.HorizRelation.setCHorizInterVerticalB(HashSet),5,15
org.apache.openjpa.lib.identifier.IdentifierRule.setName(String),3,6
org.apache.openjpa.lib.identifier.IdentifierRule.getName(),2,3
org.apache.openjpa.lib.identifier.IdentifierRule.setMaxLength(int),3,9
org.apache.openjpa.lib.identifier.IdentifierRule.getMaxLength(),2,4
org.apache.openjpa.lib.identifier.IdentifierRule.setAllowTruncation(boolean),3,9
org.apache.openjpa.lib.identifier.IdentifierRule.isAllowTruncation(),2,4
org.apache.openjpa.lib.identifier.IdentifierRule.setNullable(boolean),2,5
org.apache.openjpa.lib.identifier.IdentifierRule.isNullable(),1,2
org.apache.openjpa.lib.identifier.IdentifierRule.setAllowCompaction(boolean),3,9
org.apache.openjpa.lib.identifier.IdentifierRule.getAllowCompaction(),2,4
org.apache.openjpa.lib.identifier.IdentifierRule.setCanDelimit(boolean),2,5
org.apache.openjpa.lib.identifier.IdentifierRule.getCanDelimit(),1,2
org.apache.openjpa.lib.identifier.IdentifierRule.setMustDelimit(boolean),2,5
org.apache.openjpa.lib.identifier.IdentifierRule.getMustDelimit(),1,2
org.apache.openjpa.lib.identifier.IdentifierRule.setMustBeginWithLetter(boolean),3,9
org.apache.openjpa.lib.identifier.IdentifierRule.isMustBeginWithLetter(),2,4
org.apache.openjpa.lib.identifier.IdentifierRule.setOnlyLettersDigitsUnderscores(boolean),4,13
org.apache.openjpa.lib.identifier.IdentifierRule.isOnlyLettersDigitsUnderscores(),3,6
org.apache.openjpa.lib.identifier.IdentifierRule.setReservedWords(Set<String>),4,11
org.apache.openjpa.lib.identifier.IdentifierRule.getReservedWords(),5,13
org.apache.openjpa.lib.identifier.IdentifierRule.setSpecialCharacters(String),4,10
org.apache.openjpa.lib.identifier.IdentifierRule.getSpecialCharacters(),3,5
org.apache.openjpa.lib.identifier.IdentifierRule.setDelimitReservedWords(boolean),4,13
org.apache.openjpa.lib.identifier.IdentifierRule.getDelimitReservedWords(),3,6
org.apache.openjpa.lib.identifier.IdentifierRule.requiresDelimiters(String),48,86
org.apache.openjpa.lib.identifier.IdentifierRule.isReservedWord(String),6,8
"org.apache.openjpa.kernel.exps.GetMapValue.GetMapValue(Val,Val)",7,14
org.apache.openjpa.kernel.exps.GetMapValue.isVariable(),1,1
org.apache.openjpa.kernel.exps.GetMapValue.getType(),2,2
org.apache.openjpa.kernel.exps.GetMapValue.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.GetMapValue.eval(Object,Object,StoreContext,Object[])",10,24
org.apache.openjpa.enhance.UnenhancedType.getId(),0,0
org.apache.openjpa.enhance.UnenhancedType.setStringField(String),3,4
org.apache.openjpa.enhance.UnenhancedType.getStringField(),2,3
org.apache.openjpa.enhance.UnenhancedType.getLazyField(),3,3
org.apache.openjpa.enhance.UnenhancedType.clone(),4,5
org.apache.openjpa.jdbc.kernel.Task.getId(),0,0
org.apache.openjpa.jdbc.kernel.Task.setId(int),1,1
org.apache.openjpa.jdbc.kernel.Task.getStories(),3,4
org.apache.openjpa.jdbc.kernel.Task.setStories(Collection<Story>),4,7
org.apache.openjpa.jdbc.kernel.Task.getEmployee(),1,3
org.apache.openjpa.jdbc.kernel.Task.setEmployee(Employee),2,6
org.apache.openjpa.jdbc.kernel.Task.getVersion(),1,2
org.apache.openjpa.jta.SimpleTransactionManager.begin(),18,43
org.apache.openjpa.jta.SimpleTransactionManager.commit(),20,37
org.apache.openjpa.jta.SimpleTransactionManager.getStatus(),8,14
org.apache.openjpa.jta.SimpleTransactionManager.getTransaction(),14,34
org.apache.openjpa.jta.SimpleTransactionManager.resume(Transaction),11,18
org.apache.openjpa.jta.SimpleTransactionManager.rollback(),17,29
org.apache.openjpa.jta.SimpleTransactionManager.setRollbackOnly(),12,24
org.apache.openjpa.jta.SimpleTransactionManager.setTransactionTimeout(int),10,14
org.apache.openjpa.jta.SimpleTransactionManager.suspend(),8,12
org.apache.openjpa.jta.SimpleTransactionManager.assertActiveTransaction(),8,16
org.apache.openjpa.meta.Extensions.isEmpty(),5,9
org.apache.openjpa.meta.Extensions.getExtensionVendors(),16,32
org.apache.openjpa.meta.Extensions.getExtensionKeys(),4,8
org.apache.openjpa.meta.Extensions.getExtensionKeys(String),17,41
org.apache.openjpa.meta.Extensions.hasExtension(String),5,9
"org.apache.openjpa.meta.Extensions.hasExtension(String,String)",8,16
"org.apache.openjpa.meta.Extensions.addExtension(String,Object)",9,15
"org.apache.openjpa.meta.Extensions.addExtension(String,String,Object)",11,22
org.apache.openjpa.meta.Extensions.removeExtension(String),6,11
"org.apache.openjpa.meta.Extensions.removeExtension(String,String)",9,20
org.apache.openjpa.meta.Extensions.getObjectExtension(String),6,11
"org.apache.openjpa.meta.Extensions.getObjectExtension(String,String)",8,15
org.apache.openjpa.meta.Extensions.getStringExtension(String),5,11
"org.apache.openjpa.meta.Extensions.getStringExtension(String,String)",7,18
org.apache.openjpa.meta.Extensions.getIntExtension(String),5,7
"org.apache.openjpa.meta.Extensions.getIntExtension(String,String)",8,16
org.apache.openjpa.meta.Extensions.getDoubleExtension(String),5,7
"org.apache.openjpa.meta.Extensions.getDoubleExtension(String,String)",7,15
org.apache.openjpa.meta.Extensions.getBooleanExtension(String),5,7
"org.apache.openjpa.meta.Extensions.getBooleanExtension(String,String)",6,16
"org.apache.openjpa.meta.Extensions.getEmbeddedExtensions(String,boolean)",6,14
"org.apache.openjpa.meta.Extensions.getEmbeddedExtensions(String,String,boolean)",15,48
org.apache.openjpa.meta.Extensions.removeEmbeddedExtensions(String),6,10
"org.apache.openjpa.meta.Extensions.removeEmbeddedExtensions(String,String)",8,14
org.apache.openjpa.meta.Extensions.copy(Extensions),16,87
org.apache.openjpa.meta.Extensions.validateExtensionKeys(),62,147
org.apache.openjpa.meta.Extensions.addExtensionKeys(Collection),14,22
org.apache.openjpa.meta.Extensions.validateDataStoreExtensionPrefix(String),12,14
org.apache.openjpa.meta.Extensions.getRepository(),4,6
"org.apache.openjpa.meta.Extensions.getHashKey(String,String)",9,21
org.apache.openjpa.meta.Extensions.getVendor(Object),7,18
org.apache.openjpa.meta.Extensions.getKey(Object),5,20
"org.apache.openjpa.meta.Extensions.HashKey.HashKey(String,String)",4,10
org.apache.openjpa.meta.Extensions.HashKey.hashCode(),4,10
org.apache.openjpa.meta.Extensions.HashKey.equals(Object),7,16
org.apache.openjpa.meta.Extensions.EmbeddedExtensions.EmbeddedExtensions(Extensions),3,6
org.apache.openjpa.meta.Extensions.EmbeddedExtensions.getRepository(),4,6
org.apache.openjpa.persistence.jdbc.common.apps.StateImagePC.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.StateImagePC.setIntField(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.StateImagePC.getStateImage(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.StateImagePC.setStateImage(StateImagePC),2,6
"org.apache.openjpa.jdbc.kernel.exps.Lit.Lit(Object,int)",13,25
org.apache.openjpa.jdbc.kernel.exps.Lit.getType(),4,8
org.apache.openjpa.jdbc.kernel.exps.Lit.setImplicitType(Class),6,9
org.apache.openjpa.jdbc.kernel.exps.Lit.getParseType(),3,3
org.apache.openjpa.jdbc.kernel.exps.Lit.getValue(),3,3
org.apache.openjpa.jdbc.kernel.exps.Lit.setValue(Object),4,6
org.apache.openjpa.jdbc.kernel.exps.Lit.getValue(Object[]),3,5
org.apache.openjpa.jdbc.kernel.exps.Lit.isRaw(),1,2
org.apache.openjpa.jdbc.kernel.exps.Lit.setRaw(boolean),2,5
org.apache.openjpa.jdbc.kernel.exps.Lit.getRawValue(),4,5
"org.apache.openjpa.jdbc.kernel.exps.Lit.initialize(Select,ExpContext,int)",8,10
"org.apache.openjpa.jdbc.kernel.exps.Lit.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",14,37
"org.apache.openjpa.jdbc.kernel.exps.Lit.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",33,137
org.apache.openjpa.persistence.criteria.Exempt.setHireDate(Date),3,10
org.apache.openjpa.persistence.criteria.Exempt.getHireDate(),2,5
"org.apache.openjpa.jdbc.kernel.exps.WhenScalar.WhenScalar(Val,Val)",3,10
org.apache.openjpa.jdbc.kernel.exps.WhenScalar.getVal1(),1,3
org.apache.openjpa.jdbc.kernel.exps.WhenScalar.getVal2(),1,3
org.apache.openjpa.jdbc.kernel.exps.WhenScalar.getType(),2,3
"org.apache.openjpa.jdbc.kernel.exps.WhenScalar.initialize(Select,ExpContext,Map)",11,24
"org.apache.openjpa.jdbc.kernel.exps.WhenScalar.appendTo(Select,ExpContext,ExpState,SQLBuffer)",12,29
"org.apache.openjpa.jdbc.kernel.exps.WhenScalar.selectColumns(Select,ExpContext,ExpState,boolean)",10,28
org.apache.openjpa.jdbc.kernel.exps.WhenScalar.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.jdbc.kernel.exps.WhenScalar.getId(),2,3
org.apache.openjpa.persistence.criteria.Phone.getId(),0,0
org.apache.openjpa.persistence.criteria.Phone.getEmployees(),3,4
org.apache.openjpa.persistence.criteria.Phone.addEmployees(Employee),3,7
org.apache.openjpa.persistence.criteria.Phone.getVendor(),2,3
org.apache.openjpa.persistence.criteria.Phone.setVendor(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.PhoneNumber.getNumber(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.PhoneNumber.setNumber(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.PhoneNumber.getEmployees(),5,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.PhoneNumber.addEmployees(FullName,Employee)",5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.PhoneNumber.removeEmployee(FullName),4,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.PhoneNumber.equals(Object),16,45
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.setUp(),10,17
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.setCandidate(Query,Class<>)",14,43
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.queryQualifiedId(boolean),32,151
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.testQueryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.createObj(EntityManagerFactory),17,46
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.createItem1(EntityManager,int)",11,19
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.createItem2(EntityManager,int)",11,19
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.createCompany1(EntityManager,int)",15,23
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.createCompany2(EntityManager,int)",15,23
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.createDivision(EntityManager,int)",6,10
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.createVicePresident(EntityManager,int)",7,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.findObj(EntityManagerFactory),13,37
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.assertItem1(Item1),7,16
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.assertItem2(Item2),7,16
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.assertCompany1(Compny1),9,11
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.assertCompany2(Compny2),9,11
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.assertDivision(Division),3,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.assertVicePresident(VicePresident),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.queryObj(EntityManagerFactory),11,19
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.queryItem(EntityManagerFactory),15,47
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.queryCompany(EntityManagerFactory),16,43
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.queryDivision(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.TestSpec10_1_27.queryVicePresident(EntityManagerFactory),17,39
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.getPersistenceResourceName(),9,11
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.getPersistenceUnitName(),4,5
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.testJPA1CompatibilityOptions(),47,89
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.testJPA2CompatibilityOptions(),37,64
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.testMappedSuperClass(),37,79
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.testOneToManyRelation(),74,213
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.crudUni1MFK(EntityManager),23,96
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.crudUni1MJT(EntityManager),22,62
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.crudBi1MFK(EntityManager),21,64
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.crudBi1MJT(EntityManager),22,79
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.testOneToManyMapRelation(),36,130
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.crudUni1MMapFK(EntityManager),24,118
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.crudBi1MMapJT(EntityManager),24,87
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.crudUni1MMapRelKeyFK(EntityManager),25,189
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.crudBi1MMapRelKeyJT(EntityManager),23,140
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.testUniManyToOneUsingJoinTable(),33,58
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.crudUniM1JT(EntityManager),21,76
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.testOneToOneUsingJoinTable(),33,68
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.crudUni11JT(EntityManager),20,70
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.crudBi11JT(EntityManager),20,68
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.createEMF2_0(List<Class<>>),33,59
"org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.assertSQLFragnments(List<String>,String)",13,26
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.toString(List<String>),5,17
org.apache.openjpa.persistence.compat.TestContainerSpecCompatibilityOptions.Listener.beforeExecuteStatement(JDBCEvent),7,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.setUp(),9,12
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.testQueryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.setCandidate(Query,Class)",14,37
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.queryQualifiedId(boolean),24,87
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.createObj(EntityManagerFactory),15,27
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.createCompany(EntityManager,int)",14,23
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.createDivision(EntityManager,int)",6,10
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.createVicePresident(EntityManager,int,Division)",9,19
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.findObj(EntityManagerFactory),13,35
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.updateObj(EntityManager,Company)",28,74
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.deleteObj(EntityManager,Company)",10,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.assertCompany(Company),5,8
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.assertDivision(Division),3,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.assertVicePresident(VicePresident),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.queryObj(EntityManagerFactory),10,16
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.queryCompany(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.queryDivision(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.TestSpec10_1_27_Ex6.queryVicePresident(EntityManagerFactory),17,39
"org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.NullIfExpression(Val,Val)",3,10
org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.getVal1(),1,3
org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.getVal2(),1,3
org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.getType(),7,14
"org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.initialize(Select,ExpContext,int)",10,23
"org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",16,38
"org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.selectColumns(Select,ExpContext,ExpState,boolean)",10,26
org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.getId(),2,3
"org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",10,31
"org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.newSQLBuffer(Select,ExpContext,ExpState)",13,27
"org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.load(ExpContext,ExpState,Result)",15,19
"org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.select(Select,ExpContext,ExpState,boolean)",8,14
org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.setImplicitType(Class),4,6
org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.setOtherPath(Value),3,3
org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.getOtherPath(),2,2
org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.setOtherState(ExpState),2,2
org.apache.openjpa.jdbc.kernel.exps.NullIfExpression.getOtherState(),1,1
org.apache.openjpa.persistence.datacache.common.apps.M2MEntityE.M2MEntityE(),7,8
org.apache.openjpa.persistence.datacache.common.apps.M2MEntityE.getEntityF(),4,5
org.apache.openjpa.persistence.datacache.common.apps.M2MEntityE.getId(),0,0
org.apache.openjpa.persistence.datacache.common.apps.M2MEntityE.setId(int),1,1
org.apache.openjpa.persistence.datacache.common.apps.M2MEntityE.toString(),2,3
org.apache.openjpa.persistence.datacache.common.apps.M2MEntityE.print(),6,6
org.apache.openjpa.persistence.datacache.common.apps.M2MEntityE.getName(),2,3
org.apache.openjpa.persistence.datacache.common.apps.M2MEntityE.setName(String),3,6
org.apache.openjpa.lib.log.Log.isTraceEnabled(),6,8
org.apache.openjpa.lib.log.Log.isInfoEnabled(),6,8
org.apache.openjpa.lib.log.Log.isWarnEnabled(),6,8
org.apache.openjpa.lib.log.Log.isErrorEnabled(),6,8
org.apache.openjpa.lib.log.Log.isFatalEnabled(),6,8
org.apache.openjpa.lib.log.Log.trace(Object),10,13
"org.apache.openjpa.lib.log.Log.trace(Object,Throwable)",12,18
org.apache.openjpa.lib.log.Log.info(Object),11,17
"org.apache.openjpa.lib.log.Log.info(Object,Throwable)",12,18
org.apache.openjpa.lib.log.Log.warn(Object),11,17
"org.apache.openjpa.lib.log.Log.warn(Object,Throwable)",12,18
org.apache.openjpa.lib.log.Log.error(Object),11,17
"org.apache.openjpa.lib.log.Log.error(Object,Throwable)",12,18
org.apache.openjpa.lib.log.Log.fatal(Object),11,17
"org.apache.openjpa.lib.log.Log.fatal(Object,Throwable)",12,18
org.apache.openjpa.persistence.cache.jpa.model.XmlUncacheableEntity.getName(),2,3
org.apache.openjpa.persistence.cache.jpa.model.XmlUncacheableEntity.setName(String),3,6
org.apache.openjpa.persistence.cache.jpa.model.XmlUncacheableEntity.getId(),0,0
org.apache.openjpa.persistence.cache.jpa.model.XmlUncacheableEntity.setId(int),1,1
org.apache.openjpa.persistence.cache.jpa.model.XmlUncacheableEntity.getVersion(),1,2
org.apache.openjpa.persistence.cache.jpa.model.XmlUncacheableEntity.setVersion(int),2,5
org.apache.openjpa.jdbc.kernel.exps.Sqrt.Sqrt(Val),6,8
org.apache.openjpa.jdbc.kernel.exps.Sqrt.getType(Class),1,1
org.apache.openjpa.jdbc.kernel.exps.Sqrt.getOperator(),3,3
org.apache.openjpa.jdbc.kernel.exps.Sqrt.getId(),2,3
org.apache.openjpa.enhance.TestDataCachingAndUnenhancedPropertyAccess.setUp(),16,20
org.apache.openjpa.enhance.TestDataCachingAndUnenhancedPropertyAccess.testSimpleDataCacheOperation(),30,36
org.apache.openjpa.enhance.TestDataCachingAndUnenhancedPropertyAccess.testAccessIdBeforeCommit(),28,40
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI4.EntityI4(),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI4.EntityI4(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI4.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI4.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI4.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI4.setName(String),4,10
org.apache.openjpa.lib.graph.GraphVisitor.nodeSeen(Object),12,13
org.apache.openjpa.lib.graph.GraphVisitor.nodeVisited(Object),4,6
org.apache.openjpa.lib.graph.GraphVisitor.edgeVisited(Edge),5,7
"org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.SubqueryImpl(Class<T>,AbstractQuery<>)",14,47
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getParent(),3,8
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getDelegate(),7,9
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getMetamodel(),3,4
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getContexts(),5,6
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getInnermostParent(),7,21
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.select(Expression<T>),4,7
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getSelection(),3,5
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.from(EntityType<X>),4,6
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.from(Class<X>),3,4
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getRoots(),4,5
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getRoot(),2,4
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.where(Expression<Boolean>),4,5
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.where(Predicate),4,5
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.groupBy(Expression<>),3,3
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.groupBy(List<Expression<>>),4,4
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.having(Expression<Boolean>),4,5
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.having(Predicate),4,5
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.distinct(boolean),3,6
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getGroupList(),3,5
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getRestriction(),3,4
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getGroupRestriction(),3,4
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.isDistinct(),2,3
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.subquery(Class<U>),3,6
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.correlate(Root<Y>),13,36
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getCorrelatedJoins(),10,15
"org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.correlate(Join<X,Y>)",14,41
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.isCorrelated(),5,6
"org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.correlate(CollectionJoin<X,Y>)",14,43
"org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.correlate(SetJoin<X,Y>)",13,43
"org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.correlate(ListJoin<X,Y>)",13,43
"org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.correlate(MapJoin<X,K,V>)",14,43
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getSubQ(),8,8
"org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",31,79
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getCandidate(),22,62
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getInnermostCandidate(FromImpl<>),8,13
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getCandidate(FromImpl<>),7,7
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getFieldType(FieldMetaData),15,64
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.getResultType(),3,4
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.asValue(AliasContext),11,18
org.apache.openjpa.persistence.criteria.SubqueryImpl<T>.asVariable(AliasContext),6,6
"org.apache.openjpa.lib.meta.ZipStreamMetaDataIterator.ZipStreamMetaDataIterator(ZipInputStream,MetaDataFilter)",11,24
org.apache.openjpa.lib.meta.ZipStreamMetaDataIterator.hasNext(),11,29
org.apache.openjpa.lib.meta.ZipStreamMetaDataIterator.next(),6,11
org.apache.openjpa.lib.meta.ZipStreamMetaDataIterator.getInputStream(),7,14
org.apache.openjpa.lib.meta.ZipStreamMetaDataIterator.getFile(),1,2
org.apache.openjpa.lib.meta.ZipStreamMetaDataIterator.close(),4,5
org.apache.openjpa.lib.meta.ZipStreamMetaDataIterator.getName(),3,4
org.apache.openjpa.lib.meta.ZipStreamMetaDataIterator.getContent(),16,31
org.apache.openjpa.lib.meta.ZipStreamMetaDataIterator.NoCloseInputStream.available(),3,4
org.apache.openjpa.lib.meta.ZipStreamMetaDataIterator.NoCloseInputStream.read(),3,4
"org.apache.openjpa.lib.meta.ZipStreamMetaDataIterator.NoCloseInputStream.read(byte[],int,int)",4,6
org.apache.openjpa.lib.meta.ZipStreamMetaDataIterator.NoCloseInputStream.close(),1,1
org.apache.openjpa.persistence.query.BinaryConditionalOperator.BinaryConditionalOperator(String),5,7
org.apache.openjpa.persistence.query.BinaryConditionalOperator.toString(),2,3
"org.apache.openjpa.lib.xml.DocTypeReader.DocTypeReader(Reader,Reader)",30,62
org.apache.openjpa.lib.xml.DocTypeReader.read(),6,9
org.apache.openjpa.lib.xml.DocTypeReader.read(char[]),4,7
"org.apache.openjpa.lib.xml.DocTypeReader.read(char[],int,int)",8,35
org.apache.openjpa.lib.xml.DocTypeReader.skip(long),4,6
org.apache.openjpa.lib.xml.DocTypeReader.ready(),3,4
org.apache.openjpa.lib.xml.DocTypeReader.markSupported(),3,5
org.apache.openjpa.lib.xml.DocTypeReader.mark(int),6,10
org.apache.openjpa.lib.xml.DocTypeReader.reset(),3,4
org.apache.openjpa.lib.xml.DocTypeReader.close(),5,9
org.apache.openjpa.lib.xml.DocTypeReader.bufferHeader(Reader),34,143
org.apache.openjpa.lib.xml.DocTypeReader.headerOnly(String),12,18
org.apache.openjpa.lib.xml.DocTypeReader.readHeader(),8,14
"org.apache.openjpa.lib.xml.DocTypeReader.readHeader(char[],int,int)",10,24
org.apache.openjpa.lib.xml.DocTypeReader.readDocType(),8,17
"org.apache.openjpa.lib.xml.DocTypeReader.readDocType(char[],int,int)",10,29
org.apache.openjpa.persistence.access.xml.XMLPropertySub2.getCreateDate(),3,5
org.apache.openjpa.persistence.access.xml.XMLPropertySub2.setCreateDate(Date),4,8
org.apache.openjpa.persistence.access.xml.XMLPropertySub2.equals(Object),10,32
org.apache.openjpa.lib.util.Localizer.forPackage(Class<>),9,12
"org.apache.openjpa.lib.util.Localizer.forPackage(Class<>,Locale)",38,92
org.apache.openjpa.lib.util.Localizer.addProvider(ResourceBundleProvider),6,12
org.apache.openjpa.lib.util.Localizer.removeProvider(ResourceBundleProvider),5,12
"org.apache.openjpa.lib.util.Localizer.Localizer(String,String,Locale,ClassLoader)",6,15
org.apache.openjpa.lib.util.Localizer.getBundle(),13,26
org.apache.openjpa.lib.util.Localizer.get(String),5,8
org.apache.openjpa.lib.util.Localizer.getFatal(String),6,10
"org.apache.openjpa.lib.util.Localizer.get(String,Object)",16,27
"org.apache.openjpa.lib.util.Localizer.getFatal(String,Object)",17,30
"org.apache.openjpa.lib.util.Localizer.get(String,Object,Object)",6,16
"org.apache.openjpa.lib.util.Localizer.getFatal(String,Object,Object)",7,19
"org.apache.openjpa.lib.util.Localizer.get(String,Object,Object,Object)",6,19
"org.apache.openjpa.lib.util.Localizer.get(String,Object[])",17,27
"org.apache.openjpa.lib.util.Localizer.getFatal(String,Object[])",18,29
"org.apache.openjpa.lib.util.Localizer.Message.Message(String,ResourceBundle,String,Object[],boolean)",15,55
org.apache.openjpa.lib.util.Localizer.Message.getMessage(),11,31
org.apache.openjpa.lib.util.Localizer.Message.getKey(),5,7
org.apache.openjpa.lib.util.Localizer.Message.getSubstitutions(),5,6
org.apache.openjpa.lib.util.Localizer.Message.getPackageName(),3,3
org.apache.openjpa.lib.util.Localizer.Message.toString(),2,3
org.apache.openjpa.abstractstore.AbstractStoreManager.setContext(StoreContext),4,7
org.apache.openjpa.abstractstore.AbstractStoreManager.getContext(),7,11
org.apache.openjpa.abstractstore.AbstractStoreManager.open(),6,6
org.apache.openjpa.abstractstore.AbstractStoreManager.beginOptimistic(),13,15
org.apache.openjpa.abstractstore.AbstractStoreManager.rollbackOptimistic(),15,18
org.apache.openjpa.abstractstore.AbstractStoreManager.begin(),18,21
org.apache.openjpa.abstractstore.AbstractStoreManager.commit(),13,17
org.apache.openjpa.abstractstore.AbstractStoreManager.rollback(),13,17
"org.apache.openjpa.abstractstore.AbstractStoreManager.syncVersion(OpenJPAStateManager,Object)",14,16
"org.apache.openjpa.abstractstore.AbstractStoreManager.initialize(OpenJPAStateManager,PCState,FetchConfiguration,Object)",34,90
"org.apache.openjpa.abstractstore.AbstractStoreManager.load(OpenJPAStateManager,BitSet,FetchConfiguration,int,Object)",27,45
"org.apache.openjpa.abstractstore.AbstractStoreManager.loadAll(Collection<OpenJPAStateManager>,PCState,int,FetchConfiguration,Object)",28,44
org.apache.openjpa.abstractstore.AbstractStoreManager.flush(Collection<OpenJPAStateManager>),32,109
"org.apache.openjpa.abstractstore.AbstractStoreManager.beforeStateChange(OpenJPAStateManager,PCState,PCState)",3,3
"org.apache.openjpa.abstractstore.AbstractStoreManager.assignObjectId(OpenJPAStateManager,boolean)",22,39
"org.apache.openjpa.abstractstore.AbstractStoreManager.assignDataStoreId(OpenJPAStateManager,Object)",17,37
"org.apache.openjpa.abstractstore.AbstractStoreManager.assignField(OpenJPAStateManager,int,boolean)",17,28
org.apache.openjpa.abstractstore.AbstractStoreManager.getManagedType(Object),4,7
org.apache.openjpa.abstractstore.AbstractStoreManager.getDataStoreIdType(ClassMetaData),4,6
"org.apache.openjpa.abstractstore.AbstractStoreManager.copyDataStoreId(Object,ClassMetaData)",9,14
"org.apache.openjpa.abstractstore.AbstractStoreManager.newDataStoreId(Object,ClassMetaData)",12,23
org.apache.openjpa.abstractstore.AbstractStoreManager.retainConnection(),4,6
org.apache.openjpa.abstractstore.AbstractStoreManager.releaseConnection(),5,7
org.apache.openjpa.abstractstore.AbstractStoreManager.getClientConnection(),9,12
"org.apache.openjpa.abstractstore.AbstractStoreManager.executeExtent(ClassMetaData,boolean,FetchConfiguration)",56,104
org.apache.openjpa.abstractstore.AbstractStoreManager.newQuery(String),4,5
org.apache.openjpa.abstractstore.AbstractStoreManager.newFetchConfiguration(),3,7
"org.apache.openjpa.abstractstore.AbstractStoreManager.compareVersion(OpenJPAStateManager,Object,Object)",13,52
org.apache.openjpa.abstractstore.AbstractStoreManager.getDataStoreIdSequence(ClassMetaData),23,36
org.apache.openjpa.abstractstore.AbstractStoreManager.getValueSequence(FieldMetaData),7,8
org.apache.openjpa.abstractstore.AbstractStoreManager.cancelAll(),12,17
org.apache.openjpa.abstractstore.AbstractStoreManager.close(),1,1
"org.apache.openjpa.abstractstore.AbstractStoreManager.flush(Collection<OpenJPAStateManager>,Collection<OpenJPAStateManager>,Collection<OpenJPAStateManager>,Collection<OpenJPAStateManager>,Collection<OpenJPAStateManager>)",64,143
org.apache.openjpa.abstractstore.AbstractStoreManager.newConfiguration(),17,23
org.apache.openjpa.abstractstore.AbstractStoreManager.getUnsupportedOptions(),25,86
org.apache.openjpa.abstractstore.AbstractStoreManager.getPlatform(),7,14
org.apache.openjpa.conf.OpenJPAVersion.main(String[]),12,16
org.apache.openjpa.conf.OpenJPAVersion.toString(),27,79
org.apache.openjpa.conf.OpenJPAVersion.appendOpenJPABanner(StringBuilder),12,35
"org.apache.openjpa.conf.OpenJPAVersion.appendProperty(String,StringBuilder)",12,22
org.apache.openjpa.persistence.datacache.TestDataCacheOptimisticLockRecovery.setUp(),25,46
org.apache.openjpa.persistence.datacache.TestDataCacheOptimisticLockRecovery.setUp().$1.afterCommit(RemoteCommitEvent),14,24
org.apache.openjpa.persistence.datacache.TestDataCacheOptimisticLockRecovery.setUp().$1.close(),1,1
org.apache.openjpa.persistence.datacache.TestDataCacheOptimisticLockRecovery.testOptimisticLockRecovery(),77,220
org.apache.openjpa.persistence.datacache.TestDataCacheOptimisticLockRecovery.testExpectedOptimisticLockException(),28,65
org.apache.openjpa.lib.util.ParameterTemplate.append(String),8,12
org.apache.openjpa.lib.util.ParameterTemplate.append(boolean),7,11
org.apache.openjpa.lib.util.ParameterTemplate.append(char),7,11
org.apache.openjpa.lib.util.ParameterTemplate.append(double),7,11
org.apache.openjpa.lib.util.ParameterTemplate.append(float),7,11
org.apache.openjpa.lib.util.ParameterTemplate.append(int),7,11
org.apache.openjpa.lib.util.ParameterTemplate.append(long),7,11
org.apache.openjpa.lib.util.ParameterTemplate.append(short),7,11
org.apache.openjpa.lib.util.ParameterTemplate.append(Object),8,12
org.apache.openjpa.lib.util.ParameterTemplate.append(InputStream),10,14
org.apache.openjpa.lib.util.ParameterTemplate.append(Reader),14,27
org.apache.openjpa.lib.util.ParameterTemplate.append(File),11,22
org.apache.openjpa.lib.util.ParameterTemplate.hasParameter(String),7,9
org.apache.openjpa.lib.util.ParameterTemplate.getParameter(String),7,9
"org.apache.openjpa.lib.util.ParameterTemplate.setParameter(String,Object)",8,13
org.apache.openjpa.lib.util.ParameterTemplate.setParameters(Map),5,10
org.apache.openjpa.lib.util.ParameterTemplate.clearParameters(),5,5
org.apache.openjpa.lib.util.ParameterTemplate.toString(),26,64
org.apache.openjpa.lib.util.ParameterTemplate.write(OutputStream),12,16
org.apache.openjpa.lib.util.ParameterTemplate.write(Writer),12,17
org.apache.openjpa.lib.util.ParameterTemplate.write(File),13,24
org.apache.openjpa.persistence.derivedid.TestDerivedIdentity.setUp(),8,14
org.apache.openjpa.persistence.derivedid.TestDerivedIdentity.populate(),24,72
org.apache.openjpa.persistence.derivedid.TestDerivedIdentity.testDerivedIdentity(),30,102
org.apache.openjpa.jdbc.sql.InformixDictionary.InformixDictionary(),114,229
org.apache.openjpa.jdbc.sql.InformixDictionary.connectedConfiguration(Connection),40,99
org.apache.openjpa.jdbc.sql.InformixDictionary.setIdentifierCase(DatabaseMetaData),26,41
"org.apache.openjpa.jdbc.sql.InformixDictionary.getColumns(DatabaseMetaData,String,String,String,String,Connection)",15,39
"org.apache.openjpa.jdbc.sql.InformixDictionary.getColumns(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",23,49
org.apache.openjpa.jdbc.sql.InformixDictionary.newColumn(ResultSet),16,30
org.apache.openjpa.jdbc.sql.InformixDictionary.newPrimaryKey(ResultSet),16,28
org.apache.openjpa.jdbc.sql.InformixDictionary.newIndex(ResultSet),16,30
"org.apache.openjpa.jdbc.sql.InformixDictionary.setBoolean(PreparedStatement,int,boolean,Column)",17,22
org.apache.openjpa.jdbc.sql.InformixDictionary.getCreateTableSQL(Table),7,18
org.apache.openjpa.jdbc.sql.InformixDictionary.getAddPrimaryKeySQL(PrimaryKey),10,23
org.apache.openjpa.jdbc.sql.InformixDictionary.getAddForeignKeySQL(ForeignKey),10,23
"org.apache.openjpa.jdbc.sql.InformixDictionary.supportsRandomAccessResultSet(Select,boolean)",9,18
org.apache.openjpa.jdbc.sql.InformixDictionary.decorate(Connection),42,95
"org.apache.openjpa.jdbc.sql.InformixDictionary.execute(String,Connection,boolean)",18,35
"org.apache.openjpa.jdbc.sql.InformixDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",14,18
"org.apache.openjpa.jdbc.sql.InformixDictionary.needsToCreateIndex(Index,Table)",12,25
org.apache.openjpa.jdbc.sql.InformixDictionary.useJCC(),1,2
org.apache.openjpa.jdbc.sql.InformixDictionary.getSchemaCase(),2,3
"org.apache.openjpa.jdbc.sql.InformixDictionary.isFatalException(int,SQLException)",17,32
"org.apache.openjpa.jdbc.sql.InformixDictionary.matchErrorState(Map<Set<Integer,String>>,SQLException)",79,140
"org.apache.openjpa.jdbc.sql.InformixDictionary.checkNestedErrorCodes(SQLException,String,int)",20,45
org.apache.openjpa.persistence.annotations.PColl_EntityA.getId(),0,0
org.apache.openjpa.persistence.annotations.PColl_EntityA.setId(int),1,1
org.apache.openjpa.persistence.annotations.PColl_EntityA.getEmbedCollection(),4,7
org.apache.openjpa.persistence.annotations.PColl_EntityA.setEmbedCollection(Set<PColl_EmbedB>),4,12
org.apache.openjpa.persistence.annotations.PColl_EntityA.addEmbedElement(PColl_EmbedB),5,10
org.apache.openjpa.persistence.annotations.PColl_EntityA.toString(),8,11
org.apache.openjpa.persistence.annotations.TestMappedSuperClass.TestMappedSuperClass(String),7,9
org.apache.openjpa.persistence.annotations.TestMappedSuperClass.setUp(),4,9
org.apache.openjpa.persistence.annotations.TestMappedSuperClass.testMappedSuperClassSameKeys(),6,7
org.apache.openjpa.persistence.annotations.TestMappedSuperClass.testMappedSuperClassIdClass(),5,6
org.apache.openjpa.persistence.annotations.TestMappedSuperClass.createSite(),20,45
org.apache.openjpa.persistence.annotations.TestMappedSuperClass.createStore(),23,78
org.apache.openjpa.persistence.annotations.TestMappedSuperClass.createSite1(),21,48
org.apache.openjpa.persistence.annotations.TestMappedSuperClass.createStore1(),25,77
org.apache.openjpa.persistence.access.MappedSuperProperty.setId(int),1,1
org.apache.openjpa.persistence.access.MappedSuperProperty.getId(),0,0
org.apache.openjpa.persistence.access.MappedSuperProperty.setName(String),3,6
org.apache.openjpa.persistence.access.MappedSuperProperty.getName(),2,3
org.apache.openjpa.persistence.access.MappedSuperProperty.equals(Object),6,14
"org.apache.openjpa.kernel.jpql.JPQLParser.parse(String,ExpressionStoreQuery)",20,32
"org.apache.openjpa.kernel.jpql.JPQLParser.populate(Object,ExpressionStoreQuery)",11,26
"org.apache.openjpa.kernel.jpql.JPQLParser.eval(Object,ExpressionStoreQuery,ExpressionFactory,ClassMetaData)",18,32
"org.apache.openjpa.kernel.jpql.JPQLParser.eval(String[],ExpressionStoreQuery,ExpressionFactory,ClassMetaData)",11,14
org.apache.openjpa.kernel.jpql.JPQLParser.getLanguage(),5,6
org.apache.openjpa.util.ArrayStateImage.newImage(int),7,17
org.apache.openjpa.util.ArrayStateImage.isImage(Object),10,21
org.apache.openjpa.util.ArrayStateImage.getLoaded(Object[]),7,10
"org.apache.openjpa.util.ArrayStateImage.setLoaded(Object[],BitSet)",7,12
org.apache.openjpa.util.ArrayStateImage.clone(Object[]),10,25
"org.apache.openjpa.util.ArrayStateImage.sameVersion(Object[],Object[])",20,38
org.apache.openjpa.lib.util.UUIDGenerator.initializeForType1(),36,54
org.apache.openjpa.lib.util.UUIDGenerator.next(int),5,10
org.apache.openjpa.lib.util.UUIDGenerator.createType1(),35,113
org.apache.openjpa.lib.util.UUIDGenerator.createType4(),8,22
"org.apache.openjpa.lib.util.UUIDGenerator.longToBytes(long,byte[],int)",10,14
org.apache.openjpa.lib.util.UUIDGenerator.nextString(int),9,16
org.apache.openjpa.lib.util.UUIDGenerator.nextHex(int),10,13
org.apache.openjpa.lib.util.UUIDGenerator.getTime(),10,19
org.apache.openjpa.lib.util.UUIDGenerator.getUUIDTime(),38,73
org.apache.openjpa.lib.util.UUIDGenerator.incrementSequence(),14,20
org.apache.openjpa.persistence.criteria.Request.getId(),0,0
org.apache.openjpa.persistence.criteria.Request.setId(int),1,1
org.apache.openjpa.persistence.criteria.Request.getStatus(),1,2
org.apache.openjpa.persistence.criteria.Request.setStatus(short),2,5
org.apache.openjpa.persistence.criteria.Request.getAccount(),1,3
org.apache.openjpa.persistence.criteria.Request.setAccount(Account),2,6
org.apache.openjpa.persistence.criteria.Request.getRequestTime(),3,5
org.apache.openjpa.persistence.criteria.Request.setRequestTime(Date),4,10
org.apache.openjpa.persistence.detach.TestDetachNoCascade.setUp(),16,31
org.apache.openjpa.persistence.detach.TestDetachNoCascade.create(int),5,15
org.apache.openjpa.persistence.detach.TestDetachNoCascade.testDefaults(),8,12
org.apache.openjpa.persistence.detach.TestDetachNoCascade.testCascadeValues(),25,64
org.apache.openjpa.persistence.detach.TestDetachNoCascade.testClearAll(),12,21
org.apache.openjpa.persistence.detach.TestDetachNoCascade.testClearOne(),19,48
org.apache.openjpa.persistence.detach.TestDetachNoCascade.testClearNew(),14,18
org.apache.openjpa.persistence.detach.TestDetachNoCascade.testClearDirty(),21,63
org.apache.openjpa.persistence.detach.TestDetachNoCascade.testClearRemove(),17,51
org.apache.openjpa.persistence.detach.TestDetachNoCascade.testClearOnClearedEntity(),17,42
org.apache.openjpa.persistence.detach.TestDetachNoCascade.testNoCopy(),20,58
org.apache.openjpa.persistence.detach.TestDetachNoCascade.testCopy(),17,23
org.apache.openjpa.persistence.detach.TestDetachNoCascade.testFlush(),17,41
org.apache.openjpa.persistence.detach.TestDetachNoCascade.testClearRecreate(),11,20
org.apache.openjpa.persistence.access.xml.XMLMappedSuperProperty.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLMappedSuperProperty.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLMappedSuperProperty.setName(String),3,6
org.apache.openjpa.persistence.access.xml.XMLMappedSuperProperty.getName(),2,3
org.apache.openjpa.persistence.access.xml.XMLMappedSuperProperty.equals(Object),7,17
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LongNameValidator.validateName(NamedEntity),19,28
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LongNameValidator.testpost(NamedEntity),11,14
org.apache.openjpa.util.DelayedProxy.load(),4,5
org.apache.openjpa.util.DelayedProxy.isDirectAccess(),14,19
org.apache.openjpa.util.DelayedProxy.setDirectAccess(boolean),15,21
org.apache.openjpa.util.DelayedProxy.getBroker(),3,5
org.apache.openjpa.util.DelayedProxy.closeBroker(),4,6
org.apache.openjpa.util.DelayedProxy.getOwnerStateManager(),6,8
org.apache.openjpa.util.DelayedProxy.getDelayedOwner(),9,10
org.apache.openjpa.util.DelayedProxy.getDelayedField(),7,8
org.apache.openjpa.util.DelayedProxy.isDetached(),3,4
"org.apache.openjpa.kernel.FillStrategy<T>.fill(Object[],Class<>[],String[])",6,6
org.apache.openjpa.kernel.FillStrategy<T>.Array<T>.Array(Class<T>),11,23
"org.apache.openjpa.kernel.FillStrategy<T>.Array<T>.fill(Object[],Class<>[],String[])",15,23
org.apache.openjpa.kernel.FillStrategy<T>.Map<T>.Map(Method),12,13
"org.apache.openjpa.kernel.FillStrategy<T>.Map<T>.fill(Object[],Class<>[],String[])",19,45
org.apache.openjpa.kernel.FillStrategy<T>.NewInstance<T>.NewInstance(Constructor<>),3,5
org.apache.openjpa.kernel.FillStrategy<T>.NewInstance<T>.NewInstance(Class<T>),2,4
"org.apache.openjpa.kernel.FillStrategy<T>.NewInstance<T>.findConstructor(Class<X>,Class<>[])",22,54
"org.apache.openjpa.kernel.FillStrategy<T>.NewInstance<T>.fill(Object[],Class<>[],String[])",20,36
"org.apache.openjpa.kernel.FillStrategy<T>.Bean<X,T>.Bean(Class<T>)",2,4
"org.apache.openjpa.kernel.FillStrategy<T>.Bean<X,T>.fill(Object[],Class<>[],String[])",24,66
"org.apache.openjpa.kernel.FillStrategy<T>.Assign<T>.fill(Object[],Class<>[],String[])",13,21
"org.apache.openjpa.kernel.FillStrategy<T>.Factory<T>.Factory(ObjectFactory<T>,Method)",17,30
"org.apache.openjpa.kernel.FillStrategy<T>.Factory<T>.fill(Object[],Class<>[],String[])",23,55
org.apache.openjpa.jdbc.meta.ValueMapping.getValueInfo(),5,8
org.apache.openjpa.jdbc.meta.ValueMapping.getHandler(),3,6
org.apache.openjpa.jdbc.meta.ValueMapping.setHandler(ValueHandler),4,8
org.apache.openjpa.jdbc.meta.ValueMapping.getMappingRepository(),10,13
org.apache.openjpa.jdbc.meta.ValueMapping.getFieldMapping(),10,15
org.apache.openjpa.jdbc.meta.ValueMapping.getTypeMapping(),10,14
org.apache.openjpa.jdbc.meta.ValueMapping.getDeclaredTypeMapping(),11,16
org.apache.openjpa.jdbc.meta.ValueMapping.getEmbeddedMapping(),10,14
org.apache.openjpa.jdbc.meta.ValueMapping.getValueMappedByMapping(),11,17
org.apache.openjpa.jdbc.meta.ValueMapping.getColumns(),5,6
org.apache.openjpa.jdbc.meta.ValueMapping.setColumns(Column[]),7,8
org.apache.openjpa.jdbc.meta.ValueMapping.getColumnIO(),7,9
org.apache.openjpa.jdbc.meta.ValueMapping.setColumnIO(ColumnIO),8,10
org.apache.openjpa.jdbc.meta.ValueMapping.getForeignKey(),5,9
org.apache.openjpa.jdbc.meta.ValueMapping.getForeignKey(ClassMapping),11,17
org.apache.openjpa.jdbc.meta.ValueMapping.setForeignKey(ForeignKey),6,10
org.apache.openjpa.jdbc.meta.ValueMapping.getJoinDirection(),2,4
org.apache.openjpa.jdbc.meta.ValueMapping.setJoinDirection(int),3,6
"org.apache.openjpa.jdbc.meta.ValueMapping.setForeignKey(Row,OpenJPAStateManager)",13,17
"org.apache.openjpa.jdbc.meta.ValueMapping.setForeignKey(Row,OpenJPAStateManager,int)",16,25
"org.apache.openjpa.jdbc.meta.ValueMapping.whereForeignKey(Row,OpenJPAStateManager)",12,16
org.apache.openjpa.jdbc.meta.ValueMapping.getIndependentTypeMappings(),14,19
org.apache.openjpa.jdbc.meta.ValueMapping.getSelectSubclasses(),17,20
org.apache.openjpa.jdbc.meta.ValueMapping.getValueUnique(),6,8
org.apache.openjpa.jdbc.meta.ValueMapping.setValueUnique(Unique),8,10
org.apache.openjpa.jdbc.meta.ValueMapping.getValueIndex(),5,7
org.apache.openjpa.jdbc.meta.ValueMapping.setValueIndex(Index),7,9
org.apache.openjpa.jdbc.meta.ValueMapping.getUseClassCriteria(),4,5
org.apache.openjpa.jdbc.meta.ValueMapping.setUseClassCriteria(boolean),5,7
org.apache.openjpa.jdbc.meta.ValueMapping.getPolymorphic(),3,4
org.apache.openjpa.jdbc.meta.ValueMapping.setPolymorphic(int),4,6
org.apache.openjpa.jdbc.meta.ValueMapping.refSchemaComponents(),6,8
"org.apache.openjpa.jdbc.meta.ValueMapping.mapConstraints(String,boolean)",19,23
"org.apache.openjpa.jdbc.meta.ValueMapping.mapConstraints(DBIdentifier,boolean)",18,22
org.apache.openjpa.jdbc.meta.ValueMapping.clearMapping(),4,5
org.apache.openjpa.jdbc.meta.ValueMapping.syncMappingInfo(),7,10
org.apache.openjpa.jdbc.meta.ValueMapping.copyMappingInfo(ValueMapping),5,9
org.apache.openjpa.persistence.compat.Uni_1To1_JT.getId(),0,0
org.apache.openjpa.persistence.compat.Uni_1To1_JT.getName(),2,3
org.apache.openjpa.persistence.compat.Uni_1To1_JT.setName(String),3,6
org.apache.openjpa.persistence.compat.Uni_1To1_JT.getEntityC(),1,3
org.apache.openjpa.persistence.compat.Uni_1To1_JT.setEntityC(EntityC_U11JT),2,6
org.apache.openjpa.persistence.compat.Uni_1To1_JT.hashCode(),3,5
org.apache.openjpa.persistence.compat.Uni_1To1_JT.equals(Object),5,12
org.apache.openjpa.meta.ValueMetaDataImpl.ValueMetaDataImpl(FieldMetaData),6,10
org.apache.openjpa.meta.ValueMetaDataImpl.ValueMetaDataImpl(),6,6
org.apache.openjpa.meta.ValueMetaDataImpl.getFieldMetaData(),4,7
org.apache.openjpa.meta.ValueMetaDataImpl.getRepository(),4,6
org.apache.openjpa.meta.ValueMetaDataImpl.getType(),2,5
org.apache.openjpa.meta.ValueMetaDataImpl.setType(Class),6,16
org.apache.openjpa.meta.ValueMetaDataImpl.getTypeCode(),3,6
org.apache.openjpa.meta.ValueMetaDataImpl.setTypeCode(int),3,6
org.apache.openjpa.meta.ValueMetaDataImpl.isTypePC(),5,10
org.apache.openjpa.meta.ValueMetaDataImpl.getTypeMetaData(),12,34
org.apache.openjpa.meta.ValueMetaDataImpl.getDeclaredType(),3,4
org.apache.openjpa.meta.ValueMetaDataImpl.setDeclaredType(Class),10,25
org.apache.openjpa.meta.ValueMetaDataImpl.getDeclaredTypeCode(),4,5
org.apache.openjpa.meta.ValueMetaDataImpl.setDeclaredTypeCode(int),5,8
org.apache.openjpa.meta.ValueMetaDataImpl.isDeclaredTypePC(),7,11
org.apache.openjpa.meta.ValueMetaDataImpl.getDeclaredTypeMetaData(),14,42
org.apache.openjpa.meta.ValueMetaDataImpl.isEmbedded(),18,30
org.apache.openjpa.meta.ValueMetaDataImpl.setEmbedded(boolean),5,12
org.apache.openjpa.meta.ValueMetaDataImpl.isEmbeddedPC(),5,6
org.apache.openjpa.meta.ValueMetaDataImpl.getEmbeddedMetaData(),4,14
org.apache.openjpa.meta.ValueMetaDataImpl.addEmbeddedMetaData(int),15,39
org.apache.openjpa.meta.ValueMetaDataImpl.addEmbeddedMetaData(),7,13
org.apache.openjpa.meta.ValueMetaDataImpl.getCascadeDelete(),22,52
org.apache.openjpa.meta.ValueMetaDataImpl.setCascadeDelete(int),3,6
org.apache.openjpa.meta.ValueMetaDataImpl.getCascadePersist(),16,28
org.apache.openjpa.meta.ValueMetaDataImpl.setCascadePersist(int),3,6
org.apache.openjpa.meta.ValueMetaDataImpl.getCascadeAttach(),15,21
org.apache.openjpa.meta.ValueMetaDataImpl.setCascadeAttach(int),7,14
org.apache.openjpa.meta.ValueMetaDataImpl.getCascadeDetach(),15,21
org.apache.openjpa.meta.ValueMetaDataImpl.setCascadeDetach(int),3,6
org.apache.openjpa.meta.ValueMetaDataImpl.getCascadeRefresh(),13,18
org.apache.openjpa.meta.ValueMetaDataImpl.setCascadeRefresh(int),3,6
org.apache.openjpa.meta.ValueMetaDataImpl.isSerialized(),1,2
org.apache.openjpa.meta.ValueMetaDataImpl.setSerialized(boolean),2,5
org.apache.openjpa.meta.ValueMetaDataImpl.getValueMappedBy(),21,50
org.apache.openjpa.meta.ValueMetaDataImpl.setValueMappedBy(String),10,17
org.apache.openjpa.meta.ValueMetaDataImpl.getValueMappedByMetaData(),11,51
org.apache.openjpa.meta.ValueMetaDataImpl.getTypeOverride(),2,4
org.apache.openjpa.meta.ValueMetaDataImpl.setTypeOverride(Class),4,7
org.apache.openjpa.meta.ValueMetaDataImpl.toString(),13,31
org.apache.openjpa.meta.ValueMetaDataImpl.getResolve(),3,3
org.apache.openjpa.meta.ValueMetaDataImpl.setResolve(int),4,6
"org.apache.openjpa.meta.ValueMetaDataImpl.setResolve(int,boolean)",5,15
org.apache.openjpa.meta.ValueMetaDataImpl.resolve(int),56,197
org.apache.openjpa.meta.ValueMetaDataImpl.resolveDeclaredType(Class),16,37
org.apache.openjpa.meta.ValueMetaDataImpl.copy(ValueMetaData),28,81
org.apache.openjpa.persistence.detachment.TestAttachConstructedCopy.setUp(),2,3
org.apache.openjpa.persistence.detachment.TestAttachConstructedCopy.testAttachConstructedCopyWithGeneratedPKAndNoVersion(),21,62
org.apache.openjpa.persistence.detachment.TestAttachConstructedCopy.main(String[]),9,10
"org.apache.openjpa.jdbc.sql.PrimaryRow.PrimaryRow(Table,int,OpenJPAStateManager)",10,16
"org.apache.openjpa.jdbc.sql.PrimaryRow.PrimaryRow(Column[],int,OpenJPAStateManager)",8,11
org.apache.openjpa.jdbc.sql.PrimaryRow.isDependent(),4,7
org.apache.openjpa.jdbc.sql.PrimaryRow.setDependent(boolean),5,12
org.apache.openjpa.jdbc.sql.PrimaryRow.getIndex(),4,6
org.apache.openjpa.jdbc.sql.PrimaryRow.setIndex(int),5,9
org.apache.openjpa.jdbc.sql.PrimaryRow.getFailedObject(),2,4
org.apache.openjpa.jdbc.sql.PrimaryRow.setFailedObject(Object),3,7
org.apache.openjpa.jdbc.sql.PrimaryRow.getPrimaryKey(),4,4
org.apache.openjpa.jdbc.sql.PrimaryRow.setPrimaryKey(OpenJPAStateManager),7,10
"org.apache.openjpa.jdbc.sql.PrimaryRow.setPrimaryKey(ColumnIO,OpenJPAStateManager)",9,12
org.apache.openjpa.jdbc.sql.PrimaryRow.wherePrimaryKey(OpenJPAStateManager),12,14
org.apache.openjpa.jdbc.sql.PrimaryRow.getForeignKeyIO(ForeignKey),6,10
org.apache.openjpa.jdbc.sql.PrimaryRow.getForeignKeySet(ForeignKey),11,17
org.apache.openjpa.jdbc.sql.PrimaryRow.getForeignKeyWhere(ForeignKey),10,14
"org.apache.openjpa.jdbc.sql.PrimaryRow.setForeignKey(ForeignKey,OpenJPAStateManager)",7,12
"org.apache.openjpa.jdbc.sql.PrimaryRow.setForeignKey(ForeignKey,ColumnIO,OpenJPAStateManager)",10,19
"org.apache.openjpa.jdbc.sql.PrimaryRow.whereForeignKey(ForeignKey,OpenJPAStateManager)",8,16
org.apache.openjpa.jdbc.sql.PrimaryRow.clearForeignKey(ForeignKey),6,12
"org.apache.openjpa.jdbc.sql.PrimaryRow.delayForeignKey(ForeignKey,OpenJPAStateManager,boolean)",26,56
"org.apache.openjpa.jdbc.sql.PrimaryRow.recordForeignKey(ForeignKey,ColumnIO,OpenJPAStateManager,boolean)",21,61
org.apache.openjpa.jdbc.sql.PrimaryRow.getRelationIdSet(Column),16,24
org.apache.openjpa.jdbc.sql.PrimaryRow.getRelationIdCallback(Column),13,21
"org.apache.openjpa.jdbc.sql.PrimaryRow.setRelationId(Column,OpenJPAStateManager,RelationId)",22,47
org.apache.openjpa.jdbc.sql.PrimaryRow.clearRelationId(Column),10,18
org.apache.openjpa.jdbc.sql.PrimaryRow.getRelationIdIndex(Column),10,18
org.apache.openjpa.jdbc.sql.PrimaryRow.isPrimaryKeyAutoAssigned(OpenJPAStateManager),17,37
"org.apache.openjpa.jdbc.sql.PrimaryRow.setObject(Column,Object,int,boolean)",30,75
"org.apache.openjpa.jdbc.sql.PrimaryRow.allowsUpdate(Column,Object,Object)",19,45
org.apache.openjpa.jdbc.sql.PrimaryRow.isDefaultValue(Object),3,8
"org.apache.openjpa.jdbc.sql.PrimaryRow.rowValueEquals(Object,Object)",12,17
org.apache.openjpa.jdbc.sql.PrimaryRow.generateSQL(DBDictionary),23,66
"org.apache.openjpa.jdbc.sql.PrimaryRow.newInstance(Column[],int)",7,10
"org.apache.openjpa.jdbc.sql.PrimaryRow.copyInto(RowImpl,boolean)",16,93
org.apache.openjpa.jdbc.sql.PrimaryRow.toString(),13,40
"org.apache.openjpa.util.ProxyCollections.beforeAdd(ProxyCollection,int,Object)",15,21
"org.apache.openjpa.util.ProxyCollections.beforeInsertElementAt(ProxyCollection,Object,int)",13,19
"org.apache.openjpa.util.ProxyCollections.beforeAdd(ProxyCollection,Object)",18,28
"org.apache.openjpa.util.ProxyCollections.afterAdd(ProxyCollection,Object,boolean)",18,45
"org.apache.openjpa.util.ProxyCollections.beforeAddElement(ProxyCollection,Object)",11,17
"org.apache.openjpa.util.ProxyCollections.afterAddElement(ProxyCollection,Object)",11,17
"org.apache.openjpa.util.ProxyCollections.beforeAddFirst(ProxyCollection,Object)",11,16
"org.apache.openjpa.util.ProxyCollections.beforeAddLast(ProxyCollection,Object)",11,16
"org.apache.openjpa.util.ProxyCollections.afterAddLast(ProxyCollection,Object)",11,16
"org.apache.openjpa.util.ProxyCollections.beforeOffer(ProxyCollection,Object)",11,15
"org.apache.openjpa.util.ProxyCollections.afterOffer(ProxyCollection,Object,boolean)",15,25
"org.apache.openjpa.util.ProxyCollections.addAll(ProxyCollection,int,Collection)",12,28
"org.apache.openjpa.util.ProxyCollections.addAll(ProxyCollection,Collection)",10,21
org.apache.openjpa.util.ProxyCollections.beforeClear(ProxyCollection),9,16
org.apache.openjpa.util.ProxyCollections.beforeRemoveAllElements(ProxyCollection),8,9
"org.apache.openjpa.util.ProxyCollections.afterIterator(ProxyCollection,Iterator)",12,24
"org.apache.openjpa.util.ProxyCollections.afterIterator(ProxyCollection,Iterator).$1.hasNext()",1,1
"org.apache.openjpa.util.ProxyCollections.afterIterator(ProxyCollection,Iterator).$1.next()",2,2
"org.apache.openjpa.util.ProxyCollections.afterIterator(ProxyCollection,Iterator).$1.remove()",9,18
"org.apache.openjpa.util.ProxyCollections.afterListIterator(ProxyCollection,int,ListIterator)",8,18
"org.apache.openjpa.util.ProxyCollections.afterListIterator(ProxyCollection,ListIterator)",13,29
"org.apache.openjpa.util.ProxyCollections.afterListIterator(ProxyCollection,ListIterator).$2.hasNext()",1,1
"org.apache.openjpa.util.ProxyCollections.afterListIterator(ProxyCollection,ListIterator).$2.nextIndex()",2,3
"org.apache.openjpa.util.ProxyCollections.afterListIterator(ProxyCollection,ListIterator).$2.next()",2,2
"org.apache.openjpa.util.ProxyCollections.afterListIterator(ProxyCollection,ListIterator).$2.hasPrevious()",2,3
"org.apache.openjpa.util.ProxyCollections.afterListIterator(ProxyCollection,ListIterator).$2.previousIndex()",3,5
"org.apache.openjpa.util.ProxyCollections.afterListIterator(ProxyCollection,ListIterator).$2.previous()",3,4
"org.apache.openjpa.util.ProxyCollections.afterListIterator(ProxyCollection,ListIterator).$2.set(Object)",14,22
"org.apache.openjpa.util.ProxyCollections.afterListIterator(ProxyCollection,ListIterator).$2.add(Object)",14,26
"org.apache.openjpa.util.ProxyCollections.afterListIterator(ProxyCollection,ListIterator).$2.remove()",9,18
"org.apache.openjpa.util.ProxyCollections.beforeRemove(ProxyCollection,int)",10,12
"org.apache.openjpa.util.ProxyCollections.afterRemove(ProxyCollection,int,Object)",15,35
"org.apache.openjpa.util.ProxyCollections.beforeRemoveElementAt(ProxyCollection,int)",10,15
"org.apache.openjpa.util.ProxyCollections.beforeRemove(ProxyCollection,Object)",14,20
"org.apache.openjpa.util.ProxyCollections.afterRemove(ProxyCollection,Object,boolean)",20,56
org.apache.openjpa.util.ProxyCollections.isDirectAccess(ProxyCollection),7,17
"org.apache.openjpa.util.ProxyCollections.setDirectAccess(ProxyCollection,boolean)",8,21
"org.apache.openjpa.util.ProxyCollections.beforeRemoveElement(ProxyCollection,Object)",10,14
"org.apache.openjpa.util.ProxyCollections.afterRemoveElement(ProxyCollection,Object,boolean)",11,16
org.apache.openjpa.util.ProxyCollections.beforeRemoveFirst(ProxyCollection),9,12
"org.apache.openjpa.util.ProxyCollections.afterRemoveFirst(ProxyCollection,Object)",11,16
org.apache.openjpa.util.ProxyCollections.beforeRemoveLast(ProxyCollection),10,14
"org.apache.openjpa.util.ProxyCollections.afterRemoveLast(ProxyCollection,Object)",12,18
org.apache.openjpa.util.ProxyCollections.beforeRemove(ProxyCollection),8,11
"org.apache.openjpa.util.ProxyCollections.afterRemove(ProxyCollection,Object)",10,15
org.apache.openjpa.util.ProxyCollections.beforePoll(ProxyCollection),10,13
"org.apache.openjpa.util.ProxyCollections.afterPoll(ProxyCollection,Object)",11,17
"org.apache.openjpa.util.ProxyCollections.removeAll(ProxyCollection,Collection<>)",10,21
"org.apache.openjpa.util.ProxyCollections.retainAll(ProxyCollection,Collection<>)",12,26
"org.apache.openjpa.util.ProxyCollections.beforeSet(ProxyCollection,int,Object)",14,20
"org.apache.openjpa.util.ProxyCollections.afterSet(ProxyCollection,int,Object,Object)",15,28
"org.apache.openjpa.util.ProxyCollections.beforeSetElementAt(ProxyCollection,Object,int)",11,18
"org.apache.openjpa.util.ProxyCollections.afterSetElementAt(ProxyCollection,Object,int,Object)",12,22
org.apache.openjpa.util.ProxyCollections.loadCollection(ProxyCollection),3,8
"org.apache.openjpa.util.ProxyCollections.loadCollection(ProxyCollection,boolean)",29,102
org.apache.openjpa.util.ProxyCollections.isDelayed(ProxyCollection),7,22
org.apache.openjpa.util.ProxyCollections.checkState(ProxyCollection),21,81
org.apache.openjpa.util.ProxyCollections.clearStateManager(ProxyCollection),8,12
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecified.getEntityManagerFactory(),13,28
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecified.getListener(),4,10
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecified.getSql(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecified.testCacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecified.testUncacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecified.testUnspecified(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecified.getExpectedInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecified.getExpectedNotInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecified.getCacheEnabled(),2,2
org.apache.openjpa.jdbc.kernel.exps.Const.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.Const.setMetaData(ClassMetaData),3,8
"org.apache.openjpa.jdbc.kernel.exps.Const.getSQLValue(Select,ExpContext,ExpState)",9,14
"org.apache.openjpa.jdbc.kernel.exps.Const.isSQLValueNull(Select,ExpContext,ExpState)",15,30
"org.apache.openjpa.jdbc.kernel.exps.Const.getValue(ExpContext,ExpState)",10,14
"org.apache.openjpa.jdbc.kernel.exps.Const.initialize(Select,ExpContext,int)",7,9
org.apache.openjpa.jdbc.kernel.exps.Const.ConstExpState.getColumn(int),6,13
"org.apache.openjpa.jdbc.kernel.exps.Const.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",11,15
"org.apache.openjpa.jdbc.kernel.exps.Const.select(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.Const.newSQLBuffer(Select,ExpContext,ExpState)",13,27
"org.apache.openjpa.jdbc.kernel.exps.Const.selectColumns(Select,ExpContext,ExpState,boolean)",7,9
"org.apache.openjpa.jdbc.kernel.exps.Const.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.Const.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.Const.load(ExpContext,ExpState,Result)",10,12
"org.apache.openjpa.jdbc.kernel.exps.Const.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.Const.appendIsEmpty(Select,ExpContext,ExpState,SQLBuffer)",14,31
"org.apache.openjpa.jdbc.kernel.exps.Const.appendIsNotEmpty(Select,ExpContext,ExpState,SQLBuffer)",14,31
"org.apache.openjpa.jdbc.kernel.exps.Const.appendSize(Select,ExpContext,ExpState,SQLBuffer)",14,33
"org.apache.openjpa.jdbc.kernel.exps.Const.appendIsNull(Select,ExpContext,ExpState,SQLBuffer)",9,18
"org.apache.openjpa.jdbc.kernel.exps.Const.appendIsNotNull(Select,ExpContext,ExpState,SQLBuffer)",9,18
org.apache.openjpa.trader.domain.Bid.Bid(),9,9
"org.apache.openjpa.trader.domain.Bid.Bid(Trader,Stock,double,int)",22,42
org.apache.openjpa.trader.domain.Bid.getBuyer(),3,7
org.apache.openjpa.trader.domain.Bid.getGain(),5,6
org.apache.openjpa.ee.TestOSGiManagedRuntime.$1.begin(),4,5
org.apache.openjpa.ee.TestOSGiManagedRuntime.$1.commit(),8,15
org.apache.openjpa.ee.TestOSGiManagedRuntime.$1.getStatus(),3,3
org.apache.openjpa.ee.TestOSGiManagedRuntime.$1.getTransaction(),3,4
org.apache.openjpa.ee.TestOSGiManagedRuntime.$1.resume(Transaction),7,10
org.apache.openjpa.ee.TestOSGiManagedRuntime.$1.rollback(),5,7
org.apache.openjpa.ee.TestOSGiManagedRuntime.$1.setRollbackOnly(),5,6
org.apache.openjpa.ee.TestOSGiManagedRuntime.$1.setTransactionTimeout(int),5,5
org.apache.openjpa.ee.TestOSGiManagedRuntime.$1.suspend(),4,4
org.apache.openjpa.ee.TestOSGiManagedRuntime.$1.toString(),7,8
"org.apache.openjpa.ee.TestOSGiManagedRuntime.$2.isAssignableTo(Bundle,String)",4,5
org.apache.openjpa.ee.TestOSGiManagedRuntime.$2.getUsingBundles(),3,3
org.apache.openjpa.ee.TestOSGiManagedRuntime.$2.getPropertyKeys(),3,3
org.apache.openjpa.ee.TestOSGiManagedRuntime.$2.getProperty(String),4,4
org.apache.openjpa.ee.TestOSGiManagedRuntime.$2.getBundle(),1,2
org.apache.openjpa.ee.TestOSGiManagedRuntime.$2.compareTo(Object),5,7
org.apache.openjpa.ee.TestOSGiManagedRuntime.$2.toString(),8,9
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.setTransactionManager(TransactionManager),20,60
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.getServiceListenerCount(),5,8
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.getTxnRefCount(),3,6
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.getProperty(String),6,7
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.getBundle(),4,5
"org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.installBundle(String,InputStream)",9,13
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.installBundle(String),7,10
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.getBundle(long),4,5
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.getBundles(),5,5
"org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.addServiceListener(ServiceListener,String)",16,29
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.addServiceListener(ServiceListener),10,15
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.removeServiceListener(ServiceListener),12,23
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.addBundleListener(BundleListener),6,9
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.removeBundleListener(BundleListener),6,9
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.addFrameworkListener(FrameworkListener),6,9
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.removeFrameworkListener(FrameworkListener),6,9
"org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.registerService(String[],Object,Dictionary)",11,13
"org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.registerService(String,Object,Dictionary)",11,13
"org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.getServiceReferences(String,String)",11,14
"org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.getAllServiceReferences(String,String)",11,14
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.getServiceReference(String),10,21
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.getService(ServiceReference),9,14
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.ungetService(ServiceReference),7,12
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.getDataFile(String),7,8
org.apache.openjpa.ee.TestOSGiManagedRuntime.TestBundleContext.createFilter(String),8,11
"org.apache.openjpa.ee.TestOSGiManagedRuntime.assertTxnManagerAvailable(TestBundleContext,ManagedRuntime)",13,19
"org.apache.openjpa.ee.TestOSGiManagedRuntime.assertTxnManagerUnavailable(TestBundleContext,ManagedRuntime)",14,21
org.apache.openjpa.ee.TestOSGiManagedRuntime.testTxnServiceDiscoveryPreStartPostStop(),29,90
org.apache.openjpa.ee.TestOSGiManagedRuntime.testTxnServiceDiscoveryPreStartPreStop(),28,82
org.apache.openjpa.ee.TestOSGiManagedRuntime.testTxnServiceDiscoveryPostStartPostStop(),28,86
org.apache.openjpa.ee.TestOSGiManagedRuntime.testTxnServiceDiscoveryPostStartPreStop(),29,94
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.getAuditor(),2,3
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.getEntityManagerFactory(),5,8
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.getEntityManager(),2,4
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.getDictionary(),2,3
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.tearDown(),3,4
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.createNamedEMF(Class<>),76,142
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.setDictionary(),21,38
"org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.assertEquivalence(CriteriaQuery<>,String)",9,15
"org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.assertEquivalence(CriteriaQuery<>,String,String)",11,22
"org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.assertEquivalence(QueryDecorator,CriteriaQuery<>,String)",11,21
"org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.assertEquivalence(QueryDecorator,CriteriaQuery<>,String,String)",26,60
"org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.executeAndCompareSQL(String,Query,Query,String)",40,163
"org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.executeAndCompareSQL(String,String)",26,76
"org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.executeAndCompareSQL(Query,String)",27,73
"org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.executeExpectFail(CriteriaQuery<>,String)",15,25
"org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.executeExpectFail(CriteriaQuery<>,String,String[],Object[])",22,37
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.executeExpectFail(String),14,23
"org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.executeExpectFail(String,String[],Object[])",21,35
"org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.printSQL(String,String)",7,14
"org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.printSQL(String,List<String>)",10,18
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.executeQueryAndCollectSQL(Query),20,36
"org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.executeAndCompareSQL(CriteriaQuery<>,String)",10,17
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.extractSQL(Exception),7,16
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.runBare(),17,37
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.getAllowFailure(),18,51
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.SQLAuditor.SQLAuditor(),5,5
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.SQLAuditor.getSQLs(),3,3
org.apache.openjpa.persistence.criteria.AbstractCriteriaTestCase.QueryDecorator.decorate(Query),2,2
org.apache.openjpa.jdbc.meta.strats.IdentityJoinable.IdentityJoinable(ClassMapping),6,11
org.apache.openjpa.jdbc.meta.strats.IdentityJoinable.getFieldIndex(),2,2
"org.apache.openjpa.jdbc.meta.strats.IdentityJoinable.getPrimaryKeyValue(Result,Column[],ForeignKey,JDBCStore,Joins)",15,26
org.apache.openjpa.jdbc.meta.strats.IdentityJoinable.getColumns(),5,6
"org.apache.openjpa.jdbc.meta.strats.IdentityJoinable.getJoinValue(Object,Column,JDBCStore)",8,11
"org.apache.openjpa.jdbc.meta.strats.IdentityJoinable.getJoinValue(OpenJPAStateManager,Column,JDBCStore)",9,12
"org.apache.openjpa.jdbc.meta.strats.IdentityJoinable.setAutoAssignedValue(OpenJPAStateManager,JDBCStore,Column,Object)",15,23
org.apache.openjpa.persistence.detach.xml.Automobile.setId(long),1,1
org.apache.openjpa.persistence.detach.xml.Automobile.getId(),0,0
org.apache.openjpa.persistence.detach.xml.Automobile.setMake(String),2,2
org.apache.openjpa.persistence.detach.xml.Automobile.getMake(),1,1
org.apache.openjpa.persistence.detach.xml.Automobile.setModel(String),3,6
org.apache.openjpa.persistence.detach.xml.Automobile.getModel(),2,3
org.apache.openjpa.persistence.detach.xml.Automobile.setPassengers(Collection<Passenger>),4,7
org.apache.openjpa.persistence.detach.xml.Automobile.getPassengers(),3,4
org.apache.openjpa.persistence.detach.xml.Automobile.setPrimaryDriver(Driver),3,10
org.apache.openjpa.persistence.detach.xml.Automobile.getPrimaryDriver(),2,5
org.apache.openjpa.persistence.detach.xml.Automobile.setOwner(Owner),2,6
org.apache.openjpa.persistence.detach.xml.Automobile.getOwner(),1,3
org.apache.openjpa.util.OpenJPAException.OpenJPAException(),3,3
org.apache.openjpa.util.OpenJPAException.OpenJPAException(String),7,8
org.apache.openjpa.util.OpenJPAException.OpenJPAException(Message),6,9
org.apache.openjpa.util.OpenJPAException.OpenJPAException(Throwable),6,9
"org.apache.openjpa.util.OpenJPAException.OpenJPAException(String,Throwable)",9,13
"org.apache.openjpa.util.OpenJPAException.OpenJPAException(Message,Throwable)",8,14
org.apache.openjpa.util.OpenJPAException.getType(),2,3
org.apache.openjpa.util.OpenJPAException.getSubtype(),2,3
org.apache.openjpa.util.OpenJPAException.isFatal(),2,4
org.apache.openjpa.util.OpenJPAException.setFatal(boolean),5,9
org.apache.openjpa.util.OpenJPAException.getCause(),9,19
org.apache.openjpa.util.OpenJPAException.setCause(Throwable),7,15
org.apache.openjpa.util.OpenJPAException.getNestedThrowables(),5,10
org.apache.openjpa.util.OpenJPAException.setNestedThrowables(Throwable[]),6,11
org.apache.openjpa.util.OpenJPAException.getFailedObject(),2,6
org.apache.openjpa.util.OpenJPAException.setFailedObject(Object),5,11
org.apache.openjpa.util.OpenJPAException.toString(),2,4
org.apache.openjpa.util.OpenJPAException.printStackTrace(),5,8
org.apache.openjpa.util.OpenJPAException.printStackTrace(PrintStream),7,12
org.apache.openjpa.util.OpenJPAException.printStackTrace(PrintWriter),7,12
org.apache.openjpa.util.OpenJPAException.writeObject(ObjectOutputStream),11,22
org.apache.openjpa.util.OpenJPAException.readObject(ObjectInputStream),10,17
org.apache.openjpa.lib.conf.StringValue.StringValue(String),3,5
org.apache.openjpa.lib.conf.StringValue.getValueType(),3,4
org.apache.openjpa.lib.conf.StringValue.get(),3,4
org.apache.openjpa.lib.conf.StringValue.set(String),8,18
org.apache.openjpa.lib.conf.StringValue.getInternalString(),2,3
org.apache.openjpa.lib.conf.StringValue.setInternalString(String),4,7
org.apache.openjpa.lib.conf.StringValue.setInternalObject(Object),5,14
"org.apache.openjpa.lib.jdbc.DelegatingStatement.DelegatingStatement(Statement,Connection)",6,9
"org.apache.openjpa.lib.jdbc.DelegatingStatement.initialize(Statement,Connection)",7,17
"org.apache.openjpa.lib.jdbc.DelegatingStatement.wrapResult(ResultSet,boolean)",4,11
org.apache.openjpa.lib.jdbc.DelegatingStatement.getDelegate(),4,5
org.apache.openjpa.lib.jdbc.DelegatingStatement.getInnermostDelegate(),9,13
org.apache.openjpa.lib.jdbc.DelegatingStatement.hashCode(),4,6
org.apache.openjpa.lib.jdbc.DelegatingStatement.equals(Object),6,11
org.apache.openjpa.lib.jdbc.DelegatingStatement.toString(),8,16
org.apache.openjpa.lib.jdbc.DelegatingStatement.appendInfo(StringBuffer),6,10
org.apache.openjpa.lib.jdbc.DelegatingStatement.executeQuery(String),8,11
"org.apache.openjpa.lib.jdbc.DelegatingStatement.executeQuery(String,boolean)",14,31
org.apache.openjpa.lib.jdbc.DelegatingStatement.executeUpdate(String),7,10
org.apache.openjpa.lib.jdbc.DelegatingStatement.execute(String),6,8
org.apache.openjpa.lib.jdbc.DelegatingStatement.close(),4,5
org.apache.openjpa.lib.jdbc.DelegatingStatement.getMaxFieldSize(),6,9
org.apache.openjpa.lib.jdbc.DelegatingStatement.setMaxFieldSize(int),7,11
org.apache.openjpa.lib.jdbc.DelegatingStatement.getMaxRows(),5,7
org.apache.openjpa.lib.jdbc.DelegatingStatement.setMaxRows(int),6,9
org.apache.openjpa.lib.jdbc.DelegatingStatement.setEscapeProcessing(boolean),7,11
org.apache.openjpa.lib.jdbc.DelegatingStatement.getQueryTimeout(),5,7
org.apache.openjpa.lib.jdbc.DelegatingStatement.setQueryTimeout(int),6,9
org.apache.openjpa.lib.jdbc.DelegatingStatement.cancel(),4,5
org.apache.openjpa.lib.jdbc.DelegatingStatement.getWarnings(),5,7
org.apache.openjpa.lib.jdbc.DelegatingStatement.clearWarnings(),4,5
org.apache.openjpa.lib.jdbc.DelegatingStatement.setCursorName(String),8,12
org.apache.openjpa.lib.jdbc.DelegatingStatement.getResultSet(),4,8
org.apache.openjpa.lib.jdbc.DelegatingStatement.getResultSet(boolean),11,27
org.apache.openjpa.lib.jdbc.DelegatingStatement.getUpdateCount(),5,7
org.apache.openjpa.lib.jdbc.DelegatingStatement.getMoreResults(),4,5
org.apache.openjpa.lib.jdbc.DelegatingStatement.setFetchDirection(int),6,9
org.apache.openjpa.lib.jdbc.DelegatingStatement.getFetchDirection(),5,7
org.apache.openjpa.lib.jdbc.DelegatingStatement.setFetchSize(int),6,9
org.apache.openjpa.lib.jdbc.DelegatingStatement.getFetchSize(),5,7
org.apache.openjpa.lib.jdbc.DelegatingStatement.getResultSetConcurrency(),6,9
org.apache.openjpa.lib.jdbc.DelegatingStatement.getResultSetType(),6,9
org.apache.openjpa.lib.jdbc.DelegatingStatement.addBatch(String),7,10
org.apache.openjpa.lib.jdbc.DelegatingStatement.clearBatch(),4,5
org.apache.openjpa.lib.jdbc.DelegatingStatement.executeBatch(),5,7
org.apache.openjpa.lib.jdbc.DelegatingStatement.getConnection(),4,5
org.apache.openjpa.lib.jdbc.DelegatingStatement.getMoreResults(int),4,5
org.apache.openjpa.lib.jdbc.DelegatingStatement.getGeneratedKeys(),7,9
"org.apache.openjpa.lib.jdbc.DelegatingStatement.executeUpdate(String,int)",6,8
"org.apache.openjpa.lib.jdbc.DelegatingStatement.executeUpdate(String,int[])",6,8
"org.apache.openjpa.lib.jdbc.DelegatingStatement.executeUpdate(String,String[])",6,9
"org.apache.openjpa.lib.jdbc.DelegatingStatement.execute(String,int)",5,6
"org.apache.openjpa.lib.jdbc.DelegatingStatement.execute(String,int[])",5,6
"org.apache.openjpa.lib.jdbc.DelegatingStatement.execute(String,String[])",5,7
org.apache.openjpa.lib.jdbc.DelegatingStatement.getResultSetHoldability(),6,9
org.apache.openjpa.lib.jdbc.DelegatingStatement.isWrapperFor(Class<>),6,7
org.apache.openjpa.lib.jdbc.DelegatingStatement.unwrap(Class<T>),6,7
org.apache.openjpa.lib.jdbc.DelegatingStatement.isClosed(),4,5
org.apache.openjpa.lib.jdbc.DelegatingStatement.setPoolable(boolean),5,7
org.apache.openjpa.lib.jdbc.DelegatingStatement.isPoolable(),4,5
org.apache.openjpa.lib.jdbc.DelegatingStatement.isCloseOnCompletion(),6,7
org.apache.openjpa.lib.jdbc.DelegatingStatement.closeOnCompletion(),6,7
org.apache.openjpa.kernel.InverseManager.getManageLRS(),3,7
org.apache.openjpa.kernel.InverseManager.setManageLRS(boolean),5,11
org.apache.openjpa.kernel.InverseManager.getAction(),7,10
org.apache.openjpa.kernel.InverseManager.setAction(int),8,14
org.apache.openjpa.kernel.InverseManager.setAction(String),19,44
org.apache.openjpa.kernel.InverseManager.startConfiguration(),2,2
org.apache.openjpa.kernel.InverseManager.endConfiguration(),1,1
org.apache.openjpa.kernel.InverseManager.setConfiguration(Configuration),11,19
"org.apache.openjpa.kernel.InverseManager.correctRelations(OpenJPAStateManager,FieldMetaData,Object)",39,124
"org.apache.openjpa.kernel.InverseManager.createInverseRelations(StoreContext,Object,Object,FieldMetaData,FieldMetaData[])",48,107
"org.apache.openjpa.kernel.InverseManager.isLoaded(OpenJPAStateManager,int)",19,41
"org.apache.openjpa.kernel.InverseManager.clearInverseRelations(OpenJPAStateManager,FieldMetaData,FieldMetaData[],Object)",40,113
"org.apache.openjpa.kernel.InverseManager.clearInverseRelations(OpenJPAStateManager,Object,FieldMetaData,FieldMetaData[])",43,97
"org.apache.openjpa.kernel.InverseManager.storeNull(OpenJPAStateManager,FieldMetaData,Object)",15,24
"org.apache.openjpa.kernel.InverseManager.storeField(OpenJPAStateManager,FieldMetaData,Object,Object)",26,58
"org.apache.openjpa.kernel.InverseManager.removeFromCollection(OpenJPAStateManager,FieldMetaData,Object)",22,49
"org.apache.openjpa.kernel.InverseManager.addToCollection(OpenJPAStateManager,FieldMetaData,Object)",24,56
"org.apache.openjpa.kernel.InverseManager.warnConsistency(OpenJPAStateManager,FieldMetaData)",15,21
"org.apache.openjpa.kernel.InverseManager.throwException(OpenJPAStateManager,FieldMetaData)",19,23
org.apache.openjpa.persistence.datacache.TestArrayFieldsInDataCache.setUp(),35,62
org.apache.openjpa.persistence.datacache.TestArrayFieldsInDataCache.testArrayOfStrings(),39,94
org.apache.openjpa.persistence.datacache.TestArrayFieldsInDataCache.testArrayOfInts(),38,93
org.apache.openjpa.persistence.embed.Department3.getDeptId(),1,2
org.apache.openjpa.persistence.embed.Department3.setDeptId(int),2,5
org.apache.openjpa.persistence.embed.Department3.getEmployees(),5,6
org.apache.openjpa.persistence.embed.Department3.addEmployee(Employee3),5,8
org.apache.openjpa.persistence.common.apps.TextilePK.TextilePK(),1,1
org.apache.openjpa.persistence.common.apps.TextilePK.getTextileId(),2,3
org.apache.openjpa.persistence.common.apps.TextilePK.setTextileId(Integer),3,6
org.apache.openjpa.persistence.common.apps.TextilePK.equals(Object),4,14
org.apache.openjpa.persistence.common.apps.TextilePK.hashCode(),5,12
"org.apache.openjpa.jdbc.meta.strats.SuperclassVersionStrategy.afterLoad(OpenJPAStateManager,JDBCStore)",9,13
"org.apache.openjpa.jdbc.meta.strats.SuperclassVersionStrategy.checkVersion(OpenJPAStateManager,JDBCStore,boolean)",12,21
"org.apache.openjpa.jdbc.meta.strats.SuperclassVersionStrategy.compareVersion(Object,Object)",6,11
org.apache.openjpa.jdbc.meta.strats.SuperclassVersionStrategy.getBulkUpdateValues(),8,12
openbook.client.SQLLogger.setOutput(GraphicOutputStream),15,23
openbook.client.SQLLogger.beforeExecuteStatement(JDBCEvent),8,9
openbook.client.SQLLogger.beforeExecuteStatement(JDBCEvent).$1.run(),4,4
"org.apache.openjpa.jdbc.kernel.exps.EqualExpression.EqualExpression(Val,Val)",7,12
"org.apache.openjpa.jdbc.kernel.exps.EqualExpression.appendTo(Select,ExpContext,BinaryOpExpState,SQLBuffer,boolean,boolean)",25,120
org.apache.openjpa.persistence.embed.EntityA_Embed_ToOne.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Embed_ToOne.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Embed_ToOne.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Embed_ToOne.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Embed_ToOne.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Embed_ToOne.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Embed_ToOne.getEmbed(),1,3
org.apache.openjpa.persistence.embed.EntityA_Embed_ToOne.setEmbed(Embed_ToOne),2,6
org.apache.openjpa.lib.graph.DepthFirstAnalysis.DepthFirstAnalysis(Graph),24,57
"org.apache.openjpa.lib.graph.DepthFirstAnalysis.visit(Graph,Object,NodeInfo,int,List<Edge>)",39,162
org.apache.openjpa.lib.graph.DepthFirstAnalysis.setNodeComparator(Comparator<Object>),7,12
org.apache.openjpa.lib.graph.DepthFirstAnalysis.getSortedNodes(),32,53
org.apache.openjpa.lib.graph.DepthFirstAnalysis.getEdges(int),21,51
org.apache.openjpa.lib.graph.DepthFirstAnalysis.getFinishedTime(Object),8,21
"org.apache.openjpa.lib.graph.DepthFirstAnalysis.buildCycle(Edge,List<Edge>,int)",22,69
"org.apache.openjpa.lib.graph.DepthFirstAnalysis.cycleForBackEdge(Edge,List<Edge>)",24,94
"org.apache.openjpa.lib.graph.DepthFirstAnalysis.cycleForForwardEdge(Graph,Object,Object,List<Edge>)",34,104
"org.apache.openjpa.lib.graph.DepthFirstAnalysis.findNodeInPath(Object,List<Edge>)",19,38
org.apache.openjpa.lib.graph.DepthFirstAnalysis.hasNoCycles(),13,29
org.apache.openjpa.lib.graph.DepthFirstAnalysis.NodeInfoComparator.NodeInfoComparator(Comparator<Object>),6,11
"org.apache.openjpa.lib.graph.DepthFirstAnalysis.NodeInfoComparator.compare(Map.Entry<Object,NodeInfo>,Map.Entry<Object,NodeInfo>)",13,32
"org.apache.openjpa.lib.graph.DepthFirstAnalysis.NodeList.NodeList(Map.Entry<Object,NodeInfo>[])",7,10
org.apache.openjpa.lib.graph.DepthFirstAnalysis.NodeList.get(int),4,5
org.apache.openjpa.lib.graph.DepthFirstAnalysis.NodeList.size(),3,3
org.apache.openjpa.jdbc.kernel.exps.IsEmptyExpression.IsEmptyExpression(Val),7,10
"org.apache.openjpa.jdbc.kernel.exps.IsEmptyExpression.initialize(Select,ExpContext,Map)",10,15
"org.apache.openjpa.jdbc.kernel.exps.IsEmptyExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",14,25
"org.apache.openjpa.jdbc.kernel.exps.IsEmptyExpression.selectColumns(Select,ExpContext,ExpState,boolean)",8,14
org.apache.openjpa.jdbc.kernel.exps.IsEmptyExpression.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.persistence.criteria.Customer.getName(),2,3
org.apache.openjpa.persistence.criteria.Customer.setName(String),3,6
org.apache.openjpa.persistence.criteria.Customer.getFirstName(),2,3
org.apache.openjpa.persistence.criteria.Customer.setFirstName(String),3,6
org.apache.openjpa.persistence.criteria.Customer.getLastName(),2,3
org.apache.openjpa.persistence.criteria.Customer.setLastName(String),3,6
org.apache.openjpa.persistence.criteria.Customer.getOrders(),1,1
org.apache.openjpa.persistence.criteria.Customer.setOrders(Set<Order>),1,2
org.apache.openjpa.persistence.criteria.Customer.getId(),0,0
org.apache.openjpa.persistence.criteria.Customer.getAddress(),1,3
org.apache.openjpa.persistence.criteria.Customer.setAddress(Address),2,6
org.apache.openjpa.persistence.criteria.Customer.getStatus(),1,2
org.apache.openjpa.persistence.criteria.Customer.setStatus(int),2,5
org.apache.openjpa.persistence.criteria.Customer.getAccountNum(),2,4
org.apache.openjpa.persistence.criteria.Customer.setAccountNum(long),3,9
org.apache.openjpa.persistence.criteria.Customer.getBalanceOwed(),2,4
org.apache.openjpa.persistence.criteria.Customer.setBalanceOwed(int),3,9
org.apache.openjpa.persistence.criteria.Customer.getFilledOrderCount(),2,4
org.apache.openjpa.persistence.criteria.Customer.setFilledOrderCount(int),3,9
org.apache.openjpa.persistence.criteria.Customer.getAccounts(),3,4
org.apache.openjpa.persistence.criteria.Customer.setAccounts(List<Account>),4,7
org.apache.openjpa.persistence.criteria.Customer.getRating(),2,5
org.apache.openjpa.persistence.criteria.Customer.setRating(CreditRating),3,8
org.apache.openjpa.persistence.embed.lazy.BeverageHolder.setDiameter(int),2,5
org.apache.openjpa.persistence.embed.lazy.BeverageHolder.getDiameter(),1,2
org.apache.openjpa.persistence.embed.lazy.BeverageHolder.setDepth(int),2,5
org.apache.openjpa.persistence.embed.lazy.BeverageHolder.getDepth(),1,2
org.apache.openjpa.persistence.enhance.identity.LineId1.LineId1(),1,1
"org.apache.openjpa.persistence.enhance.identity.LineId1.LineId1(int,PageId1)",3,11
org.apache.openjpa.persistence.enhance.identity.LineId1.getLineNum(),2,4
org.apache.openjpa.persistence.enhance.identity.LineId1.setLineNum(int),3,9
org.apache.openjpa.persistence.enhance.identity.LineId1.equals(Object),5,12
org.apache.openjpa.persistence.enhance.identity.LineId1.hashCode(),5,8
org.apache.openjpa.persistence.enhance.identity.LineId1.getPage(),1,3
org.apache.openjpa.persistence.enhance.identity.LineId1.setPage(PageId1),2,6
org.apache.openjpa.persistence.fields.ByteArrayHolder.ByteArrayHolder(),2,2
org.apache.openjpa.persistence.fields.ByteArrayHolder.getTaskId(),1,2
org.apache.openjpa.persistence.fields.ByteArrayHolder.setTaskId(int),2,5
org.apache.openjpa.persistence.fields.ByteArrayHolder.getTkiid(),1,2
org.apache.openjpa.persistence.fields.ByteArrayHolder.setTkiid(byte[]),2,5
org.apache.openjpa.persistence.access.TestExplicitAccess.setUp(),21,93
org.apache.openjpa.persistence.access.TestExplicitAccess.testClassSpecifiedFieldAccess(),37,78
org.apache.openjpa.persistence.access.TestExplicitAccess.testClassSpecifiedPropertyAccess(),38,78
org.apache.openjpa.persistence.access.TestExplicitAccess.testClassSpecifiedMixedSinglePCFieldAccess(),55,157
org.apache.openjpa.persistence.access.TestExplicitAccess.testClassSpecifiedMixedSinglePCPropertyAccess(),55,151
org.apache.openjpa.persistence.access.TestExplicitAccess.testAbstractMappedSuperField(),50,152
org.apache.openjpa.persistence.access.TestExplicitAccess.testAbstractMappedSuperProperty(),50,152
org.apache.openjpa.persistence.access.TestExplicitAccess.testMappedSuperField(),50,152
org.apache.openjpa.persistence.access.TestExplicitAccess.testMappedSuperProperty(),50,152
org.apache.openjpa.persistence.access.TestExplicitAccess.testMixedMappedSuper(),56,171
org.apache.openjpa.persistence.access.TestExplicitAccess.testEntityFieldDefaultInheritance(),61,250
org.apache.openjpa.persistence.access.TestExplicitAccess.testEntityPropertyDefaultInheritance(),61,250
org.apache.openjpa.persistence.access.TestExplicitAccess.testEmbeddablesField(),38,143
org.apache.openjpa.persistence.access.TestExplicitAccess.testEmbeddablesProperty(),39,144
org.apache.openjpa.persistence.access.TestExplicitAccess.testMixedEmbeddables(),39,159
org.apache.openjpa.persistence.access.TestExplicitAccess.testNestedEmbeddables(),44,172
org.apache.openjpa.persistence.access.TestExplicitAccess.testMultipleEmbeddables(),50,234
org.apache.openjpa.persistence.access.TestExplicitAccess.testPropertyAccessStrategies(),75,292
org.apache.openjpa.persistence.access.TestExplicitAccess.testFieldAccessStrategies(),76,295
org.apache.openjpa.persistence.access.TestExplicitAccess.testMapWithNestedEmbeddable(),56,146
"org.apache.openjpa.persistence.access.TestExplicitAccess.verifyException(Exception,Class,String)",14,25
org.apache.openjpa.lib.meta.SourceTracker.getSourceFile(),4,6
org.apache.openjpa.lib.meta.SourceTracker.getSourceScope(),7,8
org.apache.openjpa.lib.meta.SourceTracker.getSourceType(),2,4
org.apache.openjpa.lib.meta.SourceTracker.getResourceName(),8,13
org.apache.openjpa.lib.meta.SourceTracker.getLineNumber(),4,5
org.apache.openjpa.lib.meta.SourceTracker.getColNumber(),6,6
org.apache.openjpa.persistence.annotations.TestGenerators.TestGenerators(String),5,6
org.apache.openjpa.persistence.annotations.TestGenerators.setUp(),4,4
org.apache.openjpa.persistence.annotations.TestGenerators.testGet(),10,16
org.apache.openjpa.persistence.annotations.TestGenerators.testFlush(),11,18
org.apache.openjpa.persistence.annotations.TestGenerators.testCommit(),10,16
org.apache.openjpa.persistence.annotations.TestGenerators.assertNew(),15,22
org.apache.openjpa.persistence.annotations.TestGenerators.assertPks(Generator),4,6
"org.apache.openjpa.persistence.annotations.TestGenerators.assertNotEquals(long,long)",2,3
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.DelegatingDatabaseMetaData(DatabaseMetaData,Connection)",6,17
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getInnermostDelegate(),9,25
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.hashCode(),4,6
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.equals(Object),8,15
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.toString(),9,20
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.allProceduresAreCallable(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.allTablesAreSelectable(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.dataDefinitionCausesTransactionCommit(),8,14
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.dataDefinitionIgnoredInTransactions(),7,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.deletesAreDetected(int),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.doesMaxRowSizeIncludeBlobs(),9,14
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getBestRowIdentifier(String,String,String,int,boolean)",14,23
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getCatalogs(),7,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getCatalogSeparator(),7,9
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getCatalogTerm(),7,9
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getColumnPrivileges(String,String,String,String)",14,26
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getColumns(String,String,String,String)",14,30
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getConnection(),4,5
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getCrossReference(String,String,String,String,String,String)",14,40
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getDatabaseProductName(),8,11
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getDatabaseProductVersion(),8,11
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getDefaultTransactionIsolation(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getDriverMajorVersion(),5,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getDriverMinorVersion(),5,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getDriverName(),7,9
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getDriverVersion(),7,9
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getExportedKeys(String,String,String)",12,19
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getExtraNameCharacters(),8,11
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getIdentifierQuoteString(),7,11
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getImportedKeys(String,String,String)",12,19
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getIndexInfo(String,String,String,boolean,boolean)",14,23
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxBinaryLiteralLength(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxCatalogNameLength(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxCharLiteralLength(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxColumnNameLength(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxColumnsInGroupBy(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxColumnsInIndex(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxColumnsInOrderBy(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxColumnsInSelect(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxColumnsInTable(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxConnections(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxCursorNameLength(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxIndexLength(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxProcedureNameLength(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxRowSize(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxSchemaNameLength(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxStatementLength(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxStatements(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxTableNameLength(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxTablesInSelect(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getMaxUserNameLength(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getNumericFunctions(),7,9
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getPrimaryKeys(String,String,String)",12,19
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getProcedureColumns(String,String,String,String)",14,32
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getProcedures(String,String,String)",13,23
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getProcedureTerm(),7,9
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getSchemas(),7,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getSchemaTerm(),7,9
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getSearchStringEscape(),7,11
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getSQLKeywords(),6,9
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getStringFunctions(),6,9
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getSystemFunctions(),7,9
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getTablePrivileges(String,String,String)",13,25
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getTables(String,String,String,String[])",14,26
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getTableTypes(),8,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getTimeDateFunctions(),8,11
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getTypeInfo(),8,10
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getUDTs(String,String,String,int[])",13,23
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getURL(),6,7
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getUserName(),7,9
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getVersionColumns(String,String,String)",12,19
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.insertsAreDetected(int),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.isCatalogAtStart(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.isReadOnly(),5,6
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.nullPlusNonNullIsNull(),5,6
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.nullsAreSortedAtEnd(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.nullsAreSortedAtStart(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.nullsAreSortedHigh(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.nullsAreSortedLow(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.othersDeletesAreVisible(int),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.othersInsertsAreVisible(int),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.othersUpdatesAreVisible(int),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.ownDeletesAreVisible(int),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.ownInsertsAreVisible(int),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.ownUpdatesAreVisible(int),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.storesLowerCaseIdentifiers(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.storesLowerCaseQuotedIdentifiers(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.storesMixedCaseIdentifiers(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.storesMixedCaseQuotedIdentifiers(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.storesUpperCaseIdentifiers(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.storesUpperCaseQuotedIdentifiers(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsAlterTableWithAddColumn(),9,14
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsAlterTableWithDropColumn(),9,14
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsANSI92EntryLevelSQL(),8,14
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsANSI92FullSQL(),6,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsANSI92IntermediateSQL(),7,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsBatchUpdates(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsCatalogsInDataManipulation(),7,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsCatalogsInIndexDefinitions(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsCatalogsInPrivilegeDefinitions(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsCatalogsInProcedureCalls(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsCatalogsInTableDefinitions(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsColumnAliasing(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsConvert(),6,8
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsConvert(int,int)",7,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsCoreSQLGrammar(),7,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsCorrelatedSubqueries(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsDataDefinitionAndDataManipulationTransactions(),8,16
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsDataManipulationTransactionsOnly(),7,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsDifferentTableCorrelationNames(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsExpressionsInOrderBy(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsExtendedSQLGrammar(),7,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsFullOuterJoins(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsGroupBy(),5,6
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsGroupByBeyondSelect(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsGroupByUnrelated(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsIntegrityEnhancementFacility(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsLikeEscapeClause(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsLimitedOuterJoins(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsMinimumSQLGrammar(),7,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsMixedCaseIdentifiers(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsMixedCaseQuotedIdentifiers(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsMultipleResultSets(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsMultipleTransactions(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsNonNullableColumns(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsOpenCursorsAcrossCommit(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsOpenCursorsAcrossRollback(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsOpenStatementsAcrossCommit(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsOpenStatementsAcrossRollback(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsOrderByUnrelated(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsOuterJoins(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsPositionedDelete(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsPositionedUpdate(),7,10
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsResultSetConcurrency(int,int)",9,16
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsResultSetType(int),8,14
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsSchemasInDataManipulation(),7,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsSchemasInIndexDefinitions(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsSchemasInPrivilegeDefinitions(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsSchemasInProcedureCalls(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsSchemasInTableDefinitions(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsSelectForUpdate(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsStoredProcedures(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsSubqueriesInComparisons(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsSubqueriesInExists(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsSubqueriesInIns(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsSubqueriesInQuantifieds(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsTableCorrelationNames(),8,12
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsTransactionIsolationLevel(int),8,14
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsTransactions(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsUnion(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsUnionAll(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.updatesAreDetected(int),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.usesLocalFilePerTable(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.usesLocalFiles(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsSavepoints(),6,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsNamedParameters(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsMultipleOpenResults(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsGetGeneratedKeys(),7,10
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getSuperTypes(String,String,String)",13,23
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getSuperTables(String,String,String)",13,23
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getAttributes(String,String,String,String)",14,30
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsResultSetHoldability(int),8,14
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getResultSetHoldability(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getDatabaseMajorVersion(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getDatabaseMinorVersion(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getJDBCMajorVersion(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getJDBCMinorVersion(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getSQLStateType(),5,8
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.locatorsUpdateCopy(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsStatementPooling(),7,10
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getDelegate(),6,9
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.isWrapperFor(Class<>),6,7
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.unwrap(Class<T>),6,7
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.autoCommitFailureClosesAllResultSets(),10,16
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getClientInfoProperties(),9,12
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getFunctionColumns(String,String,String,String)",14,32
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getFunctions(String,String,String)",13,23
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getRowIdLifetime(),6,10
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getSchemas(String,String)",11,16
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.supportsStoredFunctionsUsingCallSyntax(),10,16
org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.generatedKeyAlwaysReturned(),7,8
"org.apache.openjpa.lib.jdbc.DelegatingDatabaseMetaData.getPseudoColumns(String,String,String,String)",16,21
org.apache.openjpa.persistence.identity.SimpleCompoundIdTestEntityId.hashCode(),4,15
org.apache.openjpa.persistence.identity.SimpleCompoundIdTestEntityId.equals(Object),7,17
"org.apache.openjpa.lib.jdbc.ReportingSQLException.ReportingSQLException(SQLException,Statement,String)",11,30
org.apache.openjpa.lib.jdbc.ReportingSQLException.getSQL(),3,6
org.apache.openjpa.lib.jdbc.ReportingSQLException.getSQLState(),7,10
org.apache.openjpa.lib.jdbc.ReportingSQLException.getErrorCode(),8,12
org.apache.openjpa.lib.jdbc.ReportingSQLException.getStatement(),6,8
org.apache.openjpa.lib.jdbc.ReportingSQLException.getIndexOfFirstFailedObject(),3,6
org.apache.openjpa.lib.jdbc.ReportingSQLException.setIndexOfFirstFailedObject(int),4,9
"org.apache.openjpa.lib.jdbc.ReportingSQLException.getExceptionMessage(SQLException,Statement,String)",10,41
org.apache.openjpa.persistence.embed.Geocode.getLatitude(),1,2
org.apache.openjpa.persistence.embed.Geocode.setLatitude(float),2,5
org.apache.openjpa.persistence.embed.Geocode.getLongtitude(),1,2
org.apache.openjpa.persistence.embed.Geocode.setLongtitude(float),2,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCLeafB1.getLeafB1Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCLeafB1.setLeafB1Data(String),4,10
org.apache.openjpa.lib.util.CodeFormat.getTabSpaces(),9,13
org.apache.openjpa.lib.util.CodeFormat.setTabSpaces(int),11,25
org.apache.openjpa.lib.util.CodeFormat.getSpaceBeforeParen(),4,7
org.apache.openjpa.lib.util.CodeFormat.setSpaceBeforeParen(boolean),5,12
org.apache.openjpa.lib.util.CodeFormat.getSpaceInParen(),4,7
org.apache.openjpa.lib.util.CodeFormat.setSpaceInParen(boolean),5,12
org.apache.openjpa.lib.util.CodeFormat.getBraceOnSameLine(),6,11
org.apache.openjpa.lib.util.CodeFormat.setBraceOnSameLine(boolean),7,16
org.apache.openjpa.lib.util.CodeFormat.getBraceAtSameTabLevel(),7,12
org.apache.openjpa.lib.util.CodeFormat.setBraceAtSameTabLevel(boolean),8,19
org.apache.openjpa.lib.util.CodeFormat.getScoreBeforeFieldName(),6,10
org.apache.openjpa.lib.util.CodeFormat.setScoreBeforeFieldName(boolean),7,17
org.apache.openjpa.lib.util.CodeFormat.getLinesBetweenSections(),5,9
org.apache.openjpa.lib.util.CodeFormat.setLinesBetweenSections(int),5,13
org.apache.openjpa.lib.util.CodeFormat.getEndl(),4,5
org.apache.openjpa.lib.util.CodeFormat.getEndl(int),10,22
"org.apache.openjpa.lib.util.CodeFormat.getEndl(int,int)",10,14
org.apache.openjpa.lib.util.CodeFormat.getAfterSection(),7,9
org.apache.openjpa.lib.util.CodeFormat.getOpenParen(boolean),8,19
org.apache.openjpa.lib.util.CodeFormat.getCloseParen(),8,12
org.apache.openjpa.lib.util.CodeFormat.getParens(),12,13
org.apache.openjpa.lib.util.CodeFormat.getOpenBrace(int),12,34
org.apache.openjpa.lib.util.CodeFormat.getCloseBrace(int),12,32
org.apache.openjpa.lib.util.CodeFormat.getExtendsDec(int),12,24
org.apache.openjpa.lib.util.CodeFormat.getImplementsDec(int),12,24
org.apache.openjpa.lib.util.CodeFormat.getThrowsDec(int),12,24
org.apache.openjpa.lib.util.CodeFormat.getTab(),6,10
org.apache.openjpa.lib.util.CodeFormat.getTab(int),12,36
org.apache.openjpa.lib.util.CodeFormat.getParametrizedType(String[]),9,28
org.apache.openjpa.lib.util.CodeFormat.getFieldName(String),9,21
org.apache.openjpa.lib.util.CodeFormat.getBuffer(),5,7
org.apache.openjpa.lib.util.CodeFormat.append(boolean),8,11
org.apache.openjpa.lib.util.CodeFormat.append(byte),8,11
org.apache.openjpa.lib.util.CodeFormat.append(char),8,11
org.apache.openjpa.lib.util.CodeFormat.append(double),8,11
org.apache.openjpa.lib.util.CodeFormat.append(float),8,11
org.apache.openjpa.lib.util.CodeFormat.append(int),8,11
org.apache.openjpa.lib.util.CodeFormat.append(long),8,11
org.apache.openjpa.lib.util.CodeFormat.append(short),8,11
org.apache.openjpa.lib.util.CodeFormat.append(Object),9,12
org.apache.openjpa.lib.util.CodeFormat.endl(),8,11
org.apache.openjpa.lib.util.CodeFormat.endl(int),9,13
"org.apache.openjpa.lib.util.CodeFormat.endl(int,int)",10,15
org.apache.openjpa.lib.util.CodeFormat.afterSection(),8,11
org.apache.openjpa.lib.util.CodeFormat.openParen(boolean),9,13
org.apache.openjpa.lib.util.CodeFormat.closeParen(),9,14
org.apache.openjpa.lib.util.CodeFormat.parens(),8,11
org.apache.openjpa.lib.util.CodeFormat.openBrace(int),10,15
org.apache.openjpa.lib.util.CodeFormat.closeBrace(int),11,18
org.apache.openjpa.lib.util.CodeFormat.extendsDec(int),10,15
org.apache.openjpa.lib.util.CodeFormat.implementsDec(int),10,15
org.apache.openjpa.lib.util.CodeFormat.throwsDec(int),10,15
org.apache.openjpa.lib.util.CodeFormat.tab(),8,11
org.apache.openjpa.lib.util.CodeFormat.tab(int),9,15
org.apache.openjpa.lib.util.CodeFormat.fieldName(String),10,17
org.apache.openjpa.lib.util.CodeFormat.clear(),5,6
org.apache.openjpa.lib.util.CodeFormat.toString(),4,7
org.apache.openjpa.lib.util.CodeFormat.length(),4,6
org.apache.openjpa.lib.util.CodeFormat.clone(),18,51
org.apache.openjpa.persistence.inheritance.entity.BaseClass5.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entity.BaseClass5.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.BaseClass5.setVersion(int),2,5
org.apache.openjpa.persistence.inheritance.entity.BaseClass5.getVersion(),1,2
org.apache.openjpa.persistence.inheritance.entity.BaseClass5.setName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.BaseClass5.getName(),2,3
org.apache.openjpa.persistence.inheritance.entity.BaseClass5.toString(),3,6
org.apache.openjpa.persistence.inheritance.entity.BaseClass5.setSubclassh(SubclassH),3,6
org.apache.openjpa.persistence.inheritance.entity.BaseClass5.getSubclassh(),2,3
org.apache.openjpa.persistence.datacache.TestConcurrentDataCache.TestConcurrentDataCache(String),5,7
org.apache.openjpa.persistence.datacache.TestConcurrentDataCache.getConfs(),22,34
org.apache.openjpa.persistence.datacache.TestConcurrentDataCache.getConfs2(),21,34
org.apache.openjpa.persistence.criteria.FemaleUser.FemaleUser(),2,2
"org.apache.openjpa.persistence.criteria.FemaleUser.FemaleUser(String,String,Address,int,int)",8,13
org.apache.openjpa.persistence.enhance.TestClone.TestClone(String),5,6
org.apache.openjpa.persistence.enhance.TestClone.setUp(),4,8
org.apache.openjpa.persistence.enhance.TestClone.testNoClone(),17,37
org.apache.openjpa.persistence.enhance.TestClone.testSubclassClone(),21,45
org.apache.openjpa.persistence.enhance.TestClone.testPCClone(),16,37
org.apache.openjpa.persistence.inheritance.serializable.Employee.getSalary(),1,2
org.apache.openjpa.persistence.inheritance.serializable.Employee.setSalary(float),2,5
org.apache.openjpa.persistence.inheritance.serializable.Employee.hashCode(),6,12
org.apache.openjpa.persistence.inheritance.serializable.Employee.equals(Object),6,14
org.apache.openjpa.persistence.enhance.identity.PageId1.PageId1(),1,1
"org.apache.openjpa.persistence.enhance.identity.PageId1.PageId1(int,BookId1)",2,5
org.apache.openjpa.persistence.enhance.identity.PageId1.getNumber(),0,0
org.apache.openjpa.persistence.enhance.identity.PageId1.setNumber(int),1,1
org.apache.openjpa.persistence.enhance.identity.PageId1.equals(Object),4,8
org.apache.openjpa.persistence.enhance.identity.PageId1.hashCode(),3,6
org.apache.openjpa.persistence.enhance.identity.PageId1.getBook(),1,3
org.apache.openjpa.persistence.enhance.identity.PageId1.setBook(BookId1),2,6
org.apache.openjpa.persistence.jdbc.auto.AutoIncrementEntity.getId(),1,1
org.apache.openjpa.persistence.datacache.common.apps.AttachB.setBstr(String),3,6
org.apache.openjpa.persistence.datacache.common.apps.AttachB.getBstr(),2,3
org.apache.openjpa.persistence.datacache.common.apps.AttachB.setBint(int),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachB.getBint(),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachB.setBdbl(double),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachB.getBdbl(),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachB.setDs(Set),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachB.getDs(),1,1
org.apache.openjpa.persistence.datacache.common.apps.AttachB.setStringIntMap(Map),3,10
org.apache.openjpa.persistence.datacache.common.apps.AttachB.getStringIntMap(),2,5
org.apache.openjpa.jdbc.schema.SchemaTool.SchemaTool(JDBCConfiguration),12,13
"org.apache.openjpa.jdbc.schema.SchemaTool.SchemaTool(JDBCConfiguration,String)",33,56
org.apache.openjpa.jdbc.schema.SchemaTool.clear(),8,13
org.apache.openjpa.jdbc.schema.SchemaTool.getAction(),4,6
org.apache.openjpa.jdbc.schema.SchemaTool.getIgnoreErrors(),10,11
org.apache.openjpa.jdbc.schema.SchemaTool.setIgnoreErrors(boolean),11,16
org.apache.openjpa.jdbc.schema.SchemaTool.getOpenJPATables(),7,10
org.apache.openjpa.jdbc.schema.SchemaTool.setOpenJPATables(boolean),8,15
org.apache.openjpa.jdbc.schema.SchemaTool.getDropTables(),6,9
org.apache.openjpa.jdbc.schema.SchemaTool.setDropTables(boolean),7,14
org.apache.openjpa.jdbc.schema.SchemaTool.getDropSequences(),7,9
org.apache.openjpa.jdbc.schema.SchemaTool.setDropSequences(boolean),8,18
org.apache.openjpa.jdbc.schema.SchemaTool.getSequences(),4,5
org.apache.openjpa.jdbc.schema.SchemaTool.setSequences(boolean),5,8
org.apache.openjpa.jdbc.schema.SchemaTool.getIndexes(),5,7
org.apache.openjpa.jdbc.schema.SchemaTool.setIndexes(boolean),6,10
org.apache.openjpa.jdbc.schema.SchemaTool.getForeignKeys(),7,9
org.apache.openjpa.jdbc.schema.SchemaTool.setForeignKeys(boolean),8,12
org.apache.openjpa.jdbc.schema.SchemaTool.getPrimaryKeys(),7,9
org.apache.openjpa.jdbc.schema.SchemaTool.setPrimaryKeys(boolean),8,12
org.apache.openjpa.jdbc.schema.SchemaTool.getWriter(),9,14
org.apache.openjpa.jdbc.schema.SchemaTool.setWriter(Writer),11,28
org.apache.openjpa.jdbc.schema.SchemaTool.setSQLTerminator(String),4,6
org.apache.openjpa.jdbc.schema.SchemaTool.getSchemaGroup(),3,5
org.apache.openjpa.jdbc.schema.SchemaTool.setSchemaGroup(SchemaGroup),4,7
org.apache.openjpa.jdbc.schema.SchemaTool.run(),17,51
org.apache.openjpa.jdbc.schema.SchemaTool.add(),9,12
org.apache.openjpa.jdbc.schema.SchemaTool.drop(),9,13
org.apache.openjpa.jdbc.schema.SchemaTool.retain(),12,16
org.apache.openjpa.jdbc.schema.SchemaTool.refresh(),17,26
org.apache.openjpa.jdbc.schema.SchemaTool.createDB(),13,19
org.apache.openjpa.jdbc.schema.SchemaTool.build(),13,19
org.apache.openjpa.jdbc.schema.SchemaTool.dropDB(),7,9
org.apache.openjpa.jdbc.schema.SchemaTool.deleteTableContents(),29,64
org.apache.openjpa.jdbc.schema.SchemaTool.record(),10,14
"org.apache.openjpa.jdbc.schema.SchemaTool.add(SchemaGroup,SchemaGroup)",54,404
"org.apache.openjpa.jdbc.schema.SchemaTool.retain(SchemaGroup,SchemaGroup,boolean,boolean)",43,246
"org.apache.openjpa.jdbc.schema.SchemaTool.drop(SchemaGroup,SchemaGroup)",59,260
org.apache.openjpa.jdbc.schema.SchemaTool.isDroppable(Table),10,22
org.apache.openjpa.jdbc.schema.SchemaTool.isDroppable(Sequence),11,22
"org.apache.openjpa.jdbc.schema.SchemaTool.findIndex(Table,Index)",9,21
"org.apache.openjpa.jdbc.schema.SchemaTool.findForeignKey(Table,ForeignKey)",11,37
"org.apache.openjpa.jdbc.schema.SchemaTool.dropTables(Collection<Table>,SchemaGroup)",21,58
org.apache.openjpa.jdbc.schema.SchemaTool.createTable(Table),12,20
org.apache.openjpa.jdbc.schema.SchemaTool.dropTable(Table),11,20
org.apache.openjpa.jdbc.schema.SchemaTool.createSequence(Sequence),13,20
org.apache.openjpa.jdbc.schema.SchemaTool.dropSequence(Sequence),12,20
"org.apache.openjpa.jdbc.schema.SchemaTool.createIndex(Index,Table)",12,19
"org.apache.openjpa.jdbc.schema.SchemaTool.createIndex(Index,Table,Unique[])",23,60
org.apache.openjpa.jdbc.schema.SchemaTool.dropIndex(Index),12,20
org.apache.openjpa.jdbc.schema.SchemaTool.addColumn(Column),12,20
org.apache.openjpa.jdbc.schema.SchemaTool.dropColumn(Column),12,20
org.apache.openjpa.jdbc.schema.SchemaTool.addPrimaryKey(PrimaryKey),12,22
org.apache.openjpa.jdbc.schema.SchemaTool.dropPrimaryKey(PrimaryKey),12,22
org.apache.openjpa.jdbc.schema.SchemaTool.addForeignKey(ForeignKey),12,22
org.apache.openjpa.jdbc.schema.SchemaTool.dropForeignKey(ForeignKey),15,29
org.apache.openjpa.jdbc.schema.SchemaTool.getDBSchemaGroup(),7,11
org.apache.openjpa.jdbc.schema.SchemaTool.setDBSchemaGroup(SchemaGroup),3,6
org.apache.openjpa.jdbc.schema.SchemaTool.getDBSchemaGroup(boolean),37,92
org.apache.openjpa.jdbc.schema.SchemaTool.assertSchemaGroup(),7,12
org.apache.openjpa.jdbc.schema.SchemaTool.executeSQL(String[]),63,135
org.apache.openjpa.jdbc.schema.SchemaTool.handleException(SQLException),16,25
org.apache.openjpa.jdbc.schema.SchemaTool.main(String[]),141,442
org.apache.openjpa.jdbc.schema.SchemaTool.main(String[]).$1.run(Options),12,18
"org.apache.openjpa.jdbc.schema.SchemaTool.run(JDBCConfiguration,String[],Options)",53,181
"org.apache.openjpa.jdbc.schema.SchemaTool.run(JDBCConfiguration,String[],Flags,ClassLoader)",75,349
org.apache.openjpa.jdbc.schema.SchemaTool.closeConnection(Connection),6,11
org.apache.openjpa.persistence.jdbc.common.apps.HorizD.setStringD(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizD.getStringD(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizD.setIntD(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizD.getIntD(),0,0
org.apache.openjpa.persistence.event.TestOrphanedKeyAction.TestOrphanedKeyAction(String),6,6
org.apache.openjpa.persistence.event.TestOrphanedKeyAction.setUp(),15,33
org.apache.openjpa.persistence.event.TestOrphanedKeyAction.testLog(),23,61
org.apache.openjpa.persistence.event.TestOrphanedKeyAction.testException(),29,69
org.apache.openjpa.persistence.event.TestOrphanedKeyAction.testNone(),22,54
org.apache.openjpa.persistence.event.TestOrphanedKeyAction.getOrphanedKeyConfiguration(String),13,31
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Generator.setPk(int),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Generator.getPk(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Generator.getPk2(),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Generator.getPk3(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Generator.getStringField(),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Generator.setStringField(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Generator.Oid.Oid(),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Generator.Oid.Oid(String),9,20
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Generator.Oid.equals(Object),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Generator.Oid.hashCode(),5,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Generator.Oid.toString(),1,2
org.apache.openjpa.jdbc.meta.TestMappingDefaultsImpl.setUp(),1,1
org.apache.openjpa.jdbc.meta.TestMappingDefaultsImpl.testPopulateWithLongColumnNames(),28,99
org.apache.openjpa.persistence.jdbc.common.apps.PerClassTestObject.setStringField(String),4,8
org.apache.openjpa.persistence.jdbc.common.apps.PerClassTestObject.getStringField(),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.StringValidator.prePersist(FlightSchedule),12,16
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.StringValidator.postPersist(FlightSchedule),11,13
org.apache.openjpa.persistence.cache.jpa.TestCacheModeInvalid.setUp(),1,1
org.apache.openjpa.persistence.cache.jpa.TestCacheModeInvalid.testInvalidElement(),37,65
org.apache.openjpa.persistence.cache.jpa.TestCacheModeInvalid.getEntityManagerFactory(),5,8
org.apache.openjpa.persistence.cache.jpa.TestCacheModeInvalid.getListener(),2,3
org.apache.openjpa.persistence.compat.Department.getFullTimeEmployees(),4,7
org.apache.openjpa.persistence.compat.Department.addEmployee(FullTimeEmployee),8,17
org.apache.openjpa.persistence.compat.Department.getPartTimeEmployees(),4,7
org.apache.openjpa.persistence.compat.Department.addEmployee(PartTimeEmployee),8,17
org.apache.openjpa.persistence.compat.Department.getName(),2,3
org.apache.openjpa.persistence.compat.Department.setName(String),3,6
org.apache.openjpa.persistence.jdbc.mapping.bidi.Child.Child(),1,1
org.apache.openjpa.persistence.jdbc.mapping.bidi.Child.getId(),0,0
org.apache.openjpa.persistence.jdbc.mapping.bidi.Child.setId(long),1,1
org.apache.openjpa.persistence.jdbc.mapping.bidi.Child.getName(),2,3
org.apache.openjpa.persistence.jdbc.mapping.bidi.Child.setName(String),3,6
org.apache.openjpa.persistence.jdbc.mapping.bidi.Child.getSeqParentId(),2,4
org.apache.openjpa.persistence.jdbc.mapping.bidi.Child.setSeqParentId(long),3,7
org.apache.openjpa.persistence.jdbc.mapping.bidi.Child.getAutoParentId(),2,4
org.apache.openjpa.persistence.jdbc.mapping.bidi.Child.setAutoParentId(long),3,7
org.apache.openjpa.persistence.jdbc.mapping.bidi.Child.getAppParentId(),2,4
org.apache.openjpa.persistence.jdbc.mapping.bidi.Child.setAppParentId(long),3,7
org.apache.openjpa.persistence.jdbc.mapping.bidi.Child.getParentIdType(int),14,25
embeddables.ContactInfo.ContactInfo(),2,2
"embeddables.ContactInfo.ContactInfo(Address,Phone)",5,8
embeddables.ContactInfo.toString(),4,8
"org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.ConcurrentHashMap(int,float)",21,85
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.ConcurrentHashMap(int),15,30
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.ConcurrentHashMap(),9,16
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.ConcurrentHashMap(Map),20,42
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.maskNull(Object),6,13
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.unmaskNull(Object),8,13
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.hash(Object),4,8
"org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.eq(Object,Object)",6,7
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.capacity(),6,12
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.loadFactor(),4,11
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.getMaxSize(),2,4
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.setMaxSize(int),7,23
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.isFull(),4,8
"org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.overflowRemoved(Object,Object)",5,6
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.size(),6,11
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.isEmpty(),8,13
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.get(Object),21,51
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.containsKey(Object),11,23
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.getEntry(Object),15,35
"org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.put(Object,Object)",28,84
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.removeOverflow(int),12,24
"org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.putIfAbsent(Object,Object)",17,40
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.resize(int),26,65
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.putAll(Map),29,51
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.remove(Object),15,33
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.removeEntryForKey(Object),18,45
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.removeMapping(Object),16,42
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.clear(),7,8
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.randomEntryIndex(),7,17
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.removeRandom(),8,23
"org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.findEntry(int,boolean,boolean)",10,27
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.randomEntryIterator(),12,19
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.containsValue(Object),16,34
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.containsNullValue(),9,15
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.clone(),13,19
"org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.createEntry(int,Object,Object,Entry)",3,7
"org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.Entry.Entry(int,Object,Object,Entry)",6,9
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.Entry.getKey(),3,4
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.Entry.getValue(),2,3
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.Entry.setValue(Object),3,11
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.Entry.equals(Object),6,18
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.Entry.hashCode(),4,11
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.Entry.toString(),3,4
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.Entry.clone(),11,11
"org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.HashIterator.HashIterator(int,int)",5,14
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.HashIterator.hasNext(),6,22
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.HashIterator.next(),10,13
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.HashIterator.remove(),17,35
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.keySet(),24,49
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.KeySet.iterator(),5,7
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.KeySet.size(),1,2
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.KeySet.contains(Object),3,4
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.KeySet.remove(Object),7,8
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.KeySet.clear(),3,3
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.values(),23,45
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.Values.iterator(),5,7
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.Values.size(),1,2
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.Values.contains(Object),3,4
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.Values.clear(),3,3
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.entrySet(),26,56
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.EntrySet.iterator(),5,7
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.EntrySet.contains(Object),7,15
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.EntrySet.remove(Object),3,4
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.EntrySet.size(),1,2
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.EntrySet.clear(),3,3
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.writeObject(ObjectOutputStream),39,89
org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap.readObject(ObjectInputStream),30,63
"org.apache.openjpa.kernel.OpCallbacks.processArgument(int,Object,OpenJPAStateManager)",22,33
org.apache.openjpa.lib.log.SLF4JLogFactory.newLogAdapter(String),6,12
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.LogAdapter(Logger),4,6
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.getDelegate(),3,3
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.isTraceEnabled(),3,5
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.isDebugEnabled(),6,10
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.isInfoEnabled(),3,5
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.isWarnEnabled(),3,5
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.isErrorEnabled(),3,5
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.isFatalEnabled(),7,12
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.trace(Object),4,6
"org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.trace(Object,Throwable)",5,7
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.debug(Object),7,11
"org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.debug(Object,Throwable)",8,12
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.info(Object),4,6
"org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.info(Object,Throwable)",5,7
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.warn(Object),4,6
"org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.warn(Object,Throwable)",5,7
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.error(Object),4,6
"org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.error(Object,Throwable)",5,7
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.fatal(Object),8,13
"org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.fatal(Object,Throwable)",9,14
org.apache.openjpa.lib.log.SLF4JLogFactory.LogAdapter.objectToString(Object),2,6
org.apache.openjpa.persistence.common.apps.Part.getId(),0,0
org.apache.openjpa.persistence.common.apps.Part.getPartName(),2,3
org.apache.openjpa.persistence.common.apps.Part.setPartName(String),3,6
org.apache.openjpa.persistence.common.apps.Part.getShirt(),1,3
org.apache.openjpa.persistence.common.apps.Part.setShirt(Shirt),2,6
org.apache.openjpa.persistence.criteria.Magazine.getId(),0,0
org.apache.openjpa.persistence.criteria.Magazine.setId(int),1,1
org.apache.openjpa.persistence.criteria.Magazine.getName(),2,3
org.apache.openjpa.persistence.criteria.Magazine.setName(String),3,6
org.apache.openjpa.persistence.criteria.Magazine.getIdPublisher(),1,3
org.apache.openjpa.persistence.criteria.Magazine.setIdPublisher(Publisher),2,6
org.apache.openjpa.persistence.criteria.Magazine.getDatePublished(),2,5
org.apache.openjpa.persistence.criteria.Magazine.setDatePublished(Date),3,10
org.apache.openjpa.persistence.criteria.Magazine.toString(),2,3
org.apache.openjpa.integration.validation.TestMappedSuper.testMappedSuperXMLConstraint(),41,87
"org.apache.openjpa.integration.validation.TestMappedSuper.checkCVE(ConstraintViolationException,String)",21,54
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Department2.getDeptId(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Department2.setDeptId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Department2.getEmpMap(),3,7
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Department2.setEmpMap(Map<EmployeePK2,Employee2>)",4,12
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Department2.addEmployee(Employee2),4,9
org.apache.openjpa.persistence.inheritance.TestSharedUnqualifiedClassNames.setUp(),15,39
org.apache.openjpa.persistence.inheritance.TestSharedUnqualifiedClassNames.testMappedSuperclass(),21,29
org.apache.openjpa.persistence.inheritance.TestSharedUnqualifiedClassNames.testEmbeddable(),20,28
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCLeafD2.getLeafD2Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCLeafD2.setLeafD2Data(String),4,10
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest2.RuntimeTest2(),2,2
"org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest2.RuntimeTest2(String,int)",4,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest2.getIntField2(),1,2
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest2.setIntField2(int),2,5
"org.apache.openjpa.persistence.query.LessEqualExpression.LessEqualExpression(Expression,Expression)",6,11
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.XMLSchemaSerializer(JDBCConfiguration),10,17
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.getTables(),4,8
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.addTable(Table),3,8
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.removeTable(Table),3,7
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.getSequences(),5,8
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.addSequence(Sequence),4,8
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.removeSequence(Sequence),4,7
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.addAll(Schema),8,22
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.addAll(SchemaGroup),4,9
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.removeAll(Schema),9,26
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.removeAll(SchemaGroup),5,12
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.clear(),2,2
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.getObjects(),10,21
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serialize(Collection),27,88
"org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serializeSchema(String,Collection<>)",29,54
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serializeSequence(Sequence),15,48
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serializeTable(Table),26,73
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serializeColumn(Column),26,86
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serializePrimaryKey(PrimaryKey),16,39
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serializeIndex(Index),16,41
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serializeUnique(Unique),17,43
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serializeForeignKey(ForeignKey),27,125
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serializeOn(Column),11,16
"org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serializeJoin(Column,Column)",13,25
"org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serializeJoin(Object,Column)",17,26
"org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.serializeJoin(Column,Object)",18,28
org.apache.openjpa.jdbc.schema.XMLSchemaSerializer.stringifyConstant(Object),6,14
org.apache.openjpa.kernel.UUIDStringSeq.getInstance(),5,7
org.apache.openjpa.kernel.UUIDStringSeq.UUIDStringSeq(),5,5
org.apache.openjpa.kernel.UUIDStringSeq.setType(int),2,3
"org.apache.openjpa.kernel.UUIDStringSeq.next(StoreContext,ClassMetaData)",10,13
"org.apache.openjpa.kernel.UUIDStringSeq.current(StoreContext,ClassMetaData)",7,8
"org.apache.openjpa.kernel.UUIDStringSeq.allocate(int,StoreContext,ClassMetaData)",7,8
org.apache.openjpa.kernel.UUIDStringSeq.close(),1,1
org.apache.openjpa.kernel.exps.Min.Min(Val),6,8
org.apache.openjpa.kernel.exps.Min.getType(Class),1,1
"org.apache.openjpa.kernel.exps.Min.operate(Collection,Class)",9,22
org.apache.openjpa.persistence.delimited.identifiers.EntityH.EntityH(),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityH.EntityH(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityH.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityH.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityH.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityH.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.EntityH.getSecName(),3,7
org.apache.openjpa.persistence.delimited.identifiers.EntityH.setSecName(String),5,16
org.apache.openjpa.persistence.delimited.identifiers.EntityH.getEntityIs(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityH.setEntityIs(Collection<EntityI>),4,11
org.apache.openjpa.persistence.delimited.identifiers.EntityH.addEntityI(EntityI),2,7
org.apache.openjpa.persistence.delimited.identifiers.EntityH.getEntityI2(),1,4
org.apache.openjpa.persistence.delimited.identifiers.EntityH.setEntityI2(EntityI2),3,10
org.apache.openjpa.persistence.delimited.identifiers.EntityH.getMap(),2,6
"org.apache.openjpa.persistence.delimited.identifiers.EntityH.setMap(Map<EntityI3,EntityI4>)",4,12
"org.apache.openjpa.persistence.delimited.identifiers.EntityH.addMapValues(EntityI3,EntityI4)",6,10
org.apache.openjpa.persistence.delimited.identifiers.EntityH.getMap2(),2,6
"org.apache.openjpa.persistence.delimited.identifiers.EntityH.setMap2(Map<EntityI4,EntityI3>)",4,12
"org.apache.openjpa.persistence.delimited.identifiers.EntityH.addMap2Values(EntityI4,EntityI3)",6,10
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.DelegatingJDBCFetchConfiguration(JDBCFetchConfiguration),7,12
"org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.DelegatingJDBCFetchConfiguration(JDBCFetchConfiguration,RuntimeExceptionTranslator)",11,19
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.getJDBCDelegate(),4,11
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.getEagerFetchMode(),8,11
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.setEagerFetchMode(int),10,18
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.getSubclassFetchMode(),8,11
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.getSubclassFetchMode(ClassMapping),10,14
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.setSubclassFetchMode(int),10,18
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.getResultSetType(),8,11
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.setResultSetType(int),10,18
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.getFetchDirection(),7,9
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.setFetchDirection(int),9,16
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.getLRSSize(),7,9
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.setLRSSize(int),10,18
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.getJoinSyntax(),7,9
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.setJoinSyntax(int),10,16
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.getJoins(),7,8
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.hasJoin(String),8,10
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.addJoin(String),11,15
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.addJoins(Collection),11,15
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.removeJoin(String),11,15
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.removeJoins(Collection),11,15
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.clearJoins(),8,10
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.getIsolation(),6,7
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.setIsolation(int),10,14
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.traverseJDBC(FieldMetaData),11,15
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.getFetchInnerJoins(),9,12
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.hasFetchInnerJoin(String),10,14
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.addFetchInnerJoin(String),12,19
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.addFetchInnerJoins(Collection),12,19
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.setIgnoreDfgForFkSelect(boolean),9,13
org.apache.openjpa.jdbc.kernel.DelegatingJDBCFetchConfiguration.getIgnoreDfgForFkSelect(),8,11
org.apache.openjpa.persistence.query.SomeExpression.SomeExpression(QueryDefinitionImpl),8,9
"org.apache.openjpa.meta.NonPersistentMetaData.NonPersistentMetaData(Class,MetaDataRepository,int)",7,14
org.apache.openjpa.meta.NonPersistentMetaData.getRepository(),4,5
org.apache.openjpa.meta.NonPersistentMetaData.getDescribedType(),2,2
org.apache.openjpa.meta.NonPersistentMetaData.getType(),2,4
org.apache.openjpa.meta.NonPersistentMetaData.getListingIndex(),7,12
org.apache.openjpa.meta.NonPersistentMetaData.setListingIndex(int),9,16
org.apache.openjpa.meta.NonPersistentMetaData.getSourceFile(),3,5
org.apache.openjpa.meta.NonPersistentMetaData.getSourceScope(),3,3
org.apache.openjpa.meta.NonPersistentMetaData.getSourceType(),3,4
"org.apache.openjpa.meta.NonPersistentMetaData.setSource(File,int)",5,13
org.apache.openjpa.meta.NonPersistentMetaData.getLineNumber(),2,3
org.apache.openjpa.meta.NonPersistentMetaData.setLineNumber(int),3,8
org.apache.openjpa.meta.NonPersistentMetaData.getColNumber(),2,3
org.apache.openjpa.meta.NonPersistentMetaData.setColNumber(int),3,8
org.apache.openjpa.meta.NonPersistentMetaData.getResourceName(),3,4
org.apache.openjpa.meta.NonPersistentMetaData.getComments(),5,8
org.apache.openjpa.meta.NonPersistentMetaData.setComments(String[]),3,6
org.apache.openjpa.meta.NonPersistentMetaData.compareTo(Object),8,20
"org.apache.openjpa.jdbc.sql.Join.Join(Table,int,Table,int,ForeignKey,boolean)",10,24
org.apache.openjpa.jdbc.sql.Join.Join(),2,2
org.apache.openjpa.jdbc.sql.Join.getType(),1,2
org.apache.openjpa.jdbc.sql.Join.setType(int),2,5
org.apache.openjpa.jdbc.sql.Join.getAlias1(),4,6
org.apache.openjpa.jdbc.sql.Join.getAlias2(),4,6
org.apache.openjpa.jdbc.sql.Join.getIndex1(),2,2
org.apache.openjpa.jdbc.sql.Join.getIndex2(),2,2
org.apache.openjpa.jdbc.sql.Join.getTable1(),1,3
org.apache.openjpa.jdbc.sql.Join.getTable2(),1,3
org.apache.openjpa.jdbc.sql.Join.getForeignKey(),2,4
org.apache.openjpa.jdbc.sql.Join.isForeignKeyInversed(),4,4
org.apache.openjpa.jdbc.sql.Join.getRelationTarget(),5,8
org.apache.openjpa.jdbc.sql.Join.getSubclasses(),9,10
org.apache.openjpa.jdbc.sql.Join.getRelationJoins(),4,9
"org.apache.openjpa.jdbc.sql.Join.setRelation(ClassMapping,int,Joins)",14,24
org.apache.openjpa.jdbc.sql.Join.reverse(),10,40
org.apache.openjpa.jdbc.sql.Join.hashCode(),3,4
org.apache.openjpa.jdbc.sql.Join.equals(Object),4,13
org.apache.openjpa.jdbc.sql.Join.toString(),11,31
org.apache.openjpa.jdbc.sql.Join.clone(),3,4
org.apache.openjpa.jdbc.sql.Join.isCorrelated(),1,2
org.apache.openjpa.jdbc.sql.Join.setCorrelated(),2,3
org.apache.openjpa.jdbc.sql.Join.isNotMyJoin(),1,2
org.apache.openjpa.jdbc.sql.Join.setIsNotMyJoin(),2,3
org.apache.openjpa.persistence.inheritance.entity.SubclassG.setClassGName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.SubclassG.getClassGName(),2,3
org.apache.openjpa.persistence.inheritance.entity.SubclassG.toString(),4,9
org.apache.openjpa.persistence.inheritance.entity.SubclassG.getIntFieldSup(),2,4
org.apache.openjpa.persistence.inheritance.entity.SubclassG.setIntFieldSup(int),3,5
org.apache.openjpa.lib.util.TestMultiClassLoader.TestMultiClassLoader(String),4,6
org.apache.openjpa.lib.util.TestMultiClassLoader.setUp(),6,13
org.apache.openjpa.lib.util.TestMultiClassLoader.testBasic(),17,150
org.apache.openjpa.lib.util.TestMultiClassLoader.testGetResource(),7,16
org.apache.openjpa.lib.util.TestMultiClassLoader.suite(),4,7
org.apache.openjpa.lib.util.TestMultiClassLoader.main(String[]),7,7
org.apache.openjpa.lib.util.TestMultiClassLoader.FooLoader.findClass(String),7,11
org.apache.openjpa.lib.util.TestMultiClassLoader.FooLoader.findResource(String),9,11
"org.apache.openjpa.kernel.exps.Cast.Cast(Val,Class)",6,14
org.apache.openjpa.kernel.exps.Cast.getType(),2,2
org.apache.openjpa.kernel.exps.Cast.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.Cast.eval(Object,Object,StoreContext,Object[])",12,20
"org.apache.openjpa.kernel.exps.Cast.eval(Collection,Object,StoreContext,Object[])",22,41
org.apache.openjpa.kernel.exps.Cast.acceptVisit(ExpressionVisitor),7,13
"org.apache.openjpa.persistence.GeneratorImpl.GeneratorImpl(Seq,String,StoreContext,ClassMetaData)",17,28
org.apache.openjpa.persistence.GeneratorImpl.getDelegate(),2,5
org.apache.openjpa.persistence.GeneratorImpl.getName(),2,3
org.apache.openjpa.persistence.GeneratorImpl.next(),4,4
org.apache.openjpa.persistence.GeneratorImpl.current(),5,6
org.apache.openjpa.persistence.GeneratorImpl.allocate(int),5,7
org.apache.openjpa.persistence.GeneratorImpl.hashCode(),3,6
org.apache.openjpa.persistence.GeneratorImpl.equals(Object),5,8
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.EntityA(),1,1
"org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.EntityA(int,String)",3,5
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.getSecName(),3,7
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.setSecName(String),5,16
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.getDelimSet(),3,6
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.setDelimSet(Set<String>),4,13
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.addDelimSet(String),5,9
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.getDelimMap(),4,10
"org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.setDelimMap(Map<String,String>)",6,20
"org.apache.openjpa.persistence.delimited.identifiers.xml.EntityA.addDelimMap(String,String)",6,11
"org.apache.openjpa.jdbc.kernel.exps.SubQ.SubQ(ClassMapping,boolean,String)",22,36
org.apache.openjpa.jdbc.kernel.exps.SubQ.getSelect(),2,3
org.apache.openjpa.jdbc.kernel.exps.SubQ.getCandidate(),4,6
org.apache.openjpa.jdbc.kernel.exps.SubQ.getSubs(),1,2
org.apache.openjpa.jdbc.kernel.exps.SubQ.setSubqAlias(String),4,10
org.apache.openjpa.jdbc.kernel.exps.SubQ.getSubqAlias(),3,5
org.apache.openjpa.jdbc.kernel.exps.SubQ.getType(),6,16
org.apache.openjpa.jdbc.kernel.exps.SubQ.setImplicitType(Class),6,16
org.apache.openjpa.jdbc.kernel.exps.SubQ.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.SubQ.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.SubQ.getCandidateAlias(),4,5
org.apache.openjpa.jdbc.kernel.exps.SubQ.setQueryExpressions(QueryExpressions),7,13
"org.apache.openjpa.jdbc.kernel.exps.SubQ.initialize(Select,ExpContext,int)",18,32
"org.apache.openjpa.jdbc.kernel.exps.SubQ.toDataStoreValue(Select,ExpContext,ExpState,Object)",17,39
"org.apache.openjpa.jdbc.kernel.exps.SubQ.select(Select,ExpContext,ExpState,boolean)",7,13
"org.apache.openjpa.jdbc.kernel.exps.SubQ.selectColumns(Select,ExpContext,ExpState,boolean)",9,15
"org.apache.openjpa.jdbc.kernel.exps.SubQ.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.SubQ.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.SubQ.newSQLBuffer(Select,ExpContext,ExpState)",11,23
"org.apache.openjpa.jdbc.kernel.exps.SubQ.load(ExpContext,ExpState,Result)",15,19
"org.apache.openjpa.jdbc.kernel.exps.SubQ.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",17,58
"org.apache.openjpa.jdbc.kernel.exps.SubQ.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.SubQ.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",9,16
"org.apache.openjpa.jdbc.kernel.exps.SubQ.appendTo(Select,ExpContext,ExpState,SQLBuffer,int,boolean)",27,52
"org.apache.openjpa.jdbc.kernel.exps.SubQ.appendIsEmpty(Select,ExpContext,ExpState,SQLBuffer)",10,18
"org.apache.openjpa.jdbc.kernel.exps.SubQ.appendIsNotEmpty(Select,ExpContext,ExpState,SQLBuffer)",10,18
"org.apache.openjpa.jdbc.kernel.exps.SubQ.appendSize(Select,ExpContext,ExpState,SQLBuffer)",9,15
org.apache.openjpa.jdbc.kernel.exps.SubQ.acceptVisit(ExpressionVisitor),10,41
org.apache.openjpa.kernel.exps.IsEmptyExpression.IsEmptyExpression(Val),9,12
"org.apache.openjpa.kernel.exps.IsEmptyExpression.eval(Object,Object,StoreContext,Object[])",13,29
"org.apache.openjpa.kernel.exps.IsEmptyExpression.eval(Collection,StoreContext,Object[])",13,29
org.apache.openjpa.kernel.exps.IsEmptyExpression.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.persistence.delimited.identifiers.EntityA.EntityA(),1,1
"org.apache.openjpa.persistence.delimited.identifiers.EntityA.EntityA(int,String)",3,5
org.apache.openjpa.persistence.delimited.identifiers.EntityA.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityA.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityA.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityA.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.EntityA.getSecName(),3,7
org.apache.openjpa.persistence.delimited.identifiers.EntityA.setSecName(String),5,16
org.apache.openjpa.persistence.delimited.identifiers.EntityA.getCollectionSet(),3,8
org.apache.openjpa.persistence.delimited.identifiers.EntityA.setCollectionSet(Set<String>),4,17
org.apache.openjpa.persistence.delimited.identifiers.EntityA.addCollectionSet(String),6,15
org.apache.openjpa.persistence.delimited.identifiers.EntityA.getCollectionDelimSet(),4,8
org.apache.openjpa.persistence.delimited.identifiers.EntityA.setCollectionDelimSet(Set<String>),4,15
org.apache.openjpa.persistence.delimited.identifiers.EntityA.addCollectionDelimSet(String),6,11
org.apache.openjpa.persistence.delimited.identifiers.EntityA.getDelimCollectionMap(),4,12
"org.apache.openjpa.persistence.delimited.identifiers.EntityA.setDelimCollectionMap(Map<String,String>)",6,24
"org.apache.openjpa.persistence.delimited.identifiers.EntityA.addDelimCollectionMap(String,String)",7,13
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedIdentifiers.setUp(),19,29
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedIdentifiers.tearDown(),3,4
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedIdentifiers.createEMF(Object),12,15
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedIdentifiers.createEntityA(int),12,33
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedIdentifiers.testTableName(),12,24
org.apache.openjpa.persistence.delimited.identifiers.xml.Chevrolet.Chevrolet(),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.Chevrolet.Chevrolet(int),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.AnnoTest1(),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.AnnoTest1(long),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setPk(Long),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getPk(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getVersion(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setBasic(int),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getBasic(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setTransient(int),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getTransient(),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setOtherTableBasic(int),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getOtherTableBasic(),2,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setSelfOneOne(AnnoTest1),4,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getSelfOneOne(),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setPKJoinSelfOneOne(AnnoTest1),5,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getPKJoinSelfOneOne(),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setOneOne(AnnoTest2),3,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getOneOne(),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setOtherTableOneOne(AnnoTest2),4,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getOtherTableOneOne(),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setInverseOwnerOneOne(AnnoTest2),5,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getInverseOwnerOneOne(),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setBlob(byte[]),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getBlob(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setSerialized(Object),4,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getSerialized(),3,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setClob(String),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getClob(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getEnumeration(),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setEnumeration(InheritanceType),5,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getOrdinalEnumeration(),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setOrdinalEnumeration(InheritanceType),6,9
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getStringEnumeration(),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setStringEnumeration(InheritanceType),6,9
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getOneMany(),3,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getInverseOwnerOneMany(),5,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getManyMany(),3,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getInverseOwnerManyMany(),5,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getDefaultMapKey(),4,7
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setDefaultMapKey(Map<Integer,Flat1>)",5,12
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getNamedMapKey(),5,9
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setNamedMapKey(Map<Integer,Flat1>)",6,16
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.getInverseOwnerMapKey(),7,12
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1.setInverseOwnerMapKey(Map<String,AnnoTest2>)",8,21
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue.setBasic(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue.getBasic(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue.setClob(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue.getClob(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue.setBlob(byte[]),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue.getBlob(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue.setOwner(EmbedOwner),3,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue.getOwner(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityD4.EntityD4(),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityD4.EntityD4(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityD4.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityD4.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityD4.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityD4.setName(String),4,10
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TablePerClass2.setBasic2(String),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TablePerClass2.getBasic2(),2,3
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.getEagerFetchMode(),8,15
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.setEagerFetchMode(int),10,21
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.getSubclassFetchMode(),8,15
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.getSubclassFetchMode(ClassMapping),7,10
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.setSubclassFetchMode(int),10,21
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.getResultSetType(),10,19
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.setResultSetType(int),12,24
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.getFetchDirection(),11,16
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.setFetchDirection(int),12,21
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.getLRSSize(),10,14
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.setLRSSize(int),12,20
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.getJoinSyntax(),2,4
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.setJoinSyntax(int),6,9
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.getJoins(),12,15
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.hasJoin(String),5,6
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.addJoin(String),17,22
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.addJoins(Collection<String>),19,23
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.removeJoin(String),15,19
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.removeJoins(Collection<String>),18,20
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.clearJoins(),11,11
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.getIsolation(),26,46
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.setIsolation(int),27,51
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.traverseJDBC(FieldMetaData),14,15
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.getFetchInnerJoins(),14,19
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.hasFetchInnerJoin(String),7,10
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.addFetchInnerJoin(String),18,24
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.addFetchInnerJoins(Collection<String>),20,25
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.getIgnoreDfgForFkSelect(),16,31
org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration.setIgnoreDfgForFkSelect(boolean),17,32
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testNothingUsingCriteria(),10,21
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testBetween(),15,35
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testNotBetween(),15,35
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testInExpr(),15,32
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testNotIn(),14,31
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testLike1(),16,42
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testLike2(),17,44
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testLike3(),12,28
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testLikeWithEscapeCharacter(),17,42
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testLikeWithEscapeCharacter().$1.decorate(Query),5,5
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testNullExpression(),15,37
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testNullExpr2UsingCriteria(),16,35
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testIsEmptyExprUsingCriteria(),15,34
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testConstructorExprUsingCriteria(),26,65
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testConcatSubStringFunc1(),20,48
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testConcatSubStringFunc2(),22,59
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testConcatSubStringFunc3(),20,45
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testConcatSubStringFunc4(),22,56
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testConcatFunc(),17,30
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testTrimFunc1(),17,35
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testTrimFunc2(),17,35
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testLowerFunc1(),17,35
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testLowerFunc2(),17,35
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testUpperFunc1(),15,35
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testUpperFunc2(),17,35
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testLengthFunc(),16,36
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testArithmFunc1(),18,35
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testArithmFunc2(),17,33
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testArithmFunc3(),18,35
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testArithmFunc4(),16,33
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testGroupByHavingClause(),12,33
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testOrderByClause(),13,34
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testAVGAggregFunc(),19,33
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testCOUNTAggregFunc(),14,27
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testMAXAggregFunc(),16,31
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testMINAggregFunc(),16,31
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testSUMAggregFunc(),15,29
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testTypeExpression1(),18,41
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testTypeExpression1().$2.decorate(Query),7,10
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testTypeExpression2(),21,40
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testTypeExpression2().$3.decorate(Query),6,6
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testTypeExpression3(),16,35
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testTypeExpression4(),15,32
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testTypeExpression5(),14,30
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testTypeExpression6(),15,35
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testTypeExpression7(),12,18
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testTypeExpression8(),14,19
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testTypeExpression9(),16,33
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testCoalesceExpressions(),20,45
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testNullIfExpressions(),19,42
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testSimpleCaseExpression1(),23,54
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testSimpleCaseExpression2(),23,62
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testSimpleCaseExpression3(),20,48
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testSimpleCaseExpression4(),19,45
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testGeneralCaseExpression1(),19,57
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testGeneralCaseExpression2(),23,57
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testGeneralCaseExpression3(),26,85
org.apache.openjpa.persistence.criteria.TestTypeSafeCondExpression.testGeneralCaseExpression4(),29,124
"org.apache.openjpa.jdbc.meta.QueryResultMapping.QueryResultMapping(String,MappingRepository)",8,14
org.apache.openjpa.jdbc.meta.QueryResultMapping.getName(),4,6
org.apache.openjpa.jdbc.meta.QueryResultMapping.getDefiningType(),6,6
org.apache.openjpa.jdbc.meta.QueryResultMapping.setDefiningType(Class<>),8,9
org.apache.openjpa.jdbc.meta.QueryResultMapping.getColumnResults(),19,31
org.apache.openjpa.jdbc.meta.QueryResultMapping.addColumnResult(Object),17,29
org.apache.openjpa.jdbc.meta.QueryResultMapping.getPCResults(),11,23
org.apache.openjpa.jdbc.meta.QueryResultMapping.addPCResult(Class<>),10,22
org.apache.openjpa.jdbc.meta.QueryResultMapping.getSourceMode(),4,7
org.apache.openjpa.jdbc.meta.QueryResultMapping.setSourceMode(int),5,10
org.apache.openjpa.jdbc.meta.QueryResultMapping.getListingIndex(),7,7
org.apache.openjpa.jdbc.meta.QueryResultMapping.setListingIndex(int),8,10
org.apache.openjpa.jdbc.meta.QueryResultMapping.toString(),2,3
org.apache.openjpa.jdbc.meta.QueryResultMapping.getComments(),3,6
org.apache.openjpa.jdbc.meta.QueryResultMapping.setComments(String[]),3,6
org.apache.openjpa.jdbc.meta.QueryResultMapping.getSourceFile(),2,4
org.apache.openjpa.jdbc.meta.QueryResultMapping.getSourceScope(),3,4
org.apache.openjpa.jdbc.meta.QueryResultMapping.getSourceType(),3,4
"org.apache.openjpa.jdbc.meta.QueryResultMapping.setSource(File,Object,int)",7,16
org.apache.openjpa.jdbc.meta.QueryResultMapping.getResourceName(),3,6
org.apache.openjpa.jdbc.meta.QueryResultMapping.getLineNumber(),2,3
org.apache.openjpa.jdbc.meta.QueryResultMapping.setLineNumber(int),3,8
org.apache.openjpa.jdbc.meta.QueryResultMapping.getColNumber(),2,3
org.apache.openjpa.jdbc.meta.QueryResultMapping.setColNumber(int),3,8
org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.PCResult(Class<>),5,8
org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.getCandidateType(),3,5
org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.getCandidateTypeMapping(),5,15
org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.getMappingPaths(),16,28
org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.getMapping(String),10,16
"org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.addMapping(String,Object)",21,36
"org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.map(List<MetaDataContext>,Object,Joins)",29,59
"org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.hasEager(List<MetaDataContext>,FieldMapping)",29,52
org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.getExcludes(List<MetaDataContext>),19,31
org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.resolve(),23,40
"org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.resolveMapping(String,Object)",66,222
"org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.addComplexColumnMapping(FieldMapping,List<MetaDataContext>,Column,Object)",22,47
"org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.assertSingleColumn(Column[],String)",23,30
"org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.recordEager(ClassMapping,List<MetaDataContext>,FieldMapping)",22,77
"org.apache.openjpa.jdbc.meta.QueryResultMapping.PCResult.recordIncluded(ClassMapping,List<MetaDataContext>,FieldMapping)",20,53
org.apache.openjpa.jdbc.meta.QueryResultMapping.FetchInfo.FetchInfo(ClassMapping),14,27
org.apache.openjpa.jdbc.meta.QueryResultMapping.ColumnMap.map(Column),7,8
org.apache.openjpa.jdbc.meta.QueryResultMapping.SingleColumnMap.SingleColumnMap(Object),4,4
org.apache.openjpa.jdbc.meta.QueryResultMapping.SingleColumnMap.map(Column),4,4
org.apache.openjpa.jdbc.meta.QueryResultMapping.SingleColumnMap.toString(),1,3
org.apache.openjpa.jdbc.meta.QueryResultMapping.MultiColumnMap.MultiColumnMap(Column[]),9,13
org.apache.openjpa.jdbc.meta.QueryResultMapping.MultiColumnMap.map(Column),8,12
"org.apache.openjpa.jdbc.meta.QueryResultMapping.MultiColumnMap.set(Column,Object)",8,11
org.apache.openjpa.jdbc.meta.QueryResultMapping.MultiColumnMap.toString(),5,6
org.apache.openjpa.lib.log.CommonsLogFactory.CommonsLogFactory(),6,11
org.apache.openjpa.lib.log.CommonsLogFactory.newLogAdapter(String),10,15
org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.LogAdapter(org.apache.commons.logging.Log),7,10
org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.getDelegate(),6,7
org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.isErrorEnabled(),3,5
org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.isFatalEnabled(),3,5
org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.isInfoEnabled(),3,5
org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.isTraceEnabled(),3,5
org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.isWarnEnabled(),3,5
org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.trace(Object),3,4
"org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.trace(Object,Throwable)",4,5
org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.info(Object),3,4
"org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.info(Object,Throwable)",4,5
org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.warn(Object),3,4
"org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.warn(Object,Throwable)",4,5
org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.error(Object),3,4
"org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.error(Object,Throwable)",4,5
org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.fatal(Object),3,4
"org.apache.openjpa.lib.log.CommonsLogFactory.LogAdapter.fatal(Object,Throwable)",4,5
org.apache.openjpa.lib.util.LRUMap.LRUMap(),2,2
org.apache.openjpa.lib.util.LRUMap.LRUMap(int),4,6
"org.apache.openjpa.lib.util.LRUMap.LRUMap(int,float)",6,10
org.apache.openjpa.lib.util.LRUMap.LRUMap(Map),2,5
org.apache.openjpa.lib.util.LRUMap.getMaxSize(),2,4
org.apache.openjpa.lib.util.LRUMap.setMaxSize(int),13,24
"org.apache.openjpa.lib.util.LRUMap.overflowRemoved(Object,Object)",5,6
org.apache.openjpa.lib.util.LRUMap.maxSize(),2,6
org.apache.openjpa.lib.util.LRUMap.isFull(),2,3
org.apache.openjpa.lib.util.LRUMap.removeLRU(LinkEntry),8,14
org.apache.openjpa.lib.util.LRUMap.doWriteObject(ObjectOutputStream),6,10
org.apache.openjpa.lib.util.LRUMap.doReadObject(ObjectInputStream),7,12
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappedQueryResultObjectProvider(QueryResultMapping,JDBCStore,JDBCFetchConfiguration,Result)",16,37
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.supportsRandomAccess(),5,8
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.open(),0,0
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.getResultObject(),23,69
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.next(),3,3
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.absolute(int),5,7
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.size(),14,18
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.reset(),3,3
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.close(),2,3
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.handleCheckedException(Exception),7,15
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.MappingResult(Result),6,9
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.load(QueryResultMapping.PCResult,JDBCStore,JDBCFetchConfiguration)",15,27
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.load(ClassMapping,JDBCStore,JDBCFetchConfiguration)",9,17
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.load(ClassMapping,JDBCStore,JDBCFetchConfiguration,Joins)",16,35
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getEager(FieldMapping),8,15
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.putEager(FieldMapping,Object)",6,10
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.close(),2,3
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.newJoins(),2,4
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.supportsRandomAccess(),6,9
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getBaseMapping(),3,6
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.size(),4,5
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.startDataRequest(Object),7,8
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.endDataRequest(),4,4
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.wasNull(),3,3
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.translate(Object,Joins)",6,11
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.absoluteInternal(int),6,8
org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.nextInternal(),4,4
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.containsInternal(Object,Joins)",9,13
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getArrayInternal(Object,Joins)",9,19
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getAsciiStreamInternal(Object,Joins)",11,23
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getBigDecimalInternal(Object,Joins)",9,19
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getNumberInternal(Object,Joins)",8,15
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getBigIntegerInternal(Object,Joins)",9,19
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getBinaryStreamInternal(Object,Joins)",11,23
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getBlobInternal(Object,Joins)",9,19
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getBooleanInternal(Object,Joins)",8,15
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getByteInternal(Object,Joins)",8,15
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getBytesInternal(Object,Joins)",9,18
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getCalendarInternal(Object,Joins)",9,19
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getCharInternal(Object,Joins)",8,15
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getCharacterStreamInternal(Object,Joins)",11,22
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getClobInternal(Object,Joins)",9,19
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getDateInternal(Object,Joins)",9,19
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getDateInternal(Object,Calendar,Joins)",12,25
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getDoubleInternal(Object,Joins)",8,15
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getFloatInternal(Object,Joins)",8,15
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getIntInternal(Object,Joins)",8,15
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getLocaleInternal(Object,Joins)",9,19
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getLongInternal(Object,Joins)",8,15
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getObjectInternal(Object,int,Object,Joins)",20,60
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getSQLObjectInternal(Object,Map,Joins)",9,26
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getStreamInternal(JDBCStore,Object,int,Object,Joins)",15,32
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getRefInternal(Object,Map,Joins)",10,23
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getShortInternal(Object,Joins)",8,15
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getStringInternal(Object,Joins)",9,19
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getTimeInternal(Object,Calendar,Joins)",11,23
"org.apache.openjpa.jdbc.kernel.MappedQueryResultObjectProvider.MappingResult.getTimestampInternal(Object,Calendar,Joins)",11,23
org.apache.openjpa.persistence.jest.AbstractCommand.AbstractCommand(JPAServletContext),5,7
org.apache.openjpa.persistence.jest.AbstractCommand.getExecutionContext(),5,6
org.apache.openjpa.persistence.jest.AbstractCommand.getMandatoryArgument(String),5,7
org.apache.openjpa.persistence.jest.AbstractCommand.getArgument(String),4,6
org.apache.openjpa.persistence.jest.AbstractCommand.hasArgument(String),4,5
org.apache.openjpa.persistence.jest.AbstractCommand.getArguments(),4,5
org.apache.openjpa.persistence.jest.AbstractCommand.getQualifier(String),4,6
org.apache.openjpa.persistence.jest.AbstractCommand.hasQualifier(String),4,5
org.apache.openjpa.persistence.jest.AbstractCommand.isBooleanQualifier(String),7,14
org.apache.openjpa.persistence.jest.AbstractCommand.getQualifiers(),3,5
org.apache.openjpa.persistence.jest.AbstractCommand.parse(),56,143
org.apache.openjpa.persistence.jest.AbstractCommand.getMandatoryArguments(),6,10
org.apache.openjpa.persistence.jest.AbstractCommand.getMinimumArguments(),5,8
org.apache.openjpa.persistence.jest.AbstractCommand.getMaximumArguments(),7,13
org.apache.openjpa.persistence.jest.AbstractCommand.getDefaultFormat(),2,4
org.apache.openjpa.persistence.jest.AbstractCommand.getValidQualifiers(),6,10
org.apache.openjpa.persistence.jest.AbstractCommand.validate(),33,109
"org.apache.openjpa.persistence.jest.AbstractCommand.get(String,Map<String,String>)",3,9
"org.apache.openjpa.persistence.jest.AbstractCommand.put(String,String,Map<String,String>)",4,12
"org.apache.openjpa.persistence.jest.AbstractCommand.has(String,Map<String,String>)",4,10
org.apache.openjpa.persistence.jest.AbstractCommand.getObjectFormatter(),21,65
org.apache.openjpa.persistence.jest.AbstractCommand.toStateManager(Object),6,20
org.apache.openjpa.persistence.jest.AbstractCommand.toStateManager(Collection<>),9,22
org.apache.openjpa.persistence.jest.AbstractCommand.pushFetchPlan(Object),28,62
org.apache.openjpa.persistence.jest.AbstractCommand.popFetchPlan(boolean),19,33
"org.apache.openjpa.persistence.jest.AbstractCommand.debug(HttpServletRequest,HttpServletResponse,JPAServletContext)",37,111
org.apache.openjpa.util.ChangeTracker.isTracking(),7,7
org.apache.openjpa.util.ChangeTracker.startTracking(),6,8
org.apache.openjpa.util.ChangeTracker.stopTracking(),6,8
org.apache.openjpa.util.ChangeTracker.getAdded(),5,7
org.apache.openjpa.util.ChangeTracker.getRemoved(),6,7
org.apache.openjpa.util.ChangeTracker.getChanged(),13,15
org.apache.openjpa.util.ChangeTracker.getNextSequence(),25,41
org.apache.openjpa.util.ChangeTracker.setNextSequence(int),27,44
org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.getKeyColumns(ClassMapping),6,6
org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.getKeyColumnIO(),3,4
org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.getValueColumns(ClassMapping),7,9
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.selectKey(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Joins)",12,21
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.selectValue(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Joins)",17,33
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.getResults(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,Joins[],boolean)",34,71
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.getResults(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,Joins[],boolean).$1.select(Select,int)",31,86
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.loadKey(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",20,31
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.loadValue(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",22,37
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.joinValueRelation(Joins,ClassMapping)",13,27
org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.map(boolean),44,136
org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.initialize(),10,13
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",13,17
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager,Map)",52,159
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.setKey(Object,JDBCStore,Row)",16,28
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",72,449
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.joinRelation(Joins,boolean,boolean)",23,56
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.joinKeyRelation(Joins,boolean,boolean)",12,17
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.toDataStoreValue(Object,JDBCStore)",11,19
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.toKeyDataStoreValue(Object,JDBCStore)",12,21
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",20,33
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.updateSetNull(OpenJPAStateManager,JDBCStore,RowManager,Set)",14,25
"org.apache.openjpa.jdbc.meta.strats.HandlerRelationMapTableFieldStrategy.updateSetNull(OpenJPAStateManager,Object,JDBCStore,RowManager)",32,97
org.apache.openjpa.persistence.access.PropAccess.setId(int),1,1
org.apache.openjpa.persistence.access.PropAccess.getId(),0,0
org.apache.openjpa.persistence.access.PropAccess.setVersion(int),2,5
org.apache.openjpa.persistence.access.PropAccess.getVersion(),1,2
org.apache.openjpa.persistence.access.PropAccess.setStrProp(String),6,8
org.apache.openjpa.persistence.access.PropAccess.getStrProp(),4,5
org.apache.openjpa.persistence.access.PropAccess.equals(Object),6,16
org.apache.openjpa.util.InternalException.InternalException(),4,4
org.apache.openjpa.util.InternalException.InternalException(String),6,7
org.apache.openjpa.util.InternalException.InternalException(Message),6,7
org.apache.openjpa.util.InternalException.InternalException(Throwable),6,7
"org.apache.openjpa.util.InternalException.InternalException(String,Throwable)",8,10
"org.apache.openjpa.util.InternalException.InternalException(Message,Throwable)",8,10
org.apache.openjpa.util.InternalException.getType(),2,2
org.apache.openjpa.persistence.PersistenceExceptions.$1.translate(RuntimeException),5,9
org.apache.openjpa.persistence.PersistenceExceptions.getRollbackTranslator(OpenJPAEntityManager),22,35
org.apache.openjpa.persistence.PersistenceExceptions.getRollbackTranslator(OpenJPAEntityManager).$2.translate(RuntimeException),18,34
org.apache.openjpa.persistence.PersistenceExceptions.toPersistenceException(Throwable),7,14
"org.apache.openjpa.persistence.PersistenceExceptions.translateException(Throwable,boolean)",38,100
org.apache.openjpa.persistence.PersistenceExceptions.translateStoreException(OpenJPAException),35,201
org.apache.openjpa.persistence.PersistenceExceptions.translateUserException(OpenJPAException),37,117
org.apache.openjpa.persistence.PersistenceExceptions.translateWrappedException(OpenJPAException),8,22
org.apache.openjpa.persistence.PersistenceExceptions.translateCause(OpenJPAException),35,100
org.apache.openjpa.persistence.PersistenceExceptions.translateGeneralException(OpenJPAException),17,25
org.apache.openjpa.persistence.PersistenceExceptions.isPersistenceException(Throwable),8,12
org.apache.openjpa.persistence.PersistenceExceptions.getNestedThrowables(OpenJPAException),10,33
org.apache.openjpa.persistence.PersistenceExceptions.getFailedObject(OpenJPAException),11,25
org.apache.openjpa.persistence.PersistenceExceptions.getCause(Throwable[]),11,17
org.apache.openjpa.persistence.annotations.TestEntityListenerAnnot.TestEntityListenerAnnot(String),7,8
org.apache.openjpa.persistence.annotations.TestEntityListenerAnnot.setUp(),7,9
org.apache.openjpa.persistence.annotations.TestEntityListenerAnnot.testPrePersist(),22,45
org.apache.openjpa.persistence.annotations.TestEntityListenerAnnot.testPostPersist(),26,62
org.apache.openjpa.persistence.annotations.TestEntityListenerAnnot.testPre_PostRemove(),24,59
org.apache.openjpa.persistence.annotations.TestEntityListenerAnnot.testPreUpdate(),32,59
org.apache.openjpa.persistence.annotations.TestEntityListenerAnnot.testPreUpdate2(),29,60
org.apache.openjpa.persistence.annotations.TestEntityListenerAnnot.testPostLoad(),24,62
org.apache.openjpa.persistence.annotations.TestEntityListenerAnnot.testGenPriKeyAvailInPostPersist(),22,37
org.apache.openjpa.persistence.query.CaseExpression.when(Predicate),17,27
org.apache.openjpa.persistence.query.CaseExpression.when(Expression),17,26
org.apache.openjpa.persistence.query.CaseExpression.when(Number),17,25
org.apache.openjpa.persistence.query.CaseExpression.when(String),18,26
org.apache.openjpa.persistence.query.CaseExpression.when(Date),18,26
org.apache.openjpa.persistence.query.CaseExpression.when(Calendar),18,26
org.apache.openjpa.persistence.query.CaseExpression.when(Class),17,25
org.apache.openjpa.persistence.query.CaseExpression.when(Enum<>),17,25
org.apache.openjpa.persistence.query.CaseExpression.then(Expression),15,24
org.apache.openjpa.persistence.query.CaseExpression.then(Number),15,23
org.apache.openjpa.persistence.query.CaseExpression.then(String),16,24
org.apache.openjpa.persistence.query.CaseExpression.then(Date),16,24
org.apache.openjpa.persistence.query.CaseExpression.then(Calendar),16,24
org.apache.openjpa.persistence.query.CaseExpression.then(Class),15,23
org.apache.openjpa.persistence.query.CaseExpression.then(Enum<>),15,23
org.apache.openjpa.persistence.query.CaseExpression.elseCase(Expression),11,19
org.apache.openjpa.persistence.query.CaseExpression.elseCase(String),12,19
org.apache.openjpa.persistence.query.CaseExpression.elseCase(Number),11,18
org.apache.openjpa.persistence.query.CaseExpression.elseCase(Date),12,19
org.apache.openjpa.persistence.query.CaseExpression.elseCase(Calendar),3,3
org.apache.openjpa.persistence.query.CaseExpression.elseCase(Class),11,18
org.apache.openjpa.persistence.query.CaseExpression.elseCase(Enum<>),11,18
org.apache.openjpa.persistence.criteria.ComparisonStyle.isDisjunction(),6,6
org.apache.openjpa.persistence.criteria.ComparisonStyle.setDisjunction(boolean),8,9
org.apache.openjpa.persistence.criteria.ComparisonStyle.excludeNull(),7,7
org.apache.openjpa.persistence.criteria.ComparisonStyle.setExcludeNull(boolean),9,10
org.apache.openjpa.persistence.criteria.ComparisonStyle.excludeIdentity(),7,8
org.apache.openjpa.persistence.criteria.ComparisonStyle.setExcludeIdentity(boolean),9,11
org.apache.openjpa.persistence.criteria.ComparisonStyle.excludeVersion(),7,8
org.apache.openjpa.persistence.criteria.ComparisonStyle.setExcludeVersion(boolean),9,11
org.apache.openjpa.persistence.criteria.ComparisonStyle.excludeDefault(),1,1
org.apache.openjpa.persistence.criteria.ComparisonStyle.setExcludeDefault(boolean),9,10
org.apache.openjpa.persistence.criteria.ComparisonStyle.getStringComparsionMode(),7,10
org.apache.openjpa.persistence.criteria.ComparisonStyle.setStringComparisonMode(StringComparisonMode),8,16
org.apache.openjpa.persistence.criteria.ComparisonStyle.Default.excludeDefault(),1,2
org.apache.openjpa.persistence.criteria.ComparisonStyle.Default.excludeNull(),1,2
org.apache.openjpa.persistence.criteria.ComparisonStyle.Default.getStringComparsionMode(),4,8
org.apache.openjpa.persistence.criteria.ComparisonStyle.Default.isDisjunction(),1,2
org.apache.openjpa.persistence.criteria.ComparisonStyle.Default.setExcludeDefault(boolean),5,7
org.apache.openjpa.persistence.criteria.ComparisonStyle.Default.setExcludeNull(boolean),5,7
org.apache.openjpa.persistence.criteria.ComparisonStyle.Default.setStringComparisonMode(StringComparisonMode),5,13
org.apache.openjpa.persistence.criteria.ComparisonStyle.Default.setDisjunction(boolean),5,7
org.apache.openjpa.persistence.criteria.ComparisonStyle.Default.excludeIdentity(),2,4
org.apache.openjpa.persistence.criteria.ComparisonStyle.Default.setExcludeIdentity(boolean),6,9
org.apache.openjpa.persistence.criteria.ComparisonStyle.Default.excludeVersion(),2,4
org.apache.openjpa.persistence.criteria.ComparisonStyle.Default.setExcludeVersion(boolean),6,9
"org.apache.openjpa.trader.client.ServerLogPanel.ServerLogPanel(OpenTrader,int,int)",27,66
"org.apache.openjpa.trader.client.ServerLogPanel.ServerLogPanel(OpenTrader,int,int).$1.render(LogStatement)",6,8
"org.apache.openjpa.trader.client.ServerLogPanel.ServerLogPanel(OpenTrader,int,int).$2.render(LogStatement)",8,10
"org.apache.openjpa.trader.client.ServerLogPanel.decorate(String,String[])",8,21
"org.apache.openjpa.trader.client.ServerLogPanel.getStyle(String,String[])",12,30
org.apache.openjpa.trader.client.ServerLogPanel.log(),5,6
org.apache.openjpa.trader.client.ServerLogPanel.onTradableAdded(ServiceEvent.TradableAdded),13,21
org.apache.openjpa.trader.client.ServerLogPanel.onTradableRemoved(ServiceEvent.TradableRemoved),5,8
org.apache.openjpa.trader.client.ServerLogPanel.onTradeCommitted(ServiceEvent.TradeCommitted),5,8
org.apache.openjpa.trader.client.ServerLogPanel.onStockUpdated(ServiceEvent.StockUpdated),5,8
org.apache.openjpa.trader.client.ServerLogPanel.LoggingCallback.onFailure(Throwable),6,7
org.apache.openjpa.trader.client.ServerLogPanel.LoggingCallback.onSuccess(List<LogStatement>),7,10
"org.apache.openjpa.persistence.query.LocateExpression.LocateExpression(Expression,String,int)",10,19
"org.apache.openjpa.persistence.query.LocateExpression.LocateExpression(Expression,Expression,int)",9,17
"org.apache.openjpa.persistence.query.LocateExpression.LocateExpression(Expression,String,Expression)",10,18
"org.apache.openjpa.persistence.query.LocateExpression.LocateExpression(Expression,Expression,Expression)",8,16
org.apache.openjpa.persistence.query.LocateExpression.asExpression(AliasContext),13,35
org.apache.openjpa.persistence.compat.EntityC.getId(),0,0
org.apache.openjpa.persistence.compat.EntityC.getName(),2,3
org.apache.openjpa.persistence.compat.EntityC.setName(String),3,6
org.apache.openjpa.persistence.compat.EntityC.hashCode(),3,5
org.apache.openjpa.persistence.compat.EntityC.equals(Object),4,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Site.getStores(),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Site.setStores(List<Store>),4,9
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Site.setSiteName(String),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Site.getSiteName(),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Site.setSiteDescription(String),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Site.getSiteDescription(),3,5
"org.apache.openjpa.lib.util.SimpleRegex.SimpleRegex(String,boolean)",9,20
org.apache.openjpa.lib.util.SimpleRegex.matches(String),34,127
"org.apache.openjpa.lib.util.SimpleRegex.indexOf(String,int,int,int,boolean)",27,72
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.LRSProxyMap(LRSMapFieldStrategy),11,22
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.count(),29,52
"org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.count().$1.select(Select,int)",15,25
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.hasKey(Object),2,4
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.hasValue(Object),2,4
"org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.has(Object,boolean)",31,71
"org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.has(Object,boolean).$2.select(Select,int)",31,119
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.keys(Object),51,119
"org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.keys(Object).$3.select(Select,int)",34,118
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.value(Object),47,114
"org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.value(Object).$4.select(Select,int)",32,125
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.itr(),20,42
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.assertOwner(),10,14
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.getStore(),7,11
"org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.ResultIterator.ResultIterator(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result[],Joins[])",10,23
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.ResultIterator.hasNext(),7,13
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.ResultIterator.next(),21,72
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.ResultIterator.remove(),4,4
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.ResultIterator.close(),2,7
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.Entry.getKey(),2,3
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.Entry.getValue(),3,3
org.apache.openjpa.jdbc.meta.strats.LRSProxyMap.Entry.setValue(Object),7,8
org.apache.openjpa.datacache.ExpirationListener.onExpire(ExpirationEvent),7,8
"org.apache.openjpa.util.DelayedCollectionChangeTrackerImpl.DelayedCollectionChangeTrackerImpl(Collection,boolean,boolean,boolean)",8,12
org.apache.openjpa.util.DelayedCollectionChangeTrackerImpl.add(Object),10,23
org.apache.openjpa.util.DelayedCollectionChangeTrackerImpl.remove(Object),6,13
org.apache.openjpa.util.DelayedCollectionChangeTrackerImpl.change(Object),5,5
org.apache.openjpa.lib.rop.TestRandomAccessResultList.TestRandomAccessResultList(String),6,8
org.apache.openjpa.lib.rop.TestRandomAccessResultList.getResultList(ResultObjectProvider),6,13
org.apache.openjpa.lib.rop.TestRandomAccessResultList.main(String[]),3,4
org.apache.openjpa.util.ReferentialIntegrityException.ReferentialIntegrityException(String),5,6
org.apache.openjpa.util.ReferentialIntegrityException.ReferentialIntegrityException(int),6,7
org.apache.openjpa.util.ReferentialIntegrityException.getMessage(int),9,16
org.apache.openjpa.util.ReferentialIntegrityException.getSubtype(),3,3
org.apache.openjpa.util.ReferentialIntegrityException.getIntegrityViolation(),4,6
org.apache.openjpa.util.ReferentialIntegrityException.setIntegrityViolation(int),7,10
org.apache.openjpa.util.ReferentialIntegrityException.writeObject(ObjectOutputStream),5,7
org.apache.openjpa.util.ReferentialIntegrityException.readObject(ObjectInputStream),6,9
org.apache.openjpa.persistence.detach.EntityD.EntityD(),1,1
"org.apache.openjpa.persistence.detach.EntityD.EntityD(long,String)",3,5
org.apache.openjpa.persistence.detach.EntityD.getId(),0,0
org.apache.openjpa.persistence.detach.EntityD.setId(long),1,1
org.apache.openjpa.persistence.detach.EntityD.getName(),2,3
org.apache.openjpa.persistence.detach.EntityD.setName(String),3,6
org.apache.openjpa.jdbc.kernel.JDBCStore.getContext(),4,6
org.apache.openjpa.jdbc.kernel.JDBCStore.getConfiguration(),3,5
org.apache.openjpa.jdbc.kernel.JDBCStore.getDBDictionary(),1,3
org.apache.openjpa.jdbc.kernel.JDBCStore.getSQLFactory(),3,7
org.apache.openjpa.jdbc.kernel.JDBCStore.getLockManager(),4,11
org.apache.openjpa.jdbc.kernel.JDBCStore.getConnection(),12,18
org.apache.openjpa.jdbc.kernel.JDBCStore.getNewConnection(),16,24
org.apache.openjpa.jdbc.kernel.JDBCStore.getFetchConfiguration(),4,8
"org.apache.openjpa.jdbc.kernel.JDBCStore.newDataStoreId(long,ClassMapping,boolean)",9,11
"org.apache.openjpa.jdbc.kernel.JDBCStore.find(Object,ValueMapping,JDBCFetchConfiguration)",16,22
org.apache.openjpa.jdbc.kernel.JDBCStore.loadSubclasses(ClassMapping),9,11
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterC.setStringC(String),2,4
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterC.getStringC(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterC.setIntC(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterC.getIntC(),0,0
org.apache.openjpa.persistence.compat.SimpleEntity.SimpleEntity(),2,2
"org.apache.openjpa.persistence.compat.SimpleEntity.SimpleEntity(String,String)",5,10
org.apache.openjpa.persistence.compat.SimpleEntity.getId(),0,0
org.apache.openjpa.persistence.compat.SimpleEntity.setId(long),1,1
org.apache.openjpa.persistence.compat.SimpleEntity.getName(),2,3
org.apache.openjpa.persistence.compat.SimpleEntity.setName(String),3,6
org.apache.openjpa.persistence.compat.SimpleEntity.getValue(),2,3
org.apache.openjpa.persistence.compat.SimpleEntity.setValue(String),3,6
"org.apache.openjpa.util.LongId.LongId(Class,Long)",3,6
"org.apache.openjpa.util.LongId.LongId(Class,String)",4,7
"org.apache.openjpa.util.LongId.LongId(Class,long)",2,5
"org.apache.openjpa.util.LongId.LongId(Class,long,boolean)",3,7
org.apache.openjpa.util.LongId.getId(),1,1
org.apache.openjpa.util.LongId.getIdObject(),2,3
org.apache.openjpa.util.LongId.toString(),3,5
org.apache.openjpa.util.LongId.idHash(),2,3
org.apache.openjpa.util.LongId.idEquals(OpenJPAId),3,4
org.apache.openjpa.persistence.jdbc.common.apps.PreDetachCallback.jdoPreDetach(),7,7
org.apache.openjpa.jdbc.schema.LocalConstraint.LocalConstraint(),3,3
"org.apache.openjpa.jdbc.schema.LocalConstraint.LocalConstraint(String,Table)",8,18
"org.apache.openjpa.jdbc.schema.LocalConstraint.LocalConstraint(DBIdentifier,Table)",5,8
org.apache.openjpa.jdbc.schema.LocalConstraint.remove(),6,10
org.apache.openjpa.jdbc.schema.LocalConstraint.getColumns(),11,21
org.apache.openjpa.jdbc.schema.LocalConstraint.setColumns(Column[]),10,22
org.apache.openjpa.jdbc.schema.LocalConstraint.addColumn(Column),13,37
org.apache.openjpa.jdbc.schema.LocalConstraint.removeColumn(Column),9,22
org.apache.openjpa.jdbc.schema.LocalConstraint.containsColumn(Column),5,13
org.apache.openjpa.jdbc.schema.LocalConstraint.refColumns(),6,12
org.apache.openjpa.jdbc.schema.LocalConstraint.derefColumns(),6,12
org.apache.openjpa.jdbc.schema.LocalConstraint.columnsMatch(Column[]),7,20
"org.apache.openjpa.jdbc.schema.LocalConstraint.hasColumn(Column[],Column)",9,17
org.apache.openjpa.jdbc.schema.LocalConstraint.equalsLocalConstraint(LocalConstraint),9,14
org.apache.openjpa.persistence.common.apps.Entity1.Entity1(),1,1
"org.apache.openjpa.persistence.common.apps.Entity1.Entity1(long,String,int)",3,11
org.apache.openjpa.persistence.common.apps.Entity1.getPk(),0,0
org.apache.openjpa.persistence.common.apps.Entity1.setStringField(String),4,8
org.apache.openjpa.persistence.common.apps.Entity1.getStringField(),2,5
org.apache.openjpa.persistence.common.apps.Entity1.setIntField(int),3,5
org.apache.openjpa.persistence.common.apps.Entity1.getIntField(),1,2
org.apache.openjpa.persistence.common.apps.Entity1.setEntity2Field(Entity2),4,8
org.apache.openjpa.persistence.common.apps.Entity1.getEntity2Field(),2,5
org.apache.openjpa.persistence.common.apps.Entity1.toString(),2,8
org.apache.openjpa.persistence.ConnectionRetainMode.ConnectionRetainMode(int),5,8
org.apache.openjpa.persistence.ConnectionRetainMode.toKernelConstant(),4,5
org.apache.openjpa.persistence.ConnectionRetainMode.fromKernelConstant(int),13,33
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.Division.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.Division.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.Division.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.Division.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.Division.equals(Object),4,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.Division.hashCode(),4,11
org.apache.openjpa.jdbc.kernel.exps.Abs.Abs(Val),6,8
org.apache.openjpa.jdbc.kernel.exps.Abs.getType(Class),6,15
org.apache.openjpa.jdbc.kernel.exps.Abs.getOperator(),3,3
org.apache.openjpa.jdbc.kernel.exps.Abs.getId(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.Employee.getPhoneNumbers(),4,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.Employee.addPhoneNumber(String,PhoneNumber)",5,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.Employee.removePhoneNumber(String),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.Employee.equals(Object),14,43
org.apache.openjpa.persistence.criteria.results.Foo.Foo(),1,1
"org.apache.openjpa.persistence.criteria.results.Foo.Foo(long,long,int)",4,10
"org.apache.openjpa.persistence.criteria.results.Foo.Foo(long,String)",4,8
"org.apache.openjpa.persistence.criteria.results.Foo.Foo(long,int)",3,7
org.apache.openjpa.persistence.criteria.results.Foo.getFid(),1,2
org.apache.openjpa.persistence.criteria.results.Foo.setFid(long),2,5
org.apache.openjpa.persistence.criteria.results.Foo.getFstring(),2,3
org.apache.openjpa.persistence.criteria.results.Foo.setFstring(String),3,6
org.apache.openjpa.persistence.criteria.results.Foo.getFlong(),1,2
org.apache.openjpa.persistence.criteria.results.Foo.setFlong(long),2,5
org.apache.openjpa.persistence.criteria.results.Foo.getFint(),1,2
org.apache.openjpa.persistence.criteria.results.Foo.setFint(int),2,5
org.apache.openjpa.persistence.criteria.results.Foo.getBar(),1,3
org.apache.openjpa.persistence.criteria.results.Foo.setBar(Bar),2,6
org.apache.openjpa.persistence.criteria.PredicateImpl.PredicateImpl(),4,5
org.apache.openjpa.persistence.criteria.PredicateImpl.PredicateImpl(BooleanOperator),3,5
"org.apache.openjpa.persistence.criteria.PredicateImpl.PredicateImpl(BooleanOperator,Predicate)",7,14
org.apache.openjpa.persistence.criteria.PredicateImpl.add(Expression<Boolean>),7,13
org.apache.openjpa.persistence.criteria.PredicateImpl.getExpressions(),10,18
org.apache.openjpa.persistence.criteria.PredicateImpl.getOperator(),1,2
org.apache.openjpa.persistence.criteria.PredicateImpl.isEmpty(),2,3
org.apache.openjpa.persistence.criteria.PredicateImpl.isNegated(),4,6
org.apache.openjpa.persistence.criteria.PredicateImpl.not(),19,25
org.apache.openjpa.persistence.criteria.PredicateImpl.markNegated(),4,5
org.apache.openjpa.persistence.criteria.PredicateImpl.TRUE(),7,9
org.apache.openjpa.persistence.criteria.PredicateImpl.FALSE(),7,9
"org.apache.openjpa.persistence.criteria.PredicateImpl.toValue(ExpressionFactory,CriteriaQueryImpl<>)",18,23
"org.apache.openjpa.persistence.criteria.PredicateImpl.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",17,96
org.apache.openjpa.persistence.criteria.PredicateImpl.acceptVisit(CriteriaExpressionVisitor),9,15
org.apache.openjpa.persistence.criteria.PredicateImpl.asValue(AliasContext),15,26
"org.apache.openjpa.persistence.criteria.PredicateImpl.And.And(Expression<Boolean>,Expression<Boolean>)",3,5
org.apache.openjpa.persistence.criteria.PredicateImpl.And.And(Predicate),3,4
"org.apache.openjpa.persistence.criteria.PredicateImpl.Or.Or(Expression<Boolean>,Expression<Boolean>)",3,5
org.apache.openjpa.persistence.criteria.PredicateImpl.Or.Or(Predicate),3,4
org.apache.openjpa.jdbc.meta.JavaSQLTypes.getDateTypeCode(Class<>),12,25
org.apache.openjpa.jdbc.meta.JavaSQLTypes.getEmptyValue(int),13,70
org.apache.openjpa.jdbc.meta.JavaSQLTypes.getNonEmptyValue(int),12,70
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectAChild1.CacheObjectAChild1(),3,3
"org.apache.openjpa.persistence.datacache.common.apps.CacheObjectAChild1.CacheObjectAChild1(String,String,int)",7,10
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectAChild1.getStr1(),2,3
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectAChild1.setStr1(String),3,4
"org.apache.openjpa.persistence.OptimisticLockException.OptimisticLockException(String,Throwable[],Object,boolean)",10,17
org.apache.openjpa.persistence.OptimisticLockException.getType(),2,2
org.apache.openjpa.persistence.OptimisticLockException.getSubtype(),4,4
org.apache.openjpa.persistence.OptimisticLockException.isFatal(),1,2
org.apache.openjpa.persistence.OptimisticLockException.getCause(),5,6
org.apache.openjpa.persistence.OptimisticLockException.getNestedThrowables(),5,8
org.apache.openjpa.persistence.OptimisticLockException.getFailedObject(),2,4
org.apache.openjpa.persistence.OptimisticLockException.toString(),2,4
org.apache.openjpa.persistence.OptimisticLockException.printStackTrace(),5,8
org.apache.openjpa.persistence.OptimisticLockException.printStackTrace(PrintStream),7,12
org.apache.openjpa.persistence.OptimisticLockException.printStackTrace(PrintWriter),7,12
org.apache.openjpa.persistence.OptimisticLockException.writeObject(ObjectOutputStream),11,22
org.apache.openjpa.persistence.OptimisticLockException.readObject(ObjectInputStream),10,17
org.apache.openjpa.persistence.QueryOperationType.QueryOperationType(int),5,8
org.apache.openjpa.persistence.QueryOperationType.toKernelConstant(),4,5
org.apache.openjpa.persistence.QueryOperationType.fromKernelConstant(int),12,26
org.apache.openjpa.jdbc.schema.SchemaParser.getDelayConstraintResolve(),16,21
org.apache.openjpa.jdbc.schema.SchemaParser.setDelayConstraintResolve(boolean),17,23
org.apache.openjpa.jdbc.schema.SchemaParser.getSchemaGroup(),2,4
org.apache.openjpa.jdbc.schema.SchemaParser.setSchemaGroup(SchemaGroup),4,7
org.apache.openjpa.jdbc.schema.SchemaParser.resolveConstraints(),5,8
org.apache.openjpa.meta.TestAccessCode.testValidClassCodes(),13,83
org.apache.openjpa.meta.TestAccessCode.testValidFieldCodes(),14,54
org.apache.openjpa.meta.TestAccessCode.testProperty(),6,22
org.apache.openjpa.meta.TestAccessCode.testField(),6,26
org.apache.openjpa.meta.TestAccessCode.testExplicit(),6,26
org.apache.openjpa.meta.TestAccessCode.testMixed(),6,26
org.apache.openjpa.meta.TestAccessCode.testCompatibleField(),6,43
"org.apache.openjpa.meta.TestAccessCode.assertCompatible(int,int)",3,7
"org.apache.openjpa.meta.TestAccessCode.assertNotCompatible(int,int)",3,7
"org.apache.openjpa.meta.TestAccessCode.assertCompatible(int,int,int)",3,8
"org.apache.openjpa.meta.TestAccessCode.assertCompatibility(boolean,int,int,int)",10,25
org.apache.openjpa.meta.TestAccessCode.testToString(),7,9
"org.apache.openjpa.meta.TestAccessCode.isValidClassCode(boolean,int,int)",8,30
"org.apache.openjpa.meta.TestAccessCode.isValidFieldCode(boolean,int,int)",9,36
"org.apache.openjpa.meta.TestAccessCode.isProperty(boolean,int,int)",6,14
"org.apache.openjpa.meta.TestAccessCode.isField(boolean,int,int)",6,14
"org.apache.openjpa.meta.TestAccessCode.isExplicit(boolean,int,int)",6,14
"org.apache.openjpa.meta.TestAccessCode.isMixed(boolean,int,int)",6,14
org.apache.openjpa.util.TestResultShape.testPrimitiveShapeIsImmutable(),22,45
org.apache.openjpa.util.TestResultShape.testArrayIsMutable(),14,62
org.apache.openjpa.util.TestResultShape.testMethodImpliesMapStrategy(),11,37
org.apache.openjpa.util.TestResultShape.testShapeWithConstrcutorStrategy(),12,35
org.apache.openjpa.util.TestResultShape.testGetCompositeTypes(),21,120
org.apache.openjpa.util.TestResultShape.testRecursiveNestingIsNotAllowed(),22,93
org.apache.openjpa.util.TestResultShape.testFill(),20,77
org.apache.openjpa.util.TestResultShape.testFill2(),23,159
"org.apache.openjpa.util.TestResultShape.assertCategory(ResultShape<>,boolean,boolean,boolean)",6,21
"org.apache.openjpa.util.TestResultShape.arrayEquals(Object[],Object[])",6,11
"org.apache.openjpa.util.TestResultShape.constructor(Class<T>,Class<>)",4,8
"org.apache.openjpa.util.TestResultShape.method(Class<T>,String,Class<>)",6,11
org.apache.openjpa.util.TestResultShape.Foo.Foo(),1,1
"org.apache.openjpa.util.TestResultShape.Foo.Foo(String,int)",2,3
"org.apache.openjpa.util.TestResultShape.Foo.Foo(short,Bar)",3,3
org.apache.openjpa.util.TestResultShape.Foo.toString(),4,7
org.apache.openjpa.util.TestResultShape.Bar.Bar(),1,1
org.apache.openjpa.util.TestResultShape.Bar.Bar(double),2,2
"org.apache.openjpa.util.TestResultShape.Bar.Bar(String,Double)",3,4
org.apache.openjpa.util.TestResultShape.Bar.toString(),3,9
org.apache.openjpa.audit.X.X(),2,2
org.apache.openjpa.audit.X.getName(),2,3
org.apache.openjpa.audit.X.setName(String),3,6
org.apache.openjpa.audit.X.getPrice(),1,2
org.apache.openjpa.audit.X.setPrice(int),2,5
org.apache.openjpa.audit.X.getId(),0,0
org.apache.openjpa.audit.X.hashCode(),4,8
org.apache.openjpa.audit.X.equals(Object),3,7
org.apache.openjpa.audit.X.toString(),1,2
org.apache.openjpa.integration.validation.SimpleEntity.SimpleEntity(),2,2
"org.apache.openjpa.integration.validation.SimpleEntity.SimpleEntity(String,String)",5,10
org.apache.openjpa.integration.validation.SimpleEntity.getId(),0,0
org.apache.openjpa.integration.validation.SimpleEntity.setId(long),1,1
org.apache.openjpa.integration.validation.SimpleEntity.getName(),2,3
org.apache.openjpa.integration.validation.SimpleEntity.setName(String),3,6
org.apache.openjpa.integration.validation.SimpleEntity.getValue(),2,3
org.apache.openjpa.integration.validation.SimpleEntity.setValue(String),3,6
org.apache.openjpa.persistence.datacache.MapEmbeddable.MapEmbeddable(int),3,5
org.apache.openjpa.persistence.datacache.MapEmbeddable.getValue(),1,2
org.apache.openjpa.persistence.datacache.MapEmbeddable.setValue(int),2,5
org.apache.openjpa.persistence.datacache.MapEmbeddable.toString(),4,6
org.apache.openjpa.persistence.callbacks.TestMSCEntityListeners.setUp(),11,38
org.apache.openjpa.persistence.callbacks.TestMSCEntityListeners.getPersistenceUnitName(),5,5
org.apache.openjpa.persistence.callbacks.TestMSCEntityListeners.testMSCEntityListeners(),6,8
org.apache.openjpa.persistence.callbacks.TestMSCEntityListeners.helper(int),22,60
"org.apache.openjpa.persistence.callbacks.TestMSCEntityListeners.assertStatus(int,int,int,int,int,int,int)",11,71
org.apache.openjpa.util.UserException.UserException(),2,2
org.apache.openjpa.util.UserException.UserException(String),4,5
org.apache.openjpa.util.UserException.UserException(Message),4,5
org.apache.openjpa.util.UserException.UserException(Throwable),4,5
"org.apache.openjpa.util.UserException.UserException(String,Throwable)",6,8
"org.apache.openjpa.util.UserException.UserException(Message,Throwable)",6,8
org.apache.openjpa.util.UserException.getType(),2,2
org.apache.openjpa.lib.conf.ProductDerivation.getType(),2,3
org.apache.openjpa.lib.conf.ProductDerivation.getConfigurationPrefix(),5,7
org.apache.openjpa.lib.conf.ProductDerivation.validate(),16,19
org.apache.openjpa.lib.conf.ProductDerivation.loadGlobals(ClassLoader),8,14
org.apache.openjpa.lib.conf.ProductDerivation.loadDefaults(ClassLoader),8,14
"org.apache.openjpa.lib.conf.ProductDerivation.load(String,String,ClassLoader)",15,27
"org.apache.openjpa.lib.conf.ProductDerivation.load(File,String)",13,21
org.apache.openjpa.lib.conf.ProductDerivation.getDefaultResourceLocation(),9,14
org.apache.openjpa.lib.conf.ProductDerivation.getAnchorsInFile(File),18,35
org.apache.openjpa.lib.conf.ProductDerivation.getAnchorsInResource(String),19,34
org.apache.openjpa.lib.conf.ProductDerivation.beforeConfigurationConstruct(ConfigurationProvider),19,26
org.apache.openjpa.lib.conf.ProductDerivation.beforeConfigurationLoad(Configuration),11,16
org.apache.openjpa.lib.conf.ProductDerivation.afterSpecificationSet(Configuration),6,9
org.apache.openjpa.lib.conf.ProductDerivation.beforeConfigurationClose(Configuration),5,7
org.apache.openjpa.lib.conf.ProductDerivation.getSupportedQueryHints(),9,11
org.apache.openjpa.persistence.datacache.TestMutableParameters.TestMutableParameters(String),5,7
org.apache.openjpa.persistence.datacache.TestMutableParameters.setUp(),47,94
org.apache.openjpa.persistence.datacache.TestMutableParameters.tearDown(),4,7
org.apache.openjpa.persistence.datacache.TestMutableParameters.testMutatedDateParameter(),27,60
org.apache.openjpa.enhance.TestUnenhancedPropertyAccess.getUnenhancedClass(),4,6
org.apache.openjpa.enhance.TestUnenhancedPropertyAccess.newUnenhancedInstance(),5,7
org.apache.openjpa.enhance.TestUnenhancedPropertyAccess.getUnenhancedSubclass(),5,8
org.apache.openjpa.enhance.TestUnenhancedPropertyAccess.newUnenhancedSubclassInstance(),6,9
org.apache.openjpa.enhance.TestUnenhancedPropertyAccess.isFieldAccessTest(),3,3
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.eventOccurred(JDBCEvent),9,12
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.beforePrepareStatement(JDBCEvent),5,8
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.afterPrepareStatement(JDBCEvent),5,8
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.beforeCreateStatement(JDBCEvent),5,8
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.afterCreateStatement(JDBCEvent),5,8
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.beforeExecuteStatement(JDBCEvent),5,8
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.afterExecuteStatement(JDBCEvent),5,8
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.beforeCommit(JDBCEvent),4,7
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.afterCommit(JDBCEvent),4,7
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.beforeRollback(JDBCEvent),4,7
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.afterRollback(JDBCEvent),4,7
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.beforeReturn(JDBCEvent),3,6
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.afterReturn(JDBCEvent),3,6
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.afterConnect(JDBCEvent),4,7
org.apache.openjpa.lib.jdbc.AbstractJDBCListener.beforeClose(JDBCEvent),4,7
org.apache.openjpa.persistence.datacache.TestQueryResultSize.TestQueryResultSize(String),6,8
org.apache.openjpa.persistence.datacache.TestQueryResultSize.setUp(),23,40
org.apache.openjpa.persistence.datacache.TestQueryResultSize.test(),29,49
org.apache.openjpa.persistence.datacache.TestQueryResultSize.getQueryCacheSize(),13,19
org.apache.openjpa.persistence.datacache.TestQueryResultSize.testCrossJoinQueryCache(),27,70
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectInterface.setStr(String),4,4
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectInterface.getStr(),2,2
org.apache.openjpa.persistence.cache.jpa.AbstractCacheTestCase.getEntityManagerFactory(),5,8
org.apache.openjpa.persistence.cache.jpa.AbstractCacheTestCase.getListener(),2,3
org.apache.openjpa.persistence.cache.jpa.AbstractCacheTestCase.populate(),22,33
"org.apache.openjpa.persistence.cache.jpa.AbstractCacheTestCase.createEntityManagerFactory(String,Map<String,Object>)",27,76
org.apache.openjpa.persistence.cache.jpa.AbstractCacheTestCase.setUp(),5,6
org.apache.openjpa.persistence.cache.jpa.AbstractCacheTestCase.tearDown(),4,9
org.apache.openjpa.persistence.cache.jpa.AbstractCacheTestCase.cleanDatabase(),22,30
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectB.CacheObjectB(),2,2
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectB.CacheObjectB(String),4,4
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectB.getStr(),2,3
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectB.setStr(String),3,4
org.apache.openjpa.persistence.datacache.common.apps.EmbeddingOwnerEntity.getMembers(),3,3
org.apache.openjpa.persistence.datacache.common.apps.EmbeddingOwnerEntity.addMember(EmbeddedEntity),5,8
org.apache.openjpa.persistence.datacache.common.apps.EmbeddingOwnerEntity.removeMember(EmbeddedEntity),3,4
org.apache.openjpa.persistence.datacache.common.apps.EmbeddingOwnerEntity.removeMember(int),3,4
org.apache.openjpa.persistence.datacache.common.apps.EmbeddingOwnerEntity.getId(),0,0
org.apache.openjpa.meta.ValueStrategies.getName(int),11,22
"org.apache.openjpa.meta.ValueStrategies.getCode(String,Object)",28,65
"org.apache.openjpa.meta.ValueStrategies.assertSupported(int,MetaDataContext,String)",23,60
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_EmbedXml.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_EmbedXml.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_EmbedXml.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_EmbedXml.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_EmbedXml.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_EmbedXml.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_EmbedXml.getEmbeds(),4,6
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_EmbedXml.addEmbed(Embed_EmbedXml),4,9
org.apache.openjpa.lib.conf.TestXMLCaseConversions.testToXMLName(),19,89
org.apache.openjpa.lib.conf.TestXMLCaseConversions.main(String[]),15,21
org.apache.openjpa.persistence.embed.attrOverrides.Customer.getId(),1,1
org.apache.openjpa.persistence.embed.attrOverrides.Customer.setId(Integer),2,2
org.apache.openjpa.persistence.embed.attrOverrides.Customer.getName(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.Customer.setName(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.Customer.getAddress(),1,3
org.apache.openjpa.persistence.embed.attrOverrides.Customer.setAddress(Address),2,6
org.apache.openjpa.persistence.AnnotationBuilder.AnnotationBuilder(Class<>),3,6
org.apache.openjpa.persistence.AnnotationBuilder.getType(),2,3
"org.apache.openjpa.persistence.AnnotationBuilder.add(String,String)",6,10
"org.apache.openjpa.persistence.AnnotationBuilder.add(String,boolean)",6,9
"org.apache.openjpa.persistence.AnnotationBuilder.add(String,int)",6,9
"org.apache.openjpa.persistence.AnnotationBuilder.add(String,Class)",6,9
"org.apache.openjpa.persistence.AnnotationBuilder.add(String,EnumSet)",7,10
"org.apache.openjpa.persistence.AnnotationBuilder.add(String,Enum)",6,9
"org.apache.openjpa.persistence.AnnotationBuilder.add(String,AnnotationBuilder)",15,50
org.apache.openjpa.persistence.AnnotationBuilder.hasComponents(),2,3
"org.apache.openjpa.persistence.AnnotationBuilder.doAdd(String,Object)",9,14
org.apache.openjpa.persistence.AnnotationBuilder.find(String),10,16
org.apache.openjpa.persistence.AnnotationBuilder.enumToString(Enum),5,12
org.apache.openjpa.persistence.AnnotationBuilder.enumSetToString(EnumSet),8,20
org.apache.openjpa.persistence.AnnotationBuilder.toString(StringBuilder),11,21
org.apache.openjpa.persistence.AnnotationBuilder.toString(),2,8
"org.apache.openjpa.persistence.AnnotationBuilder.AnnotationEntry.AnnotationEntry(String,Object)",6,10
org.apache.openjpa.persistence.AnnotationBuilder.AnnotationEntry.toString(StringBuilder),14,62
org.apache.openjpa.persistence.enhance.identity.Dependent2.getEmp(),2,3
org.apache.openjpa.persistence.enhance.identity.Dependent2.setEmp(Employee2),3,6
org.apache.openjpa.persistence.enhance.identity.Dependent2.getId(),1,1
org.apache.openjpa.persistence.enhance.identity.Dependent2.setId(DependentId2),2,2
org.apache.openjpa.persistence.enhance.identity.Dependent2.equals(Object),5,13
org.apache.openjpa.persistence.enhance.identity.Dependent2.hashCode(),4,13
org.apache.openjpa.persistence.datacache.common.apps.TransactionalClassPC.getIntField(),1,2
org.apache.openjpa.persistence.datacache.common.apps.TransactionalClassPC.setIntField(int),2,5
org.apache.openjpa.persistence.entity.EntityB.EntityB(),1,1
org.apache.openjpa.persistence.entity.EntityB.EntityB(EntityA),2,5
org.apache.openjpa.persistence.entity.EntityB.getId(),0,0
org.apache.openjpa.persistence.entity.EntityB.getName(),2,3
org.apache.openjpa.persistence.entity.EntityB.setName(String),3,6
org.apache.openjpa.persistence.entity.EntityB.getCenter(),2,3
org.apache.openjpa.persistence.entity.EntityB.setCenter(EntityA),3,6
org.apache.openjpa.persistence.entity.EntityB.getCs(),4,8
org.apache.openjpa.jdbc.sql.SQLFactoryImpl.getConfiguration(),4,6
org.apache.openjpa.jdbc.sql.SQLFactoryImpl.newSelect(),3,5
org.apache.openjpa.jdbc.sql.SQLFactoryImpl.newUnion(int),4,7
org.apache.openjpa.jdbc.sql.SQLFactoryImpl.newUnion(Select[]),5,8
org.apache.openjpa.jdbc.sql.SQLFactoryImpl.setConfiguration(Configuration),4,8
org.apache.openjpa.jdbc.sql.SQLFactoryImpl.startConfiguration(),2,2
org.apache.openjpa.jdbc.sql.SQLFactoryImpl.endConfiguration(),1,1
org.apache.openjpa.persistence.graph.City.getName(),2,3
org.apache.openjpa.persistence.graph.City.setName(String),3,6
org.apache.openjpa.persistence.identity.TestSQLDateId.setUp(),4,5
org.apache.openjpa.persistence.identity.TestSQLDateId.testPersist(),19,45
org.apache.openjpa.persistence.identity.TestSQLDateId.main(String[]),8,9
org.apache.openjpa.jdbc.kernel.exps.UnaryOp.UnaryOp(Val),6,9
"org.apache.openjpa.jdbc.kernel.exps.UnaryOp.UnaryOp(Val,boolean)",3,8
org.apache.openjpa.jdbc.kernel.exps.UnaryOp.getValue(),2,3
org.apache.openjpa.jdbc.kernel.exps.UnaryOp.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.UnaryOp.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.UnaryOp.getType(),3,6
org.apache.openjpa.jdbc.kernel.exps.UnaryOp.setImplicitType(Class),4,6
org.apache.openjpa.jdbc.kernel.exps.UnaryOp.getNoParen(),1,2
"org.apache.openjpa.jdbc.kernel.exps.UnaryOp.initialize(Select,ExpContext,int)",8,13
"org.apache.openjpa.jdbc.kernel.exps.UnaryOp.initializeValue(Select,ExpContext,int)",9,14
"org.apache.openjpa.jdbc.kernel.exps.UnaryOp.select(Select,ExpContext,ExpState,boolean)",10,18
"org.apache.openjpa.jdbc.kernel.exps.UnaryOp.selectColumns(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.UnaryOp.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.UnaryOp.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.UnaryOp.newSQLBuffer(Select,ExpContext,ExpState)",13,27
"org.apache.openjpa.jdbc.kernel.exps.UnaryOp.load(ExpContext,ExpState,Result)",21,38
"org.apache.openjpa.jdbc.kernel.exps.UnaryOp.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",8,15
"org.apache.openjpa.jdbc.kernel.exps.UnaryOp.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.UnaryOp.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",27,63
org.apache.openjpa.jdbc.kernel.exps.UnaryOp.getType(Class),5,9
org.apache.openjpa.jdbc.kernel.exps.UnaryOp.getOperator(),3,4
org.apache.openjpa.jdbc.kernel.exps.UnaryOp.acceptVisit(ExpressionVisitor),7,13
"org.apache.openjpa.jdbc.kernel.exps.UnaryOp.nullableValue(ExpContext,ExpState)",6,7
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCLeafC.getLeafCData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCLeafC.setLeafCData(String),4,10
org.apache.openjpa.lib.rop.AbstractListIterator<E>.add(E),7,7
org.apache.openjpa.lib.rop.AbstractListIterator<E>.set(E),7,7
org.apache.openjpa.lib.rop.AbstractListIterator<E>.remove(),7,7
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.RootEntity.fetchId(),2,2
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.RootEntity.updateId(Object),3,3
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.RootEntity.getRootEntityData(),4,4
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.RootEntity.setRootEntityData(String),5,8
org.apache.openjpa.lib.conf.IntValue.IntValue(String),3,4
org.apache.openjpa.lib.conf.IntValue.getValueType(),3,3
org.apache.openjpa.lib.conf.IntValue.set(int),5,13
org.apache.openjpa.lib.conf.IntValue.get(),3,4
org.apache.openjpa.lib.conf.IntValue.getInternalString(),3,6
org.apache.openjpa.lib.conf.IntValue.setInternalString(String),8,14
org.apache.openjpa.lib.conf.IntValue.setInternalObject(Object),5,10
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLClass.UMLClass(),1,1
org.apache.openjpa.lib.meta.FileMetaDataIterator.FileMetaDataIterator(File),10,15
"org.apache.openjpa.lib.meta.FileMetaDataIterator.FileMetaDataIterator(File,MetaDataFilter)",22,42
"org.apache.openjpa.lib.meta.FileMetaDataIterator.scan(File,MetaDataFilter,FileResource,Collection<File>,int)",32,72
org.apache.openjpa.lib.meta.FileMetaDataIterator.hasNext(),1,2
org.apache.openjpa.lib.meta.FileMetaDataIterator.next(),14,33
org.apache.openjpa.lib.meta.FileMetaDataIterator.getInputStream(),14,33
org.apache.openjpa.lib.meta.FileMetaDataIterator.getFile(),3,6
org.apache.openjpa.lib.meta.FileMetaDataIterator.close(),1,1
org.apache.openjpa.lib.meta.FileMetaDataIterator.FileResource.setFile(File),2,6
org.apache.openjpa.lib.meta.FileMetaDataIterator.FileResource.getName(),3,4
org.apache.openjpa.lib.meta.FileMetaDataIterator.FileResource.getContent(),29,76
org.apache.openjpa.persistence.annotations.TestEnumerated.TestEnumerated(String),5,6
org.apache.openjpa.persistence.annotations.TestEnumerated.setUp(),4,4
org.apache.openjpa.persistence.annotations.TestEnumerated.testBehavior(),25,142
"org.apache.openjpa.lib.util.StreamResourceBundleProvider.findResource(String,Locale,ClassLoader)",22,37
org.apache.openjpa.persistence.jdbc.annotations.TestDiscriminator.setUp(),13,24
org.apache.openjpa.persistence.jdbc.annotations.TestDiscriminator.testJoinedDiscriminatorWithColumn(),22,42
org.apache.openjpa.persistence.jdbc.common.apps.CircularFKPC2.CircularFKPC2(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.CircularFKPC2.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.CircularFKPC2.setStringField(String),3,10
org.apache.openjpa.persistence.jdbc.common.apps.CircularFKPC2.getFKField(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.CircularFKPC2.setFKField(CircularFKPC),4,7
"org.apache.openjpa.enhance.ManagedClassSubclasser.prepareUnenhancedClasses(OpenJPAConfiguration,Collection<>,ClassLoader)",141,391
"org.apache.openjpa.enhance.ManagedClassSubclasser.prepareUnenhancedClasses(OpenJPAConfiguration,Collection<>,ClassLoader).$1.write(BCClass)",8,9
"org.apache.openjpa.enhance.ManagedClassSubclasser.collectRelatedUnspecifiedTypes(ClassMetaData,Collection<>,Set<Class<>>)",17,80
"org.apache.openjpa.enhance.ManagedClassSubclasser.collectUnspecifiedType(Class<>,Collection<>,Set<Class<>>)",13,27
"org.apache.openjpa.enhance.ManagedClassSubclasser.configureMetaData(OpenJPAConfiguration,ClassLoader,Class<>,boolean)",13,32
"org.apache.openjpa.enhance.ManagedClassSubclasser.configureMetaData(ClassMetaData,OpenJPAConfiguration,boolean,boolean)",45,102
"org.apache.openjpa.enhance.ManagedClassSubclasser.write(BCClass,PCEnhancer,Map<Class<>,byte[]>,Class<>,List<Class<>>,List<Class<>>)",30,51
org.apache.openjpa.enhance.ManagedClassSubclasser.debugBytecodes(BCClass),33,58
"org.apache.openjpa.enhance.ManagedClassSubclasser.setIntercepting(OpenJPAConfiguration,ClassLoader,Class<>)",12,25
org.apache.openjpa.enhance.ManagedClassSubclasser.setDetachedState(ClassMetaData),14,25
demo.DataLoader.populate(EntityManager),27,48
demo.DataLoader.createActors(),9,24
demo.DataLoader.createMovies(),8,21
"demo.DataLoader.linkActorAndMovie(Movie[],Actor[])",8,24
demo.DataLoader.makePartner(Actor[]),6,17
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuper.EmbeddableSuper(),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuper.getPK(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuper.setPK(long),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuper.getTrans(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuper.setTrans(int),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuper.getClob(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuper.setClob(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuper.getVersion(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuper.setVersion(int),2,5
org.apache.openjpa.persistence.query.SumExpression.SumExpression(Expression),5,7
org.apache.openjpa.persistence.cache.jpa.TestMultiEMFCacheModes.setUp(),12,14
org.apache.openjpa.persistence.cache.jpa.TestMultiEMFCacheModes.testCacheRefreshModeRefresh(),62,222
org.apache.openjpa.persistence.cache.jpa.TestMultiEMFCacheModes.testCacheRefreshModeRefreshDelete(),77,225
org.apache.openjpa.persistence.cache.jpa.TestMultiEMFCacheModes.createEntity(EntityManager),14,26
"org.apache.openjpa.persistence.cache.jpa.TestMultiEMFCacheModes.verifyUpdatedEntity(CacheableEntity,int)",8,13
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.EntityDDListener2.verifyPreUpdate(Object),13,16
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.EntityDDListener2.verifyPostLoad(Object),13,16
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.AbstractManagedType(Class<X>,MetamodelImpl)",16,24
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.AbstractManagedType(ClassMetaData,MetamodelImpl)",68,310
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getAttributes(),12,16
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredAttributes(),12,19
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getSingularAttributes(),14,22
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredSingularAttributes(),15,27
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getAttribute(String,Class<Y>)",16,36
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getSingularAttribute(String,Class<Y>)",19,45
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredAttribute(String,Class<Y>)",19,43
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredSingularAttribute(String,Class<Y>)",21,51
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getPluralAttributes(),14,22
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredPluralAttributes(),14,26
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getCollection(String,Class<E>)",23,53
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getSet(String,Class<E>)",23,53
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getList(String,Class<E>)",23,53
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getMap(String,Class<K>,Class<V>)",25,60
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredCollection(String,Class<E>)",25,59
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredSet(String,Class<E>)",25,54
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredList(String,Class<E>)",25,59
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredMap(String,Class<K>,Class<V>)",27,66
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getAttribute(String),9,15
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredAttribute(String),10,18
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getSingularAttribute(String),12,20
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredSingularAttribute(String),13,23
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getCollection(String),12,19
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getSet(String),12,19
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getList(String),12,19
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getMap(String),12,19
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredCollection(String),13,22
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredSet(String),13,22
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredList(String),13,22
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredMap(String),13,22
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getIdClassAttributes(),21,41
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getId(Class<Y>),10,20
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredId(Class<Y>),16,38
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getVersion(Class<Y>),16,37
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getDeclaredVersion(Class<Y>),18,43
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getField(String),5,8
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getField(String,Class)",6,10
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getField(String,Class,boolean)",7,12
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.getField(String,Class<>,Class<>,Class<>,boolean)",35,134
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.assertType(String,FieldMetaData,Class<>,Class<>)",17,27
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.wrap(Class<>),4,4
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.notFoundException(String,String,Class<>)",11,17
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.notFoundException(String,String,Class<>,Class<>)",11,17
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.Filter<Y,Y,Y,Y,E,E,E,K,V,E,E,E,K,V,Y,Y,Y,Y,T>.selects(T)",2,2
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.Filter<Y,Y,Y,Y,E,E,E,K,V,E,E,E,K,V,Y,Y,Y,Y,T>.inverse()",2,2
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.filter(Collection<T>,C,Filter<T>,Filter<T>,Filter<T>,Filter<T>)",8,19
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.pick(Collection<T>,Filter<T>,Filter<T>,Filter<T>,Filter<T>)",24,34
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.filter(Collection<T>,C,Filter<T>)",6,11
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.filter(Collection<T>,C,Filter<T>,Filter<T>)",6,12
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.filter(Collection<T>,C,Filter<T>,Filter<T>,Filter<T>)",6,13
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.pick(Collection<T>,Filter<T>)",4,6
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.pick(Collection<T>,Filter<T>,Filter<T>)",4,7
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.pick(Collection<T>,Filter<T>,Filter<T>,Filter<T>)",4,8
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.SingularAttributeFilter<T,C,E,T,T,C,E,T,C,E,T,C,E,T,T,T,X>.SingularAttributeFilter()",3,3
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.SingularAttributeFilter<T,C,E,T,T,C,E,T,C,E,T,C,E,T,T,T,X>.SingularAttributeFilter(boolean)",5,6
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.SingularAttributeFilter<T,C,E,T,T,C,E,T,C,E,T,C,E,T,T,T,X>.selects(Attribute<>)",5,8
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.SingularAttributeFilter<T,C,E,T,T,C,E,T,C,E,T,C,E,T,T,T,X>.inverse()",5,8
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.DeclaredAttributeFilter<X>.DeclaredAttributeFilter(ManagedType<X>),6,7
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.DeclaredAttributeFilter<X>.DeclaredAttributeFilter(ManagedType<X>,boolean)",8,11
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.DeclaredAttributeFilter<X>.selects(Attribute<>),7,12
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.DeclaredAttributeFilter<X>.inverse(),6,9
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.AttributeTypeFilter<X,Y>.AttributeTypeFilter(Class<Y>)",3,5
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.AttributeTypeFilter<X,Y>.AttributeTypeFilter(Class<Y>,boolean)",5,9
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.AttributeTypeFilter<X,Y>.selects(Attribute<>)",9,14
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.AttributeTypeFilter<X,Y>.inverse()",5,9
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.AttributeNameFilter<X>.AttributeNameFilter(String),4,6
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.AttributeNameFilter<X>.AttributeNameFilter(String,boolean)",6,10
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.AttributeNameFilter<X>.selects(Attribute<>),6,12
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.AttributeNameFilter<X>.inverse(),5,9
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.PluralCategoryFilter<X>.PluralCategoryFilter(CollectionType),5,7
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.PluralCategoryFilter<X>.PluralCategoryFilter(CollectionType,boolean)",7,11
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.PluralCategoryFilter<X>.selects(Attribute<>),9,16
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.PluralCategoryFilter<X>.inverse(),5,9
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.ElementTypeFilter<X,E>.ElementTypeFilter(Class<E>)",3,5
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.ElementTypeFilter<X,E>.ElementTypeFilter(Class<E>,boolean)",5,10
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.ElementTypeFilter<X,E>.selects(Attribute<>)",9,21
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.ElementTypeFilter<X,E>.inverse()",5,10
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.EntryTypeFilter<X,K,V>.EntryTypeFilter(Class<K>,Class<V>)",3,7
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.EntryTypeFilter<X,K,V>.EntryTypeFilter(Class<K>,Class<V>,boolean)",7,14
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.EntryTypeFilter<X,K,V>.selects(Attribute<>)",11,32
"org.apache.openjpa.persistence.meta.AbstractManagedType<X>.EntryTypeFilter<X,K,V>.inverse()",7,12
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.IdAttributeFilter<X>.IdAttributeFilter(),2,2
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.IdAttributeFilter<X>.IdAttributeFilter(boolean),4,5
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.IdAttributeFilter<X>.selects(Attribute<>),8,11
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.IdAttributeFilter<X>.inverse(),4,6
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.VersionAttributeFilter<X>.VersionAttributeFilter(),3,3
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.VersionAttributeFilter<X>.VersionAttributeFilter(boolean),5,6
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.VersionAttributeFilter<X>.selects(Attribute<>),10,15
org.apache.openjpa.persistence.meta.AbstractManagedType<X>.VersionAttributeFilter<X>.inverse(),4,6
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2ID.MappingTest2ID(),3,3
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2ID.MappingTest2ID(String),10,24
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2ID.equals(Object),6,11
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2ID.hashCode(),7,11
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2ID.toString(),9,14
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapPerson.SQLMapPerson(),3,3
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapPerson.SQLMapPerson(String),5,7
"org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapPerson.SQLMapPerson(String,SQLMapAddress)",7,14
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapPerson.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapPerson.setName(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapPerson.getAddress(),3,5
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapPerson.setAddress(SQLMapAddress),4,8
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapPerson.getPartner(),4,5
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapPerson.setPartner(SQLMapPerson),5,8
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.PhoneNumber.getNumber(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.PhoneNumber.setNumber(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.PhoneNumber.getEmployees(),5,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.PhoneNumber.addEmployees(String,Employee)",6,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.PhoneNumber.removeEmployee(String),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.PhoneNumber.equals(Object),15,45
org.apache.openjpa.conf.TestQueryHints.setUp(),14,18
org.apache.openjpa.conf.TestQueryHints.testSupportedHintsContainProductDerivationHints(),12,25
org.apache.openjpa.conf.TestQueryHints.testSupportedHintsContainFetchPlanHints(),10,14
org.apache.openjpa.conf.TestQueryHints.testSupportedHintsIgnoresSomeFetchPlanBeanStyleProperty(),14,17
org.apache.openjpa.conf.TestQueryHints.testSupportedHintsContainQueryProperty(),9,10
org.apache.openjpa.conf.TestQueryHints.testSupportedHintsContainKernelQueryHints(),9,15
org.apache.openjpa.conf.TestQueryHints.testSupportedHintsContainJPAQueryHints(),10,13
org.apache.openjpa.conf.TestQueryHints.testUnrecognizedKeyIsIgnored(),17,30
org.apache.openjpa.conf.TestQueryHints.testRecognizedKeyIsNotRecordedButAvailable(),18,32
org.apache.openjpa.conf.TestQueryHints.testSupportedKeyIsRecordedAndAvailable(),17,32
org.apache.openjpa.conf.TestQueryHints.testSupportedKeyWrongValue(),23,56
org.apache.openjpa.conf.TestQueryHints.testSupportedKeyIntegerValueConversion(),26,57
org.apache.openjpa.conf.TestQueryHints.testSupportedKeyBooleanValueConversion(),17,57
org.apache.openjpa.conf.TestQueryHints.testJPAHintSetsFetchPlan(),13,32
org.apache.openjpa.conf.TestQueryHints.testInvalidLockTimeoutHint(),14,24
org.apache.openjpa.conf.TestQueryHints.testInvalidQueryTimeoutHint(),13,24
org.apache.openjpa.conf.TestQueryHints.testFetchPlanIsolation(),19,39
org.apache.openjpa.conf.TestQueryHints.testInvalidFetchPlanIsolation(),20,41
"org.apache.openjpa.conf.TestQueryHints.assertSupportedHint(String,boolean)",8,24
org.apache.openjpa.jdbc.kernel.TestM2MBiVersion.setUp(),6,7
org.apache.openjpa.jdbc.kernel.TestM2MBiVersion.createEntities(),28,78
org.apache.openjpa.jdbc.kernel.TestM2MBiVersion.testNonRelationalFieldInverseSideVersionUpdate(),24,82
org.apache.openjpa.jdbc.kernel.TestM2MBiVersion.testNonRelationalFieldOwnerSideVersionUpdate(),29,94
org.apache.openjpa.jdbc.kernel.TestM2MBiVersion.testRelationalFieldBothSidesVersionUpdate(),43,185
org.apache.openjpa.lib.meta.SourceTrackers.getSourceLocationMessage(SourceTracker[]),37,92
org.apache.openjpa.lib.util.J2DoPrivHelper.getLineSeparator(),17,29
org.apache.openjpa.lib.util.J2DoPrivHelper.getLineSeparator().$1.run(),6,6
org.apache.openjpa.lib.util.J2DoPrivHelper.getPathSeparator(),17,29
org.apache.openjpa.lib.util.J2DoPrivHelper.getPathSeparator().$2.run(),6,6
"org.apache.openjpa.lib.util.J2DoPrivHelper.setAccessibleAction(AccessibleObject,boolean)",18,31
"org.apache.openjpa.lib.util.J2DoPrivHelper.setAccessibleAction(AccessibleObject,boolean).$3.run()",6,7
"org.apache.openjpa.lib.util.J2DoPrivHelper.getForNameAction(String,boolean,ClassLoader)",24,37
"org.apache.openjpa.lib.util.J2DoPrivHelper.getForNameAction(String,boolean,ClassLoader).$4.run()",6,7
org.apache.openjpa.lib.util.J2DoPrivHelper.getClassLoaderAction(Class<>),21,38
org.apache.openjpa.lib.util.J2DoPrivHelper.getClassLoaderAction(Class<>).$5.run(),3,4
"org.apache.openjpa.lib.util.J2DoPrivHelper.getDeclaredFieldAction(Class<>,String)",17,35
"org.apache.openjpa.lib.util.J2DoPrivHelper.getDeclaredFieldAction(Class<>,String).$6.run()",6,8
org.apache.openjpa.lib.util.J2DoPrivHelper.getDeclaredFieldsAction(Class<>),16,26
org.apache.openjpa.lib.util.J2DoPrivHelper.getDeclaredFieldsAction(Class<>).$7.run(),5,5
"org.apache.openjpa.lib.util.J2DoPrivHelper.getDeclaredMethodAction(Class<>,String,Class<>[])",19,37
"org.apache.openjpa.lib.util.J2DoPrivHelper.getDeclaredMethodAction(Class<>,String,Class<>[]).$8.run()",8,10
org.apache.openjpa.lib.util.J2DoPrivHelper.getDeclaredMethodsAction(Class<>),16,27
org.apache.openjpa.lib.util.J2DoPrivHelper.getDeclaredMethodsAction(Class<>).$9.run(),5,5
"org.apache.openjpa.lib.util.J2DoPrivHelper.getResourceAction(Class<>,String)",15,25
"org.apache.openjpa.lib.util.J2DoPrivHelper.getResourceAction(Class<>,String).$10.run()",4,5
org.apache.openjpa.lib.util.J2DoPrivHelper.newInstanceAction(Class<T>),18,38
org.apache.openjpa.lib.util.J2DoPrivHelper.newInstanceAction(Class<T>).$11.run(),14,20
org.apache.openjpa.lib.util.J2DoPrivHelper.getProtectionDomainAction(Class<>),14,29
org.apache.openjpa.lib.util.J2DoPrivHelper.getProtectionDomainAction(Class<>).$12.run(),4,6
org.apache.openjpa.lib.util.J2DoPrivHelper.getParentAction(ClassLoader),13,25
org.apache.openjpa.lib.util.J2DoPrivHelper.getParentAction(ClassLoader).$13.run(),3,4
"org.apache.openjpa.lib.util.J2DoPrivHelper.getResourceAction(ClassLoader,String)",15,26
"org.apache.openjpa.lib.util.J2DoPrivHelper.getResourceAction(ClassLoader,String).$14.run()",4,5
"org.apache.openjpa.lib.util.J2DoPrivHelper.getResourcesAction(ClassLoader,String)",17,34
"org.apache.openjpa.lib.util.J2DoPrivHelper.getResourcesAction(ClassLoader,String).$15.run()",7,7
org.apache.openjpa.lib.util.J2DoPrivHelper.getSystemClassLoaderAction(),13,25
org.apache.openjpa.lib.util.J2DoPrivHelper.getSystemClassLoaderAction().$16.run(),3,5
org.apache.openjpa.lib.util.J2DoPrivHelper.deleteAction(File),11,19
org.apache.openjpa.lib.util.J2DoPrivHelper.deleteAction(File).$17.run(),2,2
org.apache.openjpa.lib.util.J2DoPrivHelper.existsAction(File),12,19
org.apache.openjpa.lib.util.J2DoPrivHelper.existsAction(File).$18.run(),5,5
org.apache.openjpa.lib.util.J2DoPrivHelper.deleteOnExitAction(File),12,21
org.apache.openjpa.lib.util.J2DoPrivHelper.deleteOnExitAction(File).$19.run(),3,3
org.apache.openjpa.lib.util.J2DoPrivHelper.getAbsoluteFileAction(File),14,25
org.apache.openjpa.lib.util.J2DoPrivHelper.getAbsoluteFileAction(File).$20.run(),3,4
org.apache.openjpa.lib.util.J2DoPrivHelper.getAbsolutePathAction(File),16,25
org.apache.openjpa.lib.util.J2DoPrivHelper.getAbsolutePathAction(File).$21.run(),4,4
org.apache.openjpa.lib.util.J2DoPrivHelper.getCanonicalPathAction(File),16,31
org.apache.openjpa.lib.util.J2DoPrivHelper.getCanonicalPathAction(File).$22.run(),5,5
org.apache.openjpa.lib.util.J2DoPrivHelper.isDirectoryAction(File),12,19
org.apache.openjpa.lib.util.J2DoPrivHelper.isDirectoryAction(File).$23.run(),2,2
org.apache.openjpa.lib.util.J2DoPrivHelper.isFileAction(File),11,19
org.apache.openjpa.lib.util.J2DoPrivHelper.isFileAction(File).$24.run(),2,2
org.apache.openjpa.lib.util.J2DoPrivHelper.lengthAction(File),12,19
org.apache.openjpa.lib.util.J2DoPrivHelper.lengthAction(File).$25.run(),3,3
org.apache.openjpa.lib.util.J2DoPrivHelper.listFilesAction(File),13,24
org.apache.openjpa.lib.util.J2DoPrivHelper.listFilesAction(File).$26.run(),4,4
org.apache.openjpa.lib.util.J2DoPrivHelper.mkdirsAction(File),12,19
org.apache.openjpa.lib.util.J2DoPrivHelper.mkdirsAction(File).$27.run(),2,2
"org.apache.openjpa.lib.util.J2DoPrivHelper.renameToAction(File,File)",12,20
"org.apache.openjpa.lib.util.J2DoPrivHelper.renameToAction(File,File).$28.run()",2,2
org.apache.openjpa.lib.util.J2DoPrivHelper.toURLAction(File),13,32
org.apache.openjpa.lib.util.J2DoPrivHelper.toURLAction(File).$29.run(),5,7
org.apache.openjpa.lib.util.J2DoPrivHelper.newFileInputStreamAction(File),14,41
org.apache.openjpa.lib.util.J2DoPrivHelper.newFileInputStreamAction(File).$30.run(),6,10
org.apache.openjpa.lib.util.J2DoPrivHelper.newFileOutputStreamAction(File),14,41
org.apache.openjpa.lib.util.J2DoPrivHelper.newFileOutputStreamAction(File).$31.run(),6,10
"org.apache.openjpa.lib.util.J2DoPrivHelper.newFileOutputStreamAction(String,boolean)",16,42
"org.apache.openjpa.lib.util.J2DoPrivHelper.newFileOutputStreamAction(String,boolean).$32.run()",7,11
org.apache.openjpa.lib.util.J2DoPrivHelper.getByNameAction(String),20,38
org.apache.openjpa.lib.util.J2DoPrivHelper.getByNameAction(String).$33.run(),8,10
"org.apache.openjpa.lib.util.J2DoPrivHelper.newSocketAction(InetAddress,int)",16,31
"org.apache.openjpa.lib.util.J2DoPrivHelper.newSocketAction(InetAddress,int).$34.run()",5,6
org.apache.openjpa.lib.util.J2DoPrivHelper.newServerSocketAction(int),14,33
org.apache.openjpa.lib.util.J2DoPrivHelper.newServerSocketAction(int).$35.run(),5,7
org.apache.openjpa.lib.util.J2DoPrivHelper.acceptAction(ServerSocket),14,31
org.apache.openjpa.lib.util.J2DoPrivHelper.acceptAction(ServerSocket).$36.run(),4,4
org.apache.openjpa.lib.util.J2DoPrivHelper.getPropertiesAction(),14,23
org.apache.openjpa.lib.util.J2DoPrivHelper.getPropertiesAction().$37.run(),3,4
org.apache.openjpa.lib.util.J2DoPrivHelper.getPropertyAction(String),15,25
org.apache.openjpa.lib.util.J2DoPrivHelper.getPropertyAction(String).$38.run(),5,5
"org.apache.openjpa.lib.util.J2DoPrivHelper.getPropertyAction(String,String)",16,27
"org.apache.openjpa.lib.util.J2DoPrivHelper.getPropertyAction(String,String).$39.run()",6,6
org.apache.openjpa.lib.util.J2DoPrivHelper.getContextClassLoaderAction(),15,27
org.apache.openjpa.lib.util.J2DoPrivHelper.getContextClassLoaderAction().$40.run(),5,7
org.apache.openjpa.lib.util.J2DoPrivHelper.setContextClassLoaderAction(ClassLoader),16,31
org.apache.openjpa.lib.util.J2DoPrivHelper.setContextClassLoaderAction(ClassLoader).$41.run(),6,8
"org.apache.openjpa.lib.util.J2DoPrivHelper.newDaemonThreadAction(Runnable,String)",17,35
"org.apache.openjpa.lib.util.J2DoPrivHelper.newDaemonThreadAction(Runnable,String).$42.run()",6,11
org.apache.openjpa.lib.util.J2DoPrivHelper.openStreamAction(URL),14,32
org.apache.openjpa.lib.util.J2DoPrivHelper.openStreamAction(URL).$43.run(),5,6
org.apache.openjpa.lib.util.J2DoPrivHelper.getContentAction(URLConnection),15,30
org.apache.openjpa.lib.util.J2DoPrivHelper.getContentAction(URLConnection).$44.run(),5,5
org.apache.openjpa.lib.util.J2DoPrivHelper.newZipFileAction(File),12,32
org.apache.openjpa.lib.util.J2DoPrivHelper.newZipFileAction(File).$45.run(),4,6
org.apache.openjpa.lib.util.J2DoPrivHelper.getJarFileAction(JarURLConnection),15,36
org.apache.openjpa.lib.util.J2DoPrivHelper.getJarFileAction(JarURLConnection).$46.run(),5,7
org.apache.openjpa.lib.util.J2DoPrivHelper.getJarEntryAction(JarURLConnection),16,36
org.apache.openjpa.lib.util.J2DoPrivHelper.getJarEntryAction(JarURLConnection).$47.run(),5,7
org.apache.openjpa.lib.util.J2DoPrivHelper.newCodeAction(),15,26
org.apache.openjpa.lib.util.J2DoPrivHelper.newCodeAction().$48.run(),2,3
org.apache.openjpa.lib.util.J2DoPrivHelper.newTemporaryClassLoaderAction(ClassLoader),15,30
org.apache.openjpa.lib.util.J2DoPrivHelper.newTemporaryClassLoaderAction(ClassLoader).$49.run(),4,6
org.apache.openjpa.lib.util.J2DoPrivHelper.newMultiClassLoaderAction(),14,26
org.apache.openjpa.lib.util.J2DoPrivHelper.newMultiClassLoaderAction().$50.run(),3,5
"org.apache.openjpa.lib.util.J2DoPrivHelper.newBCClassLoaderAction(Project,ClassLoader)",15,27
"org.apache.openjpa.lib.util.J2DoPrivHelper.newBCClassLoaderAction(Project,ClassLoader).$51.run()",4,5
org.apache.openjpa.lib.util.J2DoPrivHelper.newBCClassLoaderAction(Project),4,10
org.apache.openjpa.lib.util.J2DoPrivHelper.newBCClassLoaderAction(Project).$52.run(),3,4
"org.apache.openjpa.lib.util.J2DoPrivHelper.getBCClassFieldsAction(BCClass,String)",16,25
"org.apache.openjpa.lib.util.J2DoPrivHelper.getBCClassFieldsAction(BCClass,String).$53.run()",4,5
org.apache.openjpa.lib.util.J2DoPrivHelper.getFieldInstructionFieldAction(FieldInstruction),14,29
org.apache.openjpa.lib.util.J2DoPrivHelper.getFieldInstructionFieldAction(FieldInstruction).$54.run(),3,4
"org.apache.openjpa.lib.util.J2DoPrivHelper.loadProjectClassAction(Project,Class<>)",16,25
"org.apache.openjpa.lib.util.J2DoPrivHelper.loadProjectClassAction(Project,Class<>).$55.run()",4,4
"org.apache.openjpa.lib.util.J2DoPrivHelper.loadProjectClassAction(Project,String)",17,26
"org.apache.openjpa.lib.util.J2DoPrivHelper.loadProjectClassAction(Project,String).$56.run()",5,5
org.apache.openjpa.lib.util.J2DoPrivHelper.getAnnotationsAction(AnnotatedElement),17,28
org.apache.openjpa.lib.util.J2DoPrivHelper.getAnnotationsAction(AnnotatedElement).$57.run(),4,4
org.apache.openjpa.lib.util.J2DoPrivHelper.getDeclaredAnnotationsAction(AnnotatedElement),17,30
org.apache.openjpa.lib.util.J2DoPrivHelper.getDeclaredAnnotationsAction(AnnotatedElement).$58.run(),5,5
"org.apache.openjpa.lib.util.J2DoPrivHelper.isAnnotationPresentAction(AnnotatedElement,Class<>)",17,28
"org.apache.openjpa.lib.util.J2DoPrivHelper.isAnnotationPresentAction(AnnotatedElement,Class<>).$59.run()",4,5
"org.apache.openjpa.lib.util.J2DoPrivHelper.getAnnotationAction(AnnotatedElement,Class<T>)",16,29
"org.apache.openjpa.lib.util.J2DoPrivHelper.getAnnotationAction(AnnotatedElement,Class<T>).$60.run()",4,5
"org.apache.openjpa.lib.util.J2DoPrivHelper.validateAction(Validator,T,Class<>[])",22,33
"org.apache.openjpa.lib.util.J2DoPrivHelper.validateAction(Validator,T,Class<>[]).$61.run()",7,7
org.apache.openjpa.lib.util.J2DoPrivHelper.buildDefaultValidatorFactoryAction(),18,31
org.apache.openjpa.lib.util.J2DoPrivHelper.buildDefaultValidatorFactoryAction().$62.run(),5,7
org.apache.openjpa.lib.util.J2DoPrivHelper.createURL(String),7,15
org.apache.openjpa.lib.util.J2DoPrivHelper.createURL(String).$63.run(),4,7
org.apache.openjpa.kernel.AbstractUnenhancedRelationBrokerSerializationTest<T>.testNewUnenhancedSMsRegisteredGlobally(),27,51
org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC.EmbeddedOwnerPC(),2,2
"org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC.EmbeddedOwnerPC(int,int)",2,2
org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC.getId1(),0,0
org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC.getId2(),0,0
org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC.getEmbedded(),1,3
org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC.setEmbedded(EmbeddedPC),2,6
org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC.getStringField(),2,5
org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC.setStringField(String),3,10
org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC.getComplexEmbedded(),2,6
org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC.setComplexEmbedded(ComplexEmbeddedPC),3,11
org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC.EmbKey.EmbKey(),2,2
org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC.EmbKey.EmbKey(String),8,18
org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC.EmbKey.equals(Object),5,12
org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC.EmbKey.hashCode(),2,4
"org.apache.openjpa.persistence.criteria.OpenJPACriteriaBuilder.qbe(From<T>,T,ComparisonStyle,Attribute<>)",47,81
"org.apache.openjpa.persistence.criteria.OpenJPACriteriaBuilder.qbe(From<T>,T,ComparisonStyle)",9,10
"org.apache.openjpa.persistence.criteria.OpenJPACriteriaBuilder.qbe(From<T>,T,Attribute<>)",8,8
"org.apache.openjpa.persistence.criteria.OpenJPACriteriaBuilder.qbe(From<T>,T)",9,9
org.apache.openjpa.persistence.criteria.OpenJPACriteriaBuilder.qbeStyle(),8,10
org.apache.openjpa.persistence.criteria.OpenJPACriteriaBuilder.getMetamodel(),5,7
org.apache.openjpa.persistence.criteria.OpenJPACriteriaBuilder.createQuery(),6,15
org.apache.openjpa.persistence.criteria.OpenJPACriteriaBuilder.createQuery(Class<T>),10,23
org.apache.openjpa.persistence.criteria.OpenJPACriteriaBuilder.createTupleQuery(),10,20
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.EntityH(),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.EntityH(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.getSecName(),3,7
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.setSecName(String),5,16
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.getEntityIs(),2,3
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.setEntityIs(Collection<EntityI>),4,10
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.addEntityI(EntityI),2,6
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.getEntityI2(),1,3
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.setEntityI2(EntityI2),3,9
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.getMap(),2,6
"org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.setMap(Map<EntityI3,EntityI4>)",4,12
"org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.addMapValues(EntityI3,EntityI4)",6,10
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.getMap2(),2,6
"org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.setMap2(Map<EntityI4,EntityI3>)",4,12
"org.apache.openjpa.persistence.delimited.identifiers.xml.EntityH.addMap2Values(EntityI4,EntityI3)",6,10
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdSeqGen.setUp(),29,45
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdSeqGen.tearDown(),5,6
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdSeqGen.getPersistenceUnitName(),9,9
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdSeqGen.createEntityB(),3,5
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdSeqGen.testSeqGen(),14,26
jpa.tools.swing.PathFinder.PathFinder(Maze),3,6
"jpa.tools.swing.PathFinder.findPath(int,int,int,int)",45,144
"jpa.tools.swing.PathFinder.exploreNeighbours(Node,Node,List<Node>,List<Node>)",11,52
"jpa.tools.swing.PathFinder.insertNeighbour(Node,int,int,Node,List<Node>,List<Node>)",12,31
"jpa.tools.swing.PathFinder.findMatchingNode(int,int,List<Node>)",3,8
"jpa.tools.swing.PathFinder.distance(Node,Node)",4,7
"jpa.tools.swing.PathFinder.distance(int,int,Node)",4,6
jpa.tools.swing.PathFinder.traceBackPath(Node),9,22
jpa.tools.swing.PathFinder.straighten(List<Point>),10,34
"jpa.tools.swing.PathFinder.Node.Node(Node,int,int)",2,3
jpa.tools.swing.PathFinder.Node.equals(Object),3,5
jpa.tools.swing.PathFinder.Node.compareTo(Node),2,2
jpa.tools.swing.PathFinder.Node.toString(),1,2
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.getEagerFetchMode(),5,10
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setEagerFetchMode(FetchMode),8,15
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.getSubclassFetchMode(),6,10
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setSubclassFetchMode(FetchMode),9,15
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.getResultSetType(),6,12
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setResultSetType(ResultSetType),8,17
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.getFetchDirection(),4,8
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setFetchDirection(FetchDirection),6,13
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.getLRSSizeAlgorithm(),6,10
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setLRSSizeAlgorithm(LRSSizeAlgorithm),9,17
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.getJoinSyntax(),3,7
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setJoinSyntax(JoinSyntax),7,12
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.getIsolation(),14,19
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setIsolation(IsolationLevel),17,24
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.addFetchGroup(String),5,6
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.addFetchGroups(Collection),5,6
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.addFetchGroups(String),5,6
"org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.addField(Class,String)",7,8
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.addField(String),6,7
"org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.addFields(Class,Collection)",7,8
"org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.addFields(Class,String)",7,8
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.addFields(Collection),6,7
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.addFields(String),6,7
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.clearFetchGroups(),3,4
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.clearFields(),4,4
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.removeFetchGroup(String),5,6
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.removeFetchGroups(Collection),5,6
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.removeFetchGroups(String),5,6
"org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.removeField(Class,String)",7,8
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.removeField(String),6,7
"org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.removeFields(Class,Collection)",7,8
"org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.removeFields(Class,String)",7,8
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.removeFields(String),6,7
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.removeFields(Collection),6,7
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.resetFetchGroups(),4,5
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setQueryResultCacheEnabled(boolean),8,9
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setFetchBatchSize(int),6,10
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setLockTimeout(int),6,7
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setMaxFetchDepth(int),6,8
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setReadLockMode(LockModeType),8,11
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setWriteLockMode(LockModeType),8,11
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setQueryTimeout(int),6,7
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setEagerFetchMode(int),9,17
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setSubclassFetchMode(int),9,17
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setResultSetType(int),10,18
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setFetchDirection(int),8,15
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.getLRSSize(),6,8
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setLRSSize(int),11,19
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setJoinSyntax(int),9,15
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.getIgnoreDfgForFkSelect(),16,31
org.apache.openjpa.persistence.jdbc.JDBCFetchPlan.setIgnoreDfgForFkSelect(boolean),17,32
org.apache.openjpa.jdbc.sql.InterbaseDictionary.InterbaseDictionary(),49,86
org.apache.openjpa.jdbc.sql.InterbaseDictionary.getTableNameForMetadata(String),5,14
org.apache.openjpa.jdbc.sql.InterbaseDictionary.getTableNameForMetadata(DBIdentifier),7,18
org.apache.openjpa.jdbc.sql.InterbaseDictionary.getColumnNameForMetadata(String),5,14
org.apache.openjpa.jdbc.sql.InterbaseDictionary.getColumnNameForMetadata(DBIdentifier),7,18
"org.apache.openjpa.jdbc.sql.InterbaseDictionary.appendSize(Column,String)",31,87
"org.apache.openjpa.jdbc.sql.InterbaseDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",14,18
"org.apache.openjpa.jdbc.sql.InterbaseDictionary.substring(SQLBuffer,FilterValue,FilterValue,FilterValue)",13,18
org.apache.openjpa.jdbc.sql.InterbaseDictionary.getDropColumnSQL(Column),9,29
"org.apache.openjpa.kernel.exps.Extension.Extension(FilterListener,Val,Val)",10,22
org.apache.openjpa.kernel.exps.Extension.getType(),5,10
org.apache.openjpa.kernel.exps.Extension.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.Extension.eval(Object,Object,StoreContext,Object[])",15,45
org.apache.openjpa.kernel.exps.Extension.getArgTypes(),4,10
org.apache.openjpa.kernel.exps.Extension.getArgs(Object),3,11
org.apache.openjpa.kernel.exps.Extension.acceptVisit(ExpressionVisitor),8,19
org.apache.openjpa.persistence.jest.QueryCommand.QueryCommand(JPAServletContext),6,7
org.apache.openjpa.persistence.jest.QueryCommand.getMandatoryArguments(),5,6
org.apache.openjpa.persistence.jest.QueryCommand.getMinimumArguments(),2,2
org.apache.openjpa.persistence.jest.QueryCommand.getValidQualifiers(),4,6
org.apache.openjpa.persistence.jest.QueryCommand.process(),58,136
org.apache.openjpa.kernel.exps.Index.Index(Val),3,5
org.apache.openjpa.kernel.exps.Index.getType(Class),1,1
"org.apache.openjpa.kernel.exps.Index.operate(Object,Class)",7,8
org.apache.openjpa.jdbc.meta.StrategyInstaller.StrategyInstaller(MappingRepository),7,10
org.apache.openjpa.jdbc.meta.StrategyInstaller.isAdapting(),10,10
org.apache.openjpa.jdbc.meta.StrategyInstaller.installStrategy(ClassMapping),4,7
org.apache.openjpa.jdbc.meta.StrategyInstaller.installStrategy(FieldMapping),4,7
org.apache.openjpa.jdbc.meta.StrategyInstaller.installStrategy(Version),4,7
org.apache.openjpa.jdbc.meta.StrategyInstaller.installStrategy(Discriminator),5,7
org.apache.openjpa.persistence.callbacks.PostLoadListenerImpl.postLoad(Object),7,17
org.apache.openjpa.enhance.TestUnenhancedCompoundPKSubclass.setUp(),8,13
org.apache.openjpa.enhance.TestUnenhancedCompoundPKSubclass.testCompoundPKFieldAccessUserDefined(),11,30
org.apache.openjpa.enhance.TestUnenhancedCompoundPKSubclass.testCompoundPKFieldAccessOpenJPADefined(),11,30
"org.apache.openjpa.enhance.TestUnenhancedCompoundPKSubclass.compoundPKHelper(Object,Object,boolean)",15,20
org.apache.openjpa.persistence.access.MixedFieldSub.getCreateDate(),3,5
org.apache.openjpa.persistence.access.MixedFieldSub.setCreateDate(Date),4,8
org.apache.openjpa.persistence.access.MixedFieldSub.equals(Object),10,32
org.apache.openjpa.persistence.access.MixedFieldSub.setMyFieldProp(String),4,7
org.apache.openjpa.persistence.access.MixedFieldSub.getMyFieldProp(),3,4
org.apache.openjpa.persistence.access.PropMixedEntity.setId(int),2,2
org.apache.openjpa.persistence.access.PropMixedEntity.getId(),1,1
org.apache.openjpa.persistence.access.PropMixedEntity.setName(String),3,6
org.apache.openjpa.persistence.access.PropMixedEntity.getName(),4,5
org.apache.openjpa.persistence.access.PropMixedEntity.getEmbedProp(),5,6
org.apache.openjpa.persistence.access.PropMixedEntity.setEmbedProp(EmbedMixedAccess),6,7
org.apache.openjpa.persistence.access.PropMixedEntity.equals(Object),8,22
org.apache.openjpa.event.SingleJVMRemoteCommitProvider.SingleJVMRemoteCommitProvider(),7,7
org.apache.openjpa.event.SingleJVMRemoteCommitProvider.broadcast(RemoteCommitEvent),19,37
org.apache.openjpa.event.SingleJVMRemoteCommitProvider.close(),3,3
org.apache.openjpa.persistence.annotations.TestManyToMany.TestManyToMany(String),4,5
org.apache.openjpa.persistence.annotations.TestManyToMany.setUp(),4,7
org.apache.openjpa.persistence.annotations.TestManyToMany.testManyToMany(),16,49
org.apache.openjpa.persistence.annotations.TestManyToMany.testInverseOwnerManyToMany(),19,54
org.apache.openjpa.persistence.query.ConstantExpression.ConstantExpression(Object),4,6
org.apache.openjpa.persistence.query.ConstantExpression.asExpression(AliasContext),8,10
org.apache.openjpa.persistence.query.ConstantExpression.asProjection(AliasContext),6,7
org.apache.openjpa.persistence.cache.jpa.TestCacheModeDisableSelectiveInheritance.setUp(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeDisableSelectiveInheritance.tearDown(),2,2
org.apache.openjpa.persistence.cache.jpa.TestCacheModeDisableSelectiveInheritance.testSimpleFind(),15,25
org.apache.openjpa.kernel.AbstractFieldManager.fetchBooleanField(int),4,5
org.apache.openjpa.kernel.AbstractFieldManager.fetchByteField(int),4,5
org.apache.openjpa.kernel.AbstractFieldManager.fetchCharField(int),4,5
org.apache.openjpa.kernel.AbstractFieldManager.fetchDoubleField(int),4,5
org.apache.openjpa.kernel.AbstractFieldManager.fetchFloatField(int),4,5
org.apache.openjpa.kernel.AbstractFieldManager.fetchIntField(int),4,5
org.apache.openjpa.kernel.AbstractFieldManager.fetchLongField(int),4,5
org.apache.openjpa.kernel.AbstractFieldManager.fetchObjectField(int),5,7
org.apache.openjpa.kernel.AbstractFieldManager.fetchShortField(int),4,5
org.apache.openjpa.kernel.AbstractFieldManager.fetchStringField(int),5,7
"org.apache.openjpa.kernel.AbstractFieldManager.storeBooleanField(int,boolean)",6,7
"org.apache.openjpa.kernel.AbstractFieldManager.storeByteField(int,byte)",6,7
"org.apache.openjpa.kernel.AbstractFieldManager.storeCharField(int,char)",6,7
"org.apache.openjpa.kernel.AbstractFieldManager.storeDoubleField(int,double)",6,7
"org.apache.openjpa.kernel.AbstractFieldManager.storeFloatField(int,float)",6,7
"org.apache.openjpa.kernel.AbstractFieldManager.storeIntField(int,int)",6,7
"org.apache.openjpa.kernel.AbstractFieldManager.storeLongField(int,long)",6,7
"org.apache.openjpa.kernel.AbstractFieldManager.storeObjectField(int,Object)",7,9
"org.apache.openjpa.kernel.AbstractFieldManager.storeShortField(int,short)",6,7
"org.apache.openjpa.kernel.AbstractFieldManager.storeStringField(int,String)",7,9
"org.apache.openjpa.persistence.datacache.CacheTestHelper.checkCache(AbstractTestCase,DataCache,Object[],boolean[])",9,22
"org.apache.openjpa.persistence.datacache.CacheTestHelper.assertInCache(AbstractTestCase,Query,Boolean)",4,7
"org.apache.openjpa.persistence.datacache.CacheTestHelper.assertInCache(AbstractTestCase,Query,Boolean,Object[])",24,92
"org.apache.openjpa.persistence.datacache.CacheTestHelper.isCachedResult(Object,Boolean,Broker)",22,48
org.apache.openjpa.persistence.datacache.CacheTestHelper.iterate(Collection),11,17
org.apache.openjpa.persistence.datacache.CacheTestHelper.cacheManager(BrokerFactory),7,14
"org.apache.openjpa.kernel.exps.TypeLit.TypeLit(Object,int)",9,13
org.apache.openjpa.kernel.exps.TypeLit.getValue(),3,3
org.apache.openjpa.kernel.exps.TypeLit.setValue(Object),4,6
org.apache.openjpa.kernel.exps.TypeLit.getParseType(),3,3
org.apache.openjpa.kernel.exps.TypeLit.getValue(Object[]),4,5
org.apache.openjpa.kernel.exps.TypeLit.getType(),3,4
org.apache.openjpa.kernel.exps.TypeLit.setImplicitType(Class),6,9
"org.apache.openjpa.kernel.exps.TypeLit.eval(Object,Object,StoreContext,Object[])",9,12
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.setConfigId(String),4,6
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.setContextRef(String),6,8
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.getConfigId(),2,3
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.getContextRef(),4,5
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.setPreparedQueryCache(PreparedQueryCache),4,7
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.getStatistics(),3,5
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.getExecutionCount(),6,12
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.getExecutionCount(String),6,15
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.getTotalExecutionCount(),7,14
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.getTotalExecutionCount(String),7,17
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.getHitCount(),6,12
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.getHitCount(String),6,15
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.getTotalHitCount(),7,14
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.getTotalHitCount(String),7,17
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.reset(),5,9
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.sinceDate(),5,9
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.startDate(),6,11
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.queries(),7,11
org.apache.openjpa.instrumentation.AbstractPreparedQueryCacheInstrument.getLevel(),3,6
org.apache.openjpa.persistence.datacache.TestBulkJPQLAndDataCache.setUp(),29,44
org.apache.openjpa.persistence.datacache.TestBulkJPQLAndDataCache.testBulkDelete(),32,59
org.apache.openjpa.persistence.datacache.TestBulkJPQLAndDataCache.testBulkUpdate(),32,59
org.apache.openjpa.persistence.datacache.TestBulkJPQLAndDataCache.testBulkDeleteOfCascadingEntity(),26,102
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeDisableSelective.getEntityManagerFactory(),20,43
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeDisableSelective.getListener(),4,10
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeDisableSelective.getSql(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeDisableSelective.testCacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeDisableSelective.testUncacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeDisableSelective.testUnspecified(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeDisableSelective.getExpectedInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeDisableSelective.getExpectedNotInCache(),2,4
"org.apache.openjpa.kernel.Audited.Audited(StateManagerImpl,PersistenceCapable)",13,20
org.apache.openjpa.kernel.Audited.getManagedObject(),5,8
org.apache.openjpa.kernel.Audited.getOriginalObject(),4,8
org.apache.openjpa.kernel.Audited.getUpdatedFields(),23,46
org.apache.openjpa.kernel.Audited.getManangedFieldValue(String),22,45
org.apache.openjpa.kernel.Audited.getOriginalFieldValue(String),16,38
org.apache.openjpa.kernel.Audited.getType(),10,17
org.apache.openjpa.kernel.EDeletedState.commit(StateManagerImpl),4,4
org.apache.openjpa.kernel.EDeletedState.commitRetain(StateManagerImpl),5,5
org.apache.openjpa.kernel.EDeletedState.rollback(StateManagerImpl),4,4
org.apache.openjpa.kernel.EDeletedState.rollbackRestore(StateManagerImpl),7,9
org.apache.openjpa.kernel.EDeletedState.nontransactional(StateManagerImpl),6,7
org.apache.openjpa.kernel.EDeletedState.release(StateManagerImpl),4,4
org.apache.openjpa.kernel.EDeletedState.isTransactional(),1,1
org.apache.openjpa.kernel.EDeletedState.isPersistent(),1,1
org.apache.openjpa.kernel.EDeletedState.isDeleted(),1,1
org.apache.openjpa.kernel.EDeletedState.isDirty(),1,1
org.apache.openjpa.kernel.EDeletedState.toString(),3,4
org.apache.openjpa.jdbc.meta.TestCalendarField.setUp(),4,5
org.apache.openjpa.jdbc.meta.TestCalendarField.testCalendarField(),17,53
org.apache.openjpa.jdbc.meta.TestCalendarField.testCalendarQuery(),21,60
org.apache.openjpa.persistence.detach.EntityB.EntityB(),1,1
"org.apache.openjpa.persistence.detach.EntityB.EntityB(long,String)",3,5
org.apache.openjpa.persistence.detach.EntityB.getId(),0,0
org.apache.openjpa.persistence.detach.EntityB.setId(long),1,1
org.apache.openjpa.persistence.detach.EntityB.getName(),2,3
org.apache.openjpa.persistence.detach.EntityB.setName(String),3,6
org.apache.openjpa.lib.conf.TestConfigurationProviderPrefixes.setUp(),13,25
org.apache.openjpa.lib.conf.TestConfigurationProviderPrefixes.tearDown(),7,8
org.apache.openjpa.lib.conf.TestConfigurationProviderPrefixes.testPrefixContents(),12,18
org.apache.openjpa.lib.conf.TestConfigurationProviderPrefixes.testPartialKeyAndNullMap(),7,9
org.apache.openjpa.lib.conf.TestConfigurationProviderPrefixes.testPartialKeyWithInvalidPrefix(),12,18
org.apache.openjpa.lib.conf.TestConfigurationProviderPrefixes.testPartialKeyWithoutMatch(),12,17
org.apache.openjpa.lib.conf.TestConfigurationProviderPrefixes.testPartialKeyWithOpenJPAMatch(),11,19
org.apache.openjpa.lib.conf.TestConfigurationProviderPrefixes.testPartialKeyWithCustomMatch(),11,21
org.apache.openjpa.lib.conf.TestConfigurationProviderPrefixes.testPartialKeyDuplicateFullKeys(),20,33
"org.apache.openjpa.lib.conf.TestConfigurationProviderPrefixes.assertEquals(String,String,Map,Object)",10,24
org.apache.openjpa.persistence.datacache.common.apps.AppIdCacheObject.AppIdCacheObject(),3,3
org.apache.openjpa.persistence.datacache.common.apps.AppIdCacheObject.AppIdCacheObject(int),3,3
org.apache.openjpa.persistence.datacache.common.apps.AppIdCacheObject.getId(),0,0
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectG.CacheObjectG(),2,2
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectG.CacheObjectG(String),3,3
"org.apache.openjpa.persistence.criteria.Expressions.toValue(ExpressionImpl<>,ExpressionFactory,CriteriaQueryImpl<>)",6,13
"org.apache.openjpa.persistence.criteria.Expressions.setImplicitTypes(Value,Value,Class<>,CriteriaQueryImpl<>)",14,20
"org.apache.openjpa.persistence.criteria.Expressions.acceptVisit(CriteriaExpressionVisitor,CriteriaExpression,Expression<>)",22,90
"org.apache.openjpa.persistence.criteria.Expressions.visitChildren(CriteriaExpressionVisitor,Expression<>)",9,19
"org.apache.openjpa.persistence.criteria.Expressions.asValue(AliasContext,Expression<>[],String)",17,36
"org.apache.openjpa.persistence.criteria.Expressions.asValue(AliasContext,Object)",20,39
org.apache.openjpa.persistence.criteria.Expressions.returnCopy(List<X>),8,20
org.apache.openjpa.persistence.criteria.Expressions.returnCopy(Set<X>),10,20
"org.apache.openjpa.persistence.criteria.Expressions.and(ExpressionFactory,org.apache.openjpa.kernel.exps.Expression,org.apache.openjpa.kernel.exps.Expression)",7,22
"org.apache.openjpa.persistence.criteria.Expressions.UnaryFunctionalExpression<X,X,X>.UnaryFunctionalExpression(Class<X>,Expression<>)",9,12
"org.apache.openjpa.persistence.criteria.Expressions.UnaryFunctionalExpression<X,X,X>.UnaryFunctionalExpression(Expression<X>)",5,6
"org.apache.openjpa.persistence.criteria.Expressions.UnaryFunctionalExpression<X,X,X>.acceptVisit(CriteriaExpressionVisitor)",6,10
"org.apache.openjpa.persistence.criteria.Expressions.BinarayFunctionalExpression<X>.BinarayFunctionalExpression(Class<X>,Expression<>,Expression<>)",11,16
org.apache.openjpa.persistence.criteria.Expressions.BinarayFunctionalExpression<X>.acceptVisit(CriteriaExpressionVisitor),6,10
"org.apache.openjpa.persistence.criteria.Expressions.FunctionalExpression<X>.FunctionalExpression(Class<X>,Expression<>)",13,26
org.apache.openjpa.persistence.criteria.Expressions.FunctionalExpression<X>.acceptVisit(CriteriaExpressionVisitor),7,11
"org.apache.openjpa.persistence.criteria.Expressions.BinaryLogicalExpression.BinaryLogicalExpression(Expression<>,Expression<>)",4,9
org.apache.openjpa.persistence.criteria.Expressions.BinaryLogicalExpression.acceptVisit(CriteriaExpressionVisitor),6,10
org.apache.openjpa.persistence.criteria.Expressions.Abs<X>.Abs(Expression<X>),2,2
"org.apache.openjpa.persistence.criteria.Expressions.Abs<X>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",12,22
org.apache.openjpa.persistence.criteria.Expressions.Abs<X>.asValue(AliasContext),9,11
org.apache.openjpa.persistence.criteria.Expressions.Count.Count(Expression<>),2,2
"org.apache.openjpa.persistence.criteria.Expressions.Count.Count(Expression<>,boolean)",3,5
"org.apache.openjpa.persistence.criteria.Expressions.Count.toValue(ExpressionFactory,CriteriaQueryImpl<>)",9,19
org.apache.openjpa.persistence.criteria.Expressions.Count.asValue(AliasContext),10,17
org.apache.openjpa.persistence.criteria.Expressions.Avg.Avg(Expression<>),2,2
"org.apache.openjpa.persistence.criteria.Expressions.Avg.toValue(ExpressionFactory,CriteriaQueryImpl<>)",12,22
org.apache.openjpa.persistence.criteria.Expressions.Avg.asValue(AliasContext),9,11
org.apache.openjpa.persistence.criteria.Expressions.Sqrt.Sqrt(Expression<>),2,2
"org.apache.openjpa.persistence.criteria.Expressions.Sqrt.toValue(ExpressionFactory,CriteriaQueryImpl<>)",12,22
org.apache.openjpa.persistence.criteria.Expressions.Sqrt.asValue(AliasContext),9,11
org.apache.openjpa.persistence.criteria.Expressions.Max<X>.Max(Expression<X>),2,2
"org.apache.openjpa.persistence.criteria.Expressions.Max<X>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",12,22
org.apache.openjpa.persistence.criteria.Expressions.Max<X>.asValue(AliasContext),9,11
org.apache.openjpa.persistence.criteria.Expressions.Min<X>.Min(Expression<X>),2,2
"org.apache.openjpa.persistence.criteria.Expressions.Min<X>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",12,22
org.apache.openjpa.persistence.criteria.Expressions.Min<X>.asValue(AliasContext),9,11
org.apache.openjpa.persistence.criteria.Expressions.Size.Size(Expression<>),4,4
org.apache.openjpa.persistence.criteria.Expressions.Size.Size(Collection<>),3,4
"org.apache.openjpa.persistence.criteria.Expressions.Size.toValue(ExpressionFactory,CriteriaQueryImpl<>)",17,44
org.apache.openjpa.persistence.criteria.Expressions.Size.asValue(AliasContext),9,11
"org.apache.openjpa.persistence.criteria.Expressions.DatabaseFunction<T>.DatabaseFunction(String,Class<T>,Expression<>)",8,18
"org.apache.openjpa.persistence.criteria.Expressions.DatabaseFunction<T>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",15,22
org.apache.openjpa.persistence.criteria.Expressions.DatabaseFunction<T>.asValue(AliasContext),12,16
org.apache.openjpa.persistence.criteria.Expressions.Type<X>.Type(PathImpl<>),3,5
"org.apache.openjpa.persistence.criteria.Expressions.Type<X>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",8,13
org.apache.openjpa.persistence.criteria.Expressions.Type<X>.asValue(AliasContext),9,11
"org.apache.openjpa.persistence.criteria.Expressions.Cast<B>.Cast(Expression<>,Class<B>)",2,2
"org.apache.openjpa.persistence.criteria.Expressions.Cast<B>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",10,15
org.apache.openjpa.persistence.criteria.Expressions.Cast<B>.asValue(AliasContext),12,14
"org.apache.openjpa.persistence.criteria.Expressions.Concat.Concat(Expression<String>,Expression<String>)",3,6
"org.apache.openjpa.persistence.criteria.Expressions.Concat.Concat(Expression<String>,String)",4,6
"org.apache.openjpa.persistence.criteria.Expressions.Concat.Concat(String,Expression<String>)",4,6
"org.apache.openjpa.persistence.criteria.Expressions.Concat.toValue(ExpressionFactory,CriteriaQueryImpl<>)",8,16
org.apache.openjpa.persistence.criteria.Expressions.Concat.asValue(AliasContext),10,12
"org.apache.openjpa.persistence.criteria.Expressions.Substring.Substring(Expression<String>,Expression<Integer>,Expression<Integer>)",6,17
"org.apache.openjpa.persistence.criteria.Expressions.Substring.Substring(Expression<String>,Expression<Integer>)",5,8
org.apache.openjpa.persistence.criteria.Expressions.Substring.Substring(Expression<String>),4,7
"org.apache.openjpa.persistence.criteria.Expressions.Substring.Substring(Expression<String>,Integer)",5,6
"org.apache.openjpa.persistence.criteria.Expressions.Substring.Substring(Expression<String>,Integer,Integer)",6,11
"org.apache.openjpa.persistence.criteria.Expressions.Substring.toValue(ExpressionFactory,CriteriaQueryImpl<>)",13,24
org.apache.openjpa.persistence.criteria.Expressions.Substring.acceptVisit(CriteriaExpressionVisitor),7,14
org.apache.openjpa.persistence.criteria.Expressions.Substring.asValue(AliasContext),11,14
"org.apache.openjpa.persistence.criteria.Expressions.Locate.Locate(Expression<String>,Expression<String>,Expression<Integer>)",7,23
"org.apache.openjpa.persistence.criteria.Expressions.Locate.Locate(Expression<String>,Expression<String>)",5,9
"org.apache.openjpa.persistence.criteria.Expressions.Locate.Locate(Expression<String>,String)",6,10
"org.apache.openjpa.persistence.criteria.Expressions.Locate.Locate(String,Expression<String>)",6,10
"org.apache.openjpa.persistence.criteria.Expressions.Locate.Locate(Expression<String>,String,int)",7,12
"org.apache.openjpa.persistence.criteria.Expressions.Locate.toValue(ExpressionFactory,CriteriaQueryImpl<>)",14,42
org.apache.openjpa.persistence.criteria.Expressions.Locate.acceptVisit(CriteriaExpressionVisitor),8,12
org.apache.openjpa.persistence.criteria.Expressions.Locate.asValue(AliasContext),12,14
"org.apache.openjpa.persistence.criteria.Expressions.Trim.Trim(Expression<String>,Expression<Character>,Trimspec)",5,7
"org.apache.openjpa.persistence.criteria.Expressions.Trim.Trim(Expression<String>,Expression<Character>)",5,6
org.apache.openjpa.persistence.criteria.Expressions.Trim.Trim(Expression<String>),4,5
"org.apache.openjpa.persistence.criteria.Expressions.Trim.Trim(Expression<String>,Character)",6,8
"org.apache.openjpa.persistence.criteria.Expressions.Trim.Trim(Expression<String>,Character,Trimspec)",6,8
"org.apache.openjpa.persistence.criteria.Expressions.Trim.Trim(Expression<String>,Trimspec)",4,5
"org.apache.openjpa.persistence.criteria.Expressions.Trim.toValue(ExpressionFactory,CriteriaQueryImpl<>)",15,34
org.apache.openjpa.persistence.criteria.Expressions.Trim.asValue(AliasContext),10,12
"org.apache.openjpa.persistence.criteria.Expressions.Sum<N>.Sum(Expression<>,Expression<>)",4,5
org.apache.openjpa.persistence.criteria.Expressions.Sum<N>.Sum(Expression<>),2,3
"org.apache.openjpa.persistence.criteria.Expressions.Sum<N>.Sum(Expression<>,Number)",3,3
"org.apache.openjpa.persistence.criteria.Expressions.Sum<N>.Sum(Number,Expression<>)",3,3
"org.apache.openjpa.persistence.criteria.Expressions.Sum<N>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",13,30
org.apache.openjpa.persistence.criteria.Expressions.Sum<N>.asValue(AliasContext),9,13
"org.apache.openjpa.persistence.criteria.Expressions.Product<N>.Product(Expression<>,Expression<>)",4,5
"org.apache.openjpa.persistence.criteria.Expressions.Product<N>.Product(Expression<>,Number)",3,3
"org.apache.openjpa.persistence.criteria.Expressions.Product<N>.Product(Number,Expression<>)",3,3
"org.apache.openjpa.persistence.criteria.Expressions.Product<N>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",8,16
org.apache.openjpa.persistence.criteria.Expressions.Product<N>.asValue(AliasContext),6,7
"org.apache.openjpa.persistence.criteria.Expressions.Diff<N>.Diff(Expression<>,Expression<>)",4,5
"org.apache.openjpa.persistence.criteria.Expressions.Diff<N>.Diff(Expression<>,Number)",3,3
"org.apache.openjpa.persistence.criteria.Expressions.Diff<N>.Diff(Number,Expression<>)",3,3
"org.apache.openjpa.persistence.criteria.Expressions.Diff<N>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",12,25
org.apache.openjpa.persistence.criteria.Expressions.Diff<N>.asValue(AliasContext),6,7
"org.apache.openjpa.persistence.criteria.Expressions.Quotient<N>.Quotient(Expression<>,Expression<>)",4,5
"org.apache.openjpa.persistence.criteria.Expressions.Quotient<N>.Quotient(Expression<>,Number)",3,3
"org.apache.openjpa.persistence.criteria.Expressions.Quotient<N>.Quotient(Number,Expression<>)",3,3
"org.apache.openjpa.persistence.criteria.Expressions.Quotient<N>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",12,25
org.apache.openjpa.persistence.criteria.Expressions.Quotient<N>.asValue(AliasContext),6,7
"org.apache.openjpa.persistence.criteria.Expressions.Mod.Mod(Expression<Integer>,Expression<Integer>)",3,6
"org.apache.openjpa.persistence.criteria.Expressions.Mod.Mod(Expression<Integer>,Integer)",4,7
"org.apache.openjpa.persistence.criteria.Expressions.Mod.Mod(Integer,Expression<Integer>)",4,7
"org.apache.openjpa.persistence.criteria.Expressions.Mod.toValue(ExpressionFactory,CriteriaQueryImpl<>)",12,25
org.apache.openjpa.persistence.criteria.Expressions.Mod.asValue(AliasContext),10,12
org.apache.openjpa.persistence.criteria.Expressions.CurrentDate.CurrentDate(),4,5
"org.apache.openjpa.persistence.criteria.Expressions.CurrentDate.toValue(ExpressionFactory,CriteriaQueryImpl<>)",10,13
org.apache.openjpa.persistence.criteria.Expressions.CurrentDate.asValue(AliasContext),7,9
org.apache.openjpa.persistence.criteria.Expressions.CurrentTime.CurrentTime(),4,5
"org.apache.openjpa.persistence.criteria.Expressions.CurrentTime.toValue(ExpressionFactory,CriteriaQueryImpl<>)",10,13
org.apache.openjpa.persistence.criteria.Expressions.CurrentTime.asValue(AliasContext),7,9
org.apache.openjpa.persistence.criteria.Expressions.CurrentTimestamp.CurrentTimestamp(),4,5
"org.apache.openjpa.persistence.criteria.Expressions.CurrentTimestamp.toValue(ExpressionFactory,CriteriaQueryImpl<>)",10,13
org.apache.openjpa.persistence.criteria.Expressions.CurrentTimestamp.asValue(AliasContext),7,9
"org.apache.openjpa.persistence.criteria.Expressions.Equal.Equal(Expression<X>,Expression<Y>)",2,3
"org.apache.openjpa.persistence.criteria.Expressions.Equal.Equal(Expression<X>,Object)",4,4
org.apache.openjpa.persistence.criteria.Expressions.Equal.not(),5,5
"org.apache.openjpa.persistence.criteria.Expressions.Equal.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",19,36
org.apache.openjpa.persistence.criteria.Expressions.Equal.asValue(AliasContext),6,7
"org.apache.openjpa.persistence.criteria.Expressions.NotEqual.NotEqual(Expression<X>,Expression<Y>)",2,3
"org.apache.openjpa.persistence.criteria.Expressions.NotEqual.NotEqual(Expression<X>,Object)",4,4
org.apache.openjpa.persistence.criteria.Expressions.NotEqual.not(),5,5
"org.apache.openjpa.persistence.criteria.Expressions.NotEqual.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",19,36
org.apache.openjpa.persistence.criteria.Expressions.NotEqual.asValue(AliasContext),6,7
"org.apache.openjpa.persistence.criteria.Expressions.GreaterThan.GreaterThan(Expression<X>,Expression<Y>)",1,2
"org.apache.openjpa.persistence.criteria.Expressions.GreaterThan.GreaterThan(Expression<X>,Object)",3,3
org.apache.openjpa.persistence.criteria.Expressions.GreaterThan.not(),5,5
"org.apache.openjpa.persistence.criteria.Expressions.GreaterThan.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",18,35
org.apache.openjpa.persistence.criteria.Expressions.GreaterThan.asValue(AliasContext),6,7
"org.apache.openjpa.persistence.criteria.Expressions.GreaterThanEqual.GreaterThanEqual(Expression<X>,Expression<Y>)",2,3
"org.apache.openjpa.persistence.criteria.Expressions.GreaterThanEqual.GreaterThanEqual(Expression<X>,Object)",4,4
org.apache.openjpa.persistence.criteria.Expressions.GreaterThanEqual.not(),4,4
"org.apache.openjpa.persistence.criteria.Expressions.GreaterThanEqual.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",19,36
org.apache.openjpa.persistence.criteria.Expressions.GreaterThanEqual.asValue(AliasContext),6,7
"org.apache.openjpa.persistence.criteria.Expressions.LessThan.LessThan(Expression<X>,Expression<Y>)",1,2
"org.apache.openjpa.persistence.criteria.Expressions.LessThan.LessThan(Expression<X>,Object)",3,3
org.apache.openjpa.persistence.criteria.Expressions.LessThan.not(),5,5
"org.apache.openjpa.persistence.criteria.Expressions.LessThan.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",18,35
org.apache.openjpa.persistence.criteria.Expressions.LessThan.asValue(AliasContext),6,7
"org.apache.openjpa.persistence.criteria.Expressions.LessThanEqual.LessThanEqual(Expression<X>,Expression<Y>)",2,3
"org.apache.openjpa.persistence.criteria.Expressions.LessThanEqual.LessThanEqual(Expression<X>,Object)",4,4
org.apache.openjpa.persistence.criteria.Expressions.LessThanEqual.not(),4,4
"org.apache.openjpa.persistence.criteria.Expressions.LessThanEqual.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",19,36
org.apache.openjpa.persistence.criteria.Expressions.LessThanEqual.asValue(AliasContext),6,7
"org.apache.openjpa.persistence.criteria.Expressions.Between<X,Y,X,X,Y,X,X,Y,X,X,Y,X,X,Y,X,X,Y,X,Y>.Between(Expression<>,Expression<>,Expression<>)",3,11
"org.apache.openjpa.persistence.criteria.Expressions.Between<X,Y,X,X,Y,X,X,Y,X,X,Y,X,X,Y,X,X,Y,X,Y>.Between(Expression<>,Y,Y)",2,3
"org.apache.openjpa.persistence.criteria.Expressions.Between<X,Y,X,X,Y,X,X,Y,X,X,Y,X,X,Y,X,X,Y,X,Y>.asValue(AliasContext)",6,7
"org.apache.openjpa.persistence.criteria.Expressions.Constant<X>.Constant(Class<X>,X)",2,2
org.apache.openjpa.persistence.criteria.Expressions.Constant<X>.Constant(X),1,1
"org.apache.openjpa.persistence.criteria.Expressions.Constant<X>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",28,109
org.apache.openjpa.persistence.criteria.Expressions.Constant<X>.acceptVisit(CriteriaExpressionVisitor),7,14
org.apache.openjpa.persistence.criteria.Expressions.Constant<X>.asValue(AliasContext),17,66
org.apache.openjpa.persistence.criteria.Expressions.IsEmpty.IsEmpty(Expression<>),4,7
org.apache.openjpa.persistence.criteria.Expressions.IsEmpty.not(),6,6
"org.apache.openjpa.persistence.criteria.Expressions.IsEmpty.toValue(ExpressionFactory,CriteriaQueryImpl<>)",8,12
"org.apache.openjpa.persistence.criteria.Expressions.IsEmpty.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",15,23
org.apache.openjpa.persistence.criteria.Expressions.IsEmpty.acceptVisit(CriteriaExpressionVisitor),7,14
org.apache.openjpa.persistence.criteria.Expressions.IsEmpty.asValue(AliasContext),8,9
org.apache.openjpa.persistence.criteria.Expressions.IsNotEmpty.IsNotEmpty(Expression<>),4,7
org.apache.openjpa.persistence.criteria.Expressions.IsNotEmpty.not(),6,6
"org.apache.openjpa.persistence.criteria.Expressions.IsNotEmpty.toValue(ExpressionFactory,CriteriaQueryImpl<>)",8,12
"org.apache.openjpa.persistence.criteria.Expressions.IsNotEmpty.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",17,28
org.apache.openjpa.persistence.criteria.Expressions.IsNotEmpty.acceptVisit(CriteriaExpressionVisitor),7,14
org.apache.openjpa.persistence.criteria.Expressions.IsNotEmpty.asValue(AliasContext),8,9
org.apache.openjpa.persistence.criteria.Expressions.Index.Index(Joins.List<>),4,4
"org.apache.openjpa.persistence.criteria.Expressions.Index.toValue(ExpressionFactory,CriteriaQueryImpl<>)",20,33
org.apache.openjpa.persistence.criteria.Expressions.Index.asValue(AliasContext),9,11
"org.apache.openjpa.persistence.criteria.Expressions.IsMember<E>.IsMember(Expression<E>,Expression<>)",4,12
"org.apache.openjpa.persistence.criteria.Expressions.IsMember<E>.IsMember(E,Expression<>)",4,6
"org.apache.openjpa.persistence.criteria.Expressions.IsMember<E>.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",15,32
org.apache.openjpa.persistence.criteria.Expressions.IsMember<E>.acceptVisit(CriteriaExpressionVisitor),8,15
org.apache.openjpa.persistence.criteria.Expressions.IsMember<E>.asValue(AliasContext),8,9
"org.apache.openjpa.persistence.criteria.Expressions.Like.Like(Expression<String>,Expression<String>,Expression<Character>)",7,22
"org.apache.openjpa.persistence.criteria.Expressions.Like.Like(Expression<String>,Expression<String>,char)",6,11
"org.apache.openjpa.persistence.criteria.Expressions.Like.Like(Expression<String>,Expression<String>)",3,6
"org.apache.openjpa.persistence.criteria.Expressions.Like.Like(Expression<String>,String)",4,7
"org.apache.openjpa.persistence.criteria.Expressions.Like.Like(Expression<String>,String,Expression<Character>)",6,11
"org.apache.openjpa.persistence.criteria.Expressions.Like.Like(Expression<String>,String,Character)",6,12
"org.apache.openjpa.persistence.criteria.Expressions.Like.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",22,42
org.apache.openjpa.persistence.criteria.Expressions.Like.acceptVisit(CriteriaExpressionVisitor),9,13
org.apache.openjpa.persistence.criteria.Expressions.Like.asValue(AliasContext),8,9
org.apache.openjpa.persistence.criteria.Expressions.Coalesce<T>.Coalesce(Class<T>),2,3
org.apache.openjpa.persistence.criteria.Expressions.Coalesce<T>.value(T),5,7
org.apache.openjpa.persistence.criteria.Expressions.Coalesce<T>.value(Expression<>),5,7
"org.apache.openjpa.persistence.criteria.Expressions.Coalesce<T>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",15,27
org.apache.openjpa.persistence.criteria.Expressions.Coalesce<T>.acceptVisit(CriteriaExpressionVisitor),10,16
org.apache.openjpa.persistence.criteria.Expressions.Coalesce<T>.asValue(AliasContext),14,20
"org.apache.openjpa.persistence.criteria.Expressions.Nullif<T>.Nullif(Expression<T>,Expression<>)",5,7
"org.apache.openjpa.persistence.criteria.Expressions.Nullif<T>.Nullif(Expression<T>,T)",3,3
"org.apache.openjpa.persistence.criteria.Expressions.Nullif<T>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",13,33
org.apache.openjpa.persistence.criteria.Expressions.Nullif<T>.acceptVisit(CriteriaExpressionVisitor),7,12
org.apache.openjpa.persistence.criteria.Expressions.Nullif<T>.asValue(AliasContext),11,14
org.apache.openjpa.persistence.criteria.Expressions.IsNull.IsNull(ExpressionImpl<>),2,2
org.apache.openjpa.persistence.criteria.Expressions.IsNull.not(),4,4
"org.apache.openjpa.persistence.criteria.Expressions.IsNull.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",13,20
org.apache.openjpa.persistence.criteria.Expressions.IsNull.acceptVisit(CriteriaExpressionVisitor),6,13
org.apache.openjpa.persistence.criteria.Expressions.IsNull.asValue(AliasContext),6,7
org.apache.openjpa.persistence.criteria.Expressions.IsNotNull.IsNotNull(ExpressionImpl<>),2,2
org.apache.openjpa.persistence.criteria.Expressions.IsNotNull.not(),4,4
"org.apache.openjpa.persistence.criteria.Expressions.IsNotNull.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",13,20
org.apache.openjpa.persistence.criteria.Expressions.IsNotNull.acceptVisit(CriteriaExpressionVisitor),6,13
org.apache.openjpa.persistence.criteria.Expressions.IsNotNull.asValue(AliasContext),6,7
org.apache.openjpa.persistence.criteria.Expressions.In<T>.In(Expression<>),2,3
org.apache.openjpa.persistence.criteria.Expressions.In<T>.getExpression(),1,2
org.apache.openjpa.persistence.criteria.Expressions.In<T>.value(T),4,6
org.apache.openjpa.persistence.criteria.Expressions.In<T>.value(Expression<>),5,7
org.apache.openjpa.persistence.criteria.Expressions.In<T>.not(),6,7
"org.apache.openjpa.persistence.criteria.Expressions.In<T>.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",43,168
org.apache.openjpa.persistence.criteria.Expressions.In<T>.acceptVisit(CriteriaExpressionVisitor),6,13
org.apache.openjpa.persistence.criteria.Expressions.In<T>.asValue(AliasContext),14,25
org.apache.openjpa.persistence.criteria.Expressions.Case<T>.Case(Class<T>),1,2
"org.apache.openjpa.persistence.criteria.Expressions.Case<T>.when(Expression<Boolean>,Expression<>)",4,6
"org.apache.openjpa.persistence.criteria.Expressions.Case<T>.when(Expression<Boolean>,T)",3,3
org.apache.openjpa.persistence.criteria.Expressions.Case<T>.otherwise(Expression<>),2,5
org.apache.openjpa.persistence.criteria.Expressions.Case<T>.otherwise(T),3,6
"org.apache.openjpa.persistence.criteria.Expressions.Case<T>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",19,67
org.apache.openjpa.persistence.criteria.Expressions.Case<T>.acceptVisit(CriteriaExpressionVisitor),13,27
org.apache.openjpa.persistence.criteria.Expressions.Case<T>.asValue(AliasContext),12,26
"org.apache.openjpa.persistence.criteria.Expressions.SimpleCase<C,R>.SimpleCase(Class<R>)",2,3
"org.apache.openjpa.persistence.criteria.Expressions.SimpleCase<C,R>.SimpleCase(Expression<C>)",4,5
"org.apache.openjpa.persistence.criteria.Expressions.SimpleCase<C,R>.getExpression()",2,3
"org.apache.openjpa.persistence.criteria.Expressions.SimpleCase<C,R>.when(Expression<C>,Expression<>)",5,7
"org.apache.openjpa.persistence.criteria.Expressions.SimpleCase<C,R>.when(C,Expression<>)",3,3
"org.apache.openjpa.persistence.criteria.Expressions.SimpleCase<C,R>.when(C,R)",3,3
"org.apache.openjpa.persistence.criteria.Expressions.SimpleCase<C,R>.otherwise(Expression<>)",3,6
"org.apache.openjpa.persistence.criteria.Expressions.SimpleCase<C,R>.otherwise(R)",4,7
"org.apache.openjpa.persistence.criteria.Expressions.SimpleCase<C,R>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",21,72
"org.apache.openjpa.persistence.criteria.Expressions.SimpleCase<C,R>.acceptVisit(CriteriaExpressionVisitor)",14,32
"org.apache.openjpa.persistence.criteria.Expressions.SimpleCase<C,R>.asValue(AliasContext)",12,26
org.apache.openjpa.persistence.criteria.Expressions.Lower.Lower(Expression<String>),3,4
"org.apache.openjpa.persistence.criteria.Expressions.Lower.toValue(ExpressionFactory,CriteriaQueryImpl<>)",8,13
org.apache.openjpa.persistence.criteria.Expressions.Lower.asValue(AliasContext),9,11
org.apache.openjpa.persistence.criteria.Expressions.Upper.Upper(Expression<String>),3,4
"org.apache.openjpa.persistence.criteria.Expressions.Upper.toValue(ExpressionFactory,CriteriaQueryImpl<>)",8,13
org.apache.openjpa.persistence.criteria.Expressions.Upper.asValue(AliasContext),9,11
org.apache.openjpa.persistence.criteria.Expressions.Length.Length(Expression<String>),4,4
"org.apache.openjpa.persistence.criteria.Expressions.Length.toValue(ExpressionFactory,CriteriaQueryImpl<>)",9,14
org.apache.openjpa.persistence.criteria.Expressions.Length.asValue(AliasContext),9,11
org.apache.openjpa.persistence.criteria.Expressions.SubqueryPredicate<X>.SubqueryPredicate(Subquery<X>),3,5
org.apache.openjpa.persistence.criteria.Expressions.SubqueryPredicate<X>.acceptVisit(CriteriaExpressionVisitor),6,10
org.apache.openjpa.persistence.criteria.Expressions.SubqueryExpression<X>.SubqueryExpression(Subquery<X>),5,7
org.apache.openjpa.persistence.criteria.Expressions.SubqueryExpression<X>.acceptVisit(CriteriaExpressionVisitor),6,10
org.apache.openjpa.persistence.criteria.Expressions.Exists<X>.Exists(Subquery<X>),2,2
"org.apache.openjpa.persistence.criteria.Expressions.Exists<X>.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",14,27
org.apache.openjpa.persistence.criteria.Expressions.Exists<X>.asValue(AliasContext),9,11
org.apache.openjpa.persistence.criteria.Expressions.All<X>.All(Subquery<X>),1,1
"org.apache.openjpa.persistence.criteria.Expressions.All<X>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",7,12
org.apache.openjpa.persistence.criteria.Expressions.All<X>.asValue(AliasContext),8,10
org.apache.openjpa.persistence.criteria.Expressions.Any<X>.Any(Subquery<X>),1,1
"org.apache.openjpa.persistence.criteria.Expressions.Any<X>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",7,12
org.apache.openjpa.persistence.criteria.Expressions.Any<X>.asValue(AliasContext),8,10
org.apache.openjpa.persistence.criteria.Expressions.Not.Not(Expression<Boolean>),2,3
"org.apache.openjpa.persistence.criteria.Expressions.Not.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",10,18
org.apache.openjpa.persistence.criteria.Expressions.Not.acceptVisit(CriteriaExpressionVisitor),6,10
org.apache.openjpa.persistence.criteria.Expressions.Not.asValue(AliasContext),6,7
"org.apache.openjpa.persistence.criteria.Expressions.CastAs<Y>.CastAs(Class<Y>,ExpressionImpl<>)",4,8
"org.apache.openjpa.persistence.criteria.Expressions.CastAs<Y>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",16,27
org.apache.openjpa.persistence.criteria.Expressions.CastAs<Y>.acceptVisit(CriteriaExpressionVisitor),7,11
org.apache.openjpa.persistence.criteria.Expressions.CastAs<Y>.asValue(AliasContext),6,7
"org.apache.openjpa.persistence.criteria.Expressions.ListArgument<T>.ListArgument(Class<T>,ExpressionImpl<>)",6,9
"org.apache.openjpa.persistence.criteria.Expressions.ListArgument<T>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",22,51
org.apache.openjpa.persistence.criteria.Expressions.ListArgument<T>.acceptVisit(CriteriaExpressionVisitor),7,11
org.apache.openjpa.persistence.jdbc.maps.update.TestMapUpdate.setUp(),10,14
org.apache.openjpa.persistence.jdbc.maps.update.TestMapUpdate.testUpdateMapKey(),23,38
org.apache.openjpa.persistence.jdbc.maps.update.TestMapUpdate.testUpdateMapValue(),26,45
org.apache.openjpa.persistence.jdbc.maps.update.TestMapUpdate.createObj(EntityManagerFactory),20,33
org.apache.openjpa.persistence.detach.Entity3.Entity3(),1,1
"org.apache.openjpa.persistence.detach.Entity3.Entity3(long,String)",3,5
org.apache.openjpa.persistence.detach.Entity3.getId(),0,0
org.apache.openjpa.persistence.detach.Entity3.setId(long),1,1
org.apache.openjpa.persistence.detach.Entity3.getName(),2,3
org.apache.openjpa.persistence.detach.Entity3.setName(String),3,6
org.apache.openjpa.persistence.detach.Entity3.getE4(),1,1
org.apache.openjpa.persistence.detach.Entity3.setE4(Entity4),2,2
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_JT.getId(),0,0
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_JT.getName(),2,3
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_JT.setName(String),3,6
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_JT.setBi1mjt(Bi_1ToM_Map_JT),3,6
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_JT.getBi1mjt(),2,3
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_JT.hashCode(),3,5
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_JT.equals(Object),5,11
org.apache.openjpa.lib.util.TestUUIDGenerator.testUniqueString(),10,15
org.apache.openjpa.lib.util.TestUUIDGenerator.testUniqueHex(),10,15
org.apache.openjpa.lib.util.TestUUIDGenerator.testUniqueType4String(),10,16
org.apache.openjpa.lib.util.TestUUIDGenerator.testUniqueType4Hex(),10,16
org.apache.openjpa.lib.util.TestUUIDGenerator.testUniqueMixedTypesHex(),12,22
org.apache.openjpa.lib.util.TestUUIDGenerator.testGetTime(),4,11
org.apache.openjpa.lib.util.TestUUIDGenerator.testInitType1MultiThreaded(),27,33
org.apache.openjpa.lib.util.TestUUIDGenerator.testInitType1MultiThreaded().$1.run(),18,35
org.apache.openjpa.lib.util.TestUUIDGenerator.testInitType1MultiThreaded().$1.run().$1.run(),5,5
org.apache.openjpa.persistence.embed.Item5.getId(),0,0
org.apache.openjpa.persistence.embed.Item5.setId(int),1,1
org.apache.openjpa.persistence.embed.Item5.getImages(),5,6
"org.apache.openjpa.persistence.embed.Item5.addImage(Timestamp,FileName4)",6,10
org.apache.openjpa.persistence.embed.Item5.removeImage(Timestamp),4,5
org.apache.openjpa.persistence.embed.Item5.getImage(Timestamp),5,5
org.apache.openjpa.persistence.detachment.TestDetachmentOneMany.setUp(),4,6
org.apache.openjpa.persistence.detachment.TestDetachmentOneMany.testDetachment(),20,33
org.apache.openjpa.persistence.detachment.TestDetachmentOneMany.testFetchWithDetach(),26,70
org.apache.openjpa.persistence.detachment.TestDetachmentOneMany.testFetchWithDetachForToOneRelationship(),24,43
org.apache.openjpa.persistence.detachment.TestDetachmentOneMany.createParentAndChildren(),21,81
org.apache.openjpa.persistence.detachment.TestDetachmentOneMany.main(String[]),7,8
org.apache.openjpa.persistence.enhance.common.apps.DerivedEntity.getIntField(),1,1
org.apache.openjpa.persistence.enhance.common.apps.DerivedEntity.setIntField(int),2,2
org.apache.openjpa.persistence.enhance.common.apps.DerivedEntity.getOneToOne(),3,4
org.apache.openjpa.persistence.enhance.common.apps.DerivedEntity.setOneToOne(BasicSubclassInstance),10,15
org.apache.openjpa.lib.graph.TestGraph.setUp(),5,29
org.apache.openjpa.lib.graph.TestGraph.testAddRetrieve(),16,150
org.apache.openjpa.lib.graph.TestGraph.testRemoveEdges(),11,58
org.apache.openjpa.lib.graph.TestGraph.testRemoveNodes(),13,55
org.apache.openjpa.lib.graph.TestGraph.main(String[]),5,6
org.apache.openjpa.persistence.embed.A.getId(),1,1
org.apache.openjpa.persistence.embed.A.setId(String),2,2
org.apache.openjpa.persistence.embed.A.getName(),2,3
org.apache.openjpa.persistence.embed.A.setName(String),3,6
org.apache.openjpa.persistence.embed.A.getValue(),1,2
org.apache.openjpa.persistence.embed.A.setValue(int),2,5
org.apache.openjpa.persistence.embed.A.getEmbeds(),3,4
org.apache.openjpa.persistence.embed.A.setEmbeds(Set<Embed>),3,7
org.apache.openjpa.persistence.embed.A.getCollectionDate(),2,6
org.apache.openjpa.persistence.embed.A.setCollectionDate(Collection<Date>),3,11
org.apache.openjpa.persistence.enhance.identity.PersonId4.PersonId4(),1,1
"org.apache.openjpa.persistence.enhance.identity.PersonId4.PersonId4(String,String)",3,9
org.apache.openjpa.persistence.enhance.identity.PersonId4.setFirstName(String),3,6
org.apache.openjpa.persistence.enhance.identity.PersonId4.getFirstName(),2,3
org.apache.openjpa.persistence.enhance.identity.PersonId4.setLastName(String),3,6
org.apache.openjpa.persistence.enhance.identity.PersonId4.getLastName(),2,3
org.apache.openjpa.persistence.enhance.identity.PersonId4.equals(Object),6,26
org.apache.openjpa.persistence.enhance.identity.PersonId4.hashCode(),4,16
org.apache.openjpa.persistence.compat.TestEmbeddableSuperclass.setUp(),4,6
org.apache.openjpa.persistence.compat.TestEmbeddableSuperclass.testRelationMappings(),38,80
org.apache.openjpa.persistence.foreign.keys.TestMultForeignKeys.setUp(),11,14
org.apache.openjpa.persistence.foreign.keys.TestMultForeignKeys.testCreated(),19,80
org.apache.openjpa.persistence.foreign.keys.TestMultForeignKeys.create(),22,94
org.apache.openjpa.ant.MetaDataToolTask.setAction(Action),6,11
org.apache.openjpa.ant.MetaDataToolTask.setFile(String),6,13
org.apache.openjpa.ant.MetaDataToolTask.newConfiguration(),3,6
org.apache.openjpa.ant.MetaDataToolTask.executeOn(String[]),27,55
org.apache.openjpa.ant.MetaDataToolTask.Action.getValues(),6,6
org.apache.openjpa.persistence.identity.entityasidentity2.Attendance.AttendanceId.AttendanceId(),1,1
"org.apache.openjpa.persistence.identity.entityasidentity2.Attendance.AttendanceId.AttendanceId(int,int)",3,7
org.apache.openjpa.persistence.identity.entityasidentity2.Attendance.AttendanceId.toString(),3,4
org.apache.openjpa.persistence.identity.entityasidentity2.Attendance.AttendanceId.hashCode(),4,4
org.apache.openjpa.persistence.identity.entityasidentity2.Attendance.AttendanceId.equals(Object),5,9
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCRootEntity.getRootEntityData(),4,7
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCRootEntity.setRootEntityData(String),5,14
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Embed.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Embed.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Embed.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Embed.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Embed.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Embed.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Embed.getEmbed(),2,5
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Embed.setEmbed(Embed_Coll_Embed),3,8
org.apache.openjpa.persistence.query.VarArgsExpression.VarArgsExpression(Expression[]),4,7
org.apache.openjpa.persistence.query.VarArgsExpression.asExpression(AliasContext),11,24
org.apache.openjpa.persistence.query.VarArgsExpression.asProjection(AliasContext),6,7
org.apache.openjpa.persistence.criteria.TestEdit.testWhereConditionEditedToAddOr(),20,41
org.apache.openjpa.persistence.criteria.TestEdit.testWhereConditionEditedToAddAnd(),20,41
org.apache.openjpa.persistence.criteria.TestEdit.testWhereConditionEditedToRemoveAnd(),29,62
org.apache.openjpa.persistence.criteria.TestEdit.testEditOrderBy(),24,47
org.apache.openjpa.persistence.criteria.TestEdit.testEditedToAddMultiselectionTerm(),25,48
org.apache.openjpa.persistence.criteria.TestEdit.testSingleSelectionHasNoCompoundItems(),18,32
org.apache.openjpa.persistence.criteria.TestEdit.testCandidateClassIsImplicitlySelectedForEntityQuery(),17,31
org.apache.openjpa.persistence.criteria.TestEdit.testCandidateClassIsNotImplicitlySelectedForNonEntityQuery(),20,29
org.apache.openjpa.persistence.criteria.TestEdit.testRootIsNotImplicitlyDefined(),13,20
org.apache.openjpa.persistence.criteria.TestEdit.testEditParameterizedPredicate(),19,44
org.apache.openjpa.persistence.criteria.TestEdit.testEditParameterizedPredicate().$1.decorate(Query),5,5
org.apache.openjpa.persistence.criteria.TestEdit.testEditParameterizedPredicate().$2.decorate(Query),6,8
org.apache.openjpa.persistence.criteria.TestEdit.testEditParameterizedPredicateReplaced(),22,51
org.apache.openjpa.persistence.criteria.TestEdit.testEditParameterizedPredicateReplaced().$3.decorate(Query),6,8
org.apache.openjpa.persistence.criteria.TestEdit.testEditParameterizedPredicateReplaced().$4.decorate(Query),5,5
org.apache.openjpa.persistence.criteria.TestEdit.testEditParameterizedPredicateRemoved(),22,51
org.apache.openjpa.persistence.criteria.TestEdit.testEditParameterizedPredicateRemoved().$5.decorate(Query),6,8
org.apache.openjpa.persistence.criteria.TestEdit.testEditParameterizedPredicateRemoved().$6.decorate(Query),5,5
org.apache.openjpa.persistence.criteria.TestEdit.testSerachWithinResult(),39,107
"org.apache.openjpa.persistence.criteria.TestEdit.assertFails(String,CriteriaQuery<>)",9,11
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue.setBasic(String),3,6
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue.getBasic(),2,3
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue.setClob(String),3,6
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue.getClob(),2,3
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue.setBlob(byte[]),2,5
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue.getBlob(),1,2
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue.setOwner(EmbedOwner),3,7
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue.getOwner(),2,4
"org.apache.openjpa.kernel.exps.BindVariableExpression.BindVariableExpression(BoundVariable,Val)",9,22
org.apache.openjpa.kernel.exps.BindVariableExpression.getVariable(),3,4
"org.apache.openjpa.kernel.exps.BindVariableExpression.getVariableValues(Object,Object,StoreContext,Object[])",12,24
org.apache.openjpa.kernel.exps.BindVariableExpression.getCollection(Object),11,19
"org.apache.openjpa.kernel.exps.BindVariableExpression.eval(Object,Object,StoreContext,Object[])",14,25
"org.apache.openjpa.kernel.exps.BindVariableExpression.eval(Collection,StoreContext,Object[])",11,20
org.apache.openjpa.kernel.exps.BindVariableExpression.acceptVisit(ExpressionVisitor),8,17
org.apache.openjpa.persistence.embed.attrOverrides.ProgramManager.getId(),0,0
org.apache.openjpa.persistence.embed.attrOverrides.ProgramManager.setId(int),1,1
org.apache.openjpa.persistence.embed.attrOverrides.ProgramManager.getManages(),3,4
org.apache.openjpa.persistence.embed.attrOverrides.ProgramManager.addManage(Employee),4,5
org.apache.openjpa.persistence.jdbc.common.apps.BaseSub1Sub1.getBaseSub1Sub1Field(),3,8
org.apache.openjpa.persistence.jdbc.common.apps.BaseSub1Sub1.setBaseSub1Sub1Field(int),4,17
org.apache.openjpa.kernel.exps.GetObjectId.GetObjectId(Val),7,10
org.apache.openjpa.kernel.exps.GetObjectId.getType(),2,2
org.apache.openjpa.kernel.exps.GetObjectId.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.GetObjectId.eval(Object,Object,StoreContext,Object[])",9,19
org.apache.openjpa.kernel.exps.GetObjectId.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.persistence.enhance.identity.DependentId3.DependentId3(),1,1
"org.apache.openjpa.persistence.enhance.identity.DependentId3.DependentId3(String,long,long)",5,11
org.apache.openjpa.persistence.enhance.identity.DependentId3.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.DependentId3.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.DependentId3.setEmpPK(long),2,5
org.apache.openjpa.persistence.enhance.identity.DependentId3.getEmpPK(),1,2
org.apache.openjpa.persistence.enhance.identity.DependentId3.setParentPK(long),2,5
org.apache.openjpa.persistence.enhance.identity.DependentId3.getParentPK(),1,2
org.apache.openjpa.persistence.enhance.identity.DependentId3.equals(Object),6,15
org.apache.openjpa.persistence.enhance.identity.DependentId3.hashCode(),6,15
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalC.setStringC(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalC.getStringC(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalC.setIntC(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalC.getIntC(),0,0
org.apache.openjpa.persistence.cache.jpa.TestCacheModeAll.getEntityManagerFactory(),15,50
org.apache.openjpa.persistence.cache.jpa.TestCacheModeAll.getListener(),4,10
org.apache.openjpa.persistence.cache.jpa.TestCacheModeAll.getSql(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeAll.testCacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeAll.testUncacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeAll.testUnspecified(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeAll.getExpectedInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeAll.getExpectedNotInCache(),2,4
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.RuntimeTest1(),2,2
"org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.RuntimeTest1(String,int)",10,14
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getByteField(),1,2
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setByteField(byte),2,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getBooleanField(),1,2
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setBooleanField(boolean),2,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getCharField(),1,2
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setCharField(char),2,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getDoubleField(),1,2
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setDoubleField(double),2,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getFloatField(),1,2
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setFloatField(float),2,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getIntField(),1,2
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setIntField(int),2,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getLongField(),1,2
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setLongField(long),2,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getShortField(),1,2
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setShortField(short),2,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getStringField(),2,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setStringField(String),3,10
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getBigIntegerField(),2,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setBigIntegerField(BigInteger),3,10
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getBigDecimalField(),2,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setBigDecimalField(BigDecimal),3,10
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getDateField(),2,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setDateField(Date),3,10
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getLocaleField(),2,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setLocaleField(Locale),3,10
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getByteObjfield(),1,2
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setByteObjfield(Byte),2,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getBooleanObjField(),2,4
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setBooleanObjField(Boolean),3,9
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getCharObjField(),3,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setCharObjField(Character),4,10
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getDoubleObjField(),2,4
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setDoubleObjField(Double),3,9
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getFloatObjField(),2,4
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setFloatObjField(Float),3,9
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getIntObjField(),3,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setIntObjField(Integer),4,10
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getLongObjField(),2,4
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setLongObjField(Long),3,9
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getShortObjField(),2,4
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setShortObjField(Short),3,9
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getTransField(),3,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setTransField(TransactionalClassPC),4,10
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getSelfOneOne(),3,4
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setSelfOneOne(RuntimeTest1),4,7
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.getSelfOneMany(),2,3
org.apache.openjpa.persistence.event.common.apps.RuntimeTest1.setSelfOneMany(Set),2,6
"org.apache.openjpa.jdbc.kernel.exps.CollectionParam.CollectionParam(Object,Class)",11,16
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.clone(),7,13
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.getParameterKey(),3,4
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.getType(),1,2
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.setImplicitType(Class),14,24
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.getIndex(),2,2
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.setIndex(int),3,5
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.getValue(Object[]),7,9
"org.apache.openjpa.jdbc.kernel.exps.CollectionParam.getValue(ExpContext,ExpState)",11,22
"org.apache.openjpa.jdbc.kernel.exps.CollectionParam.getSQLValue(Select,ExpContext,ExpState)",9,13
"org.apache.openjpa.jdbc.kernel.exps.CollectionParam.initialize(Select,ExpContext,int)",10,13
org.apache.openjpa.jdbc.kernel.exps.CollectionParam.ParamExpState.ParamExpState(Object),12,34
"org.apache.openjpa.jdbc.kernel.exps.CollectionParam.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",42,143
"org.apache.openjpa.jdbc.kernel.exps.CollectionParam.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",18,60
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest3.RuntimeTest3(),2,2
"org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest3.RuntimeTest3(String,int)",4,5
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest3.getIntField3(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest3.setIntField3(int),2,5
org.apache.openjpa.persistence.TestEnumToKernelConstantMappings.testConnectionRetainModes(),16,132
org.apache.openjpa.persistence.TestEnumToKernelConstantMappings.testDetachState(),15,99
org.apache.openjpa.persistence.TestEnumToKernelConstantMappings.testRestoreState(),12,94
org.apache.openjpa.persistence.TestEnumToKernelConstantMappings.testAutoClear(),11,60
org.apache.openjpa.persistence.TestEnumToKernelConstantMappings.testAutoDetach(),20,235
org.apache.openjpa.persistence.TestEnumToKernelConstantMappings.testCallbackMode(),16,230
org.apache.openjpa.persistence.TestEnumToKernelConstantMappings.testQueryOperationTypes(),16,119
org.apache.openjpa.persistence.TestEnumToKernelConstantMappings.getConstantCount(Class),6,7
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.EntityD.getEntityDData(),3,3
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.EntityD.setEntityDData(String),4,6
org.apache.openjpa.persistence.inheritance.mappedsuperclass.MappedSuperWithoutId.getDesc(),3,3
org.apache.openjpa.persistence.inheritance.mappedsuperclass.MappedSuperWithoutId.setDesc(String),4,6
org.apache.openjpa.datacache.DelegatingQueryCache.DelegatingQueryCache(QueryCache),6,10
"org.apache.openjpa.datacache.DelegatingQueryCache.DelegatingQueryCache(QueryCache,RuntimeExceptionTranslator)",8,24
org.apache.openjpa.datacache.DelegatingQueryCache.getDelegate(),4,6
org.apache.openjpa.datacache.DelegatingQueryCache.getInnermostDelegate(),5,10
org.apache.openjpa.datacache.DelegatingQueryCache.hashCode(),4,6
org.apache.openjpa.datacache.DelegatingQueryCache.equals(Object),8,15
org.apache.openjpa.datacache.DelegatingQueryCache.translate(RuntimeException),5,11
org.apache.openjpa.datacache.DelegatingQueryCache.initialize(DataCacheManager),8,12
org.apache.openjpa.datacache.DelegatingQueryCache.onTypesChanged(TypesChangedEvent),7,12
org.apache.openjpa.datacache.DelegatingQueryCache.get(QueryKey),7,9
"org.apache.openjpa.datacache.DelegatingQueryCache.put(QueryKey,QueryResult)",8,13
org.apache.openjpa.datacache.DelegatingQueryCache.remove(QueryKey),8,11
org.apache.openjpa.datacache.DelegatingQueryCache.clear(),4,5
org.apache.openjpa.datacache.DelegatingQueryCache.pin(QueryKey),7,9
org.apache.openjpa.datacache.DelegatingQueryCache.unpin(QueryKey),7,9
org.apache.openjpa.datacache.DelegatingQueryCache.writeLock(),6,9
org.apache.openjpa.datacache.DelegatingQueryCache.writeUnlock(),6,9
org.apache.openjpa.datacache.DelegatingQueryCache.addTypesChangedListener(TypesChangedListener),9,18
org.apache.openjpa.datacache.DelegatingQueryCache.removeTypesChangedListener(TypesChangedListener),9,18
org.apache.openjpa.datacache.DelegatingQueryCache.close(),5,7
org.apache.openjpa.datacache.DelegatingQueryCache.getStatistics(),7,11
org.apache.openjpa.persistence.jdbc.annotations.TestJoinedInheritance.setUp(),5,10
org.apache.openjpa.persistence.jdbc.annotations.TestJoinedInheritance.testInheritance(),20,58
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppC.setStringC(String),2,4
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppC.getStringC(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppC.setIntC(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppC.getIntC(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.MultiE.setString0(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.MultiE.getString0(),1,3
org.apache.openjpa.persistence.jdbc.kernel.TestEfficientAttach.TestEfficientAttach(String),7,11
org.apache.openjpa.persistence.jdbc.kernel.TestEfficientAttach.testAttachWithDetachedStateManager(),30,87
org.apache.openjpa.persistence.jdbc.kernel.TestEfficientAttach.attachTest(),20,40
org.apache.openjpa.persistence.jdbc.kernel.TestEfficientAttach.main(String[]),3,4
"org.apache.openjpa.enhance.ReflectingPersistenceCapable.ReflectingPersistenceCapable(Object,OpenJPAConfiguration)",14,22
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcGetEnhancementContractVersion(),4,6
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcGetGenericContext(),3,5
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcGetStateManager(),1,2
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcReplaceStateManager(StateManager),5,11
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcProvideField(int),14,80
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcProvideFields(int[]),5,11
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcReplaceField(int),14,76
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcReplaceFields(int[]),5,11
"org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcCopyField(Object,int)",10,14
"org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcCopyFields(Object,int[])",11,25
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcDirty(String),4,7
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcFetchObjectId(),2,5
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcGetVersion(),2,3
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcIsDirty(),4,8
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcIsTransactional(),1,2
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcIsPersistent(),1,2
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcIsNew(),0,0
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcIsDeleted(),1,2
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcIsDetached(),6,8
"org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcNewInstance(StateManager,boolean)",5,7
"org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcNewInstance(StateManager,Object,boolean)",7,10
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcNewObjectIdInstance(),15,27
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcNewObjectIdInstance(Object),4,10
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcCopyKeyFieldsToObjectId(Object),18,40
"org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcCopyKeyFieldsToObjectId(FieldSupplier,Object)",18,21
"org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcCopyKeyFieldsFromObjectId(FieldConsumer,Object)",18,21
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcGetDetachedState(),5,5
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcSetDetachedState(Object),13,14
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcSetSerializationUserVisible(boolean),4,11
org.apache.openjpa.enhance.ReflectingPersistenceCapable.pcIsSerializationUserVisible(),3,6
org.apache.openjpa.enhance.ReflectingPersistenceCapable.getManagedInstance(),3,3
"org.apache.openjpa.enhance.ReflectingPersistenceCapable.getValue(int,Object)",13,33
org.apache.openjpa.enhance.ReflectingPersistenceCapable.toFieldName(int),9,18
"org.apache.openjpa.enhance.ReflectingPersistenceCapable.setValue(int,Object,Object)",19,55
org.apache.openjpa.enhance.ReflectingPersistenceCapable.writeObject(ObjectOutputStream),8,13
org.apache.openjpa.enhance.ReflectingPersistenceCapable.readObject(ObjectInputStream),15,23
org.apache.openjpa.persistence.enhance.identity.Library1.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.Library1.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.Library1.getBooks(),3,4
org.apache.openjpa.persistence.enhance.identity.Library1.getBook(BookId1),4,9
org.apache.openjpa.persistence.enhance.identity.Library1.addBook(Book1),5,10
org.apache.openjpa.persistence.enhance.identity.Library1.getLocation(),2,3
org.apache.openjpa.persistence.enhance.identity.Library1.setLocation(String),3,6
org.apache.openjpa.persistence.enhance.identity.Library1.equals(Object),4,8
org.apache.openjpa.persistence.enhance.identity.Library1.hashCode(),3,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.setUp(),10,13
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.setCandidate(Query,Class)",17,43
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.queryQualifiedId(boolean),26,68
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.testQueryObject(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.getSql(),3,4
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.getSqlCount(),2,4
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.createObj(),16,27
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.createEmployee(EntityManager,int)",15,43
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.createDivision(EntityManager,int)",6,10
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.findObj(),9,15
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.queryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.queryPhoneNumber(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.queryEmployee(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.assertEmployee(Employee),10,27
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.assertPhoneNumber(PhoneNumber),10,20
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.checkPhoneMap(Map<FullName,PhoneNumber>,Map<FullName,PhoneNumber>)",14,39
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.TestMany2ManyMapEx7.checkEmpMap(Map<Division,Employee>,Map<Division,Employee>)",15,39
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.setUp(),12,16
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.setCandidate(Query,Class)",19,49
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.queryQualifiedId(boolean),37,320
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.testQueryObject(),6,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.createObj(EntityManagerFactory),17,31
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.createEmployee(EntityManager,int)",16,55
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.createDivision(EntityManager,int)",6,10
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.createDepartment(EntityManager,int)",7,11
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.findObj(EntityManagerFactory),10,19
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.queryObj(EntityManagerFactory),9,13
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.queryPhoneNumber(EntityManagerFactory),16,33
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.queryEmployee(EntityManagerFactory),16,33
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.assertEmployee(Employee),10,27
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.assertPhoneNumber(PhoneNumber),10,20
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.checkPhoneMap(Map<Department,PhoneNumber>,Map<Department,PhoneNumber>)",14,37
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.TestMany2ManyMapEx1.checkEmpMap(Map<Division,Employee>,Map<Division,Employee>)",15,37
org.apache.openjpa.persistence.distinctjoin.TestDistinctJoin.setUp(),14,18
org.apache.openjpa.persistence.distinctjoin.TestDistinctJoin.getSQLCount(),5,7
org.apache.openjpa.persistence.distinctjoin.TestDistinctJoin.resetSQL(),7,13
org.apache.openjpa.persistence.distinctjoin.TestDistinctJoin.testJoinOnly(),67,354
"org.apache.openjpa.persistence.distinctjoin.TestDistinctJoin.assertMaxQueries(String,int)",17,41
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.Employee.getDepartment(),1,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.Employee.setDepartment(Department),2,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.Employee.getName(),2,4
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.Employee.setName(EmployeeName),3,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.setUp(),10,13
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.testQueryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.setCandidate(Query,Class)",14,37
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.queryQualifiedId(boolean),29,108
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.createObj(EntityManagerFactory),15,27
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.createCompany(EntityManager,int)",14,28
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.createVicePresident(EntityManager,int)",7,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.findObj(EntityManagerFactory),12,32
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.updateObj(EntityManager,Company)",27,84
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.deleteObj(EntityManager,Company)",10,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.assertCompany(Company),5,8
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.assertVicePresident(VicePresident),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.queryObj(EntityManagerFactory),9,13
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.queryCompany(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.TestSpec10_1_27_Ex8.queryVicePresident(EntityManagerFactory),17,39
org.apache.openjpa.lib.test.AbstractTestCase.AbstractTestCase(String),6,9
org.apache.openjpa.lib.test.AbstractTestCase.AbstractTestCase(),1,1
org.apache.openjpa.lib.test.AbstractTestCase.getLog(),1,6
org.apache.openjpa.lib.test.AbstractTestCase.newLog(),11,18
org.apache.openjpa.lib.test.AbstractTestCase.getLogName(),6,6
org.apache.openjpa.lib.test.AbstractTestCase.preTimeout(),19,24
org.apache.openjpa.lib.test.AbstractTestCase.run(TestResult),25,52
org.apache.openjpa.lib.test.AbstractTestCase.skipTest(),42,79
org.apache.openjpa.lib.test.AbstractTestCase.setUpTestClass(),6,8
org.apache.openjpa.lib.test.AbstractTestCase.tearDownTestClass(),10,12
org.apache.openjpa.lib.test.AbstractTestCase.tearDown(),9,10
org.apache.openjpa.lib.test.AbstractTestCase.randomInt(),8,13
org.apache.openjpa.lib.test.AbstractTestCase.randomChar(),9,17
org.apache.openjpa.lib.test.AbstractTestCase.randomLong(),7,9
org.apache.openjpa.lib.test.AbstractTestCase.randomShort(),7,9
org.apache.openjpa.lib.test.AbstractTestCase.randomDouble(),6,9
org.apache.openjpa.lib.test.AbstractTestCase.randomFloat(),6,9
org.apache.openjpa.lib.test.AbstractTestCase.randomByte(),7,9
org.apache.openjpa.lib.test.AbstractTestCase.randomBoolean(),5,7
org.apache.openjpa.lib.test.AbstractTestCase.randomDate(),19,29
org.apache.openjpa.lib.test.AbstractTestCase.randomString(),10,17
org.apache.openjpa.lib.test.AbstractTestCase.randomString(int),10,22
org.apache.openjpa.lib.test.AbstractTestCase.randomClob(),10,21
org.apache.openjpa.lib.test.AbstractTestCase.randomBigInteger(),16,39
org.apache.openjpa.lib.test.AbstractTestCase.randomBigDecimal(),18,56
org.apache.openjpa.lib.test.AbstractTestCase.randomBlob(),8,17
org.apache.openjpa.lib.test.AbstractTestCase.randomizeBean(Object),36,134
org.apache.openjpa.lib.test.AbstractTestCase.startProfile(String),11,16
org.apache.openjpa.lib.test.AbstractTestCase.endProfile(String),26,51
org.apache.openjpa.lib.test.AbstractTestCase.createIsolatedClassLoader(),12,20
org.apache.openjpa.lib.test.AbstractTestCase.createNestedClassLoader(),3,7
org.apache.openjpa.lib.test.AbstractTestCase.createNestedParentClassLoader(),4,8
org.apache.openjpa.lib.test.AbstractTestCase.isolate(Class),14,28
org.apache.openjpa.lib.test.AbstractTestCase.isolate(String),12,17
org.apache.openjpa.lib.test.AbstractTestCase.nest(Class),11,27
org.apache.openjpa.lib.test.AbstractTestCase.isolateNew(Class),9,13
org.apache.openjpa.lib.test.AbstractTestCase.NestedClassLoader.NestedClassLoader(boolean),28,53
org.apache.openjpa.lib.test.AbstractTestCase.NestedClassLoader.findClass(String),12,23
org.apache.openjpa.lib.test.AbstractTestCase.IsolatedClassLoader.IsolatedClassLoader(),3,4
org.apache.openjpa.lib.test.AbstractTestCase.validateCollection(Collection),23,55
org.apache.openjpa.lib.test.AbstractTestCase.validateList(List),46,238
"org.apache.openjpa.lib.test.AbstractTestCase.assertIdentical(List,List)",13,23
"org.apache.openjpa.lib.test.AbstractTestCase.assertOrdered(Collection,Comparator)",11,23
"org.apache.openjpa.lib.test.AbstractTestCase.assertNotEquals(Object,Object)",4,8
"org.apache.openjpa.lib.test.AbstractTestCase.assertSize(int,Object)",11,24
"org.apache.openjpa.lib.test.AbstractTestCase.copy(File,File)",5,8
"org.apache.openjpa.lib.test.AbstractTestCase.copy(InputStream,File)",9,15
org.apache.openjpa.lib.test.AbstractTestCase.printMemoryInfo(),14,31
org.apache.openjpa.lib.test.AbstractTestCase.iteratorToList(Iterator),6,16
"org.apache.openjpa.lib.test.AbstractTestCase.iteratorToArray(Iterator,Class[])",7,13
"org.apache.openjpa.lib.test.AbstractTestCase.ant(File,String)",20,50
"org.apache.openjpa.lib.test.AbstractTestCase.roundtrip(Object,boolean)",24,71
"org.apache.openjpa.lib.test.AbstractTestCase.matches(String,String)",12,18
"org.apache.openjpa.lib.test.AbstractTestCase.assertMatches(String,String)",13,21
"org.apache.openjpa.lib.test.AbstractTestCase.assertNotMatches(String,String)",12,20
"org.apache.openjpa.lib.test.AbstractTestCase.matches(String,Collection)",16,32
"org.apache.openjpa.lib.test.AbstractTestCase.assertMatches(String,Collection)",19,37
"org.apache.openjpa.lib.test.AbstractTestCase.assertNotMatches(String,Collection)",23,44
org.apache.openjpa.lib.test.AbstractTestCase.main(Class),10,14
org.apache.openjpa.lib.test.AbstractTestCase.main(),15,21
org.apache.openjpa.lib.test.AbstractTestCase.main().$1.toString(),3,4
org.apache.openjpa.lib.test.AbstractTestCase.getJarFile(Class),17,74
org.apache.openjpa.lib.test.AbstractTestCase.setTimeout(long),4,8
org.apache.openjpa.lib.test.AbstractTestCase.getTimeout(),3,5
org.apache.openjpa.lib.test.AbstractTestCase.WatchdogThread.WatchdogThread(),15,20
org.apache.openjpa.lib.test.AbstractTestCase.WatchdogThread.run(),37,73
org.apache.openjpa.lib.test.AbstractTestCase.WatchdogThread.run().$1.run(),4,4
org.apache.openjpa.lib.test.AbstractTestCase.WatchdogThread.enteringTest(AbstractTestCase),12,20
org.apache.openjpa.lib.test.AbstractTestCase.WatchdogThread.leavingTest(AbstractTestCase),4,6
org.apache.openjpa.persistence.query.AliasContext.AliasContext(MetaDataRepository),6,8
org.apache.openjpa.persistence.query.AliasContext.getAlias(ExpressionImpl),15,36
org.apache.openjpa.persistence.query.AliasContext.setAlias(ExpressionImpl),13,30
org.apache.openjpa.persistence.query.AliasContext.hasAlias(Expression),9,12
org.apache.openjpa.persistence.query.AliasContext.push(Object),10,11
org.apache.openjpa.persistence.query.AliasContext.getEntityName(Class),10,13
org.apache.openjpa.lib.util.concurrent.TestConcurrentMap.setUp(),9,18
org.apache.openjpa.lib.util.concurrent.TestConcurrentMap.testRemoveRandom(),10,18
"org.apache.openjpa.lib.util.concurrent.TestConcurrentMap.removeRandom(ConcurrentMap,Set)",12,23
org.apache.openjpa.lib.util.concurrent.TestConcurrentMap.postRemoveTest(Set),15,22
org.apache.openjpa.lib.util.concurrent.TestConcurrentMap.testRemoveRandomThreaded(),23,61
org.apache.openjpa.lib.util.concurrent.TestConcurrentMap.testIterate(),3,4
org.apache.openjpa.lib.util.concurrent.TestConcurrentMap.iterationTest(boolean),21,57
org.apache.openjpa.lib.util.concurrent.TestConcurrentMap.testRandomIterate(),4,5
"org.apache.openjpa.lib.util.concurrent.TestConcurrentMap.RemoveRandomRunnable.RemoveRandomRunnable(ConcurrentMap,Set)",7,12
org.apache.openjpa.lib.util.concurrent.TestConcurrentMap.RemoveRandomRunnable.run(),12,16
org.apache.openjpa.enhance.TestUnenhancedFieldAccess.getUnenhancedClass(),4,6
org.apache.openjpa.enhance.TestUnenhancedFieldAccess.newUnenhancedInstance(),5,7
org.apache.openjpa.enhance.TestUnenhancedFieldAccess.getUnenhancedSubclass(),5,8
org.apache.openjpa.enhance.TestUnenhancedFieldAccess.newUnenhancedSubclassInstance(),6,9
org.apache.openjpa.enhance.TestUnenhancedFieldAccess.isFieldAccessTest(),3,3
org.apache.openjpa.persistence.delimited.identifiers.EntityC.EntityC(),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityC.EntityC(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityC.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityC.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityC.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityC.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.EntityC.getEntityDs(),2,5
org.apache.openjpa.persistence.delimited.identifiers.EntityC.setEntityDs(Collection<EntityD>),4,11
org.apache.openjpa.persistence.delimited.identifiers.EntityC.addEntityD(EntityD),2,7
org.apache.openjpa.persistence.delimited.identifiers.EntityC.getEntityD2(),1,4
org.apache.openjpa.persistence.delimited.identifiers.EntityC.setEntityD2(EntityD2),3,10
org.apache.openjpa.persistence.delimited.identifiers.EntityC.getMap(),2,6
"org.apache.openjpa.persistence.delimited.identifiers.EntityC.setMap(Map<EntityD3,EntityD4>)",4,12
"org.apache.openjpa.persistence.delimited.identifiers.EntityC.addMapValues(EntityD3,EntityD4)",6,10
org.apache.openjpa.persistence.delimited.identifiers.EntityC.getMap2(),2,6
"org.apache.openjpa.persistence.delimited.identifiers.EntityC.setMap2(Map<EntityD4,EntityD3>)",4,12
"org.apache.openjpa.persistence.delimited.identifiers.EntityC.addMap2Values(EntityD4,EntityD3)",6,10
org.apache.openjpa.persistence.delimited.identifiers.EntityC.getSecName(),3,7
org.apache.openjpa.persistence.delimited.identifiers.EntityC.setSecName(String),5,16
org.apache.openjpa.lib.conf.AbstractProductDerivation.getConfigurationPrefix(),3,3
org.apache.openjpa.lib.conf.AbstractProductDerivation.validate(),2,2
org.apache.openjpa.lib.conf.AbstractProductDerivation.loadGlobals(ClassLoader),6,7
org.apache.openjpa.lib.conf.AbstractProductDerivation.loadDefaults(ClassLoader),6,7
"org.apache.openjpa.lib.conf.AbstractProductDerivation.load(String,String,ClassLoader)",8,10
"org.apache.openjpa.lib.conf.AbstractProductDerivation.load(File,String)",7,8
org.apache.openjpa.lib.conf.AbstractProductDerivation.getDefaultResourceLocation(),3,3
org.apache.openjpa.lib.conf.AbstractProductDerivation.getAnchorsInFile(File),5,7
org.apache.openjpa.lib.conf.AbstractProductDerivation.getAnchorsInResource(String),5,7
org.apache.openjpa.lib.conf.AbstractProductDerivation.beforeConfigurationConstruct(ConfigurationProvider),3,4
org.apache.openjpa.lib.conf.AbstractProductDerivation.beforeConfigurationLoad(Configuration),3,4
org.apache.openjpa.lib.conf.AbstractProductDerivation.afterSpecificationSet(Configuration),4,4
org.apache.openjpa.lib.conf.AbstractProductDerivation.beforeConfigurationClose(Configuration),3,4
org.apache.openjpa.lib.conf.AbstractProductDerivation.getSupportedQueryHints(),7,8
"org.apache.openjpa.persistence.query.MemberOfExpression.MemberOfExpression(Expression,Expression)",4,9
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee.Employee(),1,1
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee.Employee(int,String)",3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee.getName(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee.setName(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee.setId(int),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee.getId(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee.resetSyncTime(),17,32
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee.pload(),8,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee.pupdate(),8,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee.toString(),5,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee.getCheck(),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee.setCheck(int),3,5
org.apache.openjpa.persistence.datacache.TestFlushDataCache.TestFlushDataCache(String),7,8
org.apache.openjpa.persistence.datacache.TestFlushDataCache.setUp(),6,6
org.apache.openjpa.persistence.datacache.TestFlushDataCache.testQueryFlushPlusDataCache(),54,155
org.apache.openjpa.persistence.datacache.TestFlushDataCache.testEmptyCommit(),27,55
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.NameValidator.validateName(NamedEntity),19,28
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.NameValidator.testpost(NamedEntity),11,14
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.NameValidator.validateNothing(NamedEntity),16,19
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.NameValidator.validateNothing1(NamedEntity),16,19
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdSeqGen.setUp(),26,45
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdSeqGen.tearDown(),3,4
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdSeqGen.createEMF(Object),12,15
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdSeqGen.createEntityB(),3,5
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdSeqGen.testSeqGen(),14,26
org.apache.openjpa.persistence.criteria.Person.Person(),1,1
org.apache.openjpa.persistence.criteria.Person.Person(String),4,6
org.apache.openjpa.persistence.criteria.Person.getId(),0,0
org.apache.openjpa.persistence.criteria.Person.getName(),2,3
org.apache.openjpa.persistence.criteria.Person.setName(String),3,6
org.apache.openjpa.persistence.criteria.Person.getNickNames(),4,6
org.apache.openjpa.persistence.criteria.Person.setNickNames(Set<String>),4,11
org.apache.openjpa.persistence.criteria.Person.addNickName(String),5,11
org.apache.openjpa.persistence.distinctjoin.Lecturer.getId(),0,0
org.apache.openjpa.persistence.distinctjoin.Lecturer.getName(),2,3
org.apache.openjpa.persistence.distinctjoin.Lecturer.setName(String),3,6
org.apache.openjpa.persistence.distinctjoin.Lecturer.getCourse(),1,3
org.apache.openjpa.persistence.distinctjoin.Lecturer.setCourse(Course),2,6
org.apache.openjpa.persistence.util.ReservedWords.isKeyword(String),13,16
org.apache.openjpa.persistence.util.ReservedWords.hasSpecialCharacter(String),12,31
org.apache.openjpa.persistence.exception.TestParameterLogging.tearDown(),3,4
org.apache.openjpa.persistence.exception.TestParameterLogging.getRollbackException(Object),24,57
org.apache.openjpa.persistence.exception.TestParameterLogging.testNoParamsByDefault(),23,40
org.apache.openjpa.persistence.exception.TestParameterLogging.testParamsEnabledByConfig(),33,55
org.apache.openjpa.persistence.exception.TestParameterLogging.testDefaultPrintParameters(),6,8
org.apache.openjpa.persistence.exception.TestParameterLogging.testPrintParametersTrue(),6,8
org.apache.openjpa.persistence.exception.TestParameterLogging.testPrintParametersFalse(),6,8
org.apache.openjpa.persistence.exception.TestParameterLogging.queryCachePrintParametersLogic(Boolean),43,113
org.apache.openjpa.persistence.exception.TestParameterLogging.getLog(String),4,9
org.apache.openjpa.persistence.exception.TestParameterLogging.getLog(String).$1.isEnabled(short),3,3
org.apache.openjpa.persistence.exception.TestParameterLogging.getLog(String).$1.trace(Object),6,7
"org.apache.openjpa.persistence.exception.TestParameterLogging.getLog(String).$1.log(short,String,Throwable)",7,8
org.apache.openjpa.persistence.exception.TestParameterLogging.getLog(String).$1.error(Object),6,7
org.apache.openjpa.persistence.exception.TestParameterLogging.getLog(String).$1.warn(Object),9,11
org.apache.openjpa.persistence.exception.TestParameterLogging.getLog(String).$1.info(Object),6,7
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed_ToMany.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed_ToMany.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed_ToMany.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed_ToMany.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed_ToMany.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed_ToMany.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed_ToMany.getEmbed(),1,4
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed_ToMany.setEmbed(Embed_Embed_ToMany),2,7
org.apache.openjpa.persistence.event.TestLifecycleEventManager.TestLifecycleEventManager(String),6,6
org.apache.openjpa.persistence.event.TestLifecycleEventManager.testAllClassListener(),30,250
org.apache.openjpa.persistence.event.TestLifecycleEventManager.testBaseClassListener(),31,267
org.apache.openjpa.persistence.event.TestLifecycleEventManager.Listener.afterLoad(LifecycleEvent),3,4
org.apache.openjpa.persistence.event.TestLifecycleEventManager.Listener.afterRefresh(LifecycleEvent),4,4
org.apache.openjpa.persistence.event.TestLifecycleEventManager.Listener.beforeStore(LifecycleEvent),4,6
org.apache.openjpa.persistence.event.TestLifecycleEventManager.Listener.afterStore(LifecycleEvent),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Employee.Employee(),1,1
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Employee.Employee(int,String)",3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Employee.getName(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Employee.setName(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Employee.setId(int),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Employee.getId(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Employee.resetSyncTime(),17,32
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Employee.pload(),8,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Employee.pupdate(),8,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Employee.toString(),5,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Employee.getCheck(),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Employee.setCheck(int),3,5
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverridesXml.setUp(),11,13
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverridesXml.getPersistenceUnitName(),5,5
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverridesXml.testAttrOverride1(),10,13
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverridesXml.testBasicEmbedAttrOverride(),36,78
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverridesXml.testXMLEntityWithAnnotatedOverrideEmbed(),32,84
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverridesXml.createObj1(),14,22
"org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverridesXml.createCustomer1(EntityManager,int)",12,33
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverridesXml.findObj1(),14,27
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverridesXml.queryObj1(),22,35
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverridesXml.assertAttrOverrides(String),16,35
"org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverridesXml.verifyColumnOverride(OpenJPAEntityManagerSPI,String,String)",35,84
org.apache.openjpa.persistence.generationtype.ValueCache.setValue(int),3,3
org.apache.openjpa.persistence.enhance.identity.Employee3.getEmpId(),1,2
org.apache.openjpa.persistence.enhance.identity.Employee3.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.Employee3.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.Employee3.getDependents(),3,4
org.apache.openjpa.persistence.enhance.identity.Employee3.setDependents(List<Dependent3>),4,7
org.apache.openjpa.persistence.enhance.identity.Employee3.addDependent(Dependent3),3,5
org.apache.openjpa.persistence.enhance.identity.Employee3.equals(Object),9,26
org.apache.openjpa.persistence.enhance.identity.Employee3.hashCode(),7,19
"org.apache.openjpa.jdbc.sql.SecondaryRow.SecondaryRow(Table,int)",7,12
"org.apache.openjpa.jdbc.sql.SecondaryRow.SecondaryRow(Column[],int)",5,7
"org.apache.openjpa.jdbc.sql.SecondaryRow.setForeignKey(ForeignKey,OpenJPAStateManager)",7,12
"org.apache.openjpa.jdbc.sql.SecondaryRow.setForeignKey(ForeignKey,ColumnIO,OpenJPAStateManager)",26,54
"org.apache.openjpa.jdbc.sql.SecondaryRow.delayForeignKey(ForeignKey,OpenJPAStateManager)",22,28
"org.apache.openjpa.jdbc.sql.SecondaryRow.setRelationId(Column,OpenJPAStateManager,RelationId)",23,44
org.apache.openjpa.jdbc.sql.SecondaryRow.getRelationIdIndex(Column),10,18
org.apache.openjpa.jdbc.sql.SecondaryRow.isPrimaryKeyAutoAssigned(OpenJPAStateManager),17,37
org.apache.openjpa.jdbc.sql.SecondaryRow.generateSQL(DBDictionary),21,44
"org.apache.openjpa.jdbc.sql.SecondaryRow.newInstance(Column[],int)",7,10
"org.apache.openjpa.jdbc.sql.SecondaryRow.copyInto(RowImpl,boolean)",14,43
org.apache.openjpa.persistence.query.IndexExpression.IndexExpression(Expression),5,7
org.apache.openjpa.persistence.compat.EntityC_B1MFK.getId(),0,0
org.apache.openjpa.persistence.compat.EntityC_B1MFK.getName(),2,3
org.apache.openjpa.persistence.compat.EntityC_B1MFK.setName(String),3,6
org.apache.openjpa.persistence.compat.EntityC_B1MFK.setBi1mfk(Bi_1ToM_FK),2,5
org.apache.openjpa.persistence.compat.EntityC_B1MFK.getBi1mfk(),1,2
org.apache.openjpa.kernel.TestUnenhancedFieldAccessInstanceBrokerSerialization.getManagedType(),5,8
org.apache.openjpa.kernel.TestUnenhancedFieldAccessInstanceBrokerSerialization.newManagedInstance(),8,15
org.apache.openjpa.kernel.TestUnenhancedFieldAccessInstanceBrokerSerialization.modifyInstance(UnenhancedFieldAccess),8,9
org.apache.openjpa.kernel.TestUnenhancedFieldAccessInstanceBrokerSerialization.getModifiedValue(UnenhancedFieldAccess),7,8
org.apache.openjpa.lib.log.LogFactoryImpl.LogFactoryImpl(),8,9
org.apache.openjpa.lib.log.LogFactoryImpl.getLog(String),18,34
org.apache.openjpa.lib.log.LogFactoryImpl.newLogImpl(),4,10
org.apache.openjpa.lib.log.LogFactoryImpl.setDefaultLevel(String),9,16
org.apache.openjpa.lib.log.LogFactoryImpl.getDefaultLevel(),4,7
org.apache.openjpa.lib.log.LogFactoryImpl.setDefaultLevel(short),5,10
org.apache.openjpa.lib.log.LogFactoryImpl.setDiagnosticContext(String),13,18
org.apache.openjpa.lib.log.LogFactoryImpl.getDiagnosticContext(),23,41
org.apache.openjpa.lib.log.LogFactoryImpl.setFile(String),35,79
org.apache.openjpa.lib.log.LogFactoryImpl.getStream(),3,5
org.apache.openjpa.lib.log.LogFactoryImpl.setStream(PrintStream),6,12
org.apache.openjpa.lib.log.LogFactoryImpl.getLevelName(short),17,36
org.apache.openjpa.lib.log.LogFactoryImpl.getLevel(String),25,57
org.apache.openjpa.lib.log.LogFactoryImpl.setConfiguration(Configuration),3,6
org.apache.openjpa.lib.log.LogFactoryImpl.startConfiguration(),2,2
org.apache.openjpa.lib.log.LogFactoryImpl.endConfiguration(),1,1
org.apache.openjpa.lib.log.LogFactoryImpl.setInto(Options),16,31
org.apache.openjpa.lib.log.LogFactoryImpl.shorten(String),5,8
org.apache.openjpa.lib.log.LogFactoryImpl.LogImpl.isEnabled(short),2,4
"org.apache.openjpa.lib.log.LogFactoryImpl.LogImpl.log(short,String,Throwable)",8,13
"org.apache.openjpa.lib.log.LogFactoryImpl.LogImpl.formatMessage(short,String,Throwable)",43,105
org.apache.openjpa.lib.log.LogFactoryImpl.LogImpl.getOffset(),6,7
org.apache.openjpa.lib.log.LogFactoryImpl.LogImpl.setChannel(String),4,6
org.apache.openjpa.lib.log.LogFactoryImpl.LogImpl.getChannel(),2,3
org.apache.openjpa.lib.log.LogFactoryImpl.LogImpl.setLevel(short),3,5
org.apache.openjpa.lib.log.LogFactoryImpl.LogImpl.getLevel(),1,2
org.apache.openjpa.persistence.query.TypeExpression.TypeExpression(Expression),5,7
org.apache.openjpa.persistence.flush.Assignment.getAssignmentId(),2,2
org.apache.openjpa.persistence.flush.Assignment.setAssignmentId(Long),3,5
org.apache.openjpa.persistence.flush.Assignment.getTopic(),1,3
org.apache.openjpa.persistence.flush.Assignment.setTopic(Topic),2,6
org.apache.openjpa.persistence.flush.Assignment.getAssignmentText(),4,5
org.apache.openjpa.persistence.flush.Assignment.setAssignmentText(String),5,10
org.apache.openjpa.persistence.inheritance.TestIdentityWithSingleTableStrategy.setUp(),16,37
org.apache.openjpa.persistence.inheritance.TestIdentityWithSingleTableStrategy.testFindAndNaviagtedEntityIdential(),14,37
org.apache.openjpa.persistence.inheritance.TestIdentityWithSingleTableStrategy.testReferenceAndNaviagtedEntityIdential(),15,41
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD3.EntityD3(),1,1
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD3.EntityD3(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD3.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD3.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD3.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD3.setName(String),4,10
org.apache.openjpa.persistence.access.EmbedInnerProp.getInnerName(),3,4
org.apache.openjpa.persistence.access.EmbedInnerProp.setInnerName(String),4,9
org.apache.openjpa.persistence.access.EmbedInnerProp.getOuterField(),4,6
org.apache.openjpa.persistence.access.EmbedInnerProp.setOuterField(EmbedOuterField),5,7
org.apache.openjpa.persistence.access.EmbedInnerProp.equals(Object),9,24
org.apache.openjpa.persistence.access.PropertySub.getCreateDate(),3,5
org.apache.openjpa.persistence.access.PropertySub.setCreateDate(Date),4,8
org.apache.openjpa.persistence.access.PropertySub.equals(Object),9,29
org.apache.openjpa.persistence.compat.Employee.getSsn(),2,3
org.apache.openjpa.persistence.compat.Employee.setSsn(String),3,6
org.apache.openjpa.persistence.compat.Employee.getDept(),2,3
org.apache.openjpa.persistence.compat.Employee.setDept(Department),3,6
org.apache.openjpa.persistence.AutoClearType.AutoClearType(int),4,6
org.apache.openjpa.persistence.AutoClearType.toKernelConstant(),3,4
org.apache.openjpa.persistence.AutoClearType.fromKernelConstant(int),8,17
org.apache.openjpa.kernel.PDeletedFlushedState.flush(StateManagerImpl),4,4
org.apache.openjpa.kernel.PDeletedFlushedState.persist(StateManagerImpl),7,8
org.apache.openjpa.kernel.PDeletedFlushedState.toString(),4,5
embeddables.User.User(),1,1
"embeddables.User.User(ContactInfo,String,String)",5,10
embeddables.User.addAddress(Address),3,5
embeddables.User.toString(),8,14
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.PathImpl(Class<X>)",9,12
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.PathImpl(PathImpl<Z>,Members.Member<>,Class<X>)",24,54
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.getModel()",11,21
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.getParentPath()",3,8
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.getInnermostParentPath()",7,15
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.getEmbeddedFieldMetaData(FieldMetaData)",17,56
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.getInnermostMember(PathImpl<>,Members.Member<>)",4,8
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.setCorrelatedPath(PathImpl<>)",5,15
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.getCorrelatedPath()",3,9
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.isCorrelated()",3,7
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",39,182
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.getCorrelatedRoot(SubqueryImpl<>)",9,20
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.getCorrelatedJoin(PathImpl<>)",5,19
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.inSubquery(SubqueryImpl<>)",7,15
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.traversePath(PathImpl<>,org.apache.openjpa.kernel.exps.Path,FieldMetaData)",18,56
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.get(SingularAttribute<Y>)",13,32
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.get(PluralAttribute<X,C,E>)",16,35
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.get(MapAttribute<X,K,V>)",13,35
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.get(String)",17,45
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.getType()",1,3
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.getMember()",0,0
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.type()",5,8
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.asValue(AliasContext)",13,29
"org.apache.openjpa.persistence.criteria.PathImpl<Z,X>.asVariable(AliasContext)",10,15
"jpa.tools.swing.InstanceView<T>.InstanceView(EntityType<T>,T)",10,17
org.apache.openjpa.persistence.inheritance.EntityL3Sibling.getSiblingL3Data(),3,4
org.apache.openjpa.persistence.inheritance.EntityL3Sibling.setSiblingL3Data(int),4,7
org.apache.openjpa.persistence.compat.EntityC_U11JT.getId(),0,0
org.apache.openjpa.persistence.compat.EntityC_U11JT.getName(),2,3
org.apache.openjpa.persistence.compat.EntityC_U11JT.setName(String),3,6
org.apache.openjpa.persistence.compat.EntityC_U11JT.hashCode(),3,5
org.apache.openjpa.persistence.compat.EntityC_U11JT.equals(Object),4,8
org.apache.openjpa.persistence.access.AbstractMappedSuperProperty.setId(int),1,1
org.apache.openjpa.persistence.access.AbstractMappedSuperProperty.getId(),0,0
org.apache.openjpa.persistence.access.AbstractMappedSuperProperty.setName(String),3,6
org.apache.openjpa.persistence.access.AbstractMappedSuperProperty.getName(),2,3
org.apache.openjpa.persistence.access.AbstractMappedSuperProperty.getCreateDate(),2,3
org.apache.openjpa.persistence.access.AbstractMappedSuperProperty.setCreateDate(Date),3,5
org.apache.openjpa.persistence.access.AbstractMappedSuperProperty.equals(Object),6,14
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCEntityD.getEntityDData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCEntityD.setEntityDData(String),4,10
org.apache.openjpa.persistence.access.Quantity.Quantity(),1,1
"org.apache.openjpa.persistence.access.Quantity.Quantity(double,String)",8,11
org.apache.openjpa.persistence.access.Quantity.setAmount(double),2,5
org.apache.openjpa.persistence.access.Quantity.getAmount(),1,2
org.apache.openjpa.persistence.access.Quantity.setUnitOfMeasure(String),4,7
org.apache.openjpa.persistence.access.Quantity.getUnitOfMeasure(),3,4
org.apache.openjpa.kernel.UUIDType4HexSeq.getInstance(),6,8
org.apache.openjpa.kernel.UUIDType4HexSeq.UUIDType4HexSeq(),6,6
org.apache.openjpa.kernel.UUIDType4HexSeq.setType(int),2,3
"org.apache.openjpa.kernel.UUIDType4HexSeq.next(StoreContext,ClassMetaData)",10,13
"org.apache.openjpa.kernel.UUIDType4HexSeq.current(StoreContext,ClassMetaData)",7,8
"org.apache.openjpa.kernel.UUIDType4HexSeq.allocate(int,StoreContext,ClassMetaData)",7,8
org.apache.openjpa.kernel.UUIDType4HexSeq.close(),1,1
org.apache.openjpa.persistence.inheritance.entity.ManagedIface2.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.ManagedIface2.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entity.ManagedIface2.getIntFieldSup(),2,2
org.apache.openjpa.persistence.inheritance.entity.ManagedIface2.setIntFieldSup(int),3,3
"org.apache.openjpa.meta.FetchGroup.FetchGroup(ClassMetaData,String)",13,21
"org.apache.openjpa.meta.FetchGroup.FetchGroup(String,boolean)",10,17
org.apache.openjpa.meta.FetchGroup.copy(FetchGroup),23,42
org.apache.openjpa.meta.FetchGroup.getName(),3,5
org.apache.openjpa.meta.FetchGroup.addDeclaredInclude(String),20,32
"org.apache.openjpa.meta.FetchGroup.includes(String,boolean)",20,59
org.apache.openjpa.meta.FetchGroup.addContainedBy(FetchGroup),18,38
org.apache.openjpa.meta.FetchGroup.getContainedBy(),11,18
org.apache.openjpa.meta.FetchGroup.getDeclaredIncludes(),10,16
"org.apache.openjpa.meta.FetchGroup.setRecursionDepth(FieldMetaData,int)",18,36
org.apache.openjpa.meta.FetchGroup.getRecursionDepth(FieldMetaData),8,20
org.apache.openjpa.meta.FetchGroup.getDeclaredRecursionDepth(FieldMetaData),9,17
org.apache.openjpa.meta.FetchGroup.findRecursionDepth(FieldMetaData),21,67
org.apache.openjpa.meta.FetchGroup.getDeclaredRecursionDepthFields(),15,26
org.apache.openjpa.meta.FetchGroup.setPostLoad(boolean),14,22
org.apache.openjpa.meta.FetchGroup.isPostLoad(),17,43
org.apache.openjpa.meta.FetchGroup.isPostLoadExplicit(),5,9
org.apache.openjpa.meta.FetchGroup.resolve(),14,40
org.apache.openjpa.meta.FetchGroup.equals(Object),10,18
org.apache.openjpa.meta.FetchGroup.hashCode(),4,9
org.apache.openjpa.meta.FetchGroup.toString(),4,7
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI2.EntityI2(),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI2.EntityI2(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI2.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI2.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI2.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI2.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI2.getEntityI3(),1,3
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI2.setEntityI3(EntityI3),3,9
"org.apache.openjpa.enhance.ApplicationIdTool.ApplicationIdTool(OpenJPAConfiguration,Class)",33,67
"org.apache.openjpa.enhance.ApplicationIdTool.ApplicationIdTool(OpenJPAConfiguration,Class,ClassMetaData)",23,41
org.apache.openjpa.enhance.ApplicationIdTool.getDeclaredPrimaryKeyFields(ClassMetaData),20,62
org.apache.openjpa.enhance.ApplicationIdTool.getIgnoreErrors(),10,11
org.apache.openjpa.enhance.ApplicationIdTool.setIgnoreErrors(boolean),10,14
org.apache.openjpa.enhance.ApplicationIdTool.getCodeFormat(),5,10
org.apache.openjpa.enhance.ApplicationIdTool.setCodeFormat(CodeFormat),6,14
org.apache.openjpa.enhance.ApplicationIdTool.getDirectory(),14,19
org.apache.openjpa.enhance.ApplicationIdTool.setDirectory(File),14,22
org.apache.openjpa.enhance.ApplicationIdTool.getToken(),8,10
org.apache.openjpa.enhance.ApplicationIdTool.setToken(String),9,13
org.apache.openjpa.enhance.ApplicationIdTool.getWriter(),4,8
org.apache.openjpa.enhance.ApplicationIdTool.setWriter(Writer),5,11
org.apache.openjpa.enhance.ApplicationIdTool.getType(),3,5
org.apache.openjpa.enhance.ApplicationIdTool.getMetaData(),6,9
org.apache.openjpa.enhance.ApplicationIdTool.getCode(),9,11
org.apache.openjpa.enhance.ApplicationIdTool.isInnerClass(),10,12
org.apache.openjpa.enhance.ApplicationIdTool.getClassName(),13,23
org.apache.openjpa.enhance.ApplicationIdTool.run(),95,469
org.apache.openjpa.enhance.ApplicationIdTool.record(),14,36
org.apache.openjpa.enhance.ApplicationIdTool.getImports(),22,48
org.apache.openjpa.enhance.ApplicationIdTool.getImportPackages(),23,62
org.apache.openjpa.enhance.ApplicationIdTool.getFieldDeclarations(),15,31
org.apache.openjpa.enhance.ApplicationIdTool.getTypeName(FieldMetaData),13,28
org.apache.openjpa.enhance.ApplicationIdTool.getProperties(),32,128
org.apache.openjpa.enhance.ApplicationIdTool.getConstructor(boolean),18,51
org.apache.openjpa.enhance.ApplicationIdTool.getFromStringCode(boolean),47,177
org.apache.openjpa.enhance.ApplicationIdTool.getTokenizer(boolean),11,16
"org.apache.openjpa.enhance.ApplicationIdTool.getConversionCode(FieldMetaData,String)",32,229
org.apache.openjpa.enhance.ApplicationIdTool.getEqualsCode(boolean),39,278
org.apache.openjpa.enhance.ApplicationIdTool.getHashCodeCode(boolean),30,107
org.apache.openjpa.enhance.ApplicationIdTool.hasConcreteSuperclass(),9,22
"org.apache.openjpa.enhance.ApplicationIdTool.appendHashCodeCode(FieldMetaData,CodeFormat)",22,185
org.apache.openjpa.enhance.ApplicationIdTool.getToStringCode(boolean),39,174
org.apache.openjpa.enhance.ApplicationIdTool.getToBytesByteArrayCode(),25,177
org.apache.openjpa.enhance.ApplicationIdTool.getToStringByteArrayCode(),23,107
org.apache.openjpa.enhance.ApplicationIdTool.getEqualsByteArrayCode(),15,91
org.apache.openjpa.enhance.ApplicationIdTool.getHashCodeByteArrayCode(),13,62
org.apache.openjpa.enhance.ApplicationIdTool.getCustomTokenizerClass(),20,150
org.apache.openjpa.enhance.ApplicationIdTool.getFile(),16,53
org.apache.openjpa.enhance.ApplicationIdTool.newCodeFormat(),5,15
org.apache.openjpa.enhance.ApplicationIdTool.main(String[]),105,201
org.apache.openjpa.enhance.ApplicationIdTool.main(String[]).$1.run(Options),13,20
"org.apache.openjpa.enhance.ApplicationIdTool.run(OpenJPAConfiguration,String[],Options)",47,147
"org.apache.openjpa.enhance.ApplicationIdTool.run(OpenJPAConfiguration,String[],Flags,ClassLoader)",71,190
"org.apache.openjpa.enhance.ApplicationIdTool.setObjectIdType(ClassMetaData,Flags,BCClassLoader)",23,56
"org.apache.openjpa.enhance.ApplicationIdTool.loadClass(Class,String,BCClassLoader)",23,56
"org.apache.openjpa.enhance.ApplicationIdTool.loadObjectIds(MetaDataRepository,boolean)",24,55
org.apache.openjpa.enhance.ApplicationIdTool.ObjectIdLoader.setLoadObjectIds(),9,9
"org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI.addLifecycleListener(Object,Class)",19,29
org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI.removeLifecycleListener(Object),6,10
org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI.addTransactionListener(Object),18,24
org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI.removeTransactionListener(Object),6,10
org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI.getConfiguration(),3,5
org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI.createEntityManager(),5,7
org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI.createEntityManager(Map),7,9
org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass.TestIdClass.setUp(),4,5
org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass.TestIdClass.test001(),10,17
org.apache.openjpa.meta.MetaDataContext.getRepository(),5,7
"org.apache.openjpa.kernel.NoneLockManager.lock(OpenJPAStateManager,int,int,Object)",20,22
"org.apache.openjpa.kernel.NoneLockManager.refreshLock(OpenJPAStateManager,int,int,Object)",9,10
org.apache.openjpa.kernel.NoneLockManager.release(OpenJPAStateManager),5,5
org.apache.openjpa.kernel.NoneLockManager.getLockLevel(OpenJPAStateManager),5,6
org.apache.openjpa.persistence.common.apps.RuntimeTest1.RuntimeTest1(),2,2
org.apache.openjpa.persistence.common.apps.RuntimeTest1.RuntimeTest1(int),4,5
"org.apache.openjpa.persistence.common.apps.RuntimeTest1.RuntimeTest1(String,int)",5,8
org.apache.openjpa.persistence.common.apps.RuntimeTest1.getIntField(),1,2
org.apache.openjpa.persistence.common.apps.RuntimeTest1.setIntField(int),2,5
org.apache.openjpa.persistence.common.apps.RuntimeTest1.getStringField(),2,5
org.apache.openjpa.persistence.common.apps.RuntimeTest1.setStringField(String),3,10
org.apache.openjpa.persistence.common.apps.RuntimeTest1.getSelfOneOne(),3,4
org.apache.openjpa.persistence.common.apps.RuntimeTest1.setSelfOneOne(RuntimeTest1),4,7
org.apache.openjpa.persistence.common.apps.RuntimeTest1.getSelfOneMany(),2,3
org.apache.openjpa.persistence.common.apps.RuntimeTest1.setSelfOneMany(Set),2,6
org.apache.openjpa.persistence.common.apps.RuntimeTest1.toString(),2,8
org.apache.openjpa.persistence.common.apps.RuntimeTest1.getLocaleField(),2,5
org.apache.openjpa.persistence.common.apps.RuntimeTest1.setLocaleField(Locale),3,10
org.apache.openjpa.util.AbstractChangeTracker.AbstractChangeTracker(),5,5
org.apache.openjpa.util.AbstractChangeTracker.getAutoOff(),9,10
org.apache.openjpa.util.AbstractChangeTracker.setAutoOff(boolean),10,13
org.apache.openjpa.util.AbstractChangeTracker.isTracking(),2,2
org.apache.openjpa.util.AbstractChangeTracker.startTracking(),7,8
org.apache.openjpa.util.AbstractChangeTracker.initialSequence(),11,13
org.apache.openjpa.util.AbstractChangeTracker.stopTracking(),5,5
org.apache.openjpa.util.AbstractChangeTracker.reset(),6,10
org.apache.openjpa.util.AbstractChangeTracker.getAdded(),6,7
org.apache.openjpa.util.AbstractChangeTracker.getRemoved(),6,7
org.apache.openjpa.util.AbstractChangeTracker.getChanged(),6,7
org.apache.openjpa.util.AbstractChangeTracker.added(Object),9,13
org.apache.openjpa.util.AbstractChangeTracker.add(Object),6,6
org.apache.openjpa.util.AbstractChangeTracker.removed(Object),9,13
org.apache.openjpa.util.AbstractChangeTracker.remove(Object),6,6
org.apache.openjpa.util.AbstractChangeTracker.changed(Object),9,13
org.apache.openjpa.util.AbstractChangeTracker.change(Object),6,6
org.apache.openjpa.util.AbstractChangeTracker.getNextSequence(),2,2
org.apache.openjpa.util.AbstractChangeTracker.setNextSequence(int),3,5
org.apache.openjpa.util.AbstractChangeTracker.newSet(),13,23
org.apache.openjpa.util.AbstractChangeTracker.setIdentity(Object),25,44
"org.apache.openjpa.util.AbstractChangeTracker.switchStructure(Collection,boolean)",14,41
org.apache.openjpa.persistence.annotations.TestOneToOne.TestOneToOne(String),4,5
org.apache.openjpa.persistence.annotations.TestOneToOne.setUp(),4,7
org.apache.openjpa.persistence.annotations.TestOneToOne.testOneToOne(),12,35
org.apache.openjpa.persistence.annotations.TestOneToOne.testSelfOneToOne(),12,35
org.apache.openjpa.persistence.annotations.TestOneToOne.testPKJoinSelfOneToOne(),13,36
org.apache.openjpa.persistence.annotations.TestOneToOne.testOtherTableOneToOne(),13,38
org.apache.openjpa.persistence.annotations.TestOneToOne.testInverseOneToOne(),14,41
org.apache.openjpa.persistence.detachment.TestNoCascadeOneToManyMerge.setUp(),6,10
org.apache.openjpa.persistence.detachment.TestNoCascadeOneToManyMerge.createEntities(),14,33
org.apache.openjpa.persistence.detachment.TestNoCascadeOneToManyMerge.testMergeAttached(),17,33
org.apache.openjpa.persistence.detachment.TestNoCascadeOneToManyMerge.testMergeDetached(),25,51
org.apache.openjpa.persistence.detachment.TestNoCascadeOneToManyMerge.main(String[]),8,9
jpa.tools.swing.StatusBar.StatusBar(),21,48
jpa.tools.swing.StatusBar.showMessage(String),4,8
"jpa.tools.swing.StatusBar.startTimer(long,int,TimeUnit)",22,60
jpa.tools.swing.StatusBar.propertyChange(PropertyChangeEvent),14,23
jpa.tools.swing.StatusBar.stopTimer(),10,18
"jpa.tools.swing.StatusBar.TaskProgress.TaskProgress(long,int)",6,12
jpa.tools.swing.StatusBar.TaskProgress.doInBackground(),18,45
jpa.tools.swing.StatusBar.MemoryDisplay.MemoryDisplay(JProgressBar),9,17
jpa.tools.swing.StatusBar.MemoryDisplay.actionPerformed(ActionEvent),15,39
jpa.tools.swing.StatusBar.MemoryDisplay.mb(long),0,0
jpa.tools.swing.StatusBar.MemoryDisplay.getColor(int),4,10
org.apache.openjpa.persistence.derivedid.EDBigDecimalID.EDBigDecimalID(),1,1
org.apache.openjpa.persistence.derivedid.EDBigDecimalID.EDBigDecimalID(EBigDecimalID),4,9
org.apache.openjpa.persistence.derivedid.EDBigDecimalID.getRid(),2,3
org.apache.openjpa.persistence.derivedid.EDBigDecimalID.setRid(EBigDecimalID),3,6
org.apache.openjpa.persistence.derivedid.EDBigDecimalID.getName(),2,3
org.apache.openjpa.persistence.derivedid.EDBigDecimalID.setName(String),3,6
"org.apache.openjpa.util.ByteId.ByteId(Class,Byte)",3,6
"org.apache.openjpa.util.ByteId.ByteId(Class,String)",4,7
"org.apache.openjpa.util.ByteId.ByteId(Class,byte)",2,5
"org.apache.openjpa.util.ByteId.ByteId(Class,byte,boolean)",3,7
org.apache.openjpa.util.ByteId.getId(),1,1
org.apache.openjpa.util.ByteId.getIdObject(),3,4
org.apache.openjpa.util.ByteId.toString(),2,4
org.apache.openjpa.util.ByteId.idHash(),2,2
org.apache.openjpa.util.ByteId.idEquals(OpenJPAId),3,4
org.apache.openjpa.persistence.access.MappedCallbackSup.prePersist(),2,2
org.apache.openjpa.util.ExceptionInfo.getMessage(),4,6
org.apache.openjpa.util.ExceptionInfo.getCause(),8,15
org.apache.openjpa.util.ExceptionInfo.printStackTrace(),4,8
org.apache.openjpa.util.ExceptionInfo.getType(),2,3
org.apache.openjpa.util.ExceptionInfo.getSubtype(),2,3
org.apache.openjpa.util.ExceptionInfo.isFatal(),2,3
org.apache.openjpa.util.ExceptionInfo.getNestedThrowables(),3,5
org.apache.openjpa.util.ExceptionInfo.getFailedObject(),2,5
org.apache.openjpa.persistence.access.xml.XMLSuperFieldEntity.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLSuperFieldEntity.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLSuperFieldEntity.setName(String),3,6
org.apache.openjpa.persistence.access.xml.XMLSuperFieldEntity.getName(),2,3
org.apache.openjpa.persistence.access.xml.XMLSuperFieldEntity.equals(Object),8,20
org.apache.openjpa.persistence.embed.EntityA_Embed_ToMany.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Embed_ToMany.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Embed_ToMany.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Embed_ToMany.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Embed_ToMany.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Embed_ToMany.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Embed_ToMany.getEmbed(),1,3
org.apache.openjpa.persistence.embed.EntityA_Embed_ToMany.setEmbed(Embed_ToMany),2,6
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityG.EntityG(),1,1
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityG.EntityG(int),1,1
"org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityG.EntityG(int,String)",3,5
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityG.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityG.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityG.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityG.setName(String),4,10
"org.apache.openjpa.util.ProxyConcurrentMaps.beforeRemove(ProxyMap,Object,Object)",8,14
"org.apache.openjpa.util.ProxyConcurrentMaps.afterRemove(ProxyMap,Object,Object,boolean,boolean)",16,46
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedIdentifiers.setUp(),21,26
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedIdentifiers.tearDown(),3,4
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedIdentifiers.getPersistenceUnitName(),7,7
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedIdentifiers.createEntityA(int),12,27
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedIdentifiers.testTableName(),12,24
org.apache.openjpa.util.DelayedHashSetProxy.DelayedHashSetProxy(Collection<>),6,9
"org.apache.openjpa.util.DelayedHashSetProxy.DelayedHashSetProxy(int,float)",5,8
org.apache.openjpa.util.DelayedHashSetProxy.DelayedHashSetProxy(int),5,6
org.apache.openjpa.util.DelayedHashSetProxy.DelayedHashSetProxy(),4,4
"org.apache.openjpa.util.DelayedHashSetProxy.setOwner(OpenJPAStateManager,int)",18,45
"org.apache.openjpa.util.DelayedHashSetProxy.detaching(OpenJPAStateManager,int)",5,19
org.apache.openjpa.util.DelayedHashSetProxy.getOwner(),3,3
org.apache.openjpa.util.DelayedHashSetProxy.getOwnerField(),2,3
org.apache.openjpa.util.DelayedHashSetProxy.getChangeTracker(),2,6
org.apache.openjpa.util.DelayedHashSetProxy.setChangeTracker(CollectionChangeTracker),4,8
org.apache.openjpa.util.DelayedHashSetProxy.copy(Object),6,10
org.apache.openjpa.util.DelayedHashSetProxy.getElementType(),2,4
org.apache.openjpa.util.DelayedHashSetProxy.setElementType(Class<>),4,9
"org.apache.openjpa.util.DelayedHashSetProxy.newInstance(Class,Comparator,boolean,boolean)",14,34
org.apache.openjpa.util.DelayedHashSetProxy.clone(),10,19
org.apache.openjpa.util.DelayedHashSetProxy.add(Object),8,24
org.apache.openjpa.util.DelayedHashSetProxy.clear(),6,7
org.apache.openjpa.util.DelayedHashSetProxy.iterator(),8,17
org.apache.openjpa.util.DelayedHashSetProxy.remove(Object),9,30
org.apache.openjpa.util.DelayedHashSetProxy.removeAll(Collection),7,14
org.apache.openjpa.util.DelayedHashSetProxy.addAll(Collection),7,14
org.apache.openjpa.util.DelayedHashSetProxy.retainAll(Collection),9,17
org.apache.openjpa.util.DelayedHashSetProxy.writeReplace(),8,12
org.apache.openjpa.util.DelayedHashSetProxy.size(),5,7
org.apache.openjpa.util.DelayedHashSetProxy.isEmpty(),5,7
org.apache.openjpa.util.DelayedHashSetProxy.contains(Object),6,8
org.apache.openjpa.util.DelayedHashSetProxy.toArray(),6,8
org.apache.openjpa.util.DelayedHashSetProxy.toArray(Object[]),6,9
org.apache.openjpa.util.DelayedHashSetProxy.containsAll(Collection),6,8
org.apache.openjpa.util.DelayedHashSetProxy.toString(),5,8
org.apache.openjpa.util.DelayedHashSetProxy.equals(Object),7,12
org.apache.openjpa.util.DelayedHashSetProxy.hashCode(),6,9
org.apache.openjpa.util.DelayedHashSetProxy.getDelayedField(),5,10
org.apache.openjpa.util.DelayedHashSetProxy.getDelayedOwner(),5,6
org.apache.openjpa.util.DelayedHashSetProxy.isDirectAccess(),2,4
org.apache.openjpa.util.DelayedHashSetProxy.setDirectAccess(boolean),3,7
org.apache.openjpa.util.DelayedHashSetProxy.getBrokerFactory(),2,6
org.apache.openjpa.util.DelayedHashSetProxy.load(),4,5
org.apache.openjpa.util.DelayedHashSetProxy.getBroker(),3,12
org.apache.openjpa.util.DelayedHashSetProxy.closeBroker(),6,16
org.apache.openjpa.util.DelayedHashSetProxy.getOwnerStateManager(),3,5
org.apache.openjpa.util.DelayedHashSetProxy.isDetached(),1,2
org.apache.openjpa.util.DelayedHashSetProxy.isDelayLoad(),5,5
org.apache.openjpa.jdbc.meta.strats.SubclassJoinDiscriminatorStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.SubclassJoinDiscriminatorStrategy.map(boolean),28,56
"org.apache.openjpa.jdbc.meta.strats.SubclassJoinDiscriminatorStrategy.select(Select,ClassMapping)",28,78
"org.apache.openjpa.jdbc.meta.strats.SubclassJoinDiscriminatorStrategy.getClass(JDBCStore,ClassMapping,Result)",42,73
"org.apache.openjpa.jdbc.meta.strats.SubclassJoinDiscriminatorStrategy.hasClassConditions(ClassMapping,boolean)",9,13
"org.apache.openjpa.jdbc.meta.strats.SubclassJoinDiscriminatorStrategy.getClassConditions(Select,Joins,ClassMapping,boolean)",33,70
org.apache.openjpa.util.RuntimeExceptionTranslator.translate(RuntimeException),3,7
"org.apache.openjpa.enhance.CodeGenerator.CodeGenerator(OpenJPAConfiguration,Class)",13,19
org.apache.openjpa.enhance.CodeGenerator.CodeGenerator(ClassMetaData),11,17
org.apache.openjpa.enhance.CodeGenerator.getCodeDirectory(),13,17
org.apache.openjpa.enhance.CodeGenerator.setDirectory(File),13,19
org.apache.openjpa.enhance.CodeGenerator.getCodeFormat(),5,10
org.apache.openjpa.enhance.CodeGenerator.setCodeFormat(CodeFormat),6,14
org.apache.openjpa.enhance.CodeGenerator.getType(),2,4
org.apache.openjpa.enhance.CodeGenerator.getMetaData(),5,8
org.apache.openjpa.enhance.CodeGenerator.getCode(),6,11
org.apache.openjpa.enhance.CodeGenerator.generateCode(),26,119
org.apache.openjpa.enhance.CodeGenerator.writeCode(),8,18
org.apache.openjpa.enhance.CodeGenerator.writeCode(Writer),6,12
org.apache.openjpa.enhance.CodeGenerator.getImports(),20,46
org.apache.openjpa.enhance.CodeGenerator.getImportPackages(),20,48
org.apache.openjpa.enhance.CodeGenerator.getConstructor(),31,133
org.apache.openjpa.enhance.CodeGenerator.getFieldCode(),17,54
"org.apache.openjpa.enhance.CodeGenerator.appendFieldCode(FieldMetaData,CodeFormat,CodeFormat)",60,506
"org.apache.openjpa.enhance.CodeGenerator.getClassCode(String,String,String,String,String,String,String)",23,110
"org.apache.openjpa.enhance.CodeGenerator.writeAnnotations(CodeFormat,List,int)",15,31
org.apache.openjpa.enhance.CodeGenerator.openClassBrace(CodeFormat),9,16
org.apache.openjpa.enhance.CodeGenerator.closeClassBrace(CodeFormat),10,18
org.apache.openjpa.enhance.CodeGenerator.getFile(),9,27
org.apache.openjpa.enhance.CodeGenerator.newCodeFormat(),5,15
org.apache.openjpa.enhance.CodeGenerator.getClassCode(),38,63
org.apache.openjpa.enhance.CodeGenerator.getInitialValue(FieldMetaData),10,14
org.apache.openjpa.enhance.CodeGenerator.getDeclaration(FieldMetaData),36,70
org.apache.openjpa.enhance.CodeGenerator.getFieldCode(FieldMetaData),36,71
org.apache.openjpa.enhance.CodeGenerator.usePropertyBasedAccess(),7,11
org.apache.openjpa.enhance.CodeGenerator.getClassAnnotations(),4,5
org.apache.openjpa.enhance.CodeGenerator.getFieldAnnotations(FieldMetaData),7,11
org.apache.openjpa.enhance.CodeGenerator.useGenericCollections(),9,12
"org.apache.openjpa.persistence.StoreCacheImpl.StoreCacheImpl(EntityManagerFactoryImpl,DataCache)",20,29
org.apache.openjpa.persistence.StoreCacheImpl.getDelegate(),3,6
"org.apache.openjpa.persistence.StoreCacheImpl.contains(Class,Object)",11,17
"org.apache.openjpa.persistence.StoreCacheImpl.containsAll(Class,Object)",6,9
"org.apache.openjpa.persistence.StoreCacheImpl.containsAll(Class,Collection)",17,26
"org.apache.openjpa.persistence.StoreCacheImpl.pin(Class,Object)",11,17
"org.apache.openjpa.persistence.StoreCacheImpl.pinAll(Class,Object)",6,9
"org.apache.openjpa.persistence.StoreCacheImpl.pinAll(Class,Collection)",13,18
"org.apache.openjpa.persistence.StoreCacheImpl.unpin(Class,Object)",11,17
"org.apache.openjpa.persistence.StoreCacheImpl.unpinAll(Class,Object)",6,9
"org.apache.openjpa.persistence.StoreCacheImpl.unpinAll(Class,Collection)",13,18
"org.apache.openjpa.persistence.StoreCacheImpl.evict(Class,Object)",12,17
"org.apache.openjpa.persistence.StoreCacheImpl.evictAll(Class,Object)",6,9
"org.apache.openjpa.persistence.StoreCacheImpl.evictAll(Class,Collection)",14,18
org.apache.openjpa.persistence.StoreCacheImpl.evictAll(),2,2
org.apache.openjpa.persistence.StoreCacheImpl.getStatistics(),2,6
org.apache.openjpa.persistence.StoreCacheImpl.getMetaData(Class),12,20
org.apache.openjpa.persistence.StoreCacheImpl.hashCode(),3,6
org.apache.openjpa.persistence.StoreCacheImpl.equals(Object),5,9
org.apache.openjpa.persistence.StoreCacheImpl.evict(Class),10,15
org.apache.openjpa.util.MultiLoaderClassResolver.MultiLoaderClassResolver(),3,3
org.apache.openjpa.util.MultiLoaderClassResolver.MultiLoaderClassResolver(ClassLoader[]),6,11
org.apache.openjpa.util.MultiLoaderClassResolver.addClassLoader(ClassLoader),2,8
"org.apache.openjpa.util.MultiLoaderClassResolver.getClassLoader(Class,ClassLoader)",3,7
org.apache.openjpa.jdbc.schema.AutoDriverDataSource.getConnection(Properties),22,40
org.apache.openjpa.jdbc.schema.Unique.Unique(),1,1
"org.apache.openjpa.jdbc.schema.Unique.Unique(String,Table)",8,18
"org.apache.openjpa.jdbc.schema.Unique.Unique(DBIdentifier,Table)",4,7
org.apache.openjpa.jdbc.schema.Unique.isLogical(),1,1
org.apache.openjpa.jdbc.schema.Unique.setName(String),9,16
org.apache.openjpa.jdbc.schema.Unique.setIdentifier(DBIdentifier),3,7
org.apache.openjpa.jdbc.schema.Unique.equalsUnique(Unique),11,14
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCLeafD2.getLeafD2Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCLeafD2.setLeafD2Data(String),4,10
org.apache.openjpa.persistence.detachment.model.SimpleB.getId(),0,0
org.apache.openjpa.persistence.detachment.model.SimpleB.getName(),2,3
org.apache.openjpa.persistence.detachment.model.SimpleB.setName(String),3,6
org.apache.openjpa.persistence.detachment.model.SimpleB.getParent(),2,3
org.apache.openjpa.persistence.detachment.model.SimpleB.setParent(SimpleA),3,4
org.apache.openjpa.persistence.detachment.model.SimpleB.addC(SimpleC),4,6
org.apache.openjpa.persistence.detachment.model.SimpleB.getCs(),2,3
org.apache.openjpa.persistence.detach.Entity10.Entity10(),2,2
"org.apache.openjpa.persistence.detach.Entity10.Entity10(long,String)",4,6
org.apache.openjpa.persistence.detach.Entity10.initialize(),11,26
org.apache.openjpa.persistence.detach.Entity10.getId(),0,0
org.apache.openjpa.persistence.detach.Entity10.setId(long),1,1
org.apache.openjpa.persistence.detach.Entity10.getName(),2,3
org.apache.openjpa.persistence.detach.Entity10.setName(String),3,6
org.apache.openjpa.persistence.detach.Entity10.getCollection(),2,4
org.apache.openjpa.persistence.detach.Entity10.setCollection(Collection<Entity8>),3,7
org.apache.openjpa.persistence.cache.jpa.TestCacheModeNoneDataCacheCustomized.getEntityManagerFactory(),33,93
org.apache.openjpa.persistence.cascade.Vertex.Vertex(),6,9
org.apache.openjpa.persistence.cascade.Vertex.Vertex(VertexType),4,9
org.apache.openjpa.persistence.cascade.Vertex.newEdge(Vertex),6,11
org.apache.openjpa.persistence.cascade.Vertex.getOid(),1,2
org.apache.openjpa.persistence.detach.NoVersionEntity.NoVersionEntity(int),2,2
org.apache.openjpa.persistence.detach.NoVersionEntity.getId(),0,0
org.apache.openjpa.persistence.detach.NoVersionEntity.setId(int),1,1
org.apache.openjpa.persistence.detach.NoVersionEntity.getName(),2,3
org.apache.openjpa.persistence.detach.NoVersionEntity.setName(String),3,6
org.apache.openjpa.persistence.detach.NoVersionEntity.NoVersionEntity(),2,2
org.apache.openjpa.persistence.criteria.AliasContext.getAlias(Selection<>),7,13
"org.apache.openjpa.persistence.criteria.AliasContext.registerVariable(Selection<>,Value,Value)",10,24
org.apache.openjpa.persistence.criteria.AliasContext.isRegistered(Selection<>),4,6
org.apache.openjpa.persistence.criteria.AliasContext.getRegisteredVariable(Selection<>),5,10
org.apache.openjpa.persistence.criteria.AliasContext.getRegisteredRootVariable(Root<>),5,12
org.apache.openjpa.persistence.criteria.AliasContext.getRegisteredValue(Selection<>),5,11
"org.apache.openjpa.kernel.VersionAttachStrategy.getDetachedObjectId(AttachManager,Object)",19,41
"org.apache.openjpa.kernel.VersionAttachStrategy.provideField(Object,StateManagerImpl,int)",11,17
"org.apache.openjpa.kernel.VersionAttachStrategy.attach(AttachManager,Object,ClassMetaData,PersistenceCapable,OpenJPAStateManager,ValueMetaData,boolean)",81,275
"org.apache.openjpa.kernel.VersionAttachStrategy.compareVersion(StateManagerImpl,PersistenceCapable)",54,126
"org.apache.openjpa.kernel.VersionAttachStrategy.attachFieldsInPlace(AttachManager,StateManagerImpl)",34,115
"org.apache.openjpa.kernel.VersionAttachStrategy.attachInPlace(AttachManager,StateManagerImpl,ValueMetaData,Object)",15,36
"org.apache.openjpa.kernel.VersionAttachStrategy.attachInPlace(AttachManager,StateManagerImpl,FieldMetaData,Object[])",12,25
"org.apache.openjpa.kernel.VersionAttachStrategy.attachInPlace(AttachManager,StateManagerImpl,FieldMetaData,Collection)",26,74
"org.apache.openjpa.kernel.VersionAttachStrategy.attachInPlace(AttachManager,StateManagerImpl,FieldMetaData,Map)",29,124
"org.apache.openjpa.kernel.VersionAttachStrategy.findFromDatabase(AttachManager,Object)",27,57
org.apache.openjpa.kernel.VersionAttachStrategy.isPrimaryKeysGenerated(ClassMetaData),14,22
"org.apache.openjpa.kernel.VersionAttachStrategy.isManagedByAnotherPCtx(PersistenceCapable,BrokerImpl)",9,24
"org.apache.openjpa.kernel.exps.CandidatePath.get(FieldMetaData,boolean)",13,23
org.apache.openjpa.kernel.exps.CandidatePath.getType(),10,15
org.apache.openjpa.kernel.exps.CandidatePath.getCandidateType(),6,12
org.apache.openjpa.kernel.exps.CandidatePath.setImplicitType(Class),3,4
org.apache.openjpa.kernel.exps.CandidatePath.last(),12,24
org.apache.openjpa.kernel.exps.CandidatePath.castTo(Class),7,12
"org.apache.openjpa.kernel.exps.CandidatePath.eval(Object,Object,StoreContext,Object[])",44,107
org.apache.openjpa.kernel.exps.CandidatePath.hashCode(),3,6
org.apache.openjpa.kernel.exps.CandidatePath.equals(Object),6,11
"org.apache.openjpa.kernel.exps.CandidatePath.Traversal.Traversal(FieldMetaData,boolean)",4,10
org.apache.openjpa.kernel.exps.CandidatePath.Traversal.hashCode(),3,5
org.apache.openjpa.kernel.exps.CandidatePath.Traversal.equals(Object),4,6
"org.apache.openjpa.kernel.exps.CandidatePath.get(FieldMetaData,XMLMetaData)",5,8
"org.apache.openjpa.kernel.exps.CandidatePath.get(XMLMetaData,String)",5,6
org.apache.openjpa.kernel.exps.CandidatePath.getXmlMapping(),4,5
org.apache.openjpa.kernel.exps.CandidatePath.setSchemaAlias(String),4,6
org.apache.openjpa.kernel.exps.CandidatePath.getSchemaAlias(),3,3
"org.apache.openjpa.kernel.exps.CandidatePath.setSubqueryContext(Context,String)",7,8
org.apache.openjpa.kernel.exps.CandidatePath.getCorrelationVar(),3,5
org.apache.openjpa.enhance.UnenhancedFieldAccessPrimitiveWrapper.getId(),0,0
org.apache.openjpa.enhance.UnenhancedFieldAccessPrimitiveWrapper.setStringField(String),3,6
org.apache.openjpa.enhance.UnenhancedFieldAccessPrimitiveWrapper.getStringField(),2,5
org.apache.openjpa.enhance.UnenhancedFieldAccessPrimitiveWrapper.getLazyField(),3,5
org.apache.openjpa.enhance.UnenhancedFieldAccessPrimitiveWrapper.equals(Object),8,8
org.apache.openjpa.enhance.UnenhancedFieldAccessPrimitiveWrapper.hashCode(),2,2
org.apache.openjpa.enhance.UnenhancedFieldAccessPrimitiveWrapper.clone(),4,6
org.apache.openjpa.kernel.exps.ExpressionParser.getLanguage(),6,8
"org.apache.openjpa.kernel.exps.ExpressionParser.parse(String,ExpressionStoreQuery)",9,12
"org.apache.openjpa.kernel.exps.ExpressionParser.populate(Object,ExpressionStoreQuery)",15,20
"org.apache.openjpa.kernel.exps.ExpressionParser.eval(Object,ExpressionStoreQuery,ExpressionFactory,ClassMetaData)",13,18
"org.apache.openjpa.kernel.exps.ExpressionParser.eval(String[],ExpressionStoreQuery,ExpressionFactory,ClassMetaData)",13,17
org.apache.openjpa.persistence.jdbc.annotations.TestOneToOne.setUp(),5,8
org.apache.openjpa.persistence.jdbc.annotations.TestOneToOne.testOneToOne(),14,34
org.apache.openjpa.persistence.jdbc.annotations.TestOneToOne.testSelfOneToOne(),14,34
org.apache.openjpa.persistence.jdbc.annotations.TestOneToOne.testPKJoinSelfOneToOne(),15,35
org.apache.openjpa.persistence.jdbc.annotations.TestOneToOne.testOtherTableOneToOne(),15,37
org.apache.openjpa.persistence.jdbc.annotations.TestOneToOne.testInverseOneToOne(),16,40
org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.TestExternal.TestExternal(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.TestExternal.TestExternal(String),4,4
org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.TestExternal.check(),7,9
org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.TestExternal.getValue(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.TestExternal.getValue(String),2,3
org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.EntityWithFailedExternalizer(),3,3
"org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.EntityWithFailedExternalizer(int,String,String)",10,17
org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.getIref(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.setIref(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.setName(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.getData(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.setData(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.setExt(TestExternal),4,5
org.apache.openjpa.persistence.jdbc.common.apps.EntityWithFailedExternalizer.getExt(),3,4
org.apache.openjpa.kernel.exps.QueryExpressions.setContexts(Stack<Context>),8,14
org.apache.openjpa.kernel.exps.QueryExpressions.ctx(),8,9
org.apache.openjpa.kernel.exps.QueryExpressions.isAggregate(),7,14
org.apache.openjpa.kernel.exps.QueryExpressions.isDistinct(),1,3
org.apache.openjpa.kernel.exps.QueryExpressions.getParameterizedFields(),17,21
"org.apache.openjpa.kernel.exps.QueryExpressions.putUpdate(Path,Value)",11,20
org.apache.openjpa.kernel.exps.QueryExpressions.AggregateExpressionVisitor.isAggregate(Value[]),12,21
org.apache.openjpa.kernel.exps.QueryExpressions.AggregateExpressionVisitor.enter(Value),7,12
org.apache.openjpa.kernel.exps.QueryExpressions.AggregateExpressionVisitor.exit(Value),4,6
org.apache.openjpa.kernel.exps.QueryExpressions.ParameterExpressionVisitor.enter(Value),11,18
org.apache.openjpa.kernel.exps.QueryExpressions.ParameterExpressionVisitor.collectParameterizedFields(Expression),15,23
"org.apache.openjpa.persistence.query.JPQLHelper.toJPQL(AliasContext,Object)",12,20
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party.getPartyId(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party.setPartyId(Long),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party.setArchiveStatus(String),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party.setStatus(String),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party.getStatus(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party.getArchiveStatus(),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party.setCreateDate(Date),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Party.getCreateDate(),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat2.Flat2(),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat2.Flat2(int),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat2.setBasic2(String),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat2.getBasic2(),2,3
org.apache.openjpa.persistence.query.UnaryMinusExpression.UnaryMinusExpression(Expression),6,10
org.apache.openjpa.jdbc.sql.AbstractResult.getEager(FieldMapping),6,12
"org.apache.openjpa.jdbc.sql.AbstractResult.putEager(FieldMapping,Object)",9,21
org.apache.openjpa.jdbc.sql.AbstractResult.getEagerMap(boolean),7,16
org.apache.openjpa.jdbc.sql.AbstractResult.setEagerMap(Map),5,10
org.apache.openjpa.jdbc.sql.AbstractResult.close(),9,13
org.apache.openjpa.jdbc.sql.AbstractResult.closeEagerMap(Map),11,27
org.apache.openjpa.jdbc.sql.AbstractResult.supportsRandomAccess(),6,6
org.apache.openjpa.jdbc.sql.AbstractResult.absolute(int),6,8
org.apache.openjpa.jdbc.sql.AbstractResult.absoluteInternal(int),6,8
org.apache.openjpa.jdbc.sql.AbstractResult.next(),5,6
org.apache.openjpa.jdbc.sql.AbstractResult.nextInternal(),5,5
org.apache.openjpa.jdbc.sql.AbstractResult.pushBack(),4,4
org.apache.openjpa.jdbc.sql.AbstractResult.newJoins(),3,6
org.apache.openjpa.jdbc.sql.AbstractResult.contains(Object),6,8
org.apache.openjpa.jdbc.sql.AbstractResult.containsAll(Object[]),6,8
"org.apache.openjpa.jdbc.sql.AbstractResult.contains(Column,Joins)",7,11
"org.apache.openjpa.jdbc.sql.AbstractResult.containsAll(Column[],Joins)",7,11
"org.apache.openjpa.jdbc.sql.AbstractResult.containsInternal(Object,Joins)",14,17
"org.apache.openjpa.jdbc.sql.AbstractResult.containsAllInternal(Object[],Joins)",16,28
org.apache.openjpa.jdbc.sql.AbstractResult.getBaseMapping(),9,15
org.apache.openjpa.jdbc.sql.AbstractResult.setBaseMapping(ClassMapping),3,7
org.apache.openjpa.jdbc.sql.AbstractResult.getMappedByFieldMapping(),3,8
org.apache.openjpa.jdbc.sql.AbstractResult.setMappedByFieldMapping(FieldMapping),4,13
org.apache.openjpa.jdbc.sql.AbstractResult.getMappedByValue(),3,5
org.apache.openjpa.jdbc.sql.AbstractResult.setMappedByValue(Object),4,10
org.apache.openjpa.jdbc.sql.AbstractResult.indexOf(),1,2
org.apache.openjpa.jdbc.sql.AbstractResult.setIndexOf(int),3,5
"org.apache.openjpa.jdbc.sql.AbstractResult.load(ClassMapping,JDBCStore,JDBCFetchConfiguration)",9,17
"org.apache.openjpa.jdbc.sql.AbstractResult.load(ClassMapping,JDBCStore,JDBCFetchConfiguration,Joins)",11,22
org.apache.openjpa.jdbc.sql.AbstractResult.getArray(Object),7,10
"org.apache.openjpa.jdbc.sql.AbstractResult.getArray(Column,Joins)",8,14
"org.apache.openjpa.jdbc.sql.AbstractResult.getArrayInternal(Object,Joins)",10,20
org.apache.openjpa.jdbc.sql.AbstractResult.getAsciiStream(Object),9,13
"org.apache.openjpa.jdbc.sql.AbstractResult.getAsciiStream(Column,Joins)",10,17
"org.apache.openjpa.jdbc.sql.AbstractResult.getAsciiStreamInternal(Object,Joins)",12,23
org.apache.openjpa.jdbc.sql.AbstractResult.getBigDecimal(Object),7,10
"org.apache.openjpa.jdbc.sql.AbstractResult.getBigDecimal(Column,Joins)",8,14
"org.apache.openjpa.jdbc.sql.AbstractResult.getBigDecimalInternal(Object,Joins)",13,27
org.apache.openjpa.jdbc.sql.AbstractResult.getBigInteger(Object),7,10
"org.apache.openjpa.jdbc.sql.AbstractResult.getBigInteger(Column,Joins)",8,14
"org.apache.openjpa.jdbc.sql.AbstractResult.getBigIntegerInternal(Object,Joins)",13,27
org.apache.openjpa.jdbc.sql.AbstractResult.getBinaryStream(Object),9,13
"org.apache.openjpa.jdbc.sql.AbstractResult.getBinaryStream(Column,Joins)",10,17
"org.apache.openjpa.jdbc.sql.AbstractResult.getLOBStream(JDBCStore,Object)",11,17
"org.apache.openjpa.jdbc.sql.AbstractResult.getBinaryStreamInternal(Object,Joins)",12,23
"org.apache.openjpa.jdbc.sql.AbstractResult.getLOBStreamInternal(JDBCStore,Object,Joins)",15,27
org.apache.openjpa.jdbc.sql.AbstractResult.getBlob(Object),7,10
"org.apache.openjpa.jdbc.sql.AbstractResult.getBlob(Column,Joins)",8,14
"org.apache.openjpa.jdbc.sql.AbstractResult.getBlobInternal(Object,Joins)",10,19
org.apache.openjpa.jdbc.sql.AbstractResult.getBoolean(Object),6,7
"org.apache.openjpa.jdbc.sql.AbstractResult.getBoolean(Column,Joins)",7,11
"org.apache.openjpa.jdbc.sql.AbstractResult.getBooleanInternal(Object,Joins)",12,21
org.apache.openjpa.jdbc.sql.AbstractResult.getByte(Object),6,7
"org.apache.openjpa.jdbc.sql.AbstractResult.getByte(Column,Joins)",7,11
"org.apache.openjpa.jdbc.sql.AbstractResult.getByteInternal(Object,Joins)",11,18
org.apache.openjpa.jdbc.sql.AbstractResult.getBytes(Object),7,9
"org.apache.openjpa.jdbc.sql.AbstractResult.getBytes(Column,Joins)",8,13
"org.apache.openjpa.jdbc.sql.AbstractResult.getBytesInternal(Object,Joins)",10,17
org.apache.openjpa.jdbc.sql.AbstractResult.getCalendar(Object),7,10
"org.apache.openjpa.jdbc.sql.AbstractResult.getCalendar(Column,Joins)",8,14
"org.apache.openjpa.jdbc.sql.AbstractResult.getCalendarInternal(Object,Joins)",17,35
org.apache.openjpa.jdbc.sql.AbstractResult.getChar(Object),6,7
"org.apache.openjpa.jdbc.sql.AbstractResult.getChar(Column,Joins)",7,11
"org.apache.openjpa.jdbc.sql.AbstractResult.getCharInternal(Object,Joins)",15,29
org.apache.openjpa.jdbc.sql.AbstractResult.getCharacterStream(Object),9,12
"org.apache.openjpa.jdbc.sql.AbstractResult.getCharacterStream(Column,Joins)",10,16
"org.apache.openjpa.jdbc.sql.AbstractResult.getCharacterStreamInternal(Object,Joins)",14,30
org.apache.openjpa.jdbc.sql.AbstractResult.getClob(Object),7,10
"org.apache.openjpa.jdbc.sql.AbstractResult.getClob(Column,Joins)",8,14
"org.apache.openjpa.jdbc.sql.AbstractResult.getClobInternal(Object,Joins)",10,19
org.apache.openjpa.jdbc.sql.AbstractResult.getDate(Object),7,10
"org.apache.openjpa.jdbc.sql.AbstractResult.getDate(Column,Joins)",8,14
"org.apache.openjpa.jdbc.sql.AbstractResult.getDateInternal(Object,Joins)",12,27
"org.apache.openjpa.jdbc.sql.AbstractResult.getDate(Object,Calendar)",10,15
"org.apache.openjpa.jdbc.sql.AbstractResult.getDate(Column,Calendar,Joins)",11,19
"org.apache.openjpa.jdbc.sql.AbstractResult.getDateInternal(Object,Calendar,Joins)",12,27
org.apache.openjpa.jdbc.sql.AbstractResult.getDouble(Object),6,7
"org.apache.openjpa.jdbc.sql.AbstractResult.getDouble(Column,Joins)",7,11
"org.apache.openjpa.jdbc.sql.AbstractResult.getDoubleInternal(Object,Joins)",11,18
org.apache.openjpa.jdbc.sql.AbstractResult.getFloat(Object),6,7
"org.apache.openjpa.jdbc.sql.AbstractResult.getFloat(Column,Joins)",7,11
"org.apache.openjpa.jdbc.sql.AbstractResult.getFloatInternal(Object,Joins)",11,18
org.apache.openjpa.jdbc.sql.AbstractResult.getInt(Object),6,7
"org.apache.openjpa.jdbc.sql.AbstractResult.getInt(Column,Joins)",7,11
"org.apache.openjpa.jdbc.sql.AbstractResult.getIntInternal(Object,Joins)",11,18
org.apache.openjpa.jdbc.sql.AbstractResult.getLocale(Object),7,10
"org.apache.openjpa.jdbc.sql.AbstractResult.getLocale(Column,Joins)",8,14
"org.apache.openjpa.jdbc.sql.AbstractResult.getLocaleInternal(Object,Joins)",16,45
org.apache.openjpa.jdbc.sql.AbstractResult.getLong(Object),6,7
"org.apache.openjpa.jdbc.sql.AbstractResult.getLong(Column,Joins)",7,11
"org.apache.openjpa.jdbc.sql.AbstractResult.getLongInternal(Object,Joins)",11,18
org.apache.openjpa.jdbc.sql.AbstractResult.getNumber(Object),6,7
"org.apache.openjpa.jdbc.sql.AbstractResult.getNumber(Column,Joins)",7,11
"org.apache.openjpa.jdbc.sql.AbstractResult.getNumberInternal(Object,Joins)",12,22
"org.apache.openjpa.jdbc.sql.AbstractResult.getObject(Object,int,Object)",8,16
"org.apache.openjpa.jdbc.sql.AbstractResult.getObject(Column,Object,Joins)",10,18
"org.apache.openjpa.jdbc.sql.AbstractResult.getObjectInternal(Object,int,Object,Joins)",12,16
"org.apache.openjpa.jdbc.sql.AbstractResult.getStreamInternal(JDBCStore,Object,int,Object,Joins)",12,16
"org.apache.openjpa.jdbc.sql.AbstractResult.getSQLObject(Object,Map)",7,15
"org.apache.openjpa.jdbc.sql.AbstractResult.getSQLObject(Column,Map,Joins)",9,19
"org.apache.openjpa.jdbc.sql.AbstractResult.getSQLObjectInternal(Object,Map,Joins)",10,23
"org.apache.openjpa.jdbc.sql.AbstractResult.getRef(Object,Map)",8,13
"org.apache.openjpa.jdbc.sql.AbstractResult.getRef(Column,Map,Joins)",9,17
"org.apache.openjpa.jdbc.sql.AbstractResult.getRefInternal(Object,Map,Joins)",11,22
org.apache.openjpa.jdbc.sql.AbstractResult.getShort(Object),6,7
"org.apache.openjpa.jdbc.sql.AbstractResult.getShort(Column,Joins)",7,11
"org.apache.openjpa.jdbc.sql.AbstractResult.getShortInternal(Object,Joins)",11,18
org.apache.openjpa.jdbc.sql.AbstractResult.getString(Object),11,17
"org.apache.openjpa.jdbc.sql.AbstractResult.getString(Column,Joins)",11,18
"org.apache.openjpa.jdbc.sql.AbstractResult.getStringInternal(Object,Joins,boolean)",12,24
"org.apache.openjpa.jdbc.sql.AbstractResult.getTime(Object,Calendar)",9,13
"org.apache.openjpa.jdbc.sql.AbstractResult.getTime(Column,Calendar,Joins)",10,17
"org.apache.openjpa.jdbc.sql.AbstractResult.getTimeInternal(Object,Calendar,Joins)",12,22
"org.apache.openjpa.jdbc.sql.AbstractResult.getTimestamp(Object,Calendar)",9,13
"org.apache.openjpa.jdbc.sql.AbstractResult.getTimestamp(Column,Calendar,Joins)",10,17
"org.apache.openjpa.jdbc.sql.AbstractResult.getTimestampInternal(Object,Calendar,Joins)",12,22
org.apache.openjpa.jdbc.sql.AbstractResult.wasNull(),2,2
org.apache.openjpa.jdbc.sql.AbstractResult.checkNull(Object),3,6
org.apache.openjpa.jdbc.sql.AbstractResult.setLocking(boolean),2,5
org.apache.openjpa.jdbc.sql.AbstractResult.isLocking(),1,2
org.apache.openjpa.jdbc.sql.AbstractResult.startDataRequest(Object),5,5
org.apache.openjpa.jdbc.sql.AbstractResult.endDataRequest(),2,2
"org.apache.openjpa.jdbc.sql.AbstractResult.translate(Object,Joins)",16,26
org.apache.openjpa.jdbc.sql.AbstractResult.NoOpJoins.isEmpty(),1,1
org.apache.openjpa.jdbc.sql.AbstractResult.NoOpJoins.isOuter(),1,1
"org.apache.openjpa.jdbc.sql.AbstractResult.NoOpJoins.crossJoin(Table,Table)",6,9
"org.apache.openjpa.jdbc.sql.AbstractResult.NoOpJoins.join(ForeignKey,boolean,boolean)",5,5
"org.apache.openjpa.jdbc.sql.AbstractResult.NoOpJoins.outerJoin(ForeignKey,boolean,boolean)",6,6
"org.apache.openjpa.jdbc.sql.AbstractResult.NoOpJoins.joinRelation(String,ForeignKey,ClassMapping,int,boolean,boolean)",11,11
"org.apache.openjpa.jdbc.sql.AbstractResult.NoOpJoins.outerJoinRelation(String,ForeignKey,ClassMapping,int,boolean,boolean)",12,12
org.apache.openjpa.jdbc.sql.AbstractResult.NoOpJoins.setVariable(String),5,5
org.apache.openjpa.jdbc.sql.AbstractResult.NoOpJoins.setSubselect(String),5,5
org.apache.openjpa.jdbc.sql.AbstractResult.NoOpJoins.setJoinContext(Context),4,6
org.apache.openjpa.jdbc.sql.AbstractResult.NoOpJoins.appendTo(SQLBuffer),4,4
org.apache.openjpa.jdbc.sql.AbstractResult.NoOpJoins.setCorrelatedVariable(String),6,6
org.apache.openjpa.jdbc.sql.AbstractResult.NoOpJoins.getCorrelatedVariable(),3,3
org.apache.openjpa.jdbc.sql.AbstractResult.NoOpJoins.moveJoinsToParent(),3,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiC.setStringC(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiC.getStringC(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiC.setIntC(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiC.getIntC(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiC.ID.ID(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiC.ID.ID(String),2,3
org.apache.openjpa.persistence.datacache.TestDataCacheStoreManager.setUp(),28,51
org.apache.openjpa.persistence.datacache.TestDataCacheStoreManager.tearDown(),10,11
org.apache.openjpa.persistence.datacache.TestDataCacheStoreManager.testExists(),3,4
org.apache.openjpa.persistence.datacache.TestDataCacheStoreManager.testsyncVersion(),4,5
org.apache.openjpa.persistence.callbacks.ListenerImpl.prePersist(Object),4,6
org.apache.openjpa.persistence.callbacks.ListenerImpl.postPersist(Object),4,6
org.apache.openjpa.persistence.callbacks.ListenerImpl.postLoad(Object),4,6
"org.apache.openjpa.persistence.callbacks.ListenerImpl.postLoad(int,String)",12,13
org.apache.openjpa.persistence.callbacks.ListenerImpl.postLoad(int),6,6
org.apache.openjpa.persistence.callbacks.ListenerImpl.preUpdate(Object),4,6
org.apache.openjpa.persistence.callbacks.ListenerImpl.postUpdate(Object),4,6
org.apache.openjpa.persistence.callbacks.ListenerImpl.preRemove(Object),4,6
org.apache.openjpa.persistence.callbacks.ListenerImpl.postRemove(Object),4,6
org.apache.openjpa.persistence.jdbc.common.apps.OpOrderPC.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.OpOrderPC.getRel(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.OpOrderPC.setRel(OpOrderPC),2,5
org.apache.openjpa.persistence.jdbc.common.apps.OpOrderPC.getOwner(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.OpOrderPC.setOwner(OpOrderPC),2,5
org.apache.openjpa.persistence.jdbc.common.apps.OpOrderPC.getSecondary(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.OpOrderPC.setSecondary(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.OpOrderPC.getRelList(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.OpOrderPC.getMappedRelList(),3,7
org.apache.openjpa.persistence.jdbc.common.apps.OpOrderPC.getInverseKeyRelList(),4,9
org.apache.openjpa.persistence.criteria.Movie.getId(),0,0
org.apache.openjpa.persistence.criteria.Movie.getTitle(),2,3
org.apache.openjpa.persistence.criteria.Movie.setTitle(String),3,6
org.apache.openjpa.enhance.TestPCEnhancerFindField.myMethod(),5,6
org.apache.openjpa.enhance.TestPCEnhancerFindField.testPCEnhancerFindField(),12,22
org.apache.openjpa.jdbc.meta.strats.InputStreamLobEntity.getId(),0,0
org.apache.openjpa.jdbc.meta.strats.InputStreamLobEntity.setId(int),1,1
org.apache.openjpa.jdbc.meta.strats.InputStreamLobEntity.getStream(),2,3
org.apache.openjpa.jdbc.meta.strats.InputStreamLobEntity.setStream(Object),4,6
"org.apache.openjpa.instrumentation.InstrumentationManagerImpl.initialize(OpenJPAConfiguration,PluginListValue)",18,34
org.apache.openjpa.instrumentation.InstrumentationManagerImpl.manageProvider(InstrumentationProvider),16,26
org.apache.openjpa.instrumentation.InstrumentationManagerImpl.getProviders(),7,12
"org.apache.openjpa.instrumentation.InstrumentationManagerImpl.start(InstrumentationLevel,Object)",12,27
"org.apache.openjpa.instrumentation.InstrumentationManagerImpl.stop(InstrumentationLevel,Object)",11,23
org.apache.openjpa.instrumentation.InstrumentationManagerImpl.close(),8,12
"org.apache.openjpa.jdbc.kernel.exps.Math.Math(Val,Val,String)",8,15
org.apache.openjpa.jdbc.kernel.exps.Math.getVal1(),1,3
org.apache.openjpa.jdbc.kernel.exps.Math.getVal2(),1,3
org.apache.openjpa.jdbc.kernel.exps.Math.getOperation(),2,2
org.apache.openjpa.jdbc.kernel.exps.Math.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.Math.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.Math.getType(),5,9
org.apache.openjpa.jdbc.kernel.exps.Math.setImplicitType(Class),4,6
"org.apache.openjpa.jdbc.kernel.exps.Math.initialize(Select,ExpContext,int)",10,23
"org.apache.openjpa.jdbc.kernel.exps.Math.select(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.Math.selectColumns(Select,ExpContext,ExpState,boolean)",10,26
"org.apache.openjpa.jdbc.kernel.exps.Math.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.Math.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.Math.newSQLBuffer(Select,ExpContext,ExpState)",13,27
"org.apache.openjpa.jdbc.kernel.exps.Math.load(ExpContext,ExpState,Result)",15,19
"org.apache.openjpa.jdbc.kernel.exps.Math.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",10,31
"org.apache.openjpa.jdbc.kernel.exps.Math.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.Math.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",19,36
org.apache.openjpa.jdbc.kernel.exps.Math.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.jdbc.kernel.exps.Math.getId(),2,3
org.apache.openjpa.kernel.PNonTransDeletedState.persist(StateManagerImpl),5,5
org.apache.openjpa.kernel.PNonTransDeletedState.transactional(StateManagerImpl),5,5
"org.apache.openjpa.kernel.PNonTransDeletedState.beforeRead(StateManagerImpl,int)",7,8
"org.apache.openjpa.kernel.PNonTransDeletedState.beforeNontransactionalRead(StateManagerImpl,int)",8,9
"org.apache.openjpa.kernel.PNonTransDeletedState.beforeOptimisticRead(StateManagerImpl,int)",8,9
"org.apache.openjpa.kernel.PNonTransDeletedState.beforeWrite(StateManagerImpl,int,boolean)",8,9
"org.apache.openjpa.kernel.PNonTransDeletedState.beforeOptimisticWrite(StateManagerImpl,int,boolean)",9,10
"org.apache.openjpa.kernel.PNonTransDeletedState.beforeNontransactionalWrite(StateManagerImpl,int,boolean)",9,10
org.apache.openjpa.kernel.PNonTransDeletedState.isPendingTransactional(),2,2
org.apache.openjpa.kernel.PNonTransDeletedState.isPersistent(),1,1
org.apache.openjpa.kernel.PNonTransDeletedState.isDeleted(),1,1
org.apache.openjpa.kernel.PNonTransDeletedState.isDirty(),1,1
org.apache.openjpa.kernel.PNonTransDeletedState.toString(),4,5
org.apache.openjpa.persistence.criteria.results.Producer.getId(),0,0
org.apache.openjpa.persistence.criteria.results.Producer.setId(int),1,1
org.apache.openjpa.persistence.criteria.results.Producer.getItem(),1,3
org.apache.openjpa.persistence.criteria.results.Producer.setItem(Item),2,6
org.apache.openjpa.persistence.criteria.results.Producer.getName(),2,3
org.apache.openjpa.persistence.criteria.results.Producer.setName(String),3,6
org.apache.openjpa.kernel.exps.Avg.Avg(Val),6,8
org.apache.openjpa.kernel.exps.Avg.getType(Class),1,1
"org.apache.openjpa.kernel.exps.Avg.operate(Collection,Class)",13,29
org.apache.openjpa.persistence.jdbc.kernel.TestUpdateWithSubSelect.setUp(),23,37
org.apache.openjpa.persistence.jdbc.kernel.TestUpdateWithSubSelect.testUpdateBySubSelect(),35,63
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.OrderByEntity.getId(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.OrderByEntity.setId(long),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.OrderByEntity.getString(),1,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.OrderByEntity.setString(String),2,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.OrderByEntity.getStrings(),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.OrderByEntity.getPKRels(),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.OrderByEntity.getStringRels(),4,6
org.apache.openjpa.persistence.delimited.identifiers.Car.Car(),1,1
org.apache.openjpa.persistence.delimited.identifiers.Car.Car(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.Car.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.Car.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.Car.getModel(),2,4
org.apache.openjpa.persistence.delimited.identifiers.Car.setModel(String),5,10
org.apache.openjpa.persistence.delimited.identifiers.Car.getColor(),2,4
org.apache.openjpa.persistence.delimited.identifiers.Car.setColor(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.Car.getModelYear(),2,4
org.apache.openjpa.persistence.delimited.identifiers.Car.setModelYear(String),4,10
jpa.tools.swing.QueryStatisticsModel.QueryStatisticsModel(QueryStatistics<String>),7,12
jpa.tools.swing.QueryStatisticsModel.getColumnCount(),2,2
jpa.tools.swing.QueryStatisticsModel.getRowCount(),6,7
jpa.tools.swing.QueryStatisticsModel.getColumnName(int),7,10
"jpa.tools.swing.QueryStatisticsModel.getValueAt(int,int)",12,22
jpa.tools.swing.QueryStatisticsModel.sortKeys(QueryStatistics<String>),14,26
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimIdSeqGen.setUp(),23,39
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimIdSeqGen.tearDown(),5,6
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimIdSeqGen.createEntityE(),3,5
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimIdSeqGen.testSeqGen(),14,26
org.apache.openjpa.persistence.access.EmbedId.getId(),0,0
org.apache.openjpa.persistence.access.EmbedId.setId(long),2,3
org.apache.openjpa.persistence.access.EmbedId.getCode(),2,3
org.apache.openjpa.persistence.access.EmbedId.setCode(String),3,4
org.apache.openjpa.persistence.access.EmbedId.hashCode(),2,4
org.apache.openjpa.persistence.access.EmbedId.equals(Object),6,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.Department.getDeptId(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.Department.setDeptId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.Department.getEmpMap(),4,7
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.Department.setEmpMap(Map<Integer,Employee>)",5,12
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.Department.addEmployee(Employee),4,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.Department.removeEmployee(Integer),5,8
"org.apache.openjpa.persistence.query.BinaryExpressionPredicate.BinaryExpressionPredicate(Expression,BinaryConditionalOperator,BinaryConditionalOperator,Expression)",6,14
org.apache.openjpa.persistence.query.BinaryExpressionPredicate.getOperand(),2,2
org.apache.openjpa.persistence.query.BinaryExpressionPredicate.getOperand2(),2,2
org.apache.openjpa.persistence.query.BinaryExpressionPredicate.getOperator(),3,4
org.apache.openjpa.persistence.query.BinaryExpressionPredicate.and(Predicate),1,5
org.apache.openjpa.persistence.query.BinaryExpressionPredicate.or(Predicate),1,5
org.apache.openjpa.persistence.query.BinaryExpressionPredicate.not(),8,10
org.apache.openjpa.persistence.query.BinaryExpressionPredicate.asExpression(AliasContext),7,13
"org.apache.openjpa.persistence.query.BinaryExpressionPredicate.asExpression(Visitable,AliasContext)",10,15
"org.apache.openjpa.jdbc.sql.RowManager.getRow(Table,int,OpenJPAStateManager,boolean)",14,30
"org.apache.openjpa.jdbc.sql.RowManager.getSecondaryRow(Table,int)",25,51
org.apache.openjpa.jdbc.sql.RowManager.flushSecondaryRow(Row),12,18
"org.apache.openjpa.jdbc.sql.RowManager.getAllRows(Table,int)",9,20
org.apache.openjpa.jdbc.sql.RowManager.flushAllRows(Row),6,9
"org.apache.openjpa.kernel.Broker.setImplicitBehavior(OpCallbacks,RuntimeExceptionTranslator)",26,33
org.apache.openjpa.kernel.Broker.getBrokerFactory(),3,7
org.apache.openjpa.kernel.Broker.getConnectionRetainMode(),4,7
org.apache.openjpa.kernel.Broker.getManagedRuntime(),2,6
org.apache.openjpa.kernel.Broker.getInverseManager(),2,6
org.apache.openjpa.kernel.Broker.getMultithreaded(),5,6
org.apache.openjpa.kernel.Broker.setMultithreaded(boolean),7,8
org.apache.openjpa.kernel.Broker.getIgnoreChanges(),8,9
org.apache.openjpa.kernel.Broker.setIgnoreChanges(boolean),9,11
org.apache.openjpa.kernel.Broker.getNontransactionalRead(),5,6
org.apache.openjpa.kernel.Broker.setNontransactionalRead(boolean),6,8
org.apache.openjpa.kernel.Broker.getNontransactionalWrite(),5,6
org.apache.openjpa.kernel.Broker.setNontransactionalWrite(boolean),6,8
org.apache.openjpa.kernel.Broker.getRestoreState(),4,5
org.apache.openjpa.kernel.Broker.setRestoreState(int),5,7
org.apache.openjpa.kernel.Broker.getOptimistic(),3,4
org.apache.openjpa.kernel.Broker.setOptimistic(boolean),5,6
org.apache.openjpa.kernel.Broker.getRetainState(),5,6
org.apache.openjpa.kernel.Broker.setRetainState(boolean),6,8
org.apache.openjpa.kernel.Broker.getAutoClear(),4,4
org.apache.openjpa.kernel.Broker.setAutoClear(int),5,5
org.apache.openjpa.kernel.Broker.getSyncWithManagedTransactions(),9,10
org.apache.openjpa.kernel.Broker.setSyncWithManagedTransactions(boolean),11,12
org.apache.openjpa.kernel.Broker.getAutoDetach(),12,14
org.apache.openjpa.kernel.Broker.setAutoDetach(int),13,16
"org.apache.openjpa.kernel.Broker.setAutoDetach(int,boolean)",14,16
org.apache.openjpa.kernel.Broker.getProperties(),10,14
org.apache.openjpa.kernel.Broker.getSupportedProperties(),9,14
org.apache.openjpa.kernel.Broker.isDetachedNew(),8,10
org.apache.openjpa.kernel.Broker.setDetachedNew(boolean),5,6
org.apache.openjpa.kernel.Broker.getEvictFromDataCache(),7,9
org.apache.openjpa.kernel.Broker.setEvictFromDataCache(boolean),8,11
"org.apache.openjpa.kernel.Broker.putUserObject(Object,Object)",10,17
org.apache.openjpa.kernel.Broker.getUserObject(Object),7,11
org.apache.openjpa.kernel.Broker.addTransactionListener(Object),7,10
org.apache.openjpa.kernel.Broker.removeTransactionListener(Object),6,10
org.apache.openjpa.kernel.Broker.getTransactionListeners(),8,9
org.apache.openjpa.kernel.Broker.getTransactionListenerCallbackMode(),8,11
org.apache.openjpa.kernel.Broker.setTransactionListenerCallbackMode(int),9,13
"org.apache.openjpa.kernel.Broker.addLifecycleListener(Object,Class[])",10,17
org.apache.openjpa.kernel.Broker.removeLifecycleListener(Object),6,10
org.apache.openjpa.kernel.Broker.getLifecycleEventManager(),5,11
org.apache.openjpa.kernel.Broker.getLifecycleListenerCallbackMode(),8,11
org.apache.openjpa.kernel.Broker.setLifecycleListenerCallbackMode(int),9,13
org.apache.openjpa.kernel.Broker.getCachePreparedQuery(),7,8
org.apache.openjpa.kernel.Broker.setCachePreparedQuery(boolean),16,20
org.apache.openjpa.kernel.Broker.begin(),2,3
org.apache.openjpa.kernel.Broker.commit(),3,4
org.apache.openjpa.kernel.Broker.rollback(),3,4
org.apache.openjpa.kernel.Broker.syncWithManagedTransaction(),9,13
org.apache.openjpa.kernel.Broker.commitAndResume(),20,26
org.apache.openjpa.kernel.Broker.rollbackAndResume(),20,26
org.apache.openjpa.kernel.Broker.getRollbackOnly(),4,5
org.apache.openjpa.kernel.Broker.setRollbackOnly(),5,6
org.apache.openjpa.kernel.Broker.setRollbackOnly(Throwable),8,11
org.apache.openjpa.kernel.Broker.getRollbackCause(),8,11
org.apache.openjpa.kernel.Broker.setSavepoint(String),7,10
org.apache.openjpa.kernel.Broker.rollbackToSavepoint(),7,9
org.apache.openjpa.kernel.Broker.rollbackToSavepoint(String),9,12
org.apache.openjpa.kernel.Broker.releaseSavepoint(),6,10
org.apache.openjpa.kernel.Broker.releaseSavepoint(String),8,11
org.apache.openjpa.kernel.Broker.flush(),13,14
org.apache.openjpa.kernel.Broker.preFlush(),20,22
org.apache.openjpa.kernel.Broker.validateChanges(),21,33
"org.apache.openjpa.kernel.Broker.persist(Object,OpCallbacks)",5,7
"org.apache.openjpa.kernel.Broker.persistAll(Collection,OpCallbacks)",6,7
"org.apache.openjpa.kernel.Broker.persist(Object,Object,OpCallbacks)",22,32
"org.apache.openjpa.kernel.Broker.delete(Object,OpCallbacks)",4,6
"org.apache.openjpa.kernel.Broker.deleteAll(Collection,OpCallbacks)",6,7
"org.apache.openjpa.kernel.Broker.release(Object,OpCallbacks)",7,9
"org.apache.openjpa.kernel.Broker.releaseAll(Collection,OpCallbacks)",9,10
"org.apache.openjpa.kernel.Broker.refresh(Object,OpCallbacks)",4,6
"org.apache.openjpa.kernel.Broker.refreshAll(Collection,OpCallbacks)",6,7
"org.apache.openjpa.kernel.Broker.evict(Object,OpCallbacks)",4,6
"org.apache.openjpa.kernel.Broker.evictAll(Collection,OpCallbacks)",6,7
org.apache.openjpa.kernel.Broker.evictAll(OpCallbacks),5,6
"org.apache.openjpa.kernel.Broker.evictAll(Extent,OpCallbacks)",9,13
org.apache.openjpa.kernel.Broker.detachAll(OpCallbacks),8,9
"org.apache.openjpa.kernel.Broker.detachAll(OpCallbacks,boolean)",18,27
"org.apache.openjpa.kernel.Broker.detach(Object,OpCallbacks)",9,14
"org.apache.openjpa.kernel.Broker.detachAll(Collection,OpCallbacks)",37,56
"org.apache.openjpa.kernel.Broker.attach(Object,boolean,OpCallbacks)",12,18
"org.apache.openjpa.kernel.Broker.attachAll(Collection,boolean,OpCallbacks)",20,31
org.apache.openjpa.kernel.Broker.newInstance(Class),23,40
org.apache.openjpa.kernel.Broker.isDetached(Object),12,23
"org.apache.openjpa.kernel.Broker.newExtent(Class,boolean)",6,8
"org.apache.openjpa.kernel.Broker.newQuery(String,Class,Object)",8,12
"org.apache.openjpa.kernel.Broker.newQuery(String,Object)",5,9
org.apache.openjpa.kernel.Broker.getIdentitySequence(ClassMetaData),12,17
org.apache.openjpa.kernel.Broker.getValueSequence(FieldMetaData),12,16
"org.apache.openjpa.kernel.Broker.lock(Object,int,int,OpCallbacks)",14,25
"org.apache.openjpa.kernel.Broker.lock(Object,OpCallbacks)",14,15
"org.apache.openjpa.kernel.Broker.lockAll(Collection,int,int,OpCallbacks)",16,27
"org.apache.openjpa.kernel.Broker.lockAll(Collection,OpCallbacks)",15,16
org.apache.openjpa.kernel.Broker.cancelAll(),13,17
org.apache.openjpa.kernel.Broker.dirtyType(Class),6,7
org.apache.openjpa.kernel.Broker.beginOperation(boolean),25,35
org.apache.openjpa.kernel.Broker.endOperation(),13,18
org.apache.openjpa.kernel.Broker.isClosed(),2,3
org.apache.openjpa.kernel.Broker.isCloseInvoked(),9,11
org.apache.openjpa.kernel.Broker.close(),2,3
org.apache.openjpa.kernel.Broker.assertOpen(),3,3
org.apache.openjpa.kernel.Broker.assertActiveTransaction(),3,5
org.apache.openjpa.kernel.Broker.assertNontransactionalRead(),2,2
org.apache.openjpa.kernel.Broker.assertWriteOperation(),9,11
org.apache.openjpa.jdbc.sql.TestDBDictionaryGeneratedSQL.testCreateTableLongNameException(),29,76
org.apache.openjpa.jdbc.sql.TestDBDictionaryGeneratedSQL.testThrowsExceptionWithSchemaSet(),30,83
org.apache.openjpa.jdbc.sql.TestDBDictionaryGeneratedSQL.testSchemaNameIsNotConsidered(),27,76
org.apache.openjpa.jdbc.sql.TestDBDictionaryGeneratedSQL.testOverrideProperty(),33,87
org.apache.openjpa.jdbc.sql.TestDBDictionaryGeneratedSQL.testOverridePropertyShortName(),29,81
org.apache.openjpa.kernel.Extent<T>.getFetchConfiguration(),4,8
org.apache.openjpa.kernel.Extent<T>.getIgnoreChanges(),5,7
org.apache.openjpa.kernel.Extent<T>.setIgnoreChanges(boolean),6,10
org.apache.openjpa.kernel.Extent<T>.list(),24,32
org.apache.openjpa.kernel.Extent<T>.iterator(),2,4
org.apache.openjpa.kernel.Extent<T>.getBroker(),3,5
org.apache.openjpa.kernel.Extent<T>.getElementType(),4,4
org.apache.openjpa.kernel.Extent<T>.hasSubclasses(),3,4
org.apache.openjpa.kernel.Extent<T>.closeAll(),2,3
org.apache.openjpa.kernel.Extent<T>.lock(),3,4
org.apache.openjpa.kernel.Extent<T>.unlock(),1,1
org.apache.openjpa.example.gallery.model.Creator.setId(long),1,1
org.apache.openjpa.example.gallery.model.Creator.getId(),0,0
org.apache.openjpa.example.gallery.model.Creator.setFirstName(String),3,6
org.apache.openjpa.example.gallery.model.Creator.getFirstName(),2,3
org.apache.openjpa.example.gallery.model.Creator.setLastName(String),3,6
org.apache.openjpa.example.gallery.model.Creator.getLastName(),2,3
org.apache.openjpa.example.gallery.model.Creator.setImages(List<Image>),4,7
org.apache.openjpa.example.gallery.model.Creator.getImages(),3,4
org.apache.openjpa.example.gallery.model.Creator.getAlbums(),3,4
org.apache.openjpa.example.gallery.model.Creator.setAlbums(List<Album>),4,7
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.setThrowOnPrePersist(boolean),3,5
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.setThrowOnPostPersist(boolean),3,5
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.setThrowOnPreUpdate(boolean),3,5
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.setThrowOnPostUpdate(boolean),3,5
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.setThrowOnPostLoad(boolean),3,5
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.setThrowOnPreRemove(boolean),3,5
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.setThrowOnPostRemove(boolean),3,5
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.setStringField(String),3,6
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.prePersist(),5,7
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.postPersist(),5,7
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.postLoad(),7,10
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.isInvokedFromTestMethod(),6,8
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.preUpdate(),5,7
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.postUpdate(),5,7
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.preRemove(),7,10
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.postRemove(),7,10
org.apache.openjpa.persistence.callbacks.ExceptionsFromCallbacksEntity.getId(),1,1
org.apache.openjpa.kernel.exps.Coalesce.Coalesce(Val[]),3,6
"org.apache.openjpa.kernel.exps.Coalesce.eval(Object,Object,StoreContext,Object[])",10,28
"org.apache.openjpa.kernel.exps.Coalesce.eval(Object,StoreContext,Object[])",9,24
"org.apache.openjpa.kernel.exps.Coalesce.compare(Object,Object)",4,6
org.apache.openjpa.kernel.exps.Coalesce.getVal(),1,3
org.apache.openjpa.kernel.exps.Coalesce.getType(),5,9
org.apache.openjpa.kernel.exps.Coalesce.setImplicitType(Class),3,4
org.apache.openjpa.kernel.exps.Coalesce.acceptVisit(ExpressionVisitor),8,15
org.apache.openjpa.lib.conf.Value.Value(),2,2
org.apache.openjpa.lib.conf.Value.Value(String),8,12
org.apache.openjpa.lib.conf.Value.getProperty(),9,10
org.apache.openjpa.lib.conf.Value.setProperty(String),10,13
org.apache.openjpa.lib.conf.Value.addEquivalentKey(String),12,18
org.apache.openjpa.lib.conf.Value.getEquivalentKeys(),11,21
org.apache.openjpa.lib.conf.Value.getPropertyKeys(),20,39
org.apache.openjpa.lib.conf.Value.matches(String),9,12
org.apache.openjpa.lib.conf.Value.getLoadKey(),5,8
org.apache.openjpa.lib.conf.Value.setLoadKey(String),13,33
org.apache.openjpa.lib.conf.Value.getAliases(),8,17
org.apache.openjpa.lib.conf.Value.setAliases(String[]),19,35
"org.apache.openjpa.lib.conf.Value.setAlias(String,String)",14,25
"org.apache.openjpa.lib.conf.Value.setAlias(String,String,String[])",15,46
org.apache.openjpa.lib.conf.Value.isAliasListComprehensive(),13,19
org.apache.openjpa.lib.conf.Value.setAliasListComprehensive(boolean),14,26
org.apache.openjpa.lib.conf.Value.alias(String),5,9
"org.apache.openjpa.lib.conf.Value.alias(String,String[],boolean)",11,34
org.apache.openjpa.lib.conf.Value.unalias(String),5,9
"org.apache.openjpa.lib.conf.Value.unalias(String,String[],boolean)",23,55
org.apache.openjpa.lib.conf.Value.getDefault(),4,5
org.apache.openjpa.lib.conf.Value.setDefault(String),5,8
org.apache.openjpa.lib.conf.Value.getInstantiatingGetter(),9,13
org.apache.openjpa.lib.conf.Value.setInstantiatingGetter(String),16,29
org.apache.openjpa.lib.conf.Value.getScope(),8,11
org.apache.openjpa.lib.conf.Value.setScope(Class),10,14
org.apache.openjpa.lib.conf.Value.getString(),9,15
org.apache.openjpa.lib.conf.Value.setString(String),29,63
org.apache.openjpa.lib.conf.Value.setObject(Object),24,57
org.apache.openjpa.lib.conf.Value.getOriginalValue(),8,21
org.apache.openjpa.lib.conf.Value.isDefault(Object),4,6
org.apache.openjpa.lib.conf.Value.getValueType(),5,7
org.apache.openjpa.lib.conf.Value.getInternalString(),4,7
org.apache.openjpa.lib.conf.Value.setInternalString(String),5,8
org.apache.openjpa.lib.conf.Value.setInternalObject(Object),5,8
org.apache.openjpa.lib.conf.Value.getListeners(),8,13
org.apache.openjpa.lib.conf.Value.addListener(ValueListener),7,18
org.apache.openjpa.lib.conf.Value.removeListener(ValueListener),4,9
org.apache.openjpa.lib.conf.Value.valueChanged(),9,16
org.apache.openjpa.lib.conf.Value.assertChangeable(),24,33
org.apache.openjpa.lib.conf.Value.containsReadOnlyConfigurationAsListener(),6,14
org.apache.openjpa.lib.conf.Value.setDynamic(boolean),11,14
org.apache.openjpa.lib.conf.Value.isDynamic(),9,11
org.apache.openjpa.lib.conf.Value.hashCode(),17,45
org.apache.openjpa.lib.conf.Value.equals(Object),21,50
org.apache.openjpa.lib.conf.Value.clone(),5,7
org.apache.openjpa.lib.conf.Value.isHidden(),10,13
org.apache.openjpa.lib.conf.Value.hide(),6,7
org.apache.openjpa.lib.conf.Value.isPrivate(),9,10
org.apache.openjpa.lib.conf.Value.makePrivate(),4,4
org.apache.openjpa.lib.conf.Value.get(),5,5
org.apache.openjpa.lib.conf.Value.toString(),5,6
org.apache.openjpa.persistence.jdbc.meta.TestEJBEager.TestEJBEager(String),5,6
org.apache.openjpa.persistence.jdbc.meta.TestEJBEager.setUp(),16,264
org.apache.openjpa.persistence.jdbc.meta.TestEJBEager.testOuterJoin(),16,30
org.apache.openjpa.persistence.jdbc.meta.TestEJBEager.testOuterJoinToSubclass(),17,34
org.apache.openjpa.persistence.query.Predicate.and(Predicate),7,17
org.apache.openjpa.persistence.query.Predicate.or(Predicate),7,17
org.apache.openjpa.persistence.query.Predicate.not(),1,1
org.apache.openjpa.persistence.query.SquareRootExpression.SquareRootExpression(Expression),7,8
org.apache.openjpa.persistence.criteria.TestQueryByExample.setUp(),21,38
org.apache.openjpa.persistence.criteria.TestQueryByExample.tearDown(),3,4
org.apache.openjpa.persistence.criteria.TestQueryByExample.testBasicFieldsWithNonDefaultValue(),21,37
org.apache.openjpa.persistence.criteria.TestQueryByExample.testExcludeBasicFieldWithNonDefaultValue(),22,39
org.apache.openjpa.persistence.criteria.TestQueryByExample.testBasicFieldWithDefaultValueExcludedByDefaultStyle(),24,39
org.apache.openjpa.persistence.criteria.TestQueryByExample.testBasicFieldWithDefaultValueCanBeIncludedByStyle(),26,45
org.apache.openjpa.persistence.criteria.TestQueryByExample.testRelationFieldWithNonDefaultValue(),26,59
org.apache.openjpa.persistence.criteria.TestQueryByExample.testRelationFieldWithNullValueIncluded(),33,67
org.apache.openjpa.persistence.criteria.TestQueryByExample.testEmbeddedField(),36,85
"org.apache.openjpa.persistence.criteria.TestQueryByExample.executeAndCompareSQL(CriteriaQuery<>,String)",17,24
"org.apache.openjpa.persistence.criteria.TestQueryByExample.extract(String,String)",5,11
org.apache.openjpa.jdbc.meta.JDBCColumnOrder.getColumn(),3,5
org.apache.openjpa.jdbc.meta.JDBCColumnOrder.setColumn(Column),4,8
org.apache.openjpa.jdbc.meta.JDBCColumnOrder.getColumnIO(),4,7
org.apache.openjpa.jdbc.meta.JDBCColumnOrder.setColumnIO(ColumnIO),4,6
org.apache.openjpa.jdbc.meta.JDBCColumnOrder.getName(),4,6
org.apache.openjpa.jdbc.meta.JDBCColumnOrder.getIdentifier(),3,7
org.apache.openjpa.jdbc.meta.JDBCColumnOrder.isAscending(),1,1
org.apache.openjpa.jdbc.meta.JDBCColumnOrder.getComparator(),1,2
org.apache.openjpa.jdbc.meta.JDBCColumnOrder.isInRelation(),1,1
"org.apache.openjpa.jdbc.meta.JDBCColumnOrder.order(Select,ClassMapping,Joins)",6,10
org.apache.openjpa.persistence.embed.Department2.getDeptId(),1,2
org.apache.openjpa.persistence.embed.Department2.setDeptId(int),2,5
org.apache.openjpa.persistence.embed.Department2.getEmpMap(),3,7
"org.apache.openjpa.persistence.embed.Department2.setEmpMap(Map<EmployeePK2,Employee2>)",4,12
org.apache.openjpa.persistence.embed.Department2.addEmployee(Employee2),4,9
org.apache.openjpa.lib.util.Bytes.Bytes(),4,4
"org.apache.openjpa.lib.util.Bytes.append(byte[],byte[])",8,15
org.apache.openjpa.lib.util.Bytes.toBytes(long),6,7
"org.apache.openjpa.lib.util.Bytes.toBytes(long,byte[])",9,12
org.apache.openjpa.lib.util.Bytes.toLong(byte[]),5,5
"org.apache.openjpa.lib.util.Bytes.areEqual(byte[],byte[])",8,14
"org.apache.openjpa.lib.util.Bytes.compareTo(byte[],byte[])",20,52
org.apache.openjpa.lib.util.Bytes.toShort(byte[]),5,5
org.apache.openjpa.persistence.TestOpenjpaIdNotRecognizedMessage.setUp(),4,5
org.apache.openjpa.persistence.TestOpenjpaIdNotRecognizedMessage.test428(),16,18
org.apache.openjpa.persistence.datacache.Purchase.getId(),0,0
org.apache.openjpa.persistence.datacache.Purchase.setId(int),1,1
org.apache.openjpa.persistence.datacache.Purchase.getVersion(),1,2
org.apache.openjpa.persistence.datacache.Purchase.setVersion(int),2,5
org.apache.openjpa.persistence.datacache.Purchase.getOrders(),1,1
org.apache.openjpa.persistence.datacache.Purchase.setOrders(Collection<Order>),2,2
org.apache.openjpa.lib.xml.Location.Location(),1,1
org.apache.openjpa.lib.xml.Location.Location(boolean),2,4
org.apache.openjpa.lib.xml.Location.getLocation(String),12,23
org.apache.openjpa.lib.xml.Location.getLocation(),5,7
org.apache.openjpa.lib.xml.Location.setLocator(Locator),2,6
org.apache.openjpa.lib.xml.Location.getLocator(),1,3
org.apache.openjpa.lib.xml.Location.setNullOnNoLocator(boolean),3,5
org.apache.openjpa.lib.xml.Location.isNullOnNoLocator(),1,2
org.apache.openjpa.persistence.access.FieldSub.getCreateDate(),3,5
org.apache.openjpa.persistence.access.FieldSub.setCreateDate(Date),4,8
org.apache.openjpa.persistence.access.FieldSub.equals(Object),9,29
org.apache.openjpa.persistence.criteria.MaleUser.MaleUser(),2,2
"org.apache.openjpa.persistence.criteria.MaleUser.MaleUser(String,String,Address,int,int)",8,13
org.apache.openjpa.persistence.blob.mysql.TestBlobColumnType.setUp(),34,51
org.apache.openjpa.persistence.blob.mysql.TestBlobColumnType.getCol(String),10,24
org.apache.openjpa.persistence.blob.mysql.TestBlobColumnType.testSmallLob(),12,16
org.apache.openjpa.persistence.blob.mysql.TestBlobColumnType.testMedLob(),13,18
org.apache.openjpa.persistence.blob.mysql.TestBlobColumnType.testLongBlob(),11,15
org.apache.openjpa.persistence.blob.mysql.TestBlobColumnType.testOldLob(),10,14
org.apache.openjpa.persistence.blob.mysql.TestBlobColumnType.testDefaultLob(),10,14
org.apache.openjpa.persistence.blob.mysql.TestBlobColumnType.testDefinedLob(),10,13
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectE.CacheObjectE(),2,2
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectE.CacheObjectE(String),4,4
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectE.getStr(),2,3
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectE.setStr(String),3,4
org.apache.openjpa.persistence.delimited.identifiers.Chevrolet.Chevrolet(),1,1
org.apache.openjpa.persistence.delimited.identifiers.Chevrolet.Chevrolet(int),1,1
org.apache.openjpa.persistence.util.SourceCode.SourceCode(String),10,17
org.apache.openjpa.persistence.util.SourceCode.getTopLevelClass(),5,7
org.apache.openjpa.persistence.util.SourceCode.getPackage(),1,1
org.apache.openjpa.persistence.util.SourceCode.setTabSize(int),12,14
org.apache.openjpa.persistence.util.SourceCode.addImport(ClassName),6,19
org.apache.openjpa.persistence.util.SourceCode.getOrCreateImport(String),16,41
"org.apache.openjpa.persistence.util.SourceCode.addComment(boolean,String)",17,44
org.apache.openjpa.persistence.util.SourceCode.write(PrintWriter),13,25
"org.apache.openjpa.persistence.util.SourceCode.tab(PrintWriter,int)",8,13
"org.apache.openjpa.persistence.util.SourceCode.wrap(String,int)",19,60
"org.apache.openjpa.persistence.util.SourceCode.writeList(PrintWriter,String,List<>)",7,13
"org.apache.openjpa.persistence.util.SourceCode.writeList(PrintWriter,String,List<>,Delimiter,boolean)",13,38
org.apache.openjpa.persistence.util.SourceCode.capitalize(String),5,6
org.apache.openjpa.persistence.util.SourceCode.isValidToken(String),8,8
org.apache.openjpa.persistence.util.SourceCode.isKnownType(String),4,4
org.apache.openjpa.persistence.util.SourceCode.isEmpty(String),3,3
"org.apache.openjpa.persistence.util.SourceCode.tokenize(String,String)",9,27
org.apache.openjpa.persistence.util.SourceCode.isJavaIdentifier(String),6,12
"org.apache.openjpa.persistence.util.SourceCode.Element<T>.Element(String,ClassName)",4,9
org.apache.openjpa.persistence.util.SourceCode.Element<T>.getType(),2,3
org.apache.openjpa.persistence.util.SourceCode.Element<T>.addAnnotation(String),4,8
org.apache.openjpa.persistence.util.SourceCode.Element<T>.addParameter(String),7,9
org.apache.openjpa.persistence.util.SourceCode.Element<T>.compareTo(Element<T>),3,5
"org.apache.openjpa.persistence.util.SourceCode.Element<T>.addComment(boolean,String)",7,17
org.apache.openjpa.persistence.util.SourceCode.Element<T>.makePublic(),1,2
org.apache.openjpa.persistence.util.SourceCode.Element<T>.makeProtected(),1,2
org.apache.openjpa.persistence.util.SourceCode.Element<T>.makePrivate(),1,2
org.apache.openjpa.persistence.util.SourceCode.Element<T>.makeStatic(),0,0
org.apache.openjpa.persistence.util.SourceCode.Element<T>.makeFinal(),0,0
"org.apache.openjpa.persistence.util.SourceCode.Element<T>.write(PrintWriter,int)",12,24
org.apache.openjpa.persistence.util.SourceCode.Class.Class(String),3,5
org.apache.openjpa.persistence.util.SourceCode.Class.setSuper(String),4,4
org.apache.openjpa.persistence.util.SourceCode.Class.addInterface(String),4,5
org.apache.openjpa.persistence.util.SourceCode.Class.makeAbstract(),8,8
org.apache.openjpa.persistence.util.SourceCode.Class.makeFinal(),8,8
org.apache.openjpa.persistence.util.SourceCode.Class.markAsBean(),7,10
org.apache.openjpa.persistence.util.SourceCode.Class.getName(),4,5
org.apache.openjpa.persistence.util.SourceCode.Class.getPackageName(),3,4
"org.apache.openjpa.persistence.util.SourceCode.Class.addField(String,String)",6,12
"org.apache.openjpa.persistence.util.SourceCode.Class.addField(String,ClassName)",15,33
"org.apache.openjpa.persistence.util.SourceCode.Class.addMethod(String,String)",6,12
"org.apache.openjpa.persistence.util.SourceCode.Class.addMethod(String,ClassName)",17,36
org.apache.openjpa.persistence.util.SourceCode.Class.addConstructor(),13,18
"org.apache.openjpa.persistence.util.SourceCode.Class.write(PrintWriter,int)",25,49
org.apache.openjpa.persistence.util.SourceCode.Class.toString(),3,4
"org.apache.openjpa.persistence.util.SourceCode.Field.Field(Class,String,ClassName)",5,10
org.apache.openjpa.persistence.util.SourceCode.Field.markAsBean(),9,13
org.apache.openjpa.persistence.util.SourceCode.Field.addGetter(),10,13
org.apache.openjpa.persistence.util.SourceCode.Field.addSetter(),14,22
org.apache.openjpa.persistence.util.SourceCode.Field.makeVolatile(),0,0
org.apache.openjpa.persistence.util.SourceCode.Field.makeTransient(),0,0
org.apache.openjpa.persistence.util.SourceCode.Field.toString(),4,5
"org.apache.openjpa.persistence.util.SourceCode.Field.write(PrintWriter,int)",13,20
org.apache.openjpa.persistence.util.SourceCode.Field.equals(Object),4,8
"org.apache.openjpa.persistence.util.SourceCode.Method.Method(String,String)",3,4
"org.apache.openjpa.persistence.util.SourceCode.Method.Method(String,ClassName)",4,7
"org.apache.openjpa.persistence.util.SourceCode.Method.addArgument(Argument<ClassName,String>)",7,10
"org.apache.openjpa.persistence.util.SourceCode.Method.addArgument(String,String)",8,18
org.apache.openjpa.persistence.util.SourceCode.Method.setTab(boolean),6,14
org.apache.openjpa.persistence.util.SourceCode.Method.addCodeLine(String),16,31
"org.apache.openjpa.persistence.util.SourceCode.Method.addCodeLine(String,boolean)",13,25
org.apache.openjpa.persistence.util.SourceCode.Method.makeAbstract(),8,9
org.apache.openjpa.persistence.util.SourceCode.Method.toString(),4,5
"org.apache.openjpa.persistence.util.SourceCode.Method.write(PrintWriter,int)",20,39
org.apache.openjpa.persistence.util.SourceCode.Method.equals(Object),5,11
org.apache.openjpa.persistence.util.SourceCode.Constructor.Constructor(String),3,4
"org.apache.openjpa.persistence.util.SourceCode.Constructor.addArgument(Argument<ClassName,String>)",7,10
"org.apache.openjpa.persistence.util.SourceCode.Constructor.addArgument(String,String)",8,18
org.apache.openjpa.persistence.util.SourceCode.Constructor.addCodeLine(String),12,26
"org.apache.openjpa.persistence.util.SourceCode.Constructor.addCodeLine(String,boolean)",13,25
org.apache.openjpa.persistence.util.SourceCode.Constructor.setTab(boolean),6,14
"org.apache.openjpa.persistence.util.SourceCode.Constructor.write(PrintWriter,int)",17,34
org.apache.openjpa.persistence.util.SourceCode.Import.Import(ClassName),1,4
org.apache.openjpa.persistence.util.SourceCode.Import.compareTo(Import),2,4
"org.apache.openjpa.persistence.util.SourceCode.Import.write(PrintWriter,int)",12,20
org.apache.openjpa.persistence.util.SourceCode.Import.equals(Object),3,5
org.apache.openjpa.persistence.util.SourceCode.Import.getClassName(),1,3
"org.apache.openjpa.persistence.util.SourceCode.Argument<K,V>.Argument(K,V,String)",5,11
"org.apache.openjpa.persistence.util.SourceCode.Argument<K,V>.toString()",4,5
org.apache.openjpa.persistence.util.SourceCode.Annotation.Annotation(String),3,3
"org.apache.openjpa.persistence.util.SourceCode.Annotation.addArgument(String,String,boolean)",7,16
"org.apache.openjpa.persistence.util.SourceCode.Annotation.addArgument(String,String)",5,9
"org.apache.openjpa.persistence.util.SourceCode.Annotation.addArgument(String,String[])",15,32
"org.apache.openjpa.persistence.util.SourceCode.Annotation.addArgument(Argument<K,V>)",5,8
"org.apache.openjpa.persistence.util.SourceCode.Annotation.write(PrintWriter,int)",10,15
org.apache.openjpa.persistence.util.SourceCode.Annotation.quote(String),2,5
org.apache.openjpa.persistence.util.SourceCode.Package.Package(String),2,2
"org.apache.openjpa.persistence.util.SourceCode.Package.write(PrintWriter,int)",8,10
org.apache.openjpa.persistence.util.SourceCode.Comment.append(String),5,6
org.apache.openjpa.persistence.util.SourceCode.Comment.isEmpty(),2,3
org.apache.openjpa.persistence.util.SourceCode.Comment.makeInline(boolean),2,4
"org.apache.openjpa.persistence.util.SourceCode.Comment.write(PrintWriter,int)",8,21
org.apache.openjpa.persistence.util.SourceCode.ClassName.ClassName(String),21,61
org.apache.openjpa.persistence.util.SourceCode.ClassName.getFullName(),6,8
org.apache.openjpa.persistence.util.SourceCode.ClassName.getSimpleName(),5,7
org.apache.openjpa.persistence.util.SourceCode.ClassName.getPackageName(),6,10
org.apache.openjpa.persistence.util.SourceCode.ClassName.toString(),8,14
org.apache.openjpa.persistence.util.SourceCode.ClassName.compareTo(ClassName),4,8
org.apache.openjpa.persistence.util.SourceCode.ClassName.isValidTypeName(String),7,13
org.apache.openjpa.persistence.util.SourceCode.ClassName.isValidPackageName(String),10,17
org.apache.openjpa.persistence.util.SourceCode.ClassName.isArray(String),3,4
org.apache.openjpa.persistence.util.SourceCode.ClassName.getComponentName(String),6,13
org.apache.openjpa.persistence.util.SourceCode.ClassName.hides(ClassName),4,10
org.apache.openjpa.persistence.util.SourceCode.ClassName.useFullName(),1,2
org.apache.openjpa.persistence.util.SourceCode.ClassName.usingFullName(),2,3
org.apache.openjpa.persistence.util.SourceCode.Delimiter.Delimiter(),1,1
org.apache.openjpa.persistence.util.SourceCode.Delimiter.Delimiter(String),3,5
"org.apache.openjpa.persistence.util.SourceCode.Delimiter.Delimiter(char,char)",2,4
org.apache.openjpa.lib.identifier.TestIdentifiers.testIdentifierConversion(),23,82
org.apache.openjpa.persistence.query.DomainObject.join(String),31,52
org.apache.openjpa.persistence.query.DomainObject.leftJoin(String),33,55
org.apache.openjpa.persistence.query.DomainObject.joinFetch(String),25,42
org.apache.openjpa.persistence.query.DomainObject.leftJoinFetch(String),26,44
org.apache.openjpa.persistence.query.DomainObject.value(),15,28
org.apache.openjpa.persistence.query.DomainObject.key(),15,28
org.apache.openjpa.persistence.query.DomainObject.entry(),15,29
org.apache.openjpa.persistence.query.DomainObject.index(),2,2
org.apache.openjpa.kernel.exps.Constant.getValue(Object[]),5,8
org.apache.openjpa.persistence.discriminator.fetch.Manager.getEmployees(),3,4
org.apache.openjpa.persistence.discriminator.fetch.Manager.setEmployees(Collection<Employee>),4,7
org.apache.openjpa.persistence.embed.Employee2.Employee2(),1,1
"org.apache.openjpa.persistence.embed.Employee2.Employee2(String,Date)",5,9
org.apache.openjpa.persistence.embed.Employee2.getEmpPK(),2,3
org.apache.openjpa.persistence.embed.Employee2.setEmpPK(EmployeePK2),3,6
org.apache.openjpa.persistence.embed.Employee2.getDepartment(),1,3
org.apache.openjpa.persistence.embed.Employee2.setDepartment(Department2),2,6
"org.apache.openjpa.kernel.exps.LessThanEqualExpression.LessThanEqualExpression(Val,Val)",7,12
"org.apache.openjpa.kernel.exps.LessThanEqualExpression.compare(Object,Object)",3,6
org.apache.openjpa.persistence.embed.EmployeePK2.EmployeePK2(),1,1
"org.apache.openjpa.persistence.embed.EmployeePK2.EmployeePK2(String,Date)",5,9
org.apache.openjpa.persistence.embed.EmployeePK2.equals(Object),5,11
org.apache.openjpa.persistence.embed.EmployeePK2.hashCode(),4,14
org.apache.openjpa.kernel.exps.ToLowerCase.ToLowerCase(Val),6,9
org.apache.openjpa.kernel.exps.ToLowerCase.getType(),2,2
org.apache.openjpa.kernel.exps.ToLowerCase.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.ToLowerCase.eval(Object,Object,StoreContext,Object[])",11,19
org.apache.openjpa.kernel.exps.ToLowerCase.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.persistence.embed.attrOverrides.AnnoOverEmbed.setIntEmbed(int),2,5
org.apache.openjpa.persistence.embed.attrOverrides.AnnoOverEmbed.getIntEmbed(),1,2
org.apache.openjpa.persistence.embed.attrOverrides.AnnoOverEmbed.setStrEmbed(String),4,10
org.apache.openjpa.persistence.embed.attrOverrides.AnnoOverEmbed.getStrEmbed(),3,5
org.apache.openjpa.kernel.TransferFieldManager.fetchBooleanField(int),3,4
org.apache.openjpa.kernel.TransferFieldManager.fetchByteField(int),3,4
org.apache.openjpa.kernel.TransferFieldManager.fetchCharField(int),3,4
org.apache.openjpa.kernel.TransferFieldManager.fetchDoubleField(int),3,4
org.apache.openjpa.kernel.TransferFieldManager.fetchFloatField(int),3,4
org.apache.openjpa.kernel.TransferFieldManager.fetchIntField(int),3,4
org.apache.openjpa.kernel.TransferFieldManager.fetchLongField(int),3,4
org.apache.openjpa.kernel.TransferFieldManager.fetchObjectField(int),10,16
org.apache.openjpa.kernel.TransferFieldManager.fetchShortField(int),3,4
org.apache.openjpa.kernel.TransferFieldManager.fetchStringField(int),4,7
"org.apache.openjpa.kernel.TransferFieldManager.storeBooleanField(int,boolean)",5,10
"org.apache.openjpa.kernel.TransferFieldManager.storeByteField(int,byte)",5,10
"org.apache.openjpa.kernel.TransferFieldManager.storeCharField(int,char)",5,10
"org.apache.openjpa.kernel.TransferFieldManager.storeDoubleField(int,double)",5,10
"org.apache.openjpa.kernel.TransferFieldManager.storeFloatField(int,float)",5,10
"org.apache.openjpa.kernel.TransferFieldManager.storeIntField(int,int)",5,10
"org.apache.openjpa.kernel.TransferFieldManager.storeLongField(int,long)",5,10
"org.apache.openjpa.kernel.TransferFieldManager.storeObjectField(int,Object)",6,12
"org.apache.openjpa.kernel.TransferFieldManager.storeShortField(int,short)",5,10
"org.apache.openjpa.kernel.TransferFieldManager.storeStringField(int,String)",6,12
org.apache.openjpa.kernel.TransferFieldManager.clear(),9,9
org.apache.openjpa.persistence.enhance.identity.BookId.equals(Object),5,11
org.apache.openjpa.persistence.enhance.identity.BookId.hashCode(),5,8
org.apache.openjpa.persistence.enhance.identity.BookId.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.BookId.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.BookId.getLibrary(),2,3
org.apache.openjpa.persistence.enhance.identity.BookId.setLibrary(String),3,6
org.apache.openjpa.persistence.enhance.identity.BookId.safeHash(Object),4,5
org.apache.openjpa.persistence.compat.Bi_1ToM_FK.getId(),0,0
org.apache.openjpa.persistence.compat.Bi_1ToM_FK.getName(),2,3
org.apache.openjpa.persistence.compat.Bi_1ToM_FK.setName(String),3,6
org.apache.openjpa.persistence.compat.Bi_1ToM_FK.getEntityCs(),3,5
org.apache.openjpa.persistence.compat.Bi_1ToM_FK.setEntityCs(List<EntityC_B1MFK>),4,8
org.apache.openjpa.persistence.compat.Bi_1ToM_FK.hashCode(),3,5
org.apache.openjpa.persistence.compat.Bi_1ToM_FK.equals(Object),5,16
org.apache.openjpa.persistence.arrays.model.XMLExceptionEntity.getId(),0,0
org.apache.openjpa.persistence.arrays.model.XMLExceptionEntity.setId(int),1,1
org.apache.openjpa.persistence.arrays.model.XMLExceptionEntity.getExceptions(),4,5
org.apache.openjpa.persistence.arrays.model.XMLExceptionEntity.setExceptions(ArrayList<Exception>),5,8
org.apache.openjpa.persistence.arrays.model.XMLExceptionEntity.getElemCollExceptions(),6,9
org.apache.openjpa.persistence.arrays.model.XMLExceptionEntity.setElemCollExceptions(ArrayList<String>),7,16
org.apache.openjpa.persistence.arrays.model.XMLExceptionEntity.getPersCollExceptions(),6,9
org.apache.openjpa.persistence.arrays.model.XMLExceptionEntity.setPersCollExceptions(ArrayList<Exception>),7,16
org.apache.openjpa.enhance.DynamicStorage.getFieldCount(),5,5
org.apache.openjpa.enhance.DynamicStorage.getObjectCount(),3,4
org.apache.openjpa.enhance.DynamicStorage.newInstance(),8,8
org.apache.openjpa.enhance.DynamicStorage.getBoolean(int),2,2
"org.apache.openjpa.enhance.DynamicStorage.setBoolean(int,boolean)",4,5
org.apache.openjpa.enhance.DynamicStorage.getByte(int),2,2
"org.apache.openjpa.enhance.DynamicStorage.setByte(int,byte)",4,5
org.apache.openjpa.enhance.DynamicStorage.getChar(int),2,2
"org.apache.openjpa.enhance.DynamicStorage.setChar(int,char)",4,5
org.apache.openjpa.enhance.DynamicStorage.getDouble(int),2,2
"org.apache.openjpa.enhance.DynamicStorage.setDouble(int,double)",4,5
org.apache.openjpa.enhance.DynamicStorage.getFloat(int),2,2
"org.apache.openjpa.enhance.DynamicStorage.setFloat(int,float)",4,5
org.apache.openjpa.enhance.DynamicStorage.getInt(int),2,2
"org.apache.openjpa.enhance.DynamicStorage.setInt(int,int)",4,5
org.apache.openjpa.enhance.DynamicStorage.getLong(int),2,2
"org.apache.openjpa.enhance.DynamicStorage.setLong(int,long)",4,5
org.apache.openjpa.enhance.DynamicStorage.getShort(int),2,2
"org.apache.openjpa.enhance.DynamicStorage.setShort(int,short)",4,5
org.apache.openjpa.enhance.DynamicStorage.getObject(int),3,5
"org.apache.openjpa.enhance.DynamicStorage.setObject(int,Object)",5,8
org.apache.openjpa.enhance.DynamicStorage.initialize(),4,4
org.apache.openjpa.jdbc.meta.MappingInfo.getStrategy(),4,6
org.apache.openjpa.jdbc.meta.MappingInfo.setStrategy(String),5,9
org.apache.openjpa.jdbc.meta.MappingInfo.getColumns(),8,11
org.apache.openjpa.jdbc.meta.MappingInfo.getColumns(String),9,18
org.apache.openjpa.jdbc.meta.MappingInfo.getColumns(DBIdentifier),15,36
org.apache.openjpa.jdbc.meta.MappingInfo.setColumns(List<Column>),7,10
org.apache.openjpa.jdbc.meta.MappingInfo.getIndex(),3,5
org.apache.openjpa.jdbc.meta.MappingInfo.setIndex(Index),4,8
org.apache.openjpa.jdbc.meta.MappingInfo.canIndex(),7,7
org.apache.openjpa.jdbc.meta.MappingInfo.setCanIndex(boolean),8,10
org.apache.openjpa.jdbc.meta.MappingInfo.isImplicitRelation(),13,18
org.apache.openjpa.jdbc.meta.MappingInfo.setImplicitRelation(boolean),26,33
org.apache.openjpa.jdbc.meta.MappingInfo.getForeignKey(),4,8
org.apache.openjpa.jdbc.meta.MappingInfo.setForeignKey(ForeignKey),8,15
org.apache.openjpa.jdbc.meta.MappingInfo.canForeignKey(),6,8
org.apache.openjpa.jdbc.meta.MappingInfo.setCanForeignKey(boolean),8,11
org.apache.openjpa.jdbc.meta.MappingInfo.getUnique(),5,7
org.apache.openjpa.jdbc.meta.MappingInfo.setUnique(Unique),6,10
org.apache.openjpa.jdbc.meta.MappingInfo.canUnique(),7,8
org.apache.openjpa.jdbc.meta.MappingInfo.setCanUnique(boolean),9,11
org.apache.openjpa.jdbc.meta.MappingInfo.getColumnIO(),14,28
org.apache.openjpa.jdbc.meta.MappingInfo.setColumnIO(ColumnIO),14,29
org.apache.openjpa.jdbc.meta.MappingInfo.getJoinDirection(),20,28
org.apache.openjpa.jdbc.meta.MappingInfo.setJoinDirection(int),20,31
org.apache.openjpa.jdbc.meta.MappingInfo.clear(),2,2
org.apache.openjpa.jdbc.meta.MappingInfo.clear(boolean),14,21
org.apache.openjpa.jdbc.meta.MappingInfo.copy(MappingInfo),24,86
org.apache.openjpa.jdbc.meta.MappingInfo.hasSchemaComponents(),13,17
"org.apache.openjpa.jdbc.meta.MappingInfo.assertNoSchemaComponents(MetaDataContext,boolean)",25,45
"org.apache.openjpa.jdbc.meta.MappingInfo.assertStrategy(MetaDataContext,Object,Object,boolean)",21,65
"org.apache.openjpa.jdbc.meta.MappingInfo.assertNoIndex(MetaDataContext,boolean)",16,26
"org.apache.openjpa.jdbc.meta.MappingInfo.assertNoUnique(MetaDataContext,boolean)",17,27
"org.apache.openjpa.jdbc.meta.MappingInfo.assertNoForeignKey(MetaDataContext,boolean)",19,32
"org.apache.openjpa.jdbc.meta.MappingInfo.assertNoJoin(MetaDataContext,boolean)",20,40
"org.apache.openjpa.jdbc.meta.MappingInfo.createTable(MetaDataContext,TableDefaults,String,String,boolean)",19,51
"org.apache.openjpa.jdbc.meta.MappingInfo.createTable(MetaDataContext,TableDefaults,DBIdentifier,DBIdentifier,boolean)",37,149
"org.apache.openjpa.jdbc.meta.MappingInfo.createColumns(MetaDataContext,String,Column[],Table,boolean)",58,163
"org.apache.openjpa.jdbc.meta.MappingInfo.canMerge(List<Column>,Column[],boolean,boolean)",9,13
"org.apache.openjpa.jdbc.meta.MappingInfo.setIOFromColumnFlags(Column,int)",13,45
"org.apache.openjpa.jdbc.meta.MappingInfo.assertTable(MetaDataContext,Table)",7,15
"org.apache.openjpa.jdbc.meta.MappingInfo.mergeColumn(MetaDataContext,String,Column,boolean,Column,Table,boolean,boolean)",135,637
"org.apache.openjpa.jdbc.meta.MappingInfo.findTable(MetaDataContext,DBIdentifier,Table,Table,ClassMapping)",35,106
"org.apache.openjpa.jdbc.meta.MappingInfo.isTableName(DBIdentifier,Table)",5,19
"org.apache.openjpa.jdbc.meta.MappingInfo.createIndex(MetaDataContext,String,Index,Column[],boolean)",62,215
"org.apache.openjpa.jdbc.meta.MappingInfo.createUnique(MetaDataContext,String,Unique,Column[],boolean)",68,253
"org.apache.openjpa.jdbc.meta.MappingInfo.createForeignKey(MetaDataContext,String,List<Column>,ForeignKeyDefaults,Table,ClassMapping,ClassMapping,boolean,boolean)",102,552
"org.apache.openjpa.jdbc.meta.MappingInfo.setIOFromJoins(ForeignKey,Object[][])",21,45
"org.apache.openjpa.jdbc.meta.MappingInfo.createJoins(MetaDataContext,String,Table,ClassMapping,ClassMapping,List<Column>,ForeignKeyDefaults,boolean,boolean)",82,250
"org.apache.openjpa.jdbc.meta.MappingInfo.mergeJoinColumn(MetaDataContext,String,Column,Object[][],int,Table,ClassMapping,ClassMapping,ForeignKeyDefaults,boolean,boolean,boolean)",125,856
"org.apache.openjpa.jdbc.meta.MappingInfo.findClassMapping(MetaDataContext,String,ClassMapping,ClassMapping)",20,61
"org.apache.openjpa.jdbc.meta.MappingInfo.isClassMappingName(String,ClassMapping)",10,29
"org.apache.openjpa.jdbc.meta.MappingInfo.syncColumns(MetaDataContext,Column[],boolean)",26,64
"org.apache.openjpa.jdbc.meta.MappingInfo.setColumnFlagsFromIO(Column,int)",9,22
"org.apache.openjpa.jdbc.meta.MappingInfo.syncIndex(MetaDataContext,Index)",16,40
"org.apache.openjpa.jdbc.meta.MappingInfo.syncUnique(MetaDataContext,Unique)",15,30
"org.apache.openjpa.jdbc.meta.MappingInfo.syncForeignKey(MetaDataContext,ForeignKey,Table,Table)",44,166
"org.apache.openjpa.jdbc.meta.MappingInfo.syncColumn(MetaDataContext,Column,int,boolean,Table,Table,Object,boolean)",71,361
org.apache.openjpa.jdbc.meta.MappingInfo.isForeignKey(Column),11,28
org.apache.openjpa.jdbc.meta.MappingInfo.isPrimitive(int),6,23
"org.apache.openjpa.jdbc.meta.MappingInfo.defaultTarget(Column,Column,int)",17,43
org.apache.openjpa.jdbc.meta.MappingInfo.TableDefaults.get(Schema),5,6
org.apache.openjpa.jdbc.meta.MappingInfo.TableDefaults.getIdentifier(Schema),2,4
"org.apache.openjpa.jdbc.meta.MappingInfo.ForeignKeyDefaults.get(Table,Table,boolean)",16,27
"org.apache.openjpa.jdbc.meta.MappingInfo.ForeignKeyDefaults.populate(Table,Table,Column,Object,boolean,int,int)",18,34
org.apache.openjpa.trader.domain.Stock.Stock(),9,9
"org.apache.openjpa.trader.domain.Stock.Stock(String,String,Sector,double)",6,18
org.apache.openjpa.trader.domain.Stock.getSymbol(),2,3
org.apache.openjpa.trader.domain.Stock.getCompany(),2,3
org.apache.openjpa.trader.domain.Stock.getSector(),1,3
org.apache.openjpa.trader.domain.Stock.getMarketPrice(),2,3
org.apache.openjpa.trader.domain.Stock.setMarketPrice(double),3,8
org.apache.openjpa.trader.domain.Stock.getLastPrice(),1,2
org.apache.openjpa.trader.domain.Stock.hashCode(),5,12
org.apache.openjpa.trader.domain.Stock.equals(Object),5,14
org.apache.openjpa.event.AbstractLifecycleListener.eventOccurred(LifecycleEvent),6,10
org.apache.openjpa.event.AbstractLifecycleListener.beforePersist(LifecycleEvent),4,7
org.apache.openjpa.event.AbstractLifecycleListener.afterPersist(LifecycleEvent),4,7
org.apache.openjpa.event.AbstractLifecycleListener.beforeClear(LifecycleEvent),3,6
org.apache.openjpa.event.AbstractLifecycleListener.afterClear(LifecycleEvent),3,6
org.apache.openjpa.event.AbstractLifecycleListener.afterLoad(LifecycleEvent),4,7
org.apache.openjpa.event.AbstractLifecycleListener.beforeDelete(LifecycleEvent),4,7
org.apache.openjpa.event.AbstractLifecycleListener.afterDelete(LifecycleEvent),4,7
org.apache.openjpa.event.AbstractLifecycleListener.beforeStore(LifecycleEvent),4,7
org.apache.openjpa.event.AbstractLifecycleListener.afterStore(LifecycleEvent),4,7
org.apache.openjpa.event.AbstractLifecycleListener.beforeDirty(LifecycleEvent),4,7
org.apache.openjpa.event.AbstractLifecycleListener.afterDirty(LifecycleEvent),4,7
org.apache.openjpa.event.AbstractLifecycleListener.beforeDirtyFlushed(LifecycleEvent),5,8
org.apache.openjpa.event.AbstractLifecycleListener.afterDirtyFlushed(LifecycleEvent),5,8
org.apache.openjpa.event.AbstractLifecycleListener.afterRefresh(LifecycleEvent),4,7
org.apache.openjpa.event.AbstractLifecycleListener.beforeDetach(LifecycleEvent),4,7
org.apache.openjpa.event.AbstractLifecycleListener.afterDetach(LifecycleEvent),4,7
org.apache.openjpa.event.AbstractLifecycleListener.beforeAttach(LifecycleEvent),4,7
org.apache.openjpa.event.AbstractLifecycleListener.afterAttach(LifecycleEvent),4,7
org.apache.openjpa.audit.AuditedEntry.AuditedEntry(Audited),43,84
org.apache.openjpa.audit.AuditedEntry.getAudited(),2,3
org.apache.openjpa.audit.AuditedEntry.getOperation(),2,4
org.apache.openjpa.audit.AuditedEntry.getTimestamp(),1,2
org.apache.openjpa.audit.AuditedEntry.getId(),0,0
org.apache.openjpa.audit.AuditedEntry.getUpdatedFields(),4,6
org.apache.openjpa.persistence.cascade.TestCascadePersist.setUp(),11,12
org.apache.openjpa.persistence.cascade.TestCascadePersist.testCascadePersistToDetachedFailure(),31,76
org.apache.openjpa.persistence.cascade.TestCascadePersist.testCascadePersistToManagedEntity(),22,50
org.apache.openjpa.persistence.delimited.identifiers.Cat.Cat(),1,1
org.apache.openjpa.persistence.delimited.identifiers.Cat.Cat(int),1,1
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed.getEmbed(),1,4
org.apache.openjpa.persistence.embed.EntityA_Embed_Embed.setEmbed(Embed_Embed),2,7
org.apache.openjpa.persistence.cascade.CascadePersistEntity.CascadePersistEntity(),3,3
org.apache.openjpa.persistence.cascade.CascadePersistEntity.CascadePersistEntity(long),3,3
org.apache.openjpa.persistence.cascade.CascadePersistEntity.getStringField(),2,5
org.apache.openjpa.persistence.cascade.CascadePersistEntity.setStringField(String),3,10
org.apache.openjpa.persistence.cascade.CascadePersistEntity.getId(),0,0
org.apache.openjpa.persistence.cascade.CascadePersistEntity.setId(long),1,1
org.apache.openjpa.persistence.cascade.CascadePersistEntity.getOther(),3,3
org.apache.openjpa.persistence.cascade.CascadePersistEntity.setOther(CascadePersistEntity),4,4
org.apache.openjpa.conf.MetaDataRepositoryValue.MetaDataRepositoryValue(),9,20
"org.apache.openjpa.conf.MetaDataRepositoryValue.instantiate(Class,Configuration,boolean)",31,56
org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.testCacheMarshallerEndToEnd(),48,124
"org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.assertContains(List<String>,String)",10,18
org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.isTraceEnabled(),2,2
org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.isInfoEnabled(),2,2
org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.isWarnEnabled(),2,2
org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.isErrorEnabled(),5,5
org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.isFatalEnabled(),5,5
org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.trace(Object),5,5
"org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.trace(Object,Throwable)",6,6
org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.info(Object),5,5
"org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.info(Object,Throwable)",6,6
org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.warn(Object),5,5
"org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.warn(Object,Throwable)",6,6
org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.error(Object),5,5
"org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.error(Object,Throwable)",6,6
org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.fatal(Object),5,5
"org.apache.openjpa.conf.TestCacheMarshallerEndToEnd.LogImpl.fatal(Object,Throwable)",6,6
"org.apache.openjpa.kernel.exps.AndExpression.AndExpression(Exp,Exp)",6,13
org.apache.openjpa.kernel.exps.AndExpression.getExpression1(),2,3
org.apache.openjpa.kernel.exps.AndExpression.getExpression2(),2,3
"org.apache.openjpa.kernel.exps.AndExpression.eval(Object,Object,StoreContext,Object[])",10,22
"org.apache.openjpa.kernel.exps.AndExpression.eval(Collection,StoreContext,Object[])",10,18
org.apache.openjpa.kernel.exps.AndExpression.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.kernel.exps.Expression.acceptVisit(ExpressionVisitor),5,9
org.apache.openjpa.kernel.exps.Parameter.setIndex(int),3,6
org.apache.openjpa.kernel.exps.Parameter.getParameterKey(),4,6
org.apache.openjpa.jdbc.sql.DerbyDictionary.DerbyDictionary(),207,321
org.apache.openjpa.jdbc.sql.DerbyDictionary.connectedConfiguration(Connection),12,18
"org.apache.openjpa.jdbc.sql.DerbyDictionary.appendSelectRange(SQLBuffer,long,long,boolean)",40,122
org.apache.openjpa.jdbc.sql.DerbyDictionary.closeDataSource(DataSource),38,68
"org.apache.openjpa.jdbc.sql.DerbyDictionary.isFatalException(int,SQLException)",9,22
"org.apache.openjpa.jdbc.sql.DerbyDictionary.applyRange(Select,int)",12,28
org.apache.openjpa.persistence.event.TestEvents.TestEvents(String),4,4
org.apache.openjpa.persistence.event.TestEvents.setUp(),8,11
org.apache.openjpa.persistence.event.TestEvents.testCommit(),21,64
org.apache.openjpa.persistence.event.TestEvents.testRollback(),20,58
org.apache.openjpa.persistence.event.TestEvents.testObjectChanges(),26,67
org.apache.openjpa.persistence.event.TestEvents.testIgnoreCallbackModeExceptionConsumed(),29,84
org.apache.openjpa.persistence.event.TestEvents.testExceptionCausesRollback(),36,86
org.apache.openjpa.persistence.event.TestEvents.testExceptionAfterCommitThrown(),35,86
org.apache.openjpa.persistence.event.TestEvents.TransactionEventListenerTestImpl.afterBegin(TransactionEvent),5,6
org.apache.openjpa.persistence.event.TestEvents.TransactionEventListenerTestImpl.beforeFlush(TransactionEvent),3,4
org.apache.openjpa.persistence.event.TestEvents.TransactionEventListenerTestImpl.afterFlush(TransactionEvent),3,4
org.apache.openjpa.persistence.event.TestEvents.TransactionEventListenerTestImpl.beforeCommit(TransactionEvent),11,16
org.apache.openjpa.persistence.event.TestEvents.TransactionEventListenerTestImpl.afterCommit(TransactionEvent),8,11
org.apache.openjpa.persistence.event.TestEvents.TransactionEventListenerTestImpl.afterRollback(TransactionEvent),5,6
org.apache.openjpa.persistence.event.TestEvents.TransactionEventListenerTestImpl.afterStateTransitions(TransactionEvent),3,4
org.apache.openjpa.persistence.event.TestEvents.TransactionEventListenerTestImpl.afterCommitComplete(TransactionEvent),4,5
org.apache.openjpa.persistence.event.TestEvents.TransactionEventListenerTestImpl.afterRollbackComplete(TransactionEvent),4,5
org.apache.openjpa.persistence.embed.Embed.getIntVal1(),1,2
org.apache.openjpa.persistence.embed.Embed.setIntVal1(int),2,5
org.apache.openjpa.persistence.embed.Embed.getIntVal2(),1,2
org.apache.openjpa.persistence.embed.Embed.setIntVal2(int),2,5
org.apache.openjpa.persistence.embed.Embed.getIntVal3(),1,2
org.apache.openjpa.persistence.embed.Embed.setIntVal3(int),2,5
org.apache.openjpa.instrumentation.DataCacheInstrument.getReadCount(String),7,8
org.apache.openjpa.instrumentation.DataCacheInstrument.getHitCount(String),10,10
org.apache.openjpa.instrumentation.DataCacheInstrument.getWriteCount(String),7,8
org.apache.openjpa.instrumentation.DataCacheInstrument.getTotalReadCount(String),7,9
org.apache.openjpa.instrumentation.DataCacheInstrument.getTotalHitCount(String),10,11
org.apache.openjpa.instrumentation.DataCacheInstrument.getTotalWriteCount(String),7,9
org.apache.openjpa.instrumentation.DataCacheInstrument.getCacheName(),4,6
org.apache.openjpa.instrumentation.DataCacheInstrument.getHitCount(),6,8
org.apache.openjpa.instrumentation.DataCacheInstrument.getReadCount(),6,8
org.apache.openjpa.instrumentation.DataCacheInstrument.getTotalHitCount(),6,7
org.apache.openjpa.instrumentation.DataCacheInstrument.getTotalReadCount(),6,7
org.apache.openjpa.instrumentation.DataCacheInstrument.getTotalWriteCount(),6,7
org.apache.openjpa.instrumentation.DataCacheInstrument.getWriteCount(),6,8
org.apache.openjpa.instrumentation.DataCacheInstrument.reset(),4,4
org.apache.openjpa.instrumentation.DataCacheInstrument.sinceDate(),6,8
org.apache.openjpa.instrumentation.DataCacheInstrument.startDate(),7,9
org.apache.openjpa.instrumentation.DataCacheInstrument.listKnownTypes(),10,10
org.apache.openjpa.instrumentation.DataCacheInstrument.getStatisticsEnabled(),7,8
org.apache.openjpa.instrumentation.DataCacheInstrument.collectStatistics(boolean),8,12
"org.apache.openjpa.instrumentation.DataCacheInstrument.cache(String,boolean)",8,10
org.apache.openjpa.instrumentation.DataCacheInstrument.getCacheStatistics(),11,16
org.apache.openjpa.instrumentation.DataCacheInstrument.clear(),3,4
"org.apache.openjpa.integration.daytrader.TradeBuildDB.TradeBuildDB(Log,TradeAction)",24,38
"org.apache.openjpa.integration.daytrader.TradeBuildDB.setup(int,int)",5,9
org.apache.openjpa.integration.daytrader.TradeBuildDB.createQuotes(int),26,56
org.apache.openjpa.integration.daytrader.TradeBuildDB.createAccounts(int),47,150
"org.apache.openjpa.persistence.common.utils.Bug.Bug(int,Throwable,String)",16,26
"org.apache.openjpa.persistence.common.utils.Bug.bug(int,Throwable,String)",5,9
org.apache.openjpa.persistence.common.utils.Bug.printStackTrace(PrintWriter),8,17
org.apache.openjpa.persistence.common.utils.Bug.printStackTrace(PrintStream),8,17
org.apache.openjpa.persistence.common.utils.Bug.getMessage(),5,6
org.apache.openjpa.persistence.common.utils.Bug.getTrackingId(),1,2
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreaded.setUp(),26,46
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreaded.tearDown(),2,3
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreaded.testAllIdsAreUsed(),16,33
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreaded.WorkerThread.WorkerThread(OpenJPAEntityManagerFactorySPI),14,15
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreaded.WorkerThread.run(),41,83
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreaded.WorkerThread.getLast(),1,1
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreaded.WorkerThread.getFirst(),1,1
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreaded.WorkerThread.getCount(),1,2
org.apache.openjpa.integration.validation.ConstraintDigits.createInvalidTwoDigits(),10,23
org.apache.openjpa.integration.validation.ConstraintDigits.createInvalidFiveDigits(),7,18
org.apache.openjpa.integration.validation.ConstraintDigits.createInvalidDigits(),7,18
org.apache.openjpa.integration.validation.ConstraintDigits.createValid(),14,22
org.apache.openjpa.integration.validation.ConstraintDigits.ConstraintDigits(),5,5
org.apache.openjpa.integration.validation.ConstraintDigits.getId(),0,0
org.apache.openjpa.integration.validation.ConstraintDigits.getTwoDigits(),2,3
org.apache.openjpa.integration.validation.ConstraintDigits.setTwoDigits(BigDecimal),3,4
org.apache.openjpa.integration.validation.ConstraintDigits.setTwoDigits(String),4,5
org.apache.openjpa.integration.validation.ConstraintDigits.getFiveDigits(),3,5
org.apache.openjpa.integration.validation.ConstraintDigits.setFiveDigits(BigDecimal),4,6
org.apache.openjpa.integration.validation.ConstraintDigits.setFiveDigits(String),5,7
org.apache.openjpa.integration.validation.ConstraintDigits.toBigDecimal(String),5,7
org.apache.openjpa.persistence.inheritance.TestJoinTableStrategy.setUp(),17,59
org.apache.openjpa.persistence.inheritance.TestJoinTableStrategy.testFindEntity(),6,11
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCRootEntity.getRootEntityData(),4,7
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCRootEntity.setRootEntityData(String),5,14
"org.apache.openjpa.persistence.graph.RelationGraph<E>.link(V1,V2)",20,47
"org.apache.openjpa.persistence.graph.RelationGraph<E>.delink(V1,V2)",15,21
"org.apache.openjpa.persistence.graph.RelationGraph<E>.getRelation(V1,V2)",11,23
org.apache.openjpa.persistence.graph.RelationGraph<E>.iterator(),3,7
org.apache.openjpa.persistence.graph.RelationGraph<E>.size(),1,1
org.apache.openjpa.persistence.graph.RelationGraph<E>.getRelationsFrom(V),8,17
org.apache.openjpa.persistence.graph.RelationGraph<E>.getRelationsTo(V),7,17
org.apache.openjpa.persistence.graph.RelationGraph<E>.getSources(Object),10,18
org.apache.openjpa.persistence.graph.RelationGraph<E>.getTargets(Object),10,18
org.apache.openjpa.persistence.graph.RelationGraph<E>.getNodes(),8,12
org.apache.openjpa.persistence.graph.RelationGraph<E>.add(E),5,6
org.apache.openjpa.persistence.identity.TestBooleanId.setUp(),7,9
org.apache.openjpa.persistence.identity.TestBooleanId.tearDown(),3,4
org.apache.openjpa.persistence.identity.TestBooleanId.testSimpleBooleanIdEntity(),13,21
org.apache.openjpa.persistence.identity.TestBooleanId.testCompoundIdEntity(),12,36
"org.apache.openjpa.persistence.identity.TestBooleanId.testCompoundIdEntity(String,boolean,boolean)",15,45
org.apache.openjpa.persistence.identity.TestBooleanId.createCompoundIdEntityWithoutBoolean(String),10,33
org.apache.openjpa.persistence.inheritance.jointable.Person.Person(),1,1
org.apache.openjpa.persistence.inheritance.jointable.Person.setName(String),3,6
org.apache.openjpa.persistence.inheritance.jointable.Person.getName(),2,3
org.apache.openjpa.persistence.inheritance.jointable.Person.getOID(),1,2
org.apache.openjpa.persistence.inheritance.jointable.Person.setOID(long),2,5
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.AbstractTestCase(String,String)",8,14
org.apache.openjpa.persistence.common.utils.AbstractTestCase.setUp(Object),15,23
org.apache.openjpa.persistence.common.utils.AbstractTestCase.tearDown(),15,24
org.apache.openjpa.persistence.common.utils.AbstractTestCase.AbstractTestCase(),1,1
org.apache.openjpa.persistence.common.utils.AbstractTestCase.AbstractTestCase(String),4,6
org.apache.openjpa.persistence.common.utils.AbstractTestCase.computePersistenceXmlResource(String),13,31
org.apache.openjpa.persistence.common.utils.AbstractTestCase.defaultPersistenceXmlResource(),11,14
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.getStateManager(Object,EntityManager)",8,13
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.deleteAll(Class,EntityManager)",14,22
org.apache.openjpa.persistence.common.utils.AbstractTestCase.deleteAll(Class),12,20
org.apache.openjpa.persistence.common.utils.AbstractTestCase.getEmf(Map),48,126
org.apache.openjpa.persistence.common.utils.AbstractTestCase.addProperties(Map),17,26
org.apache.openjpa.persistence.common.utils.AbstractTestCase.getEmf(),11,15
org.apache.openjpa.persistence.common.utils.AbstractTestCase.getBrokerFactory(),6,10
org.apache.openjpa.persistence.common.utils.AbstractTestCase.getBrokerFactory(String[]),18,31
org.apache.openjpa.persistence.common.utils.AbstractTestCase.currentEntityManager(),6,22
org.apache.openjpa.persistence.common.utils.AbstractTestCase.startTx(EntityManager),5,5
org.apache.openjpa.persistence.common.utils.AbstractTestCase.isActiveTx(EntityManager),4,5
org.apache.openjpa.persistence.common.utils.AbstractTestCase.endTx(EntityManager),6,10
org.apache.openjpa.persistence.common.utils.AbstractTestCase.rollbackTx(EntityManager),4,5
org.apache.openjpa.persistence.common.utils.AbstractTestCase.endEm(EntityManager),4,9
org.apache.openjpa.persistence.common.utils.AbstractTestCase.getStackTrace(Throwable),7,7
org.apache.openjpa.persistence.common.utils.AbstractTestCase.getConfiguration(),3,5
org.apache.openjpa.persistence.common.utils.AbstractTestCase.getCurrentPlatform(),5,6
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.bug(int,String)",2,3
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.bug(Platform,int,Throwable,String)",5,8
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.bug(EnumSet<Platform>,int,Throwable,String)",12,20
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.bug(int,Throwable,String)",6,10
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomInt(),8,13
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomChar(),9,17
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomLong(),7,9
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomShort(),7,9
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomDouble(),6,9
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomFloat(),6,9
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomByte(),7,9
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomBoolean(),5,7
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomDate(),19,29
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomString(),10,17
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomString(int),10,22
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomClob(),10,21
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomBigInteger(),16,39
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomBigDecimal(),18,56
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomBlob(),8,17
org.apache.openjpa.persistence.common.utils.AbstractTestCase.randomizeBean(Object),38,138
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.assertSize(int,Collection)",3,6
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.assertSize(int,Query)",5,8
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.roundtrip(Object,boolean)",25,73
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.matches(String,String)",12,18
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.assertMatches(String,String)",13,21
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.assertNotMatches(String,String)",12,20
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.matches(String,Collection)",16,32
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.assertMatches(String,Collection)",19,37
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.assertNotMatches(String,Collection)",23,44
org.apache.openjpa.persistence.common.utils.AbstractTestCase.getLog(),3,5
org.apache.openjpa.persistence.common.utils.AbstractTestCase.mttest(),16,23
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.mttest(int,int)",8,17
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.mttest(int,int,int)",12,21
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.mttest(int,int,String,Object[])",33,58
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.mttest(int,int,int,String,Object[])",29,69
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.mttest(int,int,int,String,Object[]).$1.run()",6,6
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.mttest(String,int,int,VolatileRunnable)",9,14
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.mttest(String,int,int,int,VolatileRunnable)",63,142
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.mttest(String,int,int,int,VolatileRunnable).$2.run()",30,50
org.apache.openjpa.persistence.common.utils.AbstractTestCase.isRootThread(),9,10
org.apache.openjpa.persistence.common.utils.AbstractTestCase.VolatileRunnable.run(),2,2
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.ThreadingException.ThreadingException(String,Throwable)",6,13
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.ThreadingException.ThreadingException(String,Throwable[])",6,12
org.apache.openjpa.persistence.common.utils.AbstractTestCase.ThreadingException.printStackTrace(),4,7
org.apache.openjpa.persistence.common.utils.AbstractTestCase.ThreadingException.printStackTrace(PrintStream),5,10
org.apache.openjpa.persistence.common.utils.AbstractTestCase.ThreadingException.printStackTrace(PrintWriter),7,17
org.apache.openjpa.persistence.common.utils.AbstractTestCase.callingMethod(String),43,107
org.apache.openjpa.persistence.common.utils.AbstractTestCase.sleepRandom(),6,10
org.apache.openjpa.persistence.common.utils.AbstractTestCase.sleepRandom(int),11,21
org.apache.openjpa.persistence.common.utils.AbstractTestCase.timeout(long),42,67
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.timeout(long,String)",40,101
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.timeout(long,String).$3.run()",7,8
org.apache.openjpa.persistence.common.utils.AbstractTestCase.TimeOutThread.TimeOutThread(String),6,7
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.OperationTimedOutException.OperationTimedOutException(String,Throwable)",7,10
org.apache.openjpa.persistence.common.utils.AbstractTestCase.OperationTimedOutException.printStackTrace(),4,7
org.apache.openjpa.persistence.common.utils.AbstractTestCase.OperationTimedOutException.printStackTrace(PrintStream),5,10
org.apache.openjpa.persistence.common.utils.AbstractTestCase.OperationTimedOutException.printStackTrace(PrintWriter),7,16
org.apache.openjpa.persistence.common.utils.AbstractTestCase.validateCollection(Collection),23,55
org.apache.openjpa.persistence.common.utils.AbstractTestCase.validateList(List),46,238
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.assertIdentical(List,List)",13,23
"org.apache.openjpa.persistence.common.utils.AbstractTestCase.assertOrdered(Collection,Comparator)",11,23
org.apache.openjpa.json.JSON.asString(int),9,14
"org.apache.openjpa.persistence.jdbc.annotations.PointHandler.map(ValueMapping,String,ColumnIO,boolean)",33,69
org.apache.openjpa.persistence.jdbc.annotations.PointHandler.isVersionable(),6,7
"org.apache.openjpa.persistence.jdbc.annotations.PointHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)",10,19
"org.apache.openjpa.persistence.jdbc.annotations.PointHandler.toObjectValue(ValueMapping,Object)",8,22
org.apache.openjpa.persistence.enhance.TestEmbeddedEnumSqlGeneration.TestEmbeddedEnumSqlGeneration(String),11,11
org.apache.openjpa.persistence.enhance.TestEmbeddedEnumSqlGeneration.setUp(),1,1
org.apache.openjpa.persistence.enhance.TestEmbeddedEnumSqlGeneration.testEnumEnhancement(),19,37
org.apache.openjpa.jdbc.kernel.exps.ToUpperCase.ToUpperCase(Val),6,8
"org.apache.openjpa.jdbc.kernel.exps.ToUpperCase.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",26,64
org.apache.openjpa.jdbc.kernel.exps.ToUpperCase.getId(),2,3
org.apache.openjpa.meta.Artist.Artist(),4,4
org.apache.openjpa.meta.Artist.Artist(String),6,11
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.AnnotationPersistenceMetaDataParser(OpenJPAConfiguration),12,20
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.getConfiguration(),5,7
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.getLog(),2,5
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.getRepository(),19,59
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.setRepository(MetaDataRepository),7,12
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.getEnvClassLoader(),7,11
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.setEnvClassLoader(ClassLoader),8,15
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.getMappingOverride(),14,21
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.setMappingOverride(boolean),15,24
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.getMode(),2,4
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.setMode(int,boolean)",4,15
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.setMode(int),3,7
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.isMetaDataMode(),7,11
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.isQueryMode(),6,10
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.isMappingMode(),6,10
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.isMappingOverrideMode(),9,17
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.clear(),5,5
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parse(Class<>),21,38
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.updateSourceMode(ClassMetaData),11,24
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parsePackageAnnotations(),39,150
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parsePackageMappingAnnotations(Package),4,7
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.handleUnknownPackageAnnotation(Package,Annotation)",8,11
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.getSourceMode(Package),6,11
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.addSourceMode(Package,int)",8,22
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseClassAnnotations(),112,505
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseAccess(ClassMetaData,Access)",12,31
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseClassMappingAnnotations(ClassMetaData),5,9
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.handleUnknownClassAnnotation(ClassMetaData,Annotation)",9,13
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.getMetaData(),36,106
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.getAccessCode(Class<>),21,53
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.getSourceFile(),32,85
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseDataStoreId(ClassMetaData,DataStoreId)",6,17
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseDataStoreId(ClassMetaData,GenerationType,String)",35,87
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.warnFlushMode(Object),10,19
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseDataCache(ClassMetaData,DataCache)",7,22
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseDataCache(ClassMetaData,boolean,String,int)",18,46
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseManagedInterface(ClassMetaData,ManagedInterface)",6,10
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseDetachedState(ClassMetaData,DetachedState)",25,65
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseEntityListeners(ClassMetaData,EntityListeners)",26,56
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseCallbackMethods(Class<>,Collection<LifecycleCallbacks>[],boolean,boolean,MetaDataRepository)",71,188
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.recordCallbacks(ClassMetaData,Collection<LifecycleCallbacks>[],int[],boolean)",17,58
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseFetchGroups(ClassMetaData,FetchGroup)",29,117
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseFetchGroups(ClassMetaData,FetchGroupImpl)",45,123
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseFetchAttribute(ClassMetaData,org.apache.openjpa.meta.FetchGroup,FetchAttributeImpl)",30,78
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseMemberAnnotations(FieldMetaData),78,414
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseMemberMappingAnnotations(FieldMetaData),8,10
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseCache(ClassMetaData,Cacheable)",8,15
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.handleUnknownMemberAnnotation(FieldMetaData,Annotation)",11,14
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.toOverrideType(Class<>),13,17
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseReadOnly(FieldMetaData,ReadOnly)",16,33
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseGeneratedValue(FieldMetaData,GeneratedValue)",15,30
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseGeneratedValue(FieldMetaData,GenerationType,String)",37,90
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.getGeneratedValueStrategy(Object,GenerationType,String)",24,76
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseBasic(FieldMetaData,Basic,boolean)",33,106
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseManyToOne(FieldMetaData,ManyToOne)",34,70
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseOneToOne(FieldMetaData,OneToOne)",42,90
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseEmbedded(FieldMetaData,Embedded)",22,45
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseOneToMany(FieldMetaData,OneToMany)",36,86
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseManyToMany(FieldMetaData,ManyToMany)",35,82
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseMapKey(FieldMetaData,MapKey)",15,36
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseMapKeyClass(FieldMetaData,MapKeyClass)",15,27
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseMapsId(FieldMetaData,MapsId)",11,24
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseLobMapping(FieldMetaData),8,11
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseOrderBy(FieldMetaData,OrderBy)",21,51
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parsePersistent(FieldMetaData,Persistent)",34,111
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parsePersistentCollection(FieldMetaData,PersistentCollection)",31,118
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseElementCollection(FieldMetaData,ElementCollection)",31,93
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parsePersistentMap(FieldMetaData,PersistentMap)",28,156
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.setCascades(ValueMetaData,CascadeType[])",17,96
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.setOrphanRemoval(ValueMetaData,boolean)",10,20
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseSequenceGenerator(AnnotatedElement,SequenceGenerator)",51,188
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseNamedQueries(AnnotatedElement,NamedQuery)",49,183
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.processNamedQueryLockModeType(NamedQuery),39,89
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseNamedNativeQueries(AnnotatedElement,NamedNativeQuery)",50,191
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.parseAccess(FieldMetaData,Access)",12,32
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.MethodKey.MethodKey(Method),2,4
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.MethodKey.hashCode(),7,17
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.MethodKey.equals(Object),8,19
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.MethodComparator.getInstance(),3,8
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.MethodComparator.compare(Method,Method)",15,48
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.FetchGroupImpl.FetchGroupImpl(String,boolean)",6,12
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.FetchGroupImpl.name(),2,3
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.FetchGroupImpl.postLoad(),2,4
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.FetchGroupImpl.attributes(),4,5
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.FetchGroupImpl.fetchGroups(),2,3
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.FetchGroupImpl.setAttributes(FetchAttributeImpl[]),5,8
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.FetchGroupImpl.setFetchGroups(String[]),3,6
"org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.FetchAttributeImpl.FetchAttributeImpl(String,int)",7,13
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.FetchAttributeImpl.name(),2,3
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.FetchAttributeImpl.recursionDepth(),2,4
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.normalizeSequenceName(String),5,9
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.normalizeSchemaName(String),5,9
org.apache.openjpa.persistence.AnnotationPersistenceMetaDataParser.normalizeCatalogName(String),5,9
"org.apache.openjpa.jdbc.meta.DelegatingJoinable.DelegatingJoinable(Joinable,ForeignKey)",22,42
"org.apache.openjpa.jdbc.meta.DelegatingJoinable.DelegatingJoinable(Joinable,Column[])",19,33
org.apache.openjpa.jdbc.meta.DelegatingJoinable.getFieldIndex(),3,5
"org.apache.openjpa.jdbc.meta.DelegatingJoinable.getPrimaryKeyValue(Result,Column[],ForeignKey,JDBCStore,Joins)",15,25
org.apache.openjpa.jdbc.meta.DelegatingJoinable.getColumns(),3,3
"org.apache.openjpa.jdbc.meta.DelegatingJoinable.getJoinValue(Object,Column,JDBCStore)",9,17
"org.apache.openjpa.jdbc.meta.DelegatingJoinable.getJoinValue(OpenJPAStateManager,Column,JDBCStore)",10,16
"org.apache.openjpa.jdbc.meta.DelegatingJoinable.setAutoAssignedValue(OpenJPAStateManager,JDBCStore,Column,Object)",14,22
org.apache.openjpa.jdbc.meta.DelegatingJoinable.translate(Column),9,17
org.apache.openjpa.persistence.Security1.Security1(),1,1
"org.apache.openjpa.persistence.Security1.Security1(long,Embed)",3,5
org.apache.openjpa.persistence.Security1.getId(),0,0
org.apache.openjpa.persistence.Security1.getCountry1(),1,3
org.apache.openjpa.persistence.Security1.setCountry1(Country1),2,4
org.apache.openjpa.persistence.Security1.getCountryEager(),2,5
org.apache.openjpa.persistence.Security1.setCountryEager(Country1),3,6
org.apache.openjpa.persistence.Security1.getSymbol(),2,3
org.apache.openjpa.persistence.Security1.setSymbol(Embed),3,6
org.apache.openjpa.persistence.enhance.identity.Book.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.Book.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.Book.getLibrary(),1,3
org.apache.openjpa.persistence.enhance.identity.Book.setLibrary(Library),2,6
org.apache.openjpa.persistence.enhance.identity.Book.getPage(int),2,4
org.apache.openjpa.persistence.enhance.identity.Book.addPage(Page),5,7
org.apache.openjpa.persistence.enhance.identity.Book.getAuthor(),2,3
org.apache.openjpa.persistence.enhance.identity.Book.setAuthor(String),3,6
org.apache.openjpa.persistence.enhance.identity.Book.equals(Object),4,8
org.apache.openjpa.persistence.enhance.identity.Book.hashCode(),3,5
org.apache.openjpa.persistence.jdbc.common.apps.HorizH.setStringH(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizH.getStringH(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizH.setIntH(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizH.getIntH(),0,0
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCLeafD2.getLeafD2Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCLeafD2.setLeafD2Data(String),4,10
org.apache.openjpa.jdbc.sql.TestMySQLDictionary.testDBDictionaryGetBatchFetchSize(),11,16
org.apache.openjpa.jdbc.sql.TestMySQLDictionary.testPreparedStatementGetFetchBatchSize(),40,111
org.apache.openjpa.jdbc.sql.TestMySQLDictionary.testPreparedCallGetFetchBatchSize(),42,111
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC.getPartial(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC.setPartial(PartialJoinPC),3,7
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC.getId1(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC.setId1(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC.getId2(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC.setId2(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC.getPartials(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC.setPartials(Set),2,6
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC.getConstant(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC.setConstant(ConstantJoinPC),3,7
org.apache.openjpa.integration.daytrader.OrderDataBean.OrderDataBean(),2,2
"org.apache.openjpa.integration.daytrader.OrderDataBean.OrderDataBean(Integer,String,String,Date,Date,double,BigDecimal,BigDecimal,String)",14,46
"org.apache.openjpa.integration.daytrader.OrderDataBean.OrderDataBean(String,String,Date,Date,double,BigDecimal,BigDecimal,AccountDataBean,QuoteDataBean,HoldingDataBean)",15,60
org.apache.openjpa.integration.daytrader.OrderDataBean.getRandomInstance(),18,49
org.apache.openjpa.integration.daytrader.OrderDataBean.toString(),9,20
org.apache.openjpa.integration.daytrader.OrderDataBean.toHTML(),10,20
org.apache.openjpa.integration.daytrader.OrderDataBean.print(),3,4
org.apache.openjpa.integration.daytrader.OrderDataBean.getOrderID(),1,1
org.apache.openjpa.integration.daytrader.OrderDataBean.setOrderID(Integer),2,2
org.apache.openjpa.integration.daytrader.OrderDataBean.getOrderType(),2,3
org.apache.openjpa.integration.daytrader.OrderDataBean.setOrderType(String),3,6
org.apache.openjpa.integration.daytrader.OrderDataBean.getOrderStatus(),2,3
org.apache.openjpa.integration.daytrader.OrderDataBean.setOrderStatus(String),3,6
org.apache.openjpa.integration.daytrader.OrderDataBean.getOpenDate(),1,3
org.apache.openjpa.integration.daytrader.OrderDataBean.setOpenDate(Date),2,6
org.apache.openjpa.integration.daytrader.OrderDataBean.getCompletionDate(),2,5
org.apache.openjpa.integration.daytrader.OrderDataBean.setCompletionDate(Date),3,10
org.apache.openjpa.integration.daytrader.OrderDataBean.getQuantity(),1,2
org.apache.openjpa.integration.daytrader.OrderDataBean.setQuantity(double),2,5
org.apache.openjpa.integration.daytrader.OrderDataBean.getPrice(),2,3
org.apache.openjpa.integration.daytrader.OrderDataBean.setPrice(BigDecimal),3,6
org.apache.openjpa.integration.daytrader.OrderDataBean.getOrderFee(),2,3
org.apache.openjpa.integration.daytrader.OrderDataBean.setOrderFee(BigDecimal),3,6
org.apache.openjpa.integration.daytrader.OrderDataBean.getSymbol(),3,6
org.apache.openjpa.integration.daytrader.OrderDataBean.setSymbol(String),3,6
org.apache.openjpa.integration.daytrader.OrderDataBean.getAccount(),3,5
org.apache.openjpa.integration.daytrader.OrderDataBean.setAccount(AccountDataBean),4,8
org.apache.openjpa.integration.daytrader.OrderDataBean.getQuote(),3,5
org.apache.openjpa.integration.daytrader.OrderDataBean.setQuote(QuoteDataBean),4,8
org.apache.openjpa.integration.daytrader.OrderDataBean.getHolding(),3,5
org.apache.openjpa.integration.daytrader.OrderDataBean.setHolding(HoldingDataBean),4,8
org.apache.openjpa.integration.daytrader.OrderDataBean.isBuy(),5,8
org.apache.openjpa.integration.daytrader.OrderDataBean.isSell(),5,8
org.apache.openjpa.integration.daytrader.OrderDataBean.isOpen(),5,10
org.apache.openjpa.integration.daytrader.OrderDataBean.isCompleted(),7,16
org.apache.openjpa.integration.daytrader.OrderDataBean.isCancelled(),5,8
org.apache.openjpa.integration.daytrader.OrderDataBean.cancel(),4,4
org.apache.openjpa.integration.daytrader.OrderDataBean.hashCode(),2,7
org.apache.openjpa.integration.daytrader.OrderDataBean.equals(Object),10,18
"org.apache.openjpa.lib.util.ConcreteClassGenerator.getConcreteConstructor(Class<T>,Class<>)",25,63
org.apache.openjpa.lib.util.ConcreteClassGenerator.makeConcrete(Class<T>),56,114
"org.apache.openjpa.lib.util.ConcreteClassGenerator.newInstance(Constructor<T>,Object)",15,22
"org.apache.openjpa.lib.util.ConcreteClassGenerator.newInstance(Class<T>,Class<>[],Object[])",19,33
org.apache.openjpa.lib.util.ConcreteClassGenerator.newInstance(Class<T>),4,11
"org.apache.openjpa.lib.util.ConcreteClassGenerator.newInstance(Class<T>,Class<>,P)",6,17
"org.apache.openjpa.lib.util.ConcreteClassGenerator.newInstance(Class<T>,Class<>,P1,Class<>,P2)",6,23
"org.apache.openjpa.lib.util.ConcreteClassGenerator.newInstance(Class<T>,Class<>,P1,Class<>,P2,Class<>,P3)",6,29
"org.apache.openjpa.lib.util.ConcreteClassGenerator.newInstance(Class<T>,Class<>,P1,Class<>,P2,Class<>,P3,Class<>,P4)",6,35
org.apache.openjpa.enhance.TestEnhancementConfiguration.setUp(),10,12
org.apache.openjpa.enhance.TestEnhancementConfiguration.testEnhancementConfiguration(),28,33
org.apache.openjpa.enhance.UnenhancedFieldAccessPrimitiveWrapperSubclass.getRelated(),3,4
org.apache.openjpa.enhance.UnenhancedFieldAccessPrimitiveWrapperSubclass.setRelated(UnenhancedType),8,12
org.apache.openjpa.enhance.UnenhancedFieldAccessPrimitiveWrapperSubclass.setIntField(int),2,3
org.apache.openjpa.enhance.UnenhancedFieldAccessPrimitiveWrapperSubclass.getIntField(),1,2
org.apache.openjpa.enhance.UnenhancedFieldAccessPrimitiveWrapperSubclass.clone(),13,24
org.apache.openjpa.event.TestSJVMRemoteCommitProvider.setUp(),27,87
org.apache.openjpa.event.TestSJVMRemoteCommitProvider.tearDown(),4,11
org.apache.openjpa.event.TestSJVMRemoteCommitProvider.testSJVMRemoteCommitProvider(),23,55
org.apache.openjpa.event.TestSJVMRemoteCommitProvider.ListenerImpl.afterCommit(RemoteCommitEvent),4,7
org.apache.openjpa.event.TestSJVMRemoteCommitProvider.ListenerImpl.close(),1,1
org.apache.openjpa.jdbc.kernel.EntityA.EntityA(),1,1
org.apache.openjpa.jdbc.kernel.EntityA.setId(Integer),2,2
org.apache.openjpa.jdbc.kernel.EntityA.getId(),1,1
org.apache.openjpa.jdbc.kernel.EntityA.getEntityB(),1,3
org.apache.openjpa.jdbc.kernel.EntityA.setEntityB(EntityB),2,6
org.apache.openjpa.jdbc.kernel.EntityA.getName(),2,3
org.apache.openjpa.jdbc.kernel.EntityA.setName(String),3,6
org.apache.openjpa.persistence.generationtype.GeneratedValues.GeneratedValues(),2,2
"org.apache.openjpa.persistence.generationtype.GeneratedValues.GeneratedValues(int,long,String,String,String,String)",8,15
org.apache.openjpa.persistence.generationtype.GeneratedValues.getId(),0,0
org.apache.openjpa.persistence.generationtype.GeneratedValues.setId(int),1,1
org.apache.openjpa.persistence.generationtype.GeneratedValues.getField(),1,2
org.apache.openjpa.persistence.generationtype.GeneratedValues.setField(long),2,5
org.apache.openjpa.persistence.generationtype.GeneratedValues.getCustomSeqWithIndirectionField(),4,8
org.apache.openjpa.persistence.generationtype.GeneratedValues.setUuidhex(String),3,6
org.apache.openjpa.persistence.generationtype.GeneratedValues.getUuidhex(),2,3
org.apache.openjpa.persistence.generationtype.GeneratedValues.setUuidstring(String),3,6
org.apache.openjpa.persistence.generationtype.GeneratedValues.getUuidstring(),2,3
org.apache.openjpa.persistence.generationtype.GeneratedValues.setUuidT4hex(String),4,10
org.apache.openjpa.persistence.generationtype.GeneratedValues.getUuidT4hex(),3,5
org.apache.openjpa.persistence.generationtype.GeneratedValues.setUuidT4string(String),3,10
org.apache.openjpa.persistence.generationtype.GeneratedValues.getUuidT4string(),2,5
org.apache.openjpa.jdbc.persistence.classcriteria.TestQuerySubclass.setUp(),21,37
org.apache.openjpa.jdbc.persistence.classcriteria.TestQuerySubclass.testQuery(),19,36
"org.apache.openjpa.jdbc.sql.Sized.Sized(Object,int)",4,8
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.TestPagingResultObjectProvider(String),7,8
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.setUp(),7,11
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.skipTest(),29,51
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.testNonPagingExtent(),31,74
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.testNonPagingQuery(),37,98
"org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.assertRel(List,int)",11,20
"org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.assertRels(List,int)",14,35
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.testPagingExtent(),32,71
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.testPagingQuery(),44,129
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.testPagingAppIdExtent(),33,76
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.testPagingAppIdQuery(),38,99
"org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.assertAppIdRel(List,int)",14,28
"org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.assertAppIdRels(List,int)",15,38
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.testMultiPageExtent(),35,80
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.testMultiPageQuery(),53,147
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.testLastPageQuery(),46,96
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.testSingleResultPage(),35,80
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.initializePagingPCs(),16,45
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.initializePagingAppIdPCs(),17,52
org.apache.openjpa.persistence.jdbc.kernel.TestPagingResultObjectProvider.getProps(),22,41
org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccessSubclass.UnenhancedCompoundPKFieldAccessSubclass(),5,5
"org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccessSubclass.UnenhancedCompoundPKFieldAccessSubclass(int,int)",5,5
org.apache.openjpa.persistence.jest.IOR.toString(OpenJPAStateManager),23,32
org.apache.openjpa.kernel.TestEnhancedInstanceBrokerSerialization.setUp(),6,7
org.apache.openjpa.kernel.TestEnhancedInstanceBrokerSerialization.getManagedType(),4,6
org.apache.openjpa.kernel.TestEnhancedInstanceBrokerSerialization.newManagedInstance(),9,14
org.apache.openjpa.kernel.TestEnhancedInstanceBrokerSerialization.modifyInstance(SimpleEntity),7,7
org.apache.openjpa.kernel.TestEnhancedInstanceBrokerSerialization.getModifiedValue(SimpleEntity),5,6
org.apache.openjpa.persistence.derivedid.EBigDecimalID.EBigDecimalID(),1,1
org.apache.openjpa.persistence.derivedid.EBigDecimalID.EBigDecimalID(BigDecimal),2,4
org.apache.openjpa.persistence.derivedid.EBigDecimalID.getId(),1,1
org.apache.openjpa.persistence.derivedid.EBigDecimalID.setId(BigDecimal),2,2
org.apache.openjpa.persistence.derivedid.EBigDecimalID.getName(),2,3
org.apache.openjpa.persistence.derivedid.EBigDecimalID.setName(String),3,6
org.apache.openjpa.jdbc.kernel.TestForeignKeyCountViolation.setUp(),11,15
org.apache.openjpa.jdbc.kernel.TestForeignKeyCountViolation.testFKCount(),36,110
org.apache.openjpa.jdbc.kernel.TestForeignKeyCountViolation.testFKNamefromDB(),46,164
org.apache.openjpa.jdbc.meta.strats.ReaderWrapper.ReaderWrapper(String),4,7
org.apache.openjpa.jdbc.meta.strats.ReaderWrapper.close(),3,4
"org.apache.openjpa.jdbc.meta.strats.ReaderWrapper.read(char[],int,int)",17,30
org.apache.openjpa.meta.AccessCode.isValidClassCode(int),10,34
org.apache.openjpa.meta.AccessCode.isValidFieldCode(int),6,21
org.apache.openjpa.meta.AccessCode.isMixed(int),8,11
org.apache.openjpa.meta.AccessCode.isExplicit(int),2,4
org.apache.openjpa.meta.AccessCode.isProperty(int),2,4
org.apache.openjpa.meta.AccessCode.isField(int),2,4
org.apache.openjpa.meta.AccessCode.isUnknown(int),2,4
org.apache.openjpa.meta.AccessCode.isEmpty(int),2,4
org.apache.openjpa.meta.AccessCode.isField(ClassMetaData),5,8
org.apache.openjpa.meta.AccessCode.isProperty(ClassMetaData),5,8
org.apache.openjpa.meta.AccessCode.isUnknown(ClassMetaData),5,8
org.apache.openjpa.meta.AccessCode.isEmpty(ClassMetaData),5,8
org.apache.openjpa.meta.AccessCode.isField(FieldMetaData),5,9
org.apache.openjpa.meta.AccessCode.isProperty(FieldMetaData),6,9
org.apache.openjpa.meta.AccessCode.isUnknown(FieldMetaData),6,9
"org.apache.openjpa.meta.AccessCode.isCompatibleSuper(int,int)",10,26
"org.apache.openjpa.meta.AccessCode.mergeFieldCode(ClassMetaData,FieldMetaData,int)",14,35
"org.apache.openjpa.meta.AccessCode.mergeFieldCode(int,int)",20,64
"org.apache.openjpa.meta.AccessCode.getMixedCode(int,int)",3,13
org.apache.openjpa.meta.AccessCode.toFieldCode(int),4,10
org.apache.openjpa.meta.AccessCode.toFieldString(int),12,31
org.apache.openjpa.meta.AccessCode.toClassString(int),12,29
org.apache.openjpa.persistence.jest.JPAServletContext.getPersistenceContext(),6,9
org.apache.openjpa.persistence.jest.JPAServletContext.getPersistenceUnitName(),4,7
org.apache.openjpa.persistence.jest.JPAServletContext.getRequest(),3,6
org.apache.openjpa.persistence.jest.JPAServletContext.getResponse(),3,6
org.apache.openjpa.persistence.jest.JPAServletContext.getRequestURI(),4,5
org.apache.openjpa.persistence.jest.JPAServletContext.resolve(String),19,38
"org.apache.openjpa.persistence.jest.JPAServletContext.log(short,String)",15,24
org.apache.openjpa.persistence.datacache.TestJPQL2Queries.TestJPQL2Queries(String),5,7
org.apache.openjpa.persistence.datacache.TestJPQL2Queries.setUp(),32,70
org.apache.openjpa.persistence.datacache.TestJPQL2Queries.tearDown(),4,7
org.apache.openjpa.persistence.datacache.TestJPQL2Queries.testUpperRange(),4,6
org.apache.openjpa.persistence.datacache.TestJPQL2Queries.testLowerRange(),4,6
org.apache.openjpa.persistence.datacache.TestJPQL2Queries.testBothRanges(),4,5
"org.apache.openjpa.persistence.datacache.TestJPQL2Queries.rangeTestHelper(int,int)",27,107
org.apache.openjpa.persistence.datacache.TestJPQL2Queries.testResultClassIsCached(),21,35
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCLeafC.getLeafCData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCLeafC.setLeafCData(String),4,10
org.apache.openjpa.lib.rop.TestListResultList.TestListResultList(String),4,7
org.apache.openjpa.lib.rop.TestListResultList.getResultList(ResultObjectProvider),5,17
org.apache.openjpa.lib.rop.TestListResultList.main(String[]),3,4
org.apache.openjpa.persistence.discriminator.StringLeafEntity.getSubInt(),1,2
org.apache.openjpa.persistence.discriminator.StringLeafEntity.setSubInt(int),2,5
org.apache.openjpa.trader.client.ui.MessageBox.MessageBox(),27,78
org.apache.openjpa.trader.client.ui.MessageBox.MessageBox().$1.onClick(ClickEvent),3,5
org.apache.openjpa.trader.client.ui.MessageBox.alert(String),3,6
"org.apache.openjpa.trader.client.ui.MessageBox.alert(String,String)",8,17
"org.apache.openjpa.kernel.QueryImpl.QueryImpl(Broker,String,StoreQuery)",20,53
org.apache.openjpa.kernel.QueryImpl.getStoreQuery(),3,9
org.apache.openjpa.kernel.QueryImpl.getBroker(),1,3
org.apache.openjpa.kernel.QueryImpl.getQuery(),1,2
org.apache.openjpa.kernel.QueryImpl.getStoreContext(),3,5
org.apache.openjpa.kernel.QueryImpl.getLanguage(),2,3
org.apache.openjpa.kernel.QueryImpl.getFetchConfiguration(),2,4
org.apache.openjpa.kernel.QueryImpl.getQueryString(),2,4
org.apache.openjpa.kernel.QueryImpl.getIgnoreChanges(),2,4
org.apache.openjpa.kernel.QueryImpl.setIgnoreChanges(boolean),10,13
org.apache.openjpa.kernel.QueryImpl.isReadOnly(),1,2
org.apache.openjpa.kernel.QueryImpl.setReadOnly(boolean),5,7
org.apache.openjpa.kernel.QueryImpl.addFilterListener(FilterListener),12,23
org.apache.openjpa.kernel.QueryImpl.removeFilterListener(FilterListener),9,16
org.apache.openjpa.kernel.QueryImpl.getFilterListeners(),9,13
org.apache.openjpa.kernel.QueryImpl.getFilterListener(String),18,53
org.apache.openjpa.kernel.QueryImpl.addAggregateListener(AggregateListener),12,23
org.apache.openjpa.kernel.QueryImpl.removeAggregateListener(AggregateListener),9,16
org.apache.openjpa.kernel.QueryImpl.getAggregateListeners(),9,13
org.apache.openjpa.kernel.QueryImpl.getAggregateListener(String),18,53
org.apache.openjpa.kernel.QueryImpl.getCandidateExtent(),23,62
org.apache.openjpa.kernel.QueryImpl.setCandidateExtent(Extent),13,40
org.apache.openjpa.kernel.QueryImpl.getCandidateCollection(),2,4
org.apache.openjpa.kernel.QueryImpl.setCandidateCollection(Collection<>),16,26
org.apache.openjpa.kernel.QueryImpl.getCandidateType(),13,14
"org.apache.openjpa.kernel.QueryImpl.setCandidateType(Class,boolean)",11,14
org.apache.openjpa.kernel.QueryImpl.hasSubclasses(),1,2
org.apache.openjpa.kernel.QueryImpl.getResultMappingName(),4,7
org.apache.openjpa.kernel.QueryImpl.getResultMappingScope(),3,6
"org.apache.openjpa.kernel.QueryImpl.setResultMapping(Class<>,String)",9,17
org.apache.openjpa.kernel.QueryImpl.isUnique(),21,34
org.apache.openjpa.kernel.QueryImpl.isParsedQuery(),7,11
org.apache.openjpa.kernel.QueryImpl.setUnique(boolean),5,8
org.apache.openjpa.kernel.QueryImpl.getResultType(),13,17
org.apache.openjpa.kernel.QueryImpl.setResultType(Class),11,13
org.apache.openjpa.kernel.QueryImpl.getStartRange(),3,4
org.apache.openjpa.kernel.QueryImpl.getEndRange(),2,2
"org.apache.openjpa.kernel.QueryImpl.setRange(long,long)",18,41
org.apache.openjpa.kernel.QueryImpl.getParameterDeclaration(),14,18
org.apache.openjpa.kernel.QueryImpl.declareParameters(String),21,25
org.apache.openjpa.kernel.QueryImpl.compile(),9,15
org.apache.openjpa.kernel.QueryImpl.getCompilation(),7,8
org.apache.openjpa.kernel.QueryImpl.compileForCompilation(),12,26
org.apache.openjpa.kernel.QueryImpl.compilationFromCache(),26,89
org.apache.openjpa.kernel.QueryImpl.newCompilation(),7,22
org.apache.openjpa.kernel.QueryImpl.compileForExecutor(),17,60
org.apache.openjpa.kernel.QueryImpl.compileForDataStore(Compilation),12,21
org.apache.openjpa.kernel.QueryImpl.compileForInMemory(Compilation),11,20
org.apache.openjpa.kernel.QueryImpl.createExecutor(boolean),36,117
org.apache.openjpa.kernel.QueryImpl.invalidateCompilation(),18,23
org.apache.openjpa.kernel.QueryImpl.execute(),2,4
org.apache.openjpa.kernel.QueryImpl.execute(Object[]),4,7
org.apache.openjpa.kernel.QueryImpl.execute(Map),5,7
"org.apache.openjpa.kernel.QueryImpl.execute(int,Object[])",35,79
"org.apache.openjpa.kernel.QueryImpl.execute(int,Map)",40,92
org.apache.openjpa.kernel.QueryImpl.deleteAll(),2,3
org.apache.openjpa.kernel.QueryImpl.deleteAll(Object[]),5,7
org.apache.openjpa.kernel.QueryImpl.deleteAll(Map),5,7
org.apache.openjpa.kernel.QueryImpl.updateAll(),2,3
org.apache.openjpa.kernel.QueryImpl.updateAll(Object[]),5,7
org.apache.openjpa.kernel.QueryImpl.updateAll(Map),5,7
org.apache.openjpa.kernel.QueryImpl.isInMemory(int),43,84
"org.apache.openjpa.kernel.QueryImpl.execute(StoreQuery,StoreQuery.Executor,Object[])",33,83
"org.apache.openjpa.kernel.QueryImpl.delete(StoreQuery,StoreQuery.Executor,Object[])",23,36
"org.apache.openjpa.kernel.QueryImpl.deleteInMemory(StoreQuery,StoreQuery.Executor,Object[])",17,30
"org.apache.openjpa.kernel.QueryImpl.update(StoreQuery,StoreQuery.Executor,Object[])",24,37
"org.apache.openjpa.kernel.QueryImpl.updateInMemory(StoreQuery,StoreQuery.Executor,Object[])",16,31
"org.apache.openjpa.kernel.QueryImpl.updateInMemory(Object,Object[],StoreQuery)",60,259
"org.apache.openjpa.kernel.QueryImpl.logExecution(int,OrderedMap<Class<Object>>,Object[])",18,45
"org.apache.openjpa.kernel.QueryImpl.logExecution(int,Map<Object,Object>)",19,40
"org.apache.openjpa.kernel.QueryImpl.isLRS(long,long)",10,19
"org.apache.openjpa.kernel.QueryImpl.toResult(StoreQuery,StoreQuery.Executor,ResultObjectProvider,StoreQuery.Range)",43,118
org.apache.openjpa.kernel.QueryImpl.decorateResultList(ResultList<>),7,18
"org.apache.openjpa.kernel.QueryImpl.getResultPacker(StoreQuery,StoreQuery.Executor)",19,78
"org.apache.openjpa.kernel.QueryImpl.emptyResult(StoreQuery,StoreQuery.Executor)",11,18
"org.apache.openjpa.kernel.QueryImpl.singleResult(ResultObjectProvider,StoreQuery.Range)",31,82
org.apache.openjpa.kernel.QueryImpl.isAccessPathDirty(),11,19
"org.apache.openjpa.kernel.QueryImpl.isAccessPathDirty(Broker,ClassMetaData[])",31,98
org.apache.openjpa.kernel.QueryImpl.closeAll(),2,3
org.apache.openjpa.kernel.QueryImpl.closeResources(),3,4
org.apache.openjpa.kernel.QueryImpl.closeResults(boolean),13,31
org.apache.openjpa.kernel.QueryImpl.getDataStoreActions(Map),26,59
org.apache.openjpa.kernel.QueryImpl.setQuery(Object),34,91
org.apache.openjpa.kernel.QueryImpl.getAlias(),10,16
org.apache.openjpa.kernel.QueryImpl.getProjectionAliases(),9,11
org.apache.openjpa.kernel.QueryImpl.getProjectionTypes(),8,10
org.apache.openjpa.kernel.QueryImpl.getOperation(),7,8
org.apache.openjpa.kernel.QueryImpl.isAggregate(),7,8
org.apache.openjpa.kernel.QueryImpl.isDistinct(),7,8
org.apache.openjpa.kernel.QueryImpl.hasGrouping(),6,6
org.apache.openjpa.kernel.QueryImpl.getAccessPathMetaDatas(),13,25
org.apache.openjpa.kernel.QueryImpl.getOrderedParameterTypes(),10,12
org.apache.openjpa.kernel.QueryImpl.getParameterTypes(),11,19
org.apache.openjpa.kernel.QueryImpl.getUpdates(),8,9
org.apache.openjpa.kernel.QueryImpl.lock(),1,4
org.apache.openjpa.kernel.QueryImpl.unlock(),2,4
org.apache.openjpa.kernel.QueryImpl.startLocking(),4,6
org.apache.openjpa.kernel.QueryImpl.stopLocking(),5,6
"org.apache.openjpa.kernel.QueryImpl.classForName(String,String[])",31,98
org.apache.openjpa.kernel.QueryImpl.toClass(String),16,24
org.apache.openjpa.kernel.QueryImpl.assertOpen(),1,2
org.apache.openjpa.kernel.QueryImpl.assertNotReadOnly(),4,6
org.apache.openjpa.kernel.QueryImpl.assertNotSerialized(),5,6
org.apache.openjpa.kernel.QueryImpl.assertCandidateType(),10,14
"org.apache.openjpa.kernel.QueryImpl.assertBulkModify(StoreQuery,StoreQuery.Executor,Object[])",30,59
"org.apache.openjpa.kernel.QueryImpl.assertParameters(StoreQuery,StoreQuery.Executor,Object[])",31,70
"org.apache.openjpa.kernel.QueryImpl.assertParameters(StoreQuery,StoreQuery.Executor,Map)",24,77
org.apache.openjpa.kernel.QueryImpl.toString(),6,23
org.apache.openjpa.kernel.QueryImpl.CompilationKey.hashCode(),8,23
org.apache.openjpa.kernel.QueryImpl.CompilationKey.equals(Object),16,53
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.MergedExecutor(StoreQuery.Executor[]),5,8
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getQueryExpressions(),3,7
"org.apache.openjpa.kernel.QueryImpl.MergedExecutor.executeQuery(StoreQuery,Object[],StoreQuery.Range)",33,120
"org.apache.openjpa.kernel.QueryImpl.MergedExecutor.executeDelete(StoreQuery,Object[])",10,16
"org.apache.openjpa.kernel.QueryImpl.MergedExecutor.executeUpdate(StoreQuery,Object[])",10,16
"org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getDataStoreActions(StoreQuery,Object[],StoreQuery.Range)",17,61
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.validate(StoreQuery),4,5
"org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getRange(StoreQuery,Object[],StoreQuery.Range)",6,13
"org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getOrderingValue(StoreQuery,Object[],Object,int)",16,26
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getAscending(StoreQuery),4,5
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getAlias(StoreQuery),5,6
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getProjectionAliases(StoreQuery),6,8
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getResultClass(StoreQuery),4,5
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getResultShape(StoreQuery),5,9
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getProjectionTypes(StoreQuery),5,7
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.isPacking(StoreQuery),4,5
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getAccessPathMetaDatas(StoreQuery),20,51
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.isAggregate(StoreQuery),15,19
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.isDistinct(StoreQuery),4,5
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getOperation(StoreQuery),4,5
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.hasGrouping(StoreQuery),3,3
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getOrderedParameterTypes(StoreQuery),7,9
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getParameterTypes(StoreQuery),7,9
"org.apache.openjpa.kernel.QueryImpl.MergedExecutor.toParameterArray(StoreQuery,Map)",9,13
org.apache.openjpa.kernel.QueryImpl.MergedExecutor.getUpdates(StoreQuery),5,6
"org.apache.openjpa.kernel.QueryImpl.PackingResultObjectProvider.PackingResultObjectProvider(ResultObjectProvider,ResultPacker,int)",8,20
org.apache.openjpa.kernel.QueryImpl.PackingResultObjectProvider.supportsRandomAccess(),4,7
org.apache.openjpa.kernel.QueryImpl.PackingResultObjectProvider.open(),2,2
org.apache.openjpa.kernel.QueryImpl.PackingResultObjectProvider.getResultObject(),7,18
org.apache.openjpa.kernel.QueryImpl.PackingResultObjectProvider.next(),2,2
org.apache.openjpa.kernel.QueryImpl.PackingResultObjectProvider.absolute(int),4,6
org.apache.openjpa.kernel.QueryImpl.PackingResultObjectProvider.size(),3,4
org.apache.openjpa.kernel.QueryImpl.PackingResultObjectProvider.reset(),3,4
org.apache.openjpa.kernel.QueryImpl.PackingResultObjectProvider.close(),3,4
org.apache.openjpa.kernel.QueryImpl.PackingResultObjectProvider.handleCheckedException(Exception),4,8
org.apache.openjpa.kernel.QueryImpl.PackingResultObjectProvider.getDelegate(),4,5
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.RemoveOnCloseResultList(ResultList),5,9
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.getDelegate(),4,4
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.isProviderOpen(),2,3
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.getUserObject(),3,6
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.setUserObject(Object),5,10
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.isClosed(),2,3
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.close(),1,2
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.close(boolean),20,34
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.size(),2,3
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.isEmpty(),2,3
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.contains(Object),3,4
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.iterator(),2,4
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.toArray(),3,4
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.toArray(Object[]),3,5
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.add(Object),3,4
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.remove(Object),3,4
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.containsAll(Collection),3,4
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.addAll(Collection),3,4
"org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.addAll(int,Collection)",4,6
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.removeAll(Collection),3,4
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.retainAll(Collection),3,4
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.clear(),1,1
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.get(int),3,4
"org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.set(int,Object)",4,7
"org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.add(int,Object)",4,6
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.remove(int),4,6
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.indexOf(Object),3,4
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.lastIndexOf(Object),3,4
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.listIterator(),3,7
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.listIterator(int),4,9
"org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.subList(int,int)",4,8
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.equals(Object),3,4
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.hashCode(),3,5
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.toString(),2,4
org.apache.openjpa.kernel.QueryImpl.RemoveOnCloseResultList.writeReplace(),4,4
org.apache.openjpa.persistence.embed.Employee3.getEmpId(),1,2
org.apache.openjpa.persistence.embed.Employee3.setEmpId(int),2,5
org.apache.openjpa.persistence.embed.Employee3.getDepartment(),1,3
org.apache.openjpa.persistence.embed.Employee3.setDepartment(Department3),2,6
org.apache.openjpa.persistence.embed.Employee3.getName(),2,4
org.apache.openjpa.persistence.embed.Employee3.setName(EmployeeName3),3,7
org.apache.openjpa.persistence.compat.InvoiceKey.InvoiceKey(),2,2
"org.apache.openjpa.persistence.compat.InvoiceKey.InvoiceKey(int,String)",5,9
org.apache.openjpa.persistence.compat.InvoiceKey.equals(Object),6,17
org.apache.openjpa.persistence.compat.InvoiceKey.hashCode(),5,10
org.apache.openjpa.persistence.common.apps.ScienceCourse.ScienceCourse(String),4,9
"org.apache.openjpa.persistence.common.apps.ScienceCourse.ScienceCourse(int,String)",4,9
org.apache.openjpa.persistence.common.apps.ScienceCourse.getRelCourse(),3,5
org.apache.openjpa.persistence.callbacks.PerInstanceListener.afterDeletePerformed(LifecycleEvent),4,6
org.apache.openjpa.persistence.callbacks.PerInstanceListener.afterPersistPerformed(LifecycleEvent),4,6
org.apache.openjpa.persistence.callbacks.PerInstanceListener.beforeStore(LifecycleEvent),3,5
org.apache.openjpa.persistence.callbacks.PerInstanceListener.afterStore(LifecycleEvent),3,5
org.apache.openjpa.persistence.callbacks.PerInstanceListener.afterLoad(LifecycleEvent),3,5
org.apache.openjpa.persistence.callbacks.PerInstanceListener.afterRefresh(LifecycleEvent),3,5
org.apache.openjpa.persistence.callbacks.PerInstanceListener.beforeDirty(LifecycleEvent),3,5
org.apache.openjpa.persistence.callbacks.PerInstanceListener.afterDirty(LifecycleEvent),3,5
org.apache.openjpa.persistence.callbacks.PerInstanceListener.beforeDirtyFlushed(LifecycleEvent),4,7
org.apache.openjpa.persistence.callbacks.PerInstanceListener.afterDirtyFlushed(LifecycleEvent),4,7
org.apache.openjpa.persistence.callbacks.PerInstanceListener.beforeDelete(LifecycleEvent),3,5
org.apache.openjpa.persistence.callbacks.PerInstanceListener.afterDelete(LifecycleEvent),3,5
org.apache.openjpa.persistence.callbacks.PerInstanceListener.beforePersist(LifecycleEvent),3,5
org.apache.openjpa.persistence.callbacks.PerInstanceListener.afterPersist(LifecycleEvent),3,5
org.apache.openjpa.persistence.common.apps.Course.Course(),1,1
org.apache.openjpa.persistence.common.apps.Course.Course(int),1,4
"org.apache.openjpa.persistence.common.apps.Course.Course(String,int,int)",4,11
org.apache.openjpa.persistence.common.apps.Course.getCourseId(),1,2
org.apache.openjpa.persistence.common.apps.Course.setCourseId(int),2,5
org.apache.openjpa.persistence.common.apps.Course.getName(),2,3
org.apache.openjpa.persistence.common.apps.Course.setName(String),3,6
org.apache.openjpa.persistence.common.apps.Course.getUnits(),1,2
org.apache.openjpa.persistence.common.apps.Course.setUnits(int),2,5
org.apache.openjpa.persistence.enhance.identity.BeneContactId.equals(Object),7,19
org.apache.openjpa.persistence.enhance.identity.BeneContactId.hashCode(),7,12
org.apache.openjpa.persistence.enhance.identity.BeneContactId.toString(),3,5
org.apache.openjpa.persistence.enhance.identity.BeneContactId.getBeneficiaryKey(),3,4
org.apache.openjpa.persistence.enhance.identity.BeneContactId.setBeneficiaryKey(String),4,5
org.apache.openjpa.persistence.enhance.identity.BeneContactId.getContactType(),2,5
org.apache.openjpa.persistence.enhance.identity.BeneContactId.setContactType(ContactType),3,8
"org.apache.openjpa.kernel.jpql.SimpleNode.SimpleNode(JPQL,int)",4,5
"org.apache.openjpa.integration.persistence.provider.DummyProvider1.createContainerEntityManagerFactory(PersistenceUnitInfo,Map)",10,14
"org.apache.openjpa.integration.persistence.provider.DummyProvider1.createEntityManagerFactory(String,Map)",6,10
org.apache.openjpa.integration.persistence.provider.DummyProvider1.getProviderUtil(),2,4
org.apache.openjpa.persistence.event.JMSRemoteEventsTest.JMSRemoteEventsTest(String),5,5
org.apache.openjpa.persistence.event.JMSRemoteEventsTest.setUp(),4,4
org.apache.openjpa.persistence.event.JMSRemoteEventsTest.testJMSEvents(),8,20
org.apache.openjpa.persistence.event.JMSRemoteEventsTest.main(String[]),33,76
org.apache.openjpa.persistence.event.JMSRemoteEventsTest.DebugMessageListener.onMessage(Message),12,29
org.apache.openjpa.integration.validation.XMLSuper.setSuperStrValue(String),4,10
org.apache.openjpa.integration.validation.XMLSuper.getSuperStrValue(),3,5
org.apache.openjpa.integration.validation.MixedGrpEntity.setDefNotNull(String),3,6
org.apache.openjpa.integration.validation.MixedGrpEntity.getDefNotNull(),2,3
org.apache.openjpa.integration.validation.MixedGrpEntity.setVg1NotNull(String),2,2
org.apache.openjpa.integration.validation.MixedGrpEntity.getVg1NotNull(),1,1
org.apache.openjpa.integration.validation.MixedGrpEntity.setVg2NotNull(String),2,2
org.apache.openjpa.integration.validation.MixedGrpEntity.getVg2NotNull(),1,1
org.apache.openjpa.integration.validation.MixedGrpEntity.setVg12NotNull(String),2,2
org.apache.openjpa.integration.validation.MixedGrpEntity.getVg12NotNull(),1,1
org.apache.openjpa.persistence.criteria.Manager.getId(),0,0
org.apache.openjpa.persistence.criteria.Manager.getName(),2,3
org.apache.openjpa.persistence.criteria.Manager.setName(String),3,6
org.apache.openjpa.persistence.criteria.Manager.setDepartment(Department),2,6
org.apache.openjpa.persistence.criteria.Manager.getDepartment(),1,3
org.apache.openjpa.persistence.criteria.Manager.getSalary(),2,3
org.apache.openjpa.persistence.criteria.Manager.setSalary(BigDecimal),3,6
"org.apache.openjpa.persistence.jest.PropertiesFormatter.createXML(String,String,String,Map<String,Object>)",25,75
"org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.GenericResultObjectProvider(Class<>,JDBCStore,JDBCFetchConfiguration,Result)",23,45
"org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.GenericResultObjectProvider(ClassMapping,JDBCStore,JDBCFetchConfiguration,Result)",19,50
org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.supportsRandomAccess(),5,8
org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.open(),0,0
org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.getResultObject(),17,25
org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.next(),3,3
org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.absolute(int),5,7
org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.size(),14,18
org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.reset(),3,3
org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.close(),2,3
org.apache.openjpa.jdbc.kernel.GenericResultObjectProvider.handleCheckedException(Exception),11,19
org.apache.openjpa.persistence.generationtype.TestGeneratedValues.setUp(),10,12
org.apache.openjpa.persistence.generationtype.TestGeneratedValues.testDefaultValues(),53,85
org.apache.openjpa.persistence.generationtype.TestGeneratedValues.testInitialValues(),21,29
org.apache.openjpa.persistence.generationtype.TestGeneratedValues.testIdSetter(),22,29
org.apache.openjpa.persistence.generationtype.TestGeneratedValues.testFieldSetter(),21,27
org.apache.openjpa.persistence.generationtype.TestGeneratedValues.testCustomSequenceGeneratorWithIndirection(),22,29
org.apache.openjpa.persistence.generationtype.TestGeneratedValues.testUUIDGenerators(),60,116
"org.apache.openjpa.persistence.generationtype.TestGeneratedValues.isStringUUID(String,int)",9,17
"org.apache.openjpa.persistence.generationtype.TestGeneratedValues.isHexUUID(String,int)",17,27
org.apache.openjpa.persistence.criteria.Product.getProductType(),3,5
org.apache.openjpa.persistence.criteria.Product.setProductType(String),4,10
org.apache.openjpa.persistence.criteria.Product.getPid(),1,2
org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq.setType(int),4,8
"org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq.next(StoreContext,ClassMetaData)",16,36
"org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq.current(StoreContext,ClassMetaData)",15,30
"org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq.allocate(int,StoreContext,ClassMetaData)",15,31
"org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq.addSchema(ClassMapping,SchemaGroup)",3,5
org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq.close(),1,1
"org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq.nextInternal(JDBCStore,ClassMapping)",7,10
org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq.getConfiguration(),4,7
"org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq.currentInternal(JDBCStore,ClassMapping)",14,21
"org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq.allocateInternal(int,JDBCStore,ClassMapping)",9,13
org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq.getStore(StoreContext),8,16
org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq.getConnection(JDBCStore),36,77
org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq.closeConnection(Connection),24,57
org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq.suspendInJTA(),11,16
org.apache.openjpa.persistence.compat.TestMethodQLQuery.setUp(),3,4
org.apache.openjpa.persistence.compat.TestMethodQLQuery.testMethodQLWithoutParametersDeclared(),37,64
"org.apache.openjpa.persistence.compat.TestMethodQLQuery.echo(StoreContext,ClassMetaData,boolean,Map,FetchConfiguration)",18,24
"org.apache.openjpa.persistence.compat.TestMethodQLQuery.voidMeth(StoreContext,ClassMetaData,boolean,Map,FetchConfiguration)",12,13
"org.apache.openjpa.persistence.compat.TestMethodQLQuery.invalidReturnMeth(StoreContext,ClassMetaData,boolean,Map,FetchConfiguration)",14,15
"org.apache.openjpa.meta.SequenceMetaData.SequenceMetaData(String,MetaDataRepository)",9,17
org.apache.openjpa.meta.SequenceMetaData.getRepository(),5,7
org.apache.openjpa.meta.SequenceMetaData.getName(),3,5
org.apache.openjpa.meta.SequenceMetaData.getSourceFile(),2,4
org.apache.openjpa.meta.SequenceMetaData.getSourceScope(),3,4
org.apache.openjpa.meta.SequenceMetaData.getSourceType(),3,4
"org.apache.openjpa.meta.SequenceMetaData.setSource(File,Object,int)",7,16
org.apache.openjpa.meta.SequenceMetaData.getLineNumber(),2,3
org.apache.openjpa.meta.SequenceMetaData.setLineNumber(int),3,8
org.apache.openjpa.meta.SequenceMetaData.getColNumber(),2,3
org.apache.openjpa.meta.SequenceMetaData.setColNumber(int),3,8
org.apache.openjpa.meta.SequenceMetaData.getResourceName(),3,4
org.apache.openjpa.meta.SequenceMetaData.getType(),2,4
org.apache.openjpa.meta.SequenceMetaData.setType(int),3,7
org.apache.openjpa.meta.SequenceMetaData.getSequence(),3,5
org.apache.openjpa.meta.SequenceMetaData.setSequence(String),4,8
org.apache.openjpa.meta.SequenceMetaData.getIncrement(),2,4
org.apache.openjpa.meta.SequenceMetaData.setIncrement(int),3,7
org.apache.openjpa.meta.SequenceMetaData.getAllocate(),3,5
org.apache.openjpa.meta.SequenceMetaData.setAllocate(int),4,8
org.apache.openjpa.meta.SequenceMetaData.getInitialValue(),3,6
org.apache.openjpa.meta.SequenceMetaData.setInitialValue(int),4,9
org.apache.openjpa.meta.SequenceMetaData.getSequencePlugin(),6,9
org.apache.openjpa.meta.SequenceMetaData.setSequencePlugin(String),7,12
org.apache.openjpa.meta.SequenceMetaData.getSequenceFactory(),10,15
org.apache.openjpa.meta.SequenceMetaData.setSequenceFactory(SequenceFactory),11,18
org.apache.openjpa.meta.SequenceMetaData.getInstance(ClassLoader),7,14
org.apache.openjpa.meta.SequenceMetaData.instantiate(ClassLoader),63,165
org.apache.openjpa.meta.SequenceMetaData.setSchema(String),4,9
org.apache.openjpa.meta.SequenceMetaData.getSchema(),2,3
org.apache.openjpa.meta.SequenceMetaData.setCatalog(String),4,9
org.apache.openjpa.meta.SequenceMetaData.getCatalog(),2,3
org.apache.openjpa.meta.SequenceMetaData.newPluginValue(String),10,18
org.apache.openjpa.meta.SequenceMetaData.addStandardProperties(StringBuilder),18,54
org.apache.openjpa.meta.SequenceMetaData.wrapValue(String),15,20
"org.apache.openjpa.meta.SequenceMetaData.appendProperty(StringBuilder,String,String)",14,31
"org.apache.openjpa.meta.SequenceMetaData.appendProperty(StringBuilder,String,int)",12,24
org.apache.openjpa.meta.SequenceMetaData.close(),8,13
org.apache.openjpa.meta.SequenceMetaData.toString(),2,3
org.apache.openjpa.meta.SequenceMetaData.getComments(),3,6
org.apache.openjpa.meta.SequenceMetaData.setComments(String[]),3,6
"org.apache.openjpa.meta.SequenceMetaData.SequenceFactory.toSequence(Class,String)",6,6
org.apache.openjpa.util.ObjectExistsException.ObjectExistsException(String),5,6
org.apache.openjpa.util.ObjectExistsException.ObjectExistsException(Message),5,6
org.apache.openjpa.util.ObjectExistsException.getSubtype(),3,3
org.apache.openjpa.persistence.compat.MappedSuper.getVersion(),1,2
org.apache.openjpa.persistence.compat.MappedSuper.setVersion(int),2,5
org.apache.openjpa.persistence.compat.MappedSuper.getLastUpdateDate(),2,5
org.apache.openjpa.persistence.compat.MappedSuper.setLastUpdateDate(Date),3,10
org.apache.openjpa.persistence.compat.MappedSuper.getId(),0,0
org.apache.openjpa.persistence.compat.MappedSuper.setId(int),1,1
org.apache.openjpa.persistence.compat.MappedSuper.getEntityB(),1,3
org.apache.openjpa.persistence.compat.MappedSuper.setEntityB(EntityB),2,6
org.apache.openjpa.persistence.query.UnaryConditionalOperator.UnaryConditionalOperator(String),5,7
org.apache.openjpa.persistence.query.UnaryConditionalOperator.toString(),2,3
org.apache.openjpa.persistence.conf.TestOverrideNonJtaDataSource.init(String),20,34
org.apache.openjpa.persistence.conf.TestOverrideNonJtaDataSource.setUp(),37,58
"org.apache.openjpa.persistence.conf.TestOverrideNonJtaDataSource.getEmf(String,String)",8,15
"org.apache.openjpa.persistence.conf.TestOverrideNonJtaDataSource.getEmf(String,String,boolean)",29,74
"org.apache.openjpa.persistence.conf.TestOverrideNonJtaDataSource.getEm(EntityManagerFactory,String,String)",12,26
org.apache.openjpa.persistence.conf.TestOverrideNonJtaDataSource.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.conf.TestOverrideNonJtaDataSource.testConnectionFactoryName(),18,21
org.apache.openjpa.persistence.conf.TestOverrideNonJtaDataSource.testJtaDataSource(),14,22
"org.apache.openjpa.persistence.conf.TestOverrideNonJtaDataSource.overridePropertyOnEM(String,String)",37,121
org.apache.openjpa.persistence.conf.TestOverrideNonJtaDataSource.testInvalidCfName(),30,62
org.apache.openjpa.persistence.conf.TestOverrideNonJtaDataSource.testDataCache(),24,39
org.apache.openjpa.persistence.conf.TestOverrideNonJtaDataSource.testQueryCache(),24,41
org.apache.openjpa.persistence.conf.TestOverrideNonJtaDataSource.testSyncMappings(),27,45
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.setUp(),13,32
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.classArray(Class),2,3
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.testSimpleDefaultInheritance(),40,146
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.testMappedSuperclass(),36,91
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.testTwoLevelInheritance(),50,170
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.testManagedInterface(),43,108
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.testManagedInterfaceAndBase(),46,145
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.testSubclassSpecifiedInheritance(),45,97
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.testCircularInheritedRelationships(),56,221
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.testAbstractEntityInheritance(),42,112
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.testMidNonEntityInheritance(),44,106
org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.testFinder(),22,102
"org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.verifyDtypeColumnEntriesAndMapping(EntityManager,String,int,Class)",39,85
"org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.verifyNoDypeColumn(EntityManager,String)",22,40
"org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.verifyInheritanceQueryResult(EntityManager,String,Class[],int)",49,122
"org.apache.openjpa.persistence.inheritance.TestDefaultInheritanceStrategy.verifyInheritanceFinderResult(EntityManager,Class,int)",10,16
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCLeafC.getLeafCData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCLeafC.setLeafCData(String),4,10
"org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.SelectResultObjectProvider(SelectExecutor,JDBCStore,JDBCFetchConfiguration)",15,34
org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.getSelect(),3,4
org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.getStore(),2,4
org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.getFetchConfiguration(),3,6
org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.getResult(),2,3
org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.supportsRandomAccess(),15,24
org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.open(),7,7
org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.next(),3,3
org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.absolute(int),5,7
org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.size(),20,42
org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.setSize(int),7,13
org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.reset(),4,4
org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.close(),2,5
org.apache.openjpa.jdbc.kernel.SelectResultObjectProvider.handleCheckedException(Exception),11,19
org.apache.openjpa.persistence.inheritance.jointable.Department.Department(),1,1
org.apache.openjpa.persistence.inheritance.jointable.Department.Department(String),5,6
org.apache.openjpa.persistence.inheritance.jointable.Department.setDescription(String),3,6
org.apache.openjpa.persistence.inheritance.jointable.Department.getDescription(),2,3
org.apache.openjpa.persistence.inheritance.jointable.Department.getOID(),1,2
org.apache.openjpa.persistence.inheritance.jointable.Department.setOID(long),2,5
org.apache.openjpa.persistence.inheritance.jointable.Department.getDeptProp1(),3,5
org.apache.openjpa.persistence.inheritance.jointable.Department.setDeptProp1(String),4,10
org.apache.openjpa.persistence.inheritance.jointable.Department.getCtrs(),5,6
org.apache.openjpa.persistence.inheritance.jointable.Department.setCtrs(java.util.Collection<Contractor>),6,9
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity3.getId(),0,0
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity3.setId(long),1,1
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity3.getEmbedVal3s(),4,7
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity3.setEmbedVal3s(List<EmbedValue3>),5,12
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity3.getEmbedVal3(),3,6
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity3.setEmbedVal3(EmbedValue3),4,11
org.apache.openjpa.persistence.criteria.StringComparison.isReservedWord(String),5,6
org.apache.openjpa.persistence.criteria.StringComparison.tokenize(String),18,64
"org.apache.openjpa.persistence.criteria.StringComparison.compare(String,String)",19,45
org.apache.openjpa.persistence.criteria.StringComparison.main(String[]),19,43
org.apache.openjpa.persistence.jdbc.common.apps.DFGTest.getDFGField(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.DFGTest.setDFGField(int),3,9
org.apache.openjpa.persistence.jdbc.common.apps.DFGTest.getNonDFGField(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.DFGTest.setNonDFGField(int),3,9
org.apache.openjpa.jdbc.kernel.exps.BinaryOpExpState.BinaryOpExpState(),2,2
"org.apache.openjpa.jdbc.kernel.exps.BinaryOpExpState.BinaryOpExpState(Joins,ExpState,ExpState)",3,7
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.LRSCompoundPC(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.LRSCompoundPC(String),6,9
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.newInstance(String),7,10
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.getStringSet(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.setStringSet(Set),2,10
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.getRelSet(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.setRelSet(Set),2,10
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.getStringCollection(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.setStringCollection(Collection),3,10
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.getRelCollection(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.setRelCollection(Collection),3,10
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.getStringMap(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.setStringMap(Map),3,10
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.getRelMap(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.setRelMap(Map),3,10
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LRSCompoundPC.compareTo(Object),6,9
org.apache.openjpa.util.OpenJPAId.OpenJPAId(),1,1
org.apache.openjpa.util.OpenJPAId.OpenJPAId(Class),2,4
"org.apache.openjpa.util.OpenJPAId.OpenJPAId(Class,boolean)",3,7
org.apache.openjpa.util.OpenJPAId.getType(),4,5
org.apache.openjpa.util.OpenJPAId.hasSubclasses(),6,6
org.apache.openjpa.util.OpenJPAId.setManagedInstanceType(Class),6,15
"org.apache.openjpa.util.OpenJPAId.setManagedInstanceType(Class,boolean)",7,15
org.apache.openjpa.util.OpenJPAId.getIdObject(),3,5
org.apache.openjpa.util.OpenJPAId.idHash(),3,4
org.apache.openjpa.util.OpenJPAId.idEquals(OpenJPAId),4,4
org.apache.openjpa.util.OpenJPAId.hashCode(),15,59
org.apache.openjpa.util.OpenJPAId.equals(Object),6,12
org.apache.openjpa.util.OpenJPAId.toString(),6,8
org.apache.openjpa.util.OpenJPAId.compareTo(Object),4,7
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity1.Entity1(),1,1
"org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity1.Entity1(long,String,int)",3,11
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity1.getPk(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity1.setStringField(String),4,8
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity1.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity1.setIntField(int),3,5
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity1.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity1.setEntity2Field(Entity2),4,8
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity1.getEntity2Field(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity1.toString(),2,8
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Division.getOffices(),3,4
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Division.setOffices(Collection<Office>),4,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Division.addOffice(Office),3,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Division.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Division.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Division.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Division.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Division.equals(Object),4,8
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Division.hashCode(),4,11
org.apache.openjpa.kernel.Seq.setType(int),3,6
"org.apache.openjpa.kernel.Seq.next(StoreContext,ClassMetaData)",14,21
"org.apache.openjpa.kernel.Seq.current(StoreContext,ClassMetaData)",15,24
"org.apache.openjpa.kernel.Seq.allocate(int,StoreContext,ClassMetaData)",17,24
org.apache.openjpa.kernel.Seq.close(),4,4
org.apache.openjpa.kernel.exps.AbstractExpressionVisitor.enter(Expression),3,3
org.apache.openjpa.kernel.exps.AbstractExpressionVisitor.exit(Expression),3,3
org.apache.openjpa.kernel.exps.AbstractExpressionVisitor.enter(Value),3,3
org.apache.openjpa.kernel.exps.AbstractExpressionVisitor.exit(Value),3,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.setUp(),9,12
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.testQueryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.setCandidate(Query,Class)",14,37
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.queryQualifiedId(boolean),24,87
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.createObj(EntityManagerFactory),15,27
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.createCompany(EntityManager,int)",14,23
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.createDivision(EntityManager,int)",6,10
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.createVicePresident(EntityManager,int)",7,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.findObj(EntityManagerFactory),13,35
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.updateObj(EntityManager,Company)",28,74
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.deleteObj(EntityManager,Company)",10,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.assertCompany(Company),5,8
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.assertDivision(Division),3,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.assertVicePresident(VicePresident),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.queryObj(EntityManagerFactory),10,16
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.queryCompany(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.queryDivision(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.TestSpec10_1_27_Ex4.queryVicePresident(EntityManagerFactory),17,39
org.apache.openjpa.jdbc.meta.strats.AbstractClassStrategy.setClassMapping(ClassMapping),4,6
org.apache.openjpa.jdbc.meta.strats.AbstractClassStrategy.isPrimaryKeyObjectId(boolean),3,3
"org.apache.openjpa.jdbc.meta.strats.AbstractClassStrategy.joinSuperclass(Joins,boolean)",3,6
"org.apache.openjpa.jdbc.meta.strats.AbstractClassStrategy.supportsEagerSelect(Select,OpenJPAStateManager,JDBCStore,ClassMapping,JDBCFetchConfiguration)",12,16
"org.apache.openjpa.jdbc.meta.strats.AbstractClassStrategy.customLoad(JDBCStore,boolean,JDBCFetchConfiguration,long,long)",14,18
"org.apache.openjpa.jdbc.meta.strats.AbstractClassStrategy.customLoad(OpenJPAStateManager,JDBCStore,PCState,JDBCFetchConfiguration)",11,15
"org.apache.openjpa.jdbc.meta.strats.AbstractClassStrategy.customLoad(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result)",11,15
"org.apache.openjpa.persistence.query.NavigationPath.NavigationPath(QueryDefinitionImpl,AbstractPath,String)",9,14
org.apache.openjpa.persistence.query.NavigationPath.getLastSegment(),2,4
org.apache.openjpa.persistence.query.NavigationPath.getAliasHint(AliasContext),6,7
org.apache.openjpa.persistence.query.NavigationPath.asProjection(AliasContext),9,21
org.apache.openjpa.persistence.query.NavigationPath.asExpression(AliasContext),8,10
org.apache.openjpa.persistence.query.NavigationPath.asJoinable(AliasContext),7,10
org.apache.openjpa.persistence.query.NavigationPath.toString(),4,6
org.apache.openjpa.persistence.query.QueryBuilderImpl.QueryBuilderImpl(OpenJPAEntityManagerFactorySPI),9,11
org.apache.openjpa.persistence.query.QueryBuilderImpl.createQueryDefinition(),6,12
org.apache.openjpa.persistence.query.QueryBuilderImpl.createQueryDefinition(Class),9,16
org.apache.openjpa.persistence.query.QueryBuilderImpl.createSubqueryDefinition(PathExpression),13,22
org.apache.openjpa.persistence.query.QueryBuilderImpl.toJPQL(QueryDefinition),19,36
org.apache.openjpa.persistence.query.QueryBuilderImpl.createQueryDefinition(String),8,10
org.apache.openjpa.persistence.query.QueryBuilderImpl.createQueryDefinition(Query),7,10
org.apache.openjpa.persistence.query.ValueExpression.ValueExpression(AbstractDomainObject),7,9
org.apache.openjpa.persistence.criteria.TestStringCriteria.testCriteria(),15,34
org.apache.openjpa.persistence.criteria.TestStringCriteria.testJoins1(),23,52
org.apache.openjpa.persistence.criteria.TestStringCriteria.testJoins2(),17,31
org.apache.openjpa.persistence.criteria.TestStringCriteria.testFetchJoins(),18,31
org.apache.openjpa.persistence.criteria.TestStringCriteria.testPathNavigation(),23,47
org.apache.openjpa.persistence.criteria.TestStringCriteria.testKey(),19,40
org.apache.openjpa.persistence.criteria.TestStringCriteria.testRestrictQueryResult(),22,47
org.apache.openjpa.persistence.criteria.TestStringCriteria.testIsEmpty(),13,20
org.apache.openjpa.persistence.criteria.TestStringCriteria.testExpressions(),31,61
org.apache.openjpa.persistence.criteria.TestStringCriteria.testIndex(),18,45
org.apache.openjpa.persistence.criteria.TestStringCriteria.testSum(),21,44
org.apache.openjpa.persistence.criteria.TestStringCriteria.testSize(),17,28
org.apache.openjpa.persistence.criteria.TestStringCriteria.testCase(),20,43
org.apache.openjpa.persistence.criteria.TestStringCriteria.testLiterals(),15,25
org.apache.openjpa.persistence.criteria.TestStringCriteria.testParameters(),20,35
org.apache.openjpa.persistence.criteria.TestStringCriteria.testParameters().$1.decorate(Query),5,5
org.apache.openjpa.persistence.criteria.TestStringCriteria.testSelectList(),27,54
org.apache.openjpa.persistence.criteria.TestStringCriteria.TestContructor(),18,38
org.apache.openjpa.persistence.criteria.TestStringCriteria.testSubquery1(),14,42
org.apache.openjpa.persistence.criteria.TestStringCriteria.testSubquery2(),16,53
org.apache.openjpa.persistence.criteria.TestStringCriteria.testSubquery3(),17,47
org.apache.openjpa.persistence.criteria.TestStringCriteria.testSubquery4(),15,32
org.apache.openjpa.persistence.criteria.TestStringCriteria.testSubquery5(),19,39
org.apache.openjpa.persistence.criteria.TestStringCriteria.testSubquery6(),19,40
org.apache.openjpa.persistence.criteria.TestStringCriteria.testGroupByAndHaving(),18,34
org.apache.openjpa.persistence.criteria.TestStringCriteria.testOrdering1(),19,38
org.apache.openjpa.persistence.criteria.TestStringCriteria.testOrdering2(),20,45
org.apache.openjpa.persistence.criteria.TestStringCriteria.testOrdering3(),31,73
"org.apache.openjpa.kernel.exps.GreaterThanExpression.GreaterThanExpression(Val,Val)",6,11
"org.apache.openjpa.kernel.exps.GreaterThanExpression.compare(Object,Object)",3,6
org.apache.openjpa.kernel.exps.SubQ.SubQ(String),4,8
org.apache.openjpa.kernel.exps.SubQ.getSelect(),2,2
org.apache.openjpa.kernel.exps.SubQ.getCandidateAlias(),3,4
org.apache.openjpa.kernel.exps.SubQ.setSubqAlias(String),4,10
org.apache.openjpa.kernel.exps.SubQ.getSubqAlias(),3,5
org.apache.openjpa.kernel.exps.SubQ.setQueryExpressions(QueryExpressions),3,5
org.apache.openjpa.kernel.exps.SubQ.getType(),1,2
org.apache.openjpa.kernel.exps.SubQ.setImplicitType(Class),3,6
"org.apache.openjpa.kernel.exps.SubQ.eval(Object,Object,StoreContext,Object[])",13,16
org.apache.openjpa.persistence.HintHandler.HintHandler(QueryImpl<>),5,7
"org.apache.openjpa.persistence.HintHandler.record(String,Object)",31,65
"org.apache.openjpa.persistence.HintHandler.setHint(String,Object)",48,233
org.apache.openjpa.persistence.HintHandler.isKnownPrefix(String),10,19
org.apache.openjpa.persistence.HintHandler.getSupportedHints(),11,20
org.apache.openjpa.persistence.HintHandler.getHints(),11,16
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.setUp(),11,14
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.setCandidate(Query,Class)",17,43
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.queryQualifiedId(boolean),35,141
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.testQueryObject(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.getSql(),3,4
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.getSqlCount(),2,4
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.createObj(),16,27
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.createEmployee(EntityManager,int)",15,41
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.createDivision(EntityManager,int)",15,32
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.findObj(),9,15
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.queryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.queryPhoneNumber(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.queryEmployee(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.assertEmployee(Employee),10,27
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.assertPhoneNumber(PhoneNumber),10,20
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.checkPhoneMap(Map<String,PhoneNumber>,Map<String,PhoneNumber>)",14,39
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.TestMany2ManyMapEx4.checkEmpMap(Map<Division,Employee>,Map<Division,Employee>)",15,39
org.apache.openjpa.persistence.blob.TestBlobs.setUp(),11,12
org.apache.openjpa.persistence.blob.TestBlobs.cleanup(),14,19
org.apache.openjpa.persistence.blob.TestBlobs.populate(),18,67
org.apache.openjpa.persistence.blob.TestBlobs.testNotNullBlobQuery(),18,37
org.apache.openjpa.persistence.blob.TestBlobs.testNullBlobQuery(),18,37
org.apache.openjpa.persistence.blob.TestBlobs.testNotNullLobQuery(),18,37
org.apache.openjpa.persistence.blob.TestBlobs.testNullLobQuery(),18,37
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimId.setUp(),29,35
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimId.tearDown(),3,4
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimId.createEntityF(),15,65
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimId.testCreateF(),9,12
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimId.testCreateF2(),15,20
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimId.runQueries(),7,9
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimId.queryOnEntityOnly(),11,21
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimId.queryOnColumnValue(),14,24
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimId.queryCollection(),15,25
jpa.tools.swing.AttributeView.AttributeView(Attribute<>),11,22
jpa.tools.swing.AttributeView.getAttribute(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.setUp(),9,12
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.testQueryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.setCandidate(Query,Class)",14,37
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.queryQualifiedId(boolean),24,87
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.createObj(EntityManagerFactory),15,27
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.createCompany(EntityManager,int)",14,25
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.createDivision(EntityManager,int)",6,10
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.createVicePresident(EntityManager,int)",7,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.findObj(EntityManagerFactory),13,37
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.updateObj1(EntityManager,Company)",26,63
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.updateObj(EntityManager,Company)",28,74
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.deleteObj(EntityManager,Company)",10,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.assertCompany(Company),5,8
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.assertDivision(Division),3,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.assertVicePresident(VicePresident),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.queryObj(EntityManagerFactory),10,16
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.queryCompany(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.queryDivision(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.TestSpec10_1_27_Ex5.queryVicePresident(EntityManagerFactory),17,39
org.apache.openjpa.persistence.delimited.identifiers.Dog.Dog(),1,1
org.apache.openjpa.persistence.delimited.identifiers.Dog.Dog(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimitedJoinAnnotations.setUp(),33,72
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimitedJoinAnnotations.tearDown(),5,6
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimitedJoinAnnotations.createCandD(int),9,61
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimitedJoinAnnotations.testCreate(),12,23
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimitedJoinAnnotations.runQueries(),9,15
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimitedJoinAnnotations.queryJoinTable(),13,24
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimitedJoinAnnotations.queryJoinColumn(),13,24
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimitedJoinAnnotations.querySecondaryTableValue(),15,26
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimitedJoinAnnotations.queryMapValue(),13,23
org.apache.openjpa.persistence.delimited.identifiers.xml.Pontiac2.Pontiac2(),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.Pontiac2.Pontiac2(int),1,1
org.apache.openjpa.persistence.embed.TestEmbeddable.setUp(),48,135
org.apache.openjpa.persistence.embed.TestEmbeddable.testGroupByEmbed(),26,46
org.apache.openjpa.persistence.embed.TestEmbeddable.testKeyEmbeddableCompare(),35,68
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Embed_Coll_Map(),6,10
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Embed_Single_Coll(),35,115
org.apache.openjpa.persistence.embed.TestEmbeddable.testSettingEmbeddableMultipleTimesOnManagedEntity(),13,36
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Embed_Coll_Map(),18,34
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Coll_String(),6,15
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Embed_ToOne(),5,11
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Embed_MappedToOne(),6,15
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Coll_Embed_ToOne(),6,15
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Embed_ToMany(),5,11
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Embed_Embed_ToMany(),5,15
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Embed_Coll_Integer(),7,19
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Embed_Embed(),5,15
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Coll_Embed_Embed(),6,19
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Embed_Coll_Embed(),6,19
org.apache.openjpa.persistence.embed.TestEmbeddable.testEmployee(),5,10
org.apache.openjpa.persistence.embed.TestEmbeddable.testMapKey(),6,14
org.apache.openjpa.persistence.embed.TestEmbeddable.testMapKeyClass(),6,14
org.apache.openjpa.persistence.embed.TestEmbeddable.testMapKeyEnumerated(),6,13
org.apache.openjpa.persistence.embed.TestEmbeddable.testMapKeyTemporal(),7,18
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Embed_MappedToOneCascadeDelete(),8,18
org.apache.openjpa.persistence.embed.TestEmbeddable.testEmbeddableContainingRelationWithGeneratedKey(),9,15
org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Coll_String(),15,34
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Coll_String(EntityManager,int)",23,45
org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_ToOne(),11,25
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_ToOne(EntityManager,int)",8,22
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEmbed_ToOne(EntityManager,int)",7,30
org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_MappedToOne(),12,28
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_MappedToOne(EntityManager,int)",9,27
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEmbed_MappedToOne(EntityManager,int,EntityA_Embed_MappedToOne)",8,40
org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_MappedToOneCascadeDelete(),14,34
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_MappedToOneCascadeDelete(EntityManager,int)",11,37
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEmbed_MappedToOneDeleteCascade(EntityManager,int,EntityA_Embed_MappedToOneCascadeDelete)",10,50
org.apache.openjpa.persistence.embed.TestEmbeddable.updateEntityA_Embed_MappedToOneCascadeDelete(),15,46
"org.apache.openjpa.persistence.embed.TestEmbeddable.updateEntityA_Embed_MappedToOneCascadeDelete(EntityManager,int)",12,36
org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Coll_Embed_ToOne(),12,28
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Coll_Embed_ToOne(EntityManager,int)",12,27
org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_ToMany(),11,25
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_ToMany(EntityManager,int)",8,22
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEmbed_ToMany(EntityManager,int)",10,32
org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_Embed_ToMany(),11,24
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_Embed_ToMany(EntityManager,int)",8,27
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEmbed_Embed_ToMany(EntityManager,int)",6,30
org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_Coll_Integer(),13,31
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_Coll_Integer(EntityManager,int)",10,32
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEmbed_Coll_Integer(EntityManager,int)",12,32
org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_Embed(),11,28
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_Embed(EntityManager,int)",8,27
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEmbed_Embed(int,int)",5,33
org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed(),11,22
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed(EntityManager,int)",8,22
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEmbed(int,int)",5,20
org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Coll_Embed_Embed(),12,31
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Coll_Embed_Embed(EntityManager,int)",12,32
org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_Coll_Embed(),12,31
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_Coll_Embed(EntityManager,int)",9,32
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEmbed_Coll_Embed(EntityManager,int)",10,36
org.apache.openjpa.persistence.embed.TestEmbeddable.createEmployeeObj(),16,28
org.apache.openjpa.persistence.embed.TestEmbeddable.createProgramManagers(EntityManager),7,12
"org.apache.openjpa.persistence.embed.TestEmbeddable.createProgramManager(EntityManager,int)",15,44
org.apache.openjpa.persistence.embed.TestEmbeddable.createEmployees(EntityManager),8,13
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEmployee(EntityManager,int)",23,80
org.apache.openjpa.persistence.embed.TestEmbeddable.createPhoneNumbers(EntityManager),8,12
"org.apache.openjpa.persistence.embed.TestEmbeddable.createParkingSpot(EntityManager,int)",8,16
org.apache.openjpa.persistence.embed.TestEmbeddable.findEmployeeObj(),11,31
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEmployeeObj(),9,18
org.apache.openjpa.persistence.embed.TestEmbeddable.queryParkingSpot(EntityManagerFactory),16,37
org.apache.openjpa.persistence.embed.TestEmbeddable.queryProgramManager(EntityManagerFactory),16,39
org.apache.openjpa.persistence.embed.TestEmbeddable.queryPhoneNumber(EntityManagerFactory),15,32
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEmployeeObj(EntityManagerFactory),25,53
org.apache.openjpa.persistence.embed.TestEmbeddable.assertProgramManager(ProgramManager),9,15
org.apache.openjpa.persistence.embed.TestEmbeddable.assertEmployee(Employee),23,54
org.apache.openjpa.persistence.embed.TestEmbeddable.assertPhoneNumber(PhoneNumber),7,10
org.apache.openjpa.persistence.embed.TestEmbeddable.assertParkingSpot(ParkingSpot),6,9
org.apache.openjpa.persistence.embed.TestEmbeddable.findEntityA_Coll_String(),8,23
org.apache.openjpa.persistence.embed.TestEmbeddable.findEntityA_Embed_ToOne(),13,27
org.apache.openjpa.persistence.embed.TestEmbeddable.testLazyFetchEmbed(),31,84
org.apache.openjpa.persistence.embed.TestEmbeddable.findEntityA_Embed_MappedToOne(),8,23
org.apache.openjpa.persistence.embed.TestEmbeddable.findEntityA_Coll_Embed_ToOne(),8,23
org.apache.openjpa.persistence.embed.TestEmbeddable.findEntityA_Embed_ToMany(),7,18
org.apache.openjpa.persistence.embed.TestEmbeddable.findEntityA_Embed_Embed_ToMany(),7,23
org.apache.openjpa.persistence.embed.TestEmbeddable.findEntityA_Embed_Coll_Integer(),9,28
org.apache.openjpa.persistence.embed.TestEmbeddable.findEntityA_Embed_Embed(),7,23
org.apache.openjpa.persistence.embed.TestEmbeddable.findEntityA_Coll_Embed_Embed(),13,42
org.apache.openjpa.persistence.embed.TestEmbeddable.findEntityA_Embed_Coll_Embed(),8,28
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEntityA_Coll_String(EntityA_Coll_String),14,53
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEntityA_Embed_ToOne(EntityA_Embed_ToOne),7,24
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEntityA_Embed_MappedToOne(EntityA_Embed_MappedToOne),8,29
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEntityA_Coll_Embed_ToOne(EntityA_Coll_Embed_ToOne),11,32
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEmbed_ToOne(Embed_ToOne),6,31
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEmbed_MappedToOne(Embed_MappedToOne),7,34
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEntityA_Embed_ToMany(EntityA_Embed_ToMany),7,24
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEmbed_ToMany(Embed_ToMany),7,33
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEntityA_Embed_Embed_ToMany(EntityA_Embed_Embed_ToMany),7,29
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEmbed_Embed_ToMany(Embed_Embed_ToMany),4,28
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEntityA_Embed_Coll_Integer(EntityA_Embed_Coll_Integer),10,33
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEmbed_Integers(Embed_Coll_Integer),10,33
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEntityA_Embed_Embed(EntityA_Embed_Embed),7,29
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEmbed_Embed(Embed_Embed),4,28
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEmbed(Embed),4,19
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEntityA_Coll_Embed_Embed(EntityA_Coll_Embed_Embed),10,37
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEntityA_Embed_Coll_Embed(EntityA_Embed_Coll_Embed),8,34
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEmbed_Coll_Embed(Embed_Coll_Embed),7,34
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Coll_String(),29,136
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Embed_ToOne(),23,101
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Embed_MappedToOne(),31,145
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Coll_Embed_ToOne(),34,131
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Embed_ToMany(),26,123
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Embed_Embed_ToMany(),27,170
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Embed_Coll_Integer(),31,162
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Embed_Embed(),28,112
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Coll_Embed_Embed(),54,445
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Embed_Coll_Embed(),37,217
org.apache.openjpa.persistence.embed.TestEmbeddable.createObjMapKey(),17,35
org.apache.openjpa.persistence.embed.TestEmbeddable.createObjMapKeyEnumerated(),22,73
org.apache.openjpa.persistence.embed.TestEmbeddable.createObjMapKeyTemporal(),26,77
org.apache.openjpa.persistence.embed.TestEmbeddable.createObjMapKeyClass(),34,76
"org.apache.openjpa.persistence.embed.TestEmbeddable.createItem1(EntityManager,int)",11,19
"org.apache.openjpa.persistence.embed.TestEmbeddable.createItem2(EntityManager,int)",11,19
"org.apache.openjpa.persistence.embed.TestEmbeddable.createItem3(EntityManager,int)",11,19
"org.apache.openjpa.persistence.embed.TestEmbeddable.createCompany1(EntityManager,int)",14,23
"org.apache.openjpa.persistence.embed.TestEmbeddable.createCompany2(EntityManager,int)",14,23
"org.apache.openjpa.persistence.embed.TestEmbeddable.createDivision(EntityManager,int)",6,10
"org.apache.openjpa.persistence.embed.TestEmbeddable.createVicePresident(EntityManager,int)",7,14
"org.apache.openjpa.persistence.embed.TestEmbeddable.createDepartment1(EntityManager,int)",15,31
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEmployee1(EntityManager,int)",6,9
"org.apache.openjpa.persistence.embed.TestEmbeddable.createDepartment2(EntityManager,int)",12,21
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEmployee2(EntityManager,int)",5,8
"org.apache.openjpa.persistence.embed.TestEmbeddable.createDepartment3(EntityManager,int)",12,21
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEmployee3(EntityManager,int)",7,17
org.apache.openjpa.persistence.embed.TestEmbeddable.findObjMapKey(),14,42
org.apache.openjpa.persistence.embed.TestEmbeddable.assertDepartment1(Department1),14,27
org.apache.openjpa.persistence.embed.TestEmbeddable.assertDepartment2(Department2),10,20
org.apache.openjpa.persistence.embed.TestEmbeddable.assertDepartment3(Department3),11,25
org.apache.openjpa.persistence.embed.TestEmbeddable.assertEmployee1(Employee1),3,6
org.apache.openjpa.persistence.embed.TestEmbeddable.assertEmployee2(Employee2),3,7
org.apache.openjpa.persistence.embed.TestEmbeddable.assertEmployee3(Employee3),3,6
org.apache.openjpa.persistence.embed.TestEmbeddable.queryObjMapKey(),7,10
org.apache.openjpa.persistence.embed.TestEmbeddable.queryDepartment(EntityManagerFactory),22,92
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEmployee(EntityManagerFactory),15,54
org.apache.openjpa.persistence.embed.TestEmbeddable.findObjMapKeyClass(),13,40
org.apache.openjpa.persistence.embed.TestEmbeddable.assertItem1(Item1),6,14
org.apache.openjpa.persistence.embed.TestEmbeddable.assertItem2(Item2),6,14
org.apache.openjpa.persistence.embed.TestEmbeddable.assertItem3(Item3),6,14
org.apache.openjpa.persistence.embed.TestEmbeddable.assertCompany1(Company1),5,8
org.apache.openjpa.persistence.embed.TestEmbeddable.assertCompany2(Company2),5,8
org.apache.openjpa.persistence.embed.TestEmbeddable.assertDivision(Division),3,5
org.apache.openjpa.persistence.embed.TestEmbeddable.assertVicePresident(VicePresident),4,7
org.apache.openjpa.persistence.embed.TestEmbeddable.queryObjMapKeyClass(),10,17
org.apache.openjpa.persistence.embed.TestEmbeddable.findObjMapKeyEnumerated(),15,68
org.apache.openjpa.persistence.embed.TestEmbeddable.findObjMapKeyTemporal(),13,18
org.apache.openjpa.persistence.embed.TestEmbeddable.queryObjMapKeyTemporal(),26,43
org.apache.openjpa.persistence.embed.TestEmbeddable.queryItem(EntityManagerFactory),24,177
org.apache.openjpa.persistence.embed.TestEmbeddable.queryCompany(EntityManagerFactory),26,128
org.apache.openjpa.persistence.embed.TestEmbeddable.queryDivision(EntityManagerFactory),15,32
org.apache.openjpa.persistence.embed.TestEmbeddable.queryVicePresident(EntityManagerFactory),17,39
org.apache.openjpa.persistence.embed.TestEmbeddable.createEmbeddableContainingRelationWithGeneratedKey(),51,112
"org.apache.openjpa.persistence.embed.TestEmbeddable.recreateOracleArtifacts(OracleDictionary,JDBCConfiguration)",39,66
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Embed_Complex(),10,26
org.apache.openjpa.persistence.embed.TestEmbeddable.testEntityA_Embed_Complex2(),14,40
org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_Complex(EntityManager),11,25
"org.apache.openjpa.persistence.embed.TestEmbeddable.createEntityA_Embed_Complex(EntityManager,int)",30,88
org.apache.openjpa.persistence.embed.TestEmbeddable.checkEntityA_Embed_Complex(EntityA_Embed_Complex),30,117
org.apache.openjpa.persistence.embed.TestEmbeddable.findEntityA_Embed_Complex(EntityManager),11,29
org.apache.openjpa.persistence.embed.TestEmbeddable.updateEntityA_Embed_Complex(EntityManager),24,47
org.apache.openjpa.persistence.embed.TestEmbeddable.removeEntityA_Embed_Complex(EntityManager),17,42
org.apache.openjpa.persistence.embed.TestEmbeddable.queryEntityA_Embed_Complex(EntityManager),27,97
org.apache.openjpa.persistence.embed.TestEmbeddable.testEmbeddableCollUsingArraysAsList(),33,102
org.apache.openjpa.persistence.embed.TestEmbeddable.testDefaultNameForElementCollection(),35,92
"org.apache.openjpa.kernel.SavepointFieldManager.SavepointFieldManager(StateManagerImpl,boolean)",40,80
org.apache.openjpa.kernel.SavepointFieldManager.getStateManager(),3,6
org.apache.openjpa.kernel.SavepointFieldManager.getVersion(),2,3
org.apache.openjpa.kernel.SavepointFieldManager.getLoadVersion(),3,5
org.apache.openjpa.kernel.SavepointFieldManager.getCopy(),7,11
org.apache.openjpa.kernel.SavepointFieldManager.getPCState(),2,2
org.apache.openjpa.kernel.SavepointFieldManager.getLoaded(),6,7
org.apache.openjpa.kernel.SavepointFieldManager.getDirty(),5,7
org.apache.openjpa.kernel.SavepointFieldManager.getFlushed(),6,7
org.apache.openjpa.kernel.SavepointFieldManager.storeField(FieldMetaData),27,73
org.apache.openjpa.kernel.SavepointFieldManager.restoreField(int),15,35
org.apache.openjpa.kernel.SavepointFieldManager.fetchObjectField(int),8,15
"org.apache.openjpa.kernel.SavepointFieldManager.storeObjectField(int,Object)",35,101
org.apache.openjpa.kernel.SavepointFieldManager.writeObject(ObjectOutputStream),7,13
org.apache.openjpa.kernel.SavepointFieldManager.readObject(ObjectInputStream),8,15
"org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.getPagedFields(Select,ClassMapping,JDBCStore,JDBCFetchConfiguration,int,long)",49,131
"org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.PagingResultObjectProvider(SelectExecutor,ClassMapping,JDBCStore,JDBCFetchConfiguration,BitSet,long)",30,66
"org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.PagingResultObjectProvider(SelectExecutor,ClassMapping[],JDBCStore,JDBCFetchConfiguration,BitSet[],long)",52,135
org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.getPageSize(),3,6
org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.open(),3,3
org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.next(),6,11
org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.absolute(int),5,13
org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.getResultObject(),7,12
org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.inPage(),8,17
org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.fillPage(),40,94
org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.loadEagerFields(),23,40
org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.executeEagerSelects(),19,64
"org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.executeEagerSelects(ClassMapping,BitSet,int,int)",63,188
"org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.createInContains(Select,DBDictionary,SQLBuffer,ClassMapping,Column[],int,int)",21,57
"org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.inContains(Select,SQLBuffer,ClassMapping,Column[],int,int)",21,42
"org.apache.openjpa.jdbc.kernel.PagingResultObjectProvider.orContains(Select,SQLBuffer,ClassMapping,Column[],int,int)",26,70
org.apache.openjpa.persistence.detach.Entity14.Entity14(),1,1
"org.apache.openjpa.persistence.detach.Entity14.Entity14(long,String)",3,5
org.apache.openjpa.persistence.detach.Entity14.getId(),0,0
org.apache.openjpa.persistence.detach.Entity14.setId(long),1,1
org.apache.openjpa.persistence.detach.Entity14.getName(),2,3
org.apache.openjpa.persistence.detach.Entity14.setName(String),3,6
org.apache.openjpa.persistence.detachment.DetachmentOneManyParent.getId(),0,0
org.apache.openjpa.persistence.detachment.DetachmentOneManyParent.getChildren(),4,5
org.apache.openjpa.persistence.detachment.DetachmentOneManyParent.addChild(DetachmentOneManyChild),6,11
org.apache.openjpa.persistence.detachment.DetachmentOneManyParent.getName(),2,3
org.apache.openjpa.persistence.detachment.DetachmentOneManyParent.setName(String),3,6
org.apache.openjpa.jdbc.schema.Sequence.Sequence(),2,2
"org.apache.openjpa.jdbc.schema.Sequence.Sequence(String,Schema)",8,19
"org.apache.openjpa.jdbc.schema.Sequence.Sequence(DBIdentifier,Schema)",5,16
org.apache.openjpa.jdbc.schema.Sequence.remove(),6,7
org.apache.openjpa.jdbc.schema.Sequence.getSchema(),2,5
org.apache.openjpa.jdbc.schema.Sequence.getSchemaName(),5,9
org.apache.openjpa.jdbc.schema.Sequence.getSchemaIdentifier(),3,8
org.apache.openjpa.jdbc.schema.Sequence.setSchemaName(String),10,21
org.apache.openjpa.jdbc.schema.Sequence.setSchemaIdentifier(DBIdentifier),7,12
org.apache.openjpa.jdbc.schema.Sequence.getName(),5,7
org.apache.openjpa.jdbc.schema.Sequence.getIdentifier(),2,5
org.apache.openjpa.jdbc.schema.Sequence.setName(String),10,17
org.apache.openjpa.jdbc.schema.Sequence.setIdentifier(DBIdentifier),7,10
org.apache.openjpa.jdbc.schema.Sequence.getFullName(),10,12
org.apache.openjpa.jdbc.schema.Sequence.getFullIdentifier(),3,5
org.apache.openjpa.jdbc.schema.Sequence.getQualifiedPath(),5,13
org.apache.openjpa.jdbc.schema.Sequence.getInitialValue(),3,6
org.apache.openjpa.jdbc.schema.Sequence.setInitialValue(int),4,9
org.apache.openjpa.jdbc.schema.Sequence.getIncrement(),2,4
org.apache.openjpa.jdbc.schema.Sequence.setIncrement(int),3,7
org.apache.openjpa.jdbc.schema.Sequence.getAllocate(),4,5
org.apache.openjpa.jdbc.schema.Sequence.setAllocate(int),5,8
org.apache.openjpa.jdbc.schema.Sequence.getSourceFile(),2,4
org.apache.openjpa.jdbc.schema.Sequence.getSourceScope(),3,3
org.apache.openjpa.jdbc.schema.Sequence.getSourceType(),3,4
"org.apache.openjpa.jdbc.schema.Sequence.setSource(File,int)",5,12
org.apache.openjpa.jdbc.schema.Sequence.getResourceName(),4,5
org.apache.openjpa.jdbc.schema.Sequence.compareTo(Sequence),4,19
org.apache.openjpa.jdbc.schema.Sequence.toString(),3,4
org.apache.openjpa.jdbc.schema.Sequence.getLineNumber(),2,3
org.apache.openjpa.jdbc.schema.Sequence.setLineNumber(int),3,8
org.apache.openjpa.jdbc.schema.Sequence.getColNumber(),2,3
org.apache.openjpa.jdbc.schema.Sequence.setColNumber(int),3,8
org.apache.openjpa.persistence.datacache.OrderedOneManyChild.getId(),0,0
org.apache.openjpa.persistence.datacache.OrderedOneManyChild.setId(long),1,1
org.apache.openjpa.persistence.datacache.OrderedOneManyChild.getName(),2,3
org.apache.openjpa.persistence.datacache.OrderedOneManyChild.setName(String),3,6
org.apache.openjpa.persistence.datacache.OrderedOneManyChild.getParent(),1,3
org.apache.openjpa.persistence.datacache.OrderedOneManyChild.setParent(OrderedOneManyParent),2,6
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLExpressionBuilder(ExpressionFactory,ExpressionStoreQuery,Object)",22,58
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getLocalizer(),2,3
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getClassLoader(),5,7
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getParsedQuery(),4,6
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getParsedQuery(String),4,9
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.setCandidate(ClassMetaData,String)",12,23
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.nextAlias(),4,5
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.resolveClassMetaData(JPQLNode),26,64
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getClassMetaData(String,boolean)",37,98
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateType(),5,7
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(),13,28
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCandidateMetaData(JPQLNode),54,115
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.currentQuery(),8,10
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getQueryExpressions(),28,83
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.and(Expression,Expression)",2,4
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.assemble(JPQLNode),4,7
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.assemble(JPQLNode,String,int)",15,34
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.assignSubselectProjection(JPQLNode,QueryExpressions)",18,44
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.assignProjections(JPQLNode,QueryExpressions,List<Value>,List<String>,List<String>)",34,94
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalProjectionsResultShape(JPQLNode,QueryExpressions,List<Value>,List<String>,List<String>)",61,264
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.projectionClause(JPQLNode),8,14
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalQueryOperation(QueryExpressions),20,40
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalGroupingClause(QueryExpressions),31,64
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalHavingClause(QueryExpressions),13,18
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalOrderingClauses(QueryExpressions),36,92
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalSelectClause(QueryExpressions),48,188
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.assertSchemaAlias(),10,18
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalFetchJoins(QueryExpressions),30,98
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalSetClause(QueryExpressions),31,56
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalWhereClause(),9,15
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalFromClause(boolean),14,20
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalFromClause(JPQLNode,boolean)",29,64
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getSubquery(String,Path,Expression)",32,110
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.addJoin(JPQLNode,boolean,Expression)",36,84
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.addJoin(Path,JPQLNode,Expression)",35,93
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalFromItem(Expression,JPQLNode,boolean)",47,96
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.isDeclaredVariable(String),9,9
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.isPath(JPQLNode),23,39
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getFieldType(FieldMetaData),13,55
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getVariable(String,boolean)",11,20
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getDefinedVariable(String),5,6
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.isSeenVariable(String),6,8
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.assertSchemaName(JPQLNode),15,22
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.checkEmbeddable(Value),6,9
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.checkEmbeddable(Value,String)",28,63
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.eval(JPQLNode),230,1190
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.useContains(boolean,Value,Value,JPQLNode)",11,18
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.isVerticalTypeInExpr(Value,JPQLNode)",9,14
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getIntegerValue(JPQLNode),14,33
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.convertSubstringArguments(ExpressionFactory,Value,Value,Value)",22,54
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.assertQueryExtensions(String),37,103
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.setImplicitTypes(Value,Value,Class<>)",12,24
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.setImplicitTypes(Value,Value,Class<>,Resolver,OrderedMap<Class<Object>>,String)",37,103
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getStringValue(JPQLNode),5,11
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getNumberValue(JPQLNode),4,9
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getTypeValue(JPQLNode,Class<>)",7,19
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getSubquery(JPQLNode),36,94
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getParameter(String,boolean,boolean)",42,127
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.evalNot(boolean,Expression)",6,10
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.trimQuotes(String),19,45
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.trimDoubleQuotes(String),9,22
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.negative(JPQLNode),12,24
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getIdentifier(JPQLNode),39,121
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.validateMapPath(JPQLNode,JPQLNode)",36,74
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getGeneralIdentifier(JPQLNode,boolean)",34,88
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getQualifiedIdentifier(JPQLNode),14,34
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getQualifiedPath(JPQLNode),4,9
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getQualifiedPath(JPQLNode,boolean,boolean)",32,86
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getTypeLiteral(JPQLNode),21,51
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getPathOrConstant(JPQLNode),24,69
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getType(JPQLNode),38,79
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getPath(JPQLNode),3,7
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getPath(JPQLNode,boolean,boolean)",45,150
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getDeclaredVariableType(String),16,27
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getExpression(JPQLNode),13,24
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getSimpleCaseExpression(JPQLNode),16,43
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getGeneralCaseExpression(JPQLNode),14,34
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getWhenCondition(JPQLNode),11,21
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getWhenScalar(JPQLNode),10,21
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getCoalesceExpression(JPQLNode),12,24
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getNullIfExpression(JPQLNode),9,21
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getValue(JPQLNode),9,15
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.newPath(Value,ClassMetaData)",7,22
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getValue(JPQLNode,int)",22,46
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.ctx(),4,4
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.root(),5,6
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getMetaDataForAlias(String),10,20
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.addSchemaToContext(String,ClassMetaData)",8,12
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.addVariableToContext(String,Value)",7,10
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.getVariable(String),7,13
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.onlyChild(JPQLNode),12,28
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.left(JPQLNode),8,15
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.right(JPQLNode),7,13
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.child(JPQLNode,int,int)",16,32
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.firstChild(JPQLNode),9,19
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.secondChild(JPQLNode),4,8
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.thirdChild(JPQLNode),5,9
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.lastChild(JPQLNode),3,8
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.lastChild(JPQLNode,int)",6,15
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.JPQLNode(JPQL,int)",4,9
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.jjtOpen(),1,1
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.jjtClose(),2,2
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.findChildrenByID(int),9,20
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.findChildrenByID(int,Collection<JPQLNode>)",7,15
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.hasChildID(int),1,2
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.findChildByID(int,boolean)",7,23
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.jjtSetParent(Node),5,9
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.jjtGetParent(),3,4
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.jjtAddChild(Node,int)",9,23
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.jjtGetChild(int),4,4
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.getChildCount(),5,5
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.getChild(int),5,9
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.iterator(),6,8
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.jjtGetNumChildren(),4,6
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.setText(String),3,6
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.setToken(Token),4,6
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.toString(),7,8
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.toString(String),2,6
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.dump(String),9,13
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.dump(),1,2
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.dump(PrintStream,String)",14,22
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.JPQLNode.dump(PrintStream,String,boolean)",11,23
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.ParsedJPQL.ParsedJPQL(String),4,7
"org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.ParsedJPQL.ParsedJPQL(String,JPQLNode)",6,11
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.ParsedJPQL.parse(String),16,29
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.ParsedJPQL.populate(ExpressionStoreQuery),13,34
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.ParsedJPQL.getCandidateType(),5,7
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.ParsedJPQL.toString(),2,3
org.apache.openjpa.kernel.jpql.JPQLExpressionBuilder.validateParameters(),23,85
org.apache.openjpa.persistence.embed.AttributeXml.getName(),2,3
org.apache.openjpa.persistence.embed.AttributeXml.setName(String),3,4
org.apache.openjpa.persistence.embed.AttributeXml.getValue(),2,3
org.apache.openjpa.persistence.embed.AttributeXml.setValue(String),3,6
org.apache.openjpa.persistence.embed.AttributeXml.AttributeXml(),2,2
"org.apache.openjpa.jdbc.kernel.exps.InValueExpression.InValueExpression(Val,Const)",9,14
"org.apache.openjpa.jdbc.kernel.exps.InValueExpression.getCollection(ExpContext,ExpState)",10,18
org.apache.openjpa.util.ProxyMap.getKeyType(),3,5
org.apache.openjpa.util.ProxyMap.getValueType(),3,5
"org.apache.openjpa.util.ProxyMap.newInstance(Class,Class,Comparator,boolean,boolean)",12,16
"org.apache.openjpa.jdbc.kernel.exps.Param.Param(Object,Class)",10,15
org.apache.openjpa.jdbc.kernel.exps.Param.getParameterKey(),3,4
org.apache.openjpa.jdbc.kernel.exps.Param.getType(),1,2
org.apache.openjpa.jdbc.kernel.exps.Param.setImplicitType(Class),14,24
org.apache.openjpa.jdbc.kernel.exps.Param.getIndex(),2,2
org.apache.openjpa.jdbc.kernel.exps.Param.setIndex(int),3,5
org.apache.openjpa.jdbc.kernel.exps.Param.getValueMetaData(ExpContext),15,28
org.apache.openjpa.jdbc.kernel.exps.Param.getValue(Object[]),7,9
"org.apache.openjpa.jdbc.kernel.exps.Param.getValue(ExpContext,ExpState)",9,20
"org.apache.openjpa.jdbc.kernel.exps.Param.getSQLValue(Select,ExpContext,ExpState)",9,13
"org.apache.openjpa.jdbc.kernel.exps.Param.initialize(Select,ExpContext,int)",8,10
"org.apache.openjpa.jdbc.kernel.exps.Param.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",31,111
"org.apache.openjpa.jdbc.kernel.exps.Param.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",17,58
"org.apache.openjpa.jdbc.kernel.exps.Param.length(Select,ExpContext,ExpState)",11,19
org.apache.openjpa.persistence.datacache.CascadeParent.getId(),0,0
org.apache.openjpa.persistence.datacache.CascadeParent.getName(),2,3
org.apache.openjpa.persistence.datacache.CascadeParent.setName(String),3,6
org.apache.openjpa.persistence.datacache.CascadeParent.getChild(),2,4
org.apache.openjpa.persistence.datacache.CascadeParent.setChild(CascadeChild),3,7
org.apache.openjpa.persistence.access.EmbedPropAccess.EmbedPropAccess(),3,3
"org.apache.openjpa.persistence.access.EmbedPropAccess.EmbedPropAccess(String,String)",6,9
org.apache.openjpa.persistence.access.EmbedPropAccess.getFirstName(),2,3
org.apache.openjpa.persistence.access.EmbedPropAccess.setFirstName(String),4,6
org.apache.openjpa.persistence.access.EmbedPropAccess.getLastName(),2,3
org.apache.openjpa.persistence.access.EmbedPropAccess.setLastName(String),4,6
org.apache.openjpa.persistence.access.EmbedPropAccess.equals(Object),7,20
org.apache.openjpa.persistence.criteria.Publisher.getId(),0,0
org.apache.openjpa.persistence.criteria.Publisher.setId(int),1,1
org.apache.openjpa.persistence.criteria.Publisher.getName(),2,3
org.apache.openjpa.persistence.criteria.Publisher.setName(String),3,6
org.apache.openjpa.persistence.criteria.Publisher.getMagazineCollection(),3,6
org.apache.openjpa.persistence.criteria.Publisher.setMagazineCollection(Set<Magazine>),3,11
org.apache.openjpa.persistence.criteria.Publisher.toString(),2,3
org.apache.openjpa.persistence.access.xml.XMLFieldAccess2.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLFieldAccess2.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLFieldAccess2.setVersion(int),2,5
org.apache.openjpa.persistence.access.xml.XMLFieldAccess2.getVersion(),1,2
org.apache.openjpa.persistence.access.xml.XMLFieldAccess2.setStringField(String),5,9
org.apache.openjpa.persistence.access.xml.XMLFieldAccess2.getStringField(),3,5
org.apache.openjpa.persistence.access.xml.XMLFieldAccess2.equals(Object),8,19
org.apache.openjpa.persistence.access.xml.XMLFieldAccess2.setStrField(String),4,10
org.apache.openjpa.persistence.access.xml.XMLFieldAccess2.getStrField(),3,5
org.apache.openjpa.persistence.delimited.identifiers.EntityD2.EntityD2(),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityD2.EntityD2(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityD2.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityD2.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityD2.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityD2.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.EntityD2.getEntityD3(),1,4
org.apache.openjpa.persistence.delimited.identifiers.EntityD2.setEntityD3(EntityD3),3,10
"org.apache.openjpa.kernel.exps.Aggregate.Aggregate(AggregateListener,Val)",8,16
org.apache.openjpa.kernel.exps.Aggregate.isAggregate(),1,1
org.apache.openjpa.kernel.exps.Aggregate.getType(),4,5
org.apache.openjpa.kernel.exps.Aggregate.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.Aggregate.eval(Object,Object,StoreContext,Object[])",22,36
"org.apache.openjpa.kernel.exps.Aggregate.eval(Collection,Object,StoreContext,Object[])",17,33
org.apache.openjpa.kernel.exps.Aggregate.getArgTypes(),4,10
org.apache.openjpa.kernel.exps.Aggregate.acceptVisit(ExpressionVisitor),7,14
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimIdSeqGen.setUp(),30,45
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimIdSeqGen.tearDown(),5,6
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimIdSeqGen.createEntityE(),3,5
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimIdSeqGen.testSeqGen(),14,26
"org.apache.openjpa.persistence.criteria.results.OrderProducer.OrderProducer(Order,Producer)",1,3
org.apache.openjpa.persistence.criteria.results.OrderProducer.toString(),3,6
org.apache.openjpa.persistence.criteria.results.OrderProducer.getOrder(),0,0
org.apache.openjpa.persistence.criteria.results.OrderProducer.setOrder(Order),1,1
org.apache.openjpa.persistence.criteria.results.OrderProducer.getProducer(),1,3
org.apache.openjpa.persistence.criteria.results.OrderProducer.setProduct(Producer),3,6
org.apache.openjpa.jdbc.sql.Result.getEager(FieldMapping),7,9
"org.apache.openjpa.jdbc.sql.Result.putEager(FieldMapping,Object)",8,10
org.apache.openjpa.jdbc.sql.Result.newJoins(),5,7
org.apache.openjpa.jdbc.sql.Result.close(),7,9
org.apache.openjpa.jdbc.sql.Result.setLocking(boolean),4,8
org.apache.openjpa.jdbc.sql.Result.isLocking(),6,6
org.apache.openjpa.jdbc.sql.Result.supportsRandomAccess(),6,9
org.apache.openjpa.jdbc.sql.Result.absolute(int),14,18
org.apache.openjpa.jdbc.sql.Result.next(),6,6
org.apache.openjpa.jdbc.sql.Result.pushBack(),15,19
org.apache.openjpa.jdbc.sql.Result.size(),5,5
org.apache.openjpa.jdbc.sql.Result.contains(Object),8,8
org.apache.openjpa.jdbc.sql.Result.containsAll(Object[]),9,9
"org.apache.openjpa.jdbc.sql.Result.contains(Column,Joins)",8,10
"org.apache.openjpa.jdbc.sql.Result.containsAll(Column[],Joins)",9,10
org.apache.openjpa.jdbc.sql.Result.getBaseMapping(),15,19
org.apache.openjpa.jdbc.sql.Result.setBaseMapping(ClassMapping),16,21
org.apache.openjpa.jdbc.sql.Result.getMappedByFieldMapping(),14,24
org.apache.openjpa.jdbc.sql.Result.setMappedByFieldMapping(FieldMapping),15,27
org.apache.openjpa.jdbc.sql.Result.getMappedByValue(),15,19
org.apache.openjpa.jdbc.sql.Result.setMappedByValue(Object),16,22
org.apache.openjpa.jdbc.sql.Result.indexOf(),6,7
"org.apache.openjpa.jdbc.sql.Result.load(ClassMapping,JDBCStore,JDBCFetchConfiguration)",11,18
"org.apache.openjpa.jdbc.sql.Result.load(ClassMapping,JDBCStore,JDBCFetchConfiguration,Joins)",12,20
org.apache.openjpa.jdbc.sql.Result.getArray(Object),12,14
org.apache.openjpa.jdbc.sql.Result.getAsciiStream(Object),14,16
org.apache.openjpa.jdbc.sql.Result.getBigDecimal(Object),8,9
org.apache.openjpa.jdbc.sql.Result.getBigInteger(Object),8,9
org.apache.openjpa.jdbc.sql.Result.getBinaryStream(Object),14,16
"org.apache.openjpa.jdbc.sql.Result.getLOBStream(JDBCStore,Object)",9,11
org.apache.openjpa.jdbc.sql.Result.getBlob(Object),12,14
org.apache.openjpa.jdbc.sql.Result.getBoolean(Object),7,7
org.apache.openjpa.jdbc.sql.Result.getByte(Object),7,7
org.apache.openjpa.jdbc.sql.Result.getBytes(Object),12,13
org.apache.openjpa.jdbc.sql.Result.getCalendar(Object),8,9
org.apache.openjpa.jdbc.sql.Result.getChar(Object),7,7
org.apache.openjpa.jdbc.sql.Result.getCharacterStream(Object),14,15
org.apache.openjpa.jdbc.sql.Result.getClob(Object),12,14
org.apache.openjpa.jdbc.sql.Result.getDate(Object),8,9
"org.apache.openjpa.jdbc.sql.Result.getDate(Object,Calendar)",15,18
org.apache.openjpa.jdbc.sql.Result.getDouble(Object),7,7
org.apache.openjpa.jdbc.sql.Result.getFloat(Object),7,7
org.apache.openjpa.jdbc.sql.Result.getInt(Object),7,7
org.apache.openjpa.jdbc.sql.Result.getLocale(Object),8,9
org.apache.openjpa.jdbc.sql.Result.getLong(Object),7,7
org.apache.openjpa.jdbc.sql.Result.getNumber(Object),7,7
"org.apache.openjpa.jdbc.sql.Result.getObject(Object,int,Object)",29,56
"org.apache.openjpa.jdbc.sql.Result.getSQLObject(Object,Map)",12,17
"org.apache.openjpa.jdbc.sql.Result.getRef(Object,Map)",13,16
org.apache.openjpa.jdbc.sql.Result.getShort(Object),7,7
org.apache.openjpa.jdbc.sql.Result.getString(Object),8,9
"org.apache.openjpa.jdbc.sql.Result.getTime(Object,Calendar)",14,16
"org.apache.openjpa.jdbc.sql.Result.getTimestamp(Object,Calendar)",14,16
"org.apache.openjpa.jdbc.sql.Result.getArray(Column,Joins)",12,16
"org.apache.openjpa.jdbc.sql.Result.getAsciiStream(Column,Joins)",14,18
"org.apache.openjpa.jdbc.sql.Result.getBigDecimal(Column,Joins)",8,11
"org.apache.openjpa.jdbc.sql.Result.getBigInteger(Column,Joins)",8,11
"org.apache.openjpa.jdbc.sql.Result.getBinaryStream(Column,Joins)",14,18
"org.apache.openjpa.jdbc.sql.Result.getBlob(Column,Joins)",12,16
"org.apache.openjpa.jdbc.sql.Result.getBoolean(Column,Joins)",7,9
"org.apache.openjpa.jdbc.sql.Result.getByte(Column,Joins)",7,9
"org.apache.openjpa.jdbc.sql.Result.getBytes(Column,Joins)",12,15
"org.apache.openjpa.jdbc.sql.Result.getCalendar(Column,Joins)",8,11
"org.apache.openjpa.jdbc.sql.Result.getChar(Column,Joins)",7,9
"org.apache.openjpa.jdbc.sql.Result.getCharacterStream(Column,Joins)",14,17
"org.apache.openjpa.jdbc.sql.Result.getClob(Column,Joins)",12,16
"org.apache.openjpa.jdbc.sql.Result.getDate(Column,Joins)",8,11
"org.apache.openjpa.jdbc.sql.Result.getDate(Column,Calendar,Joins)",15,20
"org.apache.openjpa.jdbc.sql.Result.getDouble(Column,Joins)",7,9
"org.apache.openjpa.jdbc.sql.Result.getFloat(Column,Joins)",7,9
"org.apache.openjpa.jdbc.sql.Result.getInt(Column,Joins)",7,9
"org.apache.openjpa.jdbc.sql.Result.getLocale(Column,Joins)",8,11
"org.apache.openjpa.jdbc.sql.Result.getLong(Column,Joins)",7,9
"org.apache.openjpa.jdbc.sql.Result.getNumber(Column,Joins)",7,9
"org.apache.openjpa.jdbc.sql.Result.getObject(Column,Object,Joins)",19,29
"org.apache.openjpa.jdbc.sql.Result.getSQLObject(Column,Map,Joins)",13,19
"org.apache.openjpa.jdbc.sql.Result.getRef(Column,Map,Joins)",13,18
"org.apache.openjpa.jdbc.sql.Result.getShort(Column,Joins)",7,9
"org.apache.openjpa.jdbc.sql.Result.getString(Column,Joins)",8,11
"org.apache.openjpa.jdbc.sql.Result.getTime(Column,Calendar,Joins)",14,18
"org.apache.openjpa.jdbc.sql.Result.getTimestamp(Column,Calendar,Joins)",14,18
org.apache.openjpa.jdbc.sql.Result.wasNull(),4,4
org.apache.openjpa.jdbc.sql.Result.startDataRequest(Object),10,12
org.apache.openjpa.jdbc.sql.Result.endDataRequest(),15,30
"org.apache.openjpa.persistence.query.FetchPath.FetchPath(AbstractDomainObject,PathOperator,String)",11,17
org.apache.openjpa.persistence.query.FetchPath.asJoinable(AliasContext),11,12
org.apache.openjpa.persistence.embed.EmployeeXml.getEmpId(),1,2
org.apache.openjpa.persistence.embed.EmployeeXml.setEmpId(int),2,5
org.apache.openjpa.persistence.embed.EmployeeXml.getDepartment(),2,4
org.apache.openjpa.persistence.embed.EmployeeXml.setDepartment(DepartmentXml),3,7
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOne.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOne.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOne.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOne.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOne.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOne.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOne.getEmbed(),2,4
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOne.setEmbed(Embed_MappedToOne),3,7
"org.apache.openjpa.conf.OpenJPAProductDerivation.putBrokerFactoryAliases(Map<String,String>)",15,21
org.apache.openjpa.persistence.embed.attrOverrides.BasicEntityXML.setId(int),1,1
org.apache.openjpa.persistence.embed.attrOverrides.BasicEntityXML.getId(),0,0
org.apache.openjpa.persistence.embed.attrOverrides.BasicEntityXML.setListIntAttrOverEmbed(List<BasicEmbedXML>),6,17
org.apache.openjpa.persistence.embed.attrOverrides.BasicEntityXML.getListIntAttrOverEmbed(),5,10
org.apache.openjpa.persistence.criteria.results.TestTypedResults.setUp(),11,12
org.apache.openjpa.persistence.criteria.results.TestTypedResults.populate(),28,63
org.apache.openjpa.persistence.criteria.results.TestTypedResults.tearDown(),2,3
org.apache.openjpa.persistence.criteria.results.TestTypedResults.testTypedJPQLQuery(),41,158
org.apache.openjpa.persistence.criteria.results.TestTypedResults.testDateQuery(),34,166
org.apache.openjpa.persistence.criteria.results.TestTypedResults.testMultiSelect(),51,228
org.apache.openjpa.persistence.JPAFacadeHelper.toEntityManagerFactory(BrokerFactory),15,49
org.apache.openjpa.persistence.JPAFacadeHelper.toBrokerFactory(EntityManagerFactory),22,54
org.apache.openjpa.persistence.JPAFacadeHelper.toEntityManager(Broker),21,61
org.apache.openjpa.persistence.JPAFacadeHelper.toBroker(EntityManager),19,38
org.apache.openjpa.persistence.JPAFacadeHelper.getMetaData(Object),19,30
"org.apache.openjpa.persistence.JPAFacadeHelper.getMetaData(EntityManager,Class)",26,51
"org.apache.openjpa.persistence.JPAFacadeHelper.getMetaData(EntityManagerFactory,Class)",26,58
org.apache.openjpa.persistence.JPAFacadeHelper.fromOpenJPAObjectId(Object),6,16
"org.apache.openjpa.persistence.JPAFacadeHelper.toOpenJPAObjectId(ClassMetaData,Object)",49,209
"org.apache.openjpa.persistence.JPAFacadeHelper.toOpenJPAObjectIds(ClassMetaData,Object)",15,50
"org.apache.openjpa.persistence.JPAFacadeHelper.toOpenJPAObjectIds(ClassMetaData,Collection<Object>)",12,28
org.apache.openjpa.persistence.JPAFacadeHelper.fromOpenJPAObjectIdClass(Class),9,27
org.apache.openjpa.persistence.enhance.DynamicEnhancementSuite.suite(),149,850
org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy.getIndependentElementMappings(boolean),8,15
org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy.getJoinForeignKey(ClassMapping),6,11
"org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy.selectElement(Select,ClassMapping,JDBCStore,JDBCFetchConfiguration,int,Joins)",14,30
"org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy.loadElement(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",21,37
"org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy.join(Joins,ClassMapping)",4,8
"org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy.joinElementRelation(Joins,ClassMapping)",13,24
org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy.map(boolean),54,241
"org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",13,18
"org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy.insert(OpenJPAStateManager,RowManager,Object)",35,83
"org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",58,182
"org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",16,28
"org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy.toDataStoreValue(Object,JDBCStore)",11,19
"org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy.join(Joins,boolean)",5,11
"org.apache.openjpa.jdbc.meta.strats.RelationToManyTableFieldStrategy.joinRelation(Joins,boolean,boolean)",23,57
"org.apache.openjpa.lib.util.StringDistance.getClosestLevenshteinDistance(String,String[])",11,28
"org.apache.openjpa.lib.util.StringDistance.getClosestLevenshteinDistance(String,Collection)",12,28
"org.apache.openjpa.lib.util.StringDistance.getClosestLevenshteinDistance(String,String[],int)",12,30
"org.apache.openjpa.lib.util.StringDistance.getClosestLevenshteinDistance(String,String[],float)",16,39
"org.apache.openjpa.lib.util.StringDistance.getClosestLevenshteinDistance(String,Collection,float)",17,51
"org.apache.openjpa.lib.util.StringDistance.getClosestLevenshteinDistance(String,Collection<String>,int)",25,72
"org.apache.openjpa.lib.util.StringDistance.getLevenshteinDistance(String,String)",19,44
"org.apache.openjpa.lib.util.StringDistance.min(int,int,int)",1,1
org.apache.openjpa.persistence.detach.IntVersionEntity.getVersion(),1,2
org.apache.openjpa.persistence.detach.IntVersionEntity.IntVersionEntity(int),2,2
org.apache.openjpa.persistence.detach.IntVersionEntity.getId(),0,0
org.apache.openjpa.persistence.detach.IntVersionEntity.setId(int),1,1
org.apache.openjpa.persistence.detach.IntVersionEntity.getName(),2,3
org.apache.openjpa.persistence.detach.IntVersionEntity.setName(String),3,6
org.apache.openjpa.persistence.detach.IntVersionEntity.getE2(),3,3
org.apache.openjpa.persistence.detach.IntVersionEntity.setE2(TimestampVersionEntity),4,4
org.apache.openjpa.persistence.detach.IntVersionEntity.IntVersionEntity(),2,2
org.apache.openjpa.persistence.detach.IntVersionEntity.printE2(),3,3
org.apache.openjpa.lib.conf.test.ConfigurationTestProductDerivation.getType(),3,5
org.apache.openjpa.lib.conf.test.ConfigurationTestProductDerivation.beforeConfigurationClose(Configuration),4,5
org.apache.openjpa.lib.conf.test.ConfigurationTestProductDerivation.loadGlobals(ClassLoader),6,9
"org.apache.openjpa.lib.conf.test.ConfigurationTestProductDerivation.load(String,ClassLoader)",20,44
"org.apache.openjpa.lib.conf.test.ConfigurationTestProductDerivation.findResource(String,ClassLoader)",13,47
org.apache.openjpa.persistence.criteria.CriteriaExpressionVisitor.enter(CriteriaExpression),4,6
org.apache.openjpa.persistence.criteria.CriteriaExpressionVisitor.exit(CriteriaExpression),4,6
org.apache.openjpa.persistence.criteria.CriteriaExpressionVisitor.isVisited(CriteriaExpression),5,7
org.apache.openjpa.persistence.criteria.CriteriaExpressionVisitor.getTraversalStyle(CriteriaExpression),6,11
org.apache.openjpa.persistence.criteria.CriteriaExpressionVisitor.AbstractVisitor.exit(CriteriaExpression),7,10
org.apache.openjpa.persistence.criteria.CriteriaExpressionVisitor.AbstractVisitor.isVisited(CriteriaExpression),6,10
org.apache.openjpa.persistence.criteria.CriteriaExpressionVisitor.AbstractVisitor.getTraversalStyle(CriteriaExpression),7,14
org.apache.openjpa.persistence.criteria.CriteriaExpressionVisitor.ParameterVisitor.ParameterVisitor(CriteriaQueryImpl<>),5,6
org.apache.openjpa.persistence.criteria.CriteriaExpressionVisitor.ParameterVisitor.enter(CriteriaExpression),8,15
org.apache.openjpa.persistence.datacache.common.apps.AttachD.setDstr(String),3,6
org.apache.openjpa.persistence.datacache.common.apps.AttachD.getDstr(),2,3
org.apache.openjpa.persistence.datacache.common.apps.AttachD.setDint(int),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachD.getDint(),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachD.setDdbl(double),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachD.getDdbl(),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachD.getA(),1,1
org.apache.openjpa.persistence.datacache.common.apps.AttachD.setA(AttachA),2,2
org.apache.openjpa.persistence.datacache.common.apps.AttachD.setBs(Set),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachD.getBs(),1,1
org.apache.openjpa.persistence.datacache.common.apps.AttachD.setPcStringMap(Map),3,10
org.apache.openjpa.persistence.datacache.common.apps.AttachD.getPcStringMap(),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachD.setBigIntegerPCMap(TreeMap),4,11
org.apache.openjpa.persistence.datacache.common.apps.AttachD.getBigIntegerPCMap(),3,6
org.apache.openjpa.persistence.datacache.common.apps.AttachD.setEmbeddedE(AttachE),3,6
org.apache.openjpa.persistence.datacache.common.apps.AttachD.getEmbeddedE(),2,3
org.apache.openjpa.persistence.datacache.common.apps.AttachD.setEmbeddedA(AttachA),3,6
org.apache.openjpa.persistence.datacache.common.apps.AttachD.getEmbeddedA(),2,3
org.apache.openjpa.persistence.datacache.common.apps.AttachD.getVersion(),2,3
org.apache.openjpa.persistence.detach.TestMergeNoStateManager.setUp(),18,35
org.apache.openjpa.persistence.detach.TestMergeNoStateManager.test(),30,115
org.apache.openjpa.jdbc.meta.strats.RelationCollectionTableFieldStrategy.getFieldMapping(),2,5
org.apache.openjpa.jdbc.meta.strats.RelationCollectionTableFieldStrategy.getIndependentElementMappings(boolean),5,9
org.apache.openjpa.jdbc.meta.strats.RelationCollectionTableFieldStrategy.getElementColumns(ClassMapping),6,9
org.apache.openjpa.jdbc.meta.strats.RelationCollectionTableFieldStrategy.getJoinForeignKey(ClassMapping),5,11
"org.apache.openjpa.jdbc.meta.strats.RelationCollectionTableFieldStrategy.selectElement(Select,ClassMapping,JDBCStore,JDBCFetchConfiguration,int,Joins)",12,26
"org.apache.openjpa.jdbc.meta.strats.RelationCollectionTableFieldStrategy.loadElement(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",14,24
"org.apache.openjpa.jdbc.meta.strats.RelationCollectionTableFieldStrategy.join(Joins,ClassMapping)",4,9
"org.apache.openjpa.jdbc.meta.strats.RelationCollectionTableFieldStrategy.joinElementRelation(Joins,ClassMapping)",6,13
org.apache.openjpa.jdbc.meta.strats.RelationCollectionTableFieldStrategy.newLRSProxy(),3,6
org.apache.openjpa.jdbc.meta.strats.RelationCollectionTableFieldStrategy.map(boolean),14,22
"org.apache.openjpa.jdbc.meta.strats.RelationCollectionTableFieldStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",14,18
"org.apache.openjpa.jdbc.meta.strats.RelationCollectionTableFieldStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",14,18
"org.apache.openjpa.jdbc.meta.strats.RelationCollectionTableFieldStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",14,18
org.apache.openjpa.persistence.dynamicschema.EntityVeryLongNames.EntityVeryLongNames(),2,2
"org.apache.openjpa.persistence.dynamicschema.EntityVeryLongNames.EntityVeryLongNames(String,String)",4,10
org.apache.openjpa.persistence.dynamicschema.EntityVeryLongNames.getId(),0,0
org.apache.openjpa.persistence.dynamicschema.EntityVeryLongNames.setId(int),1,1
org.apache.openjpa.persistence.dynamicschema.EntityVeryLongNames.getFirstName(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityVeryLongNames.setFirstName(String),3,6
org.apache.openjpa.persistence.dynamicschema.EntityVeryLongNames.getLastName(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityVeryLongNames.setLastName(String),3,6
org.apache.openjpa.persistence.dynamicschema.EntityVeryLongNames.toString(),4,8
org.apache.openjpa.persistence.dynamicschema.EntityVeryLongNames.hashCode(),5,22
org.apache.openjpa.persistence.dynamicschema.EntityVeryLongNames.equals(Object),6,21
org.apache.openjpa.jdbc.kernel.exps.HasContainsExpressionVisitor.hasContains(Expression),7,14
org.apache.openjpa.jdbc.kernel.exps.HasContainsExpressionVisitor.enter(Expression),7,12
org.apache.openjpa.persistence.datacache.CacheTest.CacheTest(String),4,6
org.apache.openjpa.persistence.datacache.CacheTest.clear(),22,52
org.apache.openjpa.persistence.datacache.CacheTest.getConfs(),8,9
org.apache.openjpa.persistence.datacache.CacheTest.getConfs2(),7,8
org.apache.openjpa.persistence.datacache.CacheTest.isCacheCoherent(),13,16
org.apache.openjpa.persistence.datacache.CacheTest.setUp(),85,317
org.apache.openjpa.persistence.datacache.CacheTest.tearDown(),9,24
org.apache.openjpa.persistence.datacache.CacheTest.testDeletedOneToOneRelations(),14,38
org.apache.openjpa.persistence.datacache.CacheTest.testCanCacheExtension(),22,56
org.apache.openjpa.persistence.datacache.CacheTest.testGetCache(),20,161
org.apache.openjpa.persistence.datacache.CacheTest.testPrimitives(),7,7
org.apache.openjpa.persistence.datacache.CacheTest.testExpiredRelations(),45,104
org.apache.openjpa.persistence.datacache.CacheTest.testPCArrays(),22,99
org.apache.openjpa.persistence.datacache.CacheTest.testStringArrays(),17,57
org.apache.openjpa.persistence.datacache.CacheTest.testPrimitiveArrays(),17,49
org.apache.openjpa.persistence.datacache.CacheTest.testDateArrays(),17,58
org.apache.openjpa.persistence.datacache.CacheTest.testDate(),23,53
org.apache.openjpa.persistence.datacache.CacheTest.testLocale(),19,49
org.apache.openjpa.persistence.datacache.CacheTest.testBasicQuery(),30,97
"org.apache.openjpa.persistence.datacache.CacheTest.basicQueries(EntityManager,Boolean,int,int)",38,154
org.apache.openjpa.persistence.datacache.CacheTest.testNonCacheableClass(),28,39
org.apache.openjpa.persistence.datacache.CacheTest.testNonCacheableAccessPath(),36,54
org.apache.openjpa.persistence.datacache.CacheTest.testNonCacheableSubclasses1(),27,41
org.apache.openjpa.persistence.datacache.CacheTest.testNonCacheableSubclasses2(),31,51
org.apache.openjpa.persistence.datacache.CacheTest.testCacheNames(),24,101
"org.apache.openjpa.persistence.datacache.CacheTest.assertCacheName(Class,String)",11,31
org.apache.openjpa.persistence.datacache.CacheTest.testCache2(),29,111
org.apache.openjpa.persistence.datacache.CacheTest.testTimeouts1(),3,5
org.apache.openjpa.persistence.datacache.CacheTest.timeoutsTest1(int),21,26
org.apache.openjpa.persistence.datacache.CacheTest.testTimeouts2(),3,5
org.apache.openjpa.persistence.datacache.CacheTest.timeoutsTest2(int),13,18
org.apache.openjpa.persistence.datacache.CacheTest.timeoutsHelper(OpenJPAEntityManagerFactory),82,523
org.apache.openjpa.persistence.datacache.CacheTest.testQueryTimeouts(),7,13
org.apache.openjpa.persistence.datacache.CacheTest.queryTimeoutsHelper(OpenJPAEntityManagerFactory),58,161
org.apache.openjpa.persistence.datacache.CacheTest.testQueryImplicitEvictions(),104,312
org.apache.openjpa.persistence.datacache.CacheTest.testAllegedConcurrentModificationException(),30,66
org.apache.openjpa.persistence.datacache.CacheTest.isOpenJPACache(DataCache),7,20
"org.apache.openjpa.persistence.datacache.CacheTest.checkCache(DataCache,Object[],boolean[])",8,16
"org.apache.openjpa.persistence.datacache.CacheTest.assertInCache(org.apache.openjpa.kernel.Query,Boolean)",8,12
"org.apache.openjpa.persistence.datacache.CacheTest.assertInCache(org.apache.openjpa.kernel.Query,Boolean,Object[])",10,15
org.apache.openjpa.persistence.datacache.CacheTest.iterate(Collection),5,6
org.apache.openjpa.persistence.datacache.CacheTest.testInterface(),15,46
org.apache.openjpa.persistence.datacache.CacheTest.testQueriesOnCollectionsDontUseCache(),27,73
org.apache.openjpa.persistence.datacache.CacheTest.testDFGFieldsLoaded1(),5,8
org.apache.openjpa.persistence.datacache.CacheTest.testDFGFieldsLoaded2(),5,8
org.apache.openjpa.persistence.datacache.CacheTest.dfgFieldsLoadedHelper(boolean),30,55
org.apache.openjpa.persistence.datacache.CacheTest.testCachedQueryClosureReleasesResources(),40,75
org.apache.openjpa.persistence.datacache.CacheTest.testMutableSCOsAreConverted(),35,111
org.apache.openjpa.persistence.datacache.CacheTest.testEmptyResultsAreCached(),28,43
"org.apache.openjpa.persistence.datacache.CacheTest.doassertTrue(EntityManager,String,int)",11,19
org.apache.openjpa.persistence.datacache.CacheTest.assertNew(CacheObjectA),6,8
org.apache.openjpa.persistence.datacache.CacheTest.assertOld(CacheObjectA),6,9
org.apache.openjpa.persistence.datacache.CacheTest.cacheManager(OpenJPAEntityManagerFactory),10,21
org.apache.openjpa.persistence.datacache.CacheTest.close(EntityManager),4,4
org.apache.openjpa.persistence.datacache.CacheTest.close(Broker),4,9
org.apache.openjpa.persistence.datacache.CacheTest.main(String[]),33,65
"org.apache.openjpa.jdbc.kernel.exps.NotEqualExpression.NotEqualExpression(Val,Val)",7,12
"org.apache.openjpa.jdbc.kernel.exps.NotEqualExpression.appendTo(Select,ExpContext,BinaryOpExpState,SQLBuffer,boolean,boolean)",25,124
org.apache.openjpa.persistence.embed.EntityA_Coll_String.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Coll_String.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Coll_String.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Coll_String.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Coll_String.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Coll_String.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Coll_String.getNickNames(),4,6
org.apache.openjpa.persistence.embed.EntityA_Coll_String.addNickName(String),5,11
org.apache.openjpa.persistence.embed.EntityA_Coll_String.getCreditRating(),3,5
org.apache.openjpa.persistence.embed.EntityA_Coll_String.addCreditRating(CreditRating),3,6
org.apache.openjpa.persistence.embed.EntityA_Coll_String.getTimestamps(),3,3
org.apache.openjpa.persistence.embed.EntityA_Coll_String.addTimestamp(Timestamp),2,4
org.apache.openjpa.persistence.embed.EntityA_Coll_String.getLobs(),3,4
org.apache.openjpa.persistence.embed.EntityA_Coll_String.addLob(String),4,7
org.apache.openjpa.persistence.detach.Entity9.Entity9(),1,1
"org.apache.openjpa.persistence.detach.Entity9.Entity9(long,String)",3,5
org.apache.openjpa.persistence.detach.Entity9.getId(),0,0
org.apache.openjpa.persistence.detach.Entity9.setId(long),1,1
org.apache.openjpa.persistence.detach.Entity9.getName(),2,3
org.apache.openjpa.persistence.detach.Entity9.setName(String),3,6
org.apache.openjpa.persistence.criteria.Semester.getId(),0,0
org.apache.openjpa.persistence.criteria.Semester.getName(),2,3
org.apache.openjpa.persistence.criteria.Semester.setName(String),3,6
org.apache.openjpa.kernel.ROPStoreManager.ROPStoreManager(StoreManager),4,7
"org.apache.openjpa.kernel.ROPStoreManager.exists(OpenJPAStateManager,Object)",7,12
"org.apache.openjpa.kernel.ROPStoreManager.initialize(OpenJPAStateManager,PCState,FetchConfiguration,Object)",11,26
"org.apache.openjpa.kernel.ROPStoreManager.syncVersion(OpenJPAStateManager,Object)",20,30
"org.apache.openjpa.kernel.ROPStoreManager.load(OpenJPAStateManager,BitSet,FetchConfiguration,int,Object)",25,39
org.apache.openjpa.persistence.annotations.PColl_EntityA1.getId(),0,0
org.apache.openjpa.persistence.annotations.PColl_EntityA1.setId(int),1,1
org.apache.openjpa.persistence.annotations.PColl_EntityA1.getEmbedCollection(),5,7
org.apache.openjpa.persistence.annotations.PColl_EntityA1.setEmbedCollection(Set<PColl_EntityB>),5,12
org.apache.openjpa.persistence.annotations.PColl_EntityA1.addEmbedElement(PColl_EntityB),6,10
org.apache.openjpa.persistence.annotations.PColl_EntityA1.toString(),8,11
org.apache.openjpa.persistence.embed.TestEmbedded.setUp(),6,7
org.apache.openjpa.persistence.embed.TestEmbedded.testInsertEmbedded(),22,35
org.apache.openjpa.persistence.embed.TestEmbedded.testDetachedQueryEmbedded(),42,69
org.apache.openjpa.persistence.embed.TestEmbedded.testDeleteEmbeddedDoesNotSelectBeforeDelete(),34,94
org.apache.openjpa.persistence.embed.TestEmbedded.persistAddress(Address),15,24
org.apache.openjpa.persistence.embed.TestEmbedded.queryAddresses(String),16,31
org.apache.openjpa.persistence.detachment.TestDetachLite.setUp(),15,24
org.apache.openjpa.persistence.detachment.TestDetachLite.testPendingClear(),21,26
org.apache.openjpa.persistence.detachment.TestDetachLite.testLeaveProxy(),35,81
org.apache.openjpa.persistence.detachment.TestDetachLite.testProxyClear(),24,57
org.apache.openjpa.persistence.detachment.TestDetachLite.testCloseDetach(),13,28
org.apache.openjpa.jdbc.schema.FileSchemaFactory.getFile(),9,12
org.apache.openjpa.jdbc.schema.FileSchemaFactory.setFile(String),10,18
org.apache.openjpa.jdbc.schema.FileSchemaFactory.setFileName(String),11,17
org.apache.openjpa.jdbc.schema.FileSchemaFactory.setConfiguration(Configuration),7,13
org.apache.openjpa.jdbc.schema.FileSchemaFactory.startConfiguration(),2,2
org.apache.openjpa.jdbc.schema.FileSchemaFactory.endConfiguration(),1,1
org.apache.openjpa.jdbc.schema.FileSchemaFactory.readSchema(),19,34
org.apache.openjpa.jdbc.schema.FileSchemaFactory.storeSchema(SchemaGroup),15,31
org.apache.openjpa.persistence.embed.Book.Book(),1,1
org.apache.openjpa.persistence.embed.Book.getId(),0,0
org.apache.openjpa.persistence.embed.Book.setId(int),1,1
org.apache.openjpa.persistence.embed.Book.Book(long),2,4
org.apache.openjpa.persistence.embed.Book.getIsbc(),2,2
org.apache.openjpa.persistence.embed.Book.setIsbc(long),3,5
org.apache.openjpa.persistence.embed.Book.getListings(),3,4
org.apache.openjpa.persistence.embed.Book.setListings(Set<Listing>),3,7
org.apache.openjpa.persistence.embed.Book.addListing(Listing),3,5
org.apache.openjpa.persistence.embed.Book.toString(),8,16
org.apache.openjpa.persistence.annotations.TestSerializedLobs.TestSerializedLobs(String),6,7
org.apache.openjpa.persistence.annotations.TestSerializedLobs.setUp(),4,4
org.apache.openjpa.persistence.annotations.TestSerializedLobs.testSerialized(),17,50
org.apache.openjpa.persistence.annotations.TestSerializedLobs.testBlob(),36,90
org.apache.openjpa.persistence.annotations.TestSerializedLobs.testClob(),19,48
org.apache.openjpa.persistence.criteria.OpenJPACriteriaQuery<T>.toCQL(),8,14
org.apache.openjpa.persistence.criteria.OpenJPACriteriaQuery<T>.compile(),6,8
org.apache.openjpa.kernel.exps.CurrentDate.CurrentDate(Class<>),3,6
org.apache.openjpa.kernel.exps.CurrentDate.getType(),1,2
org.apache.openjpa.kernel.exps.CurrentDate.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.CurrentDate.eval(Object,Object,StoreContext,Object[])",17,20
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Map.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Map.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Map.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Map.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Map.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Map.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Map.getEmbed(),3,5
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Map.setEmbed(Embed_Coll_Map),4,8
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEntityB.setId(int),1,1
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEntityB.getId(),0,0
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEntityB.setName(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEntityB.getName(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEntityB.setEaList(List<XMLAssocOverEntityA>),5,9
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEntityB.getEaList(),4,6
"org.apache.openjpa.kernel.exps.NotEqualExpression.NotEqualExpression(Val,Val)",7,12
"org.apache.openjpa.kernel.exps.NotEqualExpression.compare(Object,Object)",3,4
org.apache.openjpa.persistence.embed.attrOverrides.PropertyRecord.getDesc(),3,3
org.apache.openjpa.persistence.embed.attrOverrides.PropertyRecord.setDesc(String),4,6
org.apache.openjpa.persistence.embed.attrOverrides.PropertyRecord.getOwner(),2,4
org.apache.openjpa.persistence.embed.attrOverrides.PropertyRecord.setOwner(PropertyOwner),3,7
org.apache.openjpa.persistence.embed.attrOverrides.PropertyRecord.getParcels(),5,6
"org.apache.openjpa.persistence.embed.attrOverrides.PropertyRecord.addParcel(Address,PropertyInfo)",7,8
org.apache.openjpa.kernel.exps.UnboundVariable.UnboundVariable(Class),6,10
org.apache.openjpa.kernel.exps.UnboundVariable.isVariable(),1,1
org.apache.openjpa.kernel.exps.UnboundVariable.getType(),1,2
org.apache.openjpa.kernel.exps.UnboundVariable.setImplicitType(Class),3,6
org.apache.openjpa.kernel.exps.UnboundVariable.setValue(Object),13,18
"org.apache.openjpa.kernel.exps.UnboundVariable.eval(Object,Object,StoreContext,Object[])",9,12
org.apache.openjpa.persistence.enhance.identity.Employee.getPhoneNumber(),1,3
org.apache.openjpa.persistence.enhance.identity.Employee.setPhoneNumber(PhoneNumber),2,6
org.apache.openjpa.persistence.enhance.identity.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.enhance.identity.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.enhance.identity.Employee.getEmpType(),2,6
org.apache.openjpa.persistence.enhance.identity.Employee.setEmpType(EmpType),3,11
org.apache.openjpa.persistence.enhance.identity.Employee.equals(Object),4,7
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.CachedEntityStatistics(),3,3
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.getId(),0,0
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.setId(int),1,1
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.getFirstName(),2,3
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.setVersion(int),2,3
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.setFirstName(String),3,6
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.getLastName(),2,3
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.setLastName(String),3,6
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.getVersion(),1,2
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.getEagerList(),6,8
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.addEager(CachedEntityStatistics),6,8
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.getLazyList(),6,8
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.setLazyList(Set<CachedEntityStatistics>),6,9
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.addLazy(CachedEntityStatistics),6,8
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.hashCode(),8,13
org.apache.openjpa.persistence.datacache.CachedEntityStatistics.toString(),3,4
org.apache.openjpa.persistence.exception.PObject.getName(),2,3
org.apache.openjpa.persistence.exception.PObject.setName(String),3,6
org.apache.openjpa.persistence.exception.PObject.setId(long),1,1
org.apache.openjpa.persistence.exception.PObject.getId(),0,0
org.apache.openjpa.persistence.exception.PObject.getVersion(),1,2
org.apache.openjpa.lib.conf.MapConfigurationProvider.MapConfigurationProvider(),5,5
org.apache.openjpa.lib.conf.MapConfigurationProvider.MapConfigurationProvider(Map),8,12
org.apache.openjpa.lib.conf.MapConfigurationProvider.getProperties(),5,7
org.apache.openjpa.lib.conf.MapConfigurationProvider.addProperties(Map),6,13
"org.apache.openjpa.lib.conf.MapConfigurationProvider.addProperty(String,Object)",9,14
org.apache.openjpa.lib.conf.MapConfigurationProvider.setInto(Configuration),4,8
"org.apache.openjpa.lib.conf.MapConfigurationProvider.setInto(Configuration,Log)",11,27
org.apache.openjpa.persistence.identity.BooleanIdEntity.BooleanIdEntity(),1,1
"org.apache.openjpa.persistence.identity.BooleanIdEntity.BooleanIdEntity(boolean,String)",3,5
org.apache.openjpa.persistence.identity.BooleanIdEntity.getId(),0,0
org.apache.openjpa.persistence.identity.BooleanIdEntity.setId(boolean),1,1
org.apache.openjpa.persistence.identity.BooleanIdEntity.getName(),2,3
org.apache.openjpa.persistence.identity.BooleanIdEntity.setName(String),3,6
org.apache.openjpa.persistence.identity.BooleanIdEntity.getOtherBoolean(),0,0
org.apache.openjpa.persistence.identity.BooleanIdEntity.setOtherBoolean(boolean),1,1
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCEntityD.getEntityDData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCEntityD.setEntityDData(String),4,10
org.apache.openjpa.conf.TestQueryProperties.setUp(),19,28
org.apache.openjpa.conf.TestQueryProperties.testNoProperties(),59,430
org.apache.openjpa.conf.TestQueryProperties.testWithProperties(),51,407
org.apache.openjpa.persistence.cache.jpa.model.CacheableEntity.getId(),0,0
org.apache.openjpa.persistence.cache.jpa.model.CacheableEntity.setId(int),1,1
org.apache.openjpa.persistence.cache.jpa.model.CacheableEntity.getVersion(),1,2
org.apache.openjpa.persistence.cache.jpa.model.CacheableEntity.setVersion(int),2,5
org.apache.openjpa.persistence.cache.jpa.model.CacheableEntity.getName(),2,3
org.apache.openjpa.persistence.cache.jpa.model.CacheableEntity.setName(String),3,6
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafC.getLeafCData(),3,3
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafC.setLeafCData(String),4,6
"org.apache.openjpa.persistence.enhance.identity.Dependent5a.Dependent5a(String,Employee5)",5,9
"org.apache.openjpa.persistence.enhance.identity.Dependent5a.Dependent5a(DependentId5,Employee5)",4,8
org.apache.openjpa.persistence.inheritance.mappedsuperclass.ValuableItemDA.setCode(short),2,5
org.apache.openjpa.persistence.inheritance.mappedsuperclass.ValuableItemDA.getCode(),1,2
org.apache.openjpa.enhance.EnhancedSubClass.getValueInSubclass(),3,5
org.apache.openjpa.enhance.EnhancedSubClass.setValueInSubclass(String),4,10
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.NameValidator.validateName(NamedEntity),19,28
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.NameValidator.testpost(NamedEntity),11,14
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.NameValidator.validateNothing(NamedEntity),16,19
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.NameValidator.validateNothing1(NamedEntity),16,19
"org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.GeneralCaseExpression(Exp[],Val)",4,10
org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.getExp(),1,3
org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.getVal(),1,3
org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.getType(),10,20
"org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.initialize(Select,ExpContext,int)",10,40
"org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.GeneralCaseExpState.GeneralCaseExpState(Joins,ExpState[])",2,5
"org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",13,34
"org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.selectColumns(Select,ExpContext,ExpState,boolean)",10,28
org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.acceptVisit(ExpressionVisitor),9,19
org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.getId(),2,3
"org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.calculateValue(Select,ExpContext,ExpState,Val,ExpState)",13,37
"org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.groupBy(Select,ExpContext,ExpState)",7,11
"org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.length(Select,ExpContext,ExpState)",6,7
"org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.newSQLBuffer(Select,ExpContext,ExpState)",14,28
"org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.load(ExpContext,ExpState,Result)",15,19
"org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.orderBy(Select,ExpContext,ExpState,boolean)",8,14
"org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.select(Select,ExpContext,ExpState,boolean)",8,14
org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.getMetaData(),2,5
org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.setImplicitType(Class),4,6
org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.setMetaData(ClassMetaData),3,8
org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.setOtherPath(Value),3,3
org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.getOtherPath(),2,2
org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.setOtherState(ExpState),2,2
org.apache.openjpa.jdbc.kernel.exps.GeneralCaseExpression.getOtherState(),1,1
org.apache.openjpa.lib.jdbc.DecoratingDataSource.DecoratingDataSource(DataSource),6,10
org.apache.openjpa.lib.jdbc.DecoratingDataSource.getDecorators(),9,13
org.apache.openjpa.lib.jdbc.DecoratingDataSource.addDecorator(ConnectionDecorator),4,12
org.apache.openjpa.lib.jdbc.DecoratingDataSource.addDecorators(Collection<ConnectionDecorator>),7,15
org.apache.openjpa.lib.jdbc.DecoratingDataSource.removeDecorator(ConnectionDecorator),4,11
org.apache.openjpa.lib.jdbc.DecoratingDataSource.clearDecorators(),1,3
org.apache.openjpa.lib.jdbc.DecoratingDataSource.getConnection(),5,9
"org.apache.openjpa.lib.jdbc.DecoratingDataSource.getConnection(String,String)",8,15
org.apache.openjpa.lib.jdbc.DecoratingDataSource.decorate(Connection),7,15
org.apache.openjpa.persistence.jdbc.annotations.TestMultiColumnVersion.setUp(),6,10
org.apache.openjpa.persistence.jdbc.annotations.TestMultiColumnVersion.testVersionStrategyIsSet(),7,13
org.apache.openjpa.persistence.jdbc.annotations.TestMultiColumnVersion.assertStrategy(Class),6,15
org.apache.openjpa.persistence.jdbc.annotations.TestMultiColumnVersion.testVersionOnPersistAndUpdateForSingleTable(),22,41
org.apache.openjpa.persistence.jdbc.annotations.TestMultiColumnVersion.testConcurrentOptimisticUpdateFailsForSingleTable(),28,66
org.apache.openjpa.persistence.jdbc.annotations.TestMultiColumnVersion.testConcurrentOptimisticReadSucceedsForSingleTable(),23,56
org.apache.openjpa.persistence.jdbc.annotations.TestMultiColumnVersion.testVersionOnPersistAndUpdateForMultiTable(),22,43
org.apache.openjpa.persistence.jdbc.annotations.TestMultiColumnVersion.testConcurrentOptimisticUpdateFailsForMultiTable(),28,70
org.apache.openjpa.persistence.jdbc.annotations.TestMultiColumnVersion.testConcurrentOptimisticReadSucceedsForMultiTable(),23,60
"org.apache.openjpa.persistence.jdbc.annotations.TestMultiColumnVersion.assertVersionEquals(Object,Object)",18,39
org.apache.openjpa.event.TransactionEventManager.addListener(Object),6,20
org.apache.openjpa.event.TransactionEventManager.removeListener(Object),6,20
org.apache.openjpa.event.TransactionEventManager.hasBeginListeners(),3,6
org.apache.openjpa.event.TransactionEventManager.hasFlushListeners(),3,6
org.apache.openjpa.event.TransactionEventManager.hasEndListeners(),2,3
"org.apache.openjpa.event.TransactionEventManager.fireEvent(Object,Object)",14,116
org.apache.openjpa.persistence.event.TestTCPRemoteClassChanges.TestTCPRemoteClassChanges(String),6,6
org.apache.openjpa.persistence.event.TestTCPRemoteClassChanges.setUp(),4,4
org.apache.openjpa.persistence.event.TestTCPRemoteClassChanges.tearDownTestClass(),3,5
org.apache.openjpa.persistence.event.TestTCPRemoteClassChanges.pause(double),6,10
org.apache.openjpa.persistence.event.TestTCPRemoteClassChanges.testAddedClasses(),78,274
"org.apache.openjpa.persistence.event.TestTCPRemoteClassChanges.performAdds(EntityManager,int)",23,50
"org.apache.openjpa.persistence.event.TestTCPRemoteClassChanges.performAddsModifiesDeletes(EntityManager,int)",28,51
"org.apache.openjpa.persistence.event.TestTCPRemoteClassChanges.createDistinctFactory(Class,String)",23,66
org.apache.openjpa.persistence.event.TestTCPRemoteClassChanges.RemoteCommitListenerTestImpl.afterCommit(RemoteCommitEvent),22,77
org.apache.openjpa.persistence.event.TestTCPRemoteClassChanges.RemoteCommitListenerTestImpl.resetCounts(),8,20
org.apache.openjpa.persistence.event.TestTCPRemoteClassChanges.RemoteCommitListenerTestImpl.close(),1,1
org.apache.openjpa.persistence.event.TestTCPRemoteClassChanges.RemoteCommitListenerTestImpl.toString(),11,33
org.apache.openjpa.persistence.jdbc.common.apps.AttachC.setCstr(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.AttachC.getCstr(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.AttachC.setCint(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachC.getCint(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachC.setCdbl(double),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachC.getCdbl(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachC.setEs(List),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachC.getEs(),1,1
org.apache.openjpa.kernel.AbstractStoreQuery.getContext(),3,4
org.apache.openjpa.kernel.AbstractStoreQuery.setContext(QueryContext),4,7
org.apache.openjpa.kernel.AbstractStoreQuery.setQuery(Object),3,4
org.apache.openjpa.kernel.AbstractStoreQuery.getFilterListener(String),4,6
org.apache.openjpa.kernel.AbstractStoreQuery.getAggregateListener(String),4,6
org.apache.openjpa.kernel.AbstractStoreQuery.newCompilationKey(),3,3
org.apache.openjpa.kernel.AbstractStoreQuery.newCompilation(),2,2
org.apache.openjpa.kernel.AbstractStoreQuery.getCompilation(),2,2
org.apache.openjpa.kernel.AbstractStoreQuery.populateFromCompilation(Object),4,4
org.apache.openjpa.kernel.AbstractStoreQuery.invalidateCompilation(),2,2
org.apache.openjpa.kernel.AbstractStoreQuery.supportsDataStoreExecution(),4,4
org.apache.openjpa.kernel.AbstractStoreQuery.supportsInMemoryExecution(),3,3
"org.apache.openjpa.kernel.AbstractStoreQuery.newInMemoryExecutor(ClassMetaData,boolean)",7,9
"org.apache.openjpa.kernel.AbstractStoreQuery.newDataStoreExecutor(ClassMetaData,boolean)",7,10
org.apache.openjpa.kernel.AbstractStoreQuery.supportsAbstractExecutors(),2,2
org.apache.openjpa.kernel.AbstractStoreQuery.requiresCandidateType(),3,3
org.apache.openjpa.kernel.AbstractStoreQuery.requiresParameterDeclarations(),3,3
org.apache.openjpa.kernel.AbstractStoreQuery.supportsParameterDeclarations(),3,3
"org.apache.openjpa.kernel.AbstractStoreQuery.evaluate(Object,Object,Object[],OpenJPAStateManager)",8,11
"org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.executeDelete(StoreQuery,Object[])",21,33
"org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.executeUpdate(StoreQuery,Object[])",20,33
"org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getDataStoreActions(StoreQuery,Object[],Range)",10,12
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.validate(StoreQuery),3,3
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getQueryExpressions(),2,4
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getResultShape(StoreQuery),4,6
"org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getRange(StoreQuery,Object[],Range)",5,7
"org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getOrderingValue(StoreQuery,Object[],Object,int)",7,10
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getAscending(StoreQuery),5,5
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.isPacking(StoreQuery),3,3
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getAlias(StoreQuery),4,4
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getProjectionAliases(StoreQuery),7,7
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getProjectionTypes(StoreQuery),6,6
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getAccessPathMetaDatas(StoreQuery),9,10
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getOperation(StoreQuery),4,4
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.isAggregate(StoreQuery),3,3
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.isDistinct(StoreQuery),3,3
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.hasGrouping(StoreQuery),2,2
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getOrderedParameterTypes(StoreQuery),8,8
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getParameterTypes(StoreQuery),7,15
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getResultClass(StoreQuery),3,3
org.apache.openjpa.kernel.AbstractStoreQuery.AbstractExecutor.getUpdates(StoreQuery),8,8
org.apache.openjpa.jdbc.oracle.XmlColEntity.getId(),0,0
org.apache.openjpa.jdbc.oracle.XmlColEntity.setId(int),1,1
org.apache.openjpa.jdbc.oracle.XmlColEntity.getVersion(),1,2
org.apache.openjpa.jdbc.oracle.XmlColEntity.setVersion(int),2,5
org.apache.openjpa.jdbc.oracle.XmlColEntity.getXmlColumn(),3,5
org.apache.openjpa.jdbc.oracle.XmlColEntity.setXmlColumn(String),4,10
"org.apache.openjpa.lib.jdbc.JDBCEvent.JDBCEvent(Connection,short,JDBCEvent,Statement,String)",14,30
org.apache.openjpa.lib.jdbc.JDBCEvent.getType(),3,5
org.apache.openjpa.lib.jdbc.JDBCEvent.getConnection(),3,6
org.apache.openjpa.lib.jdbc.JDBCEvent.getTime(),3,5
org.apache.openjpa.lib.jdbc.JDBCEvent.getAssociatedEvent(),11,22
org.apache.openjpa.lib.jdbc.JDBCEvent.getSQL(),4,6
org.apache.openjpa.lib.jdbc.JDBCEvent.getStatement(),5,9
org.apache.openjpa.example.gallery.TestJPAValidation.testValidation(),78,244
org.apache.openjpa.example.gallery.TestJPAValidation.handleConstraintViolation(ConstraintViolationException),27,67
org.apache.openjpa.example.gallery.TestJPAValidation.loadImage(Image),15,18
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.EagerPC(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.EagerPC(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.setStringField(String),3,10
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.getEager(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.setEager(HelperPC),3,6
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.getRecurse(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.setRecurse(HelperPC2),3,6
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.getHelper(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.setHelper(HelperPC),2,6
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.getEagerCollection(),3,5
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.setEagerCollection(List),4,10
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.getRecurseCollection(),3,5
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.setRecurseCollection(List),4,10
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.getHelperCollection(),3,5
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.setHelperCollection(List),4,10
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.getEagerSub(),3,5
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.setEagerSub(HelperPC4),4,10
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.EagerPC.setId(int),1,1
"org.apache.openjpa.jdbc.kernel.exps.ContainsExpression.ContainsExpression(Val,Val)",7,12
"org.apache.openjpa.jdbc.kernel.exps.ContainsExpression.initialize(Select,ExpContext,Map)",17,49
org.apache.openjpa.jdbc.kernel.exps.ContainsExpression.isDirectComparison(),2,2
jpa.tools.swing.Finder.usage(),18,54
jpa.tools.swing.Finder.main(String[]),12,22
"jpa.tools.swing.Finder.scan(File,String)",25,71
"jpa.tools.swing.Finder.scan(File,String).$1.accept(File)",5,6
"jpa.tools.swing.Finder.scan(File,String).$2.accept(File)",6,7
"jpa.tools.swing.Finder.scan(File,String).$3.accept(File)",4,5
"jpa.tools.swing.Finder.scan(JarFile,String)",20,54
jpa.tools.swing.Finder.debug(String),5,6
org.apache.openjpa.persistence.jdbc.annotations.TestSequenceGenerator.setUp(),17,25
org.apache.openjpa.persistence.jdbc.annotations.TestSequenceGenerator.getPersistenceUnitName(),5,5
org.apache.openjpa.persistence.jdbc.annotations.TestSequenceGenerator.testSequenceSchema(),34,60
org.apache.openjpa.persistence.jdbc.annotations.TestSequenceGenerator.testORMSequenceSchema(),34,63
"org.apache.openjpa.persistence.jdbc.annotations.TestSequenceGenerator.sequenceExists(OpenJPAEntityManagerSPI,String,String)",36,69
org.apache.openjpa.lib.conf.Configuration.getProductName(),6,9
org.apache.openjpa.lib.conf.Configuration.setProductName(String),4,8
org.apache.openjpa.lib.conf.Configuration.getLogFactory(),6,12
org.apache.openjpa.lib.conf.Configuration.setLogFactory(LogFactory),3,8
org.apache.openjpa.lib.conf.Configuration.getLog(),4,5
org.apache.openjpa.lib.conf.Configuration.setLog(String),5,7
org.apache.openjpa.lib.conf.Configuration.getLog(String),4,8
org.apache.openjpa.lib.conf.Configuration.getConfigurationLog(),3,6
org.apache.openjpa.lib.conf.Configuration.getId(),14,15
org.apache.openjpa.lib.conf.Configuration.setId(String),15,16
org.apache.openjpa.lib.conf.Configuration.getValue(String),5,8
org.apache.openjpa.lib.conf.Configuration.getValues(),4,5
org.apache.openjpa.lib.conf.Configuration.addValue(T),10,14
org.apache.openjpa.lib.conf.Configuration.removeValue(Value),6,9
org.apache.openjpa.lib.conf.Configuration.toProperties(boolean),17,25
org.apache.openjpa.lib.conf.Configuration.getPropertyKeys(String),12,22
org.apache.openjpa.lib.conf.Configuration.getPropertyKeys(),8,12
org.apache.openjpa.lib.conf.Configuration.fromProperties(Map),31,48
org.apache.openjpa.lib.conf.Configuration.addPropertyChangeListener(PropertyChangeListener),13,24
org.apache.openjpa.lib.conf.Configuration.removePropertyChangeListener(PropertyChangeListener),7,16
org.apache.openjpa.lib.conf.Configuration.setReadOnly(int),8,11
org.apache.openjpa.lib.conf.Configuration.isReadOnly(),3,3
org.apache.openjpa.lib.conf.Configuration.instantiateAll(),11,12
org.apache.openjpa.lib.conf.Configuration.close(),4,4
org.apache.openjpa.lib.conf.Configuration.clone(),4,4
org.apache.openjpa.lib.conf.Configuration.getUserClassLoader(),14,18
org.apache.openjpa.lib.conf.Configuration.setUserClassLoader(ClassLoader),23,35
org.apache.openjpa.persistence.criteria.Department.getDeptno(),2,2
org.apache.openjpa.persistence.criteria.Department.setDeptno(int),3,5
org.apache.openjpa.persistence.criteria.Department.getName(),2,3
org.apache.openjpa.persistence.criteria.Department.setName(String),3,6
org.apache.openjpa.persistence.criteria.Department.getEmployees(),3,4
org.apache.openjpa.persistence.criteria.Department.setEmployees(Set<Employee>),3,7
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.getLog(),2,5
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.setLog(Log),3,8
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.serialize(int),4,6
"org.apache.openjpa.lib.meta.XMLMetaDataSerializer.serialize(Map,int)",36,102
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.prepareWrite(File),18,42
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.getFileMap(),27,87
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.getSourceFile(Object),8,21
"org.apache.openjpa.lib.meta.XMLMetaDataSerializer.serialize(File,int)",23,41
"org.apache.openjpa.lib.meta.XMLMetaDataSerializer.serialize(Writer,int)",10,20
"org.apache.openjpa.lib.meta.XMLMetaDataSerializer.serialize(Result,int)",14,31
"org.apache.openjpa.lib.meta.XMLMetaDataSerializer.serialize(ContentHandler,int)",12,19
"org.apache.openjpa.lib.meta.XMLMetaDataSerializer.serialize(Collection<Object>,ContentHandler,int)",19,38
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.isVerbose(),4,6
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.currentBackupFile(),4,10
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.startElement(String),13,20
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.endElement(String),7,11
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.addText(String),11,16
"org.apache.openjpa.lib.meta.XMLMetaDataSerializer.addAttribute(String,String)",8,16
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.getAttributes(),3,5
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.addComments(String[]),12,30
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.addComments(Object),12,20
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.reset(),7,8
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.serialize(Collection<Object>),8,9
org.apache.openjpa.lib.meta.XMLMetaDataSerializer.getObjects(),6,7
org.apache.openjpa.persistence.delimited.identifiers.EntityI2.EntityI2(),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityI2.EntityI2(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityI2.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityI2.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityI2.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityI2.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.EntityI2.getEntityI3(),1,4
org.apache.openjpa.persistence.delimited.identifiers.EntityI2.setEntityI3(EntityI3),3,10
"org.apache.openjpa.persistence.meta.MetadataProcessor<T,M>.determineTypeAccess(T)",10,19
"org.apache.openjpa.persistence.meta.MetadataProcessor<T,M>.determineMemberAccess(M)",11,18
"org.apache.openjpa.persistence.meta.MetadataProcessor<T,M>.getPersistentMembers(T)",3,4
"org.apache.openjpa.persistence.meta.MetadataProcessor<T,M>.validateAccess(T)",7,8
"org.apache.openjpa.persistence.meta.MetadataProcessor<T,M>.isMixedAccess(T)",8,9
"org.apache.openjpa.persistence.meta.MetadataProcessor<T,M>.getPersistentSupertype(T)",2,2
org.apache.openjpa.persistence.criteria.results.Bar.Bar(),1,1
"org.apache.openjpa.persistence.criteria.results.Bar.Bar(long,String)",4,8
org.apache.openjpa.persistence.criteria.results.Bar.getBid(),1,2
org.apache.openjpa.persistence.criteria.results.Bar.setBid(long),2,5
org.apache.openjpa.persistence.criteria.results.Bar.getBshort(),1,2
org.apache.openjpa.persistence.criteria.results.Bar.setBshort(short),2,5
org.apache.openjpa.persistence.criteria.results.Bar.getBstring(),2,3
org.apache.openjpa.persistence.criteria.results.Bar.setBstring(String),3,6
org.apache.openjpa.persistence.criteria.results.Bar.getBint(),1,2
org.apache.openjpa.persistence.criteria.results.Bar.setBint(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.getBooleanB(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.setBooleanB(boolean),1,1
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.getByteB(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.setByteB(byte),1,1
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.getCharB(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.setCharB(char),1,1
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.getFloatB(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.setFloatB(float),1,1
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.getIntB(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.setIntB(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.getStringB(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.setStringB(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.getClobB(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.setClobB(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.getBlobB(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesB.setBlobB(Object),3,6
"org.apache.openjpa.lib.rop.ResultListIterator.ResultListIterator(ListIterator,ResultList)",3,7
org.apache.openjpa.lib.rop.ResultListIterator.getResultList(),2,4
org.apache.openjpa.lib.rop.ResultListIterator.hasNext(),1,1
org.apache.openjpa.lib.rop.ResultListIterator.hasPrevious(),1,2
org.apache.openjpa.lib.rop.ResultListIterator.next(),6,7
org.apache.openjpa.lib.rop.ResultListIterator.nextIndex(),1,2
org.apache.openjpa.lib.rop.ResultListIterator.previous(),2,3
org.apache.openjpa.lib.rop.ResultListIterator.previousIndex(),2,4
"org.apache.openjpa.kernel.exps.Divide.Divide(Val,Val)",5,11
"org.apache.openjpa.kernel.exps.Divide.operate(Object,Class,Object,Class)",4,6
"org.apache.openjpa.persistence.criteria.results.ShipRate.ShipRate(long,BigDecimal)",5,15
org.apache.openjpa.persistence.derivedid.EDDateID.EDDateID(),1,1
org.apache.openjpa.persistence.derivedid.EDDateID.EDDateID(EDateID),4,9
org.apache.openjpa.persistence.derivedid.EDDateID.getRid(),2,3
org.apache.openjpa.persistence.derivedid.EDDateID.setRid(EDateID),3,6
org.apache.openjpa.persistence.derivedid.EDDateID.getName(),2,3
org.apache.openjpa.persistence.derivedid.EDDateID.setName(String),3,6
org.apache.openjpa.jdbc.sql.PointbaseDictionary.PointbaseDictionary(),54,108
org.apache.openjpa.jdbc.sql.PointbaseDictionary.getPreferredType(int),5,11
"org.apache.openjpa.jdbc.sql.PointbaseDictionary.getColumns(DatabaseMetaData,String,String,String,String,Connection)",15,39
"org.apache.openjpa.jdbc.sql.PointbaseDictionary.getColumns(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",27,56
org.apache.openjpa.jdbc.sql.PointbaseDictionary.getFullName(Index),9,16
"org.apache.openjpa.jdbc.sql.PointbaseDictionary.substring(SQLBuffer,FilterValue,FilterValue,FilterValue)",14,38
"org.apache.openjpa.jdbc.sql.PointbaseDictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",11,37
"org.apache.openjpa.kernel.exps.MatchesExpression.MatchesExpression(Val,Val,String,String,String,boolean)",20,35
"org.apache.openjpa.kernel.exps.MatchesExpression.compare(Object,Object)",25,59
"org.apache.openjpa.persistence.graph.PersistentRelation<V1,V2>.PersistentRelation()",6,6
"org.apache.openjpa.persistence.graph.PersistentRelation<V1,V2>.PersistentRelation(V1,V2)",15,23
"org.apache.openjpa.persistence.graph.PersistentRelation<V1,V2>.getId()",3,3
"org.apache.openjpa.persistence.graph.PersistentRelation<V1,V2>.getSource()",3,5
"org.apache.openjpa.persistence.graph.PersistentRelation<V1,V2>.getTarget()",3,5
"org.apache.openjpa.persistence.graph.PersistentRelation<V1,V2>.hasAttribute(String)",9,11
"org.apache.openjpa.persistence.graph.PersistentRelation<V1,V2>.getAttribute(String)",9,17
"org.apache.openjpa.persistence.graph.PersistentRelation<V1,V2>.getAttributes()",3,3
"org.apache.openjpa.persistence.graph.PersistentRelation<V1,V2>.addAttribute(String,Object)",17,20
"org.apache.openjpa.persistence.graph.PersistentRelation<V1,V2>.removeAttribute(String)",12,20
"org.apache.openjpa.persistence.graph.PersistentRelation<V1,V2>.toString()",3,4
org.apache.openjpa.kernel.exps.Null.getType(),2,2
org.apache.openjpa.kernel.exps.Null.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.Null.eval(Object,Object,StoreContext,Object[])",8,11
org.apache.openjpa.persistence.datacache.TestEmbeddedCollection.setUp(),30,43
org.apache.openjpa.persistence.datacache.TestEmbeddedCollection.isDataCacheActive(OpenJPAEntityManagerFactorySPI),15,25
org.apache.openjpa.persistence.datacache.TestEmbeddedCollection.createData(),23,54
org.apache.openjpa.persistence.datacache.TestEmbeddedCollection.testRemoveMemberFromEmbeddedCollection(),24,57
org.apache.openjpa.persistence.cache.jpa.model.NegatedUncacheableEntity.getName(),2,3
org.apache.openjpa.persistence.cache.jpa.model.NegatedUncacheableEntity.setName(String),3,6
org.apache.openjpa.persistence.cache.jpa.model.NegatedUncacheableEntity.getId(),0,0
org.apache.openjpa.persistence.cache.jpa.model.NegatedUncacheableEntity.setId(int),1,1
org.apache.openjpa.persistence.cache.jpa.model.NegatedUncacheableEntity.getVersion(),1,2
org.apache.openjpa.persistence.cache.jpa.model.NegatedUncacheableEntity.setVersion(int),2,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCRootEntity.getRootEntityData(),4,7
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCRootEntity.setRootEntityData(String),5,14
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess.setVersion(int),2,5
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess.getVersion(),1,2
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess.setStringField(String),5,8
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess.getStringField(),3,5
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess.equals(Object),10,28
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess.setStrField(String),4,10
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess.getStrField(),3,5
org.apache.openjpa.persistence.inheritance.entity.BaseClass.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entity.BaseClass.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.BaseClass.setVersion(int),2,5
org.apache.openjpa.persistence.inheritance.entity.BaseClass.getVersion(),1,2
org.apache.openjpa.persistence.inheritance.entity.BaseClass.setName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.BaseClass.getName(),2,3
org.apache.openjpa.persistence.inheritance.entity.BaseClass.toString(),3,6
org.apache.openjpa.persistence.inheritance.polymorphic.GermanParagraph.getContent(),2,3
org.apache.openjpa.persistence.inheritance.polymorphic.GermanParagraph.setContent(String),3,6
"org.apache.openjpa.jdbc.kernel.exps.JDBCFilterListener.appendTo(SQLBuffer,FilterValue,FilterValue[],ClassMapping,JDBCStore)",23,51
org.apache.openjpa.persistence.criteria.Photo.getId(),0,0
org.apache.openjpa.persistence.criteria.Photo.getLabel(),2,3
org.apache.openjpa.persistence.criteria.Photo.setLabel(String),3,6
org.apache.openjpa.persistence.access.xml.XMLMixedMappedSuper.setId(int),2,3
org.apache.openjpa.persistence.access.xml.XMLMixedMappedSuper.getId(),1,1
org.apache.openjpa.persistence.access.xml.XMLMixedMappedSuper.setName(String),4,6
org.apache.openjpa.persistence.access.xml.XMLMixedMappedSuper.getName(),3,3
org.apache.openjpa.persistence.access.xml.XMLMixedMappedSuper.equals(Object),7,17
org.apache.openjpa.persistence.access.xml.XMLMixedMappedSuper.setMid(int),2,5
org.apache.openjpa.persistence.access.xml.XMLMixedMappedSuper.getMid(),1,2
org.apache.openjpa.persistence.jdbc.annotations.TestEnumerated.setUp(),5,8
org.apache.openjpa.persistence.jdbc.annotations.TestEnumerated.testMapping(),24,86
org.apache.openjpa.persistence.jdbc.annotations.TestEnumerated.testBehavior(),22,105
org.apache.openjpa.persistence.annotations.PColl_EntityStringEager.getId(),0,0
org.apache.openjpa.persistence.annotations.PColl_EntityStringEager.setId(int),1,1
org.apache.openjpa.persistence.annotations.PColl_EntityStringEager.getCollectionOfStrings(),4,6
org.apache.openjpa.persistence.annotations.PColl_EntityStringEager.setCollectionOfStrings(Set<String>),4,11
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC4.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC4.setIntField(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.MultiA.setString0(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.MultiA.getString0(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.MultiA.setInt0(int),3,4
org.apache.openjpa.persistence.jdbc.common.apps.MultiA.setString1(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.MultiA.getString1(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.MultiA.getInt0(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.MultiA.setInt1(int),3,4
org.apache.openjpa.persistence.jdbc.common.apps.MultiA.getInt1(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.MultiA.setMultiCs(Set),3,6
org.apache.openjpa.persistence.jdbc.common.apps.MultiA.getMultiCs(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.UnidirectionalOneToOneOwned.getMarker(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.UnidirectionalOneToOneOwned.setMarker(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.UnidirectionalOneToOneOwned.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.UnidirectionalOneToOneOwned.getVersion(),1,2
"org.apache.openjpa.trader.client.TradingServiceAdapterAsync.ask(Trader,Stock,int,double,AsyncCallback<Ask>)",6,9
"org.apache.openjpa.trader.client.TradingServiceAdapterAsync.bid(Trader,Stock,int,double,AsyncCallback<Bid>)",7,11
"org.apache.openjpa.trader.client.TradingServiceAdapterAsync.getStock(String,AsyncCallback<Stock>)",5,7
org.apache.openjpa.trader.client.TradingServiceAdapterAsync.getStocks(AsyncCallback<List<Stock>>),5,6
"org.apache.openjpa.trader.client.TradingServiceAdapterAsync.getTrades(Timestamp,Timestamp,AsyncCallback<List<Trade>>)",6,8
"org.apache.openjpa.trader.client.TradingServiceAdapterAsync.getTrades(Trader,Boolean,Timestamp,Timestamp,AsyncCallback<List<Trade>>)",9,12
"org.apache.openjpa.trader.client.TradingServiceAdapterAsync.login(String,AsyncCallback<Trader>)",5,7
"org.apache.openjpa.trader.client.TradingServiceAdapterAsync.matchAsk(Ask,AsyncCallback<List<Match>>)",4,6
"org.apache.openjpa.trader.client.TradingServiceAdapterAsync.matchBid(Bid,AsyncCallback<List<Match>>)",5,9
"org.apache.openjpa.trader.client.TradingServiceAdapterAsync.trade(Match,AsyncCallback<Trade>)",4,7
org.apache.openjpa.trader.client.TradingServiceAdapterAsync.getLog(AsyncCallback<List<LogStatement>>),5,7
"org.apache.openjpa.trader.client.TradingServiceAdapterAsync.withdraw(Tradable,AsyncCallback<Tradable>)",4,6
"org.apache.openjpa.trader.client.TradingServiceAdapterAsync.refresh(Tradable,AsyncCallback<Tradable>)",4,6
org.apache.openjpa.trader.client.TradingServiceAdapterAsync.getServiceURI(AsyncCallback<String>),5,6
org.apache.openjpa.persistence.flush.Course.getCourseId(),1,2
org.apache.openjpa.persistence.flush.Course.setCourseId(Long),2,5
org.apache.openjpa.persistence.flush.Course.getCourseText(),3,5
org.apache.openjpa.persistence.flush.Course.setCourseText(String),4,10
org.apache.openjpa.persistence.flush.Course.getClassPeriods(),3,4
org.apache.openjpa.persistence.flush.Course.setClassPeriods(Set<ClassPeriod>),3,7
org.apache.openjpa.persistence.datacache.TestResultShapes.TestResultShapes(String),5,7
org.apache.openjpa.persistence.datacache.TestResultShapes.setUp(),27,65
org.apache.openjpa.persistence.datacache.TestResultShapes.tearDown(),4,6
org.apache.openjpa.persistence.datacache.TestResultShapes.testCollectionOfSingleValuedProjection(),13,23
org.apache.openjpa.persistence.datacache.TestResultShapes.testUniqueSingleValuedProjection(),14,23
org.apache.openjpa.persistence.datacache.TestResultShapes.testCollectionOfMultiValuedProjection(),23,42
org.apache.openjpa.persistence.datacache.TestResultShapes.testUniqueMultiValuedProjection(),24,42
org.apache.openjpa.persistence.datacache.TestResultShapes.testUncachedQueryHasCorrectShape(),22,36
"org.apache.openjpa.persistence.datacache.TestResultShapes.arrayHelper(boolean,Collection,Collection,boolean)",18,65
"org.apache.openjpa.persistence.datacache.TestResultShapes.arrayResultHelper(Object,Collection,boolean)",12,28
"org.apache.openjpa.persistence.datacache.TestResultShapes.mapHelper(boolean,Collection,Collection,boolean)",22,96
"org.apache.openjpa.persistence.datacache.TestResultShapes.mapResultHelper(Object,Collection,Collection,boolean)",19,49
"org.apache.openjpa.persistence.datacache.TestResultShapes.rawHelper(boolean,Class,String,boolean)",19,57
"org.apache.openjpa.persistence.datacache.TestResultShapes.setUpQuery(boolean,Collection)",28,69
org.apache.openjpa.jdbc.meta.TestMappingToolAutoDelete.setUp(),30,52
org.apache.openjpa.jdbc.meta.TestMappingToolAutoDelete.tearDown(),3,3
org.apache.openjpa.jdbc.meta.TestMappingToolAutoDelete.testMappingToolAutoDelete(),35,57
org.apache.openjpa.persistence.detachment.model.NoDetachedStateEntityPropertyAccess.NoDetachedStateEntityPropertyAccess(),4,4
org.apache.openjpa.persistence.detachment.model.NoDetachedStateEntityPropertyAccess.getId(),0,0
org.apache.openjpa.persistence.detachment.model.NoDetachedStateEntityPropertyAccess.setId(int),1,1
org.apache.openjpa.persistence.detachment.model.NoDetachedStateEntityPropertyAccess.getVersion(),1,2
org.apache.openjpa.persistence.detachment.model.NoDetachedStateEntityPropertyAccess.setVersion(int),2,5
org.apache.openjpa.persistence.detachment.model.NoDetachedStateEntityPropertyAccess.getString(),1,3
org.apache.openjpa.persistence.detachment.model.NoDetachedStateEntityPropertyAccess.setString(String),2,6
org.apache.openjpa.persistence.jdbc.meta.TestEJBColumnIOMappings.TestEJBColumnIOMappings(String),6,7
org.apache.openjpa.persistence.jdbc.meta.TestEJBColumnIOMappings.setUp(),4,4
org.apache.openjpa.persistence.jdbc.meta.TestEJBColumnIOMappings.testIgnoreInsert(),14,54
org.apache.openjpa.persistence.jdbc.meta.TestEJBColumnIOMappings.testIgnoreUpdate(),15,51
org.apache.openjpa.persistence.jdbc.meta.TestEJBColumnIOMappings.testPrimitiveMappedToFieldOfForeignKey(),21,74
org.apache.openjpa.persistence.identity.FloatIdEntity.getId(),0,0
org.apache.openjpa.persistence.identity.FloatIdEntity.setId(float),1,1
org.apache.openjpa.persistence.identity.FloatIdEntity.getData(),1,2
org.apache.openjpa.persistence.identity.FloatIdEntity.setData(int),2,5
org.apache.openjpa.persistence.embed.Embed_MappedToOneCascadeDelete.getName1(),2,3
org.apache.openjpa.persistence.embed.Embed_MappedToOneCascadeDelete.setName1(String),3,6
org.apache.openjpa.persistence.embed.Embed_MappedToOneCascadeDelete.getName2(),2,3
org.apache.openjpa.persistence.embed.Embed_MappedToOneCascadeDelete.setName2(String),3,6
org.apache.openjpa.persistence.embed.Embed_MappedToOneCascadeDelete.getName3(),2,3
org.apache.openjpa.persistence.embed.Embed_MappedToOneCascadeDelete.setName3(String),3,6
org.apache.openjpa.persistence.embed.Embed_MappedToOneCascadeDelete.setMappedEntityB(EntityB2),3,4
org.apache.openjpa.persistence.embed.Embed_MappedToOneCascadeDelete.getMappedEntityB(),2,3
org.apache.openjpa.persistence.embed.LocationDetails.getOfficeNumber(),1,2
org.apache.openjpa.persistence.embed.LocationDetails.setOfficeNumber(int),2,5
org.apache.openjpa.persistence.embed.LocationDetails.getParkingSpot(),2,6
org.apache.openjpa.persistence.embed.LocationDetails.setParkingSpot(ParkingSpot),3,11
org.apache.openjpa.persistence.identity.TestSQLBigDecimalId.setUp(),6,7
org.apache.openjpa.persistence.identity.TestSQLBigDecimalId.testPersist(),20,47
org.apache.openjpa.persistence.identity.TestSQLBigDecimalId.testQuery(),27,55
org.apache.openjpa.persistence.identity.TestSQLBigDecimalId.main(String[]),8,9
org.apache.openjpa.trader.service.TradingService.getStocks(),5,7
org.apache.openjpa.trader.service.TradingService.login(String),6,9
"org.apache.openjpa.trader.service.TradingService.ask(Trader,Stock,int,double)",7,19
"org.apache.openjpa.trader.service.TradingService.bid(Trader,Stock,int,double)",9,22
org.apache.openjpa.trader.service.TradingService.matchBid(Bid),11,17
org.apache.openjpa.trader.service.TradingService.matchAsk(Ask),10,12
org.apache.openjpa.trader.service.TradingService.withdraw(Tradable),2,3
org.apache.openjpa.trader.service.TradingService.refresh(Tradable),2,3
org.apache.openjpa.trader.service.TradingService.close(),1,1
org.apache.openjpa.trader.service.TradingService.trade(Match),4,8
"org.apache.openjpa.trader.service.TradingService.getTrades(Timestamp,Timestamp)",8,11
"org.apache.openjpa.trader.service.TradingService.getTrades(Trader,Boolean,Timestamp,Timestamp)",11,16
org.apache.openjpa.trader.service.TradingService.getStock(String),6,10
org.apache.openjpa.trader.service.TradingService.getLog(),6,7
org.apache.openjpa.trader.service.TradingService.getServiceURI(),4,7
org.apache.openjpa.persistence.enhance.common.apps.Entity2.Entity2(),1,1
"org.apache.openjpa.persistence.enhance.common.apps.Entity2.Entity2(long,String,int)",3,11
org.apache.openjpa.persistence.enhance.common.apps.Entity2.getPk(),0,0
org.apache.openjpa.persistence.enhance.common.apps.Entity2.setStringField(String),4,8
org.apache.openjpa.persistence.enhance.common.apps.Entity2.getStringField(),2,5
org.apache.openjpa.persistence.enhance.common.apps.Entity2.setIntField(int),3,5
org.apache.openjpa.persistence.enhance.common.apps.Entity2.getIntField(),1,2
org.apache.openjpa.persistence.enhance.common.apps.Entity2.toString(),2,8
org.apache.openjpa.persistence.enhance.identity.TestMapsIdXml.setUp(),3,4
org.apache.openjpa.persistence.enhance.identity.TestMapsIdXml.getPersistenceUnitName(),5,5
org.apache.openjpa.persistence.enhance.identity.TestMapsIdXml.testMapsId1Xml(),8,13
org.apache.openjpa.persistence.enhance.identity.TestMapsIdXml.createObj1Xml(),15,24
"org.apache.openjpa.persistence.enhance.identity.TestMapsIdXml.createEmployee1Xml(EntityManager,int)",14,30
"org.apache.openjpa.persistence.enhance.identity.TestMapsIdXml.createDependent1Xml(EntityManager,int,Employee1Xml)",11,26
org.apache.openjpa.persistence.enhance.identity.TestMapsIdXml.findObj1Xml(),15,27
org.apache.openjpa.persistence.enhance.identity.TestMapsIdXml.queryObj1Xml(),4,6
org.apache.openjpa.persistence.enhance.identity.TestMapsIdXml.queryDependent1Xml(),20,41
org.apache.openjpa.persistence.enhance.identity.TestMapsIdXml.assertDependent1Xml(Dependent1Xml),6,16
org.apache.openjpa.persistence.generationtype.Dog1.Dog1(),1,1
org.apache.openjpa.persistence.generationtype.Dog1.Dog1(String),3,5
org.apache.openjpa.persistence.generationtype.Dog1.getId2(),0,0
org.apache.openjpa.persistence.generationtype.Dog1.setId2(int),1,1
org.apache.openjpa.persistence.generationtype.Dog1.getName(),2,3
org.apache.openjpa.persistence.generationtype.Dog1.setName(String),3,6
org.apache.openjpa.persistence.generationtype.Dog1.getPrice(),1,2
org.apache.openjpa.persistence.generationtype.Dog1.setPrice(float),2,5
org.apache.openjpa.persistence.generationtype.Dog1.isDomestic(),1,2
org.apache.openjpa.persistence.generationtype.Dog1.setDomestic(boolean),2,5
org.apache.openjpa.integration.daytrader.AccountDataBean.AccountDataBean(),3,3
"org.apache.openjpa.integration.daytrader.AccountDataBean.AccountDataBean(Integer,int,int,Date,Date,BigDecimal,BigDecimal,String)",14,50
"org.apache.openjpa.integration.daytrader.AccountDataBean.AccountDataBean(int,int,Date,Date,BigDecimal,BigDecimal,String)",13,45
org.apache.openjpa.integration.daytrader.AccountDataBean.getRandomInstance(),22,53
org.apache.openjpa.integration.daytrader.AccountDataBean.toString(),10,26
org.apache.openjpa.integration.daytrader.AccountDataBean.toHTML(),11,26
org.apache.openjpa.integration.daytrader.AccountDataBean.print(),3,4
org.apache.openjpa.integration.daytrader.AccountDataBean.getAccountID(),2,3
org.apache.openjpa.integration.daytrader.AccountDataBean.setAccountID(Integer),3,6
org.apache.openjpa.integration.daytrader.AccountDataBean.getLoginCount(),2,4
org.apache.openjpa.integration.daytrader.AccountDataBean.setLoginCount(int),3,9
org.apache.openjpa.integration.daytrader.AccountDataBean.getLogoutCount(),2,4
org.apache.openjpa.integration.daytrader.AccountDataBean.setLogoutCount(int),3,9
org.apache.openjpa.integration.daytrader.AccountDataBean.getLastLogin(),2,3
org.apache.openjpa.integration.daytrader.AccountDataBean.setLastLogin(Date),3,6
org.apache.openjpa.integration.daytrader.AccountDataBean.getCreationDate(),2,5
org.apache.openjpa.integration.daytrader.AccountDataBean.setCreationDate(Date),3,10
org.apache.openjpa.integration.daytrader.AccountDataBean.getBalance(),2,3
org.apache.openjpa.integration.daytrader.AccountDataBean.setBalance(BigDecimal),3,6
org.apache.openjpa.integration.daytrader.AccountDataBean.getOpenBalance(),2,3
org.apache.openjpa.integration.daytrader.AccountDataBean.setOpenBalance(BigDecimal),3,6
org.apache.openjpa.integration.daytrader.AccountDataBean.getProfileID(),2,3
org.apache.openjpa.integration.daytrader.AccountDataBean.setProfileID(String),3,6
org.apache.openjpa.integration.daytrader.AccountDataBean.getOrders(),3,3
org.apache.openjpa.integration.daytrader.AccountDataBean.setOrders(Collection<OrderDataBean>),4,4
org.apache.openjpa.integration.daytrader.AccountDataBean.getHoldings(),5,6
org.apache.openjpa.integration.daytrader.AccountDataBean.setHoldings(Collection<HoldingDataBean>),6,9
org.apache.openjpa.integration.daytrader.AccountDataBean.getProfile(),4,6
org.apache.openjpa.integration.daytrader.AccountDataBean.setProfile(AccountProfileDataBean),5,9
org.apache.openjpa.integration.daytrader.AccountDataBean.login(String),21,46
org.apache.openjpa.integration.daytrader.AccountDataBean.logout(),3,6
org.apache.openjpa.integration.daytrader.AccountDataBean.hashCode(),3,9
org.apache.openjpa.integration.daytrader.AccountDataBean.equals(Object),11,26
org.apache.openjpa.persistence.identity.entityasidentity2.TestEntityAsIdentityFields2.setUp(),5,6
org.apache.openjpa.persistence.identity.entityasidentity2.TestEntityAsIdentityFields2.testEntityAsIdentityField001(),13,20
org.apache.openjpa.persistence.embed.FeatureXml.getId(),2,2
org.apache.openjpa.persistence.embed.FeatureXml.setId(FeatureIdXml),3,3
org.apache.openjpa.persistence.embed.FeatureXml.getAttributes(),4,5
org.apache.openjpa.persistence.embed.FeatureXml.setAttributes(List<AttributeXml>),5,8
org.apache.openjpa.persistence.embed.FeatureXml.FeatureXml(),2,2
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCLeafB1.getLeafB1Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCLeafB1.setLeafB1Data(String),4,10
org.apache.openjpa.kernel.exps.Abs.Abs(Val),7,9
org.apache.openjpa.kernel.exps.Abs.getType(Class),6,15
"org.apache.openjpa.kernel.exps.Abs.operate(Object,Class)",9,29
org.apache.openjpa.persistence.inheritance.entity.SubclassC.setClassCName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.SubclassC.getClassAName(),2,3
org.apache.openjpa.persistence.inheritance.entity.SubclassC.toString(),2,5
org.apache.openjpa.kernel.FetchConfiguration.getContext(),7,9
org.apache.openjpa.kernel.FetchConfiguration.setContext(StoreContext),18,26
org.apache.openjpa.kernel.FetchConfiguration.clone(),3,4
org.apache.openjpa.kernel.FetchConfiguration.copy(FetchConfiguration),3,7
org.apache.openjpa.kernel.FetchConfiguration.getFetchBatchSize(),15,22
org.apache.openjpa.kernel.FetchConfiguration.setFetchBatchSize(int),16,29
org.apache.openjpa.kernel.FetchConfiguration.getMaxFetchDepth(),9,11
org.apache.openjpa.kernel.FetchConfiguration.setMaxFetchDepth(int),20,29
org.apache.openjpa.kernel.FetchConfiguration.getQueryCacheEnabled(),9,22
org.apache.openjpa.kernel.FetchConfiguration.setQueryCacheEnabled(boolean),14,20
org.apache.openjpa.kernel.FetchConfiguration.getFlushBeforeQueries(),5,6
org.apache.openjpa.kernel.FetchConfiguration.setFlushBeforeQueries(int),7,10
org.apache.openjpa.kernel.FetchConfiguration.getExtendedPathLookup(),6,9
org.apache.openjpa.kernel.FetchConfiguration.setExtendedPathLookup(boolean),9,12
org.apache.openjpa.kernel.FetchConfiguration.getFetchGroups(),15,20
org.apache.openjpa.kernel.FetchConfiguration.hasFetchGroup(String),3,4
org.apache.openjpa.kernel.FetchConfiguration.addFetchGroup(String),10,13
org.apache.openjpa.kernel.FetchConfiguration.addFetchGroups(Collection<String>),11,14
org.apache.openjpa.kernel.FetchConfiguration.removeFetchGroup(String),4,7
org.apache.openjpa.kernel.FetchConfiguration.removeFetchGroups(Collection<String>),11,14
org.apache.openjpa.kernel.FetchConfiguration.clearFetchGroups(),14,18
org.apache.openjpa.kernel.FetchConfiguration.resetFetchGroups(),7,10
org.apache.openjpa.kernel.FetchConfiguration.getFields(),14,17
org.apache.openjpa.kernel.FetchConfiguration.hasField(String),4,6
org.apache.openjpa.kernel.FetchConfiguration.addField(String),12,16
org.apache.openjpa.kernel.FetchConfiguration.addFields(Collection<String>),14,17
org.apache.openjpa.kernel.FetchConfiguration.removeField(String),6,9
org.apache.openjpa.kernel.FetchConfiguration.removeFields(Collection<String>),14,17
org.apache.openjpa.kernel.FetchConfiguration.clearFields(),14,17
org.apache.openjpa.kernel.FetchConfiguration.getLockTimeout(),6,7
org.apache.openjpa.kernel.FetchConfiguration.setLockTimeout(int),9,11
org.apache.openjpa.kernel.FetchConfiguration.getLockScope(),3,5
org.apache.openjpa.kernel.FetchConfiguration.setLockScope(int),5,9
org.apache.openjpa.kernel.FetchConfiguration.getQueryTimeout(),5,6
org.apache.openjpa.kernel.FetchConfiguration.setQueryTimeout(int),8,10
org.apache.openjpa.kernel.FetchConfiguration.getReadLockLevel(),6,8
org.apache.openjpa.kernel.FetchConfiguration.setReadLockLevel(int),9,12
org.apache.openjpa.kernel.FetchConfiguration.getWriteLockLevel(),6,8
org.apache.openjpa.kernel.FetchConfiguration.getCacheStoreMode(),6,12
org.apache.openjpa.kernel.FetchConfiguration.setCacheStoreMode(DataCacheStoreMode),8,15
org.apache.openjpa.kernel.FetchConfiguration.getCacheRetrieveMode(),5,12
org.apache.openjpa.kernel.FetchConfiguration.setCacheRetrieveMode(DataCacheRetrieveMode),7,15
org.apache.openjpa.kernel.FetchConfiguration.setWriteLockLevel(int),9,12
org.apache.openjpa.kernel.FetchConfiguration.newResultList(ResultObjectProvider),8,13
"org.apache.openjpa.kernel.FetchConfiguration.setHint(String,Object,Object)",27,52
"org.apache.openjpa.kernel.FetchConfiguration.setHint(String,Object)",28,53
org.apache.openjpa.kernel.FetchConfiguration.getHint(String),4,4
org.apache.openjpa.kernel.FetchConfiguration.getHints(),11,13
org.apache.openjpa.kernel.FetchConfiguration.isHintSet(String),6,8
org.apache.openjpa.kernel.FetchConfiguration.isDefaultPUFetchGroupConfigurationOnly(),9,10
org.apache.openjpa.kernel.FetchConfiguration.getRootClasses(),7,10
org.apache.openjpa.kernel.FetchConfiguration.setRootClasses(Collection<Class<>>),8,11
org.apache.openjpa.kernel.FetchConfiguration.getRootInstances(),8,11
org.apache.openjpa.kernel.FetchConfiguration.setRootInstances(Collection<>),9,11
org.apache.openjpa.kernel.FetchConfiguration.lock(),4,5
org.apache.openjpa.kernel.FetchConfiguration.unlock(),5,5
org.apache.openjpa.kernel.FetchConfiguration.requiresFetch(FieldMetaData),15,23
org.apache.openjpa.kernel.FetchConfiguration.requiresLoad(),11,13
org.apache.openjpa.kernel.FetchConfiguration.traverse(FieldMetaData),10,14
org.apache.openjpa.kernel.FetchConfiguration.isFetchConfigurationSQLCacheAdmissible(),9,12
org.apache.openjpa.persistence.jdbc.annotations.EmbeddableSuperSub.EmbeddableSuperSub(),2,2
org.apache.openjpa.persistence.jdbc.annotations.EmbeddableSuperSub.getSub(),2,4
org.apache.openjpa.persistence.jdbc.annotations.EmbeddableSuperSub.setSub(EmbeddableSuperSub),3,7
org.apache.openjpa.persistence.jdbc.annotations.EmbeddableSuperSub.getSup(),2,3
org.apache.openjpa.persistence.jdbc.annotations.EmbeddableSuperSub.setSup(EmbeddableSuper),3,6
"org.apache.openjpa.kernel.exps.Context.Context(ParsedJPQL,Subquery,Context)",8,22
org.apache.openjpa.kernel.exps.Context.setSubquery(Subquery),7,13
org.apache.openjpa.kernel.exps.Context.meta(),2,4
org.apache.openjpa.kernel.exps.Context.schemaAlias(),3,5
org.apache.openjpa.kernel.exps.Context.subquery(),1,3
org.apache.openjpa.kernel.exps.Context.nextAlias(),8,12
org.apache.openjpa.kernel.exps.Context.resetAliasCount(),9,14
org.apache.openjpa.kernel.exps.Context.setSelect(Object),6,11
org.apache.openjpa.kernel.exps.Context.getSelect(),5,7
org.apache.openjpa.kernel.exps.Context.addSubselContext(Context),10,20
org.apache.openjpa.kernel.exps.Context.getSubselContexts(),7,8
org.apache.openjpa.kernel.exps.Context.getSubquery(),3,6
org.apache.openjpa.kernel.exps.Context.getParent(),2,3
"org.apache.openjpa.kernel.exps.Context.addVariable(String,Value)",7,8
org.apache.openjpa.kernel.exps.Context.getVariables(),4,5
"org.apache.openjpa.kernel.exps.Context.setVariables(Map<String,Value>)",5,8
"org.apache.openjpa.kernel.exps.Context.addSchema(String,ClassMetaData)",7,9
org.apache.openjpa.kernel.exps.Context.getSchema(String),6,6
org.apache.openjpa.kernel.exps.Context.getSchemas(),5,6
"org.apache.openjpa.kernel.exps.Context.setSchemas(Map<String,ClassMetaData>)",6,9
org.apache.openjpa.kernel.exps.Context.getVariable(String),8,16
org.apache.openjpa.kernel.exps.Context.findContext(String),12,34
org.apache.openjpa.kernel.exps.Context.findVariable(String),10,24
org.apache.openjpa.persistence.TestUnwrap.testValidQueryUnwrap(),27,65
org.apache.openjpa.persistence.TestUnwrap.testValidEntityManagerUnwrap(),23,53
org.apache.openjpa.persistence.TestUnwrap.testValidOtherUnwrap(),17,28
org.apache.openjpa.persistence.TestUnwrap.testInvalidEntityManagerUnwrap(),27,50
org.apache.openjpa.persistence.TestUnwrap.testInvalidQueryUnwrap(),32,58
"org.apache.openjpa.kernel.exps.Mod.Mod(Val,Val)",5,11
"org.apache.openjpa.kernel.exps.Mod.operate(Object,Class,Object,Class)",4,6
org.apache.openjpa.persistence.delimited.identifiers.Pontiac2.Pontiac2(),1,1
org.apache.openjpa.persistence.delimited.identifiers.Pontiac2.Pontiac2(int),1,1
"org.apache.openjpa.trader.client.MarketDataPanel.MarketDataPanel(OpenTrader,int,int)",27,58
"org.apache.openjpa.trader.client.MarketDataPanel.MarketDataPanel(OpenTrader,int,int).$1.render(Stock)",5,7
"org.apache.openjpa.trader.client.MarketDataPanel.MarketDataPanel(OpenTrader,int,int).$2.render(Stock)",7,11
"org.apache.openjpa.trader.client.MarketDataPanel.MarketDataPanel(OpenTrader,int,int).$3.render(Stock)",8,13
org.apache.openjpa.trader.client.MarketDataPanel.setRefreshInterval(int),17,32
org.apache.openjpa.trader.client.MarketDataPanel.getRefreshInterval(),6,10
org.apache.openjpa.trader.client.MarketDataPanel.startStockWatcher(),18,28
org.apache.openjpa.trader.client.MarketDataPanel.startStockWatcher().$4.run(),5,6
org.apache.openjpa.trader.client.MarketDataPanel.stopStockWatcher(),11,15
org.apache.openjpa.trader.client.MarketDataPanel.onStockUpdated(ServiceEvent.StockUpdated),6,10
org.apache.openjpa.trader.client.MarketDataPanel.UpdateStocks.onFailure(Throwable),6,7
org.apache.openjpa.trader.client.MarketDataPanel.UpdateStocks.onSuccess(List<Stock>),10,14
org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseMappingTool(JDBCConfiguration),10,18
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getStrategyInstaller(),6,14
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getConfiguration(),5,7
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getLog(),2,5
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getPackageName(),5,5
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setPackageName(String),8,12
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getDirectory(),11,15
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setDirectory(File),12,18
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getUseSchemaName(),6,10
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setUseSchemaName(boolean),7,14
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getUseForeignKeyName(),7,10
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setUseForeignKeyName(boolean),8,12
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getNullableAsObject(),8,9
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setNullableAsObject(boolean),9,13
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getBlobAsObject(),12,14
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setBlobAsObject(boolean),13,19
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getUseGenericCollections(),6,10
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setUseGenericCollections(boolean),7,15
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getTypeMap(),14,19
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setTypeMap(Properties),15,24
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getPrimaryKeyOnJoin(),10,16
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setPrimaryKeyOnJoin(boolean),11,20
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getUseDataStoreIdentity(),5,7
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setUseDataStoreIdentity(boolean),6,10
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getUseBuiltinIdentityClass(),5,7
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setUseBuiltinIdentityClass(boolean),6,10
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getInnerIdentityClasses(),6,11
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setInnerIdentityClasses(boolean),7,14
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getIdentityClassSuffix(),8,15
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setIdentityClassSuffix(String),9,18
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getInverseRelations(),4,8
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setInverseRelations(boolean),5,11
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getDetachable(),4,6
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setDetachable(boolean),5,9
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getDiscriminatorStrategy(),7,9
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setDiscriminatorStrategy(String),8,14
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getVersionStrategy(),7,9
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setVersionStrategy(String),8,14
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getGenerateAnnotations(),6,9
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setGenerateAnnotations(boolean),7,14
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getAccessType(),9,15
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setAccessType(String),12,31
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getCodeFormat(),5,10
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setCodeFormat(CodeFormat),6,14
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getCustomizer(),4,6
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setCustomizer(ReverseCustomizer),6,16
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getUseSchemaElement(),17,21
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setUseSchemaElement(boolean),13,21
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getRepository(),23,52
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setRepository(MappingRepository),4,9
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getSchemaGroup(),18,32
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setSchemaGroup(SchemaGroup),4,10
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getMappings(),4,6
org.apache.openjpa.jdbc.meta.ReverseMappingTool.run(),88,393
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.mapTable(Table,int)",6,27
org.apache.openjpa.jdbc.meta.ReverseMappingTool.isBuiltinIdentity(ClassMapping),19,52
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setColumnJavaType(ValueMapping),11,23
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setForeignKeyJavaType(ForeignKey),13,36
org.apache.openjpa.jdbc.meta.ReverseMappingTool.recordCode(),15,21
org.apache.openjpa.jdbc.meta.ReverseMappingTool.recordCode(Map),47,125
org.apache.openjpa.jdbc.meta.ReverseMappingTool.recordMetaData(boolean),14,18
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.recordMetaData(boolean,Map)",52,114
org.apache.openjpa.jdbc.meta.ReverseMappingTool.buildAnnotations(),31,67
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getAnnotationsForMeta(Object),8,15
org.apache.openjpa.jdbc.meta.ReverseMappingTool.newApplicationIdTool(ClassMapping),17,44
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getClassMapping(Table),4,10
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.newClassMapping(Class,Table)",20,47
org.apache.openjpa.jdbc.meta.ReverseMappingTool.setObjectIdType(ClassMapping),12,23
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.generateClass(String,Class)",15,29
org.apache.openjpa.jdbc.meta.ReverseMappingTool.isUnique(ForeignKey),13,36
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getUniqueForeignKey(Table),14,47
org.apache.openjpa.jdbc.meta.ReverseMappingTool.addJoinConstraints(FieldMapping),16,39
org.apache.openjpa.jdbc.meta.ReverseMappingTool.addConstraints(ValueMapping),16,36
org.apache.openjpa.jdbc.meta.ReverseMappingTool.findIndex(Column[]),9,24
org.apache.openjpa.jdbc.meta.ReverseMappingTool.findUnique(Column[]),10,25
org.apache.openjpa.jdbc.meta.ReverseMappingTool.isBaseTable(Table),7,27
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.getSecondaryType(Table,boolean)",18,67
org.apache.openjpa.jdbc.meta.ReverseMappingTool.mapBaseClass(Table),32,80
org.apache.openjpa.jdbc.meta.ReverseMappingTool.mapSubclasses(Set),35,102
org.apache.openjpa.jdbc.meta.ReverseMappingTool.mapAssociationTable(Table),32,164
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.mapSecondaryTable(Table,boolean)",16,38
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.mapColumns(ClassMapping,Table,ForeignKey,boolean)",27,93
org.apache.openjpa.jdbc.meta.ReverseMappingTool.isForeignKeyColumn(Column),10,22
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.mapForeignKey(ClassMapping,ForeignKey,ForeignKey,boolean)",34,161
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.mapColumn(ClassMapping,Column,ForeignKey,boolean)",39,133
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.newClassMapping(Table,Class)",10,26
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.newFieldMapping(String,Class,Column,ForeignKey,ClassMapping)",26,71
org.apache.openjpa.jdbc.meta.ReverseMappingTool.getClassName(Table),29,89
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.getFieldName(String,ClassMapping)",27,55
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.getRelationName(Class,boolean,ForeignKey,boolean,ClassMapping)",23,66
org.apache.openjpa.jdbc.meta.ReverseMappingTool.allUpperCase(String),8,14
org.apache.openjpa.jdbc.meta.ReverseMappingTool.replaceInvalidCharacters(String),26,54
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.getUniqueName(String,ClassMapping)",29,68
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.getFieldType(Column,boolean)",64,192
org.apache.openjpa.jdbc.meta.ReverseMappingTool.clone(),36,126
org.apache.openjpa.jdbc.meta.ReverseMappingTool.main(String[]),167,395
org.apache.openjpa.jdbc.meta.ReverseMappingTool.main(String[]).$1.run(Options),13,19
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.run(JDBCConfiguration,String[],Options)",107,490
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.run(JDBCConfiguration,String[],Flags,ClassLoader)",69,281
org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseStrategyInstaller.ReverseStrategyInstaller(MappingRepository),6,7
org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseStrategyInstaller.installStrategy(ClassMapping),6,6
org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseStrategyInstaller.installStrategy(FieldMapping),6,7
org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseStrategyInstaller.installStrategy(Version),12,38
org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseStrategyInstaller.installStrategy(Discriminator),17,48
org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseStrategyInstaller.hasSubclasses(ClassMapping),14,19
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseCodeGenerator.ReverseCodeGenerator(ClassMapping,ApplicationIdTool)",13,24
org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseCodeGenerator.closeClassBrace(CodeFormat),13,23
org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseCodeGenerator.getImportPackages(),10,17
org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseCodeGenerator.getClassCode(),4,6
org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseCodeGenerator.getInitialValue(FieldMetaData),8,14
org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseCodeGenerator.getDeclaration(FieldMetaData),7,12
org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseCodeGenerator.getFieldCode(FieldMetaData),7,14
org.apache.openjpa.jdbc.meta.ReverseMappingTool.ReverseCodeGenerator.useGenericCollections(),3,4
"org.apache.openjpa.jdbc.meta.ReverseMappingTool.AnnotatedCodeGenerator.AnnotatedCodeGenerator(ClassMapping,ApplicationIdTool)",7,10
org.apache.openjpa.jdbc.meta.ReverseMappingTool.AnnotatedCodeGenerator.getImportPackages(),6,10
org.apache.openjpa.jdbc.meta.ReverseMappingTool.AnnotatedCodeGenerator.getClassAnnotations(),4,5
org.apache.openjpa.jdbc.meta.ReverseMappingTool.AnnotatedCodeGenerator.getFieldAnnotations(FieldMetaData),5,10
org.apache.openjpa.jdbc.meta.ReverseMappingTool.AnnotatedCodeGenerator.usePropertyBasedAccess(),5,9
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.setUp(),9,12
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.testQueryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.setCandidate(Query,Class)",14,37
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.queryQualifiedId(boolean),24,87
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.createObj(EntityManagerFactory),15,27
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.createCompany(EntityManager,int)",14,25
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.createDivision(EntityManager,int)",6,10
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.createVicePresident(EntityManager,int,Division)",8,17
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.findObj(EntityManagerFactory),13,37
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.updateObj1(EntityManager,Company)",26,63
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.updateObj(EntityManager,Company)",28,74
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.deleteObj(EntityManager,Company)",10,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.assertCompany(Company),5,8
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.assertDivision(Division),3,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.assertVicePresident(VicePresident),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.queryObj(EntityManagerFactory),10,16
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.queryCompany(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.queryDivision(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.TestSpec10_1_27_Ex7.queryVicePresident(EntityManagerFactory),17,39
org.apache.openjpa.datacache.ConcurrentDataCache.getCacheMap(),16,26
org.apache.openjpa.datacache.ConcurrentDataCache.setCacheSize(int),16,25
org.apache.openjpa.datacache.ConcurrentDataCache.getCacheSize(),8,11
org.apache.openjpa.datacache.ConcurrentDataCache.setSoftReferenceSize(int),18,26
org.apache.openjpa.datacache.ConcurrentDataCache.getSoftReferenceSize(),11,16
org.apache.openjpa.datacache.ConcurrentDataCache.initialize(DataCacheManager),24,47
"org.apache.openjpa.datacache.ConcurrentDataCache.unpinAll(Class<>,boolean)",11,16
org.apache.openjpa.datacache.ConcurrentDataCache.writeLock(),3,5
org.apache.openjpa.datacache.ConcurrentDataCache.writeUnlock(),3,5
org.apache.openjpa.datacache.ConcurrentDataCache.newCacheMap(),12,22
"org.apache.openjpa.datacache.ConcurrentDataCache.newCacheMap().$1.entryRemoved(Object,Object,boolean)",6,11
org.apache.openjpa.datacache.ConcurrentDataCache.getInternal(Object),5,11
"org.apache.openjpa.datacache.ConcurrentDataCache.putInternal(Object,DataCachePCData)",5,14
org.apache.openjpa.datacache.ConcurrentDataCache.removeInternal(Object),6,13
"org.apache.openjpa.datacache.ConcurrentDataCache.removeAllInternal(Class<>,boolean)",18,20
org.apache.openjpa.datacache.ConcurrentDataCache.clearInternal(),2,2
org.apache.openjpa.datacache.ConcurrentDataCache.pinInternal(Object),5,7
org.apache.openjpa.datacache.ConcurrentDataCache.unpinInternal(Object),5,7
org.apache.openjpa.datacache.ConcurrentDataCache.recacheUpdates(),2,2
org.apache.openjpa.datacache.ConcurrentDataCache.setLru(boolean),2,3
org.apache.openjpa.datacache.ConcurrentDataCache.getLru(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.setPk1(String),2,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.getPk1(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.setPk2(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.getPk2(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.setStringA(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.getStringA(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.setIntA(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.getIntA(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.ID.ID(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.ID.ID(String),7,14
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.ID.toString(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.ID.hashCode(),5,7
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.ID.equals(Object),2,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.setRelations(List),3,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleA.getRelations(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.setUp(),9,12
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.setCandidate(Query,Class)",17,43
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.queryQualifiedId(boolean),33,94
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.testQueryObject(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.createObj(),16,27
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.createEmployee(EntityManager,int)",14,37
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.findObj(),9,15
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.queryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.queryPhoneNumber(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.queryEmployee(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.assertEmployee(Employee),10,27
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.assertPhoneNumber(PhoneNumber),10,20
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.checkPhoneMap(Map<FullName,PhoneNumber>,Map<FullName,PhoneNumber>)",14,39
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.TestMany2ManyMapEx8.checkEmpMap(Map<String,Employee>,Map<String,Employee>)",15,39
org.apache.openjpa.persistence.common.apps.Trousers.getLnhNumber(),2,3
org.apache.openjpa.persistence.common.apps.Trousers.setLnhNumber(Integer),3,6
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPC.ByteArrayPKPC(),2,2
"org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPC.ByteArrayPKPC(byte[],String)",4,9
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPC.getPK(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPC.setPK(byte[]),1,1
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPC.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPC.setStringField(String),3,10
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPC.getParent(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPC.setParent(ByteArrayPKPC),4,7
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPC.getRels(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPC.setRels(List),3,6
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectWithExternalizedFields.setCls(Class),2,5
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectWithExternalizedFields.getCls(),1,2
org.apache.openjpa.jdbc.meta.strats.CharArrayStreamValueHandler.getInstance(),6,8
"org.apache.openjpa.jdbc.meta.strats.CharArrayStreamValueHandler.map(ValueMapping,String,ColumnIO,boolean)",14,27
"org.apache.openjpa.jdbc.meta.strats.CharArrayStreamValueHandler.map(ValueMapping,DBIdentifier,ColumnIO,boolean)",15,28
"org.apache.openjpa.jdbc.meta.strats.CharArrayStreamValueHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)",15,24
"org.apache.openjpa.jdbc.meta.strats.CharArrayStreamValueHandler.toObjectValue(ValueMapping,Object)",15,33
org.apache.openjpa.persistence.jdbc.common.apps.LockGroupSubclass.getDefaultLockGroupField(),3,5
org.apache.openjpa.persistence.jdbc.common.apps.LockGroupSubclass.setDefaultLockGroupField(String),4,10
org.apache.openjpa.persistence.jdbc.common.apps.LockGroupSubclass.getNonDefaultLockGroupField(),3,5
org.apache.openjpa.persistence.jdbc.common.apps.LockGroupSubclass.setNonDefaultLockGroupField(String),4,10
org.apache.openjpa.ee.AutomaticManagedRuntime.AutomaticManagedRuntime(),35,92
org.apache.openjpa.ee.AutomaticManagedRuntime.getTransactionManager(),44,150
org.apache.openjpa.ee.AutomaticManagedRuntime.setConfiguration(Configuration),3,6
org.apache.openjpa.ee.AutomaticManagedRuntime.startConfiguration(),2,2
org.apache.openjpa.ee.AutomaticManagedRuntime.endConfiguration(),1,1
org.apache.openjpa.ee.AutomaticManagedRuntime.setRollbackOnly(Throwable),10,16
org.apache.openjpa.ee.AutomaticManagedRuntime.getRollbackCause(),9,14
org.apache.openjpa.ee.AutomaticManagedRuntime.getTransactionKey(),7,13
org.apache.openjpa.ee.AutomaticManagedRuntime.doNonTransactionalWork(Runnable),20,41
org.apache.openjpa.persistence.Extent<T>.getElementClass(),3,4
org.apache.openjpa.persistence.Extent<T>.hasSubclasses(),3,4
org.apache.openjpa.persistence.Extent<T>.getEntityManager(),4,8
org.apache.openjpa.persistence.Extent<T>.getFetchPlan(),7,10
org.apache.openjpa.persistence.Extent<T>.getIgnoreChanges(),7,7
org.apache.openjpa.persistence.Extent<T>.setIgnoreChanges(boolean),8,10
org.apache.openjpa.persistence.Extent<T>.list(),3,5
org.apache.openjpa.persistence.Extent<T>.closeAll(),5,6
org.apache.openjpa.persistence.Extent<T>.getDelegate(),17,19
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.RecursiveEntityWithCompositeId.RecursiveEntityWithCompositeId(),3,3
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.RecursiveEntityWithCompositeId.getId(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.RecursiveEntityWithCompositeId.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.RecursiveEntityWithCompositeId.getValue(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.RecursiveEntityWithCompositeId.getRelation(),4,5
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.RecursiveEntityWithCompositeId.setId(Integer),2,2
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.RecursiveEntityWithCompositeId.setName(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.RecursiveEntityWithCompositeId.setValue(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.RecursiveEntityWithCompositeId.setRelation(RecursiveEntityWithCompositeId),5,8
"org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.MetaDataPlusMappingFactory(MetaDataFactory,MetaDataFactory)",9,18
"org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.MetaDataPlusMappingFactory(MetaDataFactory,MetaDataFactory,OpenJPAConfiguration)",21,52
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.getMappingDelegate(),6,9
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.getInnermostMappingDelegate(),8,22
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.setRepository(MetaDataRepository),6,13
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.setStoreDirectory(File),6,14
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.setStoreMode(int),4,13
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.setStrict(boolean),3,5
"org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.load(Class,int,ClassLoader)",9,30
"org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.store(ClassMetaData[],QueryMetaData[],SequenceMetaData[],int,Map)",13,44
"org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.drop(Class[],int,ClassLoader)",9,33
"org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.getPersistentTypeNames(boolean,ClassLoader)",9,27
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.clear(),1,1
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.addClassExtensionKeys(Collection),6,14
org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory.addFieldExtensionKeys(Collection),7,17
"org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.map(ValueMapping,String,ColumnIO,boolean)",14,27
"org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.map(ValueMapping,DBIdentifier,ColumnIO,boolean)",16,36
org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.setMapsIdCol(ValueMapping),17,91
"org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.setMapsIdCols(List,ClassMapping)",19,42
"org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.setMapsIdCols(List,FieldMapping)",19,52
"org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.getReferenceField(ClassMapping,DBIdentifier)",10,23
"org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.isReferenceField(FieldMapping,DBIdentifier)",15,28
org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.getResultArgument(ValueMapping),6,6
"org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)",14,34
"org.apache.openjpa.jdbc.meta.strats.ObjectIdValueHandler.toObjectValue(ValueMapping,Object)",13,23
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.PhonePK.PhonePK(),1,1
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.PhonePK.PhonePK(String,String)",4,12
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.PhonePK.getAreaCode(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.PhonePK.getPhoneNum(),3,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.PhonePK.equals(Object),5,13
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.PhonePK.hashCode(),4,15
org.apache.openjpa.persistence.PersistenceListenerAdapter.PersistenceListenerAdapter(LifecycleCallbacks[][]),5,8
org.apache.openjpa.persistence.PersistenceListenerAdapter.PersistenceListenerAdapter(Collection<LifecycleCallbacks>[]),12,26
org.apache.openjpa.persistence.PersistenceListenerAdapter.respondsTo(int),4,6
org.apache.openjpa.persistence.PersistenceListenerAdapter.makeCallback(LifecycleEvent),21,44
org.apache.openjpa.persistence.PersistenceListenerAdapter.beforePersist(LifecycleEvent),4,6
org.apache.openjpa.persistence.PersistenceListenerAdapter.afterPersist(LifecycleEvent),6,7
org.apache.openjpa.persistence.PersistenceListenerAdapter.afterPersistPerformed(LifecycleEvent),5,7
org.apache.openjpa.persistence.PersistenceListenerAdapter.afterLoad(LifecycleEvent),4,6
org.apache.openjpa.persistence.PersistenceListenerAdapter.afterRefresh(LifecycleEvent),5,6
org.apache.openjpa.persistence.PersistenceListenerAdapter.beforeUpdate(LifecycleEvent),4,6
org.apache.openjpa.persistence.PersistenceListenerAdapter.afterUpdatePerformed(LifecycleEvent),5,7
org.apache.openjpa.persistence.PersistenceListenerAdapter.beforeDelete(LifecycleEvent),4,6
org.apache.openjpa.persistence.PersistenceListenerAdapter.afterDelete(LifecycleEvent),6,7
org.apache.openjpa.persistence.PersistenceListenerAdapter.afterDeletePerformed(LifecycleEvent),5,7
org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.PersistenceMappingDefaults(),15,19
org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.getPrependFieldNameToJoinTableInverseJoinColumns(),14,31
org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.setPrependFieldNameToJoinTableInverseJoinColumns(boolean),15,34
"org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.getStrategy(Version,boolean)",18,40
"org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.getStrategy(Discriminator,boolean)",39,97
"org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.getTableName(ClassMapping,Schema)",11,19
"org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.getTableName(FieldMapping,Schema)",7,11
"org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.getTableIdentifier(FieldMapping,Schema)",27,82
org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.getTable(ClassMapping),10,39
"org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.populateJoinColumn(FieldMapping,Table,Table,Column,Object,int,int)",38,114
"org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.populateForeignKeyColumn(ValueMapping,String,Table,Table,Column,Object,boolean,int,int)",17,33
"org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.populateForeignKeyColumn(ValueMapping,DBIdentifier,Table,Table,Column,Object,boolean,int,int)",43,104
"org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults.populateColumns(Version,Table,Column[])",14,34
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Compny2.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Compny2.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Compny2.getOrganization(),3,3
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Compny2.addToOrganization(Division,VicePresident)",6,8
org.apache.openjpa.jdbc.meta.strats.AbstractValueHandler.isVersionable(ValueMapping),3,3
org.apache.openjpa.jdbc.meta.strats.AbstractValueHandler.objectValueRequiresLoad(ValueMapping),5,6
org.apache.openjpa.jdbc.meta.strats.AbstractValueHandler.getResultArgument(ValueMapping),5,5
"org.apache.openjpa.jdbc.meta.strats.AbstractValueHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)",7,12
"org.apache.openjpa.jdbc.meta.strats.AbstractValueHandler.toObjectValue(ValueMapping,Object)",4,8
"org.apache.openjpa.jdbc.meta.strats.AbstractValueHandler.toObjectValue(ValueMapping,Object,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",12,19
org.apache.openjpa.persistence.detachment.TestCascadeMerge.setUp(),6,8
org.apache.openjpa.persistence.detachment.TestCascadeMerge.createTestData(),5,7
org.apache.openjpa.persistence.detachment.TestCascadeMerge.testCascadeMerge(),18,47
org.apache.openjpa.persistence.discriminator.CharLeafEntity.getSubInt(),1,2
org.apache.openjpa.persistence.discriminator.CharLeafEntity.setSubInt(int),2,5
org.apache.openjpa.validation.ValidatingLifecycleEventManager.ValidatingLifecycleEventManager(),11,12
org.apache.openjpa.validation.ValidatingLifecycleEventManager.endConfiguration(),10,14
org.apache.openjpa.validation.ValidatingLifecycleEventManager.setConfiguration(Configuration),10,26
org.apache.openjpa.validation.ValidatingLifecycleEventManager.startConfiguration(),9,11
"org.apache.openjpa.validation.ValidatingLifecycleEventManager.hasUpdateListeners(Object,ClassMetaData)",10,22
"org.apache.openjpa.validation.ValidatingLifecycleEventManager.hasPersistListeners(Object,ClassMetaData)",10,22
"org.apache.openjpa.validation.ValidatingLifecycleEventManager.hasDeleteListeners(Object,ClassMetaData)",10,22
"org.apache.openjpa.validation.ValidatingLifecycleEventManager.fireEvent(Object,ClassMetaData,int)",8,14
"org.apache.openjpa.validation.ValidatingLifecycleEventManager.fireEvent(Object,Object,ClassMetaData,int)",33,90
org.apache.openjpa.validation.ValidatingLifecycleEventManager.isActive(ClassMetaData),5,8
org.apache.openjpa.validation.ValidatingLifecycleEventManager.isValidationEnabled(),2,4
org.apache.openjpa.validation.ValidatingLifecycleEventManager.setValidationEnabled(boolean),4,11
org.apache.openjpa.event.BrokerFactoryListener.eventFired(BrokerFactoryEvent),9,14
org.apache.openjpa.jdbc.sql.H2Dictionary.H2Dictionary(),75,122
"org.apache.openjpa.jdbc.sql.H2Dictionary.getJDBCType(int,boolean)",10,25
org.apache.openjpa.jdbc.sql.H2Dictionary.getPreferredType(int),4,8
org.apache.openjpa.jdbc.sql.H2Dictionary.getAddPrimaryKeySQL(PrimaryKey),5,8
org.apache.openjpa.jdbc.sql.H2Dictionary.getDropPrimaryKeySQL(PrimaryKey),5,8
org.apache.openjpa.jdbc.sql.H2Dictionary.getAddColumnSQL(Column),8,18
org.apache.openjpa.jdbc.sql.H2Dictionary.getCreateTableSQL(Table),23,80
org.apache.openjpa.jdbc.sql.H2Dictionary.getPrimaryKeyConstraintSQL(PrimaryKey),11,19
"org.apache.openjpa.jdbc.sql.H2Dictionary.isSystemIndex(String,Table)",9,12
"org.apache.openjpa.jdbc.sql.H2Dictionary.isSystemIndex(DBIdentifier,Table)",9,15
"org.apache.openjpa.jdbc.sql.H2Dictionary.getSequencesSQL(String,String)",7,19
"org.apache.openjpa.jdbc.sql.H2Dictionary.getSequencesSQL(DBIdentifier,DBIdentifier)",12,54
"org.apache.openjpa.jdbc.sql.H2Dictionary.getColumns(DatabaseMetaData,String,String,String,String,Connection)",15,39
"org.apache.openjpa.jdbc.sql.H2Dictionary.getColumns(DatabaseMetaData,DBIdentifier,DBIdentifier,DBIdentifier,DBIdentifier,Connection)",15,34
"org.apache.openjpa.jdbc.sql.H2Dictionary.appendSelectRange(SQLBuffer,long,long,boolean)",12,28
"org.apache.openjpa.jdbc.sql.H2Dictionary.indexOf(SQLBuffer,FilterValue,FilterValue,FilterValue)",10,30
"org.apache.openjpa.jdbc.sql.H2Dictionary.isFatalException(int,SQLException)",9,24
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getUseClassCriteria(),4,6
org.apache.openjpa.jdbc.meta.ValueMappingInfo.setUseClassCriteria(boolean),5,9
org.apache.openjpa.jdbc.meta.ValueMappingInfo.canIndicateNull(),5,5
org.apache.openjpa.jdbc.meta.ValueMappingInfo.setCanIndicateNull(boolean),7,8
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getTypeJoin(ValueMapping,String,boolean,boolean)",18,36
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getTypeJoin(ValueMapping,DBIdentifier,boolean,boolean)",19,43
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getTypeJoin(ValueMapping,DBIdentifier,boolean,boolean).$1.get(Table,Table,boolean)",10,19
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getTypeJoin(ValueMapping,DBIdentifier,boolean,boolean).$1.populate(Table,Table,Column,Object,boolean,int,int)",17,30
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getTable(ValueMapping),10,36
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getInverseTypeJoin(ValueMapping,String,boolean)",14,25
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getInverseTypeJoin(ValueMapping,DBIdentifier,boolean)",19,41
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getInverseTypeJoin(ValueMapping,DBIdentifier,boolean).$2.get(Table,Table,boolean)",10,19
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getInverseTypeJoin(ValueMapping,DBIdentifier,boolean).$2.populate(Table,Table,Column,Object,boolean,int,int)",17,30
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getColumns(ValueMapping,String,Column[],Table,boolean)",14,25
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getColumns(ValueMapping,DBIdentifier,Column[],Table,boolean)",16,35
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.orderColumnsByTargetField(ValueMapping,Column[],boolean)",27,73
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.findTargetField(Column[],String)",9,18
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getUnique(ValueMapping,String,boolean)",12,19
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getUnique(ValueMapping,DBIdentifier,boolean)",16,33
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getIndex(ValueMapping,String,boolean)",11,18
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getIndex(ValueMapping,DBIdentifier,boolean)",16,33
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getNullIndicatorColumn(ValueMapping,String,Table,boolean)",12,24
"org.apache.openjpa.jdbc.meta.ValueMappingInfo.getNullIndicatorColumn(ValueMapping,DBIdentifier,Table,boolean)",44,144
org.apache.openjpa.jdbc.meta.ValueMappingInfo.syncWith(ValueMapping),33,135
org.apache.openjpa.jdbc.meta.ValueMappingInfo.clear(boolean),2,4
org.apache.openjpa.jdbc.meta.ValueMappingInfo.copy(MappingInfo),7,24
org.apache.openjpa.jdbc.meta.ValueMappingInfo.getMapsIdColumns(),9,14
org.apache.openjpa.jdbc.meta.ValueMappingInfo.setMapsIdColumns(List<Column>),8,12
org.apache.openjpa.persistence.embed.Embed_Embed.getIntVal1(),1,2
org.apache.openjpa.persistence.embed.Embed_Embed.setIntVal1(int),2,5
org.apache.openjpa.persistence.embed.Embed_Embed.getIntVal2(),1,2
org.apache.openjpa.persistence.embed.Embed_Embed.setIntVal2(int),2,5
org.apache.openjpa.persistence.embed.Embed_Embed.getIntVal3(),1,2
org.apache.openjpa.persistence.embed.Embed_Embed.setIntVal3(int),2,5
org.apache.openjpa.persistence.embed.Embed_Embed.getEmbed(),1,3
org.apache.openjpa.persistence.embed.Embed_Embed.setEmbed(Embed),2,6
org.apache.openjpa.persistence.compat.TestDupNamedQuery.setUp(),14,38
org.apache.openjpa.persistence.compat.TestDupNamedQuery.testSimpleQuery(),5,19
"org.apache.openjpa.persistence.compat.TestDupNamedQuery.simpleQuery(boolean,String,String,String,String,String,String)",32,131
org.apache.openjpa.persistence.compat.TestDupNamedQuery.main(String[]),9,10
org.apache.openjpa.persistence.embed.EmployeeName3.EmployeeName3(),2,2
"org.apache.openjpa.persistence.embed.EmployeeName3.EmployeeName3(String,String)",3,10
org.apache.openjpa.persistence.embed.EmployeeName3.getFName(),2,3
org.apache.openjpa.persistence.embed.EmployeeName3.setFName(String),3,6
org.apache.openjpa.persistence.embed.EmployeeName3.getLName(),2,3
org.apache.openjpa.persistence.embed.EmployeeName3.setLName(String),3,6
org.apache.openjpa.persistence.embed.EmployeeName3.equals(Object),4,14
org.apache.openjpa.persistence.embed.EmployeeName3.hashCode(),4,13
org.apache.openjpa.persistence.jdbc.common.apps.PartialJoinPC2.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.PartialJoinPC2.setStringField(String),3,10
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_ToOne.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_ToOne.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_ToOne.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_ToOne.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_ToOne.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_ToOne.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_ToOne.getEmbed1ToOnes(),3,5
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_ToOne.addEmbed1ToOne(Embed_ToOne),2,7
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedByteArrayFieldStrategy.getExpectedJavaType(),6,7
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedByteArrayFieldStrategy.update(OpenJPAStateManager,Row)",11,18
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedByteArrayFieldStrategy.isCustom(OpenJPAStateManager,JDBCStore)",14,18
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedByteArrayFieldStrategy.putData(OpenJPAStateManager,ResultSet,DBDictionary)",19,23
"org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedByteArrayFieldStrategy.load(Column,Result,Joins)",15,20
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedByteArrayFieldStrategy.map(boolean),9,14
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedByteArrayFieldStrategy.initialize(),10,14
org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedByteArrayFieldStrategy.getValue(OpenJPAStateManager),15,17
org.apache.openjpa.persistence.embed.ParkingSpot.getId(),0,0
org.apache.openjpa.persistence.embed.ParkingSpot.setId(int),1,1
org.apache.openjpa.persistence.embed.ParkingSpot.getGarage(),2,3
org.apache.openjpa.persistence.embed.ParkingSpot.setGarage(String),3,6
org.apache.openjpa.persistence.embed.ParkingSpot.getAssignedTo(),2,3
org.apache.openjpa.persistence.embed.ParkingSpot.setAssignedTo(Employee),3,6
org.apache.openjpa.persistence.embed.attrOverrides.Person.getNickNames(),4,6
org.apache.openjpa.persistence.embed.attrOverrides.Person.setNickNames(List<String>),5,11
org.apache.openjpa.persistence.embed.attrOverrides.Person.addNickName(String),5,11
org.apache.openjpa.persistence.embed.attrOverrides.Person.getSsn(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.Person.setSsn(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.Person.getName(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.Person.setName(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.Person.getResidences(),3,4
org.apache.openjpa.persistence.embed.attrOverrides.Person.setResidences(List<Address>),4,7
org.apache.openjpa.persistence.embed.attrOverrides.Person.addResidence(Address),4,7
org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.getFieldMapping(),2,5
org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.getIndependentKeyMappings(boolean),6,8
org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.getIndependentValueMappings(boolean),6,9
org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.getJoinForeignKey(ClassMapping),5,11
org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.getKeyColumns(ClassMapping),11,16
org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.getValueColumns(ClassMapping),7,9
"org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.selectKey(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Joins)",19,41
"org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.loadKey(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",21,35
"org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.deriveKey(JDBCStore,Object)",17,25
"org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.deriveValue(JDBCStore,Object)",6,8
"org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.selectValue(Select,ClassMapping,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Joins)",15,29
"org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.loadValue(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,Result,Joins)",15,24
"org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.getResults(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,Joins[],boolean)",34,70
"org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.getResults(OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int,Joins[],boolean).$1.select(Select,int)",9,13
"org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.joinKeyRelation(Joins,ClassMapping)",5,9
"org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.joinKeyRelation(Joins,boolean,boolean)",22,61
"org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.joinValueRelation(Joins,ClassMapping)",7,13
org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.newLRSProxy(),3,6
"org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.add(JDBCStore,Object,Object)",9,16
org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.toCollection(Object),5,8
org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.map(boolean),14,27
"org.apache.openjpa.jdbc.meta.strats.RelationMapTableFieldStrategy.joinKey(Joins,boolean)",6,15
org.apache.openjpa.persistence.datacache.TestCacheMultiThreadedLoad.TestCacheMultiThreadedLoad(),12,15
org.apache.openjpa.persistence.datacache.TestCacheMultiThreadedLoad.skipTest(),2,2
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance2.getId(),0,0
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance2.setId(long),1,1
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance2.getManaged(),4,6
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance2.setManaged(ManagedInverseTestInstance),5,9
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance2.getStringField(),2,5
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance2.setStringField(String),3,10
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance2.getVersion(),1,2
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance2.setVersion(int),2,5
org.apache.openjpa.lib.rop.TestRangeResultObjectProvider.TestRangeResultObjectProvider(String),6,8
org.apache.openjpa.lib.rop.TestRangeResultObjectProvider.getResultList(ResultObjectProvider),5,12
org.apache.openjpa.lib.rop.TestRangeResultObjectProvider.getResultObjectProviders(List),17,93
org.apache.openjpa.lib.rop.TestRangeResultObjectProvider.main(String[]),3,4
org.apache.openjpa.persistence.criteria.CompoundSelections.getFillStrategy(Selection<X>),6,20
"org.apache.openjpa.persistence.criteria.CompoundSelections.CompoundSelectionImpl<X,X>.CompoundSelectionImpl(Class<X>,Selection<>)",9,20
"org.apache.openjpa.persistence.criteria.CompoundSelections.CompoundSelectionImpl<X,X>.isCompoundSelection()",2,2
"org.apache.openjpa.persistence.criteria.CompoundSelections.CompoundSelectionImpl<X,X>.getCompoundSelectionItems()",10,21
"org.apache.openjpa.persistence.criteria.CompoundSelections.CompoundSelectionImpl<X,X>.assertNoCompoundSelection(Selection<>)",8,16
"org.apache.openjpa.persistence.criteria.CompoundSelections.CompoundSelectionImpl<X,X>.getFillStrategy()",2,4
"org.apache.openjpa.persistence.criteria.CompoundSelections.CompoundSelectionImpl<X,X>.asValue(AliasContext)",11,23
"org.apache.openjpa.persistence.criteria.CompoundSelections.CompoundSelectionImpl<X,X>.asProjection(AliasContext)",11,23
"org.apache.openjpa.persistence.criteria.CompoundSelections.Array<X>.Array(Class<X>,Selection<>)",7,14
org.apache.openjpa.persistence.criteria.CompoundSelections.Array<X>.getFillStrategy(),5,9
"org.apache.openjpa.persistence.criteria.CompoundSelections.NewInstance<X>.NewInstance(Class<X>,Selection<>)",7,13
org.apache.openjpa.persistence.criteria.CompoundSelections.NewInstance<X>.getFillStrategy(),2,5
"org.apache.openjpa.persistence.criteria.CompoundSelections.NewInstance<X>.findConstructor(Class<X>,Selection<>)",18,33
org.apache.openjpa.persistence.criteria.CompoundSelections.NewInstance<X>.asValue(AliasContext),9,15
org.apache.openjpa.persistence.criteria.CompoundSelections.Tuple.Tuple(Selection<>[]),5,7
org.apache.openjpa.persistence.criteria.CompoundSelections.Tuple.getFillStrategy(),15,33
"org.apache.openjpa.persistence.criteria.CompoundSelections.MultiSelection<T>.MultiSelection(Class<T>,Selection<>[])",4,7
org.apache.openjpa.persistence.criteria.CompoundSelections.MultiSelection<T>.getFillStrategy(),22,72
org.apache.openjpa.persistence.embed.Department1.getDeptId(),1,2
org.apache.openjpa.persistence.embed.Department1.setDeptId(int),2,5
org.apache.openjpa.persistence.embed.Department1.getEmpMap(),4,7
"org.apache.openjpa.persistence.embed.Department1.setEmpMap(Map<Integer,Employee1>)",5,12
"org.apache.openjpa.jdbc.sql.Calendard.Calendard(Object,Calendar)",4,9
org.apache.openjpa.event.TCPRemoteCommitProvider.TCPRemoteCommitProvider(),22,31
org.apache.openjpa.event.TCPRemoteCommitProvider.getPort(),3,5
org.apache.openjpa.event.TCPRemoteCommitProvider.setPort(int),4,9
org.apache.openjpa.event.TCPRemoteCommitProvider.setRecoveryTimeMillis(int),11,15
org.apache.openjpa.event.TCPRemoteCommitProvider.getRecoveryTimeMillis(),9,12
org.apache.openjpa.event.TCPRemoteCommitProvider.setMaxActive(int),9,15
org.apache.openjpa.event.TCPRemoteCommitProvider.getMaxActive(),8,10
org.apache.openjpa.event.TCPRemoteCommitProvider.setMaxIdle(int),7,14
org.apache.openjpa.event.TCPRemoteCommitProvider.getMaxIdle(),6,9
org.apache.openjpa.event.TCPRemoteCommitProvider.setNumBroadcastThreads(int),24,72
org.apache.openjpa.event.TCPRemoteCommitProvider.getNumBroadcastThreads(),9,12
org.apache.openjpa.event.TCPRemoteCommitProvider.setAddresses(String),85,198
org.apache.openjpa.event.TCPRemoteCommitProvider.endConfiguration(),42,118
org.apache.openjpa.event.TCPRemoteCommitProvider.broadcast(RemoteCommitEvent),38,74
org.apache.openjpa.event.TCPRemoteCommitProvider.sendUpdatePacket(byte[]),17,29
org.apache.openjpa.event.TCPRemoteCommitProvider.close(),23,40
org.apache.openjpa.event.TCPRemoteCommitProvider.BroadcastQueue.close(),3,3
org.apache.openjpa.event.TCPRemoteCommitProvider.BroadcastQueue.isClosed(),1,2
org.apache.openjpa.event.TCPRemoteCommitProvider.BroadcastQueue.addPacket(byte[]),5,8
org.apache.openjpa.event.TCPRemoteCommitProvider.BroadcastQueue.removePacket(),18,32
org.apache.openjpa.event.TCPRemoteCommitProvider.BroadcastWorkerThread.run(),14,25
org.apache.openjpa.event.TCPRemoteCommitProvider.BroadcastWorkerThread.setRunning(boolean),2,5
org.apache.openjpa.event.TCPRemoteCommitProvider.BroadcastWorkerThread.remove(),3,4
"org.apache.openjpa.event.TCPRemoteCommitProvider.TCPPortListener.TCPPortListener(int,Log)",30,54
org.apache.openjpa.event.TCPRemoteCommitProvider.TCPPortListener.listen(),6,11
org.apache.openjpa.event.TCPRemoteCommitProvider.TCPPortListener.addProvider(TCPRemoteCommitProvider),18,35
org.apache.openjpa.event.TCPRemoteCommitProvider.TCPPortListener.removeProvider(TCPRemoteCommitProvider),26,44
org.apache.openjpa.event.TCPRemoteCommitProvider.TCPPortListener.isRunning(),2,3
org.apache.openjpa.event.TCPRemoteCommitProvider.TCPPortListener.run(),59,155
org.apache.openjpa.event.TCPRemoteCommitProvider.TCPPortListener.ReceiveSocketHandler.ReceiveSocketHandler(Socket),27,45
org.apache.openjpa.event.TCPRemoteCommitProvider.TCPPortListener.ReceiveSocketHandler.run(),34,63
org.apache.openjpa.event.TCPRemoteCommitProvider.TCPPortListener.ReceiveSocketHandler.handle(InputStream),52,132
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.HostAddress(String),34,77
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.setMaxActive(int),5,12
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.setMaxIdle(int),5,12
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.close(),12,22
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.sendUpdatePacket(byte[]),52,135
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.getSocket(),5,8
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.returnSocket(Socket),4,6
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.clearAllSockets(),3,3
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.closeSocket(Socket),9,14
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.SocketPoolableObjectFactory.makeObject(),19,32
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.SocketPoolableObjectFactory.destroyObject(Object),19,36
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.SocketPoolableObjectFactory.validateObject(Object),3,4
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.SocketPoolableObjectFactory.activateObject(Object),3,4
org.apache.openjpa.event.TCPRemoteCommitProvider.HostAddress.SocketPoolableObjectFactory.passivateObject(Object),3,4
"org.apache.openjpa.kernel.PNonTransNewState.initialize(StateManagerImpl,PCState)",8,11
org.apache.openjpa.kernel.PNonTransNewState.delete(StateManagerImpl),4,4
org.apache.openjpa.kernel.PNonTransNewState.transactional(StateManagerImpl),5,5
org.apache.openjpa.kernel.PNonTransNewState.release(StateManagerImpl),4,4
org.apache.openjpa.kernel.PNonTransNewState.isPersistent(),1,1
org.apache.openjpa.kernel.PNonTransNewState.isNew(),0,0
org.apache.openjpa.kernel.PNonTransNewState.isDirty(),1,1
org.apache.openjpa.kernel.PNonTransNewState.isPendingTransactional(),2,2
org.apache.openjpa.kernel.PNonTransNewState.toString(),3,4
org.apache.openjpa.persistence.embed.DepartmentXml.getDeptId(),1,2
org.apache.openjpa.persistence.embed.DepartmentXml.setDeptId(int),2,5
org.apache.openjpa.persistence.embed.DepartmentXml.getEmpMap(),5,8
"org.apache.openjpa.persistence.embed.DepartmentXml.setEmpMap(Map<Integer,EmployeeXml>)",6,13
org.apache.openjpa.persistence.embed.DepartmentXml.addEmployee(EmployeeXml),5,7
org.apache.openjpa.persistence.embed.DepartmentXml.removeEmployee(Integer),5,8
org.apache.openjpa.persistence.access.xml.XMLMappedSuperField.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLMappedSuperField.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLMappedSuperField.setName(String),3,6
org.apache.openjpa.persistence.access.xml.XMLMappedSuperField.getName(),2,3
org.apache.openjpa.persistence.access.xml.XMLMappedSuperField.equals(Object),7,17
org.apache.openjpa.persistence.query.ExistsExpression.ExistsExpression(QueryDefinitionImpl),8,13
org.apache.openjpa.persistence.enhance.identity.Employee1Xml.getEmpId(),1,2
org.apache.openjpa.persistence.enhance.identity.Employee1Xml.setEmpId(int),2,5
org.apache.openjpa.persistence.enhance.identity.Employee1Xml.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.Employee1Xml.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.Employee1Xml.getDependents(),4,5
org.apache.openjpa.persistence.enhance.identity.Employee1Xml.setDependents(List<Dependent1Xml>),5,8
org.apache.openjpa.persistence.enhance.identity.Employee1Xml.addDependent(Dependent1Xml),4,6
org.apache.openjpa.persistence.enhance.identity.Employee1Xml.equals(Object),10,30
org.apache.openjpa.persistence.enhance.identity.Employee1Xml.hashCode(),8,20
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafB1.getLeafB1Data(),3,3
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafB1.setLeafB1Data(String),4,6
org.apache.openjpa.persistence.query.MinExpression.MinExpression(Expression),5,7
org.apache.openjpa.persistence.criteria.CriteriaTest.getDomainClasses(),2,3
org.apache.openjpa.persistence.criteria.CriteriaTest.setUp(),15,34
org.apache.openjpa.persistence.criteria.CriteriaTest.tearDown(),5,11
org.apache.openjpa.persistence.criteria.CriteriaTest.getEntityManagerFactory(),6,9
org.apache.openjpa.persistence.criteria.CriteriaTest.setEntityManagerFactory(OpenJPAEntityManagerFactorySPI),9,14
org.apache.openjpa.persistence.criteria.CriteriaTest.getAuditor(),2,4
org.apache.openjpa.persistence.criteria.CriteriaTest.setAuditor(SQLAuditor),5,9
org.apache.openjpa.persistence.criteria.CriteriaTest.getCriteriaBuilder(),3,5
org.apache.openjpa.persistence.criteria.CriteriaTest.setCriteriaBuilder(OpenJPACriteriaBuilder),4,6
org.apache.openjpa.persistence.criteria.CriteriaTest.getEntityManager(),2,4
org.apache.openjpa.persistence.criteria.CriteriaTest.setEntityManager(EntityManager),3,5
org.apache.openjpa.kernel.exps.AggregateVal.AggregateVal(Val),5,10
org.apache.openjpa.kernel.exps.AggregateVal.isAggregate(),1,1
org.apache.openjpa.kernel.exps.AggregateVal.getType(),2,4
org.apache.openjpa.kernel.exps.AggregateVal.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.AggregateVal.eval(Object,Object,StoreContext,Object[])",22,36
"org.apache.openjpa.kernel.exps.AggregateVal.eval(Collection,Object,StoreContext,Object[])",15,25
org.apache.openjpa.kernel.exps.AggregateVal.getType(Class),4,6
"org.apache.openjpa.kernel.exps.AggregateVal.operate(Collection,Class)",5,5
org.apache.openjpa.kernel.exps.AggregateVal.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.persistence.inheritance.entity.SubclassE.setClassEName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.SubclassE.getClassEName(),2,3
org.apache.openjpa.persistence.inheritance.entity.SubclassE.toString(),2,5
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.TestSubclassedBehavior(String),6,7
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.setUp(),13,23
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testInheritance(),32,101
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testBasicSubclassPersistenceOperations(),12,28
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testBackingFieldNameMismatch(),11,28
"org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.newInstance(OpenJPAEntityManager,Class)",7,9
"org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.createInstance(EntityManager,Class)",7,12
"org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.persistenceOperations(OpenJPAEntityManager,SubclassTestInstance,boolean)",21,68
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testPolymorphicQueries(),25,113
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testEnhancedClassChangesOutsideTxWithoutNTW(),24,43
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testSubclassChangesOutsideTxWithoutNTW(),26,62
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testBasicPMUses(),48,153
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testGetObjectId(),27,64
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testChangesOutsideTxWithNTW(),30,76
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testChangesOutsideTxWithoutNTW(),27,50
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.getNTWPM(),11,22
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testVersionIncrementAndIdField(),23,50
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testJPABasics(),16,28
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testSingleValuedInverseManagement(),20,72
org.apache.openjpa.persistence.enhance.TestSubclassedBehavior.testBackingFieldConfigurationWithTwoFactories(),50,119
org.apache.openjpa.persistence.enhance.identity.PersonId1.PersonId1(),1,1
"org.apache.openjpa.persistence.enhance.identity.PersonId1.PersonId1(String,String)",3,9
org.apache.openjpa.persistence.enhance.identity.PersonId1.setFirstName(String),3,6
org.apache.openjpa.persistence.enhance.identity.PersonId1.getFirstName(),2,3
org.apache.openjpa.persistence.enhance.identity.PersonId1.setLastName(String),3,6
org.apache.openjpa.persistence.enhance.identity.PersonId1.getLastName(),2,3
org.apache.openjpa.persistence.enhance.identity.PersonId1.equals(Object),6,26
org.apache.openjpa.persistence.enhance.identity.PersonId1.hashCode(),4,14
org.apache.openjpa.persistence.jest.XMLFormatter.getMimeType(),4,6
"org.apache.openjpa.persistence.jest.XMLFormatter.encode(Collection<OpenJPAStateManager>,Metamodel)",24,51
org.apache.openjpa.persistence.jest.XMLFormatter.encode(Metamodel),19,37
org.apache.openjpa.persistence.jest.XMLFormatter.newDocument(String),28,62
"org.apache.openjpa.persistence.jest.XMLFormatter.writeOut(Collection<OpenJPAStateManager>,Metamodel,String,String,String,OutputStream)",18,30
"org.apache.openjpa.persistence.jest.XMLFormatter.writeOut(Metamodel,String,String,String,OutputStream)",14,25
"org.apache.openjpa.persistence.jest.XMLFormatter.decorate(Document,String,String,String)",21,68
"org.apache.openjpa.persistence.jest.XMLFormatter.write(Document,OutputStream)",11,15
"org.apache.openjpa.persistence.jest.XMLFormatter.write(Document,Writer)",11,16
"org.apache.openjpa.persistence.jest.XMLFormatter.encodeManagedInstance(OpenJPAStateManager,Element,boolean,Metamodel)",96,577
org.apache.openjpa.persistence.jest.XMLFormatter.encodeNull(Element),10,19
"org.apache.openjpa.persistence.jest.XMLFormatter.encodeRef(Element,OpenJPAStateManager)",26,42
"org.apache.openjpa.persistence.jest.XMLFormatter.encodeBasic(Element,Object,Class<>)",21,58
org.apache.openjpa.persistence.jest.XMLFormatter.streamToString(Object),23,56
"org.apache.openjpa.persistence.jest.XMLFormatter.encodeManagedType(ManagedType<>,Element)",33,115
org.apache.openjpa.persistence.jest.XMLFormatter.validate(Document),8,13
org.apache.openjpa.persistence.jest.XMLFormatter.ior(OpenJPAStateManager),6,6
org.apache.openjpa.persistence.jest.XMLFormatter.typeOf(OpenJPAStateManager),9,10
org.apache.openjpa.persistence.jest.XMLFormatter.typeOf(Class<>),5,6
org.apache.openjpa.persistence.jest.XMLFormatter.typeOf(ClassMetaData),7,10
org.apache.openjpa.persistence.jest.XMLFormatter.typeOf(ValueMetaData),5,14
org.apache.openjpa.persistence.jest.XMLFormatter.typeOf(FieldMetaData),8,10
org.apache.openjpa.jdbc.meta.strats.FullClassStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.FullClassStrategy.map(boolean),51,176
"org.apache.openjpa.jdbc.meta.strats.FullClassStrategy.supportsEagerSelect(Select,OpenJPAStateManager,JDBCStore,ClassMapping,JDBCFetchConfiguration)",12,16
"org.apache.openjpa.jdbc.meta.strats.FullClassStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",18,29
"org.apache.openjpa.jdbc.meta.strats.FullClassStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",13,22
"org.apache.openjpa.jdbc.meta.strats.FullClassStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",13,21
org.apache.openjpa.jdbc.meta.strats.FullClassStrategy.isPrimaryKeyObjectId(boolean),3,3
org.apache.openjpa.persistence.inheritance.polymorphic.Translatable.addTranslation(Translation),5,10
org.apache.openjpa.persistence.inheritance.polymorphic.Translatable.getTranslations(),5,7
org.apache.openjpa.persistence.embed.VicePresident.getId(),0,0
org.apache.openjpa.persistence.embed.VicePresident.setId(int),1,1
org.apache.openjpa.persistence.embed.VicePresident.getName(),2,3
org.apache.openjpa.persistence.embed.VicePresident.setName(String),3,6
org.apache.openjpa.persistence.embed.VicePresident.getCompany(),1,2
org.apache.openjpa.persistence.embed.VicePresident.setCompany(Company1),2,3
org.apache.openjpa.persistence.enhance.identity.EmployeeId5.EmployeeId5(),1,1
"org.apache.openjpa.persistence.enhance.identity.EmployeeId5.EmployeeId5(String,String)",3,9
org.apache.openjpa.persistence.enhance.identity.EmployeeId5.setFirstName(String),3,6
org.apache.openjpa.persistence.enhance.identity.EmployeeId5.setLastName(String),3,6
org.apache.openjpa.persistence.enhance.identity.EmployeeId5.getFirstName(),2,3
org.apache.openjpa.persistence.enhance.identity.EmployeeId5.getLastName(),2,3
org.apache.openjpa.persistence.enhance.identity.EmployeeId5.equals(Object),4,11
org.apache.openjpa.persistence.enhance.identity.EmployeeId5.hashCode(),4,13
org.apache.openjpa.persistence.jdbc.annotations.Generator.setPk(int),2,2
org.apache.openjpa.persistence.jdbc.annotations.Generator.getPk(),0,0
org.apache.openjpa.persistence.jdbc.annotations.Generator.getPk2(),1,1
org.apache.openjpa.persistence.jdbc.annotations.Generator.getPk3(),0,0
org.apache.openjpa.persistence.jdbc.annotations.Generator.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.annotations.Generator.setStringField(String),3,6
org.apache.openjpa.persistence.jdbc.annotations.Generator.Oid.Oid(),1,1
org.apache.openjpa.persistence.jdbc.annotations.Generator.Oid.Oid(String),9,20
org.apache.openjpa.persistence.jdbc.annotations.Generator.Oid.equals(Object),3,6
org.apache.openjpa.persistence.jdbc.annotations.Generator.Oid.hashCode(),5,7
org.apache.openjpa.persistence.jdbc.annotations.Generator.Oid.toString(),1,2
org.apache.openjpa.persistence.detach.Entity12.Entity12(),1,1
"org.apache.openjpa.persistence.detach.Entity12.Entity12(long,String)",3,5
org.apache.openjpa.persistence.detach.Entity12.getId(),0,0
org.apache.openjpa.persistence.detach.Entity12.setId(long),1,1
org.apache.openjpa.persistence.detach.Entity12.getName(),2,3
org.apache.openjpa.persistence.detach.Entity12.setName(String),3,6
org.apache.openjpa.jdbc.meta.strats.InValueDiscriminatorStrategy.getJavaType(),10,13
org.apache.openjpa.jdbc.meta.strats.InValueDiscriminatorStrategy.getDiscriminatorValue(ClassMapping),6,8
"org.apache.openjpa.jdbc.meta.strats.InValueDiscriminatorStrategy.getClass(Object,JDBCStore)",10,11
org.apache.openjpa.jdbc.meta.strats.InValueDiscriminatorStrategy.map(boolean),35,96
"org.apache.openjpa.jdbc.meta.strats.InValueDiscriminatorStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",22,36
"org.apache.openjpa.jdbc.meta.strats.InValueDiscriminatorStrategy.select(Select,ClassMapping)",5,9
"org.apache.openjpa.jdbc.meta.strats.InValueDiscriminatorStrategy.getClass(JDBCStore,ClassMapping,Result)",23,36
"org.apache.openjpa.jdbc.meta.strats.InValueDiscriminatorStrategy.useDiscrimColumn(ClassMapping,Result)",18,35
"org.apache.openjpa.jdbc.meta.strats.InValueDiscriminatorStrategy.hasClassConditions(ClassMapping,boolean)",14,29
"org.apache.openjpa.jdbc.meta.strats.InValueDiscriminatorStrategy.getClassConditions(Select,Joins,ClassMapping,boolean)",29,94
org.apache.openjpa.datacache.QueryCache.initialize(DataCacheManager),7,12
org.apache.openjpa.datacache.QueryCache.get(QueryKey),9,15
"org.apache.openjpa.datacache.QueryCache.put(QueryKey,QueryResult)",19,31
org.apache.openjpa.datacache.QueryCache.remove(QueryKey),31,47
org.apache.openjpa.datacache.QueryCache.clear(),3,3
org.apache.openjpa.datacache.QueryCache.pin(QueryKey),27,50
org.apache.openjpa.datacache.QueryCache.unpin(QueryKey),19,40
org.apache.openjpa.datacache.QueryCache.writeLock(),4,6
org.apache.openjpa.datacache.QueryCache.writeUnlock(),5,6
org.apache.openjpa.datacache.QueryCache.addTypesChangedListener(TypesChangedListener),7,13
org.apache.openjpa.datacache.QueryCache.removeTypesChangedListener(TypesChangedListener),7,13
org.apache.openjpa.datacache.QueryCache.close(),1,1
org.apache.openjpa.datacache.QueryCache.getStatistics(),9,15
org.apache.openjpa.persistence.enhance.common.apps.BaseEntity.getId(),0,0
org.apache.openjpa.persistence.enhance.common.apps.BaseEntity.setId(long),1,1
org.apache.openjpa.persistence.enhance.common.apps.BaseEntity.getVersion(),1,2
org.apache.openjpa.persistence.enhance.common.apps.BaseEntity.setVersion(int),2,5
org.apache.openjpa.persistence.enhance.common.apps.BaseEntity.setStringField(String),3,4
org.apache.openjpa.persistence.enhance.common.apps.BaseEntity.getStringField(),2,3
org.apache.openjpa.persistence.enhance.common.apps.BaseEntity.getShortField(),1,1
org.apache.openjpa.persistence.enhance.common.apps.BaseEntity.setShortField(short),2,2
org.apache.openjpa.enhance.FieldSupplier.fetchBooleanField(int),4,6
org.apache.openjpa.enhance.FieldSupplier.fetchCharField(int),4,6
org.apache.openjpa.enhance.FieldSupplier.fetchByteField(int),4,6
org.apache.openjpa.enhance.FieldSupplier.fetchShortField(int),4,6
org.apache.openjpa.enhance.FieldSupplier.fetchIntField(int),4,6
org.apache.openjpa.enhance.FieldSupplier.fetchLongField(int),4,6
org.apache.openjpa.enhance.FieldSupplier.fetchFloatField(int),4,6
org.apache.openjpa.enhance.FieldSupplier.fetchDoubleField(int),4,6
org.apache.openjpa.enhance.FieldSupplier.fetchStringField(int),5,8
org.apache.openjpa.enhance.FieldSupplier.fetchObjectField(int),5,8
org.apache.openjpa.persistence.detach.xml.TestDetachXML.testDetach(),24,47
org.apache.openjpa.persistence.detach.xml.TestDetachXML.testNoDetach(),25,47
org.apache.openjpa.persistence.detach.xml.TestDetachXML.testAllDetach(),25,47
"org.apache.openjpa.persistence.detach.xml.TestDetachXML.verifyCascadeDetach(EntityManagerFactory,boolean)",20,52
org.apache.openjpa.persistence.detach.xml.TestDetachXML.createData(EntityManager),32,156
org.apache.openjpa.persistence.detach.xml.TestDetachXML.cleanupEMF(OpenJPAEntityManagerFactorySPI),24,34
org.apache.openjpa.persistence.FetchPlan.getMaxFetchDepth(),6,8
org.apache.openjpa.persistence.FetchPlan.setMaxFetchDepth(int),8,12
org.apache.openjpa.persistence.FetchPlan.getFetchBatchSize(),15,22
org.apache.openjpa.persistence.FetchPlan.setFetchBatchSize(int),16,29
org.apache.openjpa.persistence.FetchPlan.getQueryResultCacheEnabled(),10,23
org.apache.openjpa.persistence.FetchPlan.setQueryResultCacheEnabled(boolean),15,21
org.apache.openjpa.persistence.FetchPlan.getQueryResultCache(),7,10
org.apache.openjpa.persistence.FetchPlan.setQueryResultCache(boolean),10,15
org.apache.openjpa.persistence.FetchPlan.getFetchGroups(),12,15
org.apache.openjpa.persistence.FetchPlan.addFetchGroup(String),9,12
org.apache.openjpa.persistence.FetchPlan.addFetchGroups(String),10,13
org.apache.openjpa.persistence.FetchPlan.addFetchGroups(Collection),10,13
org.apache.openjpa.persistence.FetchPlan.removeFetchGroup(String),4,7
org.apache.openjpa.persistence.FetchPlan.removeFetchGroups(String),10,13
org.apache.openjpa.persistence.FetchPlan.removeFetchGroups(Collection),10,13
org.apache.openjpa.persistence.FetchPlan.clearFetchGroups(),15,19
org.apache.openjpa.persistence.FetchPlan.resetFetchGroups(),8,10
org.apache.openjpa.persistence.FetchPlan.getFields(),12,13
org.apache.openjpa.persistence.FetchPlan.hasField(String),3,5
"org.apache.openjpa.persistence.FetchPlan.hasField(Class,String)",4,6
org.apache.openjpa.persistence.FetchPlan.addField(String),12,16
"org.apache.openjpa.persistence.FetchPlan.addField(Class,String)",12,16
org.apache.openjpa.persistence.FetchPlan.addFields(String),13,16
"org.apache.openjpa.persistence.FetchPlan.addFields(Class,String)",13,16
org.apache.openjpa.persistence.FetchPlan.addFields(Collection),13,16
"org.apache.openjpa.persistence.FetchPlan.addFields(Class,Collection)",13,16
org.apache.openjpa.persistence.FetchPlan.removeField(String),6,9
"org.apache.openjpa.persistence.FetchPlan.removeField(Class,String)",6,9
org.apache.openjpa.persistence.FetchPlan.removeFields(String),13,16
"org.apache.openjpa.persistence.FetchPlan.removeFields(Class,String)",13,16
org.apache.openjpa.persistence.FetchPlan.removeFields(Collection),13,16
"org.apache.openjpa.persistence.FetchPlan.removeFields(Class,Collection)",13,16
org.apache.openjpa.persistence.FetchPlan.clearFields(),15,18
org.apache.openjpa.persistence.FetchPlan.getLockTimeout(),6,7
org.apache.openjpa.persistence.FetchPlan.setLockTimeout(int),9,11
org.apache.openjpa.persistence.FetchPlan.getLockScope(),6,10
org.apache.openjpa.persistence.FetchPlan.setLockScope(PessimisticLockScope),9,14
org.apache.openjpa.persistence.FetchPlan.getQueryTimeout(),5,6
org.apache.openjpa.persistence.FetchPlan.setQueryTimeout(int),8,10
org.apache.openjpa.persistence.FetchPlan.getReadLockMode(),8,11
org.apache.openjpa.persistence.FetchPlan.setReadLockMode(LockModeType),11,15
org.apache.openjpa.persistence.FetchPlan.getWriteLockMode(),8,11
org.apache.openjpa.persistence.FetchPlan.setWriteLockMode(LockModeType),11,15
org.apache.openjpa.persistence.FetchPlan.getDelegate(),7,7
org.apache.openjpa.persistence.FetchPlan.getExtendedPathLookup(),6,9
org.apache.openjpa.persistence.FetchPlan.setExtendedPathLookup(boolean),9,12
org.apache.openjpa.persistence.FetchPlan.getCacheStoreMode(),6,12
org.apache.openjpa.persistence.FetchPlan.setCacheStoreMode(DataCacheStoreMode),10,17
org.apache.openjpa.persistence.FetchPlan.getCacheRetrieveMode(),5,12
org.apache.openjpa.persistence.FetchPlan.setCacheRetrieveMode(DataCacheRetrieveMode),9,17
"org.apache.openjpa.persistence.FetchPlan.setHint(String,Object)",8,18
org.apache.openjpa.persistence.FetchPlan.getHints(),10,13
org.apache.openjpa.persistence.FetchPlan.getHint(String),6,9
org.apache.openjpa.persistence.osgi.BundleDelegatingClassLoader.BundleDelegatingClassLoader(Bundle),3,5
org.apache.openjpa.persistence.osgi.BundleDelegatingClassLoader.findClass(String),6,7
org.apache.openjpa.persistence.osgi.BundleDelegatingClassLoader.findResource(String),6,9
org.apache.openjpa.persistence.osgi.BundleDelegatingClassLoader.findResources(String),8,11
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.PhoneNumber.getNumber(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.PhoneNumber.setNumber(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.PhoneNumber.getEmployees(),5,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.PhoneNumber.addEmployees(Division,Employee)",5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.PhoneNumber.removeEmployee(Division),4,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.PhoneNumber.equals(Object),16,45
org.apache.openjpa.persistence.discriminator.IntegerAbstractEntity.getId(),0,0
org.apache.openjpa.persistence.discriminator.IntegerAbstractEntity.getName(),2,3
org.apache.openjpa.persistence.discriminator.IntegerAbstractEntity.setName(String),3,6
org.apache.openjpa.persistence.embed.Employee1.getEmpId(),1,2
org.apache.openjpa.persistence.embed.Employee1.setEmpId(int),2,5
org.apache.openjpa.persistence.embed.Employee1.getDepartment(),1,3
org.apache.openjpa.persistence.embed.Employee1.setDepartment(Department1),2,6
org.apache.openjpa.persistence.query.CaseExpressionImpl.CaseExpressionImpl(),2,2
org.apache.openjpa.persistence.query.CaseExpressionImpl.CaseExpressionImpl(Object),4,6
org.apache.openjpa.persistence.query.CaseExpressionImpl.elseCase(Expression),2,5
org.apache.openjpa.persistence.query.CaseExpressionImpl.elseCase(String),4,7
org.apache.openjpa.persistence.query.CaseExpressionImpl.elseCase(Number),3,6
org.apache.openjpa.persistence.query.CaseExpressionImpl.elseCase(Date),4,7
org.apache.openjpa.persistence.query.CaseExpressionImpl.elseCase(Calendar),4,7
org.apache.openjpa.persistence.query.CaseExpressionImpl.elseCase(Class),3,6
org.apache.openjpa.persistence.query.CaseExpressionImpl.elseCase(Enum<>),3,6
org.apache.openjpa.persistence.query.CaseExpressionImpl.then(Expression),3,4
org.apache.openjpa.persistence.query.CaseExpressionImpl.then(Number),3,3
org.apache.openjpa.persistence.query.CaseExpressionImpl.then(String),4,4
org.apache.openjpa.persistence.query.CaseExpressionImpl.then(Date),4,4
org.apache.openjpa.persistence.query.CaseExpressionImpl.then(Calendar),4,4
org.apache.openjpa.persistence.query.CaseExpressionImpl.then(Class),3,3
org.apache.openjpa.persistence.query.CaseExpressionImpl.then(Enum<>),3,3
org.apache.openjpa.persistence.query.CaseExpressionImpl.when(Predicate),5,8
org.apache.openjpa.persistence.query.CaseExpressionImpl.when(Expression),4,8
org.apache.openjpa.persistence.query.CaseExpressionImpl.when(Number),4,7
org.apache.openjpa.persistence.query.CaseExpressionImpl.when(String),5,8
org.apache.openjpa.persistence.query.CaseExpressionImpl.when(Date),5,8
org.apache.openjpa.persistence.query.CaseExpressionImpl.when(Calendar),5,8
org.apache.openjpa.persistence.query.CaseExpressionImpl.when(Class),4,7
org.apache.openjpa.persistence.query.CaseExpressionImpl.when(Enum<>),4,7
org.apache.openjpa.persistence.query.CaseExpressionImpl.assertWhenState(),5,6
org.apache.openjpa.persistence.query.CaseExpressionImpl.assertThenState(),5,6
org.apache.openjpa.persistence.query.CaseExpressionImpl.asExpression(AliasContext),12,24
org.apache.openjpa.persistence.query.CaseExpressionImpl.asProjection(AliasContext),6,7
org.apache.openjpa.persistence.query.CaseExpressionImpl.asJoinable(AliasContext),8,8
org.apache.openjpa.persistence.query.CaseExpressionImpl.getAliasHint(AliasContext),8,9
"org.apache.openjpa.persistence.query.CaseExpressionImpl.toJPQL(AliasContext,Object)",8,11
org.apache.openjpa.persistence.embed.attrOverrides.JobInfo.setJobDescription(String),4,10
org.apache.openjpa.persistence.embed.attrOverrides.JobInfo.getJobDescription(),3,5
org.apache.openjpa.persistence.embed.attrOverrides.JobInfo.setProgramManager(ProgramManager),3,5
org.apache.openjpa.persistence.embed.attrOverrides.JobInfo.getProgramManager(),2,4
org.apache.openjpa.enhance.ids.Device.Device(),1,1
org.apache.openjpa.enhance.ids.Device.setId(int),1,1
org.apache.openjpa.enhance.ids.Device.getId(),0,0
org.apache.openjpa.enhance.ids.Device.setType(int),2,5
org.apache.openjpa.enhance.ids.Device.getType(),1,2
org.apache.openjpa.enhance.ids.Device.setDescription(String),3,6
org.apache.openjpa.enhance.ids.Device.getDescription(),2,3
org.apache.openjpa.persistence.fetchgroups.TestFetchGroupStacksXML.setUp(),1,2
org.apache.openjpa.persistence.fetchgroups.TestFetchGroupStacksXML.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.enhance.identity.MedicalHistory2.getPatient(),2,3
org.apache.openjpa.persistence.enhance.identity.MedicalHistory2.setPatient(Person2),3,4
org.apache.openjpa.persistence.enhance.identity.MedicalHistory2.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.MedicalHistory2.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.MedicalHistory2.getId(),0,0
org.apache.openjpa.persistence.enhance.identity.MedicalHistory2.setId(long),1,1
org.apache.openjpa.persistence.enhance.identity.MedicalHistory2.equals(Object),9,25
org.apache.openjpa.persistence.enhance.identity.MedicalHistory2.hashCode(),6,15
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddableSuperclass.setUp(),4,6
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddableSuperclass.testSuperclassEmbeddedOnly(),14,22
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddableSuperclass.testSubclassMappingDefaultsAndOverrides(),39,92
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddableSuperclass.testSubclassDiscriminatorMapping(),17,26
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddableSuperclass.testVersionOverrideMapping(),17,26
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddableSuperclass.testRelationMappings(),17,38
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddableSuperclass.testPersistAndFind(),18,76
org.apache.openjpa.persistence.enhance.common.apps.PCClone.PCClone(String),3,5
org.apache.openjpa.persistence.enhance.common.apps.PCClone.getString(),1,3
org.apache.openjpa.persistence.enhance.common.apps.PCClone.clone(),5,8
org.apache.openjpa.jdbc.kernel.EntityE.EntityE(),1,1
org.apache.openjpa.jdbc.kernel.EntityE.setId(Integer),2,2
org.apache.openjpa.jdbc.kernel.EntityE.getId(),1,1
org.apache.openjpa.jdbc.kernel.EntityE.getEntityB(),1,3
org.apache.openjpa.jdbc.kernel.EntityE.setEntityB(EntityB),2,6
org.apache.openjpa.jdbc.kernel.EntityE.getName(),2,3
org.apache.openjpa.jdbc.kernel.EntityE.setName(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.EntityDDListener.EntityDDListener(),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.EntityDDListener.verifyPostRemove(Object),12,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.EntityDDListener.verifyPostUpdate(Object),12,15
org.apache.openjpa.persistence.identity.ComplexCompoundIdTestEntityId.hashCode(),5,17
org.apache.openjpa.persistence.identity.ComplexCompoundIdTestEntityId.equals(Object),8,21
org.apache.openjpa.instrumentation.QueryCacheInstrument.getTotalExecutionCount(),7,8
org.apache.openjpa.instrumentation.QueryCacheInstrument.getTotalExecutionCount(String),12,16
org.apache.openjpa.instrumentation.QueryCacheInstrument.getExecutionCount(),6,7
org.apache.openjpa.instrumentation.QueryCacheInstrument.getExecutionCount(String),11,15
org.apache.openjpa.instrumentation.QueryCacheInstrument.getHitCount(),9,9
org.apache.openjpa.instrumentation.QueryCacheInstrument.getHitCount(String),14,17
org.apache.openjpa.instrumentation.QueryCacheInstrument.getTotalHitCount(),8,9
org.apache.openjpa.instrumentation.QueryCacheInstrument.getTotalHitCount(String),13,17
org.apache.openjpa.instrumentation.QueryCacheInstrument.reset(),4,4
org.apache.openjpa.instrumentation.QueryCacheInstrument.sinceDate(),6,8
org.apache.openjpa.instrumentation.QueryCacheInstrument.startDate(),7,9
org.apache.openjpa.instrumentation.QueryCacheInstrument.queryKeys(),8,11
org.apache.openjpa.instrumentation.QueryCacheInstrument.getEvictionCount(),6,6
org.apache.openjpa.instrumentation.QueryCacheInstrument.getTotalEvictionCount(),6,8
org.apache.openjpa.instrumentation.QueryCacheInstrument.count(),5,6
org.apache.openjpa.persistence.event.TestTCPRemoteEventsDuration.TestTCPRemoteEventsDuration(String),7,7
org.apache.openjpa.persistence.event.TestTCPRemoteEventsDuration.setUp(),4,4
org.apache.openjpa.persistence.event.TestTCPRemoteEventsDuration.tearDownTestClass(),3,5
org.apache.openjpa.persistence.event.TestTCPRemoteEventsDuration.testDurationDifference(),95,321
org.apache.openjpa.persistence.event.TestTCPRemoteEventsDuration.Worker.Worker(EntityManager),3,3
org.apache.openjpa.persistence.event.TestTCPRemoteEventsDuration.Worker.run(),4,4
"org.apache.openjpa.persistence.event.TestTCPRemoteEventsDuration.doTransactions(EntityManager,int)",41,78
"org.apache.openjpa.persistence.event.TestTCPRemoteEventsDuration.createDistinctFactory(Class,String)",28,79
org.apache.openjpa.persistence.event.TestTCPRemoteEventsDuration.RemoteCommitListenerTestImpl.afterCommit(RemoteCommitEvent),15,35
org.apache.openjpa.persistence.event.TestTCPRemoteEventsDuration.RemoteCommitListenerTestImpl.close(),1,1
"org.apache.openjpa.kernel.DetachedStateAttachStrategy.getDetachedObjectId(AttachManager,Object)",24,61
"org.apache.openjpa.kernel.DetachedStateAttachStrategy.provideField(Object,StateManagerImpl,int)",11,17
"org.apache.openjpa.kernel.DetachedStateAttachStrategy.attach(AttachManager,Object,ClassMetaData,PersistenceCapable,OpenJPAStateManager,ValueMetaData,boolean)",105,325
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Student.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Student.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Student.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Student.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Student.getEnrollment(),2,3
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Student.addToEnrollment(Course,Semester)",4,9
org.apache.openjpa.persistence.generationtype.EntityE2.EntityE2(String),3,5
org.apache.openjpa.persistence.generationtype.EntityE2.getId(),0,0
org.apache.openjpa.persistence.generationtype.EntityE2.setId(int),2,3
org.apache.openjpa.persistence.generationtype.EntityE2.getName(),2,4
org.apache.openjpa.persistence.generationtype.EntityE2.setName(String),4,10
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.setUp(),30,60
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testNonpolymorphic(),15,52
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testDataStoreIdColumn(),18,29
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testDiscriminator(),10,20
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testSuperclassOverride(),21,45
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testCustomField(),12,24
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testValueCollection(),22,51
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testJoinCollection(),16,51
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.assertForeignKey(ForeignKey),9,15
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testValueMap(),21,72
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testJoinMap(),15,69
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testEmbeddedOverride(),18,54
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testEmbeddedElementOverride(),15,40
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testInsertAndRetrieve(),38,173
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testInsertAndRetrieveEmbeddedCollection(),25,56
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testInsertAndRetrieveEmbeddedObjectWithStrategy(),27,78
org.apache.openjpa.persistence.jdbc.annotations.TestNonstandardMappingAnnotations.testInsertAndRetrieveMappedSuperWithStrategy(),29,73
org.apache.openjpa.persistence.criteria.EmbeddableDomainTestCase.getDomainClasses(),2,3
org.apache.openjpa.persistence.criteria.EmbeddableDomainTestCase.setUp(),15,33
org.apache.openjpa.persistence.criteria.EmbeddableDomainTestCase.tearDown(),5,11
org.apache.openjpa.persistence.criteria.EmbeddableDomainTestCase.getEntityManagerFactory(),6,9
org.apache.openjpa.persistence.criteria.EmbeddableDomainTestCase.setEntityManagerFactory(OpenJPAEntityManagerFactorySPI),10,15
org.apache.openjpa.persistence.criteria.EmbeddableDomainTestCase.getAuditor(),2,4
org.apache.openjpa.persistence.criteria.EmbeddableDomainTestCase.setAuditor(SQLAuditor),6,10
org.apache.openjpa.persistence.criteria.EmbeddableDomainTestCase.getCriteriaBuilder(),2,4
org.apache.openjpa.persistence.criteria.EmbeddableDomainTestCase.setCriteriaBuilder(CriteriaBuilder),3,5
org.apache.openjpa.persistence.criteria.EmbeddableDomainTestCase.getEntityManager(),2,4
org.apache.openjpa.persistence.criteria.EmbeddableDomainTestCase.setEntityManager(EntityManager),3,5
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC1.AutoIncrementPC1(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC1.AutoIncrementPC1(int),3,4
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC1.getSetField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC1.setSetField(Set),2,10
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC1.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC1.setStringField(String),3,10
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC1.getOneOne(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC1.setOneOne(AutoIncrementPC1),3,3
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC1.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC1.setId(int),1,1
org.apache.openjpa.persistence.inheritance.NoGenEntityL3Sibling.getSiblingL3Data(),3,4
org.apache.openjpa.persistence.inheritance.NoGenEntityL3Sibling.setSiblingL3Data(int),4,7
org.apache.openjpa.persistence.derivedid.EDateID.EDateID(),1,1
org.apache.openjpa.persistence.derivedid.EDateID.EDateID(Date),2,4
org.apache.openjpa.persistence.derivedid.EDateID.getId(),1,1
org.apache.openjpa.persistence.derivedid.EDateID.setId(Date),2,2
org.apache.openjpa.persistence.derivedid.EDateID.getName(),2,3
org.apache.openjpa.persistence.derivedid.EDateID.setName(String),3,6
org.apache.openjpa.persistence.detach.Entity5.Entity5(),1,1
"org.apache.openjpa.persistence.detach.Entity5.Entity5(long,String)",3,5
org.apache.openjpa.persistence.detach.Entity5.getId(),0,0
org.apache.openjpa.persistence.detach.Entity5.setId(long),1,1
org.apache.openjpa.persistence.detach.Entity5.getName(),2,3
org.apache.openjpa.persistence.detach.Entity5.setName(String),3,6
org.apache.openjpa.persistence.detach.Entity5.getE6(),1,1
org.apache.openjpa.persistence.detach.Entity5.setE6(Entity6),2,2
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.TestAbstractJoinedAppId.setUp(),22,39
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.TestAbstractJoinedAppId.testEntityTypeForAbstractJoined(),20,42
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.TestAbstractJoinedAppId.testTraverseRelation(),20,34
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.TestAbstractJoinedAppId.main(String[]),8,9
org.apache.openjpa.meta.Person.Person(),4,4
org.apache.openjpa.meta.Person.Person(String),3,5
org.apache.openjpa.meta.Person.getName(),5,9
org.apache.openjpa.meta.Person.setName(String),10,16
org.apache.openjpa.meta.Person.getPainters(),5,5
org.apache.openjpa.meta.Person.setPainters(Collection<Painter>),6,6
org.apache.openjpa.persistence.access.MappedSuperField.setId(int),1,1
org.apache.openjpa.persistence.access.MappedSuperField.getId(),0,0
org.apache.openjpa.persistence.access.MappedSuperField.setName(String),3,6
org.apache.openjpa.persistence.access.MappedSuperField.getName(),2,3
org.apache.openjpa.persistence.access.MappedSuperField.equals(Object),6,14
org.apache.openjpa.persistence.cache.jpa.model.UnspecifiedEntity.getName(),2,3
org.apache.openjpa.persistence.cache.jpa.model.UnspecifiedEntity.setName(String),3,6
org.apache.openjpa.persistence.cache.jpa.model.UnspecifiedEntity.getId(),0,0
org.apache.openjpa.persistence.cache.jpa.model.UnspecifiedEntity.setId(int),1,1
org.apache.openjpa.persistence.cache.jpa.model.UnspecifiedEntity.getVersion(),1,2
org.apache.openjpa.persistence.cache.jpa.model.UnspecifiedEntity.setVersion(int),2,5
org.apache.openjpa.persistence.jdbc.annotations.TestFlatInheritance.setUp(),3,5
org.apache.openjpa.persistence.jdbc.annotations.TestFlatInheritance.testInheritance(),16,43
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCLeafC.getLeafCData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCLeafC.setLeafCData(String),4,10
org.apache.openjpa.persistence.inheritance.entity.MidClass2.setMidClass2Name(String),4,10
org.apache.openjpa.persistence.inheritance.entity.MidClass2.getMidClass2Name(),3,5
org.apache.openjpa.persistence.inheritance.entity.MidClass2.toString(),3,7
org.apache.openjpa.trader.service.MarketFeed.MarketFeed(PersistenceService),4,7
org.apache.openjpa.trader.service.MarketFeed.start(long),4,5
org.apache.openjpa.trader.service.MarketFeed.run(),22,43
org.apache.openjpa.persistence.compat.Uni_1ToM_JT.getId(),0,0
org.apache.openjpa.persistence.compat.Uni_1ToM_JT.getName(),2,3
org.apache.openjpa.persistence.compat.Uni_1ToM_JT.setName(String),3,6
org.apache.openjpa.persistence.compat.Uni_1ToM_JT.getEntityCs(),2,4
org.apache.openjpa.persistence.compat.Uni_1ToM_JT.setEntityCs(List<EntityC>),3,7
org.apache.openjpa.persistence.compat.Uni_1ToM_JT.hashCode(),3,5
org.apache.openjpa.persistence.compat.Uni_1ToM_JT.equals(Object),6,19
org.apache.openjpa.persistence.compat.EmbeddableSuper.EmbeddableSuper(),1,1
org.apache.openjpa.persistence.compat.EmbeddableSuper.getPK(),0,0
org.apache.openjpa.persistence.compat.EmbeddableSuper.setPK(long),1,1
org.apache.openjpa.persistence.compat.EmbeddableSuper.getTrans(),1,2
org.apache.openjpa.persistence.compat.EmbeddableSuper.setTrans(int),2,5
org.apache.openjpa.persistence.compat.EmbeddableSuper.getClob(),2,3
org.apache.openjpa.persistence.compat.EmbeddableSuper.setClob(String),3,6
org.apache.openjpa.persistence.compat.EmbeddableSuper.getVersion(),1,2
org.apache.openjpa.persistence.compat.EmbeddableSuper.setVersion(int),2,5
org.apache.openjpa.meta.ValueMetaData.getFieldMetaData(),5,9
org.apache.openjpa.meta.ValueMetaData.getType(),2,2
org.apache.openjpa.meta.ValueMetaData.setType(Class),3,4
org.apache.openjpa.meta.ValueMetaData.getTypeCode(),3,5
org.apache.openjpa.meta.ValueMetaData.setTypeCode(int),4,7
org.apache.openjpa.meta.ValueMetaData.isTypePC(),4,5
org.apache.openjpa.meta.ValueMetaData.getTypeMetaData(),6,9
org.apache.openjpa.meta.ValueMetaData.getDeclaredType(),7,12
org.apache.openjpa.meta.ValueMetaData.setDeclaredType(Class),4,7
org.apache.openjpa.meta.ValueMetaData.getDeclaredTypeCode(),8,16
org.apache.openjpa.meta.ValueMetaData.setDeclaredTypeCode(int),13,20
org.apache.openjpa.meta.ValueMetaData.isDeclaredTypePC(),5,6
org.apache.openjpa.meta.ValueMetaData.getDeclaredTypeMetaData(),7,10
org.apache.openjpa.meta.ValueMetaData.isEmbedded(),20,23
org.apache.openjpa.meta.ValueMetaData.setEmbedded(boolean),21,25
org.apache.openjpa.meta.ValueMetaData.isEmbeddedPC(),4,5
org.apache.openjpa.meta.ValueMetaData.getEmbeddedMetaData(),5,8
org.apache.openjpa.meta.ValueMetaData.addEmbeddedMetaData(),6,10
org.apache.openjpa.meta.ValueMetaData.addEmbeddedMetaData(int),8,13
org.apache.openjpa.meta.ValueMetaData.getCascadeDelete(),24,44
org.apache.openjpa.meta.ValueMetaData.setCascadeDelete(int),5,9
org.apache.openjpa.meta.ValueMetaData.getCascadePersist(),24,38
org.apache.openjpa.meta.ValueMetaData.setCascadePersist(int),5,10
org.apache.openjpa.meta.ValueMetaData.getCascadeAttach(),19,27
org.apache.openjpa.meta.ValueMetaData.setCascadeAttach(int),5,10
org.apache.openjpa.meta.ValueMetaData.getCascadeDetach(),19,27
org.apache.openjpa.meta.ValueMetaData.setCascadeDetach(int),5,10
org.apache.openjpa.meta.ValueMetaData.getCascadeRefresh(),20,33
org.apache.openjpa.meta.ValueMetaData.setCascadeRefresh(int),5,10
org.apache.openjpa.meta.ValueMetaData.isSerialized(),3,4
org.apache.openjpa.meta.ValueMetaData.setSerialized(boolean),4,6
org.apache.openjpa.meta.ValueMetaData.getValueMappedBy(),13,20
org.apache.openjpa.meta.ValueMetaData.setValueMappedBy(String),14,22
org.apache.openjpa.meta.ValueMetaData.getValueMappedByMetaData(),14,24
org.apache.openjpa.meta.ValueMetaData.getTypeOverride(),8,10
org.apache.openjpa.meta.ValueMetaData.setTypeOverride(Class),9,12
org.apache.openjpa.meta.ValueMetaData.getResolve(),3,4
org.apache.openjpa.meta.ValueMetaData.setResolve(int),4,6
"org.apache.openjpa.meta.ValueMetaData.setResolve(int,boolean)",4,6
org.apache.openjpa.meta.ValueMetaData.resolve(int),5,6
org.apache.openjpa.meta.ValueMetaData.copy(ValueMetaData),7,10
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.AnnoTest1(),2,2
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.AnnoTest1(long),2,2
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.AnnoTest1(Long),2,2
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setPk(Long),2,3
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getPk(),0,0
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getVersion(),1,2
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setBasic(int),2,3
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getBasic(),1,2
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setTransient(int),2,2
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getTransient(),1,1
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setOtherTableBasic(int),3,5
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getOtherTableBasic(),2,4
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setSelfOneOne(AnnoTest1),4,5
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getSelfOneOne(),3,4
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setPKJoinSelfOneOne(AnnoTest1),5,7
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getPKJoinSelfOneOne(),4,6
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setOneOne(AnnoTest2),3,3
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getOneOne(),2,2
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setOtherTableOneOne(AnnoTest2),4,5
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getOtherTableOneOne(),3,4
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setInverseOwnerOneOne(AnnoTest2),5,7
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getInverseOwnerOneOne(),4,6
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setBlob(byte[]),3,5
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getBlob(),1,2
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setSerialized(Object),4,4
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getSerialized(),3,3
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setClob(String),3,4
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getClob(),2,3
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getEnumeration(),3,4
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setEnumeration(InheritanceType),5,7
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getOrdinalEnumeration(),4,6
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setOrdinalEnumeration(InheritanceType),6,9
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getStringEnumeration(),4,6
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setStringEnumeration(InheritanceType),6,9
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getOneMany(),3,3
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getInverseOwnerOneMany(),5,7
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getManyMany(),3,3
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getInverseOwnerManyMany(),5,7
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getDefaultMapKey(),4,7
"org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setDefaultMapKey(Map<Integer,Flat1>)",5,12
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getNamedMapKey(),5,9
"org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setNamedMapKey(Map<Integer,Flat1>)",6,16
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.getInverseOwnerMapKey(),7,12
"org.apache.openjpa.persistence.jdbc.annotations.AnnoTest1.setInverseOwnerMapKey(Map<String,AnnoTest2>)",8,21
org.apache.openjpa.persistence.entitymanager.TestEntityManagerConfiguration.setUp(),3,4
org.apache.openjpa.persistence.entitymanager.TestEntityManagerConfiguration.testEMConfig001(),14,26
org.apache.openjpa.persistence.entitymanager.TestEntityManagerConfiguration.testEMConfig002(),18,35
org.apache.openjpa.persistence.entitymanager.TestEntityManagerConfiguration.testEMConfig003(),16,33
org.apache.openjpa.persistence.entitymanager.TestEntityManagerConfiguration.testEMConfig004(),18,35
org.apache.openjpa.persistence.entitymanager.TestEntityManagerConfiguration.testEMConfig005(),17,34
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC.getPk1(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC.setPk1(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC.getPk2(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC.setPk2(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC.getNonPK(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC.setNonPK(NonPKJoinPC),2,2
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC.getNonPK2(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC.setNonPK2(NonPKJoinPC),2,2
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC.getNonPKs(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC.setNonPKs(Collection),2,2
org.apache.openjpa.persistence.jdbc.annotations.TestTablePerClassInheritance.setUp(),6,9
org.apache.openjpa.persistence.jdbc.annotations.TestTablePerClassInheritance.testMapping(),28,102
org.apache.openjpa.persistence.jdbc.annotations.TestTablePerClassInheritance.testInsertAndRetrieve(),20,78
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleC.setStringC(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleC.getStringC(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleC.setIntC(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleC.getIntC(),0,0
org.apache.openjpa.persistence.detach.TestDetachReloadProp.setUp(),16,31
org.apache.openjpa.persistence.detach.TestDetachReloadProp.create(int),10,26
org.apache.openjpa.persistence.detach.TestDetachReloadProp.persist(),13,20
org.apache.openjpa.persistence.detach.TestDetachReloadProp.testReloadTrue(),6,8
org.apache.openjpa.persistence.detach.TestDetachReloadProp.testReloadFalse(),6,8
org.apache.openjpa.persistence.detach.TestDetachReloadProp.detachProcessing(),19,57
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalA.setStringA(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalA.getStringA(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalA.setIntA(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalA.getIntA(),0,0
org.apache.openjpa.persistence.flush.TestCascadingFlush.setUp(),16,22
org.apache.openjpa.persistence.flush.TestCascadingFlush.testCascadingFlushBasic(),25,35
org.apache.openjpa.persistence.flush.TestCascadingFlush.testCascadingFlushDetach(),35,54
org.apache.openjpa.persistence.flush.TestCascadingFlush.testCascadingFlushSerialize(),39,60
"org.apache.openjpa.persistence.flush.TestCascadingFlush.verifyCascadingFlush(EntityManager,Course)",35,91
org.apache.openjpa.persistence.flush.TestCascadingFlush.populate(EntityManager),9,14
org.apache.openjpa.persistence.flush.TestCascadingFlush.createNewCourse(),22,116
org.apache.openjpa.persistence.flush.TestCascadingFlush.addClassPeriod(Course),19,181
org.apache.openjpa.persistence.flush.TestCascadingFlush.beginTx(EntityManager),4,5
org.apache.openjpa.persistence.flush.TestCascadingFlush.commitTx(EntityManager),4,5
"org.apache.openjpa.persistence.flush.TestCascadingFlush.roundtrip(Object,boolean)",19,60
"org.apache.openjpa.persistence.jest.MetamodelHelper.getAttributesInOrder(Class<>,Metamodel)",8,11
"org.apache.openjpa.persistence.jest.MetamodelHelper.getAttributesInOrder(ClassMetaData,Metamodel)",9,13
org.apache.openjpa.persistence.jest.MetamodelHelper.getAttributesInOrder(ManagedType<>),11,25
org.apache.openjpa.persistence.jest.MetamodelHelper.isId(Attribute<>),2,5
org.apache.openjpa.persistence.jest.MetamodelHelper.isVersion(Attribute<>),3,7
org.apache.openjpa.persistence.jest.MetamodelHelper.isEnum(Attribute<>),7,9
org.apache.openjpa.persistence.jest.MetamodelHelper.isLob(Attribute<>),11,17
org.apache.openjpa.persistence.jest.MetamodelHelper.getAttributeCategory(Attribute<>),18,56
org.apache.openjpa.persistence.jest.MetamodelHelper.getTagByAttributeType(Attribute<>),11,14
org.apache.openjpa.persistence.jest.MetamodelHelper.getAttributeTypeName(Attribute<>),21,73
"org.apache.openjpa.persistence.jest.MetamodelHelper.AttributeComparator.compare(Attribute<>,Attribute<>)",5,16
org.apache.openjpa.persistence.event.TestTCPRemoteRecoveryTransmitAdds.TestTCPRemoteRecoveryTransmitAdds(String),8,8
org.apache.openjpa.persistence.event.TestTCPRemoteRecoveryTransmitAdds.setUp(),4,4
org.apache.openjpa.persistence.event.TestTCPRemoteRecoveryTransmitAdds.tearDownTestClass(),3,5
org.apache.openjpa.persistence.event.TestTCPRemoteRecoveryTransmitAdds.pause(double),6,10
org.apache.openjpa.persistence.event.TestTCPRemoteRecoveryTransmitAdds.testReceiverRecovers(),106,362
org.apache.openjpa.persistence.event.TestTCPRemoteRecoveryTransmitAdds.testSenderRecovers(),70,218
"org.apache.openjpa.persistence.event.TestTCPRemoteRecoveryTransmitAdds.performAddsModifiesDeletes(EntityManager,int)",34,70
"org.apache.openjpa.persistence.event.TestTCPRemoteRecoveryTransmitAdds.createDistinctFactory(Class,String)",28,79
org.apache.openjpa.persistence.event.TestTCPRemoteRecoveryTransmitAdds.RemoteCommitListenerTestImpl.afterCommit(RemoteCommitEvent),11,32
org.apache.openjpa.persistence.event.TestTCPRemoteRecoveryTransmitAdds.RemoteCommitListenerTestImpl.close(),1,1
org.apache.openjpa.persistence.event.TestTCPRemoteRecoveryTransmitAdds.RemoteCommitListenerTestImpl.toString(),8,14
"org.apache.openjpa.kernel.jpql.ParseException.ParseException(Token,int[][],String[])",31,64
org.apache.openjpa.kernel.jpql.ParseException.ParseException(),25,30
org.apache.openjpa.kernel.jpql.ParseException.ParseException(String),25,31
"org.apache.openjpa.kernel.jpql.ParseException.ParseException(String,Throwable)",5,6
"org.apache.openjpa.kernel.jpql.ParseException.initMessage(Token,int[][],String[])",48,128
org.apache.openjpa.kernel.jpql.ParseException.escape(String),16,51
"org.apache.openjpa.persistence.criteria.FetchPathImpl<Z,X>.FetchPathImpl(FetchParent<Z>,Members.Member<X>)",7,10
"org.apache.openjpa.persistence.criteria.FetchPathImpl<Z,X>.FetchPathImpl(FetchParent<Z>,Members.Member<X>,JoinType)",7,17
"org.apache.openjpa.persistence.criteria.FetchPathImpl<Z,X>.getJoinType()",2,6
"org.apache.openjpa.persistence.criteria.FetchPathImpl<Z,X>.getAttribute()",5,11
"org.apache.openjpa.persistence.criteria.FetchPathImpl<Z,X>.getParent()",2,6
"org.apache.openjpa.persistence.criteria.FetchPathImpl<Z,X>.fetch(SingularAttribute<Y>)",8,11
"org.apache.openjpa.persistence.criteria.FetchPathImpl<Z,X>.fetch(PluralAttribute<Y>)",8,11
"org.apache.openjpa.persistence.criteria.FetchPathImpl<Z,X>.fetch(String)",7,11
"org.apache.openjpa.persistence.criteria.FetchPathImpl<Z,X>.fetch(SingularAttribute<Y>,JoinType)",7,10
"org.apache.openjpa.persistence.criteria.FetchPathImpl<Z,X>.fetch(PluralAttribute<Y>,JoinType)",7,10
"org.apache.openjpa.persistence.criteria.FetchPathImpl<Z,X>.fetch(String,JoinType)",9,18
"org.apache.openjpa.persistence.criteria.FetchPathImpl<Z,X>.getFetches()",6,14
"org.apache.openjpa.persistence.criteria.FetchPathImpl<Z,X>.addFetch(Members.Member<Y>,JoinType)",9,19
"org.apache.openjpa.persistence.criteria.FetchPathImpl<Z,X>.asValue(AliasContext)",9,11
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecifiedDataCacheTrue.getEntityManagerFactory(),21,42
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecifiedDataCacheTrue.getListener(),4,10
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecifiedDataCacheTrue.getSql(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecifiedDataCacheTrue.testCacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecifiedDataCacheTrue.testUncacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecifiedDataCacheTrue.testUnspecified(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecifiedDataCacheTrue.getExpectedInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeUnspecifiedDataCacheTrue.getExpectedNotInCache(),2,4
org.apache.openjpa.persistence.identity.entityasidentity.AccountGroup.AccountGroup(),5,8
org.apache.openjpa.persistence.identity.entityasidentity.AccountGroup.getId(),1,1
org.apache.openjpa.persistence.identity.entityasidentity.AccountGroup.setId(Integer),2,2
org.apache.openjpa.persistence.identity.entityasidentity.AccountGroup.getAccountSet(),2,6
org.apache.openjpa.persistence.identity.entityasidentity.AccountGroup.setAccountSet(Set<Account>),2,11
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPCId.ByteArrayPKPCId(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPCId.ByteArrayPKPCId(String),4,6
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPCId.toString(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPCId.hashCode(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPCId.equals(Object),5,13
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPCId.toBytes(String),6,23
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPCId.toString(byte[]),5,11
"org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPCId.equals(byte[],byte[])",2,4
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPCId.hashCode(byte[]),4,6
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCLeafD2.getLeafD2Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCLeafD2.setLeafD2Data(String),4,10
org.apache.openjpa.persistence.jest.TestJEST.setUp(),47,100
org.apache.openjpa.persistence.jest.TestJEST.testBadURL(),9,13
org.apache.openjpa.persistence.jest.TestJEST.testDomain(),27,48
org.apache.openjpa.persistence.jest.TestJEST.getResponse(String),16,26
org.apache.openjpa.persistence.jest.TestJEST.uri(String),6,14
"org.apache.openjpa.persistence.jest.TestJEST.assertError(int,String)",18,45
"org.apache.openjpa.persistence.jest.TestJEST.getNodes(Document,String)",15,29
"org.apache.openjpa.persistence.jest.TestJEST.getNode(Document,String)",12,26
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLType.UMLType(),2,2
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLType.getOwnerPackage(),2,3
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLType.setOwnerPackage(UMLPackage),3,6
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.TestByteArrayAppId(String),7,11
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.skipTest(),4,6
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.setUp(),35,68
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.tearDown(),14,17
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.initialize(JDBCConfiguration),21,51
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.testGetObjectIdClass(),18,33
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.testGetSubclassObjectById(),27,53
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.testGetObjectById(),23,33
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.testGetObjectId(),29,71
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.testChangeIdentity(),25,35
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.testPKRetain(),38,61
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.testDeleteAndInsert(),36,112
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.testQuery(),25,53
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.testConflictingIds(),31,69
"org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.assertOwner(OpenJPAEntityManager,Object)",16,47
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.getParent(),10,20
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.getChild(),10,20
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.main(String[]),3,4
org.apache.openjpa.persistence.jdbc.kernel.TestByteArrayAppId.getProps(),11,21
org.apache.openjpa.jdbc.conf.JDBCSeqValue.JDBCSeqValue(String),8,14
org.apache.openjpa.persistence.generationtype.CustomSeq.setType(int),7,10
"org.apache.openjpa.persistence.generationtype.CustomSeq.next(StoreContext,ClassMetaData)",7,7
"org.apache.openjpa.persistence.generationtype.CustomSeq.current(StoreContext,ClassMetaData)",8,8
"org.apache.openjpa.persistence.generationtype.CustomSeq.allocate(int,StoreContext,ClassMetaData)",8,8
org.apache.openjpa.persistence.generationtype.CustomSeq.close(),1,1
org.apache.openjpa.util.DelayedArrayListProxy.DelayedArrayListProxy(),4,4
org.apache.openjpa.util.DelayedArrayListProxy.DelayedArrayListProxy(Collection),6,9
org.apache.openjpa.util.DelayedArrayListProxy.DelayedArrayListProxy(int),5,6
"org.apache.openjpa.util.DelayedArrayListProxy.setOwner(OpenJPAStateManager,int)",18,45
"org.apache.openjpa.util.DelayedArrayListProxy.detaching(OpenJPAStateManager,int)",5,19
org.apache.openjpa.util.DelayedArrayListProxy.getDelayedField(),3,7
org.apache.openjpa.util.DelayedArrayListProxy.getDelayedOwner(),5,6
org.apache.openjpa.util.DelayedArrayListProxy.getOwner(),3,3
org.apache.openjpa.util.DelayedArrayListProxy.getOwnerField(),2,3
org.apache.openjpa.util.DelayedArrayListProxy.clone(),10,19
org.apache.openjpa.util.DelayedArrayListProxy.getChangeTracker(),2,6
org.apache.openjpa.util.DelayedArrayListProxy.setChangeTracker(CollectionChangeTracker),4,8
org.apache.openjpa.util.DelayedArrayListProxy.copy(Object),8,13
org.apache.openjpa.util.DelayedArrayListProxy.getElementType(),2,4
org.apache.openjpa.util.DelayedArrayListProxy.setElementType(Class<>),4,9
"org.apache.openjpa.util.DelayedArrayListProxy.newInstance(Class,Comparator,boolean,boolean)",13,33
org.apache.openjpa.util.DelayedArrayListProxy.add(Object),8,24
"org.apache.openjpa.util.DelayedArrayListProxy.add(int,Object)",9,20
org.apache.openjpa.util.DelayedArrayListProxy.clear(),6,7
"org.apache.openjpa.util.DelayedArrayListProxy.addAll(int,Collection)",7,14
org.apache.openjpa.util.DelayedArrayListProxy.addAll(Collection),7,14
org.apache.openjpa.util.DelayedArrayListProxy.remove(Object),9,30
org.apache.openjpa.util.DelayedArrayListProxy.remove(int),10,25
"org.apache.openjpa.util.DelayedArrayListProxy.set(int,Object)",10,36
org.apache.openjpa.util.DelayedArrayListProxy.iterator(),8,17
org.apache.openjpa.util.DelayedArrayListProxy.listIterator(int),10,29
org.apache.openjpa.util.DelayedArrayListProxy.listIterator(),9,25
org.apache.openjpa.util.DelayedArrayListProxy.removeAll(Collection),7,14
org.apache.openjpa.util.DelayedArrayListProxy.retainAll(Collection),9,17
org.apache.openjpa.util.DelayedArrayListProxy.writeReplace(),8,12
org.apache.openjpa.util.DelayedArrayListProxy.isDelayLoad(),5,5
org.apache.openjpa.util.DelayedArrayListProxy.get(int),6,8
org.apache.openjpa.util.DelayedArrayListProxy.indexOf(Object),6,10
org.apache.openjpa.util.DelayedArrayListProxy.lastIndexOf(Object),6,10
"org.apache.openjpa.util.DelayedArrayListProxy.subList(int,int)",7,12
org.apache.openjpa.util.DelayedArrayListProxy.contains(Object),6,10
org.apache.openjpa.util.DelayedArrayListProxy.containsAll(Collection),6,10
org.apache.openjpa.util.DelayedArrayListProxy.isEmpty(),5,7
org.apache.openjpa.util.DelayedArrayListProxy.size(),5,7
org.apache.openjpa.util.DelayedArrayListProxy.toArray(),6,8
org.apache.openjpa.util.DelayedArrayListProxy.toArray(Object[]),6,11
org.apache.openjpa.util.DelayedArrayListProxy.equals(Object),7,12
org.apache.openjpa.util.DelayedArrayListProxy.hashCode(),6,9
org.apache.openjpa.util.DelayedArrayListProxy.isDirectAccess(),2,4
org.apache.openjpa.util.DelayedArrayListProxy.setDirectAccess(boolean),3,7
org.apache.openjpa.util.DelayedArrayListProxy.getBrokerFactory(),2,6
org.apache.openjpa.util.DelayedArrayListProxy.load(),4,5
org.apache.openjpa.util.DelayedArrayListProxy.getBroker(),3,12
org.apache.openjpa.util.DelayedArrayListProxy.closeBroker(),6,16
org.apache.openjpa.util.DelayedArrayListProxy.getOwnerStateManager(),3,5
org.apache.openjpa.util.DelayedArrayListProxy.isDetached(),1,2
org.apache.openjpa.jdbc.meta.strats.TestInputStreamLob.setUp(),7,8
"org.apache.openjpa.jdbc.meta.strats.TestInputStreamLob.newLobEntity(String,int)",9,27
"org.apache.openjpa.jdbc.meta.strats.TestInputStreamLob.newLobEntityForLoadContent(String,int)",10,25
org.apache.openjpa.jdbc.meta.strats.TestInputStreamLob.getLobEntityClass(),4,6
org.apache.openjpa.jdbc.meta.strats.TestInputStreamLob.getSelectQuery(),7,8
org.apache.openjpa.jdbc.meta.strats.TestInputStreamLob.getStreamContentAsString(Object),8,22
"org.apache.openjpa.jdbc.meta.strats.TestInputStreamLob.changeStream(LobEntity,String)",9,11
org.apache.openjpa.persistence.compat.FullTimeEmployee.getSalary(),1,2
org.apache.openjpa.persistence.compat.FullTimeEmployee.setSalary(double),2,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.setUp(),9,12
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.testQueryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.setCandidate(Query,Class)",14,37
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.queryQualifiedId(boolean),30,128
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.getSql(),3,4
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.getSqlCount(),2,4
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.createObj(EntityManagerFactory),15,27
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.createCompany(EntityManager,int)",14,23
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.createDivision(EntityManager,int)",8,13
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.createVicePresident(EntityManager,int)",7,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.findObj(EntityManagerFactory),11,24
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.assertCompany(Company),5,8
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.assertDivision(Division),3,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.assertVicePresident(VicePresident),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.queryObj(EntityManagerFactory),10,16
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.queryCompany(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.queryDivision(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.TestSpec10_1_29_Ex1.queryVicePresident(EntityManagerFactory),17,39
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC3.getPc3Field(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC3.setPc3Field(int),2,5
org.apache.openjpa.enhance.AttributeTranslator.pcAttributeIndexToFieldName(int),5,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.FullName.FullName(),1,1
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.FullName.FullName(String,String)",2,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.FullName.getFName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.FullName.setFName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.FullName.getLName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.FullName.setLName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.FullName.equals(Object),3,11
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.FullName.hashCode(),4,13
org.apache.openjpa.persistence.criteria.Order.getTotalCost(),2,4
org.apache.openjpa.persistence.criteria.Order.setTotalCost(double),3,9
org.apache.openjpa.persistence.criteria.Order.getCustomer(),1,3
org.apache.openjpa.persistence.criteria.Order.setCustomer(Customer),2,6
org.apache.openjpa.persistence.criteria.Order.getId(),0,0
org.apache.openjpa.persistence.criteria.Order.getLineItems(),4,7
org.apache.openjpa.persistence.criteria.Order.setLineitems(List<LineItem>),6,11
org.apache.openjpa.persistence.criteria.Order.getQuantity(),1,2
org.apache.openjpa.persistence.criteria.Order.setQuantity(int),2,5
org.apache.openjpa.persistence.criteria.Order.isDelivered(),1,2
org.apache.openjpa.persistence.criteria.Order.setDelivered(boolean),2,5
org.apache.openjpa.persistence.criteria.Order.getName(),2,3
org.apache.openjpa.persistence.criteria.Order.setName(String),3,6
org.apache.openjpa.persistence.criteria.Order.getOrderTs(),1,1
org.apache.openjpa.persistence.criteria.Order.setOrderTs(Timestamp),2,2
org.apache.openjpa.persistence.enhance.identity.Dependent4.getId(),0,0
org.apache.openjpa.persistence.enhance.identity.Dependent4.setId(long),1,1
org.apache.openjpa.persistence.enhance.identity.Dependent4.getParent(),2,3
org.apache.openjpa.persistence.enhance.identity.Dependent4.setParent(Employee4),3,6
org.apache.openjpa.persistence.jdbc.common.apps.JoinSubclassBase.getBaseField(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.JoinSubclassBase.setBaseField(int),3,9
org.apache.openjpa.persistence.jdbc.common.apps.JoinSubclassBase.compareTo(Object),6,9
org.apache.openjpa.persistence.jdbc.common.apps.RecursivelyEmbeddedPC.getEmbedded(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.RecursivelyEmbeddedPC.setEmbedded(EmbeddedPC),2,6
"org.apache.openjpa.kernel.ECleanState.initialize(StateManagerImpl,PCState)",7,8
org.apache.openjpa.kernel.ECleanState.commit(StateManagerImpl),4,4
org.apache.openjpa.kernel.ECleanState.commitRetain(StateManagerImpl),6,6
org.apache.openjpa.kernel.ECleanState.rollback(StateManagerImpl),4,4
org.apache.openjpa.kernel.ECleanState.rollbackRestore(StateManagerImpl),6,6
org.apache.openjpa.kernel.ECleanState.delete(StateManagerImpl),6,8
org.apache.openjpa.kernel.ECleanState.nontransactional(StateManagerImpl),5,5
org.apache.openjpa.kernel.ECleanState.release(StateManagerImpl),4,4
org.apache.openjpa.kernel.ECleanState.evict(StateManagerImpl),4,4
"org.apache.openjpa.kernel.ECleanState.beforeWrite(StateManagerImpl,int,boolean)",7,7
"org.apache.openjpa.kernel.ECleanState.beforeOptimisticWrite(StateManagerImpl,int,boolean)",8,8
org.apache.openjpa.kernel.ECleanState.isTransactional(),1,1
org.apache.openjpa.kernel.ECleanState.isPersistent(),1,1
org.apache.openjpa.kernel.ECleanState.toString(),3,4
org.apache.openjpa.event.PostDeleteListener.afterDeletePerformed(LifecycleEvent),18,27
org.apache.openjpa.persistence.fetchgroups.FGDepartment.FGDepartment(),1,1
"org.apache.openjpa.persistence.fetchgroups.FGDepartment.FGDepartment(int,String)",3,5
org.apache.openjpa.persistence.fetchgroups.FGDepartment.getId(),0,0
org.apache.openjpa.persistence.fetchgroups.FGDepartment.setId(int),1,1
org.apache.openjpa.persistence.fetchgroups.FGDepartment.getName(),2,3
org.apache.openjpa.persistence.fetchgroups.FGDepartment.setName(String),3,6
org.apache.openjpa.persistence.fetchgroups.FGDepartment.toString(),2,4
org.apache.openjpa.enhance.TestRelationToUnlistedClass.setUp(),5,6
org.apache.openjpa.enhance.TestRelationToUnlistedClass.testRelationToUnlistedClass(),18,18
"org.apache.openjpa.util.CollectionChangeTrackerImpl.CollectionChangeTrackerImpl(Collection,boolean,boolean,boolean)",14,29
org.apache.openjpa.util.CollectionChangeTrackerImpl.allowsDuplicates(),5,7
org.apache.openjpa.util.CollectionChangeTrackerImpl.isOrdered(),2,2
org.apache.openjpa.util.CollectionChangeTrackerImpl.added(Object),3,5
org.apache.openjpa.util.CollectionChangeTrackerImpl.removed(Object),3,5
org.apache.openjpa.util.CollectionChangeTrackerImpl.initialSequence(),4,6
org.apache.openjpa.util.CollectionChangeTrackerImpl.add(Object),18,36
org.apache.openjpa.util.CollectionChangeTrackerImpl.remove(Object),24,44
org.apache.openjpa.util.CollectionChangeTrackerImpl.change(Object),5,5
org.apache.openjpa.util.DelayedLinkedListProxy.DelayedLinkedListProxy(Collection),6,9
org.apache.openjpa.util.DelayedLinkedListProxy.DelayedLinkedListProxy(),4,4
"org.apache.openjpa.util.DelayedLinkedListProxy.setOwner(OpenJPAStateManager,int)",18,45
"org.apache.openjpa.util.DelayedLinkedListProxy.detaching(OpenJPAStateManager,int)",5,19
org.apache.openjpa.util.DelayedLinkedListProxy.getOwner(),3,3
org.apache.openjpa.util.DelayedLinkedListProxy.getOwnerField(),2,3
org.apache.openjpa.util.DelayedLinkedListProxy.getChangeTracker(),2,6
org.apache.openjpa.util.DelayedLinkedListProxy.setChangeTracker(CollectionChangeTracker),4,8
org.apache.openjpa.util.DelayedLinkedListProxy.copy(Object),6,10
org.apache.openjpa.util.DelayedLinkedListProxy.getElementType(),2,4
org.apache.openjpa.util.DelayedLinkedListProxy.setElementType(Class<>),4,9
"org.apache.openjpa.util.DelayedLinkedListProxy.newInstance(Class,Comparator,boolean,boolean)",14,34
org.apache.openjpa.util.DelayedLinkedListProxy.getDelayedField(),3,7
org.apache.openjpa.util.DelayedLinkedListProxy.getDelayedOwner(),5,6
org.apache.openjpa.util.DelayedLinkedListProxy.isDirectAccess(),2,4
org.apache.openjpa.util.DelayedLinkedListProxy.setDirectAccess(boolean),3,7
org.apache.openjpa.util.DelayedLinkedListProxy.getBrokerFactory(),2,6
org.apache.openjpa.util.DelayedLinkedListProxy.load(),4,5
org.apache.openjpa.util.DelayedLinkedListProxy.getBroker(),3,12
org.apache.openjpa.util.DelayedLinkedListProxy.closeBroker(),6,16
org.apache.openjpa.util.DelayedLinkedListProxy.getOwnerStateManager(),3,5
org.apache.openjpa.util.DelayedLinkedListProxy.isDetached(),1,2
org.apache.openjpa.util.DelayedLinkedListProxy.isDelayLoad(),5,5
org.apache.openjpa.util.DelayedLinkedListProxy.clone(),10,19
"org.apache.openjpa.util.DelayedLinkedListProxy.add(int,Object)",9,20
org.apache.openjpa.util.DelayedLinkedListProxy.add(Object),8,24
org.apache.openjpa.util.DelayedLinkedListProxy.clear(),6,7
org.apache.openjpa.util.DelayedLinkedListProxy.addAll(Collection),7,14
"org.apache.openjpa.util.DelayedLinkedListProxy.addAll(int,Collection)",9,20
org.apache.openjpa.util.DelayedLinkedListProxy.remove(Object),9,30
org.apache.openjpa.util.DelayedLinkedListProxy.remove(int),10,25
org.apache.openjpa.util.DelayedLinkedListProxy.remove(),16,27
"org.apache.openjpa.util.DelayedLinkedListProxy.set(int,Object)",10,36
org.apache.openjpa.util.DelayedLinkedListProxy.poll(),16,27
org.apache.openjpa.util.DelayedLinkedListProxy.listIterator(int),10,29
org.apache.openjpa.util.DelayedLinkedListProxy.addFirst(Object),9,20
org.apache.openjpa.util.DelayedLinkedListProxy.addLast(Object),9,25
org.apache.openjpa.util.DelayedLinkedListProxy.offer(Object),8,24
org.apache.openjpa.util.DelayedLinkedListProxy.removeFirst(),9,20
org.apache.openjpa.util.DelayedLinkedListProxy.removeLast(),9,20
org.apache.openjpa.util.DelayedLinkedListProxy.iterator(),8,17
org.apache.openjpa.util.DelayedLinkedListProxy.listIterator(),9,25
org.apache.openjpa.util.DelayedLinkedListProxy.removeAll(Collection),7,14
org.apache.openjpa.util.DelayedLinkedListProxy.retainAll(Collection),9,17
org.apache.openjpa.util.DelayedLinkedListProxy.removeFirstOccurrence(Object),10,20
org.apache.openjpa.util.DelayedLinkedListProxy.removeLastOccurrence(Object),10,20
org.apache.openjpa.util.DelayedLinkedListProxy.writeReplace(),8,12
org.apache.openjpa.util.DelayedLinkedListProxy.equals(Object),7,12
org.apache.openjpa.util.DelayedLinkedListProxy.hashCode(),6,9
"org.apache.openjpa.util.DelayedLinkedListProxy.subList(int,int)",7,14
org.apache.openjpa.util.DelayedLinkedListProxy.lastIndexOf(Object),6,8
org.apache.openjpa.util.DelayedLinkedListProxy.indexOf(Object),6,8
org.apache.openjpa.util.DelayedLinkedListProxy.get(int),6,8
org.apache.openjpa.util.DelayedLinkedListProxy.containsAll(Collection),6,8
org.apache.openjpa.util.DelayedLinkedListProxy.toArray(),6,8
org.apache.openjpa.util.DelayedLinkedListProxy.toArray(Object[]),6,11
org.apache.openjpa.util.DelayedLinkedListProxy.contains(Object),6,10
org.apache.openjpa.util.DelayedLinkedListProxy.isEmpty(),5,7
org.apache.openjpa.util.DelayedLinkedListProxy.size(),5,7
org.apache.openjpa.util.DelayedLinkedListProxy.offerFirst(Object),7,15
org.apache.openjpa.util.DelayedLinkedListProxy.offerLast(Object),7,15
org.apache.openjpa.util.DelayedLinkedListProxy.pollFirst(),6,8
org.apache.openjpa.util.DelayedLinkedListProxy.pollLast(),6,8
org.apache.openjpa.util.DelayedLinkedListProxy.getFirst(),5,6
org.apache.openjpa.util.DelayedLinkedListProxy.getLast(),5,6
org.apache.openjpa.util.DelayedLinkedListProxy.peekFirst(),6,8
org.apache.openjpa.util.DelayedLinkedListProxy.peekLast(),6,8
org.apache.openjpa.util.DelayedLinkedListProxy.element(),6,8
org.apache.openjpa.util.DelayedLinkedListProxy.peek(),6,8
org.apache.openjpa.util.DelayedLinkedListProxy.push(Object),6,8
org.apache.openjpa.util.DelayedLinkedListProxy.pop(),6,8
org.apache.openjpa.util.DelayedLinkedListProxy.descendingIterator(),9,20
org.apache.openjpa.persistence.jdbc.common.apps.NamedSQL.getNum(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.NamedSQL.setNum(int),2,3
org.apache.openjpa.persistence.jdbc.common.apps.NamedSQL.getNum2(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.NamedSQL.setNum2(int),2,3
org.apache.openjpa.enhance.UnenhancedSubtype.getRelated(),3,3
org.apache.openjpa.enhance.UnenhancedSubtype.setRelated(UnenhancedType),4,5
org.apache.openjpa.enhance.UnenhancedSubtype.setIntField(int),2,2
org.apache.openjpa.enhance.UnenhancedSubtype.getIntField(),1,1
org.apache.openjpa.persistence.fields.TestEnumSets.setUp(),3,5
org.apache.openjpa.persistence.fields.TestEnumSets.testExternalizedEnumSet(),19,34
org.apache.openjpa.persistence.jdbc.maps.qualified.path.PersonalInfo.getFirstName(),2,3
org.apache.openjpa.persistence.jdbc.maps.qualified.path.PersonalInfo.setFirstName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.qualified.path.PersonalInfo.getLastName(),2,3
org.apache.openjpa.persistence.jdbc.maps.qualified.path.PersonalInfo.setLastName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.qualified.path.PersonalInfo.getPhones(),3,4
org.apache.openjpa.persistence.jdbc.maps.qualified.path.PersonalInfo.setPhones(Set<Phone>),3,7
org.apache.openjpa.persistence.jdbc.maps.qualified.path.PersonalInfo.addPhone(Phone),3,7
org.apache.openjpa.persistence.callbacks.PostLoadListenerEntity.getId(),0,0
org.apache.openjpa.persistence.callbacks.PostLoadListenerEntity.setId(long),1,1
org.apache.openjpa.persistence.callbacks.PostLoadListenerEntity.getValue(),2,3
org.apache.openjpa.persistence.callbacks.PostLoadListenerEntity.setValue(String),3,6
org.apache.openjpa.persistence.callbacks.PostLoadListenerEntity.getValue2(),2,3
org.apache.openjpa.persistence.callbacks.PostLoadListenerEntity.setValue2(String),3,6
org.apache.openjpa.jdbc.kernel.TestInsertOrder.setUp(),8,26
org.apache.openjpa.jdbc.kernel.TestInsertOrder.testCascadePersist(),32,51
org.apache.openjpa.jdbc.kernel.TestInsertOrder.testCascadeMerge(),24,42
org.apache.openjpa.jdbc.kernel.TestInsertOrder.newTree(int),19,49
"org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.PreparedQueryImpl(String,Query)",10,17
"org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.PreparedQueryImpl(String,String,Query)",18,35
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.getIdentifier(),2,2
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.getLanguage(),7,7
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.getOriginalQuery(),5,9
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.getTargetQuery(),4,4
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setTargetQuery(String),5,7
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.isInitialized(),1,2
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.getQueryExpressions(),3,5
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.getProjectionTypes(),3,4
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setInto(Query),10,15
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.initialize(Object),50,151
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.extractSelectExecutor(Object),41,166
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.extractImplementation(SelectExecutor),10,32
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.isUsingExternalizedParameter(QueryExpressions),15,25
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.isPaginated(),7,15
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.isUsingFieldStrategy(),5,9
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.isUsingFieldStrategy(QueryExpressions),16,29
"org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.reparametrize(Map,Broker)",52,161
"org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setPersistenceCapableParameter(Map<Integer,Object>,Object,Integer[],Broker)",45,108
"org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setCollectionValuedParameter(Map<Integer,Object>,Collection,Integer[],Object,Broker)",28,55
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setUserParameterPositions(List),23,74
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.setParameters(List),12,22
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.getSelect(),2,4
org.apache.openjpa.jdbc.kernel.PreparedQueryImpl.toString(),5,8
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Department.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Department.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Department.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Department.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Department.equals(Object),4,8
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Department.hashCode(),4,11
org.apache.openjpa.persistence.common.apps.Department.Department(),1,1
org.apache.openjpa.persistence.common.apps.Department.Department(int),1,1
"org.apache.openjpa.persistence.common.apps.Department.Department(String,List<Student>,int)",6,10
org.apache.openjpa.persistence.common.apps.Department.getName(),2,3
org.apache.openjpa.persistence.common.apps.Department.setName(String),3,6
org.apache.openjpa.persistence.common.apps.Department.getSlist(),3,4
org.apache.openjpa.persistence.common.apps.Department.setSlist(List<Student>),4,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.Division.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.Division.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.Division.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.Division.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.Division.equals(Object),4,8
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.Division.hashCode(),4,11
org.apache.openjpa.persistence.inheritance.MappedSuperclassL2.getL2Data(),1,2
org.apache.openjpa.persistence.inheritance.MappedSuperclassL2.setL2Data(int),2,5
org.apache.openjpa.conf.BrokerValue.BrokerValue(),10,24
"org.apache.openjpa.conf.BrokerValue.newInstance(String,Class,Configuration,boolean)",15,24
org.apache.openjpa.conf.BrokerValue.getTemplateBrokerType(Configuration),6,11
"org.apache.openjpa.conf.BrokerValue.getTemplateBroker(String,Class,Configuration,boolean)",24,49
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest1.RuntimeTest1(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest1.RuntimeTest1(int),4,5
"org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest1.RuntimeTest1(String,int)",5,8
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest1.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest1.setIntField(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest1.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest1.setStringField(String),3,10
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest1.getSelfOneOne(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest1.setSelfOneOne(RuntimeTest1),4,7
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest1.getSelfOneMany(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest1.setSelfOneMany(Set),2,6
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest1.toString(),2,8
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest1.getLocaleField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest1.setLocaleField(Locale),3,10
org.apache.openjpa.lib.util.TestOptions.TestOptions(String),3,5
org.apache.openjpa.lib.util.TestOptions.setUp(),10,17
org.apache.openjpa.lib.util.TestOptions.testCmdLineParsing(),19,74
org.apache.openjpa.lib.util.TestOptions.testSetObject(),22,92
org.apache.openjpa.lib.util.TestOptions.suite(),3,6
org.apache.openjpa.lib.util.TestOptions.main(String[]),7,7
org.apache.openjpa.lib.util.TestOptions.Inner.Inner(),1,1
org.apache.openjpa.lib.util.TestOptions.Inner.getInt(),0,0
org.apache.openjpa.lib.util.TestOptions.Inner.setInt(int),1,1
org.apache.openjpa.lib.util.TestOptions.Inner.getBoolean(),0,0
org.apache.openjpa.lib.util.TestOptions.Inner.setBoolean(boolean),1,1
org.apache.openjpa.lib.util.TestOptions.Inner.getString(),1,3
org.apache.openjpa.lib.util.TestOptions.Inner.setString(String),2,4
org.apache.openjpa.lib.util.TestOptions.Inner.getDefault(),1,1
org.apache.openjpa.lib.util.TestOptions.Inner.setDefault(String),2,2
org.apache.openjpa.lib.util.TestOptions.Inner.getRange1(),1,2
"org.apache.openjpa.lib.util.TestOptions.Inner.setRange1(int,int)",4,8
org.apache.openjpa.lib.util.TestOptions.Inner.getRange2(),1,2
"org.apache.openjpa.lib.util.TestOptions.Inner.setRange2(int,int)",4,8
"org.apache.openjpa.lib.util.TestOptions.Inner.setMixed(String,int)",3,4
org.apache.openjpa.lib.util.TestOptions.Inner.getInner(),1,6
org.apache.openjpa.lib.util.TestOptions.Inner.setInner(Inner),2,4
org.apache.openjpa.lib.util.TestOptions.Inner.getNullInner(),1,3
org.apache.openjpa.lib.util.TestOptions.Inner.setNullInner(Inner),2,4
org.apache.openjpa.conf.RemoteCommitProviderValue.RemoteCommitProviderValue(),6,10
org.apache.openjpa.conf.RemoteCommitProviderValue.setProperties(String),8,11
org.apache.openjpa.conf.RemoteCommitProviderValue.setString(String),7,11
org.apache.openjpa.conf.RemoteCommitProviderValue.getProvider(),4,9
org.apache.openjpa.conf.RemoteCommitProviderValue.setProvider(RemoteCommitProvider),5,10
org.apache.openjpa.conf.RemoteCommitProviderValue.getTransmitPersistedObjectIds(),9,15
org.apache.openjpa.conf.RemoteCommitProviderValue.setTransmitPersistedObjectIds(boolean),8,12
org.apache.openjpa.conf.RemoteCommitProviderValue.instantiateProvider(Configuration),6,12
"org.apache.openjpa.conf.RemoteCommitProviderValue.instantiateProvider(Configuration,boolean)",7,19
org.apache.openjpa.conf.RemoteCommitProviderValue.configureEventManager(RemoteCommitEventManager),15,27
"org.apache.openjpa.conf.RemoteCommitProviderValue.instantiate(Class,Configuration,boolean)",19,29
org.apache.openjpa.conf.RemoteCommitProviderValue.parseOptions(),16,30
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_RelKey_FK.getId(),0,0
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_RelKey_FK.getName(),2,3
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_RelKey_FK.setName(String),3,6
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_RelKey_FK.getEntityCs(),4,8
"org.apache.openjpa.persistence.compat.Uni_1ToM_Map_RelKey_FK.setEntityCs(Map<EntityC,EntityC_U1M_Map_RelKey_FK>)",5,11
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_RelKey_FK.hashCode(),3,5
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_RelKey_FK.equals(Object),13,57
"org.apache.openjpa.persistence.compat.Uni_1ToM_Map_RelKey_FK.getValue(Map,Object)",9,23
org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.getJavaType(),11,12
org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.getJavaType(int),18,23
org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.nextVersion(Object),3,6
"org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.compare(Object,Object)",16,29
"org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.compare(Object[],Object[])",20,42
org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.map(boolean),42,182
"org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.insert(OpenJPAStateManager,JDBCStore,RowManager)",21,50
"org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.update(OpenJPAStateManager,JDBCStore,RowManager)",33,93
"org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.delete(OpenJPAStateManager,JDBCStore,RowManager)",30,66
"org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.select(Select,ClassMapping)",5,9
"org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.load(OpenJPAStateManager,JDBCStore,Result)",10,14
"org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.load(OpenJPAStateManager,JDBCStore,Result,Joins)",30,47
"org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.checkVersion(OpenJPAStateManager,JDBCStore,boolean)",43,104
"org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.compareVersion(Object,Object)",7,24
"org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.populateFromResult(Result,Joins)",20,44
"org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.getColumnValue(Object,int)",5,8
"org.apache.openjpa.jdbc.meta.strats.ColumnVersionStrategy.isSecondaryColumn(Column,OpenJPAStateManager)",10,20
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapItem.SQLMapItem(),3,3
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapItem.SQLMapItem(int),3,3
"org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapItem.SQLMapItem(int,String)",5,7
"org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapItem.SQLMapItem(int,String,int)",6,10
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapItem.toString(),6,8
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapItem.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapItem.setId(int),3,4
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapItem.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapItem.setName(String),5,11
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapItem.getPrice(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapItem.setPrice(float),2,5
org.apache.openjpa.persistence.compat.EntityC_U1MFK.getId(),0,0
org.apache.openjpa.persistence.compat.EntityC_U1MFK.getName(),2,3
org.apache.openjpa.persistence.compat.EntityC_U1MFK.setName(String),3,6
org.apache.openjpa.persistence.inheritance.entities.idmsc.PrimitiveIDMappedSuperclass.getId(),0,0
org.apache.openjpa.persistence.inheritance.entities.idmsc.PrimitiveIDMappedSuperclass.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entities.idmsc.PrimitiveIDMappedSuperclass.fetchId(),3,3
org.apache.openjpa.persistence.inheritance.entities.idmsc.PrimitiveIDMappedSuperclass.updateId(Object),6,8
"org.apache.openjpa.util.StoreFacadeTypeRegistry.registerImplementation(Class,Class,Class)",19,49
"org.apache.openjpa.util.StoreFacadeTypeRegistry.getImplementation(Class,Class)",23,63
"org.apache.openjpa.util.StoreFacadeTypeRegistry.getImplementation(Class,Class,Class)",25,65
"org.apache.openjpa.util.StoreFacadeTypeRegistry.Key.Key(Class,Class)",4,13
org.apache.openjpa.util.StoreFacadeTypeRegistry.Key.hashCode(),5,10
org.apache.openjpa.util.StoreFacadeTypeRegistry.Key.equals(Object),6,12
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.setUp(),9,12
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.testQueryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.setCandidate(Query,Class)",14,37
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.queryQualifiedId(boolean),24,87
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.createObj(EntityManagerFactory),15,27
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.createCompany(EntityManager,int)",14,25
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.createDivision(EntityManager,int)",6,10
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.createVicePresident(EntityManager,int)",7,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.findObj(EntityManagerFactory),13,35
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.updateObj(EntityManager,Company)",28,77
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.deleteObj(EntityManager,Company)",10,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.assertCompany(Company),5,8
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.assertDivision(Division),3,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.assertVicePresident(VicePresident),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.queryObj(EntityManagerFactory),10,16
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.queryCompany(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.queryDivision(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.TestSpec10_1_27_Ex3.queryVicePresident(EntityManagerFactory),17,39
org.apache.openjpa.persistence.conf.TestSwitchConnection.init(String),20,34
org.apache.openjpa.persistence.conf.TestSwitchConnection.setUp(),37,58
org.apache.openjpa.persistence.conf.TestSwitchConnection.getEmf(String),6,8
"org.apache.openjpa.persistence.conf.TestSwitchConnection.getEmf(boolean,String)",31,66
"org.apache.openjpa.persistence.conf.TestSwitchConnection.getEm(EntityManagerFactory,String,String)",12,26
org.apache.openjpa.persistence.conf.TestSwitchConnection.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.conf.TestSwitchConnection.testConnectionFactoryName(),18,21
org.apache.openjpa.persistence.conf.TestSwitchConnection.testJtaDataSource(),14,22
"org.apache.openjpa.persistence.conf.TestSwitchConnection.overridePropertyOnEM(String,String)",36,114
org.apache.openjpa.persistence.conf.TestSwitchConnection.testInvalidCfName(),30,62
org.apache.openjpa.persistence.conf.TestSwitchConnection.testDataCache(),24,45
org.apache.openjpa.persistence.conf.TestSwitchConnection.testQueryCache(),24,47
org.apache.openjpa.persistence.conf.TestSwitchConnection.testSyncMappings(),27,51
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess2.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess2.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess2.setVersion(int),2,5
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess2.getVersion(),1,2
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess2.setStringField(String),5,8
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess2.getStringField(),3,5
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess2.equals(Object),10,28
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess2.setStrField(String),4,10
org.apache.openjpa.persistence.access.xml.XMLDefFieldMixedPropAccess2.getStrField(),3,5
"org.apache.openjpa.persistence.query.OrPredicate.OrPredicate(Predicate,Predicate)",1,3
org.apache.openjpa.lib.meta.URLMetaDataIterator.URLMetaDataIterator(URL),7,12
org.apache.openjpa.lib.meta.URLMetaDataIterator.hasNext(),2,2
org.apache.openjpa.lib.meta.URLMetaDataIterator.next(),4,6
org.apache.openjpa.lib.meta.URLMetaDataIterator.getInputStream(),13,24
org.apache.openjpa.lib.meta.URLMetaDataIterator.getFile(),16,24
org.apache.openjpa.lib.meta.URLMetaDataIterator.close(),1,1
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCRootEntity.getRootEntityData(),4,7
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCRootEntity.setRootEntityData(String),5,14
"org.apache.openjpa.util.ImplHelper.$1.eq(Object,Object)",10,12
org.apache.openjpa.util.ImplHelper.$1.hc(Object),12,16
"org.apache.openjpa.util.ImplHelper.loadAll(Collection,StoreManager,PCState,int,FetchConfiguration,Object)",34,85
"org.apache.openjpa.util.ImplHelper.addFailedId(OpenJPAStateManager,Collection)",9,18
"org.apache.openjpa.util.ImplHelper.generateIdentityValue(StoreContext,ClassMetaData,int)",22,40
"org.apache.openjpa.util.ImplHelper.generateFieldValue(StoreContext,FieldMetaData)",25,45
"org.apache.openjpa.util.ImplHelper.generateValue(StoreContext,ClassMetaData,FieldMetaData,int)",27,98
org.apache.openjpa.util.ImplHelper.getUpdateFields(OpenJPAStateManager),17,39
org.apache.openjpa.util.ImplHelper.close(Object),14,22
"org.apache.openjpa.util.ImplHelper.isManagedType(OpenJPAConfiguration,Class)",21,34
org.apache.openjpa.util.ImplHelper.isManageable(Object),14,22
"org.apache.openjpa.util.ImplHelper.isAssignable(Class,Class)",30,63
"org.apache.openjpa.util.ImplHelper.toPersistenceCapable(Object,Object)",29,79
org.apache.openjpa.util.ImplHelper.registerPersistenceCapable(ReflectingPersistenceCapable),8,11
org.apache.openjpa.util.ImplHelper.getManagedInstance(Object),8,17
org.apache.openjpa.persistence.annotations.TestOneToMany.TestOneToMany(String),4,5
org.apache.openjpa.persistence.annotations.TestOneToMany.setUp(),4,7
org.apache.openjpa.persistence.annotations.TestOneToMany.testOneToMany(),18,48
org.apache.openjpa.persistence.annotations.TestOneToMany.testInverseOwnerOneToMany(),21,66
org.apache.openjpa.persistence.embed.EntityB1.getId(),0,0
org.apache.openjpa.persistence.embed.EntityB1.setId(int),1,1
org.apache.openjpa.persistence.embed.EntityB1.getName(),2,3
org.apache.openjpa.persistence.embed.EntityB1.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityB1.getEntityA(),3,5
org.apache.openjpa.persistence.embed.EntityB1.setEntityA(EntityA_Embed_MappedToOne),4,8
org.apache.openjpa.persistence.access.SuperFieldEntity.setId(int),1,1
org.apache.openjpa.persistence.access.SuperFieldEntity.getId(),0,0
org.apache.openjpa.persistence.access.SuperFieldEntity.setName(String),3,6
org.apache.openjpa.persistence.access.SuperFieldEntity.getName(),2,3
org.apache.openjpa.persistence.access.SuperFieldEntity.equals(Object),7,17
org.apache.openjpa.persistence.embed.JobInfo.setJobDescription(String),4,10
org.apache.openjpa.persistence.embed.JobInfo.getJobDescription(),3,5
org.apache.openjpa.persistence.embed.JobInfo.setProgramManager(ProgramManager),3,5
org.apache.openjpa.persistence.embed.JobInfo.getProgramManager(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatA.setStringA(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatA.getStringA(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatA.setIntA(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatA.getIntA(),0,0
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCEntityD.getEntityDData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCEntityD.setEntityDData(String),4,10
org.apache.openjpa.persistence.inheritance.entity.SubclassA.setClassAName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.SubclassA.getClassAName(),2,3
org.apache.openjpa.persistence.inheritance.entity.SubclassA.toString(),2,5
"org.apache.openjpa.kernel.exps.Lit.Lit(Object,int)",8,12
org.apache.openjpa.kernel.exps.Lit.getValue(),3,3
org.apache.openjpa.kernel.exps.Lit.setValue(Object),4,6
org.apache.openjpa.kernel.exps.Lit.getParseType(),3,3
org.apache.openjpa.kernel.exps.Lit.getValue(Object[]),4,5
org.apache.openjpa.kernel.exps.Lit.getType(),3,4
org.apache.openjpa.kernel.exps.Lit.setImplicitType(Class),6,9
"org.apache.openjpa.kernel.exps.Lit.eval(Object,Object,StoreContext,Object[])",9,12
org.apache.openjpa.lib.xml.TestDocTypeReader.TestDocTypeReader(String),5,7
org.apache.openjpa.lib.xml.TestDocTypeReader.setUp(),27,228
org.apache.openjpa.lib.xml.TestDocTypeReader.testIncludesDocType(),14,85
org.apache.openjpa.lib.xml.TestDocTypeReader.testStreamWithDocType(),12,53
"org.apache.openjpa.lib.xml.TestDocTypeReader.getIncludedString(String,String,int)",19,76
org.apache.openjpa.lib.xml.TestDocTypeReader.testValidation(),25,94
org.apache.openjpa.lib.xml.TestDocTypeReader.suite(),5,8
org.apache.openjpa.lib.xml.TestDocTypeReader.main(String[]),7,7
org.apache.openjpa.lib.xml.TestDocTypeReader.Handler.error(SAXParseException),5,8
org.apache.openjpa.lib.xml.TestDocTypeReader.Handler.fatalError(SAXParseException),6,9
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee1.getEmpId(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee1.setEmpId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee1.getDepartment(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee1.setDepartment(Department1),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizN.setStringN(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizN.getStringN(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizN.setIntN(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizN.getIntN(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.MultiC.setCString0(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.MultiC.getCString0(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.MultiC.setMultiAs(Set),3,6
org.apache.openjpa.persistence.jdbc.common.apps.MultiC.getMultiAs(),2,3
org.apache.openjpa.persistence.access.FieldAccess.setId(int),1,1
org.apache.openjpa.persistence.access.FieldAccess.getId(),0,0
org.apache.openjpa.persistence.access.FieldAccess.setVersion(int),2,5
org.apache.openjpa.persistence.access.FieldAccess.getVersion(),1,2
org.apache.openjpa.persistence.access.FieldAccess.setStringField(String),5,9
org.apache.openjpa.persistence.access.FieldAccess.getStringField(),3,5
org.apache.openjpa.persistence.access.FieldAccess.equals(Object),7,16
org.apache.openjpa.persistence.access.FieldAccess.setStrField(String),4,10
org.apache.openjpa.persistence.access.FieldAccess.getStrField(),3,5
"org.apache.openjpa.kernel.PNewProvisionalState.initialize(StateManagerImpl,PCState)",10,14
org.apache.openjpa.kernel.PNewProvisionalState.persist(StateManagerImpl),5,5
"org.apache.openjpa.kernel.PNewProvisionalState.nonprovisional(StateManagerImpl,boolean,OpCallbacks)",10,13
org.apache.openjpa.kernel.PNewProvisionalState.commit(StateManagerImpl),4,4
org.apache.openjpa.kernel.PNewProvisionalState.commitRetain(StateManagerImpl),5,5
org.apache.openjpa.kernel.PNewProvisionalState.rollback(StateManagerImpl),4,4
org.apache.openjpa.kernel.PNewProvisionalState.rollbackRestore(StateManagerImpl),6,8
org.apache.openjpa.kernel.PNewProvisionalState.delete(StateManagerImpl),5,7
org.apache.openjpa.kernel.PNewProvisionalState.release(StateManagerImpl),4,4
org.apache.openjpa.kernel.PNewProvisionalState.isTransactional(),1,1
org.apache.openjpa.kernel.PNewProvisionalState.isPersistent(),1,1
org.apache.openjpa.kernel.PNewProvisionalState.isNew(),0,0
org.apache.openjpa.kernel.PNewProvisionalState.isDirty(),1,1
org.apache.openjpa.kernel.PNewProvisionalState.isProvisional(),1,1
org.apache.openjpa.kernel.PNewProvisionalState.toString(),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdEntity.getId(),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdEntity.setId(EmbeddedIdClass),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdEntity.getValue(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdEntity.setValue(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdEntity.getRelation(),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdEntity.setRelation(EmbeddedIdEntity),4,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdEntity.getMappingOverrideRelation(),6,8
"org.apache.openjpa.jdbc.kernel.exps.DatastoreFunction.DatastoreFunction(String,Class<>,Arguments)",11,18
org.apache.openjpa.jdbc.kernel.exps.DatastoreFunction.getOperator(),4,4
"org.apache.openjpa.jdbc.kernel.exps.DatastoreFunction.appendTo(Select,ExpContext,ExpState,SQLBuffer,int)",20,43
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.EntityWithCompositeId.EntityWithCompositeId(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.EntityWithCompositeId.getId(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.EntityWithCompositeId.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.EntityWithCompositeId.getValue(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.EntityWithCompositeId.setId(Integer),2,2
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.EntityWithCompositeId.setName(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.EntityWithCompositeId.setValue(String),3,6
org.apache.openjpa.persistence.inheritance.entity.ImplClassA.setImplClassAName(String),4,10
org.apache.openjpa.persistence.inheritance.entity.ImplClassA.getImplClassAName(),3,5
org.apache.openjpa.persistence.inheritance.entity.ImplClassA.toString(),5,11
org.apache.openjpa.persistence.inheritance.entity.ImplClassA.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.ImplClassA.getIntFieldSup(),2,4
org.apache.openjpa.persistence.inheritance.entity.ImplClassA.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entity.ImplClassA.setIntFieldSup(int),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCRootEntity.getRootEntityData(),4,7
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCRootEntity.setRootEntityData(String),5,14
org.apache.openjpa.persistence.inheritance.entity.XMLSuperCallback.superPostPersist(),3,5
org.apache.openjpa.persistence.inheritance.entity.XMLSuperCallback.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entity.XMLSuperCallback.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.XMLSuperCallback.setName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.XMLSuperCallback.getName(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.Address.getId(),0,0
org.apache.openjpa.persistence.embed.attrOverrides.Address.setId(int),1,1
org.apache.openjpa.persistence.embed.attrOverrides.Address.getStreet(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.Address.setStreet(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.Address.getCity(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.Address.setCity(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.Address.getState(),1,1
org.apache.openjpa.persistence.embed.attrOverrides.Address.setState(String),2,2
org.apache.openjpa.persistence.embed.attrOverrides.Address.getZipcode(),1,3
org.apache.openjpa.persistence.embed.attrOverrides.Address.setZipcode(Zipcode),2,6
org.apache.openjpa.persistence.embed.attrOverrides.Address.equals(Object),6,16
org.apache.openjpa.persistence.embed.attrOverrides.Address.hashCode(),6,24
org.apache.openjpa.persistence.jdbc.common.apps.RawField.setString(String),3,4
org.apache.openjpa.persistence.jdbc.common.apps.RawField.getString(),2,3
"org.apache.openjpa.persistence.jdbc.common.apps.RawField.RawMapping.toDataStoreValue(ValueMapping,Object,JDBCStore)",9,14
org.apache.openjpa.persistence.embed.lazy.Recliner.setId(ReclinerId),2,2
org.apache.openjpa.persistence.embed.lazy.Recliner.getId(),1,1
org.apache.openjpa.persistence.embed.lazy.Recliner.setStyle(Style),2,6
org.apache.openjpa.persistence.embed.lazy.Recliner.getStyle(),1,3
org.apache.openjpa.persistence.embed.lazy.Recliner.setGuy(Guy),2,6
org.apache.openjpa.persistence.embed.lazy.Recliner.getGuy(),1,3
org.apache.openjpa.persistence.embed.lazy.Recliner.setHolder(BeverageHolder),3,7
org.apache.openjpa.persistence.embed.lazy.Recliner.getHolder(),2,4
org.apache.openjpa.persistence.EntityManagerFactoryImpl.EntityManagerFactoryImpl(),8,8
org.apache.openjpa.persistence.EntityManagerFactoryImpl.EntityManagerFactoryImpl(BrokerFactory),9,14
org.apache.openjpa.persistence.EntityManagerFactoryImpl.getBrokerFactory(),3,7
org.apache.openjpa.persistence.EntityManagerFactoryImpl.setBrokerFactory(BrokerFactory),9,16
org.apache.openjpa.persistence.EntityManagerFactoryImpl.getConfiguration(),3,5
org.apache.openjpa.persistence.EntityManagerFactoryImpl.getProperties(),13,20
"org.apache.openjpa.persistence.EntityManagerFactoryImpl.putUserObject(Object,Object)",5,12
org.apache.openjpa.persistence.EntityManagerFactoryImpl.getUserObject(Object),4,9
org.apache.openjpa.persistence.EntityManagerFactoryImpl.getStoreCache(),13,27
org.apache.openjpa.persistence.EntityManagerFactoryImpl.getStoreCache(String),10,20
org.apache.openjpa.persistence.EntityManagerFactoryImpl.getQueryResultCache(),12,29
org.apache.openjpa.persistence.EntityManagerFactoryImpl.createEntityManager(),5,10
org.apache.openjpa.persistence.EntityManagerFactoryImpl.createEntityManager(Map),81,319
org.apache.openjpa.persistence.EntityManagerFactoryImpl.newEntityManagerImpl(Broker),5,16
"org.apache.openjpa.persistence.EntityManagerFactoryImpl.addLifecycleListener(Object,Class)",6,12
org.apache.openjpa.persistence.EntityManagerFactoryImpl.removeLifecycleListener(Object),5,10
org.apache.openjpa.persistence.EntityManagerFactoryImpl.addTransactionListener(Object),5,10
org.apache.openjpa.persistence.EntityManagerFactoryImpl.removeTransactionListener(Object),5,10
org.apache.openjpa.persistence.EntityManagerFactoryImpl.close(),9,19
org.apache.openjpa.persistence.EntityManagerFactoryImpl.isOpen(),2,2
org.apache.openjpa.persistence.EntityManagerFactoryImpl.hashCode(),3,6
org.apache.openjpa.persistence.EntityManagerFactoryImpl.equals(Object),6,10
"org.apache.openjpa.persistence.EntityManagerFactoryImpl.toFetchPlan(Broker,FetchConfiguration)",28,80
org.apache.openjpa.persistence.EntityManagerFactoryImpl.getCache(),3,5
org.apache.openjpa.persistence.EntityManagerFactoryImpl.getCriteriaBuilder(),8,12
org.apache.openjpa.persistence.EntityManagerFactoryImpl.getDynamicQueryBuilder(),5,9
org.apache.openjpa.persistence.EntityManagerFactoryImpl.getSupportedProperties(),5,7
org.apache.openjpa.persistence.EntityManagerFactoryImpl.getMetamodel(),8,16
org.apache.openjpa.persistence.EntityManagerFactoryImpl.getPersistenceUnitUtil(),3,6
org.apache.openjpa.persistence.EntityManagerFactoryImpl.getIdentifier(Object),10,16
org.apache.openjpa.persistence.EntityManagerFactoryImpl.isLoaded(Object),3,5
"org.apache.openjpa.persistence.EntityManagerFactoryImpl.isLoaded(Object,String)",10,19
"org.apache.openjpa.persistence.EntityManagerFactoryImpl.validateCfNameProps(OpenJPAConfiguration,String,String)",26,79
org.apache.openjpa.persistence.jdbc.TestIsolationLevelOverride.setUp(),8,10
org.apache.openjpa.persistence.jdbc.TestIsolationLevelOverride.testIsolationOverrideViaFetchPlan(),7,10
org.apache.openjpa.persistence.jdbc.TestIsolationLevelOverride.testIsolationOverrideViaHint(),6,9
org.apache.openjpa.persistence.jdbc.TestIsolationLevelOverride.testIsolationOverrideViaStringHint(),7,10
"org.apache.openjpa.persistence.jdbc.TestIsolationLevelOverride.testIsolationLevelOverride(boolean,boolean)",65,219
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule.Schedule(),1,1
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule.Schedule(String,Calendar,Date,Date)",9,18
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule.getDob(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule.setDob(Calendar),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule.getStartDate(),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule.setStartDate(Date),3,10
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule.getEndDate(),1,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule.setEndDate(Date),2,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule.getId(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule.getName(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule.setName(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule.toString(),5,7
org.apache.openjpa.persistence.criteria.IdTestClass.hashCode(),6,17
org.apache.openjpa.persistence.criteria.IdTestClass.equals(Object),6,16
org.apache.openjpa.persistence.criteria.Item.getId(),0,0
org.apache.openjpa.persistence.criteria.Item.getPhotos(),4,5
"org.apache.openjpa.persistence.criteria.Item.addPhoto(String,Photo)",5,9
org.apache.openjpa.persistence.criteria.Item.removePhoto(String),5,7
org.apache.openjpa.persistence.criteria.Item.getPhoto(String),4,6
org.apache.openjpa.persistence.criteria.Item.getName(),2,3
org.apache.openjpa.persistence.criteria.Item.setName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.Admin.addRegularUser(RegularUser),5,10
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.setUp(),10,13
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.setCandidate(Query,Class)",15,37
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.queryQualifiedId(boolean),38,213
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.testQueryObject(),5,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.createObj(EntityManagerFactory),16,27
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.createDepartment(EntityManager,int)",12,21
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.createEmployee(EntityManager,int)",7,17
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.findObj(EntityManagerFactory),11,22
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.updateObj(EntityManager,Department)",22,43
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.deleteObj(EntityManager,Department)",10,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.assertDepartment(Department),14,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.queryObj(EntityManagerFactory),8,12
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.queryDepartment(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.queryEmployee(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.TestSpec10_1_26_Ex3.assertEmployee(Employee),3,6
org.apache.openjpa.lib.conf.test.TestPluginValue.TestPluginValue(String),4,6
org.apache.openjpa.lib.conf.test.TestPluginValue.testDefault(),6,23
org.apache.openjpa.lib.conf.test.TestPluginValue.defaultTest(Value),10,58
org.apache.openjpa.lib.conf.test.TestPluginValue.pluginDefaultTest(PluginValue),11,35
org.apache.openjpa.lib.conf.test.TestPluginValue.testAlias(),8,59
org.apache.openjpa.lib.conf.test.TestPluginValue.aliasTest(Value),12,57
org.apache.openjpa.lib.conf.test.TestPluginValue.emptyAliasTest(Value),10,25
org.apache.openjpa.lib.conf.test.TestPluginValue.pluginAliasTest(Value),14,33
org.apache.openjpa.lib.conf.test.TestPluginValue.pluginListAliasTest(Value),20,59
org.apache.openjpa.lib.conf.test.TestPluginValue.testPluginListParsing(),17,112
org.apache.openjpa.lib.conf.test.TestPluginValue.getTestKey(),7,9
org.apache.openjpa.lib.conf.test.TestPluginValue.setTestKey(String),8,11
org.apache.openjpa.lib.conf.test.TestPluginValue.main(String[]),3,4
org.apache.openjpa.persistence.datacache.common.apps.AttachF.setFstr(String),3,6
org.apache.openjpa.persistence.datacache.common.apps.AttachF.getFstr(),2,3
org.apache.openjpa.persistence.datacache.common.apps.AttachF.setFint(int),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachF.getFint(),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachF.setFdbl(double),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachF.getFdbl(),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachF.setE(AttachE),2,2
org.apache.openjpa.persistence.datacache.common.apps.AttachF.getE(),1,1
org.apache.openjpa.persistence.datacache.common.apps.AttachF.setStrings(List),3,6
org.apache.openjpa.persistence.datacache.common.apps.AttachF.getStrings(),2,3
org.apache.openjpa.persistence.datacache.common.apps.AttachF.ID.ID(),0,0
org.apache.openjpa.persistence.datacache.common.apps.AttachF.ID.ID(String),7,14
org.apache.openjpa.persistence.datacache.common.apps.AttachF.ID.hashCode(),2,4
org.apache.openjpa.persistence.datacache.common.apps.AttachF.ID.toString(),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachF.ID.equals(Object),2,3
org.apache.openjpa.persistence.datacache.common.apps.AttachF.setId1(int),1,1
org.apache.openjpa.persistence.datacache.common.apps.AttachF.getId1(),0,0
org.apache.openjpa.persistence.datacache.common.apps.AttachF.setId2(String),2,2
org.apache.openjpa.persistence.datacache.common.apps.AttachF.getId2(),1,1
org.apache.openjpa.persistence.datacache.common.apps.AttachF.setEmbeddedC(AttachC),3,6
org.apache.openjpa.persistence.datacache.common.apps.AttachF.getEmbeddedC(),2,3
org.apache.openjpa.persistence.jdbc.maps.update.LocalizedString.LocalizedString(),2,2
"org.apache.openjpa.persistence.jdbc.maps.update.LocalizedString.LocalizedString(String,String)",4,10
org.apache.openjpa.persistence.jdbc.maps.update.LocalizedString.getLanguage(),2,3
org.apache.openjpa.persistence.jdbc.maps.update.LocalizedString.setLanguage(String),3,6
org.apache.openjpa.persistence.jdbc.maps.update.LocalizedString.getString(),1,3
org.apache.openjpa.persistence.jdbc.maps.update.LocalizedString.setString(String),3,6
org.apache.openjpa.persistence.jdbc.maps.update.LocalizedString.hashCode(),6,19
org.apache.openjpa.persistence.jdbc.maps.update.LocalizedString.equals(Object),6,21
org.apache.openjpa.persistence.jdbc.maps.update.LocalizedString.toString(),1,3
"org.apache.openjpa.kernel.exps.CompareExpression.CompareExpression(Val,Val)",6,14
"org.apache.openjpa.kernel.exps.CompareExpression.eval(Object,Object,StoreContext,Object[])",13,31
"org.apache.openjpa.kernel.exps.CompareExpression.eval(Collection,StoreContext,Object[])",15,33
"org.apache.openjpa.kernel.exps.CompareExpression.compare(Object,Object)",3,5
org.apache.openjpa.kernel.exps.CompareExpression.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectAChild2.CacheObjectAChild2(),3,3
"org.apache.openjpa.persistence.datacache.common.apps.CacheObjectAChild2.CacheObjectAChild2(String,String,int)",7,10
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectAChild2.getStr2(),2,3
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectAChild2.setStr2(String),3,4
org.apache.openjpa.persistence.delimited.identifiers.Animal2.Animal2(),1,1
org.apache.openjpa.persistence.delimited.identifiers.Animal2.Animal2(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.Animal2.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.Animal2.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.Animal2.getType(),2,4
org.apache.openjpa.persistence.delimited.identifiers.Animal2.setType(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.Animal2.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.Animal2.setName(String),4,10
org.apache.openjpa.persistence.jdbc.mapping.TestPrecisionMapping.setUp(),4,5
org.apache.openjpa.persistence.jdbc.mapping.TestPrecisionMapping.testUnspecified(),6,10
org.apache.openjpa.persistence.jdbc.mapping.TestPrecisionMapping.testPrecisionOnly(),7,13
org.apache.openjpa.persistence.jdbc.mapping.TestPrecisionMapping.testScaleOnly(),6,13
org.apache.openjpa.persistence.jdbc.mapping.TestPrecisionMapping.testPrecisionAndScale(),8,16
"org.apache.openjpa.persistence.jdbc.mapping.TestPrecisionMapping.testBigDecimalMapping(String,int,int,int)",18,49
"org.apache.openjpa.persistence.jdbc.mapping.TestPrecisionMapping.testDoubleMapping(String,int,int,int)",19,48
org.apache.openjpa.persistence.delimited.identifiers.TestDelimInheritance.setUp(),25,49
org.apache.openjpa.persistence.delimited.identifiers.TestDelimInheritance.tearDown(),3,4
org.apache.openjpa.persistence.delimited.identifiers.TestDelimInheritance.createEMF(Object),12,15
org.apache.openjpa.persistence.delimited.identifiers.TestDelimInheritance.createPontiac(int),6,11
org.apache.openjpa.persistence.delimited.identifiers.TestDelimInheritance.createChevrolet(int),7,12
org.apache.openjpa.persistence.delimited.identifiers.TestDelimInheritance.testCreate(),10,16
org.apache.openjpa.persistence.delimited.identifiers.TestDelimInheritance.runQueries(),5,6
org.apache.openjpa.persistence.delimited.identifiers.TestDelimInheritance.queryChevrolet(),14,23
org.apache.openjpa.persistence.delimited.identifiers.TestDelimInheritance.queryPontiac(),13,24
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.EmployeePK.EmployeePK(),1,1
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.EmployeePK.EmployeePK(String,Date)",5,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.EmployeePK.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.EmployeePK.getBDay(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.EmployeePK.equals(Object),6,13
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.EmployeePK.hashCode(),4,12
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.Department.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.Department.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.Department.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.Department.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.Department.equals(Object),4,8
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.Department.hashCode(),4,11
org.apache.openjpa.persistence.jdbc.query.TestTemporalTypeQueryParameterBinding.setUp(),21,73
org.apache.openjpa.persistence.jdbc.query.TestTemporalTypeQueryParameterBinding.testNamedParameterConvertedFromCalendarValue(),21,48
org.apache.openjpa.persistence.jdbc.query.TestTemporalTypeQueryParameterBinding.testPositionalParameterConvertedFromCalendarValue(),21,48
org.apache.openjpa.persistence.jdbc.query.TestTemporalTypeQueryParameterBinding.testNamedParameterConvertedFromDateValue(),18,36
org.apache.openjpa.persistence.jdbc.query.TestTemporalTypeQueryParameterBinding.testPositionalParameterConvertedFromDateValue(),18,36
org.apache.openjpa.persistence.jdbc.query.TestTemporalTypeQueryParameterBinding.testNamedParameterWithMismatchedValue(),20,39
org.apache.openjpa.persistence.jdbc.query.TestTemporalTypeQueryParameterBinding.testPositionalParameterWithMismatchedValue(),21,49
org.apache.openjpa.persistence.jdbc.query.TestTemporalTypeQueryParameterBinding.testTemporalType(),30,234
"org.apache.openjpa.persistence.jdbc.query.TestTemporalTypeQueryParameterBinding.verifyParams(String,Class<>,Object)",32,59
"org.apache.openjpa.persistence.jdbc.query.TestTemporalTypeQueryParameterBinding.assertSetTemporalParameter(Query,int,Date,TemporalType)",12,23
"org.apache.openjpa.persistence.jdbc.query.TestTemporalTypeQueryParameterBinding.assertSetTemporalParameter(Query,int,Calendar,TemporalType)",12,23
"org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler.map(ValueMapping,String,ColumnIO,boolean,List,List)",23,39
"org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler.map(ValueMapping,DBIdentifier,ColumnIO,boolean,List,List)",43,152
"org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler.toDataStoreValue(OpenJPAStateManager,ValueMapping,JDBCStore,Column[],Object,int)",40,103
"org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler.toDataStoreValue1(OpenJPAStateManager,ValueMapping,JDBCStore,Column[],List,int)",54,179
"org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler.getValue(Embeddable,OpenJPAStateManager,int)",13,22
"org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler.toObjectValue(OpenJPAStateManager,ValueMapping,Object,JDBCStore,JDBCFetchConfiguration,Column[],int)",27,64
"org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler.toObjectValue1(OpenJPAStateManager,ValueMapping,Object,JDBCStore,JDBCFetchConfiguration,Column[],int)",38,147
org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler.getColumns(FieldMapping),10,28
"org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler.getEmbeddedIdCols(FieldMapping,List)",14,32
"org.apache.openjpa.jdbc.meta.strats.EmbedValueHandler.getIdColumns(FieldMapping,List)",13,25
"org.apache.openjpa.jdbc.kernel.exps.AndExpression.AndExpression(Exp,Exp)",6,13
"org.apache.openjpa.jdbc.kernel.exps.AndExpression.initialize(Select,ExpContext,Map)",10,26
"org.apache.openjpa.jdbc.kernel.exps.AndExpression.appendTo(Select,ExpContext,ExpState,SQLBuffer)",14,51
"org.apache.openjpa.jdbc.kernel.exps.AndExpression.selectColumns(Select,ExpContext,ExpState,boolean)",9,28
org.apache.openjpa.jdbc.kernel.exps.AndExpression.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass.IdClassTestMSC.getVersion(),1,2
org.apache.openjpa.persistence.jdbc.query.domain.Chess.getPiece(),1,2
org.apache.openjpa.persistence.jdbc.query.domain.Chess.setPiece(int),2,3
org.apache.openjpa.util.WrappedException.WrappedException(String),10,13
org.apache.openjpa.util.WrappedException.WrappedException(Message),4,6
org.apache.openjpa.util.WrappedException.WrappedException(Throwable),4,5
"org.apache.openjpa.util.WrappedException.WrappedException(String,Throwable)",6,8
"org.apache.openjpa.util.WrappedException.WrappedException(Message,Throwable)",6,9
org.apache.openjpa.util.WrappedException.getType(),2,2
org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler.getInstance(),5,7
"org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler.map(ValueMapping,String,ColumnIO,boolean)",14,27
"org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler.map(ValueMapping,DBIdentifier,ColumnIO,boolean)",14,27
org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler.isVersionable(ValueMapping),3,3
org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler.objectValueRequiresLoad(ValueMapping),5,6
"org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)",26,43
"org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler.toObjectValue(ValueMapping,Object,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration)",30,82
"org.apache.openjpa.jdbc.meta.strats.UntypedPCValueHandler.toRelationDataStoreValue(OpenJPAStateManager,Column)",14,17
org.apache.openjpa.persistence.enhance.identity.Employee5.Employee5(),1,1
org.apache.openjpa.persistence.enhance.identity.Employee5.Employee5(EmployeeId5),2,3
org.apache.openjpa.persistence.enhance.identity.Person1.getId(),1,1
org.apache.openjpa.persistence.enhance.identity.Person1.setId(PersonId1),2,2
org.apache.openjpa.persistence.enhance.identity.Person1.getMedical(),2,4
org.apache.openjpa.persistence.enhance.identity.Person1.setMedical(MedicalHistory1),3,7
org.apache.openjpa.persistence.enhance.identity.Person1.equals(Object),5,20
org.apache.openjpa.persistence.enhance.identity.Person1.hashCode(),4,14
org.apache.openjpa.persistence.blob.BlobEntity.getId(),0,0
org.apache.openjpa.persistence.blob.BlobEntity.setId(int),1,1
org.apache.openjpa.persistence.blob.BlobEntity.getVersion(),1,2
org.apache.openjpa.persistence.blob.BlobEntity.setVersion(int),2,5
org.apache.openjpa.persistence.blob.BlobEntity.getLobField(),3,5
org.apache.openjpa.persistence.blob.BlobEntity.setLobField(String),4,10
org.apache.openjpa.persistence.blob.BlobEntity.getBlobField(),2,4
org.apache.openjpa.persistence.blob.BlobEntity.setBlobField(byte[]),3,9
org.apache.openjpa.persistence.datacache.TestBulkUpdatesDataCacheEviction.setUp(),3,4
org.apache.openjpa.persistence.datacache.TestBulkUpdatesDataCacheEviction.testUpdate(),35,88
org.apache.openjpa.persistence.datacache.TestBulkUpdatesDataCacheEviction.testDelete(),31,71
org.apache.openjpa.persistence.datacache.TestBulkUpdatesDataCacheEviction.testUpdateNoEvict(),36,96
org.apache.openjpa.persistence.datacache.TestBulkUpdatesDataCacheEviction.testDeleteNoEvict(),34,79
org.apache.openjpa.persistence.datacache.TestBulkUpdatesDataCacheEviction.createEntity(EntityManager),9,18
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKTestEntity.hashCode(),2,4
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKTestEntity.equals(Object),6,14
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKTestEntity.getPk(),3,3
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKTestEntity.setPk(CombinedPKEmbeddedEntity),4,4
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKTestEntity.getData1(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKTestEntity.setData1(String),3,6
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKTestEntity.getData2(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKTestEntity.setData2(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat1.Flat1(),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat1.Flat1(int),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat1.setPk(int),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat1.getPk(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat1.getVersion(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat1.setBasic(int),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat1.getBasic(),1,2
org.apache.openjpa.persistence.criteria.TestDateStringConversion.createData(String),17,33
org.apache.openjpa.persistence.criteria.TestDateStringConversion.testDateString(),49,126
org.apache.openjpa.persistence.criteria.TestDateStringConversion.testDateStringAsParameter(),34,79
org.apache.openjpa.persistence.criteria.TestDateStringConversion.testDateStringAsParameter().$1.decorate(Query),6,8
org.apache.openjpa.persistence.criteria.TestDateStringConversion.createJDBCEscapeString(Object),16,35
org.apache.openjpa.persistence.criteria.TestDateStringConversion.testJDBCEscapeSyntaxTimestamp(),18,36
org.apache.openjpa.persistence.criteria.TestDateStringConversion.testJDBCEscapeSyntaxTime(),17,36
org.apache.openjpa.persistence.criteria.TestDateStringConversion.testJDBCEscapeSyntaxDate(),18,36
"org.apache.openjpa.persistence.criteria.TestDateStringConversion.assertSameResult(CriteriaQuery<Dependent>,String)",12,35
org.apache.openjpa.persistence.jdbc.kernel.TestDataStoreTrips.TestDataStoreTrips(),6,10
org.apache.openjpa.persistence.jdbc.kernel.TestDataStoreTrips.TestDataStoreTrips(String),6,7
org.apache.openjpa.persistence.jdbc.kernel.TestDataStoreTrips.setUp(),53,128
org.apache.openjpa.persistence.jdbc.kernel.TestDataStoreTrips.testTrips(),22,41
org.apache.openjpa.persistence.jdbc.kernel.TestDataStoreTrips.testExistsCalls(),35,97
org.apache.openjpa.persistence.jdbc.kernel.TestDataStoreTrips.SelectCounter.setTable(String),3,6
org.apache.openjpa.persistence.jdbc.kernel.TestDataStoreTrips.SelectCounter.beforeExecuteStatement(JDBCEvent),10,15
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityE.EntityE(String),3,5
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityE.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityE.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityE.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityE.setName(String),4,10
org.apache.openjpa.lib.rop.EagerResultList.EagerResultList(ResultObjectProvider),14,26
org.apache.openjpa.persistence.datacache.CachedPerson.getId(),0,0
org.apache.openjpa.persistence.datacache.CachedPerson.setId(int),1,1
org.apache.openjpa.persistence.datacache.CachedPerson.getFirstName(),2,3
org.apache.openjpa.persistence.datacache.CachedPerson.setFirstName(String),3,6
org.apache.openjpa.persistence.datacache.CachedPerson.getLastName(),2,3
org.apache.openjpa.persistence.datacache.CachedPerson.setLastName(String),3,6
org.apache.openjpa.persistence.datacache.CachedPerson.getVersion(),1,2
"org.apache.openjpa.lib.log.MultiLogFactory.MultiLogFactory(LogFactory,LogFactory)",6,12
"org.apache.openjpa.lib.log.MultiLogFactory.MultiLogFactory(LogFactory,LogFactory,LogFactory)",6,14
org.apache.openjpa.lib.log.MultiLogFactory.MultiLogFactory(LogFactory[]),11,19
org.apache.openjpa.lib.log.MultiLogFactory.addLogFactory(LogFactory),4,9
org.apache.openjpa.lib.log.MultiLogFactory.removeLogFactory(LogFactory),4,9
org.apache.openjpa.lib.log.MultiLogFactory.getDelegates(),8,18
org.apache.openjpa.lib.log.MultiLogFactory.getLog(String),14,32
org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.MultiLog(Log[]),3,6
org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.getDelegates(),3,6
org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.trace(Object),5,8
"org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.trace(Object,Throwable)",6,9
org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.info(Object),5,8
"org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.info(Object,Throwable)",6,9
org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.warn(Object),5,8
"org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.warn(Object,Throwable)",6,9
org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.error(Object),5,8
"org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.error(Object,Throwable)",6,9
org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.fatal(Object),5,8
"org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.fatal(Object,Throwable)",6,9
org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.isTraceEnabled(),4,7
org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.isInfoEnabled(),4,7
org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.isWarnEnabled(),4,7
org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.isErrorEnabled(),4,7
org.apache.openjpa.lib.log.MultiLogFactory.MultiLog.isFatalEnabled(),4,7
org.apache.openjpa.persistence.detach.Entity7.Entity7(),1,1
"org.apache.openjpa.persistence.detach.Entity7.Entity7(long,String)",3,5
org.apache.openjpa.persistence.detach.Entity7.getId(),0,0
org.apache.openjpa.persistence.detach.Entity7.setId(long),1,1
org.apache.openjpa.persistence.detach.Entity7.getName(),2,3
org.apache.openjpa.persistence.detach.Entity7.setName(String),3,6
org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy.initialize(),10,16
org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy.setInitialValues(Number[]),12,20
org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy.getInitialValues(),7,9
org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy.getJavaType(),4,5
org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy.getJavaType(int),19,53
org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy.nextVersion(Object),9,21
"org.apache.openjpa.jdbc.meta.strats.MultiColumnVersionStrategy.nextValue(Object,int)",8,14
org.apache.openjpa.persistence.datacache.TestJPQLRelationProjections.TestJPQLRelationProjections(String),6,8
org.apache.openjpa.persistence.datacache.TestJPQLRelationProjections.setUp(),43,106
org.apache.openjpa.persistence.datacache.TestJPQLRelationProjections.tearDown(),4,6
org.apache.openjpa.persistence.datacache.TestJPQLRelationProjections.testNullRelatedPCIsCached(),19,33
org.apache.openjpa.persistence.datacache.TestJPQLRelationProjections.testNullRelatedPCAndProjectionIsCached(),25,45
org.apache.openjpa.persistence.datacache.TestJPQLRelationProjections.testNonNullRelatedPCIsCached(),20,36
org.apache.openjpa.persistence.datacache.TestJPQLRelationProjections.testNonNullRelatedPCAndProjectionIsCached(),25,48
org.apache.openjpa.persistence.datacache.TestJPQLRelationProjections.testEmbeddedFields(),33,57
org.apache.openjpa.persistence.datacache.TestJPQLRelationProjections.testNonNullRelationOfSameTypeAsCandidate(),24,64
org.apache.openjpa.persistence.datacache.TestJPQLRelationProjections.testNullRelationOfSameTypeAsCandidate(),21,36
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.setConfiguration(Configuration),4,6
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.getConfiguration(),2,3
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.startConfiguration(),2,2
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.endConfiguration(),1,1
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.setInstrument(String),14,41
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.getInstrument(),3,5
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.setOptions(String),3,6
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.getOptions(),2,3
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.addInstrument(Instrument),6,12
"org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.initializeInstrument(Instrument,Object)",5,11
"org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.initializeInstrument(Instrument,String,Object)",8,21
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.getInstrumentByName(String),4,7
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.getInstruments(),5,8
"org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.stopInstruments(InstrumentationLevel,Object)",11,28
"org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.startInstruments(InstrumentationLevel,Object)",9,24
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.stopInstrument(Instrument),2,7
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.removeInstrumentByName(String),7,13
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.isStarted(),1,2
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.setStarted(boolean),2,5
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.getInstrumentAliases(),3,3
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.start(),1,1
org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.stop(),1,1
"org.apache.openjpa.lib.instrumentation.AbstractInstrumentationProvider.contextEquals(Object,Object)",4,12
org.apache.openjpa.persistence.datacache.common.apps.PObject.getName(),2,3
org.apache.openjpa.persistence.datacache.common.apps.PObject.setName(String),3,6
org.apache.openjpa.persistence.datacache.common.apps.PObject.getId(),0,0
org.apache.openjpa.persistence.datacache.common.apps.PObject.getVersion(),1,2
org.apache.openjpa.lib.meta.ClassArgParser.getClassLoader(),4,7
org.apache.openjpa.lib.meta.ClassArgParser.setClassLoader(ClassLoader),5,10
"org.apache.openjpa.lib.meta.ClassArgParser.setMetaDataStructure(String,String,String[],String)",43,138
org.apache.openjpa.lib.meta.ClassArgParser.charsUnique(char[]),6,10
org.apache.openjpa.lib.meta.ClassArgParser.parseTypes(String),20,35
org.apache.openjpa.lib.meta.ClassArgParser.parseTypes(MetaDataIterator),17,26
org.apache.openjpa.lib.meta.ClassArgParser.mapTypes(MetaDataIterator),26,63
org.apache.openjpa.lib.meta.ClassArgParser.parseTypeNames(String),37,75
org.apache.openjpa.lib.meta.ClassArgParser.parseTypeNames(MetaDataIterator),23,44
"org.apache.openjpa.lib.meta.ClassArgParser.appendTypeNames(Object,InputStream,List<String>)",21,33
org.apache.openjpa.lib.meta.ClassArgParser.mapTypeNames(MetaDataIterator),29,66
org.apache.openjpa.lib.meta.ClassArgParser.getFromClassFile(File),18,38
org.apache.openjpa.lib.meta.ClassArgParser.getFromClass(InputStream),20,41
org.apache.openjpa.lib.meta.ClassArgParser.getFromJavaFile(File),27,81
org.apache.openjpa.lib.meta.ClassArgParser.getFromMetaDataFile(File),15,25
org.apache.openjpa.lib.meta.ClassArgParser.getFromMetaData(Reader),45,131
"org.apache.openjpa.lib.meta.ClassArgParser.readElementToken(int,Reader)",27,94
"org.apache.openjpa.lib.meta.ClassArgParser.readAttribute(Reader,char[])",23,51
org.apache.openjpa.lib.meta.ClassArgParser.readElementText(Reader),13,26
org.apache.openjpa.lib.meta.ClassArgParser.readThroughWhitespace(Reader),5,10
org.apache.openjpa.lib.meta.ClassArgParser.readAttributeValue(Reader),10,19
org.apache.openjpa.meta.XMLFieldMetaData.XMLFieldMetaData(),4,4
"org.apache.openjpa.meta.XMLFieldMetaData.XMLFieldMetaData(Class,String)",8,12
org.apache.openjpa.meta.XMLFieldMetaData.getType(),2,5
org.apache.openjpa.meta.XMLFieldMetaData.setType(Class),5,14
org.apache.openjpa.meta.XMLFieldMetaData.getTypeCode(),3,6
org.apache.openjpa.meta.XMLFieldMetaData.setTypeCode(int),5,10
org.apache.openjpa.meta.XMLFieldMetaData.setName(String),3,6
org.apache.openjpa.meta.XMLFieldMetaData.getName(),2,3
org.apache.openjpa.meta.XMLFieldMetaData.setXmlname(String),4,6
org.apache.openjpa.meta.XMLFieldMetaData.getXmlname(),2,3
org.apache.openjpa.meta.XMLFieldMetaData.setXmlnamespace(String),10,16
org.apache.openjpa.meta.XMLFieldMetaData.getXmlnamespace(),2,3
org.apache.openjpa.meta.XMLFieldMetaData.setXmltype(int),3,5
org.apache.openjpa.meta.XMLFieldMetaData.getXmltype(),1,2
org.apache.openjpa.meta.XMLFieldMetaData.isXmlRootElement(),3,3
org.apache.openjpa.meta.XMLFieldMetaData.isXmlElement(),3,4
org.apache.openjpa.meta.XMLFieldMetaData.isXmlAttribute(),3,4
org.apache.openjpa.meta.XMLFieldMetaData.getFieldMapping(String),7,7
org.apache.openjpa.meta.XMLFieldMetaData.setXmlRootElement(boolean),4,7
"org.apache.openjpa.meta.XMLFieldMetaData.addField(String,XMLMetaData)",7,8
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectC.CacheObjectC(),2,2
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectC.CacheObjectC(String),4,4
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectC.getStr(),2,3
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectC.setStr(String),3,4
org.apache.openjpa.persistence.embed.DivisionXml.getId(),0,0
org.apache.openjpa.persistence.embed.DivisionXml.setId(int),1,1
org.apache.openjpa.persistence.embed.DivisionXml.getName(),2,3
org.apache.openjpa.persistence.embed.DivisionXml.setName(String),3,6
org.apache.openjpa.persistence.callbacks.GlobalListenerEntity.getId(),0,0
org.apache.openjpa.persistence.callbacks.GlobalListenerEntity.setId(long),1,1
org.apache.openjpa.persistence.callbacks.GlobalListenerEntity.getValue(),1,2
org.apache.openjpa.persistence.callbacks.GlobalListenerEntity.setValue(int),2,5
org.apache.openjpa.persistence.embed.EntityB2.getId(),0,0
org.apache.openjpa.persistence.embed.EntityB2.setId(int),1,1
org.apache.openjpa.persistence.embed.EntityB2.getName(),2,3
org.apache.openjpa.persistence.embed.EntityB2.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityB2.getEntityA(),5,7
org.apache.openjpa.persistence.embed.EntityB2.setEntityA(EntityA_Embed_MappedToOneCascadeDelete),6,10
org.apache.openjpa.persistence.enhance.identity.TestDerivedIdentity.setUp(),6,8
org.apache.openjpa.persistence.enhance.identity.TestDerivedIdentity.testIncorrectJoinColumnAnnotation(),32,42
org.apache.openjpa.persistence.enhance.identity.MedicalHistory4.getPatient(),2,3
org.apache.openjpa.persistence.enhance.identity.MedicalHistory4.setPatient(Person4),3,4
org.apache.openjpa.persistence.enhance.identity.MedicalHistory4.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.MedicalHistory4.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.MedicalHistory4.equals(Object),8,23
org.apache.openjpa.persistence.enhance.identity.MedicalHistory4.hashCode(),5,21
org.apache.openjpa.persistence.detach.xml.Owner.setId(long),1,1
org.apache.openjpa.persistence.detach.xml.Owner.getId(),0,0
org.apache.openjpa.persistence.detach.xml.Owner.setName(String),3,6
org.apache.openjpa.persistence.detach.xml.Owner.getName(),2,3
org.apache.openjpa.persistence.detach.xml.Owner.setAutos(List<Automobile>),4,7
org.apache.openjpa.persistence.detach.xml.Owner.getAutos(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.HorizB.setStringB(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizB.getStringB(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizB.setIntB(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizB.getIntB(),0,0
org.apache.openjpa.persistence.fields.TestByteArray.setUp(),18,33
org.apache.openjpa.persistence.fields.TestByteArray.testByteArray(),35,79
org.apache.openjpa.persistence.identity.TestFloatingPointIds.setUp(),3,5
org.apache.openjpa.persistence.identity.TestFloatingPointIds.testPersistFloat(),13,28
org.apache.openjpa.persistence.identity.TestFloatingPointIds.testPersistDoubleObj(),14,32
org.apache.openjpa.persistence.identity.TestFloatingPointIds.main(String[]),8,9
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCLeafD2.getLeafD2Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCLeafD2.setLeafD2Data(String),4,10
org.apache.openjpa.util.QueryException.QueryException(Object),6,11
"org.apache.openjpa.util.QueryException.QueryException(Object,int)",9,18
org.apache.openjpa.util.QueryException.getSubtype(),2,2
org.apache.openjpa.util.QueryException.getTimeout(),5,6
org.apache.openjpa.util.QueryException.setTimeout(int),7,11
org.apache.openjpa.util.QueryException.toString(),6,13
org.apache.openjpa.util.QueryException.writeObject(ObjectOutputStream),6,8
org.apache.openjpa.util.QueryException.readObject(ObjectInputStream),7,10
org.apache.openjpa.persistence.fields.EnumSetOwner.getEnumSet(),5,9
org.apache.openjpa.persistence.fields.EnumSetOwner.setEnumSet(EnumSet<SampleEnum>),3,10
org.apache.openjpa.persistence.fields.EnumSetOwner.EnumSetHolder.EnumSetHolder(String),15,21
org.apache.openjpa.persistence.fields.EnumSetOwner.EnumSetHolder.EnumSetHolder(EnumSet<SampleEnum>),3,7
org.apache.openjpa.persistence.fields.EnumSetOwner.EnumSetHolder.externalizer(),7,7
org.apache.openjpa.persistence.inheritance.entity.Employee.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.Employee.setId(int),2,2
org.apache.openjpa.persistence.inheritance.entity.Employee.getLastName(),2,3
org.apache.openjpa.persistence.inheritance.entity.Employee.setLastName(String),4,7
org.apache.openjpa.persistence.inheritance.entity.Employee.getFirstName(),2,3
org.apache.openjpa.persistence.inheritance.entity.Employee.setFirstName(String),4,7
org.apache.openjpa.persistence.inheritance.entity.Employee.getVacationDays(),2,4
org.apache.openjpa.persistence.inheritance.entity.Employee.setVacationDays(int),4,10
org.apache.openjpa.persistence.inheritance.entity.Employee.getManager(),1,3
org.apache.openjpa.persistence.inheritance.entity.Employee.setManager(Manager),3,7
org.apache.openjpa.persistence.inheritance.entity.Employee.getDepartment(),1,3
org.apache.openjpa.persistence.inheritance.entity.Employee.setDepartment(Department),3,7
org.apache.openjpa.persistence.inheritance.entity.Employee.getVersion(),1,2
org.apache.openjpa.persistence.embed.ContactInfo.getPhoneNumbers(),2,4
org.apache.openjpa.persistence.embed.ContactInfo.addPhoneNumber(PhoneNumber),2,7
org.apache.openjpa.jdbc.kernel.TestNoForeignKeyViolation.setUp(),5,12
org.apache.openjpa.jdbc.kernel.TestNoForeignKeyViolation.createTestData(),20,54
org.apache.openjpa.jdbc.kernel.TestNoForeignKeyViolation.testSqlOrder(),29,78
org.apache.openjpa.jdbc.kernel.TestNoForeignKeyViolation.testSimpleCycle(),28,39
org.apache.openjpa.jdbc.kernel.TestNoForeignKeyViolation.testComplexCycle(),30,60
org.apache.openjpa.jdbc.kernel.TestNoForeignKeyViolation.testComplexTwoCycles(),30,64
org.apache.openjpa.jdbc.kernel.TestNoForeignKeyViolation.testForeignKeyCascade(),36,89
org.apache.openjpa.persistence.query.CountExpression.CountExpression(Expression),5,7
org.apache.openjpa.kernel.DelegatingStoreManager.DelegatingStoreManager(StoreManager),7,21
org.apache.openjpa.kernel.DelegatingStoreManager.getDelegate(),4,7
org.apache.openjpa.kernel.DelegatingStoreManager.getInnermostDelegate(),7,13
org.apache.openjpa.kernel.DelegatingStoreManager.hashCode(),4,6
org.apache.openjpa.kernel.DelegatingStoreManager.equals(Object),7,13
org.apache.openjpa.kernel.DelegatingStoreManager.setContext(StoreContext),4,9
org.apache.openjpa.kernel.DelegatingStoreManager.beginOptimistic(),3,5
org.apache.openjpa.kernel.DelegatingStoreManager.rollbackOptimistic(),3,5
org.apache.openjpa.kernel.DelegatingStoreManager.begin(),2,3
org.apache.openjpa.kernel.DelegatingStoreManager.commit(),2,3
org.apache.openjpa.kernel.DelegatingStoreManager.rollback(),2,3
"org.apache.openjpa.kernel.DelegatingStoreManager.exists(OpenJPAStateManager,Object)",6,8
"org.apache.openjpa.kernel.DelegatingStoreManager.syncVersion(OpenJPAStateManager,Object)",7,10
"org.apache.openjpa.kernel.DelegatingStoreManager.initialize(OpenJPAStateManager,PCState,FetchConfiguration,Object)",8,12
"org.apache.openjpa.kernel.DelegatingStoreManager.load(OpenJPAStateManager,BitSet,FetchConfiguration,int,Object)",13,20
"org.apache.openjpa.kernel.DelegatingStoreManager.loadAll(Collection<OpenJPAStateManager>,PCState,int,FetchConfiguration,Object)",10,19
"org.apache.openjpa.kernel.DelegatingStoreManager.beforeStateChange(OpenJPAStateManager,PCState,PCState)",4,5
org.apache.openjpa.kernel.DelegatingStoreManager.flush(Collection<OpenJPAStateManager>),7,10
"org.apache.openjpa.kernel.DelegatingStoreManager.assignObjectId(OpenJPAStateManager,boolean)",7,11
"org.apache.openjpa.kernel.DelegatingStoreManager.assignField(OpenJPAStateManager,int,boolean)",7,13
org.apache.openjpa.kernel.DelegatingStoreManager.getManagedType(Object),5,8
org.apache.openjpa.kernel.DelegatingStoreManager.getDataStoreIdType(ClassMetaData),4,11
"org.apache.openjpa.kernel.DelegatingStoreManager.copyDataStoreId(Object,ClassMetaData)",6,15
"org.apache.openjpa.kernel.DelegatingStoreManager.newDataStoreId(Object,ClassMetaData)",6,15
org.apache.openjpa.kernel.DelegatingStoreManager.getClientConnection(),4,6
org.apache.openjpa.kernel.DelegatingStoreManager.retainConnection(),3,5
org.apache.openjpa.kernel.DelegatingStoreManager.releaseConnection(),3,5
"org.apache.openjpa.kernel.DelegatingStoreManager.executeExtent(ClassMetaData,boolean,FetchConfiguration)",11,18
org.apache.openjpa.kernel.DelegatingStoreManager.newQuery(String),4,8
org.apache.openjpa.kernel.DelegatingStoreManager.newFetchConfiguration(),3,7
org.apache.openjpa.kernel.DelegatingStoreManager.close(),2,3
"org.apache.openjpa.kernel.DelegatingStoreManager.compareVersion(OpenJPAStateManager,Object,Object)",6,9
org.apache.openjpa.kernel.DelegatingStoreManager.getDataStoreIdSequence(ClassMetaData),5,10
org.apache.openjpa.kernel.DelegatingStoreManager.getValueSequence(FieldMetaData),8,11
org.apache.openjpa.kernel.DelegatingStoreManager.cancelAll(),2,3
"org.apache.openjpa.kernel.DelegatingStoreManager.isCached(List<Object>,BitSet)",8,11
org.apache.openjpa.persistence.jdbc.TestFKColumnNames.testSQLKeywords(),38,73
org.apache.openjpa.persistence.jdbc.TestFKColumnNames.Inner1.getSelect(),2,3
org.apache.openjpa.persistence.jdbc.TestFKColumnNames.Inner1.setSelect(Inner2),3,6
org.apache.openjpa.persistence.jdbc.TestFKColumnNames.Inner1.getId(),0,0
org.apache.openjpa.persistence.jdbc.TestFKColumnNames.Inner1.setId(int),1,1
org.apache.openjpa.persistence.jdbc.TestFKColumnNames.Inner2.getFrom(),1,1
org.apache.openjpa.persistence.jdbc.TestFKColumnNames.Inner2.setFrom(Inner1),2,2
org.apache.openjpa.persistence.jdbc.TestFKColumnNames.Inner2.getId(),0,0
org.apache.openjpa.persistence.jdbc.TestFKColumnNames.Inner2.setId(int),1,1
org.apache.openjpa.datacache.TypeBasedCacheDistributionPolicy.getExcludedTypes(),5,9
org.apache.openjpa.datacache.TypeBasedCacheDistributionPolicy.setExcludedTypes(String),11,18
org.apache.openjpa.datacache.TypeBasedCacheDistributionPolicy.getIncludedTypes(),5,9
org.apache.openjpa.datacache.TypeBasedCacheDistributionPolicy.setIncludedTypes(String),11,18
org.apache.openjpa.datacache.TypeBasedCacheDistributionPolicy.parseNames(String),15,33
"org.apache.openjpa.datacache.TypeBasedCacheDistributionPolicy.selectCache(OpenJPAStateManager,Object)",18,48
org.apache.openjpa.persistence.inheritance.NoGenMappedSuperclassL2.getL2Data(),1,2
org.apache.openjpa.persistence.inheritance.NoGenMappedSuperclassL2.setL2Data(int),2,5
org.apache.openjpa.persistence.enhance.common.apps.NoNoArgs.NoNoArgs(String),3,3
"org.apache.openjpa.event.BeanLifecycleCallbacks.BeanLifecycleCallbacks(Class<>,String,boolean,Class<>)",15,25
"org.apache.openjpa.event.BeanLifecycleCallbacks.BeanLifecycleCallbacks(Class<>,Method,boolean)",11,16
org.apache.openjpa.event.BeanLifecycleCallbacks.newListener(Class<>),17,26
"org.apache.openjpa.event.BeanLifecycleCallbacks.makeCallback(Object,Object,int)",20,36
org.apache.openjpa.event.BeanLifecycleCallbacks.readExternal(ObjectInput),8,15
org.apache.openjpa.event.BeanLifecycleCallbacks.writeExternal(ObjectOutput),6,10
org.apache.openjpa.persistence.enhance.identity.Page1.getPid(),2,3
org.apache.openjpa.persistence.enhance.identity.Page1.setPid(PageId1),3,6
org.apache.openjpa.persistence.enhance.identity.Page1.getBook(),1,3
org.apache.openjpa.persistence.enhance.identity.Page1.setBook(Book1),2,6
org.apache.openjpa.persistence.enhance.identity.Page1.getLines(),3,4
org.apache.openjpa.persistence.enhance.identity.Page1.getLine(LineId1),4,9
org.apache.openjpa.persistence.enhance.identity.Page1.addLine(Line1),5,7
"org.apache.openjpa.lib.meta.JarFileURLMetaDataIterator.JarFileURLMetaDataIterator(URL,MetaDataFilter)",30,112
org.apache.openjpa.lib.meta.JarFileURLMetaDataIterator.hasNext(),12,22
org.apache.openjpa.lib.meta.JarFileURLMetaDataIterator.next(),11,17
org.apache.openjpa.lib.meta.JarFileURLMetaDataIterator.getInputStream(),10,16
org.apache.openjpa.lib.meta.JarFileURLMetaDataIterator.getFile(),8,12
org.apache.openjpa.lib.meta.JarFileURLMetaDataIterator.close(),7,11
org.apache.openjpa.lib.meta.JarFileURLMetaDataIterator.getName(),7,12
org.apache.openjpa.lib.meta.JarFileURLMetaDataIterator.getContent(),19,57
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD.EntityD(),1,1
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD.EntityD(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD.getEntityCs(),2,5
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD.setEntityCs(Collection<EntityC>),4,11
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD.addEntityC(EntityC),2,7
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalC.setStringC(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalC.getStringC(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalC.setIntC(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalC.getIntC(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizL.setStringL(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizL.getStringL(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizL.setIntL(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizL.getIntL(),0,0
"org.apache.openjpa.kernel.ObjectIdStateManager.ObjectIdStateManager(Object,OpenJPAStateManager,ValueMetaData)",14,26
org.apache.openjpa.kernel.ObjectIdStateManager.getGenericContext(),4,7
"org.apache.openjpa.kernel.ObjectIdStateManager.getPCPrimaryKey(Object,int)",8,9
org.apache.openjpa.kernel.ObjectIdStateManager.replaceStateManager(StateManager),5,7
org.apache.openjpa.kernel.ObjectIdStateManager.getVersion(),2,2
org.apache.openjpa.kernel.ObjectIdStateManager.setVersion(Object),6,7
org.apache.openjpa.kernel.ObjectIdStateManager.isDirty(),1,1
org.apache.openjpa.kernel.ObjectIdStateManager.isTransactional(),1,1
org.apache.openjpa.kernel.ObjectIdStateManager.isPersistent(),1,1
org.apache.openjpa.kernel.ObjectIdStateManager.isNew(),0,0
org.apache.openjpa.kernel.ObjectIdStateManager.isDeleted(),1,1
org.apache.openjpa.kernel.ObjectIdStateManager.isDetached(),1,1
org.apache.openjpa.kernel.ObjectIdStateManager.isVersionUpdateRequired(),3,3
org.apache.openjpa.kernel.ObjectIdStateManager.isVersionCheckRequired(),3,3
org.apache.openjpa.kernel.ObjectIdStateManager.dirty(String),6,6
org.apache.openjpa.kernel.ObjectIdStateManager.fetchObjectId(),2,3
org.apache.openjpa.kernel.ObjectIdStateManager.accessingField(int),6,6
org.apache.openjpa.kernel.ObjectIdStateManager.serializing(),4,4
org.apache.openjpa.kernel.ObjectIdStateManager.writeDetached(ObjectOutput),7,8
org.apache.openjpa.kernel.ObjectIdStateManager.proxyDetachedDeserialized(int),7,7
"org.apache.openjpa.kernel.ObjectIdStateManager.settingBooleanField(PersistenceCapable,int,boolean,boolean,int)",10,10
"org.apache.openjpa.kernel.ObjectIdStateManager.settingCharField(PersistenceCapable,int,char,char,int)",10,10
"org.apache.openjpa.kernel.ObjectIdStateManager.settingByteField(PersistenceCapable,int,byte,byte,int)",10,10
"org.apache.openjpa.kernel.ObjectIdStateManager.settingShortField(PersistenceCapable,int,short,short,int)",10,10
"org.apache.openjpa.kernel.ObjectIdStateManager.settingIntField(PersistenceCapable,int,int,int,int)",10,10
"org.apache.openjpa.kernel.ObjectIdStateManager.settingLongField(PersistenceCapable,int,long,long,int)",10,10
"org.apache.openjpa.kernel.ObjectIdStateManager.settingFloatField(PersistenceCapable,int,float,float,int)",10,10
"org.apache.openjpa.kernel.ObjectIdStateManager.settingDoubleField(PersistenceCapable,int,double,double,int)",10,10
"org.apache.openjpa.kernel.ObjectIdStateManager.settingStringField(PersistenceCapable,int,String,String,int)",11,13
"org.apache.openjpa.kernel.ObjectIdStateManager.settingObjectField(PersistenceCapable,int,Object,Object,int)",11,13
"org.apache.openjpa.kernel.ObjectIdStateManager.providedBooleanField(PersistenceCapable,int,boolean)",9,9
"org.apache.openjpa.kernel.ObjectIdStateManager.providedCharField(PersistenceCapable,int,char)",9,9
"org.apache.openjpa.kernel.ObjectIdStateManager.providedByteField(PersistenceCapable,int,byte)",9,9
"org.apache.openjpa.kernel.ObjectIdStateManager.providedShortField(PersistenceCapable,int,short)",9,9
"org.apache.openjpa.kernel.ObjectIdStateManager.providedIntField(PersistenceCapable,int,int)",9,9
"org.apache.openjpa.kernel.ObjectIdStateManager.providedLongField(PersistenceCapable,int,long)",9,9
"org.apache.openjpa.kernel.ObjectIdStateManager.providedFloatField(PersistenceCapable,int,float)",9,9
"org.apache.openjpa.kernel.ObjectIdStateManager.providedDoubleField(PersistenceCapable,int,double)",9,9
"org.apache.openjpa.kernel.ObjectIdStateManager.providedStringField(PersistenceCapable,int,String)",10,11
"org.apache.openjpa.kernel.ObjectIdStateManager.providedObjectField(PersistenceCapable,int,Object)",10,11
"org.apache.openjpa.kernel.ObjectIdStateManager.replaceBooleanField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.ObjectIdStateManager.replaceCharField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.ObjectIdStateManager.replaceByteField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.ObjectIdStateManager.replaceShortField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.ObjectIdStateManager.replaceIntField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.ObjectIdStateManager.replaceLongField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.ObjectIdStateManager.replaceFloatField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.ObjectIdStateManager.replaceDoubleField(PersistenceCapable,int)",8,8
"org.apache.openjpa.kernel.ObjectIdStateManager.replaceStringField(PersistenceCapable,int)",9,10
"org.apache.openjpa.kernel.ObjectIdStateManager.replaceObjectField(PersistenceCapable,int)",9,10
"org.apache.openjpa.kernel.ObjectIdStateManager.initialize(Class,PCState)",5,5
org.apache.openjpa.kernel.ObjectIdStateManager.load(FetchConfiguration),6,7
org.apache.openjpa.kernel.ObjectIdStateManager.getManagedInstance(),4,4
org.apache.openjpa.kernel.ObjectIdStateManager.getPersistenceCapable(),8,12
org.apache.openjpa.kernel.ObjectIdStateManager.getMetaData(),4,8
org.apache.openjpa.kernel.ObjectIdStateManager.getOwner(),3,4
org.apache.openjpa.kernel.ObjectIdStateManager.getOwnerIndex(),6,7
org.apache.openjpa.kernel.ObjectIdStateManager.isEmbedded(),1,1
org.apache.openjpa.kernel.ObjectIdStateManager.isFlushed(),1,1
org.apache.openjpa.kernel.ObjectIdStateManager.isFlushedDirty(),2,2
org.apache.openjpa.kernel.ObjectIdStateManager.isProvisional(),1,1
org.apache.openjpa.kernel.ObjectIdStateManager.getLoaded(),6,6
org.apache.openjpa.kernel.ObjectIdStateManager.getDirty(),6,6
org.apache.openjpa.kernel.ObjectIdStateManager.getFlushed(),6,6
org.apache.openjpa.kernel.ObjectIdStateManager.getUnloaded(FetchConfiguration),8,9
org.apache.openjpa.kernel.ObjectIdStateManager.newProxy(int),6,6
org.apache.openjpa.kernel.ObjectIdStateManager.newFieldProxy(int),6,7
org.apache.openjpa.kernel.ObjectIdStateManager.isDefaultValue(int),15,47
org.apache.openjpa.kernel.ObjectIdStateManager.getContext(),3,6
org.apache.openjpa.kernel.ObjectIdStateManager.getPCState(),3,3
org.apache.openjpa.kernel.ObjectIdStateManager.getObjectId(),1,2
org.apache.openjpa.kernel.ObjectIdStateManager.setObjectId(Object),6,7
org.apache.openjpa.kernel.ObjectIdStateManager.assignObjectId(boolean),6,6
org.apache.openjpa.kernel.ObjectIdStateManager.getId(),1,1
org.apache.openjpa.kernel.ObjectIdStateManager.getLock(),2,2
org.apache.openjpa.kernel.ObjectIdStateManager.setLock(Object),6,7
org.apache.openjpa.kernel.ObjectIdStateManager.setNextVersion(Object),6,7
org.apache.openjpa.kernel.ObjectIdStateManager.getImplData(),3,3
"org.apache.openjpa.kernel.ObjectIdStateManager.setImplData(Object,boolean)",8,10
org.apache.openjpa.kernel.ObjectIdStateManager.isImplDataCacheable(),3,3
org.apache.openjpa.kernel.ObjectIdStateManager.getImplData(int),4,4
"org.apache.openjpa.kernel.ObjectIdStateManager.setImplData(int,Object)",8,10
org.apache.openjpa.kernel.ObjectIdStateManager.isImplDataCacheable(int),4,4
org.apache.openjpa.kernel.ObjectIdStateManager.getIntermediate(int),3,3
"org.apache.openjpa.kernel.ObjectIdStateManager.setIntermediate(int,Object)",8,8
"org.apache.openjpa.kernel.ObjectIdStateManager.removed(int,Object,boolean)",7,8
org.apache.openjpa.kernel.ObjectIdStateManager.beforeRefresh(boolean),4,4
org.apache.openjpa.kernel.ObjectIdStateManager.dirty(int),5,5
"org.apache.openjpa.kernel.ObjectIdStateManager.storeBoolean(int,boolean)",6,9
"org.apache.openjpa.kernel.ObjectIdStateManager.storeByte(int,byte)",6,10
"org.apache.openjpa.kernel.ObjectIdStateManager.storeChar(int,char)",7,11
"org.apache.openjpa.kernel.ObjectIdStateManager.storeInt(int,int)",6,9
"org.apache.openjpa.kernel.ObjectIdStateManager.storeShort(int,short)",6,10
"org.apache.openjpa.kernel.ObjectIdStateManager.storeLong(int,long)",6,9
"org.apache.openjpa.kernel.ObjectIdStateManager.storeFloat(int,float)",6,10
"org.apache.openjpa.kernel.ObjectIdStateManager.storeDouble(int,double)",6,10
"org.apache.openjpa.kernel.ObjectIdStateManager.storeString(int,String)",7,13
"org.apache.openjpa.kernel.ObjectIdStateManager.storeObject(int,Object)",7,13
"org.apache.openjpa.kernel.ObjectIdStateManager.store(int,Object)",9,22
"org.apache.openjpa.kernel.ObjectIdStateManager.storeBooleanField(int,boolean)",4,9
"org.apache.openjpa.kernel.ObjectIdStateManager.storeByteField(int,byte)",4,9
"org.apache.openjpa.kernel.ObjectIdStateManager.storeCharField(int,char)",4,9
"org.apache.openjpa.kernel.ObjectIdStateManager.storeIntField(int,int)",4,9
"org.apache.openjpa.kernel.ObjectIdStateManager.storeShortField(int,short)",4,9
"org.apache.openjpa.kernel.ObjectIdStateManager.storeLongField(int,long)",4,9
"org.apache.openjpa.kernel.ObjectIdStateManager.storeFloatField(int,float)",4,9
"org.apache.openjpa.kernel.ObjectIdStateManager.storeDoubleField(int,double)",4,9
"org.apache.openjpa.kernel.ObjectIdStateManager.storeStringField(int,String)",5,12
"org.apache.openjpa.kernel.ObjectIdStateManager.storeObjectField(int,Object)",5,12
"org.apache.openjpa.kernel.ObjectIdStateManager.storeField(int,Object)",4,8
org.apache.openjpa.kernel.ObjectIdStateManager.fetchBoolean(int),3,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchByte(int),3,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchChar(int),4,6
org.apache.openjpa.kernel.ObjectIdStateManager.fetchShort(int),3,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchInt(int),3,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchLong(int),3,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchFloat(int),3,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchDouble(int),3,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchString(int),4,7
org.apache.openjpa.kernel.ObjectIdStateManager.fetchObject(int),4,6
org.apache.openjpa.kernel.ObjectIdStateManager.fetch(int),5,12
org.apache.openjpa.kernel.ObjectIdStateManager.fetchBooleanField(int),2,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchByteField(int),2,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchCharField(int),2,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchShortField(int),2,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchIntField(int),2,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchLongField(int),2,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchFloatField(int),2,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchDoubleField(int),2,5
org.apache.openjpa.kernel.ObjectIdStateManager.fetchStringField(int),3,8
org.apache.openjpa.kernel.ObjectIdStateManager.fetchObjectField(int),3,7
"org.apache.openjpa.kernel.ObjectIdStateManager.fetchField(int,boolean)",4,7
org.apache.openjpa.kernel.ObjectIdStateManager.fetchInitialField(int),7,8
"org.apache.openjpa.kernel.ObjectIdStateManager.setRemote(int,Object)",6,8
org.apache.openjpa.kernel.ObjectIdStateManager.lock(),1,1
org.apache.openjpa.kernel.ObjectIdStateManager.unlock(),1,1
org.apache.openjpa.kernel.ObjectIdStateManager.getDefaultValue(int),13,40
org.apache.openjpa.kernel.ObjectIdStateManager.getValue(int),23,72
"org.apache.openjpa.kernel.ObjectIdStateManager.setValue(int,Object,boolean)",32,88
org.apache.openjpa.kernel.ObjectIdStateManager.isDelayed(int),2,2
"org.apache.openjpa.kernel.ObjectIdStateManager.setDelayed(int,boolean)",7,7
org.apache.openjpa.kernel.ObjectIdStateManager.loadDelayedField(int),6,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.TxRollbackEntity.TxRollbackEntity(String),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.TxRollbackEntity.rollBackException(),9,12
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.TxRollbackEntity.bomb(),8,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.TxRollbackEntity.bomb2(),8,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.TxRollbackEntity.getId(),0,0
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries1(),45,99
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries2(),57,160
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries3(),56,156
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries4(),47,86
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries4a(),47,89
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries4b(),47,91
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries4c(),46,88
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries4d(),47,111
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries4e(),48,82
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries5(),57,111
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries5a(),56,114
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries6(),57,110
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries6a(),56,113
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries6b(),53,109
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries6c(),54,121
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries6d(),55,142
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries6e(),54,126
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries6f(),45,87
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries6g(),54,118
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubqueries6h(),48,91
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testExist1(),24,62
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testExist1a(),28,88
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testExist1b(),49,99
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testNotExist1(),24,62
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testNotExist1a(),50,101
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testAny(),27,89
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery01(),28,70
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery02(),24,74
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery03(),53,115
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery04(),24,48
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery05(),18,42
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery06(),18,39
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery07(),18,42
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery08(),23,73
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery09(),25,75
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery10(),22,55
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery11(),24,83
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery12(),24,64
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery13(),27,69
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery14(),30,99
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery15(),22,57
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery16(),25,73
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery17(),28,78
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery18(),24,50
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery19(),20,46
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery20(),28,73
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery21(),51,122
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery22(),53,133
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery23(),52,127
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery24(),49,85
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubquery25(),49,85
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubSelectMaxDateRange(),28,118
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testSubSelectMaxDateRange().$1.decorate(Query),8,15
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testCorrelatedNestedSubquery1(),52,108
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testCorrelatedNestedSubquery1a(),29,83
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testPluralCorrelatedJoin1(),37,122
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testPluralCorrelatedJoin2(),33,125
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testPluralCorrelatedJoin3(),61,141
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testPluralCorrelatedJoin4(),36,133
org.apache.openjpa.persistence.criteria.TestJPQLSubquery.testPluralCorrelatedJoin5(),33,101
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.getElementCollection(),6,7
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.setElementCollection(Collection<EmbedPropAccess>),8,10
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.getEmbedField(),3,6
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.setEmbedField(EmbedFieldAccess),5,9
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.getVersion(),2,2
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.setVersion(int),3,5
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.getManyToOne(),2,2
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.setManyToOne(PropAccess),3,3
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.getOneToMany(),3,3
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.setOneToMany(Collection<FieldAccess>),4,4
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.getOneToOne(),2,2
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.setOneToOne(PropAccess),3,3
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.getManyToMany(),3,3
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.setManyToMany(Collection<PropAccess>),4,4
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.getName(),2,3
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.setName(String),3,4
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.setEmbedId(EmbedId),3,6
org.apache.openjpa.persistence.access.PropAccessFieldStratsEntity.getEmbedId(),2,3
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEmpty.getEntityManagerFactory(),13,28
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEmpty.getListener(),4,10
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEmpty.getSql(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEmpty.testCacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEmpty.testUncacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEmpty.testUnspecified(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEmpty.getExpectedInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEmpty.getExpectedNotInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEmpty.getCacheEnabled(),2,2
org.apache.openjpa.instrumentation.jmx.JMXProvider.registerMBean(JMXInstrument),13,29
org.apache.openjpa.instrumentation.jmx.JMXProvider.getMBeanServer(),23,45
org.apache.openjpa.instrumentation.jmx.JMXProvider.start(),14,27
org.apache.openjpa.instrumentation.jmx.JMXProvider.stop(),25,46
"org.apache.openjpa.instrumentation.jmx.JMXProvider.createObjectName(JMXInstrument,Map<String,String>)",35,99
org.apache.openjpa.instrumentation.jmx.JMXProvider.startInstrument(Instrument),10,19
"org.apache.openjpa.instrumentation.jmx.JMXProvider.stopInstrument(Instrument,boolean)",18,43
org.apache.openjpa.instrumentation.jmx.JMXProvider.getInstrumentAliases(),4,6
org.apache.openjpa.util.CallbackException.CallbackException(Message),4,5
org.apache.openjpa.util.CallbackException.CallbackException(Throwable),4,5
org.apache.openjpa.util.CallbackException.getSubtype(),2,2
org.apache.openjpa.persistence.jdbc.strategy.MapperEntity.get(Key),5,14
org.apache.openjpa.persistence.jdbc.strategy.MapperEntity.remove(Key),3,6
org.apache.openjpa.persistence.embed.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.embed.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.embed.Employee.setContactInfo(ContactInfo),3,11
org.apache.openjpa.persistence.embed.Employee.getContactInfo(),2,6
org.apache.openjpa.persistence.embed.Employee.setJobInfo(JobInfo),3,11
org.apache.openjpa.persistence.embed.Employee.getJobInfo(),2,6
org.apache.openjpa.persistence.embed.Employee.getLocationDetails(),2,5
org.apache.openjpa.persistence.embed.Employee.setLocationDetails(LocationDetails),3,8
org.apache.openjpa.persistence.embed.Employee.getNickNames(),4,6
org.apache.openjpa.persistence.embed.Employee.setNickNames(Set<String>),4,11
org.apache.openjpa.persistence.embed.Employee.addNickName(String),5,11
org.apache.openjpa.persistence.access.xml.XMLPropAccess.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLPropAccess.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLPropAccess.setVersion(int),2,5
org.apache.openjpa.persistence.access.xml.XMLPropAccess.getVersion(),1,2
org.apache.openjpa.persistence.access.xml.XMLPropAccess.setStrProp(String),6,8
org.apache.openjpa.persistence.access.xml.XMLPropAccess.getStrProp(),4,5
org.apache.openjpa.persistence.access.xml.XMLPropAccess.equals(Object),7,19
org.apache.openjpa.persistence.annotations.TestEJBEmbedded.TestEJBEmbedded(String),6,7
org.apache.openjpa.persistence.annotations.TestEJBEmbedded.setUp(),4,4
org.apache.openjpa.persistence.annotations.TestEJBEmbedded.testEmbedded(),21,84
org.apache.openjpa.persistence.annotations.TestEJBEmbedded.testNull(),16,49
org.apache.openjpa.enhance.ids.Software.Software(),1,1
org.apache.openjpa.enhance.ids.Software.setIdInteger(Integer),2,6
org.apache.openjpa.enhance.ids.Software.getIdInteger(),1,3
org.apache.openjpa.enhance.ids.Software.setIdInt(int),1,1
org.apache.openjpa.enhance.ids.Software.getIdInt(),0,0
org.apache.openjpa.enhance.ids.Software.setIdString(String),2,6
org.apache.openjpa.enhance.ids.Software.getIdString(),1,3
org.apache.openjpa.lib.rop.MergedResultObjectProvider.MergedResultObjectProvider(ResultObjectProvider[]),8,12
"org.apache.openjpa.lib.rop.MergedResultObjectProvider.MergedResultObjectProvider(ResultObjectProvider[],Comparator)",14,32
org.apache.openjpa.lib.rop.MergedResultObjectProvider.supportsRandomAccess(),3,3
org.apache.openjpa.lib.rop.MergedResultObjectProvider.open(),7,9
org.apache.openjpa.lib.rop.MergedResultObjectProvider.absolute(int),5,6
org.apache.openjpa.lib.rop.MergedResultObjectProvider.size(),11,29
org.apache.openjpa.lib.rop.MergedResultObjectProvider.reset(),6,8
org.apache.openjpa.lib.rop.MergedResultObjectProvider.close(),7,15
org.apache.openjpa.lib.rop.MergedResultObjectProvider.clear(),5,8
org.apache.openjpa.lib.rop.MergedResultObjectProvider.handleCheckedException(Exception),7,13
org.apache.openjpa.lib.rop.MergedResultObjectProvider.next(),26,73
org.apache.openjpa.lib.rop.MergedResultObjectProvider.getResultObject(),4,5
"org.apache.openjpa.lib.rop.MergedResultObjectProvider.getOrderingValue(Object,int,ResultObjectProvider)",13,39
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.PhoneNumber.getNumber(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.PhoneNumber.setNumber(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.PhoneNumber.getEmployees(),5,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.PhoneNumber.addEmployees(String,Employee)",6,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.PhoneNumber.removeEmployee(String),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.PhoneNumber.equals(Object),16,45
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.setUp(),28,75
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.tearDown(),4,5
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPrePersistException(),21,42
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPrePersistExceptionOnMerge(),22,43
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostPersistExceptionDuringFlush(),15,25
"org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.mutateAndFlush(EntityManager,ExceptionsFromCallbacksEntity)",10,12
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.flush(EntityManager),14,24
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostPersistExceptionDuringCommit(),15,25
"org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.mutateAndCommit(EntityManager,ExceptionsFromCallbacksEntity)",10,12
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.commit(EntityManager),15,24
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPrePersistExceptionDuringFlushWithNewFlushedInstance(),23,38
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPrePersistExceptionDuringCommitWithNewFlushedInstance(),23,37
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostPersistExceptionDuringFlushWithNewFlushedInstance(),23,38
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostPersistExceptionDuringCommitWithNewFlushedInstance(),23,37
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPreUpdateExceptionWithNewInstance(),20,30
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostUpdateExceptionDuringFlushWithNewInstance(),21,32
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostUpdateExceptionDuringCommitWithNewInstance(),20,31
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPreUpdateExceptionDuringFlushWithNewFlushedInstance(),18,28
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPreUpdateExceptionDuringCommitWithNewFlushedInstance(),19,28
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostUpdateExceptionDuringFlushWithNewFlushedInstance(),18,28
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostUpdateExceptionDuringCommitWithNewFlushedInstance(),19,28
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPreUpdateExceptionDuringFlushWithExistingInstance(),20,31
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.insert(String),16,24
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPreUpdateExceptionDuringCommitWithExistingInstance(),20,31
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostUpdateExceptionDuringFlushWithExistingInstance(),20,31
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostUpdateExceptionDuringCommitWithExistingInstance(),20,31
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPreUpdateExceptionDuringFlushWithExistingFlushedInstance(),29,44
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPreUpdateExceptionDuringCommitWithExistingFlushedInstance(),29,43
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostUpdateExceptionDuringFlushWithExistingFlushedInstance(),27,43
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostUpdateExceptionDuringCommitWithExistingFlushedInstance(),27,42
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostLoadException(),28,60
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPreDeleteException(),22,41
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostDeleteExceptionDuringFlush(),24,39
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostDeleteExceptionDuringCommit(),25,39
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPreDeleteExceptionDoubleDelete(),20,34
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostDeleteExceptionDuringFlushDoubleDelete(),20,36
org.apache.openjpa.persistence.callbacks.TestExceptionsFromCallbacks.testPostDeleteExceptionDuringCommitDoubleDelete(),20,35
org.apache.openjpa.persistence.inheritance.jointable.FulltimeEmployee.FulltimeEmployee(),2,2
org.apache.openjpa.persistence.inheritance.jointable.FulltimeEmployee.FulltimeEmployee(String),6,7
org.apache.openjpa.persistence.inheritance.jointable.FulltimeEmployee.getFTEmpProp1(),3,5
org.apache.openjpa.persistence.inheritance.jointable.FulltimeEmployee.setFTEmpProp1(String),4,10
org.apache.openjpa.persistence.inheritance.jointable.FulltimeEmployee.getDept(),2,3
org.apache.openjpa.persistence.inheritance.jointable.FulltimeEmployee.setDept(Department),3,6
org.apache.openjpa.persistence.inheritance.jointable.FulltimeEmployee.equals(Object),6,12
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithSequenceIdentity.getId(),0,0
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithSequenceIdentity.getName(),2,3
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithSequenceIdentity.setId(long),9,10
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithSequenceIdentity.setName(String),3,6
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithSequenceIdentity.getChildren(),3,4
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithSequenceIdentity.addChild(Child),5,12
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithSequenceIdentity.removeChild(Child),3,8
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithSequenceIdentity.postPersist(),7,10
org.apache.openjpa.persistence.inheritance.mappedsuperclass.SituationDA.SituationId.SituationId(),1,1
"org.apache.openjpa.persistence.inheritance.mappedsuperclass.SituationDA.SituationId.SituationId(String,short)",7,17
org.apache.openjpa.persistence.inheritance.mappedsuperclass.SituationDA.SituationId.equals(Object),8,16
org.apache.openjpa.persistence.inheritance.mappedsuperclass.SituationDA.SituationId.hashCode(),2,4
org.apache.openjpa.persistence.inheritance.mappedsuperclass.SituationDA.getType(),1,2
org.apache.openjpa.persistence.inheritance.mappedsuperclass.SituationDA.setType(short),2,5
org.apache.openjpa.persistence.inheritance.mappedsuperclass.SituationDA.getCashBoxPeriodSerial(),5,9
org.apache.openjpa.persistence.inheritance.mappedsuperclass.SituationDA.setCashBoxPeriodSerial(String),6,18
org.apache.openjpa.persistence.callbacks.TestPostPersistCallback.testPostPersistCalledAfterFlush(),20,59
org.apache.openjpa.persistence.callbacks.TestPostPersistCallback.testPostPersistCalledAfterCommit(),17,42
org.apache.openjpa.persistence.callbacks.TestPostPersistCallback.testPostPersistCalledAfterPersist(),23,57
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee3.getEmpId(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee3.setEmpId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee3.getDepartment(),1,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee3.setDepartment(Department3),2,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee3.getName(),2,4
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee3.setName(EmployeeName3),3,7
"org.apache.openjpa.kernel.exps.Trim.Trim(Val,Val,Boolean)",6,13
org.apache.openjpa.kernel.exps.Trim.getType(),2,2
org.apache.openjpa.kernel.exps.Trim.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.Trim.eval(Object,Object,StoreContext,Object[])",19,59
org.apache.openjpa.kernel.exps.Trim.acceptVisit(ExpressionVisitor),8,17
"org.apache.openjpa.lib.util.TestSimpleRegex.matchExpr(String,String,boolean)",8,15
org.apache.openjpa.lib.util.TestSimpleRegex.testWildcards(),23,122
org.apache.openjpa.lib.util.TestSimpleRegex.main(String[]),8,9
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity.LifeCycleDDEntity(),3,3
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity.LifeCycleDDEntity(String,String)",6,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity.verifyPrePersist(),10,13
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity.verifyPostPersist(),10,13
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity.verifyPreRemove(),10,13
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity.getId(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity.setName(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity.getName(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity.setSurName(String),5,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity.getSurName(),4,4
org.apache.openjpa.persistence.delimited.identifiers.EntityI4.EntityI4(),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityI4.EntityI4(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityI4.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityI4.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityI4.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityI4.setName(String),4,10
"org.apache.openjpa.util.Proxies.isOwner(Proxy,OpenJPAStateManager,int)",10,19
"org.apache.openjpa.util.Proxies.assertAllowedType(Object,Class)",23,42
"org.apache.openjpa.util.Proxies.dirty(Proxy,boolean)",9,27
"org.apache.openjpa.util.Proxies.removed(Proxy,Object,boolean)",11,24
"org.apache.openjpa.util.Proxies.writeReplace(Proxy,boolean)",65,227
org.apache.openjpa.persistence.jdbc.common.apps.InvertA.InvertA(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.InvertA.InvertA(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.InvertA.getInvertB(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.InvertA.setInvertB(InvertB),2,4
org.apache.openjpa.persistence.jdbc.common.apps.InvertA.setTest(String),3,4
org.apache.openjpa.persistence.jdbc.common.apps.InvertA.getTest(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.InvertA.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.InvertA.setId(int),1,1
org.apache.openjpa.persistence.query.IsNullExpression.IsNullExpression(Expression),5,10
org.apache.openjpa.persistence.query.IsNullExpression.asExpression(AliasContext),7,9
org.apache.openjpa.persistence.detachment.model.DMItem.getId(),0,0
org.apache.openjpa.persistence.detachment.model.DMItem.setId(long),1,1
org.apache.openjpa.persistence.detachment.model.DMItem.getName(),2,3
org.apache.openjpa.persistence.detachment.model.DMItem.setName(String),3,6
org.apache.openjpa.persistence.detachment.model.DMItem.getPrice(),1,2
org.apache.openjpa.persistence.detachment.model.DMItem.setPrice(double),2,5
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.Car(),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.Car(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.getModel(),2,4
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.setModel(String),5,10
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.getColor(),2,4
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.setColor(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.getModelYear(),2,4
org.apache.openjpa.persistence.delimited.identifiers.xml.Car.setModelYear(String),4,10
"org.apache.openjpa.persistence.NoResultException.NoResultException(String,Throwable[],Object,boolean)",9,16
org.apache.openjpa.persistence.NoResultException.getType(),2,2
org.apache.openjpa.persistence.NoResultException.getSubtype(),4,4
org.apache.openjpa.persistence.NoResultException.isFatal(),1,2
org.apache.openjpa.persistence.NoResultException.getCause(),5,6
org.apache.openjpa.persistence.NoResultException.getNestedThrowables(),5,8
org.apache.openjpa.persistence.NoResultException.getFailedObject(),2,4
org.apache.openjpa.persistence.NoResultException.toString(),2,4
org.apache.openjpa.persistence.NoResultException.printStackTrace(),5,8
org.apache.openjpa.persistence.NoResultException.printStackTrace(PrintStream),7,12
org.apache.openjpa.persistence.NoResultException.printStackTrace(PrintWriter),7,12
org.apache.openjpa.persistence.NoResultException.writeObject(ObjectOutputStream),11,22
org.apache.openjpa.persistence.NoResultException.readObject(ObjectInputStream),10,17
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.setUp(),1,1
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.testDerbyDynamicSchema(),30,48
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.testDB2DynamicSchema(),27,40
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.testOracleDynamicSchema(),31,48
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.testAccessDynamicSchema(),32,50
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.testSQLServerDynamicSchema(),30,46
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.testMariaDBDynamicSchema(),31,47
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.testMySQLDynamicSchema(),30,47
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.testPostgresDynamicSchema(),29,45
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.testInformixDynamicSchema(),28,45
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.testSybaseDynamicSchema(),30,48
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.testFirebirdDynamicSchema(),30,46
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.createEMF(Object),15,36
org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.validateTableName(OpenJPAEntityManagerFactorySPI),26,86
"org.apache.openjpa.persistence.dynamicschema.TestDynamicSchemas.validateColumnNames(Table,DBDictionary)",15,34
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.setUp(),12,15
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.testAttrOverride1(),15,20
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.testAttrOverride2(),17,22
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.testEmbeddableOrderBy(),8,11
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.createObj1(),14,22
"org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.createCustomer(EntityManager,int)",11,28
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.findObj1(),13,25
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.queryObj1(),21,33
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.createObj2(),15,23
"org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.createPropertyRecord(EntityManager,int)",31,105
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.findObj2(),24,87
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.queryObj2(),22,35
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.assertAttrOverrides(String),23,62
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.createObj3(),14,22
"org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.createPerson(EntityManager,int)",19,54
org.apache.openjpa.persistence.embed.attrOverrides.TestAttrOverrides.findObj3(),21,75
org.apache.openjpa.persistence.query.ArrayExpression.ArrayExpression(Object[]),4,6
org.apache.openjpa.persistence.query.ArrayExpression.asExpression(AliasContext),19,37
org.apache.openjpa.persistence.query.ArrayExpression.asProjection(AliasContext),6,7
org.apache.openjpa.meta.MetaDataFactory.setRepository(MetaDataRepository),9,12
org.apache.openjpa.meta.MetaDataFactory.setStoreDirectory(File),9,10
org.apache.openjpa.meta.MetaDataFactory.setStoreMode(int),5,7
org.apache.openjpa.meta.MetaDataFactory.setStrict(boolean),9,10
"org.apache.openjpa.meta.MetaDataFactory.load(Class<>,int,ClassLoader)",29,60
"org.apache.openjpa.meta.MetaDataFactory.store(ClassMetaData[],QueryMetaData[],SequenceMetaData[],int,Map<File,String>)",29,47
"org.apache.openjpa.meta.MetaDataFactory.drop(Class<>[],int,ClassLoader)",8,12
org.apache.openjpa.meta.MetaDataFactory.getDefaults(),5,7
"org.apache.openjpa.meta.MetaDataFactory.getPersistentTypeNames(boolean,ClassLoader)",30,49
"org.apache.openjpa.meta.MetaDataFactory.getQueryScope(String,ClassLoader)",7,11
"org.apache.openjpa.meta.MetaDataFactory.getResultSetMappingScope(String,ClassLoader)",9,17
org.apache.openjpa.meta.MetaDataFactory.newClassArgParser(),7,11
org.apache.openjpa.meta.MetaDataFactory.clear(),2,2
org.apache.openjpa.meta.MetaDataFactory.addClassExtensionKeys(Collection<>),7,10
org.apache.openjpa.meta.MetaDataFactory.addFieldExtensionKeys(Collection<>),8,11
org.apache.openjpa.meta.MetaDataFactory.loadXMLMetaData(Class<>),10,13
org.apache.openjpa.meta.MetaDataFactory.getMetaModelClassName(String),6,13
org.apache.openjpa.meta.MetaDataFactory.getManagedClassName(String),7,12
org.apache.openjpa.meta.MetaDataFactory.isMetaClass(Class<>),2,3
org.apache.openjpa.meta.MetaDataFactory.getManagedClass(Class<>),4,6
"org.apache.openjpa.datacache.DataCachePCDataImpl.DataCachePCDataImpl(Object,ClassMetaData)",7,14
"org.apache.openjpa.datacache.DataCachePCDataImpl.DataCachePCDataImpl(Object,ClassMetaData,String)",15,28
org.apache.openjpa.datacache.DataCachePCDataImpl.isTimedOut(),6,7
org.apache.openjpa.datacache.DataCachePCDataImpl.getTimeOut(),2,2
org.apache.openjpa.datacache.DataCachePCDataImpl.getData(int),3,5
"org.apache.openjpa.datacache.DataCachePCDataImpl.setData(int,Object)",5,9
org.apache.openjpa.datacache.DataCachePCDataImpl.clearData(int),2,4
org.apache.openjpa.datacache.DataCachePCDataImpl.getImplData(),3,5
org.apache.openjpa.datacache.DataCachePCDataImpl.setImplData(Object),5,9
org.apache.openjpa.datacache.DataCachePCDataImpl.getImplData(int),4,7
"org.apache.openjpa.datacache.DataCachePCDataImpl.setImplData(int,Object)",6,11
org.apache.openjpa.datacache.DataCachePCDataImpl.getIntermediate(int),3,5
"org.apache.openjpa.datacache.DataCachePCDataImpl.setIntermediate(int,Object)",5,9
org.apache.openjpa.datacache.DataCachePCDataImpl.isLoaded(int),2,4
"org.apache.openjpa.datacache.DataCachePCDataImpl.setLoaded(int,boolean)",3,8
org.apache.openjpa.datacache.DataCachePCDataImpl.getVersion(),2,3
org.apache.openjpa.datacache.DataCachePCDataImpl.setVersion(Object),3,7
org.apache.openjpa.datacache.DataCachePCDataImpl.store(OpenJPAStateManager),3,4
"org.apache.openjpa.datacache.DataCachePCDataImpl.store(OpenJPAStateManager,BitSet)",6,8
"org.apache.openjpa.datacache.DataCachePCDataImpl.storeField(OpenJPAStateManager,FieldMetaData)",34,64
"org.apache.openjpa.datacache.DataCachePCDataImpl.clearInverseRelationCache(OpenJPAStateManager,FieldMetaData)",24,82
"org.apache.openjpa.datacache.DataCachePCDataImpl.toData(FieldMetaData,Object,StoreContext)",16,24
"org.apache.openjpa.datacache.DataCachePCDataImpl.toNestedData(ValueMetaData,Object,StoreContext)",21,35
org.apache.openjpa.datacache.DataCachePCDataImpl.newEmbeddedPCData(OpenJPAStateManager),7,12
org.apache.openjpa.persistence.cache.jpa.model.CacheEntity.setId(int),1,1
org.apache.openjpa.persistence.cache.jpa.model.CacheEntity.setName(String),3,4
org.apache.openjpa.persistence.cache.jpa.model.CacheEntity.getName(),2,2
org.apache.openjpa.persistence.embed.attrOverrides.Zipcode.getZip(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.Zipcode.setZip(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.Zipcode.getPlusFour(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.Zipcode.setPlusFour(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.Zipcode.equals(Object),5,11
org.apache.openjpa.persistence.embed.attrOverrides.Zipcode.hashCode(),5,14
"org.apache.openjpa.persistence.PersistenceProviderImpl.createEntityManagerFactory(String,String,Map)",99,227
"org.apache.openjpa.persistence.PersistenceProviderImpl.getBrokerFactory(ConfigurationProvider,Object,ClassLoader)",20,58
"org.apache.openjpa.persistence.PersistenceProviderImpl.createEntityManagerFactory(String,Map)",8,16
"org.apache.openjpa.persistence.PersistenceProviderImpl.createContainerEntityManagerFactory(PersistenceUnitInfo,Map)",84,216
"org.apache.openjpa.persistence.PersistenceProviderImpl.setPersistenceEnvironmentInfo(OpenJPAConfiguration,PersistenceUnitInfo)",33,85
org.apache.openjpa.persistence.PersistenceProviderImpl.getProviderUtil(),6,11
org.apache.openjpa.persistence.PersistenceProviderImpl.getDefaultBrokerAlias(),15,22
org.apache.openjpa.persistence.PersistenceProviderImpl.newConfigurationImpl(),15,27
"org.apache.openjpa.persistence.PersistenceProviderImpl.ClassTransformerImpl.ClassTransformerImpl(ConfigurationProvider,String,ClassLoader,OpenJPAConfiguration)",30,53
"org.apache.openjpa.persistence.PersistenceProviderImpl.ClassTransformerImpl.ClassTransformerImpl(ConfigurationProvider,String,ClassLoader,OpenJPAConfiguration).$1.getClassLoader(Class<>,ClassLoader)",4,7
"org.apache.openjpa.persistence.PersistenceProviderImpl.ClassTransformerImpl.transform(ClassLoader,String,Class<>,ProtectionDomain,byte[])",13,18
org.apache.openjpa.persistence.PersistenceProviderImpl.loadAgent(BrokerFactory),19,44
org.apache.openjpa.persistence.PersistenceProviderImpl.loadValidator(BrokerFactory),33,58
org.apache.openjpa.persistence.PersistenceProviderImpl.isLoaded(Object),17,32
"org.apache.openjpa.persistence.PersistenceProviderImpl.isLoadedWithReference(Object,String)",42,74
"org.apache.openjpa.persistence.PersistenceProviderImpl.isLoadedWithoutReference(Object,String)",26,48
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.getStringCollection(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.setStringCollection(Collection),3,10
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.getStringList(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.setStringList(List),3,10
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.getOneManyCollection(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.setOneManyCollection(Collection),2,6
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.getManyManyCollection(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.setManyManyCollection(Collection),2,6
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.getManyManyList(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.setManyManyList(List),2,6
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.setName(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.toString(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.getHelper(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC.setHelper(HelperPC),2,6
org.apache.openjpa.ee.WASRegistryManagedRuntime.doNonTransactionalWork(Runnable),29,56
org.apache.openjpa.ee.WASRegistryManagedRuntime.DelegatingUOWAction.DelegatingUOWAction(Runnable),6,7
org.apache.openjpa.ee.WASRegistryManagedRuntime.DelegatingUOWAction.run(),3,4
org.apache.openjpa.persistence.enhance.common.apps.BasicSubclassInstance.getId(),0,0
org.apache.openjpa.persistence.enhance.common.apps.BasicSubclassInstance.setId(long),1,1
org.apache.openjpa.persistence.enhance.common.apps.BasicSubclassInstance.getVersion(),1,2
org.apache.openjpa.persistence.enhance.common.apps.BasicSubclassInstance.setVersion(int),2,3
org.apache.openjpa.persistence.enhance.common.apps.BasicSubclassInstance.getStringField(),2,5
org.apache.openjpa.persistence.enhance.common.apps.BasicSubclassInstance.setStringField(String),4,8
org.apache.openjpa.persistence.enhance.identity.Employee2.getEmpId(),2,3
org.apache.openjpa.persistence.enhance.identity.Employee2.setEmpId(EmployeeId2),3,6
org.apache.openjpa.persistence.enhance.identity.Employee2.getDependents(),3,4
org.apache.openjpa.persistence.enhance.identity.Employee2.setDependents(List<Dependent2>),4,7
org.apache.openjpa.persistence.enhance.identity.Employee2.addDependent(Dependent2),3,5
org.apache.openjpa.persistence.enhance.identity.Employee2.equals(Object),9,24
org.apache.openjpa.persistence.enhance.identity.Employee2.hashCode(),6,15
org.apache.openjpa.persistence.detachment.TestDetachedEntityCascadePersist.setUp(),5,7
org.apache.openjpa.persistence.detachment.TestDetachedEntityCascadePersist.testDetachedEntityCascadePersist(),33,121
"org.apache.openjpa.audit.InplaceAuditor.audit(Broker,Collection<Audited>,Collection<Audited>,Collection<Audited>)",9,24
org.apache.openjpa.audit.InplaceAuditor.isRollbackOnError(),2,2
"org.apache.openjpa.audit.InplaceAuditor.recordAudits(Broker,Collection<Audited>)",16,29
org.apache.openjpa.audit.InplaceAuditor.setConfiguration(Configuration),3,4
org.apache.openjpa.audit.InplaceAuditor.startConfiguration(),2,2
org.apache.openjpa.audit.InplaceAuditor.endConfiguration(),1,1
org.apache.openjpa.audit.InplaceAuditor.close(),2,2
org.apache.openjpa.persistence.jdbc.ResultSetType.ResultSetType(int),5,8
org.apache.openjpa.persistence.jdbc.ResultSetType.toKernelConstant(),4,5
org.apache.openjpa.persistence.jdbc.ResultSetType.fromKernelConstant(int),12,33
org.apache.openjpa.persistence.jdbc.ResultSetType.convertToKernelConstant(String),7,10
org.apache.openjpa.persistence.jdbc.ResultSetType.convertToKernelConstant(int),15,25
org.apache.openjpa.persistence.jdbc.ResultSetType.toKernelConstantFromString(String),16,34
org.apache.openjpa.enhance.EnhancedSuperClass.getId(),0,0
org.apache.openjpa.enhance.EnhancedSuperClass.setId(Long),1,1
org.apache.openjpa.enhance.EnhancedSuperClass.getValueInSuperclass(),3,5
org.apache.openjpa.enhance.EnhancedSuperClass.setValueInSuperclass(String),4,10
org.apache.openjpa.util.custom.CustomProxyDefaultScopeType.CustomProxyDefaultScopeType(),4,4
org.apache.openjpa.util.custom.CustomProxyDefaultScopeType.CustomProxyDefaultScopeType(CustomProxyDefaultScopeType),5,10
org.apache.openjpa.util.custom.CustomProxyDefaultScopeType.getData(),1,2
org.apache.openjpa.util.custom.CustomProxyDefaultScopeType.setData(int),2,5
org.apache.openjpa.util.custom.CustomProxyDefaultScopeType.instance(),6,6
org.apache.openjpa.util.NoTransactionException.NoTransactionException(Message),4,5
org.apache.openjpa.util.NoTransactionException.getSubtype(),2,2
org.apache.openjpa.persistence.discriminator.TestDiscriminatorTypes.setUp(),7,24
org.apache.openjpa.persistence.discriminator.TestDiscriminatorTypes.testCharDiscriminators(),26,93
org.apache.openjpa.persistence.discriminator.TestDiscriminatorTypes.testIntDiscriminators(),27,110
org.apache.openjpa.persistence.discriminator.TestDiscriminatorTypes.testStringDiscriminators(),26,110
org.apache.openjpa.persistence.discriminator.TestDiscriminatorTypes.testExistsQuery(),24,71
org.apache.openjpa.persistence.jdbc.common.apps.HorizJ.setStringJ(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizJ.getStringJ(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizJ.setIntJ(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizJ.getIntJ(),0,0
org.apache.openjpa.lib.conf.PluginListValue.PluginListValue(String),5,6
org.apache.openjpa.lib.conf.PluginListValue.getClassNames(),3,5
org.apache.openjpa.lib.conf.PluginListValue.setClassNames(String[]),7,14
org.apache.openjpa.lib.conf.PluginListValue.getProperties(),4,5
org.apache.openjpa.lib.conf.PluginListValue.setProperties(String[]),8,14
"org.apache.openjpa.lib.conf.PluginListValue.instantiate(Class<>,Configuration,boolean)",19,47
org.apache.openjpa.lib.conf.PluginListValue.getString(),16,33
org.apache.openjpa.lib.conf.PluginListValue.setString(String),32,126
org.apache.openjpa.lib.conf.PluginListValue.getValueType(),3,4
org.apache.openjpa.lib.conf.PluginListValue.objectChanged(),9,22
org.apache.openjpa.lib.conf.PluginListValue.getInternalString(),5,6
org.apache.openjpa.lib.conf.PluginListValue.setInternalString(String),7,8
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest4.getFlatValue(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest4.setFlatValue(int),3,9
org.apache.openjpa.instrumentation.SimpleProvider.start(),3,3
org.apache.openjpa.instrumentation.SimpleProvider.stop(),6,9
org.apache.openjpa.instrumentation.SimpleProvider.startInstrument(Instrument),2,6
"org.apache.openjpa.instrumentation.SimpleProvider.stopInstrument(Instrument,boolean)",3,7
org.apache.openjpa.instrumentation.SimpleProvider.getInstrumentAliases(),4,6
org.apache.openjpa.persistence.compat.Uni_MTo1_JT.getId(),0,0
org.apache.openjpa.persistence.compat.Uni_MTo1_JT.getName(),2,3
org.apache.openjpa.persistence.compat.Uni_MTo1_JT.setName(String),3,6
org.apache.openjpa.persistence.compat.Uni_MTo1_JT.getEntityC(),1,3
org.apache.openjpa.persistence.compat.Uni_MTo1_JT.setEntityC(EntityC),2,6
org.apache.openjpa.persistence.compat.Uni_MTo1_JT.hashCode(),3,5
org.apache.openjpa.persistence.compat.Uni_MTo1_JT.equals(Object),5,13
"org.apache.openjpa.persistence.query.AbstractDomainObject.AbstractDomainObject(QueryDefinitionImpl,AbstractPath,PathOperator,Object)",9,13
org.apache.openjpa.persistence.query.AbstractDomainObject.addRoot(Class),10,16
org.apache.openjpa.persistence.query.AbstractDomainObject.addSubqueryRoot(PathExpression),12,20
org.apache.openjpa.persistence.query.AbstractDomainObject.get(String),9,13
org.apache.openjpa.persistence.query.AbstractDomainObject.join(String),16,24
org.apache.openjpa.persistence.query.AbstractDomainObject.leftJoin(String),17,26
org.apache.openjpa.persistence.query.AbstractDomainObject.joinFetch(String),14,23
org.apache.openjpa.persistence.query.AbstractDomainObject.leftJoinFetch(String),15,24
org.apache.openjpa.persistence.query.AbstractDomainObject.key(),5,9
org.apache.openjpa.persistence.query.AbstractDomainObject.entry(),7,9
org.apache.openjpa.persistence.query.AbstractDomainObject.index(),5,8
org.apache.openjpa.persistence.query.AbstractDomainObject.value(),5,10
org.apache.openjpa.persistence.query.AbstractDomainObject.all(),6,7
org.apache.openjpa.persistence.query.AbstractDomainObject.any(),6,7
org.apache.openjpa.persistence.query.AbstractDomainObject.some(),6,7
org.apache.openjpa.persistence.query.AbstractDomainObject.exists(),8,10
org.apache.openjpa.persistence.query.AbstractDomainObject.coalesce(Expression),6,7
org.apache.openjpa.persistence.query.AbstractDomainObject.coalesce(String),7,7
org.apache.openjpa.persistence.query.AbstractDomainObject.coalesce(Date),7,7
org.apache.openjpa.persistence.query.AbstractDomainObject.coalesce(Calendar),7,7
org.apache.openjpa.persistence.query.AbstractDomainObject.currentDate(),4,6
org.apache.openjpa.persistence.query.AbstractDomainObject.currentTime(),4,6
org.apache.openjpa.persistence.query.AbstractDomainObject.currentTimestamp(),4,6
org.apache.openjpa.persistence.query.AbstractDomainObject.generalCase(),2,2
org.apache.openjpa.persistence.query.AbstractDomainObject.groupBy(PathExpression),6,9
org.apache.openjpa.persistence.query.AbstractDomainObject.groupBy(List<PathExpression>),7,12
org.apache.openjpa.persistence.query.AbstractDomainObject.having(Predicate),4,6
org.apache.openjpa.persistence.query.AbstractDomainObject.literal(String),4,5
org.apache.openjpa.persistence.query.AbstractDomainObject.literal(Number),3,4
org.apache.openjpa.persistence.query.AbstractDomainObject.literal(boolean),3,4
org.apache.openjpa.persistence.query.AbstractDomainObject.literal(Calendar),4,5
org.apache.openjpa.persistence.query.AbstractDomainObject.literal(Date),4,5
org.apache.openjpa.persistence.query.AbstractDomainObject.literal(char),3,4
org.apache.openjpa.persistence.query.AbstractDomainObject.literal(Class),4,6
org.apache.openjpa.persistence.query.AbstractDomainObject.literal(Enum<>),3,4
"org.apache.openjpa.persistence.query.AbstractDomainObject.newInstance(Class,SelectItem)",6,11
org.apache.openjpa.persistence.query.AbstractDomainObject.nullLiteral(),3,4
"org.apache.openjpa.persistence.query.AbstractDomainObject.nullif(Expression,Expression)",4,10
"org.apache.openjpa.persistence.query.AbstractDomainObject.nullif(Number,Number)",4,8
"org.apache.openjpa.persistence.query.AbstractDomainObject.nullif(String,String)",5,10
"org.apache.openjpa.persistence.query.AbstractDomainObject.nullif(Date,Date)",5,10
"org.apache.openjpa.persistence.query.AbstractDomainObject.nullif(Calendar,Calendar)",5,10
"org.apache.openjpa.persistence.query.AbstractDomainObject.nullif(Class,Class)",4,8
"org.apache.openjpa.persistence.query.AbstractDomainObject.nullif(Enum<>,Enum<>)",4,8
org.apache.openjpa.persistence.query.AbstractDomainObject.orderBy(OrderByItem),5,6
org.apache.openjpa.persistence.query.AbstractDomainObject.orderBy(List<OrderByItem>),5,9
org.apache.openjpa.persistence.query.AbstractDomainObject.param(String),5,7
org.apache.openjpa.persistence.query.AbstractDomainObject.predicate(boolean),2,4
org.apache.openjpa.persistence.query.AbstractDomainObject.select(SelectItem),6,11
org.apache.openjpa.persistence.query.AbstractDomainObject.select(List<SelectItem>),6,14
org.apache.openjpa.persistence.query.AbstractDomainObject.selectDistinct(SelectItem),7,13
org.apache.openjpa.persistence.query.AbstractDomainObject.selectDistinct(List<SelectItem>),7,16
org.apache.openjpa.persistence.query.AbstractDomainObject.simpleCase(Expression),4,7
org.apache.openjpa.persistence.query.AbstractDomainObject.simpleCase(Number),4,6
org.apache.openjpa.persistence.query.AbstractDomainObject.simpleCase(String),5,7
org.apache.openjpa.persistence.query.AbstractDomainObject.simpleCase(Date),5,7
org.apache.openjpa.persistence.query.AbstractDomainObject.simpleCase(Calendar),5,7
org.apache.openjpa.persistence.query.AbstractDomainObject.simpleCase(Class),4,6
org.apache.openjpa.persistence.query.AbstractDomainObject.simpleCase(Enum<>),4,6
org.apache.openjpa.persistence.query.AbstractDomainObject.where(Predicate),4,6
org.apache.openjpa.persistence.criteria.Account.getId(),0,0
org.apache.openjpa.persistence.criteria.Account.getOwner(),2,3
org.apache.openjpa.persistence.criteria.Account.setOwner(Person),3,6
org.apache.openjpa.persistence.criteria.Account.getName(),2,3
org.apache.openjpa.persistence.criteria.Account.setName(String),3,6
org.apache.openjpa.persistence.criteria.Account.getBalance(),1,2
org.apache.openjpa.persistence.criteria.Account.setBalance(int),2,5
org.apache.openjpa.persistence.criteria.Account.getLoan(),2,3
org.apache.openjpa.persistence.criteria.Account.setLoan(Integer),3,6
org.apache.openjpa.persistence.criteria.Account.getProduct(),1,3
org.apache.openjpa.persistence.criteria.Account.setProduct(Product),2,6
org.apache.openjpa.persistence.criteria.Account.getCustomer(),1,3
org.apache.openjpa.persistence.criteria.Account.setCustomer(Customer),2,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.Department.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.Department.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.Department.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.Department.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.Department.equals(Object),4,8
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.Department.hashCode(),4,11
org.apache.openjpa.lib.log.AbstractLog.isEnabled(short),5,7
"org.apache.openjpa.lib.log.AbstractLog.log(short,String,Throwable)",10,22
org.apache.openjpa.lib.log.AbstractLog.isTraceEnabled(),2,4
org.apache.openjpa.lib.log.AbstractLog.isInfoEnabled(),2,4
org.apache.openjpa.lib.log.AbstractLog.isWarnEnabled(),2,4
org.apache.openjpa.lib.log.AbstractLog.isErrorEnabled(),2,4
org.apache.openjpa.lib.log.AbstractLog.isFatalEnabled(),2,4
org.apache.openjpa.lib.log.AbstractLog.trace(Object),5,8
"org.apache.openjpa.lib.log.AbstractLog.trace(Object,Throwable)",8,13
org.apache.openjpa.lib.log.AbstractLog.info(Object),5,8
"org.apache.openjpa.lib.log.AbstractLog.info(Object,Throwable)",8,13
org.apache.openjpa.lib.log.AbstractLog.warn(Object),5,8
"org.apache.openjpa.lib.log.AbstractLog.warn(Object,Throwable)",8,13
org.apache.openjpa.lib.log.AbstractLog.error(Object),5,8
"org.apache.openjpa.lib.log.AbstractLog.error(Object,Throwable)",8,13
org.apache.openjpa.lib.log.AbstractLog.fatal(Object),5,8
"org.apache.openjpa.lib.log.AbstractLog.fatal(Object,Throwable)",8,13
org.apache.openjpa.lib.log.AbstractLog.getStackTrace(Throwable),10,23
"org.apache.openjpa.lib.log.AbstractLog.throwableParam(Object,Throwable)",5,12
org.apache.openjpa.lib.log.AbstractLog.toString(Object),3,7
org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLException),7,12
"org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLException,Object)",9,15
"org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLException,DBDictionary)",10,16
"org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLException,DBDictionary,int)",11,18
"org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLException,Object,DBDictionary)",12,19
"org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(SQLException,Object,DBDictionary,int)",13,21
"org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(Message,SQLException,DBDictionary)",11,19
"org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(Message,SQLException,DBDictionary,int)",12,21
"org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(String,SQLException,DBDictionary)",11,18
"org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(String,SQLException,DBDictionary,int)",12,20
"org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(String,SQLException,Object,DBDictionary)",13,21
"org.apache.openjpa.jdbc.sql.SQLExceptions.getStore(String,SQLException,Object,DBDictionary,int)",22,65
org.apache.openjpa.jdbc.sql.SQLExceptions.getSQLExceptions(SQLException),16,37
org.apache.openjpa.persistence.criteria.TestRemoteQueryCacheCriteriaQuery.setUp(),22,39
org.apache.openjpa.persistence.criteria.TestRemoteQueryCacheCriteriaQuery.test(),19,32
"org.apache.openjpa.persistence.query.LessThanExpression.LessThanExpression(Expression,Expression)",5,10
"org.apache.openjpa.persistence.query.JoinPath.JoinPath(AbstractDomainObject,PathOperator,String)",9,15
org.apache.openjpa.persistence.query.JoinPath.getAliasHint(AliasContext),6,7
org.apache.openjpa.persistence.query.JoinPath.getLastSegment(),2,4
org.apache.openjpa.persistence.query.JoinPath.getParent(),3,6
org.apache.openjpa.persistence.query.JoinPath.asJoinable(AliasContext),12,22
org.apache.openjpa.persistence.query.JoinPath.asExpression(AliasContext),8,14
org.apache.openjpa.persistence.query.JoinPath.asProjection(AliasContext),8,14
org.apache.openjpa.persistence.query.JoinPath.toString(),4,6
"org.apache.openjpa.lib.util.ResourceBundleProvider.findResource(String,Locale,ClassLoader)",6,14
"org.apache.openjpa.persistence.query.NewInstance.NewInstance(Class,SelectItem)",7,12
org.apache.openjpa.persistence.query.NewInstance.asc(),5,5
org.apache.openjpa.persistence.query.NewInstance.desc(),5,5
org.apache.openjpa.persistence.query.NewInstance.asProjection(AliasContext),17,35
"org.apache.openjpa.persistence.query.TimesExpression.TimesExpression(Expression,Expression)",5,8
"org.apache.openjpa.lib.xml.XMLFactory.getSAXParser(boolean,boolean)",19,47
"org.apache.openjpa.lib.xml.XMLFactory.getDOMParser(boolean,boolean)",19,35
org.apache.openjpa.lib.xml.XMLFactory.getDocument(),3,7
"org.apache.openjpa.lib.xml.XMLFactory.factoryIndex(boolean,boolean)",7,20
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.Company.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.Company.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.Company.getOrganization(),2,3
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.Company.addToOrganization(Division,VicePresident)",5,8
org.apache.openjpa.datacache.CacheStatisticsImpl.getReadCount(),3,4
org.apache.openjpa.datacache.CacheStatisticsImpl.getHitCount(),3,4
org.apache.openjpa.datacache.CacheStatisticsImpl.getWriteCount(),3,4
org.apache.openjpa.datacache.CacheStatisticsImpl.getTotalReadCount(),4,6
org.apache.openjpa.datacache.CacheStatisticsImpl.getTotalHitCount(),4,6
org.apache.openjpa.datacache.CacheStatisticsImpl.getTotalWriteCount(),4,6
org.apache.openjpa.datacache.CacheStatisticsImpl.getReadCount(Class<>),3,5
org.apache.openjpa.datacache.CacheStatisticsImpl.getReadCount(String),5,8
org.apache.openjpa.datacache.CacheStatisticsImpl.getHitCount(Class<>),3,5
org.apache.openjpa.datacache.CacheStatisticsImpl.getHitCount(String),5,8
org.apache.openjpa.datacache.CacheStatisticsImpl.getWriteCount(Class<>),3,5
org.apache.openjpa.datacache.CacheStatisticsImpl.getWriteCount(String),5,8
org.apache.openjpa.datacache.CacheStatisticsImpl.getTotalReadCount(Class<>),4,7
org.apache.openjpa.datacache.CacheStatisticsImpl.getTotalReadCount(String),6,10
org.apache.openjpa.datacache.CacheStatisticsImpl.getTotalHitCount(Class<>),4,7
org.apache.openjpa.datacache.CacheStatisticsImpl.getTotalHitCount(String),6,10
org.apache.openjpa.datacache.CacheStatisticsImpl.getTotalWriteCount(Class<>),5,8
org.apache.openjpa.datacache.CacheStatisticsImpl.getTotalWriteCount(String),6,10
org.apache.openjpa.datacache.CacheStatisticsImpl.since(),1,1
org.apache.openjpa.datacache.CacheStatisticsImpl.start(),2,3
org.apache.openjpa.datacache.CacheStatisticsImpl.reset(),6,6
org.apache.openjpa.datacache.CacheStatisticsImpl.isEnabled(),1,2
org.apache.openjpa.datacache.CacheStatisticsImpl.classNames(),6,7
org.apache.openjpa.datacache.CacheStatisticsImpl.toMap(),9,18
org.apache.openjpa.datacache.CacheStatisticsImpl.enable(),4,4
org.apache.openjpa.datacache.CacheStatisticsImpl.disable(),2,2
"org.apache.openjpa.datacache.CacheStatisticsImpl.newGet(Class<>,boolean)",9,23
"org.apache.openjpa.datacache.CacheStatisticsImpl.newGet(Object,boolean)",6,10
org.apache.openjpa.datacache.CacheStatisticsImpl.newPut(Class<>),7,11
org.apache.openjpa.datacache.CacheStatisticsImpl.newPut(Object),5,8
"org.apache.openjpa.datacache.CacheStatisticsImpl.addSample(String,int)",9,20
"org.apache.openjpa.datacache.CacheStatisticsImpl.addSample(Map<String,long[]>,String,int)",9,17
"org.apache.openjpa.datacache.CacheStatisticsImpl.getCount(Map<String,long[]>,String,int)",6,11
org.apache.openjpa.lib.util.TestTypedProperties.TestTypedProperties(String),4,6
org.apache.openjpa.lib.util.TestTypedProperties.setUp(),7,24
org.apache.openjpa.lib.util.TestTypedProperties.testTypes(),9,23
org.apache.openjpa.lib.util.TestTypedProperties.testNoDefaults(),10,25
org.apache.openjpa.lib.util.TestTypedProperties.testDefaults(),12,27
org.apache.openjpa.lib.util.TestTypedProperties.testGivenDefaults(),8,40
org.apache.openjpa.lib.util.TestTypedProperties.suite(),4,7
org.apache.openjpa.lib.util.TestTypedProperties.main(String[]),7,7
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverridesXML.testElementCollectionAssocOverrides(),55,207
"org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverridesXML.assertSQLFragnments(List<String>,String)",13,26
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverridesXML.toString(List<String>),5,17
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverridesXML.cleanupEMF(OpenJPAEntityManagerFactorySPI),24,34
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverridesXML.SQLListener.beforeExecuteStatement(JDBCEvent),6,12
org.apache.openjpa.persistence.datacache.common.apps.M2MEntityF.M2MEntityF(),5,6
org.apache.openjpa.persistence.datacache.common.apps.M2MEntityF.getEntityE(),4,5
org.apache.openjpa.persistence.datacache.common.apps.M2MEntityF.getId(),0,0
org.apache.openjpa.persistence.datacache.common.apps.M2MEntityF.setId(int),1,1
org.apache.openjpa.persistence.datacache.common.apps.M2MEntityF.toString(),2,3
org.apache.openjpa.persistence.datacache.common.apps.M2MEntityF.print(),5,6
org.apache.openjpa.lib.util.ReferenceMap.removeExpired(),5,5
org.apache.openjpa.lib.util.ReferenceMap.keyExpired(Object),9,14
org.apache.openjpa.lib.util.ReferenceMap.valueExpired(Object),9,14
org.apache.openjpa.persistence.delimited.identifiers.EntityI.EntityI(),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityI.EntityI(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityI.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityI.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityI.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityI.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.EntityI.getEntityHs(),2,5
org.apache.openjpa.persistence.delimited.identifiers.EntityI.setEntityHs(Collection<EntityH>),4,11
org.apache.openjpa.persistence.delimited.identifiers.EntityI.addEntityH(EntityH),2,7
org.apache.openjpa.lib.util.concurrent.ConcurrentMap.removeRandom(),14,20
org.apache.openjpa.lib.util.concurrent.ConcurrentMap.randomEntryIterator(),9,12
org.apache.openjpa.persistence.generationtype.DogTable3.DogTable3(),2,2
org.apache.openjpa.persistence.generationtype.DogTable3.DogTable3(String),4,6
org.apache.openjpa.persistence.generationtype.DogTable3.getId2(),0,0
org.apache.openjpa.persistence.generationtype.DogTable3.setId2(int),1,1
org.apache.openjpa.persistence.generationtype.DogTable3.getName(),2,3
org.apache.openjpa.persistence.generationtype.DogTable3.setName(String),3,6
org.apache.openjpa.persistence.generationtype.DogTable3.getPrice(),1,2
org.apache.openjpa.persistence.generationtype.DogTable3.setPrice(float),2,5
org.apache.openjpa.persistence.generationtype.DogTable3.isDomestic(),1,2
org.apache.openjpa.persistence.generationtype.DogTable3.setDomestic(boolean),2,5
org.apache.openjpa.persistence.datacache.TestLocalCache.TestLocalCache(String),4,6
org.apache.openjpa.persistence.datacache.TestLocalCache.getConfs(),14,21
org.apache.openjpa.persistence.datacache.TestLocalCache.getConfs2(),14,21
org.apache.openjpa.persistence.query.QueryDefinition.addRoot(Class),19,31
org.apache.openjpa.persistence.query.QueryDefinition.addSubqueryRoot(PathExpression),23,55
org.apache.openjpa.persistence.query.QueryDefinition.select(SelectItem),21,34
org.apache.openjpa.persistence.query.QueryDefinition.select(List<SelectItem>),22,39
org.apache.openjpa.persistence.query.QueryDefinition.selectDistinct(SelectItem),25,38
org.apache.openjpa.persistence.query.QueryDefinition.selectDistinct(List<SelectItem>),26,45
org.apache.openjpa.persistence.query.QueryDefinition.where(Predicate),18,27
org.apache.openjpa.persistence.query.QueryDefinition.orderBy(OrderByItem),14,21
org.apache.openjpa.persistence.query.QueryDefinition.orderBy(List<OrderByItem>),15,26
org.apache.openjpa.persistence.query.QueryDefinition.groupBy(PathExpression),15,21
org.apache.openjpa.persistence.query.QueryDefinition.groupBy(List<PathExpression>),15,24
org.apache.openjpa.persistence.query.QueryDefinition.having(Predicate),11,16
"org.apache.openjpa.persistence.query.QueryDefinition.newInstance(Class,SelectItem)",24,43
org.apache.openjpa.persistence.query.QueryDefinition.exists(),7,10
org.apache.openjpa.persistence.query.QueryDefinition.all(),6,8
org.apache.openjpa.persistence.query.QueryDefinition.any(),6,8
org.apache.openjpa.persistence.query.QueryDefinition.some(),6,8
org.apache.openjpa.persistence.query.QueryDefinition.generalCase(),7,18
org.apache.openjpa.persistence.query.QueryDefinition.simpleCase(Expression),9,31
org.apache.openjpa.persistence.query.QueryDefinition.simpleCase(Number),11,31
org.apache.openjpa.persistence.query.QueryDefinition.simpleCase(String),11,31
org.apache.openjpa.persistence.query.QueryDefinition.simpleCase(Date),11,31
org.apache.openjpa.persistence.query.QueryDefinition.simpleCase(Calendar),11,31
org.apache.openjpa.persistence.query.QueryDefinition.simpleCase(Class),10,30
org.apache.openjpa.persistence.query.QueryDefinition.simpleCase(Enum<>),10,30
org.apache.openjpa.persistence.query.QueryDefinition.coalesce(Expression),14,21
org.apache.openjpa.persistence.query.QueryDefinition.coalesce(String),15,21
org.apache.openjpa.persistence.query.QueryDefinition.coalesce(Date),15,21
org.apache.openjpa.persistence.query.QueryDefinition.coalesce(Calendar),15,21
"org.apache.openjpa.persistence.query.QueryDefinition.nullif(Expression,Expression)",11,23
"org.apache.openjpa.persistence.query.QueryDefinition.nullif(Number,Number)",11,21
"org.apache.openjpa.persistence.query.QueryDefinition.nullif(String,String)",23,38
"org.apache.openjpa.persistence.query.QueryDefinition.nullif(Date,Date)",12,23
"org.apache.openjpa.persistence.query.QueryDefinition.nullif(Calendar,Calendar)",12,23
"org.apache.openjpa.persistence.query.QueryDefinition.nullif(Class,Class)",11,21
"org.apache.openjpa.persistence.query.QueryDefinition.nullif(Enum<>,Enum<>)",11,21
org.apache.openjpa.persistence.query.QueryDefinition.predicate(boolean),4,8
org.apache.openjpa.persistence.query.QueryDefinition.currentTime(),9,15
org.apache.openjpa.persistence.query.QueryDefinition.currentDate(),10,15
org.apache.openjpa.persistence.query.QueryDefinition.currentTimestamp(),10,15
org.apache.openjpa.persistence.query.QueryDefinition.literal(String),7,14
org.apache.openjpa.persistence.query.QueryDefinition.literal(Number),7,13
org.apache.openjpa.persistence.query.QueryDefinition.literal(boolean),2,2
org.apache.openjpa.persistence.query.QueryDefinition.literal(Calendar),7,14
org.apache.openjpa.persistence.query.QueryDefinition.literal(Date),7,14
org.apache.openjpa.persistence.query.QueryDefinition.literal(char),7,13
org.apache.openjpa.persistence.query.QueryDefinition.literal(Class),7,13
org.apache.openjpa.persistence.query.QueryDefinition.literal(Enum<>),5,9
org.apache.openjpa.persistence.query.QueryDefinition.nullLiteral(),5,9
org.apache.openjpa.persistence.query.QueryDefinition.param(String),8,14
"org.apache.openjpa.lib.rop.RangeResultObjectProvider.RangeResultObjectProvider(ResultObjectProvider,long,long)",29,100
org.apache.openjpa.lib.rop.RangeResultObjectProvider.supportsRandomAccess(),4,7
org.apache.openjpa.lib.rop.RangeResultObjectProvider.open(),2,2
org.apache.openjpa.lib.rop.RangeResultObjectProvider.getResultObject(),9,17
org.apache.openjpa.lib.rop.RangeResultObjectProvider.next(),12,27
org.apache.openjpa.lib.rop.RangeResultObjectProvider.absolute(int),6,12
org.apache.openjpa.lib.rop.RangeResultObjectProvider.size(),10,19
org.apache.openjpa.lib.rop.RangeResultObjectProvider.reset(),4,5
org.apache.openjpa.lib.rop.RangeResultObjectProvider.close(),3,4
org.apache.openjpa.lib.rop.RangeResultObjectProvider.handleCheckedException(Exception),4,8
org.apache.openjpa.lib.rop.RangeResultObjectProvider.getDelegate(),4,5
org.apache.openjpa.openjpa2018.OpenJPA2018Test.setUp(),3,4
org.apache.openjpa.openjpa2018.OpenJPA2018Test.testInCriteriaWithArray(),21,60
org.apache.openjpa.openjpa2018.OpenJPA2018Test.testInJpqlWithArray(),19,38
org.apache.openjpa.openjpa2018.OpenJPA2018Test.testInCriteriaWithCollection(),22,63
org.apache.openjpa.openjpa2018.OpenJPA2018Test.testInJpqlWithCollection(),20,40
org.apache.openjpa.openjpa2018.OpenJPA2018Test.testId(),21,59
org.apache.openjpa.persistence.enhance.identity.Dependent1.getEmp(),2,3
org.apache.openjpa.persistence.enhance.identity.Dependent1.setEmp(Employee1),3,6
org.apache.openjpa.persistence.enhance.identity.Dependent1.getId(),1,1
org.apache.openjpa.persistence.enhance.identity.Dependent1.setId(DependentId1),2,2
org.apache.openjpa.persistence.enhance.identity.Dependent1.equals(Object),5,13
org.apache.openjpa.persistence.enhance.identity.Dependent1.hashCode(),4,13
org.apache.openjpa.lib.util.Base16Encoder.encode(byte[]),11,25
org.apache.openjpa.lib.util.Base16Encoder.decode(String),8,26
org.apache.openjpa.persistence.detachment.model.DMCustomer.DMCustomer(),1,1
org.apache.openjpa.persistence.detachment.model.DMCustomer.getId(),0,0
org.apache.openjpa.persistence.detachment.model.DMCustomer.setId(long),1,1
org.apache.openjpa.persistence.detachment.model.DMCustomer.getFirstName(),2,3
org.apache.openjpa.persistence.detachment.model.DMCustomer.setFirstName(String),3,6
org.apache.openjpa.persistence.detachment.model.DMCustomer.getLastName(),2,3
org.apache.openjpa.persistence.detachment.model.DMCustomer.setLastName(String),3,6
org.apache.openjpa.persistence.detachment.model.DMCustomer.getCustomerInventories(),4,7
org.apache.openjpa.persistence.detachment.model.DMCustomer.setCustomerInventories(List<DMCustomerInventory>),5,12
org.apache.openjpa.persistence.detachment.model.DMCustomer.setCal(Calendar),3,4
org.apache.openjpa.persistence.detachment.model.DMCustomer.getCal(),2,3
"org.apache.openjpa.kernel.OrderingMergedResultObjectProvider.OrderingMergedResultObjectProvider(ResultObjectProvider[],boolean[],StoreQuery.Executor,StoreQuery,Object[])",11,24
"org.apache.openjpa.kernel.OrderingMergedResultObjectProvider.OrderingMergedResultObjectProvider(ResultObjectProvider[],boolean[],StoreQuery.Executor[],StoreQuery,Object[])",14,28
"org.apache.openjpa.kernel.OrderingMergedResultObjectProvider.getOrderingValue(Object,int,ResultObjectProvider)",16,36
org.apache.openjpa.kernel.OrderingMergedResultObjectProvider.OrderingComparator.OrderingComparator(boolean[]),2,4
"org.apache.openjpa.kernel.OrderingMergedResultObjectProvider.OrderingComparator.compare(Object,Object)",6,23
"org.apache.openjpa.kernel.OrderingMergedResultObjectProvider.OrderingComparator.cmp(Object,Object,boolean)",5,12
org.apache.openjpa.persistence.jdbc.maps.qualified.path.Division.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.qualified.path.Division.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.qualified.path.Division.getEmployees(),4,5
"org.apache.openjpa.persistence.jdbc.maps.qualified.path.Division.setEmployees(Map<Employee,String>)",5,8
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCLeafB1.getLeafB1Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCLeafB1.setLeafB1Data(String),4,10
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEmbedB.setName(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEmbedB.getName(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEmbedB.setEb(XMLAssocOverEntityB),4,4
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEmbedB.getEb(),3,3
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEmbedB.setMeb(XMLAssocOverEntityB),5,8
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEmbedB.getMeb(),4,5
org.apache.openjpa.persistence.enhance.identity.DependentId1Xml.DependentId1Xml(),2,2
"org.apache.openjpa.persistence.enhance.identity.DependentId1Xml.DependentId1Xml(String,long)",5,9
org.apache.openjpa.persistence.enhance.identity.DependentId1Xml.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.DependentId1Xml.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.DependentId1Xml.setEmpPK(long),2,5
org.apache.openjpa.persistence.enhance.identity.DependentId1Xml.getEmpPK(),1,2
org.apache.openjpa.persistence.enhance.identity.DependentId1Xml.equals(Object),6,16
org.apache.openjpa.persistence.enhance.identity.DependentId1Xml.hashCode(),5,12
"org.apache.openjpa.kernel.ResultShapePacker.ResultShapePacker(Class<>[],String[],Class,ResultShape<>)",9,19
org.apache.openjpa.kernel.ResultShapePacker.pack(Object),2,5
org.apache.openjpa.kernel.ResultShapePacker.pack(Object[]),16,34
org.apache.openjpa.persistence.annotations.TestEntityOrderBy.TestEntityOrderBy(String),5,6
org.apache.openjpa.persistence.annotations.TestEntityOrderBy.setUp(),8,12
org.apache.openjpa.persistence.annotations.TestEntityOrderBy.testUse(),24,126
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DateValidator.prePersist(Schedule),10,12
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DateValidator.postPersist(Schedule),10,12
"org.apache.openjpa.kernel.exps.InstanceofExpression.InstanceofExpression(Val,Class)",8,13
"org.apache.openjpa.kernel.exps.InstanceofExpression.eval(Object,Object,StoreContext,Object[])",14,24
"org.apache.openjpa.kernel.exps.InstanceofExpression.eval(Collection,StoreContext,Object[])",15,21
org.apache.openjpa.kernel.exps.InstanceofExpression.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.kernel.exps.Sum.Sum(Val),5,8
org.apache.openjpa.kernel.exps.Sum.getType(Class),4,8
"org.apache.openjpa.kernel.exps.Sum.operate(Collection,Class)",12,27
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TxRollbackEntity.TxRollbackEntity(),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TxRollbackEntity.TxRollbackEntity(String),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TxRollbackEntity.rollBackException(),9,12
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TxRollbackEntity.bomb(),8,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TxRollbackEntity.bomb2(),8,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TxRollbackEntity.getId(),0,0
org.apache.openjpa.event.LifecycleEventManager.isActive(ClassMetaData),19,26
org.apache.openjpa.event.LifecycleEventManager.isFailFast(),6,9
org.apache.openjpa.event.LifecycleEventManager.setFailFast(boolean),7,14
"org.apache.openjpa.event.LifecycleEventManager.addListener(Object,Class<>[])",14,61
org.apache.openjpa.event.LifecycleEventManager.removeListener(Object),11,34
"org.apache.openjpa.event.LifecycleEventManager.hasPersistListeners(Object,ClassMetaData)",11,29
"org.apache.openjpa.event.LifecycleEventManager.hasDeleteListeners(Object,ClassMetaData)",11,29
"org.apache.openjpa.event.LifecycleEventManager.hasClearListeners(Object,ClassMetaData)",9,19
"org.apache.openjpa.event.LifecycleEventManager.hasLoadListeners(Object,ClassMetaData)",10,16
"org.apache.openjpa.event.LifecycleEventManager.hasStoreListeners(Object,ClassMetaData)",10,22
"org.apache.openjpa.event.LifecycleEventManager.hasUpdateListeners(Object,ClassMetaData)",11,23
"org.apache.openjpa.event.LifecycleEventManager.hasDirtyListeners(Object,ClassMetaData)",10,22
"org.apache.openjpa.event.LifecycleEventManager.hasDetachListeners(Object,ClassMetaData)",10,22
"org.apache.openjpa.event.LifecycleEventManager.hasAttachListeners(Object,ClassMetaData)",10,22
"org.apache.openjpa.event.LifecycleEventManager.hasHandlers(Object,ClassMetaData,int)",8,15
"org.apache.openjpa.event.LifecycleEventManager.hasCallbacks(Object,ClassMetaData,int)",11,29
"org.apache.openjpa.event.LifecycleEventManager.hasListeners(Object,ClassMetaData,int)",18,53
"org.apache.openjpa.event.LifecycleEventManager.fireEvent(Object,ClassMetaData,int)",12,20
"org.apache.openjpa.event.LifecycleEventManager.fireEvent(Object,Object,ClassMetaData,int)",43,171
"org.apache.openjpa.event.LifecycleEventManager.makeCallbacks(Object,Object,ClassMetaData,int,Collection<Exception>)",17,41
"org.apache.openjpa.event.LifecycleEventManager.fireEvent(LifecycleEvent,Object,Object,int,ListenerList,boolean,List<Exception>)",37,379
org.apache.openjpa.event.LifecycleEventManager.ListenerAdapter.respondsTo(int),6,10
org.apache.openjpa.event.LifecycleEventManager.ListenerList.ListenerList(int),3,4
org.apache.openjpa.event.LifecycleEventManager.ListenerList.ListenerList(ListenerList),4,9
org.apache.openjpa.event.LifecycleEventManager.ListenerList.hasListeners(int),3,4
org.apache.openjpa.event.LifecycleEventManager.ListenerList.add(Object),6,11
org.apache.openjpa.event.LifecycleEventManager.ListenerList.remove(Object),8,13
org.apache.openjpa.event.LifecycleEventManager.ListenerList.getEventTypes(Object),20,129
org.apache.openjpa.persistence.generationtype.Dog.getId(),0,0
org.apache.openjpa.persistence.generationtype.Dog.setId(int),1,1
org.apache.openjpa.persistence.generationtype.Dog.getName(),2,3
org.apache.openjpa.persistence.generationtype.Dog.setName(String),3,6
org.apache.openjpa.persistence.generationtype.Dog.hashCode(),5,15
org.apache.openjpa.persistence.generationtype.Dog.equals(Object),5,14
org.apache.openjpa.persistence.generationtype.Dog.toString(),3,5
org.apache.openjpa.jdbc.kernel.M2MBiEmployee.getDepartments(),3,4
org.apache.openjpa.jdbc.kernel.M2MBiEmployee.setDepartments(Collection<M2MBiDepartment>),4,7
org.apache.openjpa.jdbc.kernel.M2MBiEmployee.getEmpid(),2,3
org.apache.openjpa.jdbc.kernel.M2MBiEmployee.setEmpid(String),3,6
org.apache.openjpa.jdbc.kernel.M2MBiEmployee.getVersion(),1,2
org.apache.openjpa.jdbc.kernel.M2MBiEmployee.setVersion(int),2,5
org.apache.openjpa.jdbc.kernel.M2MBiEmployee.getName(),2,3
org.apache.openjpa.jdbc.kernel.M2MBiEmployee.setName(String),3,6
org.apache.openjpa.jdbc.kernel.M2MBiEmployee.getSalary(),1,2
org.apache.openjpa.jdbc.kernel.M2MBiEmployee.setSalary(float),2,5
"org.apache.openjpa.event.MethodLifecycleCallbacks.MethodLifecycleCallbacks(Class,String,boolean)",15,27
"org.apache.openjpa.event.MethodLifecycleCallbacks.MethodLifecycleCallbacks(Method,boolean)",7,14
org.apache.openjpa.event.MethodLifecycleCallbacks.getCallbackMethod(),2,6
org.apache.openjpa.event.MethodLifecycleCallbacks.requiresArgument(),6,7
"org.apache.openjpa.event.MethodLifecycleCallbacks.hasCallback(Object,int)",5,5
"org.apache.openjpa.event.MethodLifecycleCallbacks.makeCallback(Object,Object,int)",16,29
org.apache.openjpa.event.MethodLifecycleCallbacks.toString(),3,4
"org.apache.openjpa.event.MethodLifecycleCallbacks.getMethod(Class,String,Class[])",32,58
"org.apache.openjpa.event.MethodLifecycleCallbacks.isAssignable(Class[],Class[])",6,14
org.apache.openjpa.event.MethodLifecycleCallbacks.readExternal(ObjectInput),14,27
org.apache.openjpa.event.MethodLifecycleCallbacks.writeExternal(ObjectOutput),8,14
org.apache.openjpa.persistence.jdbc.annotations.TestMapKey.setUp(),5,8
org.apache.openjpa.persistence.jdbc.annotations.TestMapKey.testDefaultMapKeyMapping(),20,45
org.apache.openjpa.persistence.jdbc.annotations.TestMapKey.testNamedMapKeyMapping(),22,49
org.apache.openjpa.persistence.jdbc.annotations.TestMapKey.testInverseOwnerMapKeyMapping(),21,53
org.apache.openjpa.persistence.jdbc.annotations.TestMapKey.testInsertAndRetrieve(),25,117
org.apache.openjpa.persistence.jdbc.query.cache.Department.getFullTimeEmployees(),4,7
org.apache.openjpa.persistence.jdbc.query.cache.Department.addEmployee(FullTimeEmployee),8,17
org.apache.openjpa.persistence.jdbc.query.cache.Department.getPartTimeEmployees(),4,7
org.apache.openjpa.persistence.jdbc.query.cache.Department.addEmployee(PartTimeEmployee),8,17
org.apache.openjpa.persistence.jdbc.query.cache.Department.getName(),2,3
org.apache.openjpa.persistence.jdbc.query.cache.Department.setName(String),3,6
"org.apache.openjpa.persistence.jdbc.query.cache.Usage.Usage(PartComposite,int,Part)",8,14
org.apache.openjpa.persistence.jdbc.query.cache.Usage.Usage(),5,5
org.apache.openjpa.persistence.jdbc.query.cache.Usage.getId(),0,0
org.apache.openjpa.persistence.jdbc.query.cache.Usage.setId(int),1,1
org.apache.openjpa.persistence.jdbc.query.cache.Usage.getParent(),1,2
org.apache.openjpa.persistence.jdbc.query.cache.Usage.setParent(PartComposite),3,6
org.apache.openjpa.persistence.jdbc.query.cache.Usage.getQuantity(),1,2
org.apache.openjpa.persistence.jdbc.query.cache.Usage.setQuantity(int),2,5
org.apache.openjpa.persistence.jdbc.query.cache.Usage.getChild(),1,2
org.apache.openjpa.persistence.jdbc.query.cache.Usage.setChild(Part),2,5
org.apache.openjpa.persistence.jdbc.query.cache.Usage.toString(),6,11
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.setUp(),14,18
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.testPersist(),4,4
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.testQueryRootLevel(),20,42
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.testQueryIntermediateLevel(),23,61
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.testQueryLeafLevel(),20,50
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.testFindRootNode(),16,34
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.testFindIntermediateNode(),13,29
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.testFindLeafNode(),14,38
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.testUpdate(),17,37
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.testDeleteRoot(),20,31
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.testDeleteLeafObtainedByQuery(),26,41
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.testDeleteLeafObtainedByFind(),23,56
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.testOrderBy(),13,24
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.create(),27,130
"org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.assertSQLFragnments(List<String>,String)",13,26
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity1.toString(List<String>),5,17
org.apache.openjpa.persistence.enhance.identity.Person3.getFirstName(),2,3
org.apache.openjpa.persistence.enhance.identity.Person3.setFirstName(String),3,6
org.apache.openjpa.persistence.enhance.identity.Person3.getLastName(),2,3
org.apache.openjpa.persistence.enhance.identity.Person3.setLastName(String),3,6
org.apache.openjpa.persistence.enhance.identity.Person3.getMedical(),2,4
org.apache.openjpa.persistence.enhance.identity.Person3.setMedical(MedicalHistory3),3,7
org.apache.openjpa.persistence.enhance.identity.Person3.equals(Object),7,32
org.apache.openjpa.persistence.enhance.identity.Person3.hashCode(),5,20
org.apache.openjpa.persistence.jdbc.schema.TestClassDBSequenceFactory.TestClassDBSequenceFactory(),5,8
org.apache.openjpa.persistence.jdbc.schema.TestClassDBSequenceFactory.TestClassDBSequenceFactory(String),4,6
org.apache.openjpa.persistence.jdbc.schema.TestClassDBSequenceFactory.setUp(),3,3
org.apache.openjpa.persistence.jdbc.schema.TestClassDBSequenceFactory.supportsPessimisticLocking(),11,18
org.apache.openjpa.persistence.jdbc.schema.TestClassDBSequenceFactory.testVirtualSuperclass(),21,49
org.apache.openjpa.persistence.jdbc.schema.TestClassDBSequenceFactory.testIgnoreVirtualSuperclass(),27,65
org.apache.openjpa.persistence.jdbc.schema.TestClassDBSequenceFactory.testNoSequenceHolesOnAttach(),16,40
org.apache.openjpa.persistence.jdbc.schema.TestClassDBSequenceFactory.testSequence(),24,51
org.apache.openjpa.persistence.jdbc.schema.TestClassDBSequenceFactory.testSequenceGenerator(),19,42
org.apache.openjpa.persistence.jdbc.schema.TestClassDBSequenceFactory.main(String[]),3,4
org.apache.openjpa.persistence.jdbc.schema.TestClassDBSequenceFactory.getProps(),8,14
"org.apache.openjpa.persistence.jdbc.schema.TestClassDBSequenceFactory.UpdateThread.UpdateThread(Set,Broker)",4,10
org.apache.openjpa.persistence.jdbc.schema.TestClassDBSequenceFactory.UpdateThread.run(),15,30
org.apache.openjpa.lib.identifier.IdentifierConfiguration.getLeadingDelimiter(),7,9
org.apache.openjpa.lib.identifier.IdentifierConfiguration.getTrailingDelimiter(),7,9
org.apache.openjpa.lib.identifier.IdentifierConfiguration.delimitAll(),6,6
org.apache.openjpa.lib.identifier.IdentifierConfiguration.getSupportsDelimitedIdentifiers(),6,6
org.apache.openjpa.lib.identifier.IdentifierConfiguration.getIdentifierConcatenator(),10,11
org.apache.openjpa.lib.identifier.IdentifierConfiguration.getIdentifierDelimiter(),11,11
org.apache.openjpa.lib.identifier.IdentifierConfiguration.getDefaultIdentifierRule(),3,6
org.apache.openjpa.lib.identifier.IdentifierConfiguration.getIdentifierRules(),6,8
org.apache.openjpa.lib.identifier.IdentifierConfiguration.getIdentifierRule(T),5,9
org.apache.openjpa.lib.identifier.IdentifierConfiguration.getDelimitedCase(),7,7
org.apache.openjpa.lib.identifier.IdentifierConfiguration.getSchemaCase(),7,7
org.apache.openjpa.lib.identifier.IdentifierConfiguration.getConversionKey(),15,20
"org.apache.openjpa.persistence.criteria.EntityWithIdClass.EntityWithIdClass(String,long)",4,8
org.apache.openjpa.persistence.criteria.EntityWithIdClass.getName(),2,3
org.apache.openjpa.persistence.criteria.EntityWithIdClass.getSsn(),1,2
"org.apache.openjpa.kernel.BrokerImpl.setAuthentication(String,String)",23,36
"org.apache.openjpa.kernel.BrokerImpl.initialize(AbstractBrokerFactory,DelegatingStoreManager,boolean,int,boolean)",28,56
"org.apache.openjpa.kernel.BrokerImpl.initialize(AbstractBrokerFactory,DelegatingStoreManager,boolean,int,boolean,boolean)",89,219
org.apache.openjpa.kernel.BrokerImpl.initializeOperatingSet(),9,16
org.apache.openjpa.kernel.BrokerImpl.getOperatingSet(),7,12
org.apache.openjpa.kernel.BrokerImpl.clone(),6,11
org.apache.openjpa.kernel.BrokerImpl.newManagedObjectCache(),16,29
org.apache.openjpa.kernel.BrokerImpl.getBroker(),1,2
"org.apache.openjpa.kernel.BrokerImpl.setImplicitBehavior(OpCallbacks,RuntimeExceptionTranslator)",9,13
org.apache.openjpa.kernel.BrokerImpl.getInstanceExceptionTranslator(),7,9
org.apache.openjpa.kernel.BrokerImpl.getBrokerFactory(),2,5
org.apache.openjpa.kernel.BrokerImpl.getConfiguration(),3,4
org.apache.openjpa.kernel.BrokerImpl.getFetchConfiguration(),2,4
org.apache.openjpa.kernel.BrokerImpl.pushFetchConfiguration(),3,8
org.apache.openjpa.kernel.BrokerImpl.pushFetchConfiguration(FetchConfiguration),8,18
org.apache.openjpa.kernel.BrokerImpl.popFetchConfiguration(),10,15
org.apache.openjpa.kernel.BrokerImpl.getConnectionRetainMode(),4,6
org.apache.openjpa.kernel.BrokerImpl.isManaged(),1,2
org.apache.openjpa.kernel.BrokerImpl.getManagedRuntime(),2,5
org.apache.openjpa.kernel.BrokerImpl.getClassLoader(),1,3
org.apache.openjpa.kernel.BrokerImpl.getStoreManager(),3,6
org.apache.openjpa.kernel.BrokerImpl.getLockManager(),2,4
org.apache.openjpa.kernel.BrokerImpl.getInverseManager(),2,4
org.apache.openjpa.kernel.BrokerImpl.getConnectionUserName(),4,5
org.apache.openjpa.kernel.BrokerImpl.getConnectionPassword(),4,4
org.apache.openjpa.kernel.BrokerImpl.getMultithreaded(),1,2
org.apache.openjpa.kernel.BrokerImpl.setMultithreaded(boolean),4,12
org.apache.openjpa.kernel.BrokerImpl.getIgnoreChanges(),2,4
org.apache.openjpa.kernel.BrokerImpl.setIgnoreChanges(boolean),4,7
org.apache.openjpa.kernel.BrokerImpl.getNontransactionalRead(),3,4
org.apache.openjpa.kernel.BrokerImpl.setNontransactionalRead(boolean),23,33
org.apache.openjpa.kernel.BrokerImpl.getNontransactionalWrite(),3,4
org.apache.openjpa.kernel.BrokerImpl.setNontransactionalWrite(boolean),13,15
org.apache.openjpa.kernel.BrokerImpl.getOptimistic(),1,2
org.apache.openjpa.kernel.BrokerImpl.setOptimistic(boolean),20,30
org.apache.openjpa.kernel.BrokerImpl.getRestoreState(),1,2
org.apache.openjpa.kernel.BrokerImpl.setRestoreState(int),10,14
org.apache.openjpa.kernel.BrokerImpl.getRetainState(),1,2
org.apache.openjpa.kernel.BrokerImpl.setRetainState(boolean),11,13
org.apache.openjpa.kernel.BrokerImpl.getAutoClear(),1,2
org.apache.openjpa.kernel.BrokerImpl.setAutoClear(int),3,5
org.apache.openjpa.kernel.BrokerImpl.getAutoDetach(),2,4
org.apache.openjpa.kernel.BrokerImpl.setAutoDetach(int),14,28
"org.apache.openjpa.kernel.BrokerImpl.setAutoDetach(int,boolean)",5,24
org.apache.openjpa.kernel.BrokerImpl.getDetachState(),1,2
org.apache.openjpa.kernel.BrokerImpl.setDetachState(int),3,5
org.apache.openjpa.kernel.BrokerImpl.isDetachedNew(),1,2
org.apache.openjpa.kernel.BrokerImpl.setDetachedNew(boolean),2,3
org.apache.openjpa.kernel.BrokerImpl.getSyncWithManagedTransactions(),3,5
org.apache.openjpa.kernel.BrokerImpl.setSyncWithManagedTransactions(boolean),4,8
org.apache.openjpa.kernel.BrokerImpl.getEvictFromDataCache(),3,6
org.apache.openjpa.kernel.BrokerImpl.setEvictFromDataCache(boolean),4,9
org.apache.openjpa.kernel.BrokerImpl.getPopulateDataCache(),3,6
org.apache.openjpa.kernel.BrokerImpl.setPopulateDataCache(boolean),4,9
org.apache.openjpa.kernel.BrokerImpl.isTrackChangesByType(),4,4
org.apache.openjpa.kernel.BrokerImpl.setTrackChangesByType(boolean),5,7
org.apache.openjpa.kernel.BrokerImpl.getUserObject(Object),6,13
"org.apache.openjpa.kernel.BrokerImpl.putUserObject(Object,Object)",10,29
org.apache.openjpa.kernel.BrokerImpl.getProperties(),21,35
org.apache.openjpa.kernel.BrokerImpl.getSupportedProperties(),15,26
"org.apache.openjpa.kernel.BrokerImpl.addLifecycleListener(Object,Class[])",10,16
org.apache.openjpa.kernel.BrokerImpl.removeLifecycleListener(Object),9,14
org.apache.openjpa.kernel.BrokerImpl.getLifecycleListenerCallbackMode(),5,7
org.apache.openjpa.kernel.BrokerImpl.setLifecycleListenerCallbackMode(int),12,23
org.apache.openjpa.kernel.BrokerImpl.getLifecycleEventManager(),6,14
"org.apache.openjpa.kernel.BrokerImpl.fireLifecycleEvent(Object,Object,ClassMetaData,int)",25,51
"org.apache.openjpa.kernel.BrokerImpl.handleCallbackExceptions(Exception[],int)",29,69
org.apache.openjpa.kernel.BrokerImpl.addTransactionListener(Object),13,20
org.apache.openjpa.kernel.BrokerImpl.removeTransactionListener(Object),13,20
org.apache.openjpa.kernel.BrokerImpl.getTransactionListeners(),7,8
org.apache.openjpa.kernel.BrokerImpl.getTransactionListenerCallbackMode(),5,7
org.apache.openjpa.kernel.BrokerImpl.setTransactionListenerCallbackMode(int),12,23
org.apache.openjpa.kernel.BrokerImpl.fireTransactionEvent(TransactionEvent),12,31
org.apache.openjpa.kernel.BrokerImpl.setSuppressBatchOLELogging(boolean),15,20
org.apache.openjpa.kernel.BrokerImpl.getSuppressBatchOLELogging(),12,16
"org.apache.openjpa.kernel.BrokerImpl.find(Object,boolean,FindCallbacks)",10,20
"org.apache.openjpa.kernel.BrokerImpl.find(Object,FetchConfiguration,BitSet,Object,int)",9,17
"org.apache.openjpa.kernel.BrokerImpl.find(Object,FetchConfiguration,BitSet,Object,int,FindCallbacks)",70,242
"org.apache.openjpa.kernel.BrokerImpl.initialize(StateManagerImpl,boolean,FetchConfiguration,Object)",21,34
"org.apache.openjpa.kernel.BrokerImpl.findAll(Collection,boolean,FindCallbacks)",12,20
"org.apache.openjpa.kernel.BrokerImpl.findAll(Collection,FetchConfiguration,BitSet,Object,int)",10,17
"org.apache.openjpa.kernel.BrokerImpl.findAll(Collection,FetchConfiguration,BitSet,Object,int,FindCallbacks)",100,289
org.apache.openjpa.kernel.BrokerImpl.isLoading(Object),4,6
org.apache.openjpa.kernel.BrokerImpl.hasFlushed(),3,4
"org.apache.openjpa.kernel.BrokerImpl.requiresLoad(OpenJPAStateManager,boolean,FetchConfiguration,Object,int)",27,36
org.apache.openjpa.kernel.BrokerImpl.useTransactionalState(FetchConfiguration),12,16
"org.apache.openjpa.kernel.BrokerImpl.findCached(Object,FindCallbacks)",11,28
org.apache.openjpa.kernel.BrokerImpl.getObjectIdType(Class<>),16,41
"org.apache.openjpa.kernel.BrokerImpl.newObjectId(Class<>,Object)",52,139
"org.apache.openjpa.kernel.BrokerImpl.newStateManagerImpl(Object,boolean)",30,90
"org.apache.openjpa.kernel.BrokerImpl.newStateManagerImpl(Object,ClassMetaData)",8,17
org.apache.openjpa.kernel.BrokerImpl.begin(),13,17
org.apache.openjpa.kernel.BrokerImpl.beginInternal(),37,101
org.apache.openjpa.kernel.BrokerImpl.beginStore(),11,21
org.apache.openjpa.kernel.BrokerImpl.beginStoreManagerTransaction(boolean),13,29
org.apache.openjpa.kernel.BrokerImpl.endStoreManagerTransaction(boolean),49,141
org.apache.openjpa.kernel.BrokerImpl.commit(),21,48
org.apache.openjpa.kernel.BrokerImpl.rollback(),16,38
org.apache.openjpa.kernel.BrokerImpl.syncWithManagedTransaction(),15,20
org.apache.openjpa.kernel.BrokerImpl.commitAndResume(),2,3
org.apache.openjpa.kernel.BrokerImpl.rollbackAndResume(),2,3
org.apache.openjpa.kernel.BrokerImpl.endAndResume(boolean),5,9
org.apache.openjpa.kernel.BrokerImpl.getRollbackOnly(),15,26
org.apache.openjpa.kernel.BrokerImpl.getRollbackCause(),17,31
org.apache.openjpa.kernel.BrokerImpl.setRollbackOnly(),4,6
org.apache.openjpa.kernel.BrokerImpl.setRollbackOnly(Throwable),8,13
org.apache.openjpa.kernel.BrokerImpl.setRollbackOnlyInternal(Throwable),28,70
org.apache.openjpa.kernel.BrokerImpl.setSavepoint(String),30,66
org.apache.openjpa.kernel.BrokerImpl.releaseSavepoint(),12,18
org.apache.openjpa.kernel.BrokerImpl.releaseSavepoint(String),18,52
org.apache.openjpa.kernel.BrokerImpl.rollbackToSavepoint(),12,18
org.apache.openjpa.kernel.BrokerImpl.rollbackToSavepoint(String),52,140
org.apache.openjpa.kernel.BrokerImpl.setStatusFlag(int),5,9
org.apache.openjpa.kernel.BrokerImpl.clearStatusFlag(int),4,8
org.apache.openjpa.kernel.BrokerImpl.flush(),43,85
org.apache.openjpa.kernel.BrokerImpl.preFlush(),9,12
org.apache.openjpa.kernel.BrokerImpl.validateChanges(),27,47
org.apache.openjpa.kernel.BrokerImpl.isActive(),5,7
org.apache.openjpa.kernel.BrokerImpl.isStoreActive(),13,16
org.apache.openjpa.kernel.BrokerImpl.isTransactionEnding(),8,9
org.apache.openjpa.kernel.BrokerImpl.beginOperation(boolean),15,26
org.apache.openjpa.kernel.BrokerImpl.endOperation(),27,44
org.apache.openjpa.kernel.BrokerImpl.getSynchronization(),2,3
org.apache.openjpa.kernel.BrokerImpl.setSynchronization(Synchronization),3,6
org.apache.openjpa.kernel.BrokerImpl.beforeCompletion(),22,44
org.apache.openjpa.kernel.BrokerImpl.afterCompletion(int),48,120
org.apache.openjpa.kernel.BrokerImpl.translateManagedCompletionException(RuntimeException),12,22
org.apache.openjpa.kernel.BrokerImpl.flushSafe(int),13,24
org.apache.openjpa.kernel.BrokerImpl.flush(int),109,391
"org.apache.openjpa.kernel.BrokerImpl.flushAdditions(Collection,int)",15,27
"org.apache.openjpa.kernel.BrokerImpl.flushTransAdditions(Collection,int)",21,45
org.apache.openjpa.kernel.BrokerImpl.deleteDerefAdditions(Collection),16,37
org.apache.openjpa.kernel.BrokerImpl.deleteDeref(StateManagerImpl),16,26
"org.apache.openjpa.kernel.BrokerImpl.processArgument(int,Object,OpenJPAStateManager,OpCallbacks)",17,31
org.apache.openjpa.kernel.BrokerImpl.newFlushException(Collection<Exception>),38,101
org.apache.openjpa.kernel.BrokerImpl.endTransaction(int),97,283
"org.apache.openjpa.kernel.BrokerImpl.persist(Object,OpCallbacks)",5,8
"org.apache.openjpa.kernel.BrokerImpl.persist(Object,Object,OpCallbacks)",7,11
"org.apache.openjpa.kernel.BrokerImpl.persistAll(Collection,OpCallbacks)",5,8
"org.apache.openjpa.kernel.BrokerImpl.persistAll(Collection,boolean,OpCallbacks)",26,45
"org.apache.openjpa.kernel.BrokerImpl.add(List<Exception>,Exception)",6,15
"org.apache.openjpa.kernel.BrokerImpl.throwNestedExceptions(List<Exception>,boolean)",21,56
"org.apache.openjpa.kernel.BrokerImpl.persist(Object,boolean,OpCallbacks)",10,19
"org.apache.openjpa.kernel.BrokerImpl.persist(Object,Object,boolean,OpCallbacks)",16,26
"org.apache.openjpa.kernel.BrokerImpl.persist(Object,Object,boolean,OpCallbacks,boolean)",24,42
"org.apache.openjpa.kernel.BrokerImpl.persistInternal(Object,Object,boolean,OpCallbacks,boolean)",69,184
"org.apache.openjpa.kernel.BrokerImpl.cascadeTransient(int,Object,OpCallbacks,String)",33,65
"org.apache.openjpa.kernel.BrokerImpl.deleteAll(Collection,OpCallbacks)",21,37
"org.apache.openjpa.kernel.BrokerImpl.delete(Object,OpCallbacks)",13,22
"org.apache.openjpa.kernel.BrokerImpl.delete(Object,StateManagerImpl,OpCallbacks)",34,108
"org.apache.openjpa.kernel.BrokerImpl.newDetachedException(Object,String)",18,29
"org.apache.openjpa.kernel.BrokerImpl.releaseAll(Collection,OpCallbacks)",16,27
"org.apache.openjpa.kernel.BrokerImpl.release(Object,OpCallbacks)",22,39
"org.apache.openjpa.kernel.BrokerImpl.embed(Object,Object,OpenJPAStateManager,ValueMetaData)",53,165
"org.apache.openjpa.kernel.BrokerImpl.copy(OpenJPAStateManager,PCState)",29,67
"org.apache.openjpa.kernel.BrokerImpl.refreshAll(Collection,OpCallbacks)",17,36
"org.apache.openjpa.kernel.BrokerImpl.refresh(Object,OpCallbacks)",16,29
"org.apache.openjpa.kernel.BrokerImpl.gatherCascadeRefresh(Object,OpCallbacks)",20,45
"org.apache.openjpa.kernel.BrokerImpl.refreshInternal(Collection,OpCallbacks)",67,188
"org.apache.openjpa.kernel.BrokerImpl.refreshInternal(Object,OpCallbacks)",34,74
"org.apache.openjpa.kernel.BrokerImpl.retrieveAll(Collection,boolean,OpCallbacks)",48,168
"org.apache.openjpa.kernel.BrokerImpl.retrieve(Object,boolean,OpCallbacks)",26,57
org.apache.openjpa.kernel.BrokerImpl.evictAll(OpCallbacks),17,29
"org.apache.openjpa.kernel.BrokerImpl.evictAll(Collection,OpCallbacks)",16,27
"org.apache.openjpa.kernel.BrokerImpl.evictAll(Extent,OpCallbacks)",26,50
"org.apache.openjpa.kernel.BrokerImpl.evict(Object,OpCallbacks)",22,47
"org.apache.openjpa.kernel.BrokerImpl.detach(Object,OpCallbacks)",11,23
"org.apache.openjpa.kernel.BrokerImpl.detachAll(Collection,OpCallbacks)",14,27
org.apache.openjpa.kernel.BrokerImpl.detachAll(OpCallbacks),3,5
"org.apache.openjpa.kernel.BrokerImpl.detachAll(OpCallbacks,boolean)",21,32
org.apache.openjpa.kernel.BrokerImpl.detachAllInternal(OpCallbacks),31,67
org.apache.openjpa.kernel.BrokerImpl.detachAllInternalLite(),20,39
"org.apache.openjpa.kernel.BrokerImpl.attach(Object,boolean,OpCallbacks)",18,33
"org.apache.openjpa.kernel.BrokerImpl.attachAll(Collection,boolean,OpCallbacks)",21,37
"org.apache.openjpa.kernel.BrokerImpl.nontransactionalAll(Collection,OpCallbacks)",16,27
"org.apache.openjpa.kernel.BrokerImpl.nontransactional(Object,OpCallbacks)",16,29
"org.apache.openjpa.kernel.BrokerImpl.transactionalAll(Collection,boolean,OpCallbacks)",61,160
"org.apache.openjpa.kernel.BrokerImpl.transactional(Object,boolean,OpCallbacks)",40,76
"org.apache.openjpa.kernel.BrokerImpl.transactionalStatesAll(Collection,Collection,List<Exception>)",22,41
"org.apache.openjpa.kernel.BrokerImpl.newExtent(Class,boolean)",3,7
"org.apache.openjpa.kernel.BrokerImpl.newExtent(Class,boolean,FetchConfiguration)",17,36
"org.apache.openjpa.kernel.BrokerImpl.extentIterator(Class,boolean,FetchConfiguration,boolean)",9,24
"org.apache.openjpa.kernel.BrokerImpl.newQuery(String,Class,Object)",8,15
"org.apache.openjpa.kernel.BrokerImpl.newQuery(String,Object)",34,77
"org.apache.openjpa.kernel.BrokerImpl.newQueryImpl(String,StoreQuery)",6,13
org.apache.openjpa.kernel.BrokerImpl.getIdentitySequence(ClassMetaData),5,9
org.apache.openjpa.kernel.BrokerImpl.getValueSequence(FieldMetaData),8,14
"org.apache.openjpa.kernel.BrokerImpl.getSequence(ClassMetaData,FieldMetaData)",37,148
"org.apache.openjpa.kernel.BrokerImpl.lock(Object,OpCallbacks)",12,21
"org.apache.openjpa.kernel.BrokerImpl.lock(Object,int,int,OpCallbacks)",25,43
"org.apache.openjpa.kernel.BrokerImpl.lockAll(Collection,OpCallbacks)",13,22
"org.apache.openjpa.kernel.BrokerImpl.lockAll(Collection,int,int,OpCallbacks)",34,81
org.apache.openjpa.kernel.BrokerImpl.cancelAll(),25,40
org.apache.openjpa.kernel.BrokerImpl.getConnection(),16,19
org.apache.openjpa.kernel.BrokerImpl.hasConnection(),5,5
org.apache.openjpa.kernel.BrokerImpl.retainConnection(),9,18
org.apache.openjpa.kernel.BrokerImpl.releaseConnection(),8,18
org.apache.openjpa.kernel.BrokerImpl.getManagedObjects(),6,10
org.apache.openjpa.kernel.BrokerImpl.getTransactionalObjects(),7,10
org.apache.openjpa.kernel.BrokerImpl.getPendingTransactionalObjects(),8,12
org.apache.openjpa.kernel.BrokerImpl.getDirtyObjects(),7,10
org.apache.openjpa.kernel.BrokerImpl.getOrderDirtyObjects(),2,3
org.apache.openjpa.kernel.BrokerImpl.setOrderDirtyObjects(boolean),3,4
org.apache.openjpa.kernel.BrokerImpl.getManagedStates(),5,7
org.apache.openjpa.kernel.BrokerImpl.getTransactionalStates(),17,23
org.apache.openjpa.kernel.BrokerImpl.hasTransactionalObjects(),14,18
org.apache.openjpa.kernel.BrokerImpl.getDirtyStates(),11,14
org.apache.openjpa.kernel.BrokerImpl.getPendingTransactionalStates(),13,17
"org.apache.openjpa.kernel.BrokerImpl.setStateManager(Object,StateManagerImpl,int)",40,73
org.apache.openjpa.kernel.BrokerImpl.addToTransaction(StateManagerImpl),20,36
org.apache.openjpa.kernel.BrokerImpl.removeFromTransaction(StateManagerImpl),24,36
"org.apache.openjpa.kernel.BrokerImpl.setDirty(StateManagerImpl,boolean)",50,124
org.apache.openjpa.kernel.BrokerImpl.addToPendingTransaction(StateManagerImpl),14,23
org.apache.openjpa.kernel.BrokerImpl.removeFromPendingTransaction(StateManagerImpl),16,25
org.apache.openjpa.kernel.BrokerImpl.addDereferencedDependent(StateManagerImpl),28,53
org.apache.openjpa.kernel.BrokerImpl.removeDereferencedDependent(StateManagerImpl),25,42
org.apache.openjpa.kernel.BrokerImpl.dirtyType(Class),10,17
org.apache.openjpa.kernel.BrokerImpl.getPersistedTypes(),8,16
org.apache.openjpa.kernel.BrokerImpl.getUpdatedTypes(),8,16
org.apache.openjpa.kernel.BrokerImpl.getDeletedTypes(),8,16
org.apache.openjpa.kernel.BrokerImpl.isClosed(),1,2
org.apache.openjpa.kernel.BrokerImpl.isCloseInvoked(),5,7
org.apache.openjpa.kernel.BrokerImpl.close(),17,32
org.apache.openjpa.kernel.BrokerImpl.free(),54,111
org.apache.openjpa.kernel.BrokerImpl.lock(),1,4
org.apache.openjpa.kernel.BrokerImpl.unlock(),2,4
org.apache.openjpa.kernel.BrokerImpl.newInstance(Class),35,68
org.apache.openjpa.kernel.BrokerImpl.getObjectId(Object),19,32
org.apache.openjpa.kernel.BrokerImpl.getLockLevel(Object),7,18
org.apache.openjpa.kernel.BrokerImpl.getVersion(Object),9,15
org.apache.openjpa.kernel.BrokerImpl.isDirty(Object),9,16
org.apache.openjpa.kernel.BrokerImpl.isTransactional(Object),9,14
org.apache.openjpa.kernel.BrokerImpl.isPersistent(Object),9,14
org.apache.openjpa.kernel.BrokerImpl.isNew(Object),8,12
org.apache.openjpa.kernel.BrokerImpl.isDeleted(Object),9,14
org.apache.openjpa.kernel.BrokerImpl.isDetached(Object),3,5
"org.apache.openjpa.kernel.BrokerImpl.isDetached(Object,boolean)",34,71
org.apache.openjpa.kernel.BrokerImpl.getStateManager(Object),5,8
"org.apache.openjpa.kernel.BrokerImpl.getStateManagerImpl(Object,boolean)",25,54
"org.apache.openjpa.kernel.BrokerImpl.getStateManagerImplById(Object,boolean)",17,26
org.apache.openjpa.kernel.BrokerImpl.assertPersistenceCapable(Object),36,84
org.apache.openjpa.kernel.BrokerImpl.assertOpen(),16,36
org.apache.openjpa.kernel.BrokerImpl.assertActiveTransaction(),6,9
org.apache.openjpa.kernel.BrokerImpl.assertTransactionOperation(),10,16
org.apache.openjpa.kernel.BrokerImpl.assertNontransactionalRead(),10,12
org.apache.openjpa.kernel.BrokerImpl.assertWriteOperation(),12,16
org.apache.openjpa.kernel.BrokerImpl.newObjectNotFoundException(Collection),14,36
org.apache.openjpa.kernel.BrokerImpl.processArgument(Object),4,6
"org.apache.openjpa.kernel.BrokerImpl.processReturn(Object,OpenJPAStateManager)",7,8
org.apache.openjpa.kernel.BrokerImpl.writeObject(ObjectOutputStream),22,42
org.apache.openjpa.kernel.BrokerImpl.readObject(ObjectInputStream),38,73
org.apache.openjpa.kernel.BrokerImpl.isSerializing(),4,5
org.apache.openjpa.kernel.BrokerImpl.getPrintParameters(),7,11
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.TransactionalCache(boolean),3,5
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.copy(),28,55
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.copyDirty(),11,18
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.flushed(StateManagerImpl),11,16
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.addClean(StateManagerImpl),9,14
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.addCleanInternal(StateManagerImpl),9,16
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.addDirty(StateManagerImpl),14,26
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.remove(StateManagerImpl),8,12
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.removeCleanInternal(StateManagerImpl),5,8
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.iterator(),6,24
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.contains(Object),5,11
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.containsAll(Collection),5,10
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.clear(),2,4
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.isEmpty(),3,7
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.size(),3,11
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.add(Object),6,6
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.addAll(Collection),6,6
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.remove(Object),6,6
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.removeAll(Collection),6,6
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.retainAll(Collection),5,5
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.toArray(),5,5
org.apache.openjpa.kernel.BrokerImpl.TransactionalCache.toArray(Object[]),6,7
org.apache.openjpa.kernel.BrokerImpl.StateManagerId.newInstance(Broker),8,9
"org.apache.openjpa.kernel.BrokerImpl.StateManagerId.StateManagerId(int,long)",2,4
org.apache.openjpa.kernel.BrokerImpl.StateManagerId.StateManagerId(String),11,22
org.apache.openjpa.kernel.BrokerImpl.StateManagerId.equals(Object),5,9
org.apache.openjpa.kernel.BrokerImpl.StateManagerId.hashCode(),2,2
org.apache.openjpa.kernel.BrokerImpl.StateManagerId.toString(),3,5
org.apache.openjpa.kernel.BrokerImpl.ManagedObjectCollection.ManagedObjectCollection(Collection),3,4
org.apache.openjpa.kernel.BrokerImpl.ManagedObjectCollection.getStateManagers(),2,2
org.apache.openjpa.kernel.BrokerImpl.ManagedObjectCollection.size(),1,2
org.apache.openjpa.kernel.BrokerImpl.ManagedObjectCollection.iterator(),2,6
org.apache.openjpa.kernel.BrokerImpl.ManagedObjectCollection.iterator().$1.hasNext(),1,1
org.apache.openjpa.kernel.BrokerImpl.ManagedObjectCollection.iterator().$1.next(),6,6
org.apache.openjpa.kernel.BrokerImpl.ManagedObjectCollection.iterator().$1.remove(),3,3
"org.apache.openjpa.kernel.BrokerImpl.assignObjectId(Object,Object,StateManagerImpl)",9,19
"org.apache.openjpa.kernel.BrokerImpl.checkForDuplicateId(Object,Object,ClassMetaData)",31,47
org.apache.openjpa.kernel.BrokerImpl.getCachePreparedQuery(),8,13
org.apache.openjpa.kernel.BrokerImpl.setCachePreparedQuery(boolean),7,11
org.apache.openjpa.kernel.BrokerImpl.getCacheFinderQuery(),7,12
org.apache.openjpa.kernel.BrokerImpl.setCacheFinderQuery(boolean),8,11
org.apache.openjpa.kernel.BrokerImpl.isFromWriteBehindCallback(),2,4
org.apache.openjpa.kernel.BrokerImpl.getConnectionFactoryName(),5,11
org.apache.openjpa.kernel.BrokerImpl.setConnectionFactoryName(String),11,25
org.apache.openjpa.kernel.BrokerImpl.getConnectionFactory2Name(),5,11
org.apache.openjpa.kernel.BrokerImpl.setConnectionFactory2Name(String),11,25
org.apache.openjpa.kernel.BrokerImpl.getConnectionFactory(),14,30
org.apache.openjpa.kernel.BrokerImpl.getConnectionFactory2(),14,30
org.apache.openjpa.kernel.BrokerImpl.isCached(List<Object>),13,30
org.apache.openjpa.kernel.BrokerImpl.getAllowReferenceToSiblingContext(),4,8
org.apache.openjpa.kernel.BrokerImpl.setAllowReferenceToSiblingContext(boolean),5,11
org.apache.openjpa.kernel.BrokerImpl.isFlushing(),3,4
org.apache.openjpa.kernel.BrokerImpl.getPostLoadOnMerge(),3,6
org.apache.openjpa.kernel.BrokerImpl.setPostLoadOnMerge(boolean),5,9
org.apache.openjpa.kernel.BrokerImpl.assertAutoDetachValue(int),14,30
org.apache.openjpa.kernel.BrokerImpl.toAutoDetachString(int),18,40
org.apache.openjpa.kernel.BrokerImpl.operatingAdd(Object),4,7
org.apache.openjpa.lib.meta.CFMetaDataSerializer.getPackage(),3,3
org.apache.openjpa.lib.meta.CFMetaDataSerializer.setPackage(String),5,6
org.apache.openjpa.lib.meta.CFMetaDataSerializer.groupByPackage(Collection<Object>),20,59
org.apache.openjpa.lib.meta.CFMetaDataSerializer.getPackage(Object),6,7
org.apache.openjpa.lib.meta.CFMetaDataSerializer.getClassName(String),15,40
org.apache.openjpa.meta.JavaTypes.getTypeCode(Class<>),29,71
"org.apache.openjpa.meta.JavaTypes.classForName(String,ClassMetaData)",11,16
"org.apache.openjpa.meta.JavaTypes.classForName(String,ClassMetaData,ClassLoader)",14,22
"org.apache.openjpa.meta.JavaTypes.classForName(String,ClassMetaData,ClassLoader,boolean)",23,34
"org.apache.openjpa.meta.JavaTypes.classForName(String,ValueMetaData)",12,17
"org.apache.openjpa.meta.JavaTypes.classForName(String,ValueMetaData,ClassLoader)",17,33
"org.apache.openjpa.meta.JavaTypes.classForName(String,ValueMetaData,ClassLoader,boolean)",12,28
"org.apache.openjpa.meta.JavaTypes.classForName(String,ClassMetaData,Class<>,ValueMetaData,ClassLoader)",14,26
"org.apache.openjpa.meta.JavaTypes.classForName(String,ClassMetaData,Class<>,ValueMetaData,ClassLoader,boolean)",46,144
"org.apache.openjpa.meta.JavaTypes.convert(Object,int)",22,169
org.apache.openjpa.meta.JavaTypes.maybePC(FieldMetaData),21,39
org.apache.openjpa.meta.JavaTypes.maybePC(ValueMetaData),11,17
"org.apache.openjpa.meta.JavaTypes.maybePC(int,Class<>)",17,33
"org.apache.openjpa.meta.JavaTypes.toList(Object,Class<T>,boolean)",15,36
"org.apache.openjpa.meta.JavaTypes.toArray(Collection<>,Class<>)",13,30
"org.apache.openjpa.meta.JavaTypes.isPrimitiveDefault(Object,int)",14,23
org.apache.openjpa.enhance.UnenhancedOne.UnenhancedOne(),1,1
org.apache.openjpa.enhance.UnenhancedOne.UnenhancedOne(int),1,1
org.apache.openjpa.enhance.UnenhancedOne.getId(),0,0
org.apache.openjpa.enhance.UnenhancedOne.getMany(),2,2
org.apache.openjpa.enhance.UnenhancedOne.equals(Object),4,4
org.apache.openjpa.enhance.UnenhancedOne.hashCode(),2,2
org.apache.openjpa.enhance.UnenhancedOne.clone(),4,6
org.apache.openjpa.jdbc.oracle.TestOracleXmlColumn.skipTest(DBDictionary),5,7
org.apache.openjpa.jdbc.oracle.TestOracleXmlColumn.setUp(),54,113
org.apache.openjpa.jdbc.oracle.TestOracleXmlColumn.testCrudXmlColumn(),42,102
org.apache.openjpa.jdbc.oracle.TestOracleXmlColumn.testExistingColumn(),36,77
org.apache.openjpa.jdbc.oracle.TestOracleXmlColumn.xmlResult(String),7,14
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.XMLPersistenceMappingParser(JDBCConfiguration),12,15
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.reset(),9,12
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startSystemMappingElement(String,Attributes)",25,65
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endSystemMappingElement(String),17,32
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startClassMappingElement(String,Attributes)",50,219
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endName(),14,26
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endClassMappingElement(String),38,86
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startClassMapping(ClassMetaData,boolean,Attributes)",14,20
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endClassMapping(ClassMetaData),26,91
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.clearClassInfo(),9,11
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startSecondaryTable(Attributes),19,36
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endSecondaryTable(),14,33
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.clearSecondaryTableInfo(),6,11
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startTableGenerator(Attributes),56,175
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endTableGenerator(),4,4
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startInheritance(Attributes),22,49
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endDiscriminatorValue(),21,37
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endTemporal(),10,16
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endMapKeyTemporal(),27,78
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endEnumerated(),21,48
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endMapKeyEnumerated(),22,45
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startLob(Attributes),6,10
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startFieldMapping(FieldMetaData,Attributes)",15,35
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endFieldMapping(FieldMetaData),41,161
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.setUnique(FieldMapping),4,10
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.setUnique(FieldMapping,EnumSet<UniqueFlag>)",15,25
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.clearColumnInfo(),12,14
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startAttributeOverride(Attributes),8,12
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endAttributeOverride(),35,92
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.getAttributeOverride(ClassMapping),10,28
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.getAttributeOverrideForEmbeddable(FieldMapping,String,boolean)",16,25
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startTable(Attributes),19,39
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startJoinTable(Attributes),35,86
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endJoinTable(),32,90
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startPrimaryKeyJoinColumn(Attributes),30,82
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startJoinColumn(Attributes),28,92
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startColumn(Attributes),29,68
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startMapKeyColumn(Attributes),22,43
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startMapKeyJoinColumn(Attributes),30,66
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.parseColumn(Attributes),41,153
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.setTargetIdentifier(Column,String)",12,33
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startCollectionTable(Attributes),16,33
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.parseCollectionTable(Attributes),11,20
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.toTableIdentifier(String,String)",10,38
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startSQLResultSetMapping(Attributes),54,128
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endSQLResultSetMapping(),8,8
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startEntityResult(Attributes),30,70
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endEntityResult(),6,6
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startFieldResult(Attributes),22,47
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startColumnResult(Attributes),18,29
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startUniqueConstraint(Attributes),25,43
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endUniqueConstraint(),35,139
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endColumnName(),17,40
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.parseDiscriminatorColumn(Attributes),10,23
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startOrderColumn(Attributes),17,30
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.parseOrderColumn(Attributes),31,110
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.applyDeferredEmbeddableOverrides(Class<>),33,126
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.deferEmbeddableOverrides(Class<>,DeferredEmbeddableOverrides)",14,43
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.clearDeferredMetaData(),4,8
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.getDeferredFieldMappingInfo(Class<>,FieldMapping,String,boolean)",20,71
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.findDeferredMapping(Class<>,FieldMapping,String)",15,42
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.addDeferredEmbeddableMetaData(),25,47
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.DeferredEmbeddableOverrides.DeferredEmbeddableOverrides(FieldMapping,String)",11,15
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startDelimitedIdentifiers(),11,18
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.normalizeSequenceName(String),9,20
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.normalizeSchemaName(String),9,20
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.normalizeCatalogName(String),9,20
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.delimit(),3,4
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.toEagerFetchModeConstant(String),15,39
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startDatastoreIdCol(Attributes),34,90
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startIndex(Attributes),16,27
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.parseIndex(MappingInfo,String,boolean,boolean)",20,45
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startForeignKey(Attributes),7,11
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endForeignKey(),26,114
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.parseForeignKey(MappingInfo,String,boolean,boolean,int,int)",22,61
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.toForeignKeyInt(String),14,50
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.assertDefault(String,boolean,boolean,boolean,int,int)",29,49
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startFKColumnNames(Attributes),10,13
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endFKColumnNames(),6,21
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endFKColumnName(),7,8
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startVersionColumns(Attributes),10,13
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.endVersionColumns(),11,26
org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startVersionColumn(Attributes),28,57
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.parseEagerFetchModeAttr(FieldMetaData,Attributes)",25,78
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.parseElementClassCriteriaAttr(FieldMetaData,Attributes)",19,45
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.parseStrategy(FieldMetaData,Attributes)",15,25
"org.apache.openjpa.persistence.jdbc.XMLPersistenceMappingParser.startExtendedClass(String,Attributes)",26,95
org.apache.openjpa.persistence.fetchgroups.FGManager.FGManager(),5,5
"org.apache.openjpa.persistence.fetchgroups.FGManager.FGManager(int,String,String,String,FGDepartment,FGAddress,FGManager,String,Collection<FGEmployee>,String)",15,36
org.apache.openjpa.persistence.fetchgroups.FGManager.getMData(),2,3
org.apache.openjpa.persistence.fetchgroups.FGManager.setMData(String),3,6
org.apache.openjpa.persistence.fetchgroups.FGManager.getEmployees(),3,4
org.apache.openjpa.persistence.criteria.TestByteArray.setUp(),19,22
org.apache.openjpa.persistence.criteria.TestByteArray.populate(),21,35
org.apache.openjpa.persistence.criteria.TestByteArray.assertBlogUser(BlogUser),5,7
org.apache.openjpa.persistence.criteria.TestByteArray.testSimpleQuery(),16,35
org.apache.openjpa.persistence.criteria.TestByteArray.testSimpleQueryBytesNotNull(),20,45
org.apache.openjpa.persistence.criteria.TestByteArray.testSimpleQueryBytesNull(),20,42
org.apache.openjpa.persistence.criteria.TestByteArray.testSimpleQueryCharactersNotNull(),19,45
org.apache.openjpa.persistence.criteria.TestByteArray.testSimpleQueryCharactersNull(),19,42
org.apache.openjpa.persistence.criteria.TestByteArray.testSimpleQueryCharsNotNull(),19,45
org.apache.openjpa.persistence.criteria.TestByteArray.testSimpleQueryCharsNull(),19,42
org.apache.openjpa.persistence.cache.jpa.model.XmlCacheableEntity.getId(),0,0
org.apache.openjpa.persistence.cache.jpa.model.XmlCacheableEntity.setId(int),1,1
org.apache.openjpa.persistence.cache.jpa.model.XmlCacheableEntity.getVersion(),1,2
org.apache.openjpa.persistence.cache.jpa.model.XmlCacheableEntity.setVersion(int),2,5
org.apache.openjpa.persistence.cache.jpa.model.XmlCacheableEntity.getName(),2,3
org.apache.openjpa.persistence.cache.jpa.model.XmlCacheableEntity.setName(String),3,6
org.apache.openjpa.persistence.jdbc.annotations.UnenhancedInappropriateTransient.prePersist(),5,5
org.apache.openjpa.persistence.query.ParameterExpression.ParameterExpression(String),4,6
org.apache.openjpa.persistence.query.ParameterExpression.asExpression(AliasContext),6,6
org.apache.openjpa.persistence.query.ParameterExpression.asProjection(AliasContext),6,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.Company.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.Company.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.Company.getOrganization(),2,3
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.Company.addToOrganization(Division,VicePresident)",5,8
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.Company.removeFromOrganization(Division),3,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.Company.getOrganization(Division),4,5
org.apache.openjpa.persistence.identity.SQLBigDecimalIdEntity.getId(),1,1
org.apache.openjpa.persistence.identity.SQLBigDecimalIdEntity.setId(BigDecimal),2,2
org.apache.openjpa.persistence.identity.SQLBigDecimalIdEntity.getData(),1,2
org.apache.openjpa.persistence.identity.SQLBigDecimalIdEntity.setData(int),2,5
"org.apache.openjpa.lib.rop.AbstractResultList<E>.add(int,Object)",5,5
org.apache.openjpa.lib.rop.AbstractResultList<E>.readOnly(),6,10
org.apache.openjpa.lib.rop.AbstractResultList<E>.add(Object),3,3
org.apache.openjpa.lib.rop.AbstractResultList<E>.addAll(Collection<>),3,3
"org.apache.openjpa.lib.rop.AbstractResultList<E>.addAll(int,Collection<>)",4,4
org.apache.openjpa.lib.rop.AbstractResultList<E>.remove(int),3,3
org.apache.openjpa.lib.rop.AbstractResultList<E>.remove(Object),3,3
org.apache.openjpa.lib.rop.AbstractResultList<E>.removeAll(Collection<>),3,3
org.apache.openjpa.lib.rop.AbstractResultList<E>.retainAll(Collection<>),3,3
"org.apache.openjpa.lib.rop.AbstractResultList<E>.set(int,Object)",5,5
org.apache.openjpa.lib.rop.AbstractResultList<E>.clear(),1,1
org.apache.openjpa.lib.rop.AbstractResultList<E>.assertOpen(),5,6
org.apache.openjpa.lib.rop.AbstractResultList<E>.getUserObject(),2,5
org.apache.openjpa.lib.rop.AbstractResultList<E>.setUserObject(Object),4,8
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.SuperID.getId(),1,1
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.SuperID.setId(Integer),2,2
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.SuperID.hashCode(),2,2
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.SuperID.equals(Object),3,7
org.apache.openjpa.lib.rop.TestOrderedMergedResultObjectProvider.TestOrderedMergedResultObjectProvider(String),6,8
org.apache.openjpa.lib.rop.TestOrderedMergedResultObjectProvider.getResultList(ResultObjectProvider),5,12
org.apache.openjpa.lib.rop.TestOrderedMergedResultObjectProvider.getResultObjectProviders(List),17,106
org.apache.openjpa.lib.rop.TestOrderedMergedResultObjectProvider.main(String[]),3,4
"org.apache.openjpa.lib.rop.TestOrderedMergedResultObjectProvider.IntValueComparator.compare(Object,Object)",5,10
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalA.setStringA(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalA.getStringA(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalA.setIntA(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalA.getIntA(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalA.Id.Id(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalA.Id.Id(String),4,5
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalA.Id.toString(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalA.Id.hashCode(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalA.Id.equals(Object),2,2
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCEntityD.getEntityDData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCEntityD.setEntityDData(String),4,10
org.apache.openjpa.lib.util.svn.TestSVNUtils.TestSVNUtils(String),4,4
org.apache.openjpa.lib.util.svn.TestSVNUtils.testNull(),6,7
org.apache.openjpa.lib.util.svn.TestSVNUtils.testBasic(),7,8
org.apache.openjpa.lib.util.svn.TestSVNUtils.testGoodTrailingString(),8,9
org.apache.openjpa.lib.util.svn.TestSVNUtils.testMixedRevision(),8,9
org.apache.openjpa.lib.util.svn.TestSVNUtils.testMixedRevisionTrailingString(),10,11
org.apache.openjpa.lib.util.svn.TestSVNUtils.testBad(),7,8
org.apache.openjpa.lib.util.svn.TestSVNUtils.suite(),4,7
org.apache.openjpa.lib.util.svn.TestSVNUtils.main(String[]),7,7
org.apache.openjpa.persistence.inheritance.entity.SubclassK.setClassKName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.SubclassK.getClassKName(),2,3
org.apache.openjpa.persistence.inheritance.entity.SubclassK.toString(),2,5
org.apache.openjpa.conf.CallbackOptions.getPostPersistCallbackImmediate(),14,26
org.apache.openjpa.conf.CallbackOptions.setPostPersistCallbackImmediate(boolean),15,28
org.apache.openjpa.conf.CallbackOptions.getAllowsMultipleMethodsForSameCallback(),8,15
org.apache.openjpa.conf.CallbackOptions.setAllowsMultipleMethodsForSameCallback(boolean),9,17
org.apache.openjpa.conf.CallbackOptions.getAllowsDuplicateListener(),10,14
org.apache.openjpa.conf.CallbackOptions.setAllowsDuplicateListener(boolean),11,16
org.apache.openjpa.persistence.jdbc.annotations.MultiColumnVersionPC.getId(),0,0
org.apache.openjpa.persistence.jdbc.annotations.MultiColumnVersionPC.getName(),2,3
org.apache.openjpa.persistence.jdbc.annotations.MultiColumnVersionPC.setName(String),3,6
org.apache.openjpa.persistence.jdbc.oracle.TestAutoIncrement.setUp(),28,57
org.apache.openjpa.persistence.jdbc.oracle.TestAutoIncrement.testAutoIncrementIdentityWithNamedSequence(),19,26
org.apache.openjpa.persistence.jdbc.oracle.TestAutoIncrement.testAutoIncrementIdentityWithNativeSequence(),18,25
org.apache.openjpa.persistence.jdbc.oracle.TestAutoIncrement.createSequence(String),27,54
org.apache.openjpa.persistence.common.apps.PartPK.PartPK(),0,0
org.apache.openjpa.persistence.common.apps.PartPK.getTextileId(),2,3
org.apache.openjpa.persistence.common.apps.PartPK.setTextileId(Integer),3,6
org.apache.openjpa.persistence.common.apps.PartPK.getPartNumber(),1,1
org.apache.openjpa.persistence.common.apps.PartPK.setPartNumber(Integer),2,2
org.apache.openjpa.persistence.common.apps.PartPK.equals(Object),3,8
org.apache.openjpa.persistence.common.apps.PartPK.hashCode(),4,10
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3.AutoIncrementPC3(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3.AutoIncrementPC3(int),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3.setId(long),1,1
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3.getSetField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3.setSetField(Set),2,10
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3.setStringField(String),3,10
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3.getOneOne(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3.setOneOne(AutoIncrementPC3),3,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatC.setStringC(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatC.getStringC(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatC.setIntC(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatC.getIntC(),0,0
org.apache.openjpa.persistence.delimited.identifiers.xml.Car2.Car2(),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.Car2.Car2(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.Car2.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.xml.Car2.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.xml.Car2.getModel(),2,4
org.apache.openjpa.persistence.delimited.identifiers.xml.Car2.setModel(String),5,10
org.apache.openjpa.persistence.delimited.identifiers.xml.Car2.getColor(),2,4
org.apache.openjpa.persistence.delimited.identifiers.xml.Car2.setName(String),5,10
org.apache.openjpa.persistence.jdbc.common.apps.PagingPC.PagingPC(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.PagingPC.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.PagingPC.setIntField(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.PagingPC.getRel(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.PagingPC.setRel(PagingHelperPC),4,7
org.apache.openjpa.persistence.jdbc.common.apps.PagingPC.getRels(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.PagingPC.setRels(List),3,6
org.apache.openjpa.persistence.jdbc.common.apps.PagingPC.toString(),3,4
org.apache.openjpa.persistence.derivedid.ESQLDateID.ESQLDateID(),2,2
org.apache.openjpa.persistence.derivedid.ESQLDateID.ESQLDateID(Date),4,6
org.apache.openjpa.persistence.derivedid.ESQLDateID.getId(),1,1
org.apache.openjpa.persistence.derivedid.ESQLDateID.setId(Date),2,2
org.apache.openjpa.persistence.derivedid.ESQLDateID.getName(),2,3
org.apache.openjpa.persistence.derivedid.ESQLDateID.setName(String),3,6
org.apache.openjpa.instrumentation.DynamicProvider.start(),3,3
org.apache.openjpa.instrumentation.DynamicProvider.stop(),6,9
org.apache.openjpa.instrumentation.DynamicProvider.startInstrument(Instrument),2,6
"org.apache.openjpa.instrumentation.DynamicProvider.stopInstrument(Instrument,boolean)",3,7
org.apache.openjpa.instrumentation.DynamicProvider.getInstrumentAliases(),4,6
org.apache.openjpa.event.DetachListener.beforeDetach(LifecycleEvent),6,7
org.apache.openjpa.event.DetachListener.afterDetach(LifecycleEvent),6,7
org.apache.openjpa.jdbc.kernel.M21UniEmployee.getDepartment(),2,4
org.apache.openjpa.jdbc.kernel.M21UniEmployee.setDepartment(M21UniDepartment),3,7
org.apache.openjpa.jdbc.kernel.M21UniEmployee.getEmpid(),2,3
org.apache.openjpa.jdbc.kernel.M21UniEmployee.setEmpid(String),3,6
org.apache.openjpa.jdbc.kernel.M21UniEmployee.getVersion(),1,2
org.apache.openjpa.jdbc.kernel.M21UniEmployee.setVersion(int),2,5
org.apache.openjpa.jdbc.kernel.M21UniEmployee.getName(),2,3
org.apache.openjpa.jdbc.kernel.M21UniEmployee.setName(String),3,6
org.apache.openjpa.jdbc.kernel.M21UniEmployee.getSalary(),1,2
org.apache.openjpa.jdbc.kernel.M21UniEmployee.setSalary(float),2,5
org.apache.openjpa.persistence.jdbc.mapping.TestEnumXmlTypeMapping.setUp(),4,5
org.apache.openjpa.persistence.jdbc.mapping.TestEnumXmlTypeMapping.testEnumXmlType(),10,19
org.apache.openjpa.event.RemoteCommitListener.afterCommit(RemoteCommitEvent),10,12
org.apache.openjpa.event.RemoteCommitListener.close(),4,4
org.apache.openjpa.datacache.AbstractDataCache.getName(),2,3
org.apache.openjpa.datacache.AbstractDataCache.setName(String),3,6
org.apache.openjpa.datacache.AbstractDataCache.setEnableStatistics(boolean),4,7
org.apache.openjpa.datacache.AbstractDataCache.getEnableStatistics(),4,4
org.apache.openjpa.datacache.AbstractDataCache.getEvictionSchedule(),3,4
org.apache.openjpa.datacache.AbstractDataCache.setEvictionSchedule(String),4,5
org.apache.openjpa.datacache.AbstractDataCache.initialize(DataCacheManager),29,72
"org.apache.openjpa.datacache.AbstractDataCache.commit(Collection<DataCachePCData>,Collection<DataCachePCData>,Collection<DataCachePCData>,Collection<Object>)",28,116
org.apache.openjpa.datacache.AbstractDataCache.contains(Object),13,21
org.apache.openjpa.datacache.AbstractDataCache.containsAll(Collection<Object>),11,28
org.apache.openjpa.datacache.AbstractDataCache.get(Object),14,38
org.apache.openjpa.datacache.AbstractDataCache.getAll(List<Object>),12,36
org.apache.openjpa.datacache.AbstractDataCache.put(DataCachePCData),8,22
org.apache.openjpa.datacache.AbstractDataCache.update(DataCachePCData),6,10
org.apache.openjpa.datacache.AbstractDataCache.remove(Object),13,30
org.apache.openjpa.datacache.AbstractDataCache.removeAll(Collection<Object>),11,28
"org.apache.openjpa.datacache.AbstractDataCache.removeAll(Class<>,boolean)",7,12
org.apache.openjpa.datacache.AbstractDataCache.pin(Object),12,26
org.apache.openjpa.datacache.AbstractDataCache.pinAll(Collection<Object>),11,28
"org.apache.openjpa.datacache.AbstractDataCache.pinAll(Class<>,boolean)",9,12
org.apache.openjpa.datacache.AbstractDataCache.unpin(Object),12,26
org.apache.openjpa.datacache.AbstractDataCache.unpinAll(Collection<Object>),11,28
"org.apache.openjpa.datacache.AbstractDataCache.unpinAll(Class<>,boolean)",9,12
org.apache.openjpa.datacache.AbstractDataCache.clear(),7,9
org.apache.openjpa.datacache.AbstractDataCache.close(),1,2
org.apache.openjpa.datacache.AbstractDataCache.close(boolean),3,4
org.apache.openjpa.datacache.AbstractDataCache.isClosed(),1,2
org.apache.openjpa.datacache.AbstractDataCache.addExpirationListener(ExpirationListener),4,9
org.apache.openjpa.datacache.AbstractDataCache.removeExpirationListener(ExpirationListener),4,9
org.apache.openjpa.datacache.AbstractDataCache.toString(),2,4
org.apache.openjpa.datacache.AbstractDataCache.afterCommit(RemoteCommitEvent),35,73
"org.apache.openjpa.datacache.AbstractDataCache.keyRemoved(Object,boolean)",17,36
org.apache.openjpa.datacache.AbstractDataCache.recacheUpdates(),9,13
org.apache.openjpa.datacache.AbstractDataCache.getInternal(Object),5,8
"org.apache.openjpa.datacache.AbstractDataCache.putInternal(Object,DataCachePCData)",7,15
org.apache.openjpa.datacache.AbstractDataCache.putAllInternal(Collection<DataCachePCData>),7,14
org.apache.openjpa.datacache.AbstractDataCache.removeInternal(Object),6,11
"org.apache.openjpa.datacache.AbstractDataCache.removeAllInternal(Class<>,boolean)",7,7
org.apache.openjpa.datacache.AbstractDataCache.removeAllInternal(Collection<Object>),8,15
org.apache.openjpa.datacache.AbstractDataCache.removeAllTypeNamesInternal(Collection<String>),20,35
org.apache.openjpa.datacache.AbstractDataCache.clearInternal(),2,2
org.apache.openjpa.datacache.AbstractDataCache.pinInternal(Object),5,7
org.apache.openjpa.datacache.AbstractDataCache.unpinInternal(Object),5,7
"org.apache.openjpa.datacache.AbstractDataCache.getPartition(String,boolean)",8,11
org.apache.openjpa.datacache.AbstractDataCache.getPartitionNames(),6,7
org.apache.openjpa.datacache.AbstractDataCache.isPartitioned(),1,1
org.apache.openjpa.datacache.AbstractDataCache.getStatistics(),3,4
org.apache.openjpa.datacache.AbstractDataCache.setConfiguration(Configuration),6,15
org.apache.openjpa.datacache.AbstractDataCache.startConfiguration(),2,2
org.apache.openjpa.datacache.AbstractDataCache.endConfiguration(),3,5
"org.apache.openjpa.datacache.AbstractDataCache.fireEvent(Object,Object)",13,28
org.apache.openjpa.datacache.AbstractDataCache.getTypes(),4,5
org.apache.openjpa.datacache.AbstractDataCache.getExcludedTypes(),4,6
org.apache.openjpa.datacache.AbstractDataCache.setTypes(Set<String>),17,25
org.apache.openjpa.datacache.AbstractDataCache.setTypes(String),24,35
org.apache.openjpa.datacache.AbstractDataCache.setExcludedTypes(Set<String>),18,27
org.apache.openjpa.datacache.AbstractDataCache.setExcludedTypes(String),25,37
org.apache.openjpa.datacache.AbstractDataCache.selectCache(OpenJPAStateManager),5,6
org.apache.openjpa.datacache.AbstractDataCache.getEvictOnBulkUpdate(),3,6
org.apache.openjpa.datacache.AbstractDataCache.setEvictOnBulkUpdate(boolean),4,7
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaSerializer.TestXMLSchemaSerializer(),6,10
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaSerializer.TestXMLSchemaSerializer(String),5,7
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaSerializer.getSchemaGroup(),23,57
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaSerializer.main(String[]),7,8
org.apache.openjpa.persistence.compat.EntityB.getName(),2,3
org.apache.openjpa.persistence.compat.EntityB.setName(String),3,6
org.apache.openjpa.persistence.compat.EntityB.getId(),0,0
org.apache.openjpa.persistence.compat.EntityB.setId(int),1,1
org.apache.openjpa.persistence.compat.EntityB.getEntityA(),1,3
org.apache.openjpa.persistence.compat.EntityB.setEntityA(EntityA),2,6
org.apache.openjpa.lib.conf.BootstrapException.BootstrapException(),2,2
org.apache.openjpa.lib.conf.BootstrapException.BootstrapException(String),4,5
org.apache.openjpa.lib.conf.BootstrapException.BootstrapException(Throwable),4,5
"org.apache.openjpa.lib.conf.BootstrapException.BootstrapException(String,Throwable)",6,8
org.apache.openjpa.lib.conf.BootstrapException.setFatal(boolean),4,7
org.apache.openjpa.lib.conf.BootstrapException.isFatal(),1,2
org.apache.openjpa.jira1794.TestAggregateFunctions.setUp(),4,5
org.apache.openjpa.jira1794.TestAggregateFunctions.nullResultExpected(),2,2
org.apache.openjpa.jira1794.TestAggregateFunctions.testAggregateJPQL(),28,85
org.apache.openjpa.jira1794.TestAggregateFunctions.testAggregateCriteria(),38,206
"org.apache.openjpa.jira1794.TestAggregateFunctions.buildNumericCriteriaQuery(EntityManager,Class<T>,SingularAttribute<AggEntity,T>,int)",21,47
"org.apache.openjpa.jira1794.TestAggregateFunctions.buildAvgCriteriaQuery(EntityManager,Class<Double>,SingularAttribute<AggEntity,Double>)",15,31
"org.apache.openjpa.jira1794.TestAggregateFunctions.verifyResult(EntityManager,String[],String[],boolean)",8,14
"org.apache.openjpa.jira1794.TestAggregateFunctions.verifyResult(EntityManager,String[],String[],boolean,boolean)",19,43
"org.apache.openjpa.jira1794.TestAggregateFunctions.verifyQueryResult(Query,boolean)",4,9
"org.apache.openjpa.jira1794.TestAggregateFunctions.verifyQueryResult(Query,boolean,boolean)",11,35
org.apache.openjpa.lib.encryption.EncryptionProvider.decrypt(String),15,26
org.apache.openjpa.lib.encryption.EncryptionProvider.encrypt(String),14,20
org.apache.openjpa.persistence.embed.attrOverrides.EmergencyContactInfo.getPhoneNumber(),1,3
org.apache.openjpa.persistence.embed.attrOverrides.EmergencyContactInfo.setPhoneNumber(PhoneNumber),2,6
org.apache.openjpa.persistence.embed.attrOverrides.EmergencyContactInfo.getAddress(),1,3
org.apache.openjpa.persistence.embed.attrOverrides.EmergencyContactInfo.setAddress(Address),2,6
org.apache.openjpa.persistence.embed.attrOverrides.EmergencyContactInfo.getFName(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.EmergencyContactInfo.setFName(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.EmergencyContactInfo.getLName(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.EmergencyContactInfo.setLName(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.EmergencyContactInfo.getNickNames(),4,6
org.apache.openjpa.persistence.embed.attrOverrides.EmergencyContactInfo.setNickNames(Collection<String>),5,11
org.apache.openjpa.persistence.embed.attrOverrides.EmergencyContactInfo.addNickName(String),5,11
"org.apache.openjpa.kernel.HollowState.initialize(StateManagerImpl,PCState)",9,13
org.apache.openjpa.kernel.HollowState.delete(StateManagerImpl),6,8
org.apache.openjpa.kernel.HollowState.transactional(StateManagerImpl),5,5
org.apache.openjpa.kernel.HollowState.release(StateManagerImpl),4,4
"org.apache.openjpa.kernel.HollowState.beforeRead(StateManagerImpl,int)",6,6
"org.apache.openjpa.kernel.HollowState.beforeOptimisticRead(StateManagerImpl,int)",7,7
"org.apache.openjpa.kernel.HollowState.beforeNontransactionalRead(StateManagerImpl,int)",7,7
"org.apache.openjpa.kernel.HollowState.beforeWrite(StateManagerImpl,int,boolean)",7,7
"org.apache.openjpa.kernel.HollowState.beforeOptimisticWrite(StateManagerImpl,int,boolean)",8,8
"org.apache.openjpa.kernel.HollowState.beforeNontransactionalWrite(StateManagerImpl,int,boolean)",8,8
org.apache.openjpa.kernel.HollowState.isPersistent(),1,1
org.apache.openjpa.kernel.HollowState.toString(),2,3
org.apache.openjpa.persistence.jdbc.schema.TestSchemaClone.TestSchemaClone(),5,8
org.apache.openjpa.persistence.jdbc.schema.TestSchemaClone.TestSchemaClone(String),4,6
org.apache.openjpa.persistence.jdbc.schema.TestSchemaClone.getSchemaGroup(),5,13
org.apache.openjpa.persistence.jdbc.schema.TestSchemaClone.main(String[]),6,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.Employee.Employee(),1,1
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.Employee.Employee(String,Date)",5,9
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.Employee.getEmpPK(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.Employee.setEmpPK(EmployeePK),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.Employee.getDepartment(),1,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.Employee.setDepartment(Department),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppA.setPk1(String),2,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppA.getPk1(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppA.setPk2(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppA.getPk2(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppA.setStringA(String),2,4
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppA.getStringA(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppA.setIntA(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppA.getIntA(),0,0
org.apache.openjpa.persistence.TupleFactory.TupleFactory(List<TupleElement<>>),9,16
org.apache.openjpa.persistence.TupleFactory.TupleFactory(TupleElement<>),6,8
org.apache.openjpa.persistence.TupleFactory.TupleFactory(Selection<>),11,21
org.apache.openjpa.persistence.TupleFactory.getElements(),4,5
org.apache.openjpa.persistence.TupleFactory.newInstance(),3,9
org.apache.openjpa.persistence.TupleFactory.getIndex(TupleElement<>),8,10
org.apache.openjpa.persistence.TupleFactory.getIndex(String),12,21
org.apache.openjpa.util.ObjectNotFoundException.ObjectNotFoundException(Message),5,6
org.apache.openjpa.util.ObjectNotFoundException.ObjectNotFoundException(Object),8,14
"org.apache.openjpa.util.ObjectNotFoundException.ObjectNotFoundException(Collection,Throwable[])",13,17
org.apache.openjpa.util.ObjectNotFoundException.getSubtype(),3,3
org.apache.openjpa.persistence.criteria.CriteriaExpression.acceptVisit(CriteriaExpressionVisitor),15,22
org.apache.openjpa.persistence.criteria.CriteriaExpression.asValue(AliasContext),8,11
org.apache.openjpa.persistence.criteria.CriteriaExpression.asVariable(AliasContext),8,11
org.apache.openjpa.persistence.criteria.CriteriaExpression.asProjection(AliasContext),9,12
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.JDBCFetchPlanImpl(FetchConfiguration),8,11
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.newDelegatingFetchConfiguration(FetchConfiguration),7,22
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.getEagerFetchMode(),5,13
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setEagerFetchMode(FetchMode),9,19
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setEagerFetchMode(int),6,14
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.getSubclassFetchMode(),5,13
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setSubclassFetchMode(FetchMode),9,19
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setSubclassFetchMode(int),6,14
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.getResultSetType(),6,15
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setResultSetType(ResultSetType),9,20
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setResultSetType(int),7,14
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.getFetchDirection(),4,11
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setFetchDirection(FetchDirection),8,17
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setFetchDirection(int),5,12
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.getLRSSizeAlgorithm(),6,14
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setLRSSizeAlgorithm(LRSSizeAlgorithm),10,23
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.getLRSSize(),3,5
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setLRSSize(int),7,16
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.getJoinSyntax(),5,11
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setJoinSyntax(JoinSyntax),9,17
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setJoinSyntax(int),6,12
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.getIsolation(),5,9
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setIsolation(IsolationLevel),8,14
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.addFetchGroup(String),5,11
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.addFetchGroups(Collection),5,11
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.addFetchGroups(String),5,11
"org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.addField(Class,String)",7,15
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.addField(String),6,13
"org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.addFields(Class,Collection)",7,15
"org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.addFields(Class,String)",7,15
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.addFields(Collection),6,13
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.addFields(String),6,13
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.clearFetchGroups(),3,8
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.clearFields(),4,8
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.removeFetchGroup(String),5,11
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.removeFetchGroups(Collection),5,11
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.removeFetchGroups(String),5,11
"org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.removeField(Class,String)",7,15
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.removeField(String),6,13
"org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.removeFields(Class,Collection)",7,15
"org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.removeFields(Class,String)",7,15
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.removeFields(Collection),6,13
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.removeFields(String),6,13
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.resetFetchGroups(),4,10
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setQueryResultCacheEnabled(boolean),8,18
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setFetchBatchSize(int),6,20
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setLockTimeout(int),6,14
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setMaxFetchDepth(int),6,16
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setReadLockMode(LockModeType),8,19
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setWriteLockMode(LockModeType),8,19
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setQueryTimeout(int),6,14
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.getIgnoreDfgForFkSelect(),4,7
org.apache.openjpa.persistence.jdbc.JDBCFetchPlanImpl.setIgnoreDfgForFkSelect(boolean),5,9
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCLeafB2.getLeafB2Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCLeafB2.setLeafB2Data(String),4,10
org.apache.openjpa.persistence.enhance.common.apps.SubclassTestInstance.setStringField(String),3,4
org.apache.openjpa.persistence.enhance.common.apps.SubclassTestInstance.getStringField(),2,3
org.apache.openjpa.persistence.delimited.identifiers.Animal.Animal(),1,1
org.apache.openjpa.persistence.delimited.identifiers.Animal.Animal(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.Animal.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.Animal.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.Animal.getType(),2,4
org.apache.openjpa.persistence.delimited.identifiers.Animal.setType(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.Animal.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.Animal.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.Animal.getAge(),1,3
org.apache.openjpa.persistence.delimited.identifiers.Animal.setAge(int),3,9
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCEntityB.getEntityBData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCEntityB.setEntityBData(String),4,10
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Item1.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Item1.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Item1.getImages(),3,5
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Item1.addImage(String,String)",6,13
org.apache.openjpa.persistence.compat.Bi_1ToM_Map_RelKey_JT.getId(),0,0
org.apache.openjpa.persistence.compat.Bi_1ToM_Map_RelKey_JT.getName(),2,3
org.apache.openjpa.persistence.compat.Bi_1ToM_Map_RelKey_JT.setName(String),3,6
org.apache.openjpa.persistence.compat.Bi_1ToM_Map_RelKey_JT.getEntityCs(),4,8
"org.apache.openjpa.persistence.compat.Bi_1ToM_Map_RelKey_JT.setEntityCs(Map<EntityC,EntityC_B1M_Map_RelKey_JT>)",5,11
org.apache.openjpa.persistence.compat.Bi_1ToM_Map_RelKey_JT.hashCode(),3,5
org.apache.openjpa.persistence.compat.Bi_1ToM_Map_RelKey_JT.equals(Object),12,44
"org.apache.openjpa.persistence.compat.Bi_1ToM_Map_RelKey_JT.getValue(Map,Object)",9,23
org.apache.openjpa.persistence.inheritance.entity.BaseCallback.basePostPersist(),4,6
org.apache.openjpa.persistence.datacache.TestBulkUpdatesAndVersionColumn.setUp(),23,35
org.apache.openjpa.persistence.datacache.TestBulkUpdatesAndVersionColumn.testSelectOnOplockField(),15,20
org.apache.openjpa.persistence.datacache.TestBulkUpdatesAndVersionColumn.testOplockFieldMapping(),16,23
org.apache.openjpa.persistence.datacache.TestBulkUpdatesAndVersionColumn.testBulkUpdateWithManualVersionIncrement(),7,9
org.apache.openjpa.persistence.datacache.TestBulkUpdatesAndVersionColumn.testBulkUpdateWithoutManualVersionIncrement(),7,9
org.apache.openjpa.persistence.datacache.TestBulkUpdatesAndVersionColumn.bulkUpdateHelper(boolean),36,85
org.apache.openjpa.persistence.inheritance.entity.SubclassJ.setClassJName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.SubclassJ.getClassJName(),2,3
org.apache.openjpa.persistence.inheritance.entity.SubclassJ.toString(),3,7
org.apache.openjpa.persistence.inheritance.entity.SubclassJ.setVersion(int),2,5
org.apache.openjpa.persistence.inheritance.entity.SubclassJ.getVersion(),1,2
org.apache.openjpa.meta.TestMemberProvider.testField(),8,15
org.apache.openjpa.meta.TestMemberProvider.testMethod(),8,16
org.apache.openjpa.meta.TestMemberProvider.roundtrip(MemberProvider),14,34
org.apache.openjpa.persistence.inheritance.polymorphic.FrenchParagraph.getContent(),2,3
org.apache.openjpa.persistence.inheritance.polymorphic.FrenchParagraph.setContent(String),3,6
org.apache.openjpa.lib.conf.GenericConfigurable.setInto(Options),23,33
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCEntityD.getEntityDData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCEntityD.setEntityDData(String),4,10
org.apache.openjpa.persistence.arrays.TestAnnoExceptionEntity.setUp(),4,5
org.apache.openjpa.persistence.arrays.TestAnnoExceptionEntity.testExceptionArrayAsLob(),24,51
org.apache.openjpa.persistence.arrays.TestAnnoExceptionEntity.testExceptionPersistentCollection(),27,61
org.apache.openjpa.persistence.arrays.TestAnnoExceptionEntity.testExceptionElementCollection(),28,63
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCEntityD.getEntityDData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCEntityD.setEntityDData(String),4,10
org.apache.openjpa.persistence.access.xml.XMLPropertySub.getCreateDate(),3,5
org.apache.openjpa.persistence.access.xml.XMLPropertySub.setCreateDate(Date),4,8
org.apache.openjpa.persistence.access.xml.XMLPropertySub.equals(Object),10,32
org.apache.openjpa.persistence.annotations.PColl_EntityStringLazy.getId(),0,0
org.apache.openjpa.persistence.annotations.PColl_EntityStringLazy.setId(int),1,1
org.apache.openjpa.persistence.annotations.PColl_EntityStringLazy.getCollectionOfStrings(),4,6
org.apache.openjpa.persistence.annotations.PColl_EntityStringLazy.setCollectionOfStrings(Set<String>),4,11
org.apache.openjpa.persistence.callbacks.TestMessageListeners.setUp(),3,4
org.apache.openjpa.persistence.callbacks.TestMessageListeners.getPersistenceUnitName(),5,5
org.apache.openjpa.persistence.callbacks.TestMessageListeners.testUpdateInPrePersist(),56,144
org.apache.openjpa.persistence.callbacks.TestMessageListeners.testUpdateInPreUpdate(),58,211
"org.apache.openjpa.persistence.callbacks.TestMessageListeners.assertStatus(int,int,int,int,int,int,int)",12,78
org.apache.openjpa.lib.util.TestPropertiesParser.testSimpleProperties(),12,29
org.apache.openjpa.lib.util.TestPropertiesParser.testComments(),16,35
org.apache.openjpa.lib.util.TestPropertiesParser.testMixedContent(),18,37
org.apache.openjpa.lib.util.TestPropertiesParser.testMultiLineInput(),11,18
org.apache.openjpa.lib.util.TestPropertiesParser.testEmptyLines(),10,16
org.apache.openjpa.lib.util.TestPropertiesParser.testAddProperties(),16,35
org.apache.openjpa.lib.util.TestPropertiesParser.testAddAndMutateProperties(),19,33
org.apache.openjpa.lib.util.TestPropertiesParser.testEscapedEquals(),11,18
org.apache.openjpa.lib.util.TestPropertiesParser.testLineTypes(),24,44
org.apache.openjpa.lib.util.TestPropertiesParser.testSpecialChars(),4,16
"org.apache.openjpa.lib.util.TestPropertiesParser.testSpecialChars(boolean,boolean)",64,209
org.apache.openjpa.lib.util.TestPropertiesParser.randomChar(),6,12
org.apache.openjpa.lib.util.TestPropertiesParser.randomString(int),7,17
org.apache.openjpa.lib.util.TestPropertiesParser.testEquivalentStore(),27,72
org.apache.openjpa.lib.util.TestPropertiesParser.stripComments(byte[]),18,40
org.apache.openjpa.lib.util.TestPropertiesParser.testDuplicateProperties(),20,45
org.apache.openjpa.lib.util.TestPropertiesParser.testMultipleLoads(),19,59
org.apache.openjpa.lib.util.TestPropertiesParser.toProperties(String),5,10
"org.apache.openjpa.lib.util.TestPropertiesParser.toProperties(String,FormatPreservingProperties)",12,27
"org.apache.openjpa.lib.util.TestPropertiesParser.assertRoundTrip(String,Properties)",23,60
"org.apache.openjpa.lib.util.TestPropertiesParser.assertEquals(String,String)",5,15
"org.apache.openjpa.lib.util.TestPropertiesParser.assertPropertiesSame(Properties,Properties)",3,6
"org.apache.openjpa.lib.util.TestPropertiesParser.assertProperties(String[][],Properties)",6,13
org.apache.openjpa.persistence.jdbc.version.model.IntVersion.getId(),0,0
org.apache.openjpa.persistence.jdbc.version.model.IntVersion.setId(int),1,1
org.apache.openjpa.persistence.jdbc.version.model.IntVersion.getVersion(),1,2
org.apache.openjpa.persistence.jdbc.version.model.IntVersion.setVersion(int),2,5
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.AnnotationPersistenceXMLMetaDataParser(OpenJPAConfiguration),25,137
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.getConfiguration(),5,7
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.getLog(),2,5
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.getRepository(),20,60
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.setRepository(MetaDataRepository),7,12
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.clear(),1,1
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.parse(Class<>),24,33
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.parseXMLClassAnnotations(Class<>),24,53
org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.getXMLMetaData(Class<>),17,44
"org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.parseXmlRootElement(Class,XMLMetaData)",17,74
"org.apache.openjpa.persistence.AnnotationPersistenceXMLMetaDataParser.populateFromReflection(Class,XMLMetaData)",48,233
org.apache.openjpa.lib.jdbc.DelegatingConnection.DelegatingConnection(Connection),4,14
org.apache.openjpa.lib.jdbc.DelegatingConnection.getDelegate(),4,5
org.apache.openjpa.lib.jdbc.DelegatingConnection.getInnermostDelegate(),9,13
org.apache.openjpa.lib.jdbc.DelegatingConnection.hashCode(),4,6
org.apache.openjpa.lib.jdbc.DelegatingConnection.equals(Object),6,11
org.apache.openjpa.lib.jdbc.DelegatingConnection.toString(),8,16
org.apache.openjpa.lib.jdbc.DelegatingConnection.appendInfo(StringBuffer),6,10
org.apache.openjpa.lib.jdbc.DelegatingConnection.createStatement(),4,7
org.apache.openjpa.lib.jdbc.DelegatingConnection.createStatement(boolean),12,30
org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(String),7,11
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(String,boolean)",21,46
org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareCall(String),8,11
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareCall(String,boolean)",16,38
org.apache.openjpa.lib.jdbc.DelegatingConnection.nativeSQL(String),5,9
org.apache.openjpa.lib.jdbc.DelegatingConnection.setAutoCommit(boolean),7,11
org.apache.openjpa.lib.jdbc.DelegatingConnection.getAutoCommit(),5,7
org.apache.openjpa.lib.jdbc.DelegatingConnection.commit(),4,5
org.apache.openjpa.lib.jdbc.DelegatingConnection.rollback(),4,5
org.apache.openjpa.lib.jdbc.DelegatingConnection.close(),4,5
org.apache.openjpa.lib.jdbc.DelegatingConnection.isClosed(),4,5
org.apache.openjpa.lib.jdbc.DelegatingConnection.getMetaData(),5,9
org.apache.openjpa.lib.jdbc.DelegatingConnection.getMetaData(boolean),13,37
org.apache.openjpa.lib.jdbc.DelegatingConnection.setReadOnly(boolean),6,9
org.apache.openjpa.lib.jdbc.DelegatingConnection.isReadOnly(),4,5
org.apache.openjpa.lib.jdbc.DelegatingConnection.setCatalog(String),7,10
org.apache.openjpa.lib.jdbc.DelegatingConnection.getCatalog(),5,6
org.apache.openjpa.lib.jdbc.DelegatingConnection.setTransactionIsolation(int),6,9
org.apache.openjpa.lib.jdbc.DelegatingConnection.getTransactionIsolation(),5,7
org.apache.openjpa.lib.jdbc.DelegatingConnection.getWarnings(),5,7
org.apache.openjpa.lib.jdbc.DelegatingConnection.clearWarnings(),4,5
"org.apache.openjpa.lib.jdbc.DelegatingConnection.createStatement(int,int)",6,11
"org.apache.openjpa.lib.jdbc.DelegatingConnection.createStatement(int,int,boolean)",14,36
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(String,int,int)",9,15
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(String,int,int,boolean)",17,44
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareCall(String,int,int)",10,15
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareCall(String,int,int,boolean)",18,44
org.apache.openjpa.lib.jdbc.DelegatingConnection.getTypeMap(),6,9
org.apache.openjpa.lib.jdbc.DelegatingConnection.setTypeMap(Map<Class<String>>),7,13
org.apache.openjpa.lib.jdbc.DelegatingConnection.setHoldability(int),5,9
org.apache.openjpa.lib.jdbc.DelegatingConnection.getHoldability(),4,5
org.apache.openjpa.lib.jdbc.DelegatingConnection.setSavepoint(),5,8
org.apache.openjpa.lib.jdbc.DelegatingConnection.setSavepoint(String),6,11
org.apache.openjpa.lib.jdbc.DelegatingConnection.rollback(Savepoint),5,8
org.apache.openjpa.lib.jdbc.DelegatingConnection.releaseSavepoint(Savepoint),5,10
"org.apache.openjpa.lib.jdbc.DelegatingConnection.createStatement(int,int,int)",9,25
"org.apache.openjpa.lib.jdbc.DelegatingConnection.createStatement(int,int,int,boolean)",14,50
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(String,int,int,int)",11,29
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(String,int,int,int,boolean)",16,57
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareCall(String,int,int,int)",12,29
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareCall(String,int,int,int,boolean)",17,57
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(String,int)",9,17
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(String,int,boolean)",14,39
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(String,int[])",8,15
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(String,int[],boolean)",13,37
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(String,String[])",8,16
"org.apache.openjpa.lib.jdbc.DelegatingConnection.prepareStatement(String,String[],boolean)",13,38
org.apache.openjpa.lib.jdbc.DelegatingConnection.isWrapperFor(Class<>),6,7
org.apache.openjpa.lib.jdbc.DelegatingConnection.unwrap(Class<T>),6,7
"org.apache.openjpa.lib.jdbc.DelegatingConnection.createArrayOf(String,Object[])",10,16
org.apache.openjpa.lib.jdbc.DelegatingConnection.createBlob(),5,8
org.apache.openjpa.lib.jdbc.DelegatingConnection.createClob(),5,8
org.apache.openjpa.lib.jdbc.DelegatingConnection.createNClob(),5,8
org.apache.openjpa.lib.jdbc.DelegatingConnection.createSQLXML(),5,8
"org.apache.openjpa.lib.jdbc.DelegatingConnection.createStruct(String,Object[])",10,16
org.apache.openjpa.lib.jdbc.DelegatingConnection.getClientInfo(),6,8
org.apache.openjpa.lib.jdbc.DelegatingConnection.getClientInfo(String),7,11
org.apache.openjpa.lib.jdbc.DelegatingConnection.isValid(int),5,7
org.apache.openjpa.lib.jdbc.DelegatingConnection.setClientInfo(Properties),7,14
"org.apache.openjpa.lib.jdbc.DelegatingConnection.setClientInfo(String,String)",9,17
org.apache.openjpa.lib.jdbc.DelegatingConnection.abort(Executor),6,8
org.apache.openjpa.lib.jdbc.DelegatingConnection.getNetworkTimeout(),6,7
"org.apache.openjpa.lib.jdbc.DelegatingConnection.setNetworkTimeout(Executor,int)",9,11
org.apache.openjpa.lib.jdbc.DelegatingConnection.getSchema(),6,7
org.apache.openjpa.lib.jdbc.DelegatingConnection.setSchema(String),7,9
org.apache.openjpa.persistence.delimited.identifiers.Dog2.Dog2(),1,1
org.apache.openjpa.persistence.delimited.identifiers.Dog2.Dog2(int),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.AnnoTest2(),2,2
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.AnnoTest2(long,String)",3,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.setPk1(long),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.getPk1(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.setPk2(String),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.getPk2(),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.getVersion(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.setBasic(String),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.getBasic(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.setInverseOneOne(AnnoTest1),4,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.getInverseOneOne(),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.setOneManyOwner(AnnoTest1),4,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.getOneManyOwner(),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.getManyMany(),1,1
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.Oid.Oid(),1,1
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.Oid.Oid(long,String)",2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.Oid.Oid(String),7,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.Oid.equals(Object),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.Oid.hashCode(),2,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2.Oid.toString(),1,2
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.setUp(),10,13
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.setCandidate(Query,Class)",17,43
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.queryQualifiedId(boolean),40,219
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.testQueryObject(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.createObj(),16,27
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.createEmployee(EntityManager,int)",15,40
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.createDepartment(EntityManager,int)",6,10
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.findObj(),9,15
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.queryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.queryPhoneNumber(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.queryEmployee(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.assertEmployee(Employee),10,27
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.assertPhoneNumber(PhoneNumber),10,20
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.checkPhoneMap(Map<Department,PhoneNumber>,Map<Department,PhoneNumber>)",14,37
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.TestMany2ManyMapEx3.checkEmpMap(Map<FullName,Employee>,Map<FullName,Employee>)",15,39
org.apache.openjpa.persistence.compat.DepartmentId.DepartmentId(),1,1
org.apache.openjpa.persistence.compat.DepartmentId.DepartmentId(String),3,5
org.apache.openjpa.persistence.compat.DepartmentId.hashCode(),3,5
org.apache.openjpa.persistence.compat.DepartmentId.equals(Object),5,14
org.apache.openjpa.persistence.inheritance.jointable.onetomany.TestJointableOneToMany.setUp(),7,13
org.apache.openjpa.persistence.inheritance.jointable.onetomany.TestJointableOneToMany.initialize(),30,109
org.apache.openjpa.persistence.inheritance.jointable.onetomany.TestJointableOneToMany.test(),25,72
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdResultSets.setUp(),26,76
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdResultSets.tearDown(),3,4
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdResultSets.getPersistenceUnitName(),9,9
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdResultSets.createChevrolet(int),7,15
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdResultSets.createPontiac(int),6,14
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdResultSets.testCreate(),10,16
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdResultSets.runQueries(),5,5
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimIdResultSets.resultSetQuery(),19,62
org.apache.openjpa.persistence.inheritance.mappedsuperclass.CashBaseEntity.getCreateUser(),3,5
org.apache.openjpa.persistence.inheritance.mappedsuperclass.CashBaseEntity.setCreateUser(String),4,10
org.apache.openjpa.persistence.inheritance.mappedsuperclass.CashBaseEntity.getCreateTime(),3,5
org.apache.openjpa.persistence.inheritance.mappedsuperclass.CashBaseEntity.setCreateTime(Date),4,10
org.apache.openjpa.persistence.inheritance.mappedsuperclass.CashBaseEntity.getUpdateUser(),3,5
org.apache.openjpa.persistence.inheritance.mappedsuperclass.CashBaseEntity.setUpdateUser(String),4,10
org.apache.openjpa.persistence.inheritance.mappedsuperclass.CashBaseEntity.getVersion(),1,2
org.apache.openjpa.persistence.inheritance.mappedsuperclass.CashBaseEntity.getUpdateTime(),3,5
org.apache.openjpa.persistence.inheritance.mappedsuperclass.CashBaseEntity.setUpdateTime(Date),4,10
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest3.AnnoTest3(),2,2
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest3.AnnoTest3(long),2,2
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest3.AnnoTest3(Long),2,2
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest3.setBasic2(int),2,3
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest3.getBasic2(),1,2
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest3.getSubOneOne(),3,4
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest3.setSubOneOne(AnnoTest2),4,7
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.XMLPersistenceMetaDataParser(OpenJPAConfiguration),20,37
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getConfiguration(),5,7
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getAnnotationParser(),11,17
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.setAnnotationParser(AnnotationPersistenceMetaDataParser),12,20
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getRepository(),19,59
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.setRepository(MetaDataRepository),32,53
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getEnvClassLoader(),7,11
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.setEnvClassLoader(ClassLoader),8,15
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getMappingOverride(),17,24
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.setMappingOverride(boolean),18,27
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getMode(),11,14
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.setMode(int,boolean)",8,24
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.setMode(int),8,16
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parse(URL),23,42
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parse(File),23,42
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.isMetaDataMode(),7,11
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.isQueryMode(),6,10
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.isMappingMode(),6,10
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.isMappingOverrideMode(),8,17
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.pushElement(Object),8,12
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.popElement(),6,9
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.peekElement(),6,9
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.currentElement(),11,16
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.currentStrategy(),4,9
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.currentParent(),8,11
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.isRuntime(),7,11
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getSchemaSource(),33,119
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getPackageAttributeName(),3,3
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getClassAttributeName(),3,3
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getClassElementDepth(),2,2
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.isClassElementName(String),8,14
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.reset(),24,32
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startSystemElement(String,Attributes)",57,195
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endSystemElement(String),26,55
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startSystemMappingElement(String,Attributes)",16,20
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endSystemMappingElement(String),10,12
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startClassElement(String,Attributes)",78,327
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endClassElement(String),42,90
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.warnUnsupportedTag(String),11,21
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startClassMappingElement(String,Attributes)",14,18
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endClassMappingElement(String),8,10
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.isMetaDataComplete(Attributes),8,11
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.resetAnnotationParser(),9,16
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startClass(String,Attributes)",90,346
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endClass(String),15,24
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startClassMapping(ClassMetaData,boolean,Attributes)",11,14
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endClassMapping(ClassMetaData),7,9
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endAccess(),5,8
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.toAccessType(String),15,34
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startFlushMode(Attributes),16,25
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startSequenceGenerator(Attributes),58,204
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endSequenceGenerator(),2,2
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startId(Attributes),14,20
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endId(),4,4
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startEmbeddedId(Attributes),21,43
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endEmbeddedId(),5,5
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startIdClass(Attributes),27,46
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endIdClass(),2,2
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startLob(Attributes),23,55
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endLob(),3,3
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startGeneratedValue(Attributes),28,57
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endGeneratedValue(),4,4
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startCascade(Object,Attributes)",32,79
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.setCascades(FieldMetaData),22,86
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseField(Attributes),48,175
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.finishField(),15,26
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getFieldAccess(FieldMetaData,Attributes)",27,85
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startFieldMapping(FieldMetaData,Attributes)",11,16
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endFieldMapping(FieldMetaData),8,12
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startVersion(Attributes),13,21
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endVersion(),5,5
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startStrategy(PersistenceStrategy,Attributes)",32,83
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endStrategy(PersistenceStrategy),6,8
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseStrategy(FieldMetaData,PersistenceStrategy,Attributes)",31,86
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseBasic(FieldMetaData,Attributes)",17,24
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseEmbedded(FieldMetaData,Attributes)",21,41
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.assertPC(FieldMetaData,String)",19,25
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseOneToOne(FieldMetaData,Attributes)",37,91
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseManyToOne(FieldMetaData,Attributes)",35,78
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseManyToMany(FieldMetaData,Attributes)",27,43
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.assertPCCollection(FieldMetaData,String)",23,39
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseOneToMany(FieldMetaData,Attributes)",29,57
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.setOrphanRemoval(ValueMetaData,boolean)",10,20
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseElementCollection(FieldMetaData,Attributes)",35,96
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startMapKey(Attributes),22,46
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startMapKeyClass(Attributes),26,49
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endOrderBy(),28,66
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startNamedQuery(Attributes),61,198
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.processNamedQueryLockModeType(Log,String,String)",40,100
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endNamedQuery(),6,6
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startQueryString(Attributes),7,7
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endQueryString(),10,19
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startQueryHint(Attributes),15,28
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endQueryHint(),4,4
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startNamedNativeQuery(Attributes),58,184
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endNamedNativeQuery(),6,6
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startEntityListeners(Attributes),21,38
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startExcludeDefaultListeners(Attributes),17,28
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startExcludeSuperclassListeners(Attributes),18,34
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startEntityListener(Attributes),40,78
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endEntityListener(),17,25
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startCallback(MetaDataTag,Attributes)",48,150
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.storeCallbacks(ClassMetaData),29,94
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startOrderColumn(Attributes),6,6
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.classForName(String),9,13
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.addDeferredEmbeddableMetaData(),29,59
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.addDeferredEmbeddableMetaData(Class<>,int)",32,93
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.setDeferredEmbeddableAccessType(Class<>,int)",6,13
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.clearDeferredMetaData(),6,6
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.isDeferredEmbeddable(Class<>,MetaDataContext)",14,25
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.deferEmbeddable(Class<>,MetaDataContext)",13,37
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.applyDeferredEmbeddableOverrides(Class<>),7,10
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.addToParseList(ArrayList<Class<>>),4,14
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.addToParseList(Class<>),6,16
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseListContains(Class<>),7,16
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getParseList(),7,11
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getParseClass(),5,5
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startDelimitedIdentifiers(),3,3
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.normalizeSequenceName(String),5,9
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.normalizeSchemaName(String),5,9
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.normalizeCatalogName(String),5,9
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.isDuplicateClass(ClassMetaData),23,38
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.isDuplicateQuery(QueryMetaData),17,36
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.getLineNum(),5,15
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startDatastoreId(Attributes),29,55
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startDataCache(Attributes),25,69
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startExtendedStrategy(PersistenceStrategy,Attributes)",15,23
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endExtendedStrategy(PersistenceStrategy),10,13
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseExtendedStrategy(FieldMetaData,PersistenceStrategy,Attributes)",49,137
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseExtendedBasic(FieldMetaData,Attributes)",15,21
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseExtendedEmbedded(FieldMetaData,Attributes)",15,21
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseExtendedOneToOne(FieldMetaData,Attributes)",14,20
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseExtendedManyToOne(FieldMetaData,Attributes)",14,20
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseExtendedManyToMany(FieldMetaData,Attributes)",14,20
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseExtendedOneToMany(FieldMetaData,Attributes)",14,20
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseExtendedElementCollection(FieldMetaData,Attributes)",16,22
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parsePersistent(FieldMetaData,Attributes)",34,71
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parsePersistentCollection(FieldMetaData,Attributes)",18,28
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parsePersistentMap(FieldMetaData,Attributes)",19,34
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseCommonExtendedAttributes(FieldMetaData,Attributes)",19,58
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseStrategy(FieldMetaData,Attributes)",8,8
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startReadOnly(Attributes),23,48
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseDependentAttr(FieldMetaData,Attributes)",21,45
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseElementDependentAttr(FieldMetaData,Attributes)",22,54
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseKeyDependentAttr(FieldMetaData,Attributes)",22,54
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseElementClassCriteriaAttr(FieldMetaData,Attributes)",19,45
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseTypeAttr(FieldMetaData,Attributes)",22,50
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseLRSAttr(FieldMetaData,Attributes)",17,30
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseElementTypeAttr(FieldMetaData,Attributes)",23,52
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseKeyTypeAttr(FieldMetaData,Attributes)",23,52
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseTypeStr(String),11,69
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseInverseLogicalAttr(FieldMetaData,Attributes)",17,29
"org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.parseEagerFetchModeAttr(FieldMetaData,Attributes)",13,13
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startExternalValues(Attributes),9,11
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endExternalValues(),12,22
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startExternalValue(Attributes),12,30
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startExternalizer(Attributes),6,6
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endExternalizer(),12,20
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startFactory(Attributes),6,6
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endFactory(),12,20
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startFetchGroups(Attributes),9,12
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startFetchGroup(Attributes),20,28
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endFetchGroup(),16,57
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startFetchAttribute(Attributes),18,41
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.startReferencedFetchGroup(Attributes),10,14
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endReferencedFetchGroup(),8,9
org.apache.openjpa.persistence.XMLPersistenceMetaDataParser.endExtendedClass(String),19,33
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.DefaultCallbackListener.DefaultCallbackListener(),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.DefaultCallbackListener.prePersist(Object),12,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.DefaultCallbackListener.postPersist(Object),12,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.DefaultCallbackListener.postRemove(Object),12,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.DefaultCallbackListener.preRemove(Object),12,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.DefaultCallbackListener.postUpdate(Object),12,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.DefaultCallbackListener.preUpdate(Object),12,15
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.DefaultCallbackListener.postLoad(Object),12,15
org.apache.openjpa.persistence.event.RemoteEventBase.RemoteEventBase(String),5,5
org.apache.openjpa.persistence.event.RemoteEventBase.setUp(),6,6
org.apache.openjpa.persistence.event.RemoteEventBase.tearDown(),14,19
"org.apache.openjpa.persistence.event.RemoteEventBase.doTest(Class,String,String)",74,343
org.apache.openjpa.persistence.event.RemoteEventBase.RemoteCommitListenerTestImpl.afterCommit(RemoteCommitEvent),9,20
org.apache.openjpa.persistence.event.RemoteEventBase.RemoteCommitListenerTestImpl.close(),1,1
org.apache.openjpa.persistence.event.RemoteEventBase.TriggerRemoteCommitListener.afterCommit(RemoteCommitEvent),5,8
org.apache.openjpa.persistence.event.RemoteEventBase.TriggerRemoteCommitListener.close(),1,1
org.apache.openjpa.jdbc.kernel.Story.getId(),0,0
org.apache.openjpa.jdbc.kernel.Story.setId(int),1,1
org.apache.openjpa.jdbc.kernel.Story.getTask(),1,3
org.apache.openjpa.jdbc.kernel.Story.setTask(Task),2,6
org.apache.openjpa.jdbc.kernel.Story.getVersion(),1,2
org.apache.openjpa.persistence.identity.SQLDateIdEntity.getId(),1,1
org.apache.openjpa.persistence.identity.SQLDateIdEntity.setId(Date),2,2
org.apache.openjpa.persistence.identity.SQLDateIdEntity.getData(),1,2
org.apache.openjpa.persistence.identity.SQLDateIdEntity.setData(int),2,5
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getClassLoader(),1,2
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getNewTempClassLoader(),10,19
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getPersistenceUnitName(),4,5
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setPersistenceUnitName(String),5,8
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getPersistenceProviderClassName(),4,6
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setPersistenceProviderClassName(String),5,11
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getTransactionType(),5,8
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setTransactionType(PersistenceUnitTransactionType),6,13
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getJtaDataSourceName(),5,9
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setJtaDataSourceName(String),6,16
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getJtaDataSource(),3,8
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setJtaDataSource(DataSource),5,13
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getNonJtaDataSourceName(),5,9
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setNonJtaDataSourceName(String),6,16
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getNonJtaDataSource(),3,8
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setNonJtaDataSource(DataSource),5,13
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getPersistenceUnitRootUrl(),4,6
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setPersistenceUnitRootUrl(URL),5,9
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.excludeUnlistedClasses(),3,5
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setExcludeUnlistedClasses(boolean),4,10
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getMappingFileNames(),7,14
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.addMappingFileName(String),8,20
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getJarFileUrls(),8,12
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.addJarFile(URL),7,16
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.addJarFileName(String),20,36
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.processJarFileNames(),14,32
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.validateJarFileName(String),42,150
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getManagedClassNames(),7,11
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.addManagedClassName(String),8,16
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getProperties(),3,8
"org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setProperty(String,String)",6,9
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.addTransformer(ClassTransformer),5,7
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getPersistenceXmlFileUrl(),6,12
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setPersistenceXmlFileUrl(URL),7,15
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.fromUserProperties(Map),31,135
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.toOpenJPAProperties(),12,17
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.toOpenJPAProperties(PersistenceUnitInfo),95,477
"org.apache.openjpa.persistence.PersistenceUnitInfoImpl.replaceAsOpenJPAProperty(Map,Set<String>,String,Object)",18,32
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getSourceFile(),8,16
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getSourceScope(),3,3
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getSourceType(),4,4
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getLineNumber(),1,1
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getColNumber(),1,1
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getResourceName(),6,7
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.ClassResolverImpl.ClassResolverImpl(ClassLoader),3,6
"org.apache.openjpa.persistence.PersistenceUnitInfoImpl.ClassResolverImpl.getClassLoader(Class,ClassLoader)",3,6
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getPersistenceXMLSchemaVersion(),5,7
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setPersistenceXMLSchemaVersion(String),6,10
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getValidationMode(),2,6
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setValidationMode(ValidationMode),3,9
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.getSharedCacheMode(),3,9
org.apache.openjpa.persistence.PersistenceUnitInfoImpl.setSharedCacheMode(SharedCacheMode),4,12
org.apache.openjpa.persistence.inheritance.ConcreteSubclass.getSubclassData(),2,4
org.apache.openjpa.persistence.inheritance.ConcreteSubclass.setSubclassData(int),3,9
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestBiDirectionalJoinTable.setUp(),8,9
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestBiDirectionalJoinTable.testPersist(),13,19
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestBiDirectionalJoinTable.testQuery(),19,27
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestBiDirectionalJoinTable.testUpdate(),26,55
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestBiDirectionalJoinTable.testRemove(),17,28
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestBiDirectionalJoinTable.testSingleDelete(),24,38
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestBiDirectionalJoinTable.testBulkDelete(),21,32
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestBiDirectionalJoinTable.testBreakingRelationCausesDeleteFromJoinTable(),23,42
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestBiDirectionalJoinTable.createData(long),30,60
org.apache.openjpa.conf.TestAutoDetachProperty.setUp(),27,43
org.apache.openjpa.conf.TestAutoDetachProperty.tearDown(),4,6
org.apache.openjpa.conf.TestAutoDetachProperty.testIsAutoDetachingOnClose(),6,10
org.apache.openjpa.conf.TestAutoDetachProperty.testIsAutoDetachingOnCommit(),6,10
org.apache.openjpa.conf.TestAutoDetachProperty.testIsAutoDetachingOnNonTxRead(),7,11
org.apache.openjpa.conf.TestAutoDetachProperty.isAutoDetachingOnClose(),11,23
org.apache.openjpa.conf.TestAutoDetachProperty.isAutoDetachingOnCommit(),11,23
org.apache.openjpa.conf.TestAutoDetachProperty.isAutoDetachingOnNonTxRead(),12,24
org.apache.openjpa.jdbc.meta.strats.NoneFieldStrategy.getInstance(),5,7
org.apache.openjpa.jdbc.meta.strats.NoneFieldStrategy.NoneFieldStrategy(),5,5
org.apache.openjpa.jdbc.meta.strats.NoneFieldStrategy.getAlias(),2,3
org.apache.openjpa.jdbc.meta.strats.NoneFieldStrategy.setFieldMapping(FieldMapping),4,6
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.testJPA1CompatibilityOptions(),42,85
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.testJPA2CompatibilityOptions(),42,85
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.testMappedSuperClass(),36,79
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.testOneToManyRelation(),73,213
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudUni1MFK(EntityManager),23,96
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudUni1MJT(EntityManager),22,62
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudBi1MFK(EntityManager),21,64
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudBi1MJT(EntityManager),22,79
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.testOneToManyMapRelation(),36,130
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudUni1MMapFK(EntityManager),24,118
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudBi1MMapJT(EntityManager),24,87
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudUni1MMapRelKeyFK(EntityManager),25,189
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudBi1MMapRelKeyJT(EntityManager),23,140
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.testUniManyToOneUsingJoinTable(),33,58
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudUniM1JT(EntityManager),21,76
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.testOneToOneUsingJoinTable(),33,68
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudUni11JT(EntityManager),20,70
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.crudBi11JT(EntityManager),20,68
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.createEMF2_0(List<Class<>>),45,102
"org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.assertSQLFragnments(List<String>,String)",13,26
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.toString(List<String>),5,17
org.apache.openjpa.persistence.compat.TestSpecCompatibilityOptions.Listener.beforeExecuteStatement(JDBCEvent),7,14
org.apache.openjpa.persistence.QueryResultCacheImpl.QueryResultCacheImpl(QueryCache),11,18
org.apache.openjpa.persistence.QueryResultCacheImpl.getDelegate(),3,6
org.apache.openjpa.persistence.QueryResultCacheImpl.pin(Query),5,8
org.apache.openjpa.persistence.QueryResultCacheImpl.unpin(Query),5,8
org.apache.openjpa.persistence.QueryResultCacheImpl.evict(Query),6,8
org.apache.openjpa.persistence.QueryResultCacheImpl.evictAll(),2,2
org.apache.openjpa.persistence.QueryResultCacheImpl.evictAll(Class),8,11
org.apache.openjpa.persistence.QueryResultCacheImpl.toQueryKey(Query),9,32
org.apache.openjpa.persistence.QueryResultCacheImpl.hashCode(),3,6
org.apache.openjpa.persistence.QueryResultCacheImpl.equals(Object),6,10
"org.apache.openjpa.kernel.PDirtyState.initialize(StateManagerImpl,PCState)",7,8
"org.apache.openjpa.kernel.PDirtyState.beforeFlush(StateManagerImpl,boolean,OpCallbacks)",8,12
org.apache.openjpa.kernel.PDirtyState.commit(StateManagerImpl),5,5
org.apache.openjpa.kernel.PDirtyState.commitRetain(StateManagerImpl),6,6
org.apache.openjpa.kernel.PDirtyState.rollback(StateManagerImpl),5,5
org.apache.openjpa.kernel.PDirtyState.rollbackRestore(StateManagerImpl),7,9
org.apache.openjpa.kernel.PDirtyState.delete(StateManagerImpl),6,8
org.apache.openjpa.kernel.PDirtyState.nontransactional(StateManagerImpl),6,7
org.apache.openjpa.kernel.PDirtyState.release(StateManagerImpl),6,7
org.apache.openjpa.kernel.PDirtyState.isVersionCheckRequired(StateManagerImpl),8,11
org.apache.openjpa.kernel.PDirtyState.afterRefresh(),2,2
org.apache.openjpa.kernel.PDirtyState.afterOptimisticRefresh(),3,3
org.apache.openjpa.kernel.PDirtyState.isTransactional(),1,1
org.apache.openjpa.kernel.PDirtyState.isPersistent(),1,1
org.apache.openjpa.kernel.PDirtyState.isDirty(),1,1
org.apache.openjpa.kernel.PDirtyState.toString(),3,4
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOneCascadeDelete.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOneCascadeDelete.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOneCascadeDelete.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOneCascadeDelete.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOneCascadeDelete.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOneCascadeDelete.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOneCascadeDelete.getEmbed(),4,6
org.apache.openjpa.persistence.embed.EntityA_Embed_MappedToOneCascadeDelete.setEmbed(Embed_MappedToOneCascadeDelete),5,9
org.apache.openjpa.persistence.query.LengthExpression.LengthExpression(Expression),5,7
org.apache.openjpa.persistence.jdbc.sqlcache.Person.Person(),1,1
"org.apache.openjpa.persistence.jdbc.sqlcache.Person.Person(String,String,short,int)",7,17
org.apache.openjpa.persistence.jdbc.sqlcache.Person.getFirstName(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.Person.setFirstName(String),3,6
org.apache.openjpa.persistence.jdbc.sqlcache.Person.getLastName(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.Person.setLastName(String),3,6
org.apache.openjpa.persistence.jdbc.sqlcache.Person.getAge(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.Person.setAge(short),2,5
org.apache.openjpa.persistence.jdbc.sqlcache.Person.getBirthYear(),2,2
org.apache.openjpa.persistence.jdbc.sqlcache.Person.setBirthYear(int),3,5
org.apache.openjpa.persistence.jdbc.sqlcache.Person.getAddress(),1,3
org.apache.openjpa.persistence.jdbc.sqlcache.Person.setAddress(Address),2,6
org.apache.openjpa.persistence.jdbc.sqlcache.Person.getId(),0,0
org.apache.openjpa.persistence.jdbc.sqlcache.Person.setId(long),1,1
org.apache.openjpa.persistence.OpenJPAPersistence.cast(EntityManagerFactory),7,19
org.apache.openjpa.persistence.OpenJPAPersistence.cast(EntityManager),6,20
org.apache.openjpa.persistence.OpenJPAPersistence.cast(Query),4,9
org.apache.openjpa.persistence.OpenJPAPersistence.getEntityManagerFactory(),11,23
org.apache.openjpa.persistence.OpenJPAPersistence.getEntityManagerFactory(Map),27,51
"org.apache.openjpa.persistence.OpenJPAPersistence.createEntityManagerFactory(String,String)",28,76
"org.apache.openjpa.persistence.OpenJPAPersistence.createEntityManagerFactory(String,String,Map)",34,93
"org.apache.openjpa.persistence.OpenJPAPersistence.createEntityManagerFactory(String,Context)",25,75
org.apache.openjpa.persistence.OpenJPAPersistence.getEntityManager(Object),28,49
org.apache.openjpa.persistence.OpenJPAPersistence.close(Object),17,23
"org.apache.openjpa.persistence.OpenJPAPersistence.isManagedType(EntityManager,Class)",17,25
org.apache.openjpa.persistence.OpenJPAPersistence.toEntityManagerFactory(org.apache.openjpa.kernel.BrokerFactory),20,36
org.apache.openjpa.persistence.OpenJPAPersistence.toBrokerFactory(EntityManagerFactory),20,33
org.apache.openjpa.persistence.OpenJPAPersistence.toEntityManager(org.apache.openjpa.kernel.Broker),19,32
org.apache.openjpa.persistence.OpenJPAPersistence.toBroker(EntityManager),15,23
org.apache.openjpa.persistence.OpenJPAPersistence.getMetaData(Object),18,29
"org.apache.openjpa.persistence.OpenJPAPersistence.getMetaData(EntityManager,Class)",20,32
"org.apache.openjpa.persistence.OpenJPAPersistence.getMetaData(EntityManagerFactory,Class)",21,35
org.apache.openjpa.persistence.OpenJPAPersistence.fromOpenJPAObjectId(Object),14,26
"org.apache.openjpa.persistence.OpenJPAPersistence.toOpenJPAObjectId(org.apache.openjpa.meta.ClassMetaData,Object)",19,34
"org.apache.openjpa.persistence.OpenJPAPersistence.toOpenJPAObjectIds(org.apache.openjpa.meta.ClassMetaData,Object)",20,36
"org.apache.openjpa.persistence.OpenJPAPersistence.toOpenJPAObjectIds(org.apache.openjpa.meta.ClassMetaData,Collection)",21,36
org.apache.openjpa.persistence.OpenJPAPersistence.fromOpenJPAObjectIdClass(Class),14,24
org.apache.openjpa.event.UpdateListener.beforeUpdate(LifecycleEvent),16,21
org.apache.openjpa.event.UpdateListener.afterUpdatePerformed(LifecycleEvent),19,27
org.apache.openjpa.persistence.embed.BaseEntity.getId(),0,0
org.apache.openjpa.persistence.embed.BaseEntity.setId(Long),1,1
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingMappedSuper.getSuperCollection(),3,4
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingMappedSuper.getSuperRel(),4,5
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingMappedSuper.setSuperRel(NonstandardMappingEntity),5,8
org.apache.openjpa.persistence.embed.Embed_MappedToOne.getName1(),2,3
org.apache.openjpa.persistence.embed.Embed_MappedToOne.setName1(String),3,6
org.apache.openjpa.persistence.embed.Embed_MappedToOne.getName2(),2,3
org.apache.openjpa.persistence.embed.Embed_MappedToOne.setName2(String),3,6
org.apache.openjpa.persistence.embed.Embed_MappedToOne.getName3(),2,3
org.apache.openjpa.persistence.embed.Embed_MappedToOne.setName3(String),3,6
org.apache.openjpa.persistence.embed.Embed_MappedToOne.setMappedEntityB(EntityB1),3,4
org.apache.openjpa.persistence.embed.Embed_MappedToOne.getMappedEntityB(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEntityA.setEmbA(List<XMLAssocOverEmbed>),7,10
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEntityA.getEmbA(),6,7
"org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEntityA.setEmbAMap(Map<XMLAssocOverEmbedB,XMLAssocOverEmbed>)",7,16
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEntityA.getEmbAMap(),6,11
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEntityA.setId(int),1,1
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEntityA.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLFieldEmbedEntity.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLFieldEmbedEntity.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLFieldEmbedEntity.setName(String),3,6
org.apache.openjpa.persistence.access.xml.XMLFieldEmbedEntity.getName(),2,3
org.apache.openjpa.persistence.access.xml.XMLFieldEmbedEntity.getEPA(),5,6
org.apache.openjpa.persistence.access.xml.XMLFieldEmbedEntity.setEPA(XMLEmbedPropAccess),6,7
org.apache.openjpa.persistence.access.xml.XMLFieldEmbedEntity.equals(Object),9,23
org.apache.openjpa.kernel.AbstractPCData.getLoaded(),5,6
org.apache.openjpa.kernel.AbstractPCData.newEmbeddedPCData(OpenJPAStateManager),8,10
org.apache.openjpa.kernel.AbstractPCData.isLoaded(int),2,4
"org.apache.openjpa.kernel.AbstractPCData.toField(OpenJPAStateManager,FieldMetaData,Object,FetchConfiguration,Object)",43,169
"org.apache.openjpa.kernel.AbstractPCData.toNestedField(OpenJPAStateManager,ValueMetaData,Object,FetchConfiguration,Object)",33,82
"org.apache.openjpa.kernel.AbstractPCData.toNestedFields(OpenJPAStateManager,ValueMetaData,Collection,FetchConfiguration,Object)",41,108
"org.apache.openjpa.kernel.AbstractPCData.toRelationField(OpenJPAStateManager,ValueMetaData,Object,FetchConfiguration,Object)",16,28
"org.apache.openjpa.kernel.AbstractPCData.toRelationFields(OpenJPAStateManager,Object,FetchConfiguration)",16,23
"org.apache.openjpa.kernel.AbstractPCData.toEmbeddedField(OpenJPAStateManager,ValueMetaData,Object,FetchConfiguration,Object)",25,50
"org.apache.openjpa.kernel.AbstractPCData.toData(FieldMetaData,Object,StoreContext)",44,155
org.apache.openjpa.kernel.AbstractPCData.isImmutableType(ValueMetaData),14,65
"org.apache.openjpa.kernel.AbstractPCData.toNestedData(ValueMetaData,Object,StoreContext)",27,68
"org.apache.openjpa.kernel.AbstractPCData.toRelationData(Object,StoreContext)",11,16
"org.apache.openjpa.kernel.AbstractPCData.toEmbeddedData(Object,StoreContext)",23,43
org.apache.openjpa.kernel.AbstractPCData.ProxyDataList.ProxyDataList(int),4,5
"org.apache.openjpa.meta.MetaDataTool.MetaDataTool(OpenJPAConfiguration,String)",15,27
org.apache.openjpa.meta.MetaDataTool.getAction(),4,6
org.apache.openjpa.meta.MetaDataTool.getFile(),3,6
org.apache.openjpa.meta.MetaDataTool.setFile(File),4,9
org.apache.openjpa.meta.MetaDataTool.getWriter(),3,6
org.apache.openjpa.meta.MetaDataTool.setWriter(Writer),4,9
org.apache.openjpa.meta.MetaDataTool.getRepository(),16,38
org.apache.openjpa.meta.MetaDataTool.newRepository(),7,12
org.apache.openjpa.meta.MetaDataTool.setRepository(MetaDataRepository),7,11
org.apache.openjpa.meta.MetaDataTool.clear(),8,9
org.apache.openjpa.meta.MetaDataTool.run(Class),11,23
org.apache.openjpa.meta.MetaDataTool.add(Class),23,52
org.apache.openjpa.meta.MetaDataTool.record(),52,119
org.apache.openjpa.meta.MetaDataTool.main(String[]),70,121
org.apache.openjpa.meta.MetaDataTool.main(String[]).$1.run(Options),13,19
"org.apache.openjpa.meta.MetaDataTool.run(OpenJPAConfiguration,String[],Options)",33,83
"org.apache.openjpa.meta.MetaDataTool.run(OpenJPAConfiguration,String[],Flags,MetaDataRepository,ClassLoader)",44,136
org.apache.openjpa.persistence.foreign.keys.ContainsMultSimpleEntity.getSimpleEntity1(),2,6
org.apache.openjpa.persistence.foreign.keys.ContainsMultSimpleEntity.setSimpleEntity1(SimpleEntity),3,11
org.apache.openjpa.persistence.foreign.keys.ContainsMultSimpleEntity.getSimpleEntity2(),2,6
org.apache.openjpa.persistence.foreign.keys.ContainsMultSimpleEntity.setSimpleEntity2(SimpleEntity),3,11
org.apache.openjpa.persistence.foreign.keys.ContainsMultSimpleEntity.getSimpleEntity3(),2,6
org.apache.openjpa.persistence.foreign.keys.ContainsMultSimpleEntity.setSimpleEntity3(SimpleEntity),3,11
org.apache.openjpa.persistence.enhance.identity.MedicalHistory3.getPatient(),2,3
org.apache.openjpa.persistence.enhance.identity.MedicalHistory3.setPatient(Person3),3,4
org.apache.openjpa.persistence.enhance.identity.MedicalHistory3.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.MedicalHistory3.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.MedicalHistory3.equals(Object),8,23
org.apache.openjpa.persistence.enhance.identity.MedicalHistory3.hashCode(),5,14
org.apache.openjpa.jdbc.meta.strats.InputStreamWrapper.InputStreamWrapper(String),6,8
org.apache.openjpa.jdbc.meta.strats.InputStreamWrapper.read(),4,5
org.apache.openjpa.jdbc.meta.strats.InputStreamWrapper.available(),2,3
org.apache.openjpa.jdbc.meta.strats.InputStreamWrapper.close(),2,3
"org.apache.openjpa.jdbc.meta.strats.InputStreamWrapper.read(byte[],int,int)",15,27
org.apache.openjpa.jdbc.meta.strats.InputStreamWrapper.read(byte[]),4,5
org.apache.openjpa.kernel.TestBroker.setUp(),2,3
org.apache.openjpa.kernel.TestBroker.testGetObjectId(),24,77
org.apache.openjpa.lib.util.Closeable.close(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.Base.getBaseField(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.Base.setBaseField(int),3,9
org.apache.openjpa.persistence.jdbc.common.apps.Base.compareTo(Object),4,7
org.apache.openjpa.persistence.criteria.results.Shop.getId(),0,0
org.apache.openjpa.persistence.criteria.results.Shop.setId(long),1,1
org.apache.openjpa.persistence.criteria.results.Shop.getName(),2,3
org.apache.openjpa.persistence.criteria.results.Shop.setName(String),3,6
org.apache.openjpa.persistence.criteria.results.Shop.getOrders(),1,1
org.apache.openjpa.persistence.criteria.results.Shop.setOrders(Set<Order>),1,2
org.apache.openjpa.persistence.jdbc.common.apps.EmbeddedOwnerPC.EmbeddedOwnerPC(),2,2
"org.apache.openjpa.persistence.jdbc.common.apps.EmbeddedOwnerPC.EmbeddedOwnerPC(int,int)",2,2
org.apache.openjpa.persistence.jdbc.common.apps.EmbeddedOwnerPC.getId1(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.EmbeddedOwnerPC.getId2(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.EmbeddedOwnerPC.getEmbedded(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.EmbeddedOwnerPC.setEmbedded(EmbeddedPC),2,6
org.apache.openjpa.persistence.jdbc.common.apps.EmbeddedOwnerPC.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.EmbeddedOwnerPC.setStringField(String),3,10
org.apache.openjpa.persistence.jdbc.common.apps.EmbeddedOwnerPC.getComplexEmbedded(),2,6
org.apache.openjpa.persistence.jdbc.common.apps.EmbeddedOwnerPC.setComplexEmbedded(ComplexEmbeddedPC),3,11
org.apache.openjpa.persistence.datacache.SerializingConcurrentQueryCache.get(QueryKey),4,8
"org.apache.openjpa.persistence.datacache.SerializingConcurrentQueryCache.put(QueryKey,QueryResult)",5,12
org.apache.openjpa.persistence.datacache.SerializingConcurrentQueryCache.roundtrip(T),12,34
org.apache.openjpa.kernel.UUIDHexSeq.getInstance(),5,7
org.apache.openjpa.kernel.UUIDHexSeq.UUIDHexSeq(),5,5
org.apache.openjpa.kernel.UUIDHexSeq.setType(int),2,3
"org.apache.openjpa.kernel.UUIDHexSeq.next(StoreContext,ClassMetaData)",10,13
"org.apache.openjpa.kernel.UUIDHexSeq.current(StoreContext,ClassMetaData)",7,8
"org.apache.openjpa.kernel.UUIDHexSeq.allocate(int,StoreContext,ClassMetaData)",7,8
org.apache.openjpa.kernel.UUIDHexSeq.close(),1,1
org.apache.openjpa.kernel.FinalizingBrokerImpl.finalize(),5,7
"org.apache.openjpa.kernel.exps.BindValueVariableExpression.BindValueVariableExpression(BoundVariable,Val)",9,21
org.apache.openjpa.kernel.exps.BindValueVariableExpression.getCollection(Object),4,11
org.apache.openjpa.lib.util.TestLocalizer.TestLocalizer(String),3,5
org.apache.openjpa.lib.util.TestLocalizer.setUp(),5,6
org.apache.openjpa.lib.util.TestLocalizer.testForClass(),9,14
org.apache.openjpa.lib.util.TestLocalizer.testForLocale(),11,19
org.apache.openjpa.lib.util.TestLocalizer.testFallbackLocale(),15,26
org.apache.openjpa.lib.util.TestLocalizer.testTopLevel(),12,18
org.apache.openjpa.lib.util.TestLocalizer.testMessageFormat(),19,35
org.apache.openjpa.lib.util.TestLocalizer.testMissingBundle(),21,50
org.apache.openjpa.lib.util.TestLocalizer.testMissingKey(),19,45
"org.apache.openjpa.lib.util.TestLocalizer.assertEquals(String,Message)",3,5
org.apache.openjpa.lib.util.TestLocalizer.suite(),3,6
org.apache.openjpa.lib.util.TestLocalizer.main(String[]),7,7
org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.getConnection(Properties),6,9
org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.close(),14,18
org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.getDBCPConnection(Properties),15,27
org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.getDBCPDataSource(Properties),22,49
org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.isDBCPDataSource(),21,33
org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.isDBCPLoaded(ClassLoader),34,59
org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.updateDBCPProperties(Properties),54,243
org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.mergeConnectionProperties(Properties),32,113
"org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.hasKey(Properties,String)",9,22
"org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.hasKey(Properties,String,String)",16,44
"org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.hasProperty(Properties,String)",6,17
"org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.removeProperty(Properties,String)",7,19
org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.setConfiguration(Configuration),6,13
org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.startConfiguration(),2,2
org.apache.openjpa.jdbc.schema.DBCPDriverDataSource.endConfiguration(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC2.AutoIncrementPC2(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC2.AutoIncrementPC2(int),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC2.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC2.setIntField(int),2,5
org.apache.openjpa.persistence.common.apps.Entity2.Entity2(),1,1
"org.apache.openjpa.persistence.common.apps.Entity2.Entity2(long,String,int)",3,11
org.apache.openjpa.persistence.common.apps.Entity2.getPk(),0,0
org.apache.openjpa.persistence.common.apps.Entity2.setStringField(String),4,8
org.apache.openjpa.persistence.common.apps.Entity2.getStringField(),2,5
org.apache.openjpa.persistence.common.apps.Entity2.setIntField(int),3,5
org.apache.openjpa.persistence.common.apps.Entity2.getIntField(),1,2
org.apache.openjpa.persistence.common.apps.Entity2.toString(),2,8
org.apache.openjpa.persistence.inheritance.entity.SubclassI.setClassIName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.SubclassI.getClassIName(),2,3
org.apache.openjpa.persistence.inheritance.entity.SubclassI.toString(),3,7
org.apache.openjpa.persistence.inheritance.entity.SubclassI.setVersion(int),2,5
org.apache.openjpa.persistence.inheritance.entity.SubclassI.getVersion(),1,2
org.apache.openjpa.persistence.compat.EmbeddableSuperSub.EmbeddableSuperSub(),2,2
org.apache.openjpa.persistence.compat.EmbeddableSuperSub.getSub(),2,4
org.apache.openjpa.persistence.compat.EmbeddableSuperSub.setSub(EmbeddableSuperSub),3,7
org.apache.openjpa.persistence.compat.EmbeddableSuperSub.getSup(),2,3
org.apache.openjpa.persistence.compat.EmbeddableSuperSub.setSup(EmbeddableSuper),3,6
org.apache.openjpa.jdbc.schema.Schema.Schema(),2,2
"org.apache.openjpa.jdbc.schema.Schema.Schema(String,SchemaGroup)",9,16
"org.apache.openjpa.jdbc.schema.Schema.Schema(DBIdentifier,SchemaGroup)",4,7
org.apache.openjpa.jdbc.schema.Schema.remove(),13,24
org.apache.openjpa.jdbc.schema.Schema.getSchemaGroup(),2,3
org.apache.openjpa.jdbc.schema.Schema.getName(),6,8
org.apache.openjpa.jdbc.schema.Schema.getIdentifier(),2,3
org.apache.openjpa.jdbc.schema.Schema.setName(String),10,18
org.apache.openjpa.jdbc.schema.Schema.setIdentifier(DBIdentifier),7,11
org.apache.openjpa.jdbc.schema.Schema.getTables(),7,19
org.apache.openjpa.jdbc.schema.Schema.getTable(String),8,18
org.apache.openjpa.jdbc.schema.Schema.getTable(DBIdentifier),5,17
org.apache.openjpa.jdbc.schema.Schema.addTable(String),7,14
org.apache.openjpa.jdbc.schema.Schema.addTable(DBIdentifier),11,41
"org.apache.openjpa.jdbc.schema.Schema.addTable(String,String)",10,24
"org.apache.openjpa.jdbc.schema.Schema.addTable(DBIdentifier,DBIdentifier)",11,43
org.apache.openjpa.jdbc.schema.Schema.removeTable(Table),12,41
org.apache.openjpa.jdbc.schema.Schema.importTable(Table),19,38
org.apache.openjpa.jdbc.schema.Schema.getSequences(),9,19
org.apache.openjpa.jdbc.schema.Schema.getSequence(String),9,18
org.apache.openjpa.jdbc.schema.Schema.getSequence(DBIdentifier),6,20
org.apache.openjpa.jdbc.schema.Schema.addSequence(String),8,17
org.apache.openjpa.jdbc.schema.Schema.addSequence(DBIdentifier),10,37
org.apache.openjpa.jdbc.schema.Schema.removeSequence(Sequence),12,41
org.apache.openjpa.jdbc.schema.Schema.importSequence(Sequence),11,31
org.apache.openjpa.jdbc.schema.Schema.compareTo(Schema),4,20
org.apache.openjpa.jdbc.schema.Schema.toString(),3,4
org.apache.openjpa.persistence.discriminator.fetch.TestLazyFetch.newEmf(),8,20
org.apache.openjpa.persistence.discriminator.fetch.TestLazyFetch.setUp(),27,63
org.apache.openjpa.persistence.discriminator.fetch.TestLazyFetch.testFetchOneSideFirst(),19,51
org.apache.openjpa.persistence.discriminator.fetch.TestLazyFetch.testFetchManySideFirst(),19,51
"org.apache.openjpa.datacache.DataCacheManagerImpl.initialize(OpenJPAConfiguration,ObjectValue,ObjectValue)",22,65
org.apache.openjpa.datacache.DataCacheManagerImpl.getSystemDataCache(),3,7
org.apache.openjpa.datacache.DataCacheManagerImpl.getDataCache(String),4,9
"org.apache.openjpa.datacache.DataCacheManagerImpl.getDataCache(String,boolean)",15,41
org.apache.openjpa.datacache.DataCacheManagerImpl.getSystemQueryCache(),3,7
org.apache.openjpa.datacache.DataCacheManagerImpl.getPCDataGenerator(),3,7
org.apache.openjpa.datacache.DataCacheManagerImpl.getClearableScheduler(),2,5
org.apache.openjpa.datacache.DataCacheManagerImpl.close(),7,13
org.apache.openjpa.datacache.DataCacheManagerImpl.selectCache(OpenJPAStateManager),20,35
org.apache.openjpa.datacache.DataCacheManagerImpl.getDistributionPolicy(),6,12
org.apache.openjpa.datacache.DataCacheManagerImpl.isCachable(ClassMetaData),10,26
"org.apache.openjpa.datacache.DataCacheManagerImpl.setTypes(Set<String>,Set<String>)",5,18
org.apache.openjpa.datacache.DataCacheManagerImpl.isCacheableByMode(ClassMetaData),22,66
org.apache.openjpa.datacache.DataCacheManagerImpl.isCacheableByType(ClassMetaData),19,60
org.apache.openjpa.datacache.DataCacheManagerImpl.startCaching(String),13,23
org.apache.openjpa.datacache.DataCacheManagerImpl.stopCaching(String),13,23
org.apache.openjpa.datacache.DataCacheManagerImpl.listKnownTypes(),15,26
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.TestEagerOuterToManyJoins(String),8,13
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.skipTest(),9,12
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.setUp(),6,11
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testStringCollectionById(),3,6
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEmptyStringCollectionById(),4,7
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.stringCollectionByIdTest(boolean),23,66
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testStringCollectionByQuery(),4,8
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEmptyStringCollectionByQuery1(),5,9
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEmptyStringCollectionByQuery2(),5,9
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEmptyStringCollectionByQuery3(),5,9
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.stringCollectionByQueryTest(int),33,121
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.insertStringCollection(int),19,52
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testStringListById(),21,53
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testStringListByQuery(),31,97
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.insertStringList(),18,49
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testOneManyCollectionById(),2,4
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEmptyOneManyCollectionById(),3,5
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.oneManyCollectionByIdTest(boolean),21,49
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testOneManyCollectionByQuery(),3,6
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEmptyOneManyCollectionByQuery1(),4,7
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEmptyOneManyCollectionByQuery2(),4,7
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEmptyOneManyCollectionByQuery3(),4,7
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.oneManyCollectionByQueryTest(int),31,90
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.insertOneManyCollection(int),20,95
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testManyManyCollectionById(),20,43
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testManyManyCollectionByQuery(),30,80
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.insertManyManyCollection(),18,79
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testManyManyListById(),2,4
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEmptyManyManyListById(),3,5
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.manyManyListByIdTest(boolean),22,68
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testManyManyListByQuery(),3,6
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEmptyManyManyListByQuery1(),4,7
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEmptyManyManyListByQuery2(),4,7
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEmptyManyManyListByQuery3(),4,7
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.manyManyListByQueryTest(int),32,126
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.insertManyManyList(int),19,83
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testTwoCollectionsInFetchGroupsById(),25,81
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testTwoCollectionsInFetchGroupsByQuery(),34,144
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.insertTwoCollections(),21,91
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testQueryRandomAccess(),31,81
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testQueryRange(),30,82
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.insertManyStringList(),17,31
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEagerToOneThenEagerToMany(),34,104
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEagerToManyThenEagerToOne(),32,98
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEagerToManyThenEagerToMany(),32,115
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.testEagerToOneAndToManyThenEagerToOne(),35,137
org.apache.openjpa.persistence.jdbc.meta.TestEagerOuterToManyJoins.insertEagers(),24,119
org.apache.openjpa.persistence.foreign.keys.SimpleEntity.getId(),0,0
org.apache.openjpa.persistence.foreign.keys.SimpleEntity.setId(long),1,1
org.apache.openjpa.persistence.foreign.keys.SimpleEntity.getName(),2,3
org.apache.openjpa.persistence.foreign.keys.SimpleEntity.setName(String),3,6
org.apache.openjpa.persistence.embed.Embed_Single_Coll.getDate(),1,3
org.apache.openjpa.persistence.embed.Embed_Single_Coll.setDate(Date),2,6
org.apache.openjpa.persistence.embed.Embed_Single_Coll.hashCode(),5,12
org.apache.openjpa.persistence.embed.Embed_Single_Coll.equals(Object),7,18
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableMappings.TestMultiTableMappings(String),6,7
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableMappings.TestMultiTableMappings(),6,10
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableMappings.setUpTestCase(),23,50
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableMappings.XXXtestUpdates(),21,31
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableMappings.XXXtestInserts(),15,50
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableMappings.XXXtestOneToOne(),10,11
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableMappings.XXXtestQueries(),17,21
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableMappings.testVerticalQueryModeQueries(),55,117
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableMappings.changeA(MultiA),5,7
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableMappings.changeB(MultiB),5,7
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableMappings.changeC(MultiC),5,7
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableMappings.changeD(MultiD),5,7
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectH.CacheObjectH(),2,2
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectH.CacheObjectH(String),3,3
org.apache.openjpa.ee.OSGiManagedRuntime.Listener.Listener(BundleContext),7,13
org.apache.openjpa.ee.OSGiManagedRuntime.Listener.serviceChanged(ServiceEvent),16,50
org.apache.openjpa.ee.OSGiManagedRuntime.registerServiceListener(BundleContext),31,99
org.apache.openjpa.ee.OSGiManagedRuntime.deregisterServiceListener(BundleContext),21,59
org.apache.openjpa.ee.OSGiManagedRuntime.getTransactionManager(),10,21
org.apache.openjpa.ee.OSGiManagedRuntime.setRollbackOnly(Throwable),10,15
org.apache.openjpa.ee.OSGiManagedRuntime.getRollbackCause(),7,9
org.apache.openjpa.persistence.datacache.CachedEmployee.getManager(),2,4
org.apache.openjpa.persistence.datacache.CachedEmployee.setManager(CachedManager),3,7
org.apache.openjpa.persistence.graph.AbstractGraph<E>.remove(Object),8,12
org.apache.openjpa.lib.rop.TestSoftRandomAccessResultList.TestSoftRandomAccessResultList(String),7,9
org.apache.openjpa.lib.rop.TestSoftRandomAccessResultList.getResultList(ResultObjectProvider),7,14
org.apache.openjpa.lib.rop.TestSoftRandomAccessResultList.main(String[]),3,4
"org.apache.openjpa.enhance.PCClassFileTransformer.PCClassFileTransformer(MetaDataRepository,Options,ClassLoader)",25,41
org.apache.openjpa.enhance.PCClassFileTransformer.toFlags(Options),11,45
"org.apache.openjpa.enhance.PCClassFileTransformer.PCClassFileTransformer(MetaDataRepository,PCEnhancer.Flags,ClassLoader,boolean)",37,74
"org.apache.openjpa.enhance.PCClassFileTransformer.transform(ClassLoader,String,Class,ProtectionDomain,byte[])",28,42
"org.apache.openjpa.enhance.PCClassFileTransformer.transform0(String,Class,byte[])",55,120
"org.apache.openjpa.enhance.PCClassFileTransformer.needsEnhance(String,Class,byte[])",46,73
org.apache.openjpa.enhance.PCClassFileTransformer.isEnhanced(byte[]),27,63
org.apache.openjpa.event.FlushTransactionListener.beforeFlush(TransactionEvent),6,12
org.apache.openjpa.event.FlushTransactionListener.afterFlush(TransactionEvent),7,12
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getValue(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setValue(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getOtherTableValue(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setOtherTableValue(int),3,9
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getBlob(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setBlob(Object),3,6
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getOneOne(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setOneOne(MappingTest2),3,3
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getSelfOneOne(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setSelfOneOne(MappingTest1),4,7
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getOtherTableOneOne(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setOtherTableOneOne(MappingTest2),4,7
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getInverseOwnerOneOne(),4,6
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setInverseOwnerOneOne(MappingTest2),5,11
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getInverseOneOne(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setInverseOneOne(MappingTest2),4,7
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getCollection(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setCollection(Set),2,6
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getInverseOwnerOneMany(),3,5
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setInverseOwnerOneMany(Set),3,10
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getOneMany(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setOneMany(Set),1,2
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getManyMany(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setManyMany(List),2,2
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getInverseOwnerManyMany(),3,5
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setInverseOwnerManyMany(Set),3,10
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getMap(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setMap(Map),2,6
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getNManyMap(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setNManyMap(Map),2,6
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getManyManyMap(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setManyManyMap(Map),2,6
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.getTransactionalValue(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest1.setTransactionalValue(int),3,9
org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity.getId(),0,0
org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity.setId(long),1,1
org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity.getNone(),3,4
org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity.setNone(CascadesEntity),4,7
org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity.getAll(),2,2
org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity.setAll(CascadesEntity),3,3
org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity.getNoneCollection(),4,7
org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity.setNoneCollection(Collection<CascadesEntity>),5,12
org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity.getAllCollection(),3,5
org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity.setAllCollection(Collection<CascadesEntity>),4,8
org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity.getDependent(),3,4
org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity.setDependent(CascadesEntity),4,7
org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity.getName(),2,3
org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity.setName(String),3,6
org.apache.openjpa.persistence.compat.TestNonPrimaryKeyQueryParameters.setUp(),16,24
org.apache.openjpa.persistence.compat.TestNonPrimaryKeyQueryParameters.testSelectQueryWithNoParameter(),44,99
org.apache.openjpa.persistence.compat.TestNonPrimaryKeyQueryParameters.createDepartment(String),24,57
org.apache.openjpa.persistence.compat.TestNonPrimaryKeyQueryParameters.createInvoice(),21,42
org.apache.openjpa.persistence.event.common.apps.RuntimeTest4.RuntimeTest4(String),5,6
org.apache.openjpa.persistence.event.common.apps.RuntimeTest4.setName(String),4,6
org.apache.openjpa.persistence.event.common.apps.RuntimeTest4.getName(),2,3
org.apache.openjpa.persistence.event.common.apps.RuntimeTest4.getRuntimeTest5s(),3,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest4.setRuntimeTest5s(Collection),4,6
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCLeafB1.getLeafB1Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCLeafB1.setLeafB1Data(String),4,10
org.apache.openjpa.lib.conf.StringListValue.StringListValue(String),4,6
org.apache.openjpa.lib.conf.StringListValue.set(String[]),8,12
org.apache.openjpa.lib.conf.StringListValue.get(),4,4
org.apache.openjpa.lib.conf.StringListValue.getValueType(),3,4
org.apache.openjpa.lib.conf.StringListValue.unalias(String),38,120
org.apache.openjpa.lib.conf.StringListValue.getInternalString(),5,6
org.apache.openjpa.lib.conf.StringListValue.setInternalString(String),9,18
org.apache.openjpa.lib.conf.StringListValue.setInternalObject(Object),5,8
org.apache.openjpa.lib.conf.StringListValue.getAliasList(),5,7
"org.apache.openjpa.persistence.AbstractQuery<X>.AbstractQuery(QueryMetaData,EntityManagerImpl)",13,16
org.apache.openjpa.persistence.AbstractQuery<X>.getParameterValues(),21,58
org.apache.openjpa.persistence.AbstractQuery<X>.isNative(),6,6
org.apache.openjpa.persistence.AbstractQuery<X>.assertOpen(),0,0
org.apache.openjpa.persistence.AbstractQuery<X>.lock(),1,1
org.apache.openjpa.persistence.AbstractQuery<X>.unlock(),1,1
org.apache.openjpa.persistence.AbstractQuery<X>.getParamTypes(),4,4
"org.apache.openjpa.persistence.AbstractQuery<X>.setParameter(int,Object)",46,105
"org.apache.openjpa.persistence.AbstractQuery<X>.setParameter(int,Calendar,TemporalType)",13,24
"org.apache.openjpa.persistence.AbstractQuery<X>.setParameter(int,Date,TemporalType)",13,26
"org.apache.openjpa.persistence.AbstractQuery<X>.convertTemporalType(Date,TemporalType)",10,26
"org.apache.openjpa.persistence.AbstractQuery<X>.convertTemporalType(Calendar,TemporalType)",7,15
org.apache.openjpa.persistence.AbstractQuery<X>.hasPositionalParameters(),10,12
org.apache.openjpa.persistence.AbstractQuery<X>.getPositionalParameters(),29,62
org.apache.openjpa.persistence.AbstractQuery<X>.calculateMaxKey(Set<Integer>),9,19
org.apache.openjpa.persistence.AbstractQuery<X>.setParameters(Object),20,28
org.apache.openjpa.persistence.AbstractQuery<X>.clearBinding(),3,5
org.apache.openjpa.persistence.AbstractQuery<X>.getNamedParameters(),20,51
org.apache.openjpa.persistence.AbstractQuery<X>.setParameters(Map),22,35
"org.apache.openjpa.persistence.AbstractQuery<X>.getParameter(String,Class<T>)",15,40
"org.apache.openjpa.persistence.AbstractQuery<X>.getParameter(int,Class<T>)",22,52
org.apache.openjpa.persistence.AbstractQuery<X>.getParameterValue(Parameter<T>),16,37
org.apache.openjpa.persistence.AbstractQuery<X>.getParameters(),9,18
"org.apache.openjpa.persistence.AbstractQuery<X>.setParameter(Parameter<T>,T)",10,18
"org.apache.openjpa.persistence.AbstractQuery<X>.setParameter(Parameter<Date>,Date,TemporalType)",8,19
"org.apache.openjpa.persistence.AbstractQuery<X>.setParameter(Parameter<Calendar>,Calendar,TemporalType)",9,19
org.apache.openjpa.persistence.AbstractQuery<X>.getParameter(String),28,68
org.apache.openjpa.persistence.AbstractQuery<X>.getParameter(int),24,51
org.apache.openjpa.persistence.AbstractQuery<X>.getParameterValue(String),10,22
org.apache.openjpa.persistence.AbstractQuery<X>.getParameterValue(int),10,26
org.apache.openjpa.persistence.AbstractQuery<X>.getBoundParameterKeys(),23,49
org.apache.openjpa.persistence.AbstractQuery<X>.getDeclaredParameterKeys(),13,26
org.apache.openjpa.persistence.AbstractQuery<X>.getDeclaredParameterKeys(Class<T>),11,23
org.apache.openjpa.persistence.AbstractQuery<X>.getDeclaredParameters(),66,179
"org.apache.openjpa.persistence.AbstractQuery<X>.declareParameter(Object,Parameter<>)",27,50
org.apache.openjpa.persistence.AbstractQuery<X>.isBound(Parameter<>),9,15
org.apache.openjpa.persistence.AbstractQuery<X>.assertBound(Parameter<>),10,17
"org.apache.openjpa.persistence.AbstractQuery<X>.bindValue(Parameter<>,Object)",13,26
"org.apache.openjpa.persistence.AbstractQuery<X>.setParameter(String,Calendar,TemporalType)",11,19
"org.apache.openjpa.persistence.AbstractQuery<X>.setParameter(String,Date,TemporalType)",11,19
"org.apache.openjpa.persistence.AbstractQuery<X>.setParameter(String,Object)",22,34
"org.apache.openjpa.persistence.AbstractQuery<X>.assertValueAssignable(Parameter<>,Object)",25,82
org.apache.openjpa.persistence.AbstractQuery<X>.getRelaxBindParameterTypeChecking(),5,10
org.apache.openjpa.persistence.AbstractQuery<X>.setRelaxBindParameterTypeChecking(Object),11,28
org.apache.openjpa.jdbc.meta.strats.ReaderLobEntity.getId(),0,0
org.apache.openjpa.jdbc.meta.strats.ReaderLobEntity.setId(int),1,1
org.apache.openjpa.jdbc.meta.strats.ReaderLobEntity.getStream(),2,3
org.apache.openjpa.jdbc.meta.strats.ReaderLobEntity.setStream(Object),4,5
org.apache.openjpa.kernel.Query.getBroker(),3,5
org.apache.openjpa.kernel.Query.setQuery(Object),5,7
org.apache.openjpa.kernel.Query.setIgnoreChanges(boolean),5,8
org.apache.openjpa.kernel.Query.addFilterListener(FilterListener),5,10
org.apache.openjpa.kernel.Query.removeFilterListener(FilterListener),4,10
org.apache.openjpa.kernel.Query.addAggregateListener(AggregateListener),5,10
org.apache.openjpa.kernel.Query.removeAggregateListener(AggregateListener),4,10
org.apache.openjpa.kernel.Query.getCandidateExtent(),6,11
org.apache.openjpa.kernel.Query.setCandidateExtent(Extent),3,8
org.apache.openjpa.kernel.Query.setCandidateCollection(Collection<>),5,8
org.apache.openjpa.kernel.Query.compile(),2,3
org.apache.openjpa.kernel.Query.execute(),2,3
org.apache.openjpa.kernel.Query.execute(Map<>),5,7
org.apache.openjpa.kernel.Query.execute(Object[]),5,7
org.apache.openjpa.kernel.Query.deleteAll(),6,7
org.apache.openjpa.kernel.Query.deleteAll(Object[]),10,14
org.apache.openjpa.kernel.Query.deleteAll(Map<>),10,16
org.apache.openjpa.kernel.Query.updateAll(),5,8
org.apache.openjpa.kernel.Query.updateAll(Object[]),11,15
org.apache.openjpa.kernel.Query.updateAll(Map<>),9,17
org.apache.openjpa.kernel.Query.closeAll(),3,4
org.apache.openjpa.kernel.Query.closeResources(),9,14
org.apache.openjpa.kernel.Query.getDataStoreActions(Map<>),21,25
org.apache.openjpa.kernel.Query.assertOpen(),2,2
org.apache.openjpa.kernel.Query.assertNotReadOnly(),2,3
org.apache.openjpa.kernel.Query.assertNotSerialized(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.StateImagePC3.getLockField(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.StateImagePC3.setLockField(int),3,5
org.apache.openjpa.persistence.jdbc.common.apps.StateImagePC3.getNoLockField(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.StateImagePC3.setNoLockField(int),4,5
org.apache.openjpa.persistence.jdbc.order.BaseTestElement3.BaseTestElement3(),3,3
org.apache.openjpa.persistence.jdbc.order.BaseTestElement3.BaseTestElement3(String),5,7
org.apache.openjpa.persistence.jdbc.order.BaseTestElement3.setName(String),3,6
org.apache.openjpa.persistence.jdbc.order.BaseTestElement3.getName(),2,3
org.apache.openjpa.persistence.jdbc.order.BaseTestElement3.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.BaseTestElement3.getId(),0,0
org.apache.openjpa.persistence.jdbc.order.BaseTestElement3.equals(Object),9,22
org.apache.openjpa.persistence.jdbc.order.ObOcEntity.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.ObOcEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.order.ObOcEntity.setIntList(List<Integer>),3,7
org.apache.openjpa.persistence.jdbc.order.ObOcEntity.getIntList(),2,4
org.apache.openjpa.persistence.jdbc.kernel.TestIncrementalJDBCFlushes.TestIncrementalJDBCFlushes(String),6,7
org.apache.openjpa.persistence.jdbc.kernel.TestIncrementalJDBCFlushes.setUp(),9,13
org.apache.openjpa.persistence.jdbc.kernel.TestIncrementalJDBCFlushes.testFlushHappened(),37,84
"org.apache.openjpa.persistence.jdbc.kernel.TestIncrementalJDBCFlushes.getStoreManager(EntityManager,boolean)",11,22
org.apache.openjpa.persistence.jdbc.kernel.TestIncrementalJDBCFlushes.getProps(),22,41
"org.apache.openjpa.persistence.criteria.CompareByExample<T>.CompareByExample(CriteriaBuilder,ManagedType<T>,Path<T>,T,ComparisonStyle,Attribute<>)",40,117
"org.apache.openjpa.persistence.criteria.CompareByExample<T>.extractValue(T,SingularAttribute<>)",13,31
"org.apache.openjpa.persistence.criteria.CompareByExample<T>.isDefaultValue(Class<>,Object)",8,34
org.apache.openjpa.persistence.criteria.CompareByExample<T>.extractOperator(ComparisonStyle),5,12
org.apache.openjpa.lib.meta.ClasspathMetaDataIterator.ClasspathMetaDataIterator(),8,9
"org.apache.openjpa.lib.meta.ClasspathMetaDataIterator.ClasspathMetaDataIterator(String[],MetaDataFilter)",38,114
"org.apache.openjpa.lib.meta.ClasspathMetaDataIterator.endsWith(String,String[])",5,10
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCLeafD1.getLeafD1Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCLeafD1.setLeafD1Data(String),4,10
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.MSC.getMappedSuperclassData(),4,4
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.MSC.setMappedSuperclassData(String),5,8
org.apache.openjpa.persistence.criteria.SelectionImpl<X>.SelectionImpl(Class<X>),8,11
org.apache.openjpa.persistence.criteria.SelectionImpl<X>.getJavaType(),7,8
org.apache.openjpa.persistence.criteria.SelectionImpl<X>.getAlias(),5,7
org.apache.openjpa.persistence.criteria.SelectionImpl<X>.alias(String),12,24
org.apache.openjpa.persistence.criteria.SelectionImpl<X>.setAutoAlias(String),14,28
org.apache.openjpa.persistence.criteria.SelectionImpl<X>.isAutoAliased(),8,12
org.apache.openjpa.persistence.criteria.SelectionImpl<X>.isAliased(),12,18
org.apache.openjpa.persistence.criteria.SelectionImpl<X>.getCompoundSelectionItems(),10,16
org.apache.openjpa.persistence.criteria.SelectionImpl<X>.isCompoundSelection(),7,8
org.apache.openjpa.persistence.criteria.SelectionImpl<X>.assertValidName(String),18,38
org.apache.openjpa.persistence.criteria.SelectionImpl<X>.asValue(AliasContext),10,11
org.apache.openjpa.persistence.criteria.SelectionImpl<X>.asVariable(AliasContext),10,11
org.apache.openjpa.persistence.criteria.SelectionImpl<X>.asProjection(AliasContext),9,11
org.apache.openjpa.persistence.criteria.SelectionImpl<X>.acceptVisit(CriteriaExpressionVisitor),6,11
"org.apache.openjpa.persistence.query.LogicalPredicate.LogicalPredicate(Predicate,ConditionalOperator,ConditionalOperator,Predicate)",5,11
org.apache.openjpa.persistence.query.LogicalPredicate.and(Predicate),1,5
org.apache.openjpa.persistence.query.LogicalPredicate.or(Predicate),1,5
org.apache.openjpa.persistence.query.LogicalPredicate.not(),3,4
org.apache.openjpa.persistence.query.LogicalPredicate.asExpression(AliasContext),9,16
org.apache.openjpa.persistence.inheritance.entity.SubclassF.setClassFName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.SubclassF.getClassFName(),2,3
org.apache.openjpa.persistence.inheritance.entity.SubclassF.toString(),4,9
org.apache.openjpa.persistence.inheritance.entity.SubclassF.getIntFieldSup(),2,4
org.apache.openjpa.persistence.inheritance.entity.SubclassF.setIntFieldSup(int),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCLeafC.getLeafCData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCLeafC.setLeafCData(String),4,10
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Integer.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Integer.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Integer.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Integer.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Integer.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Integer.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Integer.getEmbed(),3,5
org.apache.openjpa.persistence.embed.EntityA_Embed_Coll_Integer.setEmbed(Embed_Coll_Integer),4,8
org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass.TIdClass.getId(),0,0
org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass.TIdClass.setId(int),1,1
org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass.TIdClass.equals(Object),3,5
org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass.TIdClass.hashCode(),2,4
org.apache.openjpa.persistence.annotations.TestJoinedInheritance.TestJoinedInheritance(String),6,7
org.apache.openjpa.persistence.annotations.TestJoinedInheritance.setUp(),4,13
org.apache.openjpa.persistence.annotations.TestJoinedInheritance.testInheritance(),17,58
"org.apache.openjpa.persistence.query.RootPath.RootPath(QueryDefinitionImpl,Class)",8,12
org.apache.openjpa.persistence.query.RootPath.getLastSegment(),1,2
org.apache.openjpa.persistence.query.RootPath.getAliasHint(AliasContext),8,10
org.apache.openjpa.persistence.query.RootPath.asExpression(AliasContext),5,7
org.apache.openjpa.persistence.query.RootPath.asJoinable(AliasContext),8,11
org.apache.openjpa.persistence.query.RootPath.asProjection(AliasContext),5,7
org.apache.openjpa.persistence.query.RootPath.toString(),4,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Schedule.Schedule(),1,1
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Schedule.Schedule(String,Calendar,Date,Date)",9,18
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Schedule.getDob(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Schedule.setDob(Calendar),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Schedule.getStartDate(),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Schedule.setStartDate(Date),3,10
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Schedule.getEndDate(),1,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Schedule.setEndDate(Date),2,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Schedule.getId(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Schedule.getName(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Schedule.setName(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Schedule.toString(),5,7
org.apache.openjpa.persistence.inheritance.entity.PTEmployee.PTEmployee(),1,1
org.apache.openjpa.persistence.inheritance.entity.PTEmployee.getHourlyWage(),2,4
org.apache.openjpa.persistence.inheritance.entity.PTEmployee.setHourlyWage(float),3,9
org.apache.openjpa.persistence.query.UnaryOperator.UnaryOperator(String),4,6
org.apache.openjpa.persistence.query.UnaryOperator.toString(),2,3
org.apache.openjpa.persistence.callbacks.MessageListenerImpl.prePersist(Object),9,15
org.apache.openjpa.persistence.callbacks.MessageListenerImpl.postPersist(Object),4,6
org.apache.openjpa.persistence.callbacks.MessageListenerImpl.postLoad(Object),4,6
org.apache.openjpa.persistence.callbacks.MessageListenerImpl.preUpdate(Object),8,11
org.apache.openjpa.persistence.callbacks.MessageListenerImpl.postUpdate(Object),4,6
org.apache.openjpa.persistence.callbacks.MessageListenerImpl.preRemove(Object),4,6
org.apache.openjpa.persistence.callbacks.MessageListenerImpl.postRemove(Object),4,6
org.apache.openjpa.persistence.callbacks.MessageListenerImpl.resetCounters(),9,23
org.apache.openjpa.persistence.callbacks.MessageListenerImpl.getStates(),8,43
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.FullName.FullName(),1,1
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.FullName.FullName(String,String)",2,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.FullName.getFName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.FullName.setFName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.FullName.getLName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.FullName.setLName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.FullName.equals(Object),3,11
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.FullName.hashCode(),4,13
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.FullName.FullName(),1,1
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.FullName.FullName(String,String)",2,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.FullName.getFName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.FullName.setFName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.FullName.getLName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.FullName.setLName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.FullName.equals(Object),3,11
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.FullName.hashCode(),4,13
org.apache.openjpa.persistence.inheritance.polymorphic.EnglishParagraph.getContent(),2,3
org.apache.openjpa.persistence.inheritance.polymorphic.EnglishParagraph.setContent(String),3,6
org.apache.openjpa.persistence.compat.Bi_1ToM_JT.getId(),1,1
org.apache.openjpa.persistence.compat.Bi_1ToM_JT.getName(),2,3
org.apache.openjpa.persistence.compat.Bi_1ToM_JT.setName(String),3,6
org.apache.openjpa.persistence.compat.Bi_1ToM_JT.getEntityCs(),3,5
org.apache.openjpa.persistence.compat.Bi_1ToM_JT.setEntityCs(List<EntityC_B1MJT>),4,8
org.apache.openjpa.persistence.compat.Bi_1ToM_JT.hashCode(),3,5
org.apache.openjpa.persistence.compat.Bi_1ToM_JT.equals(Object),5,16
org.apache.openjpa.lib.util.SizedMap.getMaxSize(),7,8
org.apache.openjpa.lib.util.SizedMap.setMaxSize(int),8,10
org.apache.openjpa.lib.util.SizedMap.isFull(),1,1
"org.apache.openjpa.lib.util.SizedMap.overflowRemoved(Object,Object)",9,12
org.apache.openjpa.persistence.embed.attrOverrides.PropertyInfo.getParcelNumber(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.PropertyInfo.setParcelNumber(Integer),3,4
org.apache.openjpa.persistence.embed.attrOverrides.PropertyInfo.getSize(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.PropertyInfo.setSize(Integer),3,6
org.apache.openjpa.persistence.embed.attrOverrides.PropertyInfo.getTax(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.PropertyInfo.setTax(BigDecimal),3,6
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdEntity.getId(),1,1
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdEntity.setId(EmbeddedIdClass),2,2
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdEntity.getValue(),2,3
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdEntity.setValue(String),3,6
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdEntity.getRelation(),3,4
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdEntity.setRelation(EmbeddedIdEntity),4,7
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdEntity.getMappingOverrideRelation(),6,8
org.apache.openjpa.persistence.jdbc.annotations.TestGenerators.setUp(),9,13
org.apache.openjpa.persistence.jdbc.annotations.TestGenerators.testGet(),27,33
org.apache.openjpa.persistence.jdbc.annotations.TestGenerators.testFlush(),14,19
org.apache.openjpa.persistence.jdbc.annotations.TestGenerators.testCommit(),12,17
org.apache.openjpa.persistence.jdbc.annotations.TestGenerators.assertNew(),15,20
org.apache.openjpa.persistence.jdbc.annotations.TestGenerators.assertPks(Generator),4,6
org.apache.openjpa.persistence.jpql.clauses.TestEJBPolymorphicQuery.TestEJBPolymorphicQuery(String),7,8
org.apache.openjpa.persistence.jpql.clauses.TestEJBPolymorphicQuery.setUp(),13,29
org.apache.openjpa.persistence.jpql.clauses.TestEJBPolymorphicQuery.testPolymorphicSelect(),20,29
org.apache.openjpa.persistence.jpql.clauses.TestEJBPolymorphicQuery.testPolymorphicDelete(),13,17
org.apache.openjpa.persistence.embed.VicePresidentXml.getId(),0,0
org.apache.openjpa.persistence.embed.VicePresidentXml.setId(int),1,1
org.apache.openjpa.persistence.embed.VicePresidentXml.getName(),2,3
org.apache.openjpa.persistence.embed.VicePresidentXml.setName(String),3,6
org.apache.openjpa.persistence.jdbc.annotations.TablePerClass1.getPk(),0,0
org.apache.openjpa.persistence.jdbc.annotations.TablePerClass1.setBasic(int),2,3
org.apache.openjpa.persistence.jdbc.annotations.TablePerClass1.getBasic(),1,2
org.apache.openjpa.persistence.jdbc.annotations.TablePerClass1.getEmbed(),2,4
org.apache.openjpa.persistence.jdbc.annotations.TablePerClass1.setEmbed(EmbedValue),3,5
org.apache.openjpa.enhance.PCRegistry.addRegisterClassListener(RegisterClassListener),14,28
org.apache.openjpa.enhance.PCRegistry.removeRegisterClassListener(RegisterClassListener),7,14
org.apache.openjpa.enhance.PCRegistry.getFieldNames(Class<>),7,15
org.apache.openjpa.enhance.PCRegistry.getFieldTypes(Class<>),6,14
org.apache.openjpa.enhance.PCRegistry.getPersistentSuperclass(Class<>),12,21
"org.apache.openjpa.enhance.PCRegistry.newInstance(Class<>,StateManager,boolean)",12,21
"org.apache.openjpa.enhance.PCRegistry.newInstance(Class<>,StateManager,Object,boolean)",14,25
org.apache.openjpa.enhance.PCRegistry.getPCType(Class<>),7,19
org.apache.openjpa.enhance.PCRegistry.newObjectId(Class<>),8,16
"org.apache.openjpa.enhance.PCRegistry.newObjectId(Class<>,String)",13,25
org.apache.openjpa.enhance.PCRegistry.getTypeAlias(Class<>),4,7
"org.apache.openjpa.enhance.PCRegistry.copyKeyFieldsToObjectId(Class<>,FieldSupplier,Object)",14,30
"org.apache.openjpa.enhance.PCRegistry.copyKeyFieldsFromObjectId(Class<>,FieldConsumer,Object)",14,30
"org.apache.openjpa.enhance.PCRegistry.register(Class<>,String[],Class<>[],byte[],Class<>,String,PersistenceCapable)",28,72
org.apache.openjpa.enhance.PCRegistry.deRegister(ClassLoader),13,19
org.apache.openjpa.enhance.PCRegistry.getRegisteredTypes(),13,16
org.apache.openjpa.enhance.PCRegistry.isRegistered(Class<>),7,10
org.apache.openjpa.enhance.PCRegistry.getMeta(Class<>),12,19
org.apache.openjpa.enhance.PCRegistry.RegisterClassListener.register(Class<>),2,2
"org.apache.openjpa.enhance.PCRegistry.Meta.Meta(PersistenceCapable,String[],Class<>[],Class<>,String)",8,20
org.apache.openjpa.persistence.cache.jpa.TestCacheModeAllDataCacheCustomized.getEntityManagerFactory(),34,115
org.apache.openjpa.lib.xml.Commentable.setComments(String[]),3,6
org.apache.openjpa.lib.xml.Commentable.getComments(),5,6
org.apache.openjpa.persistence.datacache.TestDataCachePCDataGenerator.TestDataCachePCDataGenerator(String),5,8
org.apache.openjpa.persistence.datacache.TestDataCachePCDataGenerator.getConfs(),4,5
org.apache.openjpa.persistence.datacache.TestDataCachePCDataGenerator.getConfs2(),4,5
org.apache.openjpa.persistence.datacache.TestDataCachePCDataGenerator.addGenerator(String[]),12,27
"org.apache.openjpa.util.BigIntegerId.BigIntegerId(Class,String)",4,8
"org.apache.openjpa.util.BigIntegerId.BigIntegerId(Class,BigInteger)",3,7
"org.apache.openjpa.util.BigIntegerId.BigIntegerId(Class,BigInteger,boolean)",4,9
org.apache.openjpa.util.BigIntegerId.getId(),2,2
org.apache.openjpa.util.BigIntegerId.getIdObject(),2,3
org.apache.openjpa.util.BigIntegerId.toString(),2,5
org.apache.openjpa.util.BigIntegerId.idHash(),3,5
org.apache.openjpa.util.BigIntegerId.idEquals(OpenJPAId),5,9
org.apache.openjpa.persistence.datacache.TestSJVMCache.TestSJVMCache(String),4,6
org.apache.openjpa.persistence.datacache.TestSJVMCache.getConfs(),21,35
org.apache.openjpa.persistence.datacache.TestSJVMCache.getConfs2(),20,34
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinGetObjectById.TestSubclassJoinGetObjectById(String),8,13
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinGetObjectById.skipTest(),10,15
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinGetObjectById.setUpTestCase(),16,29
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinGetObjectById.testBase(),19,63
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinGetObjectById.testBadId(),17,29
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinGetObjectById.testLeaf(),21,94
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinGetObjectById.testLeaf2(),21,81
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinGetObjectById.testMid(),21,81
org.apache.openjpa.util.DelayedVectorProxy.DelayedVectorProxy(int),4,5
org.apache.openjpa.util.DelayedVectorProxy.DelayedVectorProxy(),3,3
org.apache.openjpa.util.DelayedVectorProxy.DelayedVectorProxy(Collection),5,8
"org.apache.openjpa.util.DelayedVectorProxy.DelayedVectorProxy(int,int)",4,7
"org.apache.openjpa.util.DelayedVectorProxy.setOwner(OpenJPAStateManager,int)",18,45
"org.apache.openjpa.util.DelayedVectorProxy.detaching(OpenJPAStateManager,int)",5,19
org.apache.openjpa.util.DelayedVectorProxy.getDelayedField(),3,7
org.apache.openjpa.util.DelayedVectorProxy.getDelayedOwner(),5,6
org.apache.openjpa.util.DelayedVectorProxy.getOwner(),3,3
org.apache.openjpa.util.DelayedVectorProxy.getOwnerField(),2,3
org.apache.openjpa.util.DelayedVectorProxy.isDirectAccess(),2,4
org.apache.openjpa.util.DelayedVectorProxy.setDirectAccess(boolean),3,7
org.apache.openjpa.util.DelayedVectorProxy.getBrokerFactory(),2,6
org.apache.openjpa.util.DelayedVectorProxy.load(),4,5
org.apache.openjpa.util.DelayedVectorProxy.getBroker(),3,12
org.apache.openjpa.util.DelayedVectorProxy.closeBroker(),6,16
org.apache.openjpa.util.DelayedVectorProxy.getOwnerStateManager(),3,5
org.apache.openjpa.util.DelayedVectorProxy.isDetached(),1,2
org.apache.openjpa.util.DelayedVectorProxy.isDelayLoad(),5,5
org.apache.openjpa.util.DelayedVectorProxy.clone(),10,19
org.apache.openjpa.util.DelayedVectorProxy.getChangeTracker(),2,6
org.apache.openjpa.util.DelayedVectorProxy.setChangeTracker(CollectionChangeTracker),4,8
org.apache.openjpa.util.DelayedVectorProxy.copy(Object),7,12
org.apache.openjpa.util.DelayedVectorProxy.getElementType(),2,4
org.apache.openjpa.util.DelayedVectorProxy.setElementType(Class<>),4,9
"org.apache.openjpa.util.DelayedVectorProxy.newInstance(Class,Comparator,boolean,boolean)",13,32
org.apache.openjpa.util.DelayedVectorProxy.add(Object),8,24
"org.apache.openjpa.util.DelayedVectorProxy.add(int,Object)",9,20
org.apache.openjpa.util.DelayedVectorProxy.clear(),6,7
"org.apache.openjpa.util.DelayedVectorProxy.addAll(int,Collection)",9,20
org.apache.openjpa.util.DelayedVectorProxy.addAll(Collection),7,14
org.apache.openjpa.util.DelayedVectorProxy.addElement(Object),8,27
org.apache.openjpa.util.DelayedVectorProxy.remove(int),10,25
org.apache.openjpa.util.DelayedVectorProxy.remove(Object),9,30
"org.apache.openjpa.util.DelayedVectorProxy.set(int,Object)",10,36
org.apache.openjpa.util.DelayedVectorProxy.removeAll(Collection),7,14
org.apache.openjpa.util.DelayedVectorProxy.retainAll(Collection),9,17
"org.apache.openjpa.util.DelayedVectorProxy.insertElementAt(Object,int)",10,28
org.apache.openjpa.util.DelayedVectorProxy.removeAllElements(),8,15
org.apache.openjpa.util.DelayedVectorProxy.removeElement(Object),10,35
org.apache.openjpa.util.DelayedVectorProxy.removeElementAt(int),9,19
"org.apache.openjpa.util.DelayedVectorProxy.setElementAt(Object,int)",10,28
org.apache.openjpa.util.DelayedVectorProxy.iterator(),8,17
org.apache.openjpa.util.DelayedVectorProxy.listIterator(int),10,29
org.apache.openjpa.util.DelayedVectorProxy.listIterator(),9,25
org.apache.openjpa.util.DelayedVectorProxy.setSize(int),9,16
org.apache.openjpa.util.DelayedVectorProxy.writeReplace(),8,12
org.apache.openjpa.util.DelayedVectorProxy.contains(Object),6,10
org.apache.openjpa.util.DelayedVectorProxy.containsAll(Collection),6,10
org.apache.openjpa.util.DelayedVectorProxy.isEmpty(),5,7
org.apache.openjpa.util.DelayedVectorProxy.size(),5,7
org.apache.openjpa.util.DelayedVectorProxy.toArray(),6,8
org.apache.openjpa.util.DelayedVectorProxy.toArray(Object[]),6,11
org.apache.openjpa.util.DelayedVectorProxy.equals(Object),7,12
org.apache.openjpa.util.DelayedVectorProxy.hashCode(),6,9
org.apache.openjpa.util.DelayedVectorProxy.lastIndexOf(Object),6,10
"org.apache.openjpa.util.DelayedVectorProxy.subList(int,int)",7,12
org.apache.openjpa.util.DelayedVectorProxy.get(int),6,8
org.apache.openjpa.util.DelayedVectorProxy.indexOf(Object),6,10
"org.apache.openjpa.util.DelayedVectorProxy.indexOf(Object,int)",6,12
org.apache.openjpa.util.DelayedVectorProxy.copyInto(Object[]),7,10
org.apache.openjpa.util.DelayedVectorProxy.trimToSize(),6,9
org.apache.openjpa.util.DelayedVectorProxy.ensureCapacity(int),7,13
org.apache.openjpa.util.DelayedVectorProxy.capacity(),5,7
org.apache.openjpa.util.DelayedVectorProxy.elements(),6,8
"org.apache.openjpa.util.DelayedVectorProxy.lastIndexOf(Object,int)",6,10
org.apache.openjpa.util.DelayedVectorProxy.elementAt(int),7,10
org.apache.openjpa.util.DelayedVectorProxy.firstElement(),6,8
org.apache.openjpa.util.DelayedVectorProxy.lastElement(),6,8
org.apache.openjpa.util.DelayedVectorProxy.toString(),5,8
"org.apache.openjpa.util.DelayedVectorProxy.removeRange(int,int)",7,13
org.apache.openjpa.persistence.jdbc.order.Course.Course(),1,1
org.apache.openjpa.persistence.jdbc.order.Course.Course(String),3,5
org.apache.openjpa.persistence.jdbc.order.Course.getStudents(),3,4
org.apache.openjpa.persistence.jdbc.order.Course.setStudents(Set<Student>),3,7
org.apache.openjpa.persistence.jdbc.order.Course.getWaitList(),3,6
org.apache.openjpa.persistence.jdbc.order.Course.setWaitList(List<Student>),4,9
org.apache.openjpa.persistence.jdbc.order.Course.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.Course.getId(),0,0
org.apache.openjpa.persistence.jdbc.order.Course.setName(String),3,6
org.apache.openjpa.persistence.jdbc.order.Course.getName(),2,3
org.apache.openjpa.persistence.jdbc.order.Course.equals(Object),6,15
org.apache.openjpa.persistence.enhance.common.apps.No2NoArgs.No2NoArgs(String),3,3
org.apache.openjpa.persistence.enhance.identity.Line1.getLid(),2,3
org.apache.openjpa.persistence.enhance.identity.Line1.setLid(LineId1),3,6
org.apache.openjpa.persistence.enhance.identity.Line1.getPage(),1,3
org.apache.openjpa.persistence.enhance.identity.Line1.setPage(Page1),2,6
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD4.EntityD4(),1,1
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD4.EntityD4(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD4.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD4.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD4.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD4.setName(String),4,10
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testTrueLiteral(),8,12
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testFalseLiteral(),8,12
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testDefaultAndIsTrue(),7,10
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testDefaultOrIsFalse(),7,10
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testZeroDisjunctIsFalse(),10,13
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testZeroConjunctIsTrue(),10,13
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testExpressions(),28,60
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testExplictRoot(),11,21
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testImplicitRoot(),11,16
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testEqualWithAttributeAndLiteral(),14,25
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testEqualWithAttributeAndAttribute(),14,31
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testProjection(),15,27
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testAbsExpression(),14,28
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testAvgExpression(),13,24
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testInPredicate(),13,25
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testInPredicateWithPath(),16,29
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testBinaryPredicate(),13,29
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testEqualWithAttributeAndUnaryExpression(),16,34
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testBetweenExpression(),12,24
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testSimplePath(),17,27
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testSimpleLeftJoin(),13,24
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testMultipartNavigation(),13,16
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testMultiLevelJoins(),21,46
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testJoinsNotPresentInWhereClause(),18,36
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testFetchJoins(),18,33
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testJoinedPathInProjection(),23,50
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testKeyExpression(),21,43
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testIndexExpression(),21,50
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testIsEmptyExpression(),13,20
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testExpressionInProjection(),26,54
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testTypeExpression(),17,28
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testIndexExpressionAndLietral(),20,48
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testAggregateInProjection(),22,47
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testSizeExpression(),17,30
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testCaseExpression(),20,50
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testExpression1(),26,60
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testExpression3(),19,46
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testGeneralCaseExpression(),20,50
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testSimpleCaseExpression1(),23,53
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testSimpleCaseExpression2(),21,40
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testLiterals(),15,26
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testParameters1(),18,32
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testParameters1().$1.decorate(Query),5,5
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testParameters2(),19,44
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testParameters2().$2.decorate(Query),7,9
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testParameters3(),18,32
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testParameters3().$3.decorate(Query),5,5
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testParameters4(),19,44
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testParameters4().$4.decorate(Query),7,9
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testParameters5(),21,40
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testParameters5().$5.decorate(Query),6,6
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testSelectList1(),28,62
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testNewConstruct(),13,29
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testConstructorInProjection(),18,40
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testMultipleConstructorInProjection(),20,42
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testSubqueries1(),15,44
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testSubqueries2(),17,54
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testSubqueries3(),18,49
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testSubqueries4(),15,31
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testSubqueries5(),20,40
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testSubqueries6(),20,41
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testGroupByAndHaving(),17,37
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testOrdering1(),18,39
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testOrdering2(),19,48
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testOrdering3(),28,77
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testOrdering4(),14,26
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testOrdering5(),18,37
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testFunctionWithNoArgument(),23,41
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testFunctionWithOneArgument(),18,28
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testFunctionWithTwoArgument(),43,63
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testFunctionWithFunctionArgumentInOrderBy(),49,99
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testKeys1(),27,77
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testKeys2(),26,66
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testKeys3(),26,64
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testKeys4(),27,65
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testKeys5(),27,77
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testKeys6(),26,66
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testKeys7(),26,64
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testKeys8(),27,65
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testValues1(),26,77
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testValues2(),25,66
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testValues3(),26,64
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testValue4(),27,65
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testValues5(),26,82
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testValues6(),25,66
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testValues7(),26,64
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testValue8(),27,65
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testJoinKey(),44,167
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testAliasInOrderByClause(),21,43
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testRealiasNotAllowed(),21,30
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testInvalidAliasNotAllowed(),23,58
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testInvalidParameterName(),13,36
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testGroupByOnMaxResult(),19,44
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testGroupByOnMaxResult().$6.decorate(Query),5,5
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testEmptyAnd(),14,18
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testEmptyOr(),14,18
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testDefaultProjectionWithUntypedResult(),20,36
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testCountDistinct(),13,24
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testCountDistinctOnJoin(),13,21
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testSizeReturnsInteger(),14,27
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testDisjunctionAsFalse(),22,44
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testCurrentTimeReturnsSQLTypes(),31,63
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testCurrentDateReturnsSQLTypes(),23,43
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testCurrentTimestampReturnsSQLTypes(),23,43
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testLiteralInProjection(),13,23
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testBigDecimalConversion(),44,88
org.apache.openjpa.persistence.criteria.TestTypesafeCriteria.testIdClass(),12,20
"org.apache.openjpa.util.FloatId.FloatId(Class,Float)",3,6
"org.apache.openjpa.util.FloatId.FloatId(Class,String)",4,7
"org.apache.openjpa.util.FloatId.FloatId(Class,float)",2,5
"org.apache.openjpa.util.FloatId.FloatId(Class,float,boolean)",3,7
org.apache.openjpa.util.FloatId.getId(),1,1
org.apache.openjpa.util.FloatId.getIdObject(),3,4
org.apache.openjpa.util.FloatId.toString(),2,4
org.apache.openjpa.util.FloatId.idHash(),3,3
org.apache.openjpa.util.FloatId.idEquals(OpenJPAId),3,4
org.apache.openjpa.persistence.jdbc.TestSelectForUpdateOverride.setUp(),11,15
org.apache.openjpa.persistence.jdbc.TestSelectForUpdateOverride.testSelectForUpdateOverride(),57,121
org.apache.openjpa.persistence.jdbc.query.cache.Part.getName(),2,3
org.apache.openjpa.persistence.jdbc.query.cache.Part.setName(String),3,6
org.apache.openjpa.persistence.jdbc.query.cache.Part.getPartno(),1,2
org.apache.openjpa.persistence.jdbc.query.cache.Part.setPartno(int),2,5
org.apache.openjpa.persistence.jdbc.query.cache.Part.getUsedIn(),2,2
org.apache.openjpa.persistence.jdbc.query.cache.Part.setUsedIn(Collection<Usage>),3,3
org.apache.openjpa.persistence.jdbc.query.cache.Part.getInventory(),1,2
org.apache.openjpa.persistence.jdbc.query.cache.Part.setInventory(int),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Store1.getSite(),1,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Store1.setSite(Site1),2,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Store1.setStoreName(String),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Store1.getStoreName(),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Store1.setStoreDescription(String),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Store1.getStoreDescription(),3,5
org.apache.openjpa.persistence.enhance.identity.DependentId5.DependentId5(),1,1
"org.apache.openjpa.persistence.enhance.identity.DependentId5.DependentId5(String,EmployeeId5)",5,9
org.apache.openjpa.persistence.enhance.identity.DependentId5.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.DependentId5.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.DependentId5.getEmp(),2,3
org.apache.openjpa.persistence.enhance.identity.DependentId5.setEmp(EmployeeId5),3,6
org.apache.openjpa.persistence.enhance.identity.DependentId5.hashCode(),4,8
org.apache.openjpa.persistence.enhance.identity.DependentId5.equals(Object),5,11
org.apache.openjpa.conf.TestBadJdbcUrl.testBadUrlProtocolValueWithValidDriverClass(),17,38
org.apache.openjpa.conf.TestBadJdbcUrl.testBadUrlProtocolValueWithValidDataSource(),22,41
org.apache.openjpa.conf.TestBadJdbcUrl.testBadUrlSubprotocolValueWithValidDriverClass(),19,39
org.apache.openjpa.conf.TestBadJdbcUrl.testBadUrlSubprotocolValueWithValidDataSource(),21,40
org.apache.openjpa.conf.TestBadJdbcUrl.testValidUrlWithInvalidDriver(),16,33
"org.apache.openjpa.conf.TestBadJdbcUrl.verifyConnectException(Properties,Class,Class,String)",39,87
"org.apache.openjpa.conf.TestBadJdbcUrl.assertException(Throwable,Class,Class)",12,79
"org.apache.openjpa.conf.TestBadJdbcUrl.assertMessage(Throwable,String)",7,22
org.apache.openjpa.persistence.detach.EntityE.EntityE(),1,1
"org.apache.openjpa.persistence.detach.EntityE.EntityE(long,String)",3,5
org.apache.openjpa.persistence.detach.EntityE.getId(),0,0
org.apache.openjpa.persistence.detach.EntityE.setId(long),1,1
org.apache.openjpa.persistence.detach.EntityE.getName(),2,3
org.apache.openjpa.persistence.detach.EntityE.setName(String),3,6
org.apache.openjpa.persistence.jpql.entities.XMLOrderedManyToManyEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.entities.XMLOrderedManyToManyEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.entities.XMLOrderedManyToManyEntity.getEntities(),4,5
org.apache.openjpa.persistence.jpql.entities.XMLOrderedManyToManyEntity.setEntities(List<INameEntity>),5,8
org.apache.openjpa.persistence.jpql.entities.XMLOrderedManyToManyEntity.addEntity(INameEntity),6,14
org.apache.openjpa.persistence.jpql.entities.XMLOrderedManyToManyEntity.removeEntity(int),7,17
"org.apache.openjpa.persistence.jpql.entities.XMLOrderedManyToManyEntity.insertEntity(int,INameEntity)",8,16
org.apache.openjpa.persistence.jpql.entities.XMLOrderedManyToManyEntity.toString(),4,5
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterA.setStringA(String),2,4
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterA.getStringA(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterA.setIntA(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterA.getIntA(),0,0
org.apache.openjpa.persistence.jdbc.schema.TestJDBCListener.TestJDBCListener(),5,8
org.apache.openjpa.persistence.jdbc.schema.TestJDBCListener.TestJDBCListener(String),5,6
org.apache.openjpa.persistence.jdbc.schema.TestJDBCListener.testJDBCListener(),23,51
org.apache.openjpa.persistence.jdbc.schema.TestJDBCListener.Listener.beforeCommit(JDBCEvent),4,6
org.apache.openjpa.persistence.embed.Item4.getId(),0,0
org.apache.openjpa.persistence.embed.Item4.setId(int),1,1
org.apache.openjpa.persistence.embed.Item4.getImages(),5,6
"org.apache.openjpa.persistence.embed.Item4.addImage(Catagory,FileName4)",7,12
org.apache.openjpa.persistence.embed.Item4.removeImage(Catagory),5,7
org.apache.openjpa.persistence.embed.Item4.getImage(Catagory),6,7
org.apache.openjpa.util.UnsupportedException.UnsupportedException(),4,4
org.apache.openjpa.util.UnsupportedException.UnsupportedException(String),6,7
org.apache.openjpa.util.UnsupportedException.UnsupportedException(Message),6,7
"org.apache.openjpa.util.UnsupportedException.UnsupportedException(Message,Throwable)",8,10
org.apache.openjpa.util.UnsupportedException.getType(),2,2
org.apache.openjpa.persistence.embed.attrOverrides.PhoneNumber.getPhNumber(),0,0
org.apache.openjpa.persistence.embed.attrOverrides.PhoneNumber.setPhNumber(int),1,1
org.apache.openjpa.persistence.embed.attrOverrides.PhoneNumber.getEmployees(),3,4
org.apache.openjpa.persistence.embed.attrOverrides.PhoneNumber.addEmployees(Employee),3,7
org.apache.openjpa.persistence.compat.PartTimeEmployee.getHourlyWage(),2,4
org.apache.openjpa.persistence.compat.PartTimeEmployee.setHourlyWage(double),3,9
org.apache.openjpa.persistence.RollbackException.RollbackException(Exception),5,6
org.apache.openjpa.persistence.RollbackException.getType(),2,2
org.apache.openjpa.persistence.RollbackException.getSubtype(),1,1
org.apache.openjpa.persistence.RollbackException.isFatal(),1,1
org.apache.openjpa.persistence.RollbackException.getCause(),5,6
org.apache.openjpa.persistence.RollbackException.getNestedThrowables(),3,4
org.apache.openjpa.persistence.RollbackException.getFailedObject(),2,4
org.apache.openjpa.persistence.RollbackException.setFailedObject(Object),5,9
org.apache.openjpa.persistence.RollbackException.toString(),2,4
org.apache.openjpa.persistence.RollbackException.printStackTrace(),5,8
org.apache.openjpa.persistence.RollbackException.printStackTrace(PrintStream),7,12
org.apache.openjpa.persistence.RollbackException.printStackTrace(PrintWriter),7,12
org.apache.openjpa.persistence.RollbackException.writeObject(ObjectOutputStream),9,13
org.apache.openjpa.persistence.RollbackException.readObject(ObjectInputStream),8,12
org.apache.openjpa.persistence.jdbc.common.apps.PostDetachCallback.jdoPostDetach(Object),20,27
org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccessSuperclass.UnenhancedCompoundPKFieldAccessSuperclass(),5,5
"org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccessSuperclass.UnenhancedCompoundPKFieldAccessSuperclass(int,int)",5,5
org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccessSuperclass.PK.PK(),0,0
"org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccessSuperclass.PK.PK(int,int)",0,0
org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccessSuperclass.PK.toString(),2,6
org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccessSuperclass.PK.hashCode(),2,2
org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccessSuperclass.PK.equals(Object),8,17
org.apache.openjpa.persistence.arrays.model.AnnoExceptionEntity.getId(),0,0
org.apache.openjpa.persistence.arrays.model.AnnoExceptionEntity.setId(int),1,1
org.apache.openjpa.persistence.arrays.model.AnnoExceptionEntity.getExceptions(),4,5
org.apache.openjpa.persistence.arrays.model.AnnoExceptionEntity.setExceptions(ArrayList<Exception>),5,8
org.apache.openjpa.persistence.arrays.model.AnnoExceptionEntity.getElemCollExceptions(),5,8
org.apache.openjpa.persistence.arrays.model.AnnoExceptionEntity.setElemCollExceptions(Collection<String>),6,15
org.apache.openjpa.persistence.arrays.model.AnnoExceptionEntity.getPersCollExceptions(),5,8
org.apache.openjpa.persistence.arrays.model.AnnoExceptionEntity.setPersCollExceptions(Collection<Exception>),6,15
org.apache.openjpa.persistence.criteria.Course.getId(),0,0
org.apache.openjpa.persistence.criteria.Course.getName(),2,3
org.apache.openjpa.persistence.criteria.Course.setName(String),3,6
org.apache.openjpa.persistence.criteria.Course.getStudentWaitList(),3,8
org.apache.openjpa.persistence.criteria.Course.setStudentWaitList(List<Student>),4,15
org.apache.openjpa.persistence.criteria.Course.addStudentToWaitList(Student),4,11
org.apache.openjpa.persistence.jdbc.common.apps.AttachE.setEstr(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.AttachE.getEstr(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.AttachE.setEint(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachE.getEint(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachE.setEdbl(double),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachE.getEdbl(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachE.setB(AttachB),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachE.getB(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.AttachE.setF(AttachF),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachE.getF(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.AttachE.setDate(Date),2,6
org.apache.openjpa.persistence.jdbc.common.apps.AttachE.getDate(),1,3
org.apache.openjpa.persistence.callbacks.EntityListenerEntity.getId(),0,0
org.apache.openjpa.persistence.callbacks.EntityListenerEntity.setId(long),1,1
org.apache.openjpa.persistence.callbacks.EntityListenerEntity.getValue(),1,2
org.apache.openjpa.persistence.callbacks.EntityListenerEntity.setValue(int),2,5
org.apache.openjpa.persistence.enhance.EntityWithEnum.getMyEnum(),1,1
org.apache.openjpa.persistence.enhance.EntityWithEnum.setMyEnum(SampleEnum),2,2
org.apache.openjpa.persistence.enhance.identity.DependentId2.DependentId2(),1,1
"org.apache.openjpa.persistence.enhance.identity.DependentId2.DependentId2(String,EmployeeId2)",5,9
org.apache.openjpa.persistence.enhance.identity.DependentId2.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.DependentId2.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.DependentId2.setEmpPK(EmployeeId2),3,6
org.apache.openjpa.persistence.enhance.identity.DependentId2.getEmpPK(),2,3
org.apache.openjpa.persistence.enhance.identity.DependentId2.equals(Object),5,14
org.apache.openjpa.persistence.enhance.identity.DependentId2.hashCode(),5,15
org.apache.openjpa.persistence.enhance.identity.PersonId3.PersonId3(),1,1
"org.apache.openjpa.persistence.enhance.identity.PersonId3.PersonId3(String,String)",3,9
org.apache.openjpa.persistence.enhance.identity.PersonId3.setFirstName(String),3,6
org.apache.openjpa.persistence.enhance.identity.PersonId3.getFirstName(),2,3
org.apache.openjpa.persistence.enhance.identity.PersonId3.setLastName(String),3,6
org.apache.openjpa.persistence.enhance.identity.PersonId3.getLastName(),2,3
org.apache.openjpa.persistence.enhance.identity.PersonId3.equals(Object),6,26
org.apache.openjpa.persistence.enhance.identity.PersonId3.hashCode(),4,16
org.apache.openjpa.persistence.common.apps.ArtCourse.ArtCourse(String),4,9
"org.apache.openjpa.persistence.common.apps.ArtCourse.ArtCourse(int,String)",4,9
org.apache.openjpa.persistence.common.apps.ArtCourse.getRelCourse(),3,5
"org.apache.openjpa.kernel.AttachStrategy.attach(AttachManager,Object,ClassMetaData,PersistenceCapable,OpenJPAStateManager,ValueMetaData,boolean)",25,59
"org.apache.openjpa.kernel.AttachStrategy.getDetachedObjectId(AttachManager,Object)",6,11
"org.apache.openjpa.kernel.AttachStrategy.provideField(Object,StateManagerImpl,int)",6,11
"org.apache.openjpa.kernel.AttachStrategy.persist(AttachManager,PersistenceCapable,ClassMetaData,Object,boolean)",26,60
"org.apache.openjpa.kernel.AttachStrategy.attachPCKeyFields(PersistenceCapable,StateManagerImpl,ClassMetaData,AttachManager)",20,43
"org.apache.openjpa.kernel.AttachStrategy.attachField(AttachManager,Object,StateManagerImpl,FieldMetaData,boolean)",77,462
"org.apache.openjpa.kernel.AttachStrategy.getReference(AttachManager,Object,OpenJPAStateManager,ValueMetaData)",30,65
"org.apache.openjpa.kernel.AttachStrategy.replaceCollection(AttachManager,Collection,Collection,OpenJPAStateManager,FieldMetaData)",28,73
"org.apache.openjpa.kernel.AttachStrategy.attachCollection(AttachManager,Collection,OpenJPAStateManager,FieldMetaData)",28,67
"org.apache.openjpa.kernel.AttachStrategy.copyCollection(AttachManager,Collection,FieldMetaData)",16,29
"org.apache.openjpa.kernel.AttachStrategy.copyCollection(AttachManager,Collection,FieldMetaData,OpenJPAStateManager)",19,39
"org.apache.openjpa.kernel.AttachStrategy.copyMap(AttachManager,Map,FieldMetaData,OpenJPAStateManager)",22,56
"org.apache.openjpa.kernel.AttachStrategy.replaceList(AttachManager,Collection,Collection,OpenJPAStateManager,FieldMetaData)",38,100
"org.apache.openjpa.kernel.AttachStrategy.replaceMap(AttachManager,Map,Map,OpenJPAStateManager,FieldMetaData)",32,101
"org.apache.openjpa.kernel.AttachStrategy.attachMap(AttachManager,Map,OpenJPAStateManager,FieldMetaData)",37,164
"org.apache.openjpa.kernel.AttachStrategy.replaceArray(AttachManager,Object,Object,OpenJPAStateManager,FieldMetaData)",39,104
"org.apache.openjpa.kernel.AttachStrategy.equals(Object,Object,boolean)",7,9
org.apache.openjpa.util.ProxyManager.copyArray(Object),10,15
org.apache.openjpa.util.ProxyManager.copyDate(Date),4,8
org.apache.openjpa.util.ProxyManager.newDateProxy(Class),3,6
org.apache.openjpa.util.ProxyManager.copyCalendar(Calendar),4,8
"org.apache.openjpa.util.ProxyManager.newCalendarProxy(Class,TimeZone)",5,10
org.apache.openjpa.util.ProxyManager.copyCollection(Collection),6,10
"org.apache.openjpa.util.ProxyManager.newCollectionProxy(Class,Class,Comparator,boolean)",12,21
org.apache.openjpa.util.ProxyManager.copyMap(Map),8,12
"org.apache.openjpa.util.ProxyManager.newMapProxy(Class,Class,Class,Comparator,boolean)",14,26
org.apache.openjpa.util.ProxyManager.copyCustom(Object),6,11
"org.apache.openjpa.util.ProxyManager.newCustomProxy(Object,boolean)",6,11
org.apache.openjpa.util.ProxyManager.getDelayCollectionLoading(),20,31
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.DelegatingResultSet(ResultSet,Statement)",9,20
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getDelegate(),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getInnermostDelegate(),7,11
org.apache.openjpa.lib.jdbc.DelegatingResultSet.hashCode(),2,4
org.apache.openjpa.lib.jdbc.DelegatingResultSet.equals(Object),7,13
org.apache.openjpa.lib.jdbc.DelegatingResultSet.toString(),8,16
org.apache.openjpa.lib.jdbc.DelegatingResultSet.appendInfo(StringBuffer),6,10
org.apache.openjpa.lib.jdbc.DelegatingResultSet.next(),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.close(),3,4
org.apache.openjpa.lib.jdbc.DelegatingResultSet.wasNull(),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getString(int),3,5
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getBoolean(int),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getByte(int),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getShort(int),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getInt(int),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getLong(int),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getFloat(int),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getDouble(int),2,2
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.getBigDecimal(int,int)",3,5
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getBytes(int),3,4
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getDate(int),3,5
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getTime(int),3,5
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getTimestamp(int),3,5
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getAsciiStream(int),5,8
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getUnicodeStream(int),5,8
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getBinaryStream(int),5,8
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getString(String),3,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getBoolean(String),3,3
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getByte(String),3,3
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getShort(String),3,3
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getInt(String),3,3
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getLong(String),3,3
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getFloat(String),3,3
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getDouble(String),3,3
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.getBigDecimal(String,int)",4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getBytes(String),4,5
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getDate(String),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getTime(String),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getTimestamp(String),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getAsciiStream(String),6,9
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getUnicodeStream(String),6,9
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getBinaryStream(String),6,9
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getWarnings(),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.clearWarnings(),3,4
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getCursorName(),5,7
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getMetaData(),6,10
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getObject(int),3,5
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getObject(String),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.findColumn(String),4,5
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getCharacterStream(int),5,7
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getCharacterStream(String),6,8
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getBigDecimal(int),3,5
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getBigDecimal(String),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.isBeforeFirst(),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.isAfterLast(),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.isFirst(),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.isLast(),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.beforeFirst(),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.afterLast(),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.first(),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.last(),2,2
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getRow(),3,4
org.apache.openjpa.lib.jdbc.DelegatingResultSet.absolute(int),3,4
org.apache.openjpa.lib.jdbc.DelegatingResultSet.relative(int),3,4
org.apache.openjpa.lib.jdbc.DelegatingResultSet.previous(),3,4
org.apache.openjpa.lib.jdbc.DelegatingResultSet.setFetchDirection(int),5,8
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getFetchDirection(),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.setFetchSize(int),5,8
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getFetchSize(),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getType(),3,4
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getConcurrency(),3,4
org.apache.openjpa.lib.jdbc.DelegatingResultSet.rowUpdated(),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.rowInserted(),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.rowDeleted(),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateNull(int),3,4
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBoolean(int,boolean)",3,4
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateByte(int,byte)",3,4
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateShort(int,short)",3,4
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateInt(int,int)",3,4
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateLong(int,long)",3,4
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateFloat(int,float)",3,4
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateDouble(int,double)",3,4
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBigDecimal(int,BigDecimal)",4,7
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateString(int,String)",4,7
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBytes(int,byte[])",4,6
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateDate(int,Date)",4,7
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateTime(int,Time)",4,7
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateTimestamp(int,Timestamp)",4,7
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateAsciiStream(int,InputStream,int)",6,10
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBinaryStream(int,InputStream,int)",6,10
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBlob(int,Blob)",4,9
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateCharacterStream(int,Reader,int)",6,11
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateClob(int,Clob)",4,9
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateObject(int,Object,int)",4,7
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateObject(int,Object)",4,7
org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateNull(String),4,5
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBoolean(String,boolean)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateByte(String,byte)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateShort(String,short)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateInt(String,int)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateLong(String,long)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateFloat(String,float)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateDouble(String,double)",4,5
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBigDecimal(String,BigDecimal)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateString(String,String)",4,8
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBytes(String,byte[])",5,7
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateDate(String,Date)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateTime(String,Time)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateTimestamp(String,Timestamp)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateAsciiStream(String,InputStream,int)",7,11
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBinaryStream(String,InputStream,int)",7,11
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateCharacterStream(String,Reader,int)",7,12
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateObject(String,Object,int)",5,8
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateObject(String,Object)",5,8
org.apache.openjpa.lib.jdbc.DelegatingResultSet.insertRow(),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateRow(),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.deleteRow(),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.refreshRow(),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.cancelRowUpdates(),5,8
org.apache.openjpa.lib.jdbc.DelegatingResultSet.moveToInsertRow(),5,8
org.apache.openjpa.lib.jdbc.DelegatingResultSet.moveToCurrentRow(),5,8
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getStatement(),4,5
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.getObject(int,Map<Class<String>>)",5,7
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getRef(int),3,5
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getBlob(int),3,5
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getClob(int),3,5
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getArray(int),3,5
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.getObject(String,Map<Class<String>>)",5,8
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getRef(String),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getBlob(String),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getClob(String),4,6
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getArray(String),4,6
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.getDate(int,Calendar)",4,6
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.getDate(String,Calendar)",5,7
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.getTime(int,Calendar)",4,6
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.getTime(String,Calendar)",5,7
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.getTimestamp(int,Calendar)",4,6
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.getTimestamp(String,Calendar)",5,7
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getURL(int),4,7
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getURL(String),6,10
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateRef(int,Ref)",5,11
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateRef(String,Ref)",7,14
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBlob(String,Blob)",7,14
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateClob(String,Clob)",7,14
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateArray(int,Array)",5,11
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateArray(String,Array)",7,14
org.apache.openjpa.lib.jdbc.DelegatingResultSet.isWrapperFor(Class<>),6,7
org.apache.openjpa.lib.jdbc.DelegatingResultSet.unwrap(Class<T>),6,7
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getHoldability(),3,4
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getNCharacterStream(int),7,11
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getNCharacterStream(String),8,12
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getNClob(int),5,9
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getNClob(String),6,10
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getNString(int),5,9
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getNString(String),5,10
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getRowId(int),5,9
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getRowId(String),6,10
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getSQLXML(int),5,9
org.apache.openjpa.lib.jdbc.DelegatingResultSet.getSQLXML(String),6,10
org.apache.openjpa.lib.jdbc.DelegatingResultSet.isClosed(),3,4
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateAsciiStream(int,InputStream,long)",9,16
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateAsciiStream(int,InputStream)",8,14
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateAsciiStream(String,InputStream,long)",10,17
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateAsciiStream(String,InputStream)",9,15
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBinaryStream(int,InputStream,long)",9,16
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBinaryStream(int,InputStream)",8,14
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBinaryStream(String,InputStream,long)",10,17
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBinaryStream(String,InputStream)",9,15
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBlob(int,InputStream,long)",9,18
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBlob(int,InputStream)",8,16
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBlob(String,InputStream,long)",10,19
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateBlob(String,InputStream)",9,17
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateCharacterStream(int,Reader,long)",9,15
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateCharacterStream(int,Reader)",8,13
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateCharacterStream(String,Reader,long)",10,18
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateCharacterStream(String,Reader)",9,16
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateClob(int,Reader,long)",8,15
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateClob(int,Reader)",7,13
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateClob(String,Reader,long)",9,16
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateClob(String,Reader)",8,14
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateNCharacterStream(int,Reader,long)",9,15
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateNCharacterStream(int,Reader)",8,13
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateNCharacterStream(String,Reader,long)",10,18
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateNCharacterStream(String,Reader)",9,16
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateNClob(int,NClob)",6,13
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateNClob(int,Reader,long)",8,15
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateNClob(int,Reader)",7,13
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateNClob(String,NClob)",7,14
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateNClob(String,Reader,long)",9,16
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateNClob(String,Reader)",8,14
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateNString(int,String)",6,13
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateNString(String,String)",6,14
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateRowId(int,RowId)",6,11
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateRowId(String,RowId)",7,12
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateSQLXML(int,SQLXML)",8,15
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.updateSQLXML(String,SQLXML)",9,16
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.getObject(String,Class<T>)",9,10
"org.apache.openjpa.lib.jdbc.DelegatingResultSet.getObject(int,Class<T>)",8,9
org.apache.openjpa.persistence.generationtype.Dog3.getId(),0,0
org.apache.openjpa.persistence.generationtype.Dog3.setId(int),1,1
org.apache.openjpa.persistence.generationtype.Dog3.getName(),2,3
org.apache.openjpa.persistence.generationtype.Dog3.setName(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.LRSPCIntf.getStringSet(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.LRSPCIntf.setStringSet(Set),2,6
org.apache.openjpa.persistence.jdbc.common.apps.LRSPCIntf.getRelSet(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.LRSPCIntf.setRelSet(Set),2,6
org.apache.openjpa.persistence.jdbc.common.apps.LRSPCIntf.getStringCollection(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.LRSPCIntf.setStringCollection(Collection),3,6
org.apache.openjpa.persistence.jdbc.common.apps.LRSPCIntf.getRelCollection(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.LRSPCIntf.setRelCollection(Collection),3,6
org.apache.openjpa.persistence.jdbc.common.apps.LRSPCIntf.getStringMap(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.LRSPCIntf.setStringMap(Map),3,6
org.apache.openjpa.persistence.jdbc.common.apps.LRSPCIntf.getRelMap(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.LRSPCIntf.setRelMap(Map),3,6
org.apache.openjpa.persistence.jdbc.common.apps.LRSPCIntf.getStringField(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.LRSPCIntf.newInstance(String),5,6
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAppIdentity.getId(),0,0
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAppIdentity.setId(long),2,3
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAppIdentity.getName(),2,3
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAppIdentity.setName(String),3,6
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAppIdentity.getChildren(),3,4
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAppIdentity.addChild(Child),7,16
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAppIdentity.removeChild(Child),3,8
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAppIdentity.postIdSet(),12,16
org.apache.openjpa.persistence.jdbc.common.apps.PagingAppIdPC.PagingAppIdPC(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.PagingAppIdPC.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.PagingAppIdPC.setIntField(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.PagingAppIdPC.getLongField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.PagingAppIdPC.setLongField(long),2,5
org.apache.openjpa.persistence.jdbc.common.apps.PagingAppIdPC.getRel(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.PagingAppIdPC.setRel(PagingHelperPC),4,7
org.apache.openjpa.persistence.jdbc.common.apps.PagingAppIdPC.getRels(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.PagingAppIdPC.setRels(List),3,6
org.apache.openjpa.jdbc.persistence.classcriteria.Artist.getName(),2,3
org.apache.openjpa.jdbc.persistence.classcriteria.Artist.setName(String),10,16
org.apache.openjpa.jdbc.persistence.classcriteria.Artist.getBooks(),3,4
org.apache.openjpa.jdbc.persistence.classcriteria.Artist.setBooks(Collection<Book>),4,7
org.apache.openjpa.jdbc.persistence.classcriteria.Artist.getMovies(),3,4
org.apache.openjpa.jdbc.persistence.classcriteria.Artist.setMovies(Collection<Movie>),4,7
org.apache.openjpa.jdbc.persistence.classcriteria.Artist.Artist(),1,1
org.apache.openjpa.jdbc.persistence.classcriteria.Artist.Artist(String),3,5
"org.apache.openjpa.lib.meta.ZipFileMetaDataIterator.ZipFileMetaDataIterator(URL,MetaDataFilter)",25,54
"org.apache.openjpa.lib.meta.ZipFileMetaDataIterator.ZipFileMetaDataIterator(ZipFile,MetaDataFilter)",10,27
org.apache.openjpa.lib.meta.ZipFileMetaDataIterator.hasNext(),10,16
org.apache.openjpa.lib.meta.ZipFileMetaDataIterator.next(),6,11
org.apache.openjpa.lib.meta.ZipFileMetaDataIterator.getInputStream(),5,10
org.apache.openjpa.lib.meta.ZipFileMetaDataIterator.getFile(),3,4
org.apache.openjpa.lib.meta.ZipFileMetaDataIterator.close(),4,6
org.apache.openjpa.lib.meta.ZipFileMetaDataIterator.getName(),3,4
org.apache.openjpa.lib.meta.ZipFileMetaDataIterator.getContent(),15,46
org.apache.openjpa.persistence.identity.entityasidentity.Person.Person(),1,1
org.apache.openjpa.persistence.identity.entityasidentity.Person.getId(),1,1
org.apache.openjpa.persistence.identity.entityasidentity.Person.setId(Integer),2,2
org.apache.openjpa.persistence.identity.entityasidentity.Person.getFirstName(),2,3
org.apache.openjpa.persistence.identity.entityasidentity.Person.setFirstName(String),3,6
org.apache.openjpa.persistence.identity.entityasidentity.Person.getLastName(),2,3
org.apache.openjpa.persistence.identity.entityasidentity.Person.setLastName(String),3,6
org.apache.openjpa.lib.graph.Graph.clear(),2,2
org.apache.openjpa.lib.graph.Graph.containsNode(Object),6,11
org.apache.openjpa.lib.graph.Graph.getNodes(),7,9
org.apache.openjpa.lib.graph.Graph.addNode(Object),11,20
org.apache.openjpa.lib.graph.Graph.removeNode(Object),13,33
org.apache.openjpa.lib.graph.Graph.getEdges(),9,18
org.apache.openjpa.lib.graph.Graph.getEdgesFrom(Object),10,19
org.apache.openjpa.lib.graph.Graph.getEdgesTo(Object),9,24
"org.apache.openjpa.lib.graph.Graph.getEdges(Object,Object)",10,27
org.apache.openjpa.lib.graph.Graph.addEdge(Edge),15,50
org.apache.openjpa.lib.graph.Graph.removeEdge(Edge),9,31
org.apache.openjpa.lib.graph.Graph.clearTraversal(),8,17
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcGetEnhancementContractVersion(),4,6
"org.apache.openjpa.persistence.DummyPersistenceCapeable.pcNewInstance(StateManager,boolean)",6,7
"org.apache.openjpa.persistence.DummyPersistenceCapeable.pcCopyFields(Object,int[])",8,10
"org.apache.openjpa.persistence.DummyPersistenceCapeable.pcCopyKeyFieldsFromObjectId(FieldConsumer,Object)",12,14
"org.apache.openjpa.persistence.DummyPersistenceCapeable.pcCopyKeyFieldsToObjectId(FieldSupplier,Object)",12,14
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcCopyKeyFieldsToObjectId(Object),10,11
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcDirty(String),9,9
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcFetchObjectId(),7,8
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcGetDetachedState(),7,7
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcGetGenericContext(),8,8
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcGetStateManager(),6,7
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcGetVersion(),7,7
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcIsDeleted(),6,6
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcIsDetached(),6,6
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcIsDirty(),6,6
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcIsNew(),5,5
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcIsPersistent(),6,6
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcIsTransactional(),6,6
"org.apache.openjpa.persistence.DummyPersistenceCapeable.pcNewInstance(StateManager,Object,boolean)",11,11
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcNewObjectIdInstance(),7,8
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcNewObjectIdInstance(Object),8,10
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcProvideField(int),8,9
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcProvideFields(int[]),9,9
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcReplaceField(int),8,9
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcReplaceFields(int[]),9,9
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcReplaceStateManager(StateManager),7,8
org.apache.openjpa.persistence.DummyPersistenceCapeable.pcSetDetachedState(Object),8,8
org.apache.openjpa.persistence.DummyPersistenceCapeable.DummyPersistenceCapeable(),8,8
org.apache.openjpa.lib.jdbc.ConnectionDecorator.decorate(Connection),6,9
org.apache.openjpa.persistence.access.FieldSub2.getCreateDate(),3,5
org.apache.openjpa.persistence.access.FieldSub2.setCreateDate(Date),4,8
org.apache.openjpa.persistence.access.FieldSub2.equals(Object),9,29
org.apache.openjpa.lib.log.LogFactory.getLog(String),4,7
"org.apache.openjpa.lib.util.Files.backup(File,boolean)",30,69
"org.apache.openjpa.lib.util.Files.revert(File,boolean)",37,85
org.apache.openjpa.lib.util.Files.getSourceFile(Class),5,11
org.apache.openjpa.lib.util.Files.getClassFile(Class),3,7
"org.apache.openjpa.lib.util.Files.getClassFile(Class,String)",25,50
"org.apache.openjpa.lib.util.Files.getPackageFile(File,String,boolean)",33,115
"org.apache.openjpa.lib.util.Files.getFile(String,ClassLoader)",32,109
"org.apache.openjpa.lib.util.Files.getWriter(String,ClassLoader)",16,40
"org.apache.openjpa.lib.util.Files.getWriter(String,ClassLoader,String)",27,68
"org.apache.openjpa.lib.util.Files.getOutputStream(String,ClassLoader)",22,54
"org.apache.openjpa.lib.util.Files.copy(File,File)",25,74
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.setUp(),4,5
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.tearDown(),7,8
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery1(),16,42
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery3(),16,39
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery4(),16,39
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery5(),20,57
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery6(),12,29
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery7(),12,26
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery9(),14,42
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery11(),13,31
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery12(),13,36
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery13(),16,54
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery14(),13,32
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery15(),15,55
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery16(),16,37
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery17(),13,39
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery18(),15,61
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery19(),20,77
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery20(),19,73
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery21(),13,29
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery22(),17,39
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery23(),16,43
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery24(),17,43
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery25(),17,40
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery26(),19,51
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery27(),26,100
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery28(),12,26
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery29(),13,32
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery30(),13,33
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery31(),14,35
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery32(),13,31
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery33(),15,34
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery34(),16,36
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery35(),16,37
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery36(),16,49
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery38(),12,24
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery39(),12,32
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery40(),13,44
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery41(),12,34
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery42(),14,43
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery43(),13,46
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery44(),15,56
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery45(),13,48
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery46(),15,37
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery47(),16,50
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery48(),15,48
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery49(),16,64
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery50(),14,43
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery51(),12,29
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery52(),19,50
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery54(),19,54
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery55(),20,61
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery56(),20,57
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery57(),21,86
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery58(),22,104
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery59(),14,34
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery60(),12,32
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery61(),12,34
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery62(),15,37
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery63(),14,47
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery64(),16,70
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery65(),12,29
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery66(),19,57
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery68(),18,50
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery69(),19,48
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery70(),20,65
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery71(),26,94
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery72(),21,98
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery73(),21,98
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery74(),21,98
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery75(),21,98
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery76(),26,133
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery77(),26,133
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery78(),26,133
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery79(),26,133
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery80(),27,123
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery81(),27,123
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery82(),27,123
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery83(),27,123
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery84(),24,78
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery84().$1.decorate(Query),5,7
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery85(),25,81
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery85().$2.decorate(Query),5,7
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery86(),23,68
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery86().$3.decorate(Query),5,7
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery87(),13,34
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery88(),19,52
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery89(),19,52
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery90(),19,56
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery91(),19,55
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery92(),20,80
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery93(),23,124
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery94(),22,121
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery95(),24,65
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery96(),20,60
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery97(),13,34
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery98(),11,19
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery99(),11,19
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery100(),11,19
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery101(),18,38
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery102(),20,42
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery103(),21,49
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery103a(),18,37
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery103b(),18,39
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery104(),20,50
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery105(),11,19
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery106(),11,19
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery107(),11,19
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery108(),11,19
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery109(),11,19
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery110(),11,19
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery111(),24,52
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery111().$4.decorate(Query),6,6
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery112(),23,53
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery112().$5.decorate(Query),6,6
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery113(),24,55
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery113().$6.decorate(Query),6,6
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery114(),23,53
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery114().$7.decorate(Query),6,6
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery115(),24,55
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery115().$8.decorate(Query),6,6
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery116(),23,53
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery116().$9.decorate(Query),6,6
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery117(),24,55
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery117().$10.decorate(Query),6,6
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery118(),11,19
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery119(),11,19
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery121(),26,58
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery121().$11.decorate(Query),5,6
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery122(),26,56
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery122().$12.decorate(Query),5,6
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery123(),26,56
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery123().$13.decorate(Query),5,6
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery124(),26,58
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery124().$14.decorate(Query),5,6
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery125(),26,54
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery125().$15.decorate(Query),5,5
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery126(),27,56
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery126().$16.decorate(Query),5,5
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery127(),11,19
org.apache.openjpa.persistence.criteria.TestEmbeddableCriteria.testEmbeddableQuery128(),12,24
org.apache.openjpa.lib.rop.ResultObjectProviderIterator.ResultObjectProviderIterator(ResultObjectProvider),7,14
org.apache.openjpa.lib.rop.ResultObjectProviderIterator.close(),8,10
org.apache.openjpa.lib.rop.ResultObjectProviderIterator.remove(),4,4
org.apache.openjpa.lib.rop.ResultObjectProviderIterator.hasNext(),10,17
org.apache.openjpa.lib.rop.ResultObjectProviderIterator.next(),10,18
org.apache.openjpa.lib.rop.ResultObjectProviderIterator.finalize(),2,2
org.apache.openjpa.persistence.OpenJPAEntityTransaction.commitAndResume(),23,35
org.apache.openjpa.persistence.OpenJPAEntityTransaction.rollbackAndResume(),23,35
org.apache.openjpa.persistence.OpenJPAEntityTransaction.setRollbackOnly(Throwable),8,11
org.apache.openjpa.persistence.OpenJPAEntityTransaction.getRollbackCause(),8,11
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.EmployeePK2.EmployeePK2(),1,1
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.EmployeePK2.EmployeePK2(String,Date)",5,9
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.EmployeePK2.equals(Object),5,11
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.EmployeePK2.hashCode(),4,12
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.Company.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.Company.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.Company.getOrganization(),3,3
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.Company.addToOrganization(Division,VicePresident)",6,8
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.Company.removeFromOrganization(Division),4,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.Company.getOrganization(Division),5,7
org.apache.openjpa.persistence.jdbc.query.cache.Supplier.Supplier(),1,1
"org.apache.openjpa.persistence.jdbc.query.cache.Supplier.Supplier(int,String)",4,8
org.apache.openjpa.persistence.jdbc.query.cache.Supplier.addPart(PartBase),5,7
org.apache.openjpa.persistence.jdbc.query.cache.Supplier.getName(),2,3
org.apache.openjpa.persistence.jdbc.query.cache.Supplier.setName(String),3,6
org.apache.openjpa.persistence.jdbc.query.cache.Supplier.getSid(),1,2
org.apache.openjpa.persistence.jdbc.query.cache.Supplier.setSid(int),2,5
org.apache.openjpa.persistence.jdbc.query.cache.Supplier.getSupplies(),3,4
org.apache.openjpa.persistence.jdbc.query.cache.Supplier.setSupplies(List<PartBase>),4,7
org.apache.openjpa.persistence.jdbc.query.cache.Supplier.toString(),4,6
org.apache.openjpa.persistence.datacache.TestClearableScheduler.getMinutesString(),5,13
org.apache.openjpa.persistence.datacache.TestClearableScheduler.setUp(),14,18
org.apache.openjpa.persistence.datacache.TestClearableScheduler.testBasic(),37,112
org.apache.openjpa.persistence.datacache.TestClearableScheduler.DummyCache.getClearCount(),1,2
org.apache.openjpa.persistence.datacache.TestClearableScheduler.DummyCache.clear(),1,1
org.apache.openjpa.persistence.datacache.TestPartitionedDataCache.setUp(),22,36
org.apache.openjpa.persistence.datacache.TestPartitionedDataCache.testPropertyParsing(),25,139
org.apache.openjpa.persistence.datacache.TestPartitionedDataCache.testPolicyConfiguration(),14,49
org.apache.openjpa.persistence.datacache.TestPartitionedDataCache.testPluginConfiguration(),13,31
"org.apache.openjpa.persistence.datacache.TestPartitionedDataCache.assertCacheConfiguration(String,int)",11,30
"org.apache.openjpa.persistence.datacache.TestPartitionedDataCache.TestPolicy.selectCache(OpenJPAStateManager,Object)",7,7
org.apache.openjpa.persistence.datacache.TestPartitionedDataCache.TestPolicy.endConfiguration(),1,1
org.apache.openjpa.persistence.datacache.TestPartitionedDataCache.TestPolicy.setConfiguration(Configuration),3,4
org.apache.openjpa.persistence.datacache.TestPartitionedDataCache.TestPolicy.startConfiguration(),2,2
org.apache.openjpa.persistence.datacache.Order.getId(),0,0
org.apache.openjpa.persistence.datacache.Order.setId(int),1,1
org.apache.openjpa.persistence.datacache.Order.getVersion(),1,2
org.apache.openjpa.persistence.datacache.Order.setVersion(int),2,5
org.apache.openjpa.persistence.datacache.Order.getQuantity(),1,2
org.apache.openjpa.persistence.datacache.Order.setQuantity(int),2,5
org.apache.openjpa.persistence.datacache.Order.getItem(),1,3
org.apache.openjpa.persistence.datacache.Order.setItem(Item),2,6
org.apache.openjpa.persistence.datacache.Order.getPurchase(),1,3
org.apache.openjpa.persistence.datacache.Order.setPurchase(Purchase),2,6
org.apache.openjpa.persistence.jdbc.meta.horizontal.TestQueryAgainstEntireMappedHierarchy.TestQueryAgainstEntireMappedHierarchy(String),9,15
org.apache.openjpa.persistence.jdbc.meta.horizontal.TestQueryAgainstEntireMappedHierarchy.setUpTestCase(),18,53
org.apache.openjpa.persistence.jdbc.meta.horizontal.TestQueryAgainstEntireMappedHierarchy.testQueryAgainstEntireMappedHierarchy(),20,30
org.apache.openjpa.persistence.detach.TestDetachCascade.setUp(),14,39
org.apache.openjpa.persistence.detach.TestDetachCascade.create(int),12,93
org.apache.openjpa.persistence.detach.TestDetachCascade.testCascadeValues(),26,70
org.apache.openjpa.persistence.detach.TestDetachCascade.testNoCascade(),13,28
org.apache.openjpa.persistence.detach.TestDetachCascade.testAlwaysCascade(),18,29
org.apache.openjpa.persistence.detach.TestDetachCascade.testCascadeOfEntities(),14,36
org.apache.openjpa.persistence.detach.TestDetachCascade.testAlwaysCascadeOfEntities(),12,30
org.apache.openjpa.persistence.detach.TestDetachCascade.testSingleCascadeNoFetch(),16,33
org.apache.openjpa.persistence.detach.TestDetachCascade.testCascadeOfCollection(),11,22
org.apache.openjpa.persistence.detach.TestDetachCascade.testCascadeOfMap(),11,18
org.apache.openjpa.persistence.detach.TestDetachCascade.testOldDetachBehavior(),21,48
org.apache.openjpa.persistence.jdbc.order.Bicycle.Bicycle(),1,1
"org.apache.openjpa.persistence.jdbc.order.Bicycle.Bicycle(String,String)",4,9
org.apache.openjpa.persistence.jdbc.order.Bicycle.setBrand(String),3,6
org.apache.openjpa.persistence.jdbc.order.Bicycle.getBrand(),2,3
org.apache.openjpa.persistence.jdbc.order.Bicycle.setModel(String),3,6
org.apache.openjpa.persistence.jdbc.order.Bicycle.getModel(),2,3
org.apache.openjpa.persistence.jdbc.order.Bicycle.equals(Object),7,17
org.apache.openjpa.persistence.detachment.model.NoDetachedStateEntityFieldAccess.NoDetachedStateEntityFieldAccess(),4,4
org.apache.openjpa.persistence.detachment.model.NoDetachedStateEntityFieldAccess.setString(String),2,4
org.apache.openjpa.persistence.detachment.model.NoDetachedStateEntityFieldAccess.setRelationship(NoDetachedStateEntityPropertyAccess),6,7
org.apache.openjpa.persistence.detachment.model.NoDetachedStateEntityFieldAccess.getRelationship(),5,6
org.apache.openjpa.persistence.embed.CustomerXml.getId(),0,0
org.apache.openjpa.persistence.embed.CustomerXml.setId(int),1,1
org.apache.openjpa.persistence.embed.CustomerXml.getName(),2,3
org.apache.openjpa.persistence.embed.CustomerXml.setName(String),3,6
org.apache.openjpa.persistence.embed.CustomerXml.getOrders(),2,2
org.apache.openjpa.persistence.embed.CustomerXml.setOrders(Set<OrderXml>),2,3
org.apache.openjpa.persistence.embed.CustomerXml.addOrder(OrderXml),2,3
org.apache.openjpa.persistence.embed.CustomerXml.equals(Object),9,17
"org.apache.openjpa.persistence.embed.CustomerXml.contains(Set<OrderXml>,OrderXml)",3,5
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.EntityC(),1,1
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.EntityC(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.getEntityDs(),2,5
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.setEntityDs(Collection<EntityD>),4,11
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.addEntityD(EntityD),2,7
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.getEntityD2(),1,4
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.setEntityD2(EntityD2),3,10
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.getMap(),2,6
"org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.setMap(Map<EntityD3,EntityD4>)",4,12
"org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.addMapValues(EntityD3,EntityD4)",6,10
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.getMap2(),2,6
"org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.setMap2(Map<EntityD4,EntityD3>)",4,12
"org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.addMap2Values(EntityD4,EntityD3)",6,10
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.getSecName(),3,7
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityC.setSecName(String),5,16
org.apache.openjpa.persistence.graph.People.getSsn(),1,2
org.apache.openjpa.persistence.graph.People.setSsn(long),2,5
org.apache.openjpa.persistence.graph.People.getName(),2,3
org.apache.openjpa.persistence.graph.People.setName(String),3,6
org.apache.openjpa.jta.SimpleTransaction.commit(),26,70
"org.apache.openjpa.jta.SimpleTransaction.delistResource(XAResource,int)",10,17
org.apache.openjpa.jta.SimpleTransaction.enlistResource(XAResource),11,15
org.apache.openjpa.jta.SimpleTransaction.getStatus(),7,10
org.apache.openjpa.jta.SimpleTransaction.setStatus(int),4,7
org.apache.openjpa.jta.SimpleTransaction.registerSynchronization(Synchronization),11,16
org.apache.openjpa.jta.SimpleTransaction.rollback(),21,50
org.apache.openjpa.jta.SimpleTransaction.setRollbackOnly(),7,11
org.apache.openjpa.jta.SimpleTransaction.setRollbackOnly(Throwable),12,21
org.apache.openjpa.jta.SimpleTransaction.getRollbackCause(),3,5
org.apache.openjpa.jta.SimpleTransaction.toString(),5,7
org.apache.openjpa.jta.SimpleTransaction.statusCode(),17,47
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.TestJPQL2ResultsAndResultClasses(String),7,9
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.setUp(),52,134
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.tearDown(),4,6
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testAggregateResultIsCached(),21,32
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testAggregateNonUniqueResultIsCached(),26,48
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testProjectionResultIsCached(),23,38
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testProjectionOfThisIsCached(),22,48
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testProjectionResultWithThisIsCached(),24,53
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testNullProjectionValues(),21,35
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testNullAndNotNullProjectionValues(),25,46
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.XXXtestNullAggregateValues(),3,3
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testMultipleAggregateResultIsCached(),25,49
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testFieldUsedTwice(),24,40
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testAggregateAndProjection(),27,58
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testResultClassIsCached(),21,35
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testGroupingIsCached(),22,38
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testAggregateProjectionGroupingIsCached(),27,50
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testUniqueResultsAreCachedAndConsistent(),21,43
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testMutableProjectionFieldsAreCopied(),22,36
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testArrayProjectionFieldsAreNotCached(),22,31
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testCollectionProjectionFieldsAreNotCached(),24,31
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testExternalizedSingleValueFieldIsNotCached(),24,35
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.testMutatedQueryReturnsNewResults(),29,101
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.XXXtestExternalizedContainerFieldIsExternalized(),4,5
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.XXXtestSerializedSingleValueFieldIsSerialized(),5,6
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.XXXtestSerializedContainerFieldIsSerialized(),4,5
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.XXXtestCustomMappedSingleValueFieldIsHandled(),7,7
org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.XXXtestCustomMappedContainerFieldIsHandled(),6,6
"org.apache.openjpa.persistence.datacache.TestJPQL2ResultsAndResultClasses.deleteAll(Broker,Class,boolean)",21,54
org.apache.openjpa.persistence.jdbc.update.TestParentChild.setUp(),30,54
org.apache.openjpa.persistence.jdbc.update.TestParentChild.testInsert(),24,33
"org.apache.openjpa.persistence.jdbc.update.TestParentChild.createData(PersistOrder,int)",19,54
"org.apache.openjpa.persistence.jdbc.update.TestParentChild.validateData(Object,int)",17,27
org.apache.openjpa.persistence.jdbc.update.TestParentChild.assertPhysicalForeignKeyCreation(),23,31
org.apache.openjpa.persistence.jdbc.update.TestParentChild.assertPostInsertUpdate(),19,26
org.apache.openjpa.persistence.jdbc.update.TestParentChild.assertLogicalOrPhysicalForeignKey(),18,40
org.apache.openjpa.persistence.jdbc.update.TestParentChild.getChildParentForeignKey(),14,35
org.apache.openjpa.persistence.jdbc.update.TestParentChild.getPersistOrder(),4,7
org.apache.openjpa.persistence.jdbc.update.TestParentChild.getMappingDefaults(),6,9
org.apache.openjpa.persistence.jdbc.update.TestParentChild.getSchemaFactory(),6,9
org.apache.openjpa.persistence.datacache.common.apps.AttachE.setEstr(String),3,6
org.apache.openjpa.persistence.datacache.common.apps.AttachE.getEstr(),2,3
org.apache.openjpa.persistence.datacache.common.apps.AttachE.setEint(int),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachE.getEint(),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachE.setEdbl(double),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachE.getEdbl(),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachE.setB(AttachB),2,2
org.apache.openjpa.persistence.datacache.common.apps.AttachE.getB(),1,1
org.apache.openjpa.persistence.datacache.common.apps.AttachE.setF(AttachF),2,2
org.apache.openjpa.persistence.datacache.common.apps.AttachE.getF(),1,1
org.apache.openjpa.persistence.datacache.common.apps.AttachE.setDate(Date),2,6
org.apache.openjpa.persistence.datacache.common.apps.AttachE.getDate(),1,3
org.apache.openjpa.persistence.access.DefFieldMixedPropAccess.setId(int),1,1
org.apache.openjpa.persistence.access.DefFieldMixedPropAccess.getId(),0,0
org.apache.openjpa.persistence.access.DefFieldMixedPropAccess.setVersion(int),2,5
org.apache.openjpa.persistence.access.DefFieldMixedPropAccess.getVersion(),1,2
org.apache.openjpa.persistence.access.DefFieldMixedPropAccess.setStringField(String),5,9
org.apache.openjpa.persistence.access.DefFieldMixedPropAccess.getStringField(),3,5
org.apache.openjpa.persistence.access.DefFieldMixedPropAccess.equals(Object),10,25
org.apache.openjpa.persistence.access.DefFieldMixedPropAccess.setStrField(String),4,10
org.apache.openjpa.persistence.access.DefFieldMixedPropAccess.getStrField(),3,5
org.apache.openjpa.persistence.osgi.PersistenceActivator.start(BundleContext),40,93
org.apache.openjpa.persistence.osgi.PersistenceActivator.stop(BundleContext),18,31
org.apache.openjpa.persistence.osgi.PersistenceActivator.getBundleClassLoader(),17,31
org.apache.openjpa.persistence.jdbc.order.Student.Student(),1,1
org.apache.openjpa.persistence.jdbc.order.Student.Student(String),3,5
org.apache.openjpa.persistence.jdbc.order.Student.getCourses(),3,4
org.apache.openjpa.persistence.jdbc.order.Student.setCourses(Set<Course>),3,7
org.apache.openjpa.persistence.jdbc.order.Student.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.Student.getId(),0,0
org.apache.openjpa.persistence.jdbc.order.Student.setName(String),3,6
org.apache.openjpa.persistence.jdbc.order.Student.getName(),2,3
org.apache.openjpa.persistence.jdbc.order.Student.equals(Object),6,15
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCRootEntity.getRootEntityData(),4,7
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCRootEntity.setRootEntityData(String),5,14
org.apache.openjpa.persistence.generationtype.TestNativeSeqGenerator.setUp(),25,40
org.apache.openjpa.persistence.generationtype.TestNativeSeqGenerator.createEntityE2(),3,5
org.apache.openjpa.persistence.generationtype.TestNativeSeqGenerator.testGetIdGeneratorSeqGen(),15,23
org.apache.openjpa.persistence.generationtype.TestNativeSeqGenerator.testAllocationSize(),39,56
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.setUp(),2,3
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.tearDown(),2,3
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.getPersistenceUnitName(),5,5
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.testClassSpecifiedFieldAccess(),38,85
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.testClassSpecifiedPropertyAccess(),39,83
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.testClassSpecifiedMixedSinglePCFieldAccess(),49,146
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.testClassSpecifiedMixedSinglePCPropertyAccess(),57,156
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.testAbstractMappedSuperField(),56,190
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.testAbstractMappedSuperProperty(),56,190
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.testMappedSuperField(),56,190
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.testMappedSuperProperty(),51,159
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.testMixedMappedSuper(),57,182
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.testEntityFieldDefaultInheritance(),62,264
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.testEntityPropertyDefaultInheritance(),62,264
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.testEmbeddablesField(),36,145
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.testEmbeddablesProperty(),38,150
org.apache.openjpa.persistence.access.xml.TestXMLExplicitAccess.testMixedEmbeddables(),38,161
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCLeafB1.getLeafB1Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCLeafB1.setLeafB1Data(String),4,10
org.apache.openjpa.persistence.query.ExpressionImpl.abs(),2,4
org.apache.openjpa.persistence.query.ExpressionImpl.concat(String),9,23
org.apache.openjpa.persistence.query.ExpressionImpl.concat(Expression),5,10
org.apache.openjpa.persistence.query.ExpressionImpl.dividedBy(Number),4,8
org.apache.openjpa.persistence.query.ExpressionImpl.dividedBy(Expression),3,7
org.apache.openjpa.persistence.query.ExpressionImpl.in(String),5,7
org.apache.openjpa.persistence.query.ExpressionImpl.in(Number),4,6
org.apache.openjpa.persistence.query.ExpressionImpl.in(Enum<>),4,6
org.apache.openjpa.persistence.query.ExpressionImpl.in(Class),4,6
org.apache.openjpa.persistence.query.ExpressionImpl.in(Expression),4,7
org.apache.openjpa.persistence.query.ExpressionImpl.in(Subquery),3,6
org.apache.openjpa.persistence.query.ExpressionImpl.isNull(),2,2
org.apache.openjpa.persistence.query.ExpressionImpl.length(),2,4
org.apache.openjpa.persistence.query.ExpressionImpl.locate(String),4,7
org.apache.openjpa.persistence.query.ExpressionImpl.locate(Expression),3,7
"org.apache.openjpa.persistence.query.ExpressionImpl.locate(String,int)",5,9
"org.apache.openjpa.persistence.query.ExpressionImpl.locate(String,Expression)",5,10
"org.apache.openjpa.persistence.query.ExpressionImpl.locate(Expression,int)",4,9
"org.apache.openjpa.persistence.query.ExpressionImpl.locate(Expression,Expression)",4,10
org.apache.openjpa.persistence.query.ExpressionImpl.lower(),2,4
org.apache.openjpa.persistence.query.ExpressionImpl.member(PathExpression),4,6
org.apache.openjpa.persistence.query.ExpressionImpl.minus(),3,5
org.apache.openjpa.persistence.query.ExpressionImpl.minus(Number),4,8
org.apache.openjpa.persistence.query.ExpressionImpl.minus(Expression),3,7
org.apache.openjpa.persistence.query.ExpressionImpl.mod(int),4,8
org.apache.openjpa.persistence.query.ExpressionImpl.mod(Expression),4,7
org.apache.openjpa.persistence.query.ExpressionImpl.plus(Number),4,8
org.apache.openjpa.persistence.query.ExpressionImpl.plus(Expression),3,7
org.apache.openjpa.persistence.query.ExpressionImpl.sqrt(),4,5
org.apache.openjpa.persistence.query.ExpressionImpl.substring(int),5,7
org.apache.openjpa.persistence.query.ExpressionImpl.substring(Expression),5,8
"org.apache.openjpa.persistence.query.ExpressionImpl.substring(int,int)",6,9
"org.apache.openjpa.persistence.query.ExpressionImpl.substring(int,Expression)",7,12
"org.apache.openjpa.persistence.query.ExpressionImpl.substring(Expression,int)",7,12
"org.apache.openjpa.persistence.query.ExpressionImpl.substring(Expression,Expression)",6,11
org.apache.openjpa.persistence.query.ExpressionImpl.times(Number),4,8
org.apache.openjpa.persistence.query.ExpressionImpl.times(Expression),3,7
org.apache.openjpa.persistence.query.ExpressionImpl.trim(),2,4
org.apache.openjpa.persistence.query.ExpressionImpl.trim(TrimSpec),3,8
org.apache.openjpa.persistence.query.ExpressionImpl.trim(char),2,4
"org.apache.openjpa.persistence.query.ExpressionImpl.trim(char,TrimSpec)",3,8
org.apache.openjpa.persistence.query.ExpressionImpl.trim(Expression),3,7
"org.apache.openjpa.persistence.query.ExpressionImpl.trim(Expression,TrimSpec)",4,11
org.apache.openjpa.persistence.query.ExpressionImpl.upper(),2,4
org.apache.openjpa.persistence.query.ExpressionImpl.asc(),3,4
org.apache.openjpa.persistence.query.ExpressionImpl.desc(),3,4
"org.apache.openjpa.persistence.query.ExpressionImpl.between(PredicateOperand,PredicateOperand)",5,14
"org.apache.openjpa.persistence.query.ExpressionImpl.between(PredicateOperand,Number)",6,13
"org.apache.openjpa.persistence.query.ExpressionImpl.between(Number,PredicateOperand)",6,13
"org.apache.openjpa.persistence.query.ExpressionImpl.between(Number,Number)",5,12
"org.apache.openjpa.persistence.query.ExpressionImpl.between(PredicateOperand,String)",7,14
"org.apache.openjpa.persistence.query.ExpressionImpl.between(String,PredicateOperand)",7,14
"org.apache.openjpa.persistence.query.ExpressionImpl.between(String,String)",6,14
"org.apache.openjpa.persistence.query.ExpressionImpl.between(PredicateOperand,Date)",7,14
"org.apache.openjpa.persistence.query.ExpressionImpl.between(Date,PredicateOperand)",7,14
"org.apache.openjpa.persistence.query.ExpressionImpl.between(Date,Date)",6,14
"org.apache.openjpa.persistence.query.ExpressionImpl.between(PredicateOperand,Calendar)",7,14
"org.apache.openjpa.persistence.query.ExpressionImpl.between(Calendar,PredicateOperand)",7,14
"org.apache.openjpa.persistence.query.ExpressionImpl.between(Calendar,Calendar)",6,14
org.apache.openjpa.persistence.query.ExpressionImpl.equal(PredicateOperand),5,9
org.apache.openjpa.persistence.query.ExpressionImpl.equal(Class),5,8
org.apache.openjpa.persistence.query.ExpressionImpl.equal(Number),5,8
org.apache.openjpa.persistence.query.ExpressionImpl.equal(String),6,9
org.apache.openjpa.persistence.query.ExpressionImpl.equal(boolean),5,8
org.apache.openjpa.persistence.query.ExpressionImpl.equal(Date),6,9
org.apache.openjpa.persistence.query.ExpressionImpl.equal(Calendar),6,9
org.apache.openjpa.persistence.query.ExpressionImpl.equal(Enum<>),4,6
org.apache.openjpa.persistence.query.ExpressionImpl.greaterEqual(PredicateOperand),6,10
org.apache.openjpa.persistence.query.ExpressionImpl.greaterEqual(Number),5,8
org.apache.openjpa.persistence.query.ExpressionImpl.greaterEqual(String),6,9
org.apache.openjpa.persistence.query.ExpressionImpl.greaterEqual(Date),6,9
org.apache.openjpa.persistence.query.ExpressionImpl.greaterEqual(Calendar),6,9
org.apache.openjpa.persistence.query.ExpressionImpl.greaterThan(PredicateOperand),4,7
org.apache.openjpa.persistence.query.ExpressionImpl.greaterThan(Number),4,6
org.apache.openjpa.persistence.query.ExpressionImpl.greaterThan(String),5,7
org.apache.openjpa.persistence.query.ExpressionImpl.greaterThan(Date),5,7
org.apache.openjpa.persistence.query.ExpressionImpl.greaterThan(Calendar),5,7
org.apache.openjpa.persistence.query.ExpressionImpl.lessEqual(PredicateOperand),6,10
org.apache.openjpa.persistence.query.ExpressionImpl.lessEqual(Number),5,8
org.apache.openjpa.persistence.query.ExpressionImpl.lessEqual(String),6,9
org.apache.openjpa.persistence.query.ExpressionImpl.lessEqual(Date),6,9
org.apache.openjpa.persistence.query.ExpressionImpl.lessEqual(Calendar),6,9
org.apache.openjpa.persistence.query.ExpressionImpl.lessThan(PredicateOperand),4,7
org.apache.openjpa.persistence.query.ExpressionImpl.lessThan(Number),4,6
org.apache.openjpa.persistence.query.ExpressionImpl.lessThan(String),5,7
org.apache.openjpa.persistence.query.ExpressionImpl.lessThan(Date),5,7
org.apache.openjpa.persistence.query.ExpressionImpl.lessThan(Calendar),5,7
org.apache.openjpa.persistence.query.ExpressionImpl.like(PredicateOperand),4,7
"org.apache.openjpa.persistence.query.ExpressionImpl.like(PredicateOperand,PredicateOperand)",5,11
"org.apache.openjpa.persistence.query.ExpressionImpl.like(PredicateOperand,char)",5,9
org.apache.openjpa.persistence.query.ExpressionImpl.like(String),5,7
"org.apache.openjpa.persistence.query.ExpressionImpl.like(String,PredicateOperand)",7,11
"org.apache.openjpa.persistence.query.ExpressionImpl.like(String,char)",6,9
org.apache.openjpa.persistence.query.ExpressionImpl.notEqual(PredicateOperand),5,9
org.apache.openjpa.persistence.query.ExpressionImpl.notEqual(Class),5,8
org.apache.openjpa.persistence.query.ExpressionImpl.notEqual(Number),5,8
org.apache.openjpa.persistence.query.ExpressionImpl.notEqual(String),6,9
org.apache.openjpa.persistence.query.ExpressionImpl.notEqual(boolean),5,8
org.apache.openjpa.persistence.query.ExpressionImpl.notEqual(Date),6,9
org.apache.openjpa.persistence.query.ExpressionImpl.notEqual(Calendar),6,9
org.apache.openjpa.persistence.query.ExpressionImpl.notEqual(Enum<>),4,6
org.apache.openjpa.persistence.query.ExpressionImpl.getAliasHint(AliasContext),8,9
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafD2.getLeafD2Data(),3,3
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafD2.setLeafD2Data(String),4,6
org.apache.openjpa.persistence.criteria.ExpressionImpl<X>.ExpressionImpl(Class<X>),7,10
org.apache.openjpa.persistence.criteria.ExpressionImpl<X>.as(Class<Y>),13,26
org.apache.openjpa.persistence.criteria.ExpressionImpl<X>.in(Object),6,10
org.apache.openjpa.persistence.criteria.ExpressionImpl<X>.in(Expression<>),6,11
org.apache.openjpa.persistence.criteria.ExpressionImpl<X>.in(Collection<>),11,17
org.apache.openjpa.persistence.criteria.ExpressionImpl<X>.in(Expression<Collection<>>),10,18
org.apache.openjpa.persistence.criteria.ExpressionImpl<X>.isNotNull(),5,6
org.apache.openjpa.persistence.criteria.ExpressionImpl<X>.isNull(),5,6
"org.apache.openjpa.persistence.criteria.ExpressionImpl<X>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",20,33
"org.apache.openjpa.persistence.criteria.ExpressionImpl<X>.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",20,38
org.apache.openjpa.persistence.inheritance.entity.MappedSuper.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entity.MappedSuper.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.MappedSuper.setName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.MappedSuper.getName(),2,3
org.apache.openjpa.persistence.inheritance.entity.MappedSuper.toString(),2,4
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCLeafC.getLeafCData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCLeafC.setLeafCData(String),4,10
org.apache.openjpa.persistence.criteria.results.Order.getId(),0,0
org.apache.openjpa.persistence.criteria.results.Order.setId(long),1,1
org.apache.openjpa.persistence.criteria.results.Order.isFilled(),1,2
org.apache.openjpa.persistence.criteria.results.Order.setFilled(boolean),2,5
org.apache.openjpa.persistence.criteria.results.Order.getDate(),1,3
org.apache.openjpa.persistence.criteria.results.Order.setDate(Date),2,6
org.apache.openjpa.persistence.criteria.results.Order.getItems(),3,4
org.apache.openjpa.persistence.criteria.results.Order.setItems(Set<Item>),3,7
org.apache.openjpa.persistence.criteria.results.Order.getShop(),1,3
org.apache.openjpa.persistence.criteria.results.Order.setShop(Shop),2,6
org.apache.openjpa.persistence.criteria.results.Order.toPrettyString(),5,9
"org.apache.openjpa.kernel.ENonTransState.initialize(StateManagerImpl,PCState)",14,19
org.apache.openjpa.kernel.ENonTransState.delete(StateManagerImpl),6,8
org.apache.openjpa.kernel.ENonTransState.transactional(StateManagerImpl),11,13
org.apache.openjpa.kernel.ENonTransState.release(StateManagerImpl),4,4
org.apache.openjpa.kernel.ENonTransState.evict(StateManagerImpl),4,4
"org.apache.openjpa.kernel.ENonTransState.beforeRead(StateManagerImpl,int)",8,9
"org.apache.openjpa.kernel.ENonTransState.beforeWrite(StateManagerImpl,int,boolean)",9,10
"org.apache.openjpa.kernel.ENonTransState.beforeOptimisticWrite(StateManagerImpl,int,boolean)",8,8
org.apache.openjpa.kernel.ENonTransState.isPersistent(),1,1
org.apache.openjpa.kernel.ENonTransState.toString(),3,4
"org.apache.openjpa.kernel.exps.GeneralCase.GeneralCase(Exp[],Val)",2,8
"org.apache.openjpa.kernel.exps.GeneralCase.eval(Object,Object,StoreContext,Object[])",13,37
"org.apache.openjpa.kernel.exps.GeneralCase.eval(Object,StoreContext,Object[])",12,32
org.apache.openjpa.kernel.exps.GeneralCase.getType(),7,11
org.apache.openjpa.kernel.exps.GeneralCase.setImplicitType(Class),3,4
org.apache.openjpa.kernel.exps.GeneralCase.acceptVisit(ExpressionVisitor),9,19
org.apache.openjpa.persistence.access.xml.XMLSuperPropertyEntity.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLSuperPropertyEntity.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLSuperPropertyEntity.setName(String),3,6
org.apache.openjpa.persistence.access.xml.XMLSuperPropertyEntity.getName(),2,3
org.apache.openjpa.persistence.access.xml.XMLSuperPropertyEntity.equals(Object),8,20
org.apache.openjpa.persistence.datacache.TestAutoIncrementAndDataCaching.setUp(),10,12
org.apache.openjpa.persistence.datacache.TestAutoIncrementAndDataCaching.testSimpleDataCacheOperation(),27,33
org.apache.openjpa.persistence.datacache.TestAutoIncrementAndDataCaching.testAccessIdBeforeCommit(),26,34
org.apache.openjpa.persistence.inheritance.entity.ComputerUser.getOid(),2,3
org.apache.openjpa.kernel.exps.Sqrt.Sqrt(Val),7,9
org.apache.openjpa.kernel.exps.Sqrt.getType(Class),1,1
"org.apache.openjpa.kernel.exps.Sqrt.operate(Object,Class)",5,7
org.apache.openjpa.persistence.inheritance.TestMultipleMappedSuperclassHierarchy.setUp(),5,8
org.apache.openjpa.persistence.inheritance.TestMultipleMappedSuperclassHierarchy.testPersist(),14,39
org.apache.openjpa.persistence.inheritance.TestMultipleMappedSuperclassHierarchy.main(String[]),10,11
"org.apache.openjpa.kernel.exps.ContainsKeyExpression.ContainsKeyExpression(Val,Val)",10,18
org.apache.openjpa.kernel.exps.ContainsKeyExpression.getCollection(Object),6,9
org.apache.openjpa.kernel.exps.ValuePath.ValuePath(Val),6,10
org.apache.openjpa.kernel.exps.ValuePath.getCandidateType(),3,4
"org.apache.openjpa.kernel.exps.ValuePath.eval(Object,Object,StoreContext,Object[])",12,24
org.apache.openjpa.kernel.exps.ValuePath.acceptVisit(ExpressionVisitor),7,13
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLPackage.UMLPackage(),1,1
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLPackage.getId(),1,1
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLPackage.setId(String),2,2
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLPackage.getName(),2,3
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLPackage.setName(String),3,6
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLPackage.getOwnedType(),4,7
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLPackage.setOwnedType(List<UMLType>),5,12
org.apache.openjpa.persistence.flush.SubTopic.getSubtopicId(),1,2
org.apache.openjpa.persistence.flush.SubTopic.setSubtopicId(Long),2,5
org.apache.openjpa.persistence.flush.SubTopic.getTopic(),1,3
org.apache.openjpa.persistence.flush.SubTopic.setTopic(Topic),2,6
org.apache.openjpa.persistence.flush.SubTopic.getSubtopicText(),3,5
org.apache.openjpa.persistence.flush.SubTopic.setSubtopicText(String),4,10
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectF.CacheObjectF(),2,2
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectF.CacheObjectF(String),3,3
org.apache.openjpa.persistence.event.TestTCPRemoteEvents.TestTCPRemoteEvents(String),5,5
org.apache.openjpa.persistence.event.TestTCPRemoteEvents.setUp(),4,4
org.apache.openjpa.persistence.event.TestTCPRemoteEvents.testEvents(),8,11
org.apache.openjpa.persistence.inheritance.serializable.TestSerialization.setUp(),10,11
org.apache.openjpa.persistence.inheritance.serializable.TestSerialization.testDetachedUpdate(),40,79
org.apache.openjpa.persistence.inheritance.serializable.TestSerialization.serializeObject(Object),20,62
org.apache.openjpa.persistence.graph.PersistentGraph<E>.getId(),0,0
org.apache.openjpa.persistence.jdbc.annotations.NativeSequenceEntity.setId(int),1,1
org.apache.openjpa.persistence.jdbc.annotations.NativeSequenceEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.annotations.NativeSequenceEntity.setName(String),3,6
org.apache.openjpa.persistence.jdbc.annotations.NativeSequenceEntity.getName(),2,3
org.apache.openjpa.enhance.UnenhancedFieldAccess.getId(),0,0
org.apache.openjpa.enhance.UnenhancedFieldAccess.setStringField(String),3,6
org.apache.openjpa.enhance.UnenhancedFieldAccess.getStringField(),2,5
org.apache.openjpa.enhance.UnenhancedFieldAccess.getLazyField(),3,5
org.apache.openjpa.enhance.UnenhancedFieldAccess.equals(Object),6,6
org.apache.openjpa.enhance.UnenhancedFieldAccess.hashCode(),2,2
org.apache.openjpa.enhance.UnenhancedFieldAccess.clone(),4,6
org.apache.openjpa.persistence.annotations.xml.EntityB.getId(),0,0
org.apache.openjpa.persistence.annotations.xml.EntityB.getName(),2,3
org.apache.openjpa.persistence.annotations.xml.EntityB.setName(String),3,6
"org.apache.openjpa.kernel.PCState.initialize(StateManagerImpl,PCState)",7,8
"org.apache.openjpa.kernel.PCState.beforeFlush(StateManagerImpl,boolean,OpCallbacks)",9,9
org.apache.openjpa.kernel.PCState.flush(StateManagerImpl),12,13
org.apache.openjpa.kernel.PCState.commit(StateManagerImpl),13,15
org.apache.openjpa.kernel.PCState.commitRetain(StateManagerImpl),17,20
org.apache.openjpa.kernel.PCState.rollback(StateManagerImpl),13,15
org.apache.openjpa.kernel.PCState.rollbackRestore(StateManagerImpl),17,20
org.apache.openjpa.kernel.PCState.persist(StateManagerImpl),23,29
org.apache.openjpa.kernel.PCState.delete(StateManagerImpl),16,18
"org.apache.openjpa.kernel.PCState.nonprovisional(StateManagerImpl,boolean,OpCallbacks)",12,13
org.apache.openjpa.kernel.PCState.nontransactional(StateManagerImpl),16,19
org.apache.openjpa.kernel.PCState.transactional(StateManagerImpl),17,19
org.apache.openjpa.kernel.PCState.release(StateManagerImpl),16,17
org.apache.openjpa.kernel.PCState.evict(StateManagerImpl),16,18
org.apache.openjpa.kernel.PCState.afterRefresh(),4,5
org.apache.openjpa.kernel.PCState.afterOptimisticRefresh(),5,6
org.apache.openjpa.kernel.PCState.afterNontransactionalRefresh(),5,6
"org.apache.openjpa.kernel.PCState.beforeRead(StateManagerImpl,int)",18,22
"org.apache.openjpa.kernel.PCState.beforeNontransactionalRead(StateManagerImpl,int)",20,24
"org.apache.openjpa.kernel.PCState.beforeOptimisticRead(StateManagerImpl,int)",18,23
"org.apache.openjpa.kernel.PCState.beforeWrite(StateManagerImpl,int,boolean)",24,27
"org.apache.openjpa.kernel.PCState.beforeOptimisticWrite(StateManagerImpl,int,boolean)",24,28
"org.apache.openjpa.kernel.PCState.beforeNontransactionalWrite(StateManagerImpl,int,boolean)",26,29
org.apache.openjpa.kernel.PCState.isTransactional(),3,5
org.apache.openjpa.kernel.PCState.isPersistent(),3,5
org.apache.openjpa.kernel.PCState.isNew(),2,3
org.apache.openjpa.kernel.PCState.isDeleted(),3,5
org.apache.openjpa.kernel.PCState.isDirty(),3,5
org.apache.openjpa.kernel.PCState.isPendingTransactional(),6,8
org.apache.openjpa.kernel.PCState.isProvisional(),4,5
org.apache.openjpa.kernel.PCState.isVersionCheckRequired(StateManagerImpl),12,15
"org.apache.openjpa.kernel.PCState.error(String,StateManagerImpl)",17,21
org.apache.openjpa.kernel.PCState.readResolve(),34,55
org.apache.openjpa.persistence.embed.FileName4.FileName4(),2,2
"org.apache.openjpa.persistence.embed.FileName4.FileName4(String,String)",3,10
org.apache.openjpa.persistence.embed.FileName4.getFName(),2,3
org.apache.openjpa.persistence.embed.FileName4.setFName(String),3,6
org.apache.openjpa.persistence.embed.FileName4.getLName(),2,3
org.apache.openjpa.persistence.embed.FileName4.setLName(String),3,6
org.apache.openjpa.persistence.embed.FileName4.equals(Object),4,14
org.apache.openjpa.persistence.embed.FileName4.hashCode(),4,13
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleB.setStringB(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleB.getStringB(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleB.setIntB(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleB.getIntB(),0,0
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCLeafD2.getLeafD2Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCLeafD2.setLeafD2Data(String),4,10
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.setUp(),11,14
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.createData(),20,31
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.testOrderByAliasAscending(),19,30
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.testOrderByConcatAliasDescending(),21,32
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.testOrderByAliasDescending(),19,30
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.testOrderByQueryAscending(),17,25
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.testOrderByQueryDescending(),17,25
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.testOrderByQueryProjectionAscending(),19,30
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.testOrderByQueryProjectionDescending(),19,30
org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.getNames(List<Game>),7,16
"org.apache.openjpa.persistence.jdbc.query.TestOrderByQuery.assertOrdering(String[],boolean)",5,15
org.apache.openjpa.persistence.embed.attrOverrides.ContactInfo.getPhoneNumbers(),2,4
org.apache.openjpa.persistence.embed.attrOverrides.ContactInfo.addPhoneNumber(PhoneNumber),2,7
org.apache.openjpa.persistence.embed.attrOverrides.ContactInfo.getAddress(),1,3
org.apache.openjpa.persistence.embed.attrOverrides.ContactInfo.setAddress(Address),2,6
org.apache.openjpa.persistence.embed.attrOverrides.ContactInfo.getEmergencyContactInfo(),3,7
org.apache.openjpa.persistence.embed.attrOverrides.ContactInfo.setEmergencyContactInfo(EmergencyContactInfo),4,10
org.apache.openjpa.persistence.derivedid.EDBigIntegerID.EDBigIntegerID(),1,1
org.apache.openjpa.persistence.derivedid.EDBigIntegerID.EDBigIntegerID(EBigIntegerID),4,9
org.apache.openjpa.persistence.derivedid.EDBigIntegerID.getRid(),2,3
org.apache.openjpa.persistence.derivedid.EDBigIntegerID.setRid(EBigIntegerID),3,6
org.apache.openjpa.persistence.derivedid.EDBigIntegerID.getName(),2,3
org.apache.openjpa.persistence.derivedid.EDBigIntegerID.setName(String),3,6
"org.apache.openjpa.meta.InMemoryRelatedFieldOrder.InMemoryRelatedFieldOrder(FieldMetaData,boolean,OpenJPAConfiguration)",10,17
org.apache.openjpa.meta.InMemoryRelatedFieldOrder.getName(),3,4
org.apache.openjpa.meta.InMemoryRelatedFieldOrder.isAscending(),2,2
org.apache.openjpa.meta.InMemoryRelatedFieldOrder.getComparator(),1,2
"org.apache.openjpa.meta.InMemoryRelatedFieldOrder.compare(Object,Object)",17,51
org.apache.openjpa.persistence.jdbc.query.procedure.ProcedureList.getCreateProcedureList(),4,5
org.apache.openjpa.persistence.jdbc.query.procedure.ProcedureList.getDropProcedureList(),4,5
org.apache.openjpa.persistence.jdbc.query.procedure.ProcedureList.callAddXToCharlie(),4,4
org.apache.openjpa.persistence.jdbc.query.procedure.ProcedureList.callAddSuffixToName(),5,5
org.apache.openjpa.persistence.jdbc.query.procedure.ProcedureList.callGetAllApplicants(),3,3
org.apache.openjpa.persistence.jdbc.query.procedure.ProcedureList.callGetTwoApplicants(),3,3
org.apache.openjpa.persistence.cache.jpa.TestCacheModeNone.getEntityManagerFactory(),13,28
org.apache.openjpa.persistence.cache.jpa.TestCacheModeNone.getListener(),4,10
org.apache.openjpa.persistence.cache.jpa.TestCacheModeNone.getSql(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeNone.getCacheEnabled(),2,2
org.apache.openjpa.persistence.cache.jpa.TestCacheModeNone.testCacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeNone.testUncacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeNone.testUnspecified(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeNone.getExpectedInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeNone.getExpectedNotInCache(),2,4
"org.apache.openjpa.util.ClassResolverImpl.getClassLoader(Class<>,ClassLoader)",28,115
org.apache.openjpa.persistence.embed.attrOverrides.ZipcodeXml.getZip(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.ZipcodeXml.setZip(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.ZipcodeXml.getPlusFour(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.ZipcodeXml.setPlusFour(String),3,6
org.apache.openjpa.persistence.enhance.identity.Book1.getBid(),2,3
org.apache.openjpa.persistence.enhance.identity.Book1.setBid(BookId1),3,6
org.apache.openjpa.persistence.enhance.identity.Book1.getLibrary(),1,3
org.apache.openjpa.persistence.enhance.identity.Book1.setLibrary(Library1),2,6
org.apache.openjpa.persistence.enhance.identity.Book1.getPage(PageId1),4,9
org.apache.openjpa.persistence.enhance.identity.Book1.addPage(Page1),5,7
org.apache.openjpa.persistence.enhance.identity.Book1.getAuthor(),2,3
org.apache.openjpa.persistence.enhance.identity.Book1.setAuthor(String),3,6
org.apache.openjpa.persistence.enhance.identity.Book1.equals(Object),4,8
org.apache.openjpa.persistence.enhance.identity.Book1.hashCode(),3,5
org.apache.openjpa.persistence.enhance.identity.PageId.getNumber(),0,0
org.apache.openjpa.persistence.enhance.identity.PageId.setNumber(int),1,1
org.apache.openjpa.persistence.enhance.identity.PageId.equals(Object),4,8
org.apache.openjpa.persistence.enhance.identity.PageId.hashCode(),3,6
org.apache.openjpa.persistence.enhance.identity.PageId.getBook(),1,3
org.apache.openjpa.persistence.enhance.identity.PageId.setBook(BookId),2,6
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.AbstractLRSProxyMap(Class<K>,Class<V>)",11,21
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.setOwner(OpenJPAStateManager,int)",20,42
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.getOwner()",3,3
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.getOwnerField()",2,3
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.getChangeTracker()",2,4
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.copy(Object)",8,11
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.isIterated()",10,11
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.setIterated(boolean)",11,12
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.size()",7,14
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.isEmpty()",2,2
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.containsKey(Object)",18,43
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.containsValue(Object)",17,39
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.get(Object)",12,28
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.put(K,V)",14,38
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.putAll(Map<>)",5,10
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.remove(Object)",11,23
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.clear()",11,30
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.keySet()",2,4
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.keySet().$1.size()",4,5
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.keySet().$1.remove(Object)",5,6
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.keySet().$1.iterator()",6,8
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.values()",2,3
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.values().$2.size()",4,5
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.values().$2.iterator()",6,8
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.entrySet()",3,8
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.entrySet().$3.size()",4,5
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.entrySet().$3.iterator()",6,10
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.writeReplace()",14,31
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.hasKey(Object)",4,6
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.hasValue(Object)",4,6
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.keys(Object)",4,6
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.value(Object)",3,5
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.itr()",22,32
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.count()",7,7
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.iterator(int)",17,36
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.evaluate(Object)",11,27
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.isTracking()",1,2
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.startTracking()",3,5
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.stopTracking()",3,5
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.reset()",6,8
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.getTrackKeys()",2,4
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.setTrackKeys(boolean)",3,8
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.getAdded()",2,3
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.getRemoved()",2,3
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.getChanged()",2,3
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.added(Object,Object)",4,8
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.removed(Object,Object)",4,8
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.changed(Object,Object,Object)",5,11
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.getNextSequence()",1,2
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.setNextSequence(int)",3,6
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.Itr.Itr(int,IteratorChain)",4,9
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.Itr.hasNext()",6,6
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.Itr.next()",9,13
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.Itr.remove()",24,50
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.Itr.close()",3,3
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.Itr.free()",11,24
"org.apache.openjpa.util.AbstractLRSProxyMap<K,V>.Itr.finalize()",2,2
org.apache.openjpa.persistence.jdbc.common.apps.BaseSub2.getBaseSub2Field(),3,6
org.apache.openjpa.persistence.jdbc.common.apps.BaseSub2.setBaseSub2Field(int),4,13
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.setPk1(String),2,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.getPk1(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.setPk2(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.getPk2(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.setStringA(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.getStringA(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.setIntA(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.getIntA(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.ID.ID(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.ID.ID(String),7,14
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.ID.toString(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.ID.hashCode(),5,7
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.ID.equals(Object),2,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.setRelations(List),3,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiA.getRelations(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC2.HelperPC2(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC2.HelperPC2(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC2.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC2.setStringField(String),3,10
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC2.getHelper(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC2.setHelper(HelperPC3),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC2.getHelperCollection(),3,5
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC2.setHelperCollection(List),4,10
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC2.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC2.setId(int),1,1
org.apache.openjpa.kernel.StoreManager.setContext(StoreContext),18,26
org.apache.openjpa.kernel.StoreManager.beginOptimistic(),11,16
org.apache.openjpa.kernel.StoreManager.rollbackOptimistic(),7,9
org.apache.openjpa.kernel.StoreManager.begin(),34,48
org.apache.openjpa.kernel.StoreManager.commit(),5,6
org.apache.openjpa.kernel.StoreManager.rollback(),5,6
"org.apache.openjpa.kernel.StoreManager.exists(OpenJPAStateManager,Object)",9,10
"org.apache.openjpa.kernel.StoreManager.isCached(List<Object>,BitSet)",16,21
"org.apache.openjpa.kernel.StoreManager.syncVersion(OpenJPAStateManager,Object)",23,30
"org.apache.openjpa.kernel.StoreManager.initialize(OpenJPAStateManager,PCState,FetchConfiguration,Object)",56,113
"org.apache.openjpa.kernel.StoreManager.load(OpenJPAStateManager,BitSet,FetchConfiguration,int,Object)",56,111
"org.apache.openjpa.kernel.StoreManager.loadAll(Collection<OpenJPAStateManager>,PCState,int,FetchConfiguration,Object)",86,199
"org.apache.openjpa.kernel.StoreManager.beforeStateChange(OpenJPAStateManager,PCState,PCState)",8,11
org.apache.openjpa.kernel.StoreManager.flush(Collection<OpenJPAStateManager>),49,81
"org.apache.openjpa.kernel.StoreManager.assignObjectId(OpenJPAStateManager,boolean)",48,82
"org.apache.openjpa.kernel.StoreManager.assignField(OpenJPAStateManager,int,boolean)",35,54
org.apache.openjpa.kernel.StoreManager.getManagedType(Object),10,13
org.apache.openjpa.kernel.StoreManager.getDataStoreIdType(ClassMetaData),12,21
"org.apache.openjpa.kernel.StoreManager.copyDataStoreId(Object,ClassMetaData)",12,19
"org.apache.openjpa.kernel.StoreManager.newDataStoreId(Object,ClassMetaData)",15,21
org.apache.openjpa.kernel.StoreManager.getClientConnection(),12,19
org.apache.openjpa.kernel.StoreManager.retainConnection(),11,15
org.apache.openjpa.kernel.StoreManager.releaseConnection(),12,15
org.apache.openjpa.kernel.StoreManager.cancelAll(),7,9
"org.apache.openjpa.kernel.StoreManager.executeExtent(ClassMetaData,boolean,FetchConfiguration)",22,31
org.apache.openjpa.kernel.StoreManager.newQuery(String),19,30
org.apache.openjpa.kernel.StoreManager.newFetchConfiguration(),8,15
"org.apache.openjpa.kernel.StoreManager.compareVersion(OpenJPAStateManager,Object,Object)",14,50
org.apache.openjpa.kernel.StoreManager.getDataStoreIdSequence(ClassMetaData),18,30
org.apache.openjpa.kernel.StoreManager.getValueSequence(FieldMetaData),16,31
org.apache.openjpa.kernel.StoreManager.close(),6,6
org.apache.openjpa.persistence.detach.EntityC.EntityC(),1,1
"org.apache.openjpa.persistence.detach.EntityC.EntityC(long,String)",3,5
org.apache.openjpa.persistence.detach.EntityC.getId(),0,0
org.apache.openjpa.persistence.detach.EntityC.setId(long),1,1
org.apache.openjpa.persistence.detach.EntityC.getName(),2,3
org.apache.openjpa.persistence.detach.EntityC.setName(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizF.setStringF(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizF.getStringF(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizF.setIntF(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizF.getIntF(),0,0
org.apache.openjpa.jdbc.kernel.A.A(),0,0
org.apache.openjpa.jdbc.kernel.A.getId(),0,0
org.apache.openjpa.jdbc.kernel.A.setId(int),1,1
org.apache.openjpa.jdbc.kernel.A.getName(),2,3
org.apache.openjpa.jdbc.kernel.A.setName(String),3,6
org.apache.openjpa.jdbc.kernel.A.getAge(),1,2
org.apache.openjpa.jdbc.kernel.A.setAge(int),2,5
org.apache.openjpa.jdbc.kernel.A.getMap(),2,5
"org.apache.openjpa.jdbc.kernel.A.setMap(Map<String,String>)",3,8
org.apache.openjpa.persistence.inheritance.entity.BaseClass3.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entity.BaseClass3.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.BaseClass3.setVersion(int),2,5
org.apache.openjpa.persistence.inheritance.entity.BaseClass3.getVersion(),1,2
org.apache.openjpa.persistence.inheritance.entity.BaseClass3.setName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.BaseClass3.getName(),2,3
org.apache.openjpa.persistence.inheritance.entity.BaseClass3.toString(),3,6
org.apache.openjpa.persistence.identity.TestSQLBigIntegerId.setUp(),5,6
org.apache.openjpa.persistence.identity.TestSQLBigIntegerId.testPersist(),21,48
org.apache.openjpa.persistence.identity.TestSQLBigIntegerId.main(String[]),8,9
"org.apache.openjpa.util.ShortId.ShortId(Class,Short)",3,6
"org.apache.openjpa.util.ShortId.ShortId(Class,String)",4,7
"org.apache.openjpa.util.ShortId.ShortId(Class,short)",2,5
"org.apache.openjpa.util.ShortId.ShortId(Class,short,boolean)",3,7
org.apache.openjpa.util.ShortId.getId(),1,1
org.apache.openjpa.util.ShortId.getIdObject(),3,4
org.apache.openjpa.util.ShortId.toString(),2,4
org.apache.openjpa.util.ShortId.idHash(),2,2
org.apache.openjpa.util.ShortId.idEquals(OpenJPAId),3,4
org.apache.openjpa.persistence.inheritance.TestSharedMappedSuperclassIdValue.setUp(),19,59
org.apache.openjpa.persistence.inheritance.TestSharedMappedSuperclassIdValue.testFind(),12,35
org.apache.openjpa.persistence.inheritance.TestSharedMappedSuperclassIdValue.testGetReference(),13,38
org.apache.openjpa.persistence.inheritance.TestSharedMappedSuperclassIdValue.main(String[]),10,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue2.setBasic(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue2.getBasic(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue2.setIntBasic(int),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue2.getIntBasic(),1,2
org.apache.openjpa.persistence.compat.Invoice.Invoice(),1,1
"org.apache.openjpa.persistence.compat.Invoice.Invoice(int,String,double)",5,11
org.apache.openjpa.persistence.compat.Invoice.getId(),0,0
org.apache.openjpa.persistence.compat.Invoice.setId(int),1,1
org.apache.openjpa.persistence.compat.Invoice.getBrandName(),3,5
org.apache.openjpa.persistence.compat.Invoice.setBrandName(String),4,10
org.apache.openjpa.persistence.compat.Invoice.getPrice(),1,2
org.apache.openjpa.persistence.compat.Invoice.setPrice(double),2,5
org.apache.openjpa.persistence.compat.Invoice.getLineItems(),4,7
org.apache.openjpa.persistence.compat.Invoice.setLineItems(List<LineItem>),5,12
org.apache.openjpa.kernel.exps.Max.Max(Val),6,8
org.apache.openjpa.kernel.exps.Max.getType(Class),1,1
"org.apache.openjpa.kernel.exps.Max.operate(Collection,Class)",9,22
org.apache.openjpa.persistence.Issue428Entity.Issue428Entity(),2,2
org.apache.openjpa.persistence.Issue428Entity.Issue428Entity(double),3,3
org.apache.openjpa.persistence.Issue428Entity.getDoubleField(),1,2
org.apache.openjpa.persistence.Issue428Entity.setDoubleField(double),2,5
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.setUp(),15,21
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.getUnenhancedClass(),2,3
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.newUnenhancedInstance(),3,4
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.getUnenhancedSubclass(),3,4
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.newUnenhancedSubclassInstance(),4,5
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.newInstance(boolean),5,10
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testMetaData(),14,20
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testImplHelperCalls(),13,26
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testBasicPersistenceCapableBehavior(),20,25
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testPCRegistry(),9,14
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testClearingOnSubtypeInstance(),12,17
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testGetObjectIdOnOpenJPAType(),5,6
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testGetObjectIdOnOpenJPATypeSubclass(),6,7
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testGetObjectIdOnUserDefined(),5,6
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testGetObjectIdOnUserDefinedSubclass(),6,7
"org.apache.openjpa.enhance.AbstractUnenhancedClassTest.getObjectIdHelper(boolean,boolean)",18,30
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testOperationsOnUserDefined(),6,6
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testSubclassOperationsOnUserDefined(),7,7
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testOperationsOnOpenJPADefined(),6,6
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testSubclassOperationsOnOpenJPADefined(),7,7
"org.apache.openjpa.enhance.AbstractUnenhancedClassTest.opsHelper(boolean,boolean)",35,111
"org.apache.openjpa.enhance.AbstractUnenhancedClassTest.assertPersistenceContext(OpenJPAEntityManager,UnenhancedType,boolean,boolean,boolean)",18,34
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testRelations(),23,56
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testEnhancer(),26,36
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testPCSubclassName(),12,16
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testEvictionInUserCreatedInstance(),10,12
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testEvictionInOpenJPACreatedInstance(),10,12
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.evictionHelper(boolean),54,139
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.isFieldAccessTest(),3,3
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testLazyLoading(),46,122
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testSerializationOfUserDefinedInstance(),8,10
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testSerializationOfUserDefinedSubclassInstance(),9,11
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testSerializationOfOpenJPADefinedInstance(),8,10
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testSerializationOfOpenJPADefinedSubclassInstance(),9,11
"org.apache.openjpa.enhance.AbstractUnenhancedClassTest.serializationHelper(boolean,boolean)",38,92
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testCloningOfUserDefinedInstance(),10,13
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testCloningOfUserDefinedSubclassInstance(),11,14
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testCloningOfOpenJPADefinedInstance(),10,13
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testCloningOfOpenJPADefinedSubclassInstance(),11,14
"org.apache.openjpa.enhance.AbstractUnenhancedClassTest.cloneHelper(boolean,boolean)",28,62
"org.apache.openjpa.enhance.AbstractUnenhancedClassTest.copiedInstanceHelper(boolean,OpenJPAEntityManager,UnenhancedType,UnenhancedType,boolean)",39,99
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testListenersOnUserDefinedInstance(),11,13
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testListenersOnUserDefinedSubclassInstance(),12,14
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testListenersOnOpenJPADefinedInstance(),11,13
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testListenersOnOpenJPADefinedSubclassInstance(),12,14
"org.apache.openjpa.enhance.AbstractUnenhancedClassTest.listenerHelper(boolean,boolean)",31,63
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.testGetMetaDataOfSubtype(),19,63
org.apache.openjpa.enhance.AbstractUnenhancedClassTest.ListenerImpl.afterStore(LifecycleEvent),9,13
org.apache.openjpa.persistence.jdbc.common.apps.PerClassTestObject3.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.PerClassTestObject3.getData(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.PerClassTestObject3.setData(int),2,5
org.apache.openjpa.persistence.common.apps.Shirt.getSzeId(),2,3
org.apache.openjpa.persistence.common.apps.Shirt.setSzeId(String),3,6
org.apache.openjpa.persistence.common.apps.Shirt.getParts(),1,1
org.apache.openjpa.persistence.common.apps.Shirt.setParts(Collection<Part>),2,2
org.apache.openjpa.persistence.compat.EntityC_B1MJT.getId(),1,1
org.apache.openjpa.persistence.compat.EntityC_B1MJT.getName(),2,3
org.apache.openjpa.persistence.compat.EntityC_B1MJT.setName(String),3,6
org.apache.openjpa.persistence.compat.EntityC_B1MJT.setBi1mjt(Bi_1ToM_JT),2,5
org.apache.openjpa.persistence.compat.EntityC_B1MJT.getBi1mjt(),1,2
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue3.setBasic(String),3,6
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue3.getBasic(),2,3
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue3.setIntBasic(int),2,5
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue3.getIntBasic(),1,2
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue3.getPoint(),0,0
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue3.setPoint(Point),1,1
org.apache.openjpa.lib.conf.ConfigurationProvider.getProperties(),7,9
org.apache.openjpa.lib.conf.ConfigurationProvider.addProperties(Map<>),8,11
"org.apache.openjpa.lib.conf.ConfigurationProvider.addProperty(String,Object)",9,14
org.apache.openjpa.lib.conf.ConfigurationProvider.setInto(Configuration),5,7
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.IdentifierUtilImpl(),3,3
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.IdentifierUtilImpl(IdentifierConfiguration),5,8
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.setIdentifierConfiguration(IdentifierConfiguration),4,8
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.getIdentifierConfiguration(),3,5
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(String,String,String)",6,16
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(String,String[])",5,13
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(IdentifierConfiguration,String,String[])",8,17
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(IdentifierRule,IdentifierRule[],String[])",7,17
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(IdentifierConfiguration,IdentifierRule,IdentifierRule[],String[])",16,47
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(IdentifierConfiguration,IdentifierRule,String,String)",13,46
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(IdentifierConfiguration,IdentifierRule,String[])",16,49
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.appendNames(IdentifierRule,String,String)",12,43
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.joinNames(IdentifierRule[],String[])",19,43
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.joinNames(String,String[])",8,17
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.joinNames(IdentifierRule,String[])",7,16
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.joinNames(IdentifierRule,String[],String)",7,16
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.joinNames(String,String[],String)",7,17
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.joinNames(IdentifierConfiguration,IdentifierRule,String[],String)",19,53
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.splitName(IdentifierConfiguration,IdentifierRule,String)",9,18
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.splitName(IdentifierRule,String)",8,15
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.splitName(IdentifierRule,String,String)",35,99
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.splitNameCharDelimiters(String,String)",19,46
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.isDoubleQuoted(String),7,14
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.delimit(IdentifierConfiguration,IdentifierRule,String)",7,14
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.delimit(IdentifierRule,String)",6,11
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.delimit(IdentifierRule,String,boolean)",7,13
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.delimit(IdentifierConfiguration,IdentifierRule,String,boolean)",16,36
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.isDelimited(IdentifierRule,String)",6,10
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.isDelimited(IdentifierConfiguration,IdentifierRule,String)",12,21
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.removeDelimiters(IdentifierConfiguration,String,String)",12,23
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.removeDelimiters(IdentifierRule,String)",10,19
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.removeDelimiters(IdentifierConfiguration,IdentifierRule,String)",11,22
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.requiresDelimiters(IdentifierRule,String)",7,12
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.requiresDelimiters(IdentifierConfiguration,IdentifierRule,String)",17,28
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.isReservedWord(IdentifierRule,String)",16,32
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.isReservedWord(String,String)",7,13
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.removeDelimiters(IdentifierConfiguration,IdentifierRule,String,String,String)",13,30
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(String,String[],String[])",6,18
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.truncateName(String,String,int)",6,15
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.truncateName(IdentifierRule,String,int)",12,42
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.delimit(String,String)",5,11
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.delimit(String,String,boolean)",6,13
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.isDelimited(String,String)",5,10
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.removeDelimiters(String,String)",6,13
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.requiresDelimiters(String,String)",6,12
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.splitName(IdentifierConfiguration,String,String)",8,17
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.splitName(String,String)",6,14
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.joinNames(String[],String[])",5,13
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.getNamingRule(String),5,10
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.appendNames(String,String,String)",6,16
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.removeHungarianNotation(IdentifierRule,String)",17,39
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.removeHungarianNotation(String,String)",7,15
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.splitName(String,String,String)",7,18
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.convert(IdentifierConfiguration,String,String)",21,61
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.convertFull(IdentifierConfiguration,String,String)",15,49
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineFull(IdentifierConfiguration,String,String)",14,40
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.needsConversion(IdentifierConfiguration),6,15
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.getNamingRules(String[]),8,21
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.endConfiguration(),1,1
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.setConfiguration(Configuration),3,4
org.apache.openjpa.lib.identifier.IdentifierUtilImpl.startConfiguration(),2,2
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.canSplit(String,String)",8,13
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.canSplit(IdentifierRule,String)",7,12
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.canSplit(String,String,String)",6,12
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.canSplit(IdentifierRule,String,String)",8,14
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(IdentifierRule,String[])",6,13
"org.apache.openjpa.lib.identifier.IdentifierUtilImpl.combineNames(IdentifierRule,String,String)",7,16
org.apache.openjpa.meta.AbstractMetaDataDefaults.getUsePCRegistry(),8,10
org.apache.openjpa.meta.AbstractMetaDataDefaults.setUsePCRegistry(boolean),9,13
org.apache.openjpa.meta.AbstractMetaDataDefaults.getDefaultAccessType(),6,11
org.apache.openjpa.meta.AbstractMetaDataDefaults.setDefaultAccessType(int),7,14
org.apache.openjpa.meta.AbstractMetaDataDefaults.getDefaultIdentityType(),8,11
org.apache.openjpa.meta.AbstractMetaDataDefaults.setDefaultIdentityType(int),9,14
org.apache.openjpa.meta.AbstractMetaDataDefaults.getCallbackMode(),2,3
org.apache.openjpa.meta.AbstractMetaDataDefaults.setCallbackMode(int),3,6
"org.apache.openjpa.meta.AbstractMetaDataDefaults.setCallbackMode(int,boolean)",3,8
org.apache.openjpa.meta.AbstractMetaDataDefaults.getCallbacksBeforeListeners(int),3,3
org.apache.openjpa.meta.AbstractMetaDataDefaults.isDeclaredInterfacePersistent(),2,2
org.apache.openjpa.meta.AbstractMetaDataDefaults.setDeclaredInterfacePersistent(boolean),4,5
org.apache.openjpa.meta.AbstractMetaDataDefaults.isDataStoreObjectIdFieldUnwrapped(),5,6
org.apache.openjpa.meta.AbstractMetaDataDefaults.setDataStoreObjectIdFieldUnwrapped(boolean),6,9
org.apache.openjpa.meta.AbstractMetaDataDefaults.getIgnoreNonPersistent(),2,3
org.apache.openjpa.meta.AbstractMetaDataDefaults.setIgnoreNonPersistent(boolean),3,6
"org.apache.openjpa.meta.AbstractMetaDataDefaults.populate(ClassMetaData,int)",4,8
"org.apache.openjpa.meta.AbstractMetaDataDefaults.populate(ClassMetaData,int,boolean)",18,45
org.apache.openjpa.meta.AbstractMetaDataDefaults.populateFromPCRegistry(ClassMetaData),29,72
"org.apache.openjpa.meta.AbstractMetaDataDefaults.getPersistentMembers(ClassMetaData,boolean)",5,6
"org.apache.openjpa.meta.AbstractMetaDataDefaults.populateFromReflection(ClassMetaData,boolean)",46,96
org.apache.openjpa.meta.AbstractMetaDataDefaults.populate(FieldMetaData),5,5
org.apache.openjpa.meta.AbstractMetaDataDefaults.getFieldAccessNames(ClassMetaData),20,40
org.apache.openjpa.meta.AbstractMetaDataDefaults.getPropertyAccessNames(ClassMetaData),20,40
org.apache.openjpa.meta.AbstractMetaDataDefaults.getFieldName(Member),20,56
org.apache.openjpa.meta.AbstractMetaDataDefaults.isReservedFieldName(String),12,19
"org.apache.openjpa.meta.AbstractMetaDataDefaults.isDefaultPersistent(ClassMetaData,Member,String,boolean)",13,20
org.apache.openjpa.meta.AbstractMetaDataDefaults.getBackingMember(FieldMetaData),22,38
org.apache.openjpa.meta.AbstractMetaDataDefaults.getUnimplementedExceptionType(),5,6
org.apache.openjpa.meta.AbstractMetaDataDefaults.isUserDefined(Class<>),11,18
org.apache.openjpa.meta.AbstractMetaDataDefaults.isNormalGetter(Method),16,27
org.apache.openjpa.meta.AbstractMetaDataDefaults.isBooleanGetter(Method),15,28
"org.apache.openjpa.meta.AbstractMetaDataDefaults.isGetter(Method,boolean)",15,40
"org.apache.openjpa.meta.AbstractMetaDataDefaults.startsWith(String,String)",5,14
org.apache.openjpa.meta.AbstractMetaDataDefaults.isBoolean(Class<>),1,3
org.apache.openjpa.meta.AbstractMetaDataDefaults.toNames(List<>),7,14
org.apache.openjpa.persistence.generationtype.DogTable4.DogTable4(),2,2
org.apache.openjpa.persistence.generationtype.DogTable4.DogTable4(String),4,6
org.apache.openjpa.persistence.generationtype.DogTable4.getId2(),0,0
org.apache.openjpa.persistence.generationtype.DogTable4.setId2(int),1,1
org.apache.openjpa.persistence.generationtype.DogTable4.getName(),2,3
org.apache.openjpa.persistence.generationtype.DogTable4.setName(String),3,6
org.apache.openjpa.persistence.generationtype.DogTable4.getPrice(),1,2
org.apache.openjpa.persistence.generationtype.DogTable4.setPrice(float),2,5
org.apache.openjpa.persistence.generationtype.DogTable4.isDomestic(),1,2
org.apache.openjpa.persistence.generationtype.DogTable4.setDomestic(boolean),2,5
org.apache.openjpa.persistence.access.MixedNestedEmbedEntity.setId(int),2,2
org.apache.openjpa.persistence.access.MixedNestedEmbedEntity.getId(),1,1
org.apache.openjpa.persistence.access.MixedNestedEmbedEntity.setName(String),3,6
org.apache.openjpa.persistence.access.MixedNestedEmbedEntity.getName(),2,3
org.apache.openjpa.persistence.access.MixedNestedEmbedEntity.getEmbedProp(),4,6
org.apache.openjpa.persistence.access.MixedNestedEmbedEntity.setEmbedProp(EmbedInnerProp),5,7
org.apache.openjpa.persistence.access.MixedNestedEmbedEntity.equals(Object),9,25
org.apache.openjpa.persistence.access.xml.XMLMixedFieldSub.getCreateDate(),3,5
org.apache.openjpa.persistence.access.xml.XMLMixedFieldSub.setCreateDate(Date),4,8
org.apache.openjpa.persistence.access.xml.XMLMixedFieldSub.equals(Object),11,35
org.apache.openjpa.persistence.access.xml.XMLMixedFieldSub.setMyFieldProp(String),4,7
org.apache.openjpa.persistence.access.xml.XMLMixedFieldSub.getMyFieldProp(),3,4
org.apache.openjpa.meta.DelegatingMetaDataFactory.DelegatingMetaDataFactory(MetaDataFactory),7,13
org.apache.openjpa.meta.DelegatingMetaDataFactory.getDelegate(),4,7
org.apache.openjpa.meta.DelegatingMetaDataFactory.getInnermostDelegate(),6,20
org.apache.openjpa.meta.DelegatingMetaDataFactory.setRepository(MetaDataRepository),6,10
org.apache.openjpa.meta.DelegatingMetaDataFactory.setStoreDirectory(File),6,10
org.apache.openjpa.meta.DelegatingMetaDataFactory.setStoreMode(int),4,9
org.apache.openjpa.meta.DelegatingMetaDataFactory.setStrict(boolean),3,6
"org.apache.openjpa.meta.DelegatingMetaDataFactory.load(Class,int,ClassLoader)",6,12
"org.apache.openjpa.meta.DelegatingMetaDataFactory.store(ClassMetaData[],QueryMetaData[],SequenceMetaData[],int,Map)",12,22
"org.apache.openjpa.meta.DelegatingMetaDataFactory.drop(Class[],int,ClassLoader)",6,12
org.apache.openjpa.meta.DelegatingMetaDataFactory.getDefaults(),4,6
org.apache.openjpa.meta.DelegatingMetaDataFactory.newClassArgParser(),3,7
"org.apache.openjpa.meta.DelegatingMetaDataFactory.getPersistentTypeNames(boolean,ClassLoader)",8,15
"org.apache.openjpa.meta.DelegatingMetaDataFactory.getQueryScope(String,ClassLoader)",6,13
"org.apache.openjpa.meta.DelegatingMetaDataFactory.getResultSetMappingScope(String,ClassLoader)",8,21
org.apache.openjpa.meta.DelegatingMetaDataFactory.clear(),1,1
org.apache.openjpa.meta.DelegatingMetaDataFactory.addClassExtensionKeys(Collection),6,10
org.apache.openjpa.meta.DelegatingMetaDataFactory.addFieldExtensionKeys(Collection),7,12
org.apache.openjpa.meta.DelegatingMetaDataFactory.loadXMLMetaData(Class<>),6,11
org.apache.openjpa.meta.DelegatingMetaDataFactory.getMetaModelClassName(String),6,13
org.apache.openjpa.meta.DelegatingMetaDataFactory.getManagedClassName(String),5,11
org.apache.openjpa.meta.DelegatingMetaDataFactory.isMetaClass(Class<>),2,3
org.apache.openjpa.meta.DelegatingMetaDataFactory.getManagedClass(Class<>),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.TestFinderCache.createTestData(),19,39
org.apache.openjpa.persistence.jdbc.sqlcache.TestFinderCache.setUp(),20,24
org.apache.openjpa.persistence.jdbc.sqlcache.TestFinderCache.testFinder(),19,50
org.apache.openjpa.persistence.jdbc.sqlcache.TestFinderCache.testSQLEventListener(),14,22
"org.apache.openjpa.persistence.jdbc.sqlcache.TestFinderCache.run(int,Class<T>,long[])",26,42
org.apache.openjpa.persistence.jdbc.sqlcache.TestFinderCache.getCache(OpenJPAEntityManagerFactorySPI),11,16
org.apache.openjpa.persistence.annotations.TestMapKey.TestMapKey(String),6,7
org.apache.openjpa.persistence.annotations.TestMapKey.setUp(),10,19
org.apache.openjpa.persistence.annotations.TestMapKey.testInsertAndRetrieve(),21,117
org.apache.openjpa.persistence.jdbc.common.apps.OpOrder.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.OpOrder.getRel(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.OpOrder.getOwner(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.OpOrder.getSecondary(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.OpOrder.getSub(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.OpOrder.getRelList(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.OpOrder.getMappedRelList(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.OpOrder.getInverseKeyRelList(),4,5
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.Subclass.getAttr2(),2,3
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.Subclass.setAttr2(String),3,6
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.setUp(),29,43
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.insert(LobEntity),11,15
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.testInsert(),6,8
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.testInsertAndSelect(),21,44
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.testInsertNull(),12,23
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.testUpdate(),19,57
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.testUpdateWithNull(),15,45
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.testUpdateANullObjectWithoutNull(),20,55
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.testDelete(),20,46
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.testLifeCycleInsertFlushModify(),19,31
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.testLifeCycleLoadFlushModifyFlush(),19,39
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.testReadingMultipleTimesWithASingleConnection(),24,68
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.testDataCache(),27,65
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.testSetResetAndFlush(),21,56
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.testSetFlushAndReset(),21,47
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.createLobData(),7,9
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.createLobData2(),7,9
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.getLobEntityClass(),2,2
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.getStreamContentAsString(Object),5,6
"org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.newLobEntity(String,int)",3,5
"org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.newLobEntityForLoadContent(String,int)",5,7
org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.getSelectQuery(),3,3
"org.apache.openjpa.jdbc.meta.strats.AbstractLobTest.changeStream(LobEntity,String)",5,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCLeafA.getLeafAData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCLeafA.setLeafAData(String),4,10
org.apache.openjpa.persistence.jdbc.kernel.TestUnknownSubclass.TestUnknownSubclass(),5,8
org.apache.openjpa.persistence.jdbc.kernel.TestUnknownSubclass.TestUnknownSubclass(String),5,6
org.apache.openjpa.persistence.jdbc.kernel.TestUnknownSubclass.setUp(),46,113
org.apache.openjpa.persistence.jdbc.kernel.TestUnknownSubclass.testUnknownSubclass(),25,72
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafB2.getLeafB2Data(),3,3
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafB2.setLeafB2Data(String),4,6
org.apache.openjpa.persistence.inheritance.entity.SubclassB.setClassBName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.SubclassB.getClassBName(),2,3
org.apache.openjpa.persistence.inheritance.entity.SubclassB.toString(),2,5
org.apache.openjpa.persistence.OpenJPAQuery<X>.getEntityManager(),4,8
org.apache.openjpa.persistence.OpenJPAQuery<X>.getLanguage(),3,4
org.apache.openjpa.persistence.OpenJPAQuery<X>.getOperation(),3,7
org.apache.openjpa.persistence.OpenJPAQuery<X>.getFetchPlan(),5,9
org.apache.openjpa.persistence.OpenJPAQuery<X>.getQueryString(),2,5
org.apache.openjpa.persistence.OpenJPAQuery<X>.getIgnoreChanges(),4,6
org.apache.openjpa.persistence.OpenJPAQuery<X>.setIgnoreChanges(boolean),7,10
org.apache.openjpa.persistence.OpenJPAQuery<X>.getCandidateCollection(),6,11
org.apache.openjpa.persistence.OpenJPAQuery<X>.setCandidateCollection(Collection),7,10
org.apache.openjpa.persistence.OpenJPAQuery<X>.getResultClass(),4,5
org.apache.openjpa.persistence.OpenJPAQuery<X>.setResultClass(Class),6,9
org.apache.openjpa.persistence.OpenJPAQuery<X>.hasSubclasses(),4,5
org.apache.openjpa.persistence.OpenJPAQuery<X>.setSubclasses(boolean),7,9
org.apache.openjpa.persistence.OpenJPAQuery<X>.getFirstResult(),6,6
org.apache.openjpa.persistence.OpenJPAQuery<X>.getMaxResults(),8,10
org.apache.openjpa.persistence.OpenJPAQuery<X>.compile(),3,5
org.apache.openjpa.persistence.OpenJPAQuery<X>.hasPositionalParameters(),3,5
org.apache.openjpa.persistence.OpenJPAQuery<X>.getPositionalParameters(),8,12
org.apache.openjpa.persistence.OpenJPAQuery<X>.getNamedParameters(),9,14
org.apache.openjpa.persistence.OpenJPAQuery<X>.setParameters(Map),6,8
org.apache.openjpa.persistence.OpenJPAQuery<X>.setParameters(Object),6,8
org.apache.openjpa.persistence.OpenJPAQuery<X>.closeAll(),4,6
org.apache.openjpa.persistence.OpenJPAQuery<X>.getDataStoreActions(Map),21,25
org.apache.openjpa.persistence.OpenJPAQuery<X>.setMaxResults(int),6,7
org.apache.openjpa.persistence.OpenJPAQuery<X>.setFirstResult(int),6,6
"org.apache.openjpa.persistence.OpenJPAQuery<X>.setHint(String,Object)",8,9
"org.apache.openjpa.persistence.OpenJPAQuery<X>.setParameter(String,Object)",8,8
"org.apache.openjpa.persistence.OpenJPAQuery<X>.setParameter(String,Date,TemporalType)",10,12
"org.apache.openjpa.persistence.OpenJPAQuery<X>.setParameter(String,Calendar,TemporalType)",10,12
"org.apache.openjpa.persistence.OpenJPAQuery<X>.setParameter(int,Object)",7,7
"org.apache.openjpa.persistence.OpenJPAQuery<X>.setParameter(int,Date,TemporalType)",9,11
"org.apache.openjpa.persistence.OpenJPAQuery<X>.setParameter(int,Calendar,TemporalType)",9,11
org.apache.openjpa.persistence.OpenJPAQuery<X>.setRelaxBindParameterTypeChecking(Object),30,46
org.apache.openjpa.persistence.OpenJPAQuery<X>.getRelaxBindParameterTypeChecking(),17,30
org.apache.openjpa.persistence.OpenJPAQuery<X>.setFlushMode(FlushModeType),6,10
org.apache.openjpa.persistence.OpenJPAQuery<X>.getFlushMode(),3,5
org.apache.openjpa.persistence.OpenJPAQuery<X>.addFilterListener(org.apache.openjpa.kernel.exps.FilterListener),21,26
org.apache.openjpa.persistence.OpenJPAQuery<X>.removeFilterListener(org.apache.openjpa.kernel.exps.FilterListener),21,26
org.apache.openjpa.persistence.OpenJPAQuery<X>.addAggregateListener(org.apache.openjpa.kernel.exps.AggregateListener),21,26
org.apache.openjpa.persistence.OpenJPAQuery<X>.removeAggregateListener(org.apache.openjpa.kernel.exps.AggregateListener),21,26
org.apache.openjpa.persistence.OpenJPAQuery<X>.getSupportedHints(),5,7
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAutoIdentity.getId(),0,0
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAutoIdentity.setId(long),9,10
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAutoIdentity.getName(),2,3
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAutoIdentity.setName(String),3,6
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAutoIdentity.getChildren(),3,4
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAutoIdentity.addChild(Child),5,12
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAutoIdentity.removeChild(Child),3,8
org.apache.openjpa.persistence.jdbc.mapping.bidi.ParentWithAutoIdentity.postPersist(),7,10
org.apache.openjpa.persistence.inheritance.mappedsuperclass.TestMappedSuperClass.setUp(),10,13
org.apache.openjpa.persistence.inheritance.mappedsuperclass.TestMappedSuperClass.testMappedSuperClass(),33,66
org.apache.openjpa.persistence.inheritance.mappedsuperclass.TestMappedSuperClass.testMergeNewInstanceDerivedFromMappedSuperClassWithoutIdentityField(),30,82
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrcFieldBean.DtaSrcFieldBean(DtaSrcField),4,10
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrcFieldBean.getId(),2,2
org.apache.openjpa.persistence.common.apps.ComplexEmbeddedPC.getStringField(),2,5
org.apache.openjpa.persistence.common.apps.ComplexEmbeddedPC.setStringField(String),3,10
org.apache.openjpa.persistence.common.apps.ComplexEmbeddedPC.getOwnerField(),3,6
org.apache.openjpa.persistence.common.apps.ComplexEmbeddedPC.setOwnerField(EmbeddedOwnerPC),4,11
org.apache.openjpa.persistence.common.apps.ComplexEmbeddedPC.getStringSet(),2,5
org.apache.openjpa.persistence.common.apps.ComplexEmbeddedPC.setStringSet(Set),2,10
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.FlightSchedule.FlightSchedule(),2,2
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.FlightSchedule.FlightSchedule(String,Calendar,Date,Date,String)",10,17
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.FlightSchedule.getFlightName(),4,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.FlightSchedule.setFlightName(String),5,10
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.FlightSchedule.getFlightNum(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.jdoPreDetach(),4,6
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.jdoPostDetach(Object),7,11
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.jdoPreAttach(),4,6
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.jdoPostAttach(Object),7,11
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.setAstr(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.getAstr(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.setAint(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.getAint(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.setAdbl(double),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.getAdbl(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.setStringArray(String[]),3,10
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.getStringArray(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.setAttachEArray(AttachE[]),3,10
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.getAttachEArray(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.writeObject(ObjectOutputStream),5,8
org.apache.openjpa.persistence.jdbc.common.apps.AttachA.readObject(ObjectInputStream),6,10
org.apache.openjpa.persistence.jdbc.annotations.MultiColumnSecondaryVersionPC.getId(),0,0
org.apache.openjpa.persistence.jdbc.annotations.MultiColumnSecondaryVersionPC.getName(),2,3
org.apache.openjpa.persistence.jdbc.annotations.MultiColumnSecondaryVersionPC.setName(String),3,6
org.apache.openjpa.persistence.jdbc.annotations.MultiColumnSecondaryVersionPC.getS1(),1,1
org.apache.openjpa.persistence.jdbc.annotations.MultiColumnSecondaryVersionPC.setS1(String),2,2
org.apache.openjpa.persistence.jdbc.annotations.MultiColumnSecondaryVersionPC.getS2(),1,1
org.apache.openjpa.persistence.jdbc.annotations.MultiColumnSecondaryVersionPC.setS2(String),2,2
org.apache.openjpa.persistence.callbacks.EntityListenerPostLoadTest.setUp(),2,3
org.apache.openjpa.persistence.callbacks.EntityListenerPostLoadTest.getPersistenceUnitName(),5,5
org.apache.openjpa.persistence.callbacks.EntityListenerPostLoadTest.testPostLoadValues(),40,190
org.apache.openjpa.jira1794.AggEntity.setId(int),1,1
org.apache.openjpa.jira1794.AggEntity.getId(),0,0
org.apache.openjpa.jira1794.AggEntity.setPshortVal(short),3,9
org.apache.openjpa.jira1794.AggEntity.getPshortVal(),2,4
org.apache.openjpa.jira1794.AggEntity.setShortVal(Short),2,5
org.apache.openjpa.jira1794.AggEntity.getShortVal(),1,2
org.apache.openjpa.jira1794.AggEntity.setPintVal(int),3,9
org.apache.openjpa.jira1794.AggEntity.getPintVal(),2,4
org.apache.openjpa.jira1794.AggEntity.setIntVal(Integer),3,6
org.apache.openjpa.jira1794.AggEntity.getIntVal(),2,3
org.apache.openjpa.jira1794.AggEntity.setPlongVal(long),3,9
org.apache.openjpa.jira1794.AggEntity.getPlongVal(),2,4
org.apache.openjpa.jira1794.AggEntity.setLongVal(Long),2,5
org.apache.openjpa.jira1794.AggEntity.getLongVal(),1,2
org.apache.openjpa.jira1794.AggEntity.setPfloatVal(float),3,9
org.apache.openjpa.jira1794.AggEntity.getPfloatVal(),2,4
org.apache.openjpa.jira1794.AggEntity.setFloatVal(Float),2,5
org.apache.openjpa.jira1794.AggEntity.getFloatVal(),1,2
org.apache.openjpa.jira1794.AggEntity.setPdblVal(double),3,9
org.apache.openjpa.jira1794.AggEntity.getPdblVal(),2,4
org.apache.openjpa.jira1794.AggEntity.setDblVal(Double),3,9
org.apache.openjpa.jira1794.AggEntity.getDblVal(),2,4
org.apache.openjpa.jira1794.AggEntity.setStringVal(String),3,10
org.apache.openjpa.jira1794.AggEntity.getStringVal(),2,5
org.apache.openjpa.jira1794.AggEntity.init(),11,31
org.apache.openjpa.persistence.jdbc.kernel.JDBCTestCase.JDBCTestCase(),4,6
org.apache.openjpa.persistence.jdbc.kernel.JDBCTestCase.JDBCTestCase(String),4,5
org.apache.openjpa.persistence.jdbc.kernel.JDBCTestCase.getDefaultInheritanceStrategy(),5,6
org.apache.openjpa.persistence.jdbc.kernel.JDBCTestCase.getClassMapping(Class),9,16
"org.apache.openjpa.persistence.jdbc.kernel.JDBCTestCase.getFieldMapping(Class,String)",3,10
org.apache.openjpa.persistence.jdbc.kernel.JDBCTestCase.isInheritanceStrategyVertical(),4,8
org.apache.openjpa.persistence.jdbc.query.TestGroupByQuery.setUp(),11,14
org.apache.openjpa.persistence.jdbc.query.TestGroupByQuery.createData(),20,31
org.apache.openjpa.persistence.jdbc.query.TestGroupByQuery.testGroupBy(),17,28
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC5.ConstantJoinPC5(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC5.ConstantJoinPC5(int),2,2
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC5.ConstantJoinPC5(String),4,6
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC5.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC5.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC5.setId(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC5.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Embed_Single_Coll.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Embed_Single_Coll.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Embed_Single_Coll.getEmbed(),3,5
org.apache.openjpa.persistence.embed.EntityA_Embed_Single_Coll.setEmbed(Embed_Single_Coll),4,8
org.apache.openjpa.persistence.cascade.TestMultiCascadePersist.setUp(),7,9
org.apache.openjpa.persistence.cascade.TestMultiCascadePersist.testSingleTransaction(),43,108
"org.apache.openjpa.persistence.cascade.TestMultiCascadePersist.findVertexTypeByName(EntityManager,String)",16,32
org.apache.openjpa.persistence.cascade.TestMultiCascadePersist.findAllVertexType(EntityManager),14,28
org.apache.openjpa.persistence.cascade.TestMultiCascadePersist.findAllVertex(EntityManager),13,23
org.apache.openjpa.persistence.jdbc.kernel.TestSQLListenerTestCase.TestSQLListenerTestCase(),3,4
org.apache.openjpa.persistence.jdbc.kernel.TestSQLListenerTestCase.TestSQLListenerTestCase(String),5,7
org.apache.openjpa.persistence.jdbc.kernel.TestSQLListenerTestCase.setUp(),4,6
org.apache.openjpa.persistence.jdbc.kernel.TestSQLListenerTestCase.setUpTestCase(),4,5
org.apache.openjpa.persistence.jdbc.kernel.TestSQLListenerTestCase.tearDown(),4,6
org.apache.openjpa.persistence.jdbc.kernel.TestSQLListenerTestCase.tearDownTestCase(),4,5
org.apache.openjpa.persistence.jdbc.kernel.TestSQLListenerTestCase.assertSQL(String),19,36
org.apache.openjpa.persistence.jdbc.kernel.TestSQLListenerTestCase.assertNotSQL(String),18,38
org.apache.openjpa.persistence.jdbc.kernel.TestSQLListenerTestCase.Listener.beforeExecuteStatement(JDBCEvent),6,11
org.apache.openjpa.persistence.embed.attrOverrides.AbstractEmployee.getId(),1,1
org.apache.openjpa.persistence.embed.attrOverrides.AbstractEmployee.setId(Integer),2,2
org.apache.openjpa.persistence.embed.attrOverrides.AbstractEmployee.getAddress(),1,3
org.apache.openjpa.persistence.embed.attrOverrides.AbstractEmployee.setAddress(Address),2,6
org.apache.openjpa.persistence.embed.attrOverrides.AbstractEmployee.getProjects(),3,4
org.apache.openjpa.persistence.embed.attrOverrides.AbstractEmployee.addProject(Project),3,7
org.apache.openjpa.util.ProxyCollection.getElementType(),3,5
"org.apache.openjpa.util.ProxyCollection.newInstance(Class,Comparator,boolean,boolean)",11,14
org.apache.openjpa.persistence.jdbc.common.apps.UnknownSubclassParent.setParentString(String),3,10
org.apache.openjpa.persistence.jdbc.common.apps.UnknownSubclassParent.getParentString(),2,5
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.setUp(),8,10
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.testDefaultFetchPlan001(),33,76
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.testDefaultFetchPlan002(),37,93
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.testDefaultFetchPlan003(),39,97
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.testPctxDefaultFetchPlan001(),42,107
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.testPctxDefaultFetchPlan002(),51,116
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.testClearFetchGroups001(),41,122
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.testResetFetchGroups001(),50,148
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.testFinderCache001(),35,100
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.testFinderCache002(),61,436
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.testFinderCache003(),57,455
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.testFinderCache004(),61,393
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.testFinderCache005(),60,371
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.testFinderCache006(),67,454
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.testFinderCache007(),62,474
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.createEmployeeData(),27,130
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.createAddress(int),7,22
org.apache.openjpa.persistence.fetchgroups.TestFetchGroups.createDepartment(int),5,13
org.apache.openjpa.persistence.enhance.identity.Beneficiary.getId(),1,1
org.apache.openjpa.persistence.enhance.identity.Beneficiary.setId(String),2,2
org.apache.openjpa.persistence.enhance.identity.Beneficiary.getAnnuityHolderId(),3,5
org.apache.openjpa.persistence.enhance.identity.Beneficiary.setAnnuityHolderId(String),4,10
org.apache.openjpa.persistence.enhance.identity.Beneficiary.getFirstName(),2,3
org.apache.openjpa.persistence.enhance.identity.Beneficiary.setFirstName(String),3,4
org.apache.openjpa.persistence.enhance.identity.Beneficiary.getLastName(),2,3
org.apache.openjpa.persistence.enhance.identity.Beneficiary.setLastName(String),3,4
org.apache.openjpa.persistence.enhance.identity.Beneficiary.getRelationship(),2,3
org.apache.openjpa.persistence.enhance.identity.Beneficiary.setRelationship(String),3,6
org.apache.openjpa.persistence.enhance.identity.Beneficiary.getContacts(),4,5
org.apache.openjpa.persistence.enhance.identity.Beneficiary.setContacts(List<BeneContact>),5,8
org.apache.openjpa.persistence.jdbc.common.apps.JoinSubclassBaseSubVert.getBaseSubVertField(),4,8
org.apache.openjpa.persistence.jdbc.common.apps.JoinSubclassBaseSubVert.setBaseSubVertField(int),5,17
org.apache.openjpa.lib.jdbc.JDBCListener.beforePrepareStatement(JDBCEvent),4,9
org.apache.openjpa.lib.jdbc.JDBCListener.afterPrepareStatement(JDBCEvent),4,9
org.apache.openjpa.lib.jdbc.JDBCListener.beforeCreateStatement(JDBCEvent),4,9
org.apache.openjpa.lib.jdbc.JDBCListener.afterCreateStatement(JDBCEvent),4,9
org.apache.openjpa.lib.jdbc.JDBCListener.beforeExecuteStatement(JDBCEvent),4,9
org.apache.openjpa.lib.jdbc.JDBCListener.afterExecuteStatement(JDBCEvent),4,9
org.apache.openjpa.lib.jdbc.JDBCListener.beforeCommit(JDBCEvent),3,7
org.apache.openjpa.lib.jdbc.JDBCListener.afterCommit(JDBCEvent),3,7
org.apache.openjpa.lib.jdbc.JDBCListener.beforeRollback(JDBCEvent),3,7
org.apache.openjpa.lib.jdbc.JDBCListener.afterRollback(JDBCEvent),3,7
org.apache.openjpa.lib.jdbc.JDBCListener.afterConnect(JDBCEvent),3,7
org.apache.openjpa.lib.jdbc.JDBCListener.beforeClose(JDBCEvent),3,7
org.apache.openjpa.persistence.enhance.identity.PhoneNumber.getPhNumber(),0,0
org.apache.openjpa.persistence.enhance.identity.PhoneNumber.setPhNumber(int),1,1
org.apache.openjpa.persistence.enhance.identity.PhoneNumber.getEmp(),2,3
org.apache.openjpa.persistence.enhance.identity.PhoneNumber.setEmp(Employee),3,6
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC3.getPartial3(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC3.setPartial3(PartialJoinPC3),3,7
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC3.getPartial2s(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC3.setPartial2s(Set),2,6
org.apache.openjpa.persistence.fields.EnumFieldType.EnumFieldType(),3,3
"org.apache.openjpa.persistence.fields.EnumFieldType.EnumFieldType(int,SampleEnum)",3,9
org.apache.openjpa.persistence.fields.EnumFieldType.setEnumField(SampleEnum),3,6
org.apache.openjpa.persistence.fields.EnumFieldType.getEnumField(),2,3
org.apache.openjpa.persistence.fields.EnumFieldType.getEnumList(),2,4
org.apache.openjpa.lib.meta.MetaDataIterator.hasNext(),3,3
org.apache.openjpa.lib.meta.MetaDataIterator.next(),4,4
org.apache.openjpa.lib.meta.MetaDataIterator.getInputStream(),7,10
org.apache.openjpa.lib.meta.MetaDataIterator.getFile(),7,10
org.apache.openjpa.lib.meta.MetaDataIterator.close(),3,4
org.apache.openjpa.persistence.jdbc.sqlcache.CD.CD(),0,0
org.apache.openjpa.persistence.jdbc.sqlcache.CD.CD(String),3,5
org.apache.openjpa.persistence.jdbc.sqlcache.CD.getLabel(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.CD.setLabel(String),3,6
org.apache.openjpa.persistence.jdbc.sqlcache.CD.getSinger(),1,3
org.apache.openjpa.persistence.jdbc.sqlcache.CD.setSinger(Singer),3,8
org.apache.openjpa.persistence.jdbc.sqlcache.CD.getStatus(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.CD.setStatus(int),2,5
org.apache.openjpa.persistence.criteria.CompUser.CompUser(),2,2
"org.apache.openjpa.persistence.criteria.CompUser.CompUser(String,String,Address,int)",7,18
org.apache.openjpa.persistence.criteria.CompUser.getComputerName(),3,5
org.apache.openjpa.persistence.criteria.CompUser.setComputerName(String),4,10
org.apache.openjpa.persistence.criteria.CompUser.getName(),2,3
org.apache.openjpa.persistence.criteria.CompUser.setName(String),3,6
org.apache.openjpa.persistence.criteria.CompUser.getUserid(),1,2
org.apache.openjpa.persistence.criteria.CompUser.getAddress(),1,3
org.apache.openjpa.persistence.criteria.CompUser.setAddress(Address),2,6
org.apache.openjpa.persistence.criteria.CompUser.getAge(),1,2
org.apache.openjpa.persistence.criteria.CompUser.setAge(int),2,5
org.apache.openjpa.persistence.criteria.CompUser.getRating(),2,5
org.apache.openjpa.persistence.criteria.CompUser.setRating(CreditRating),3,8
org.apache.openjpa.lib.rop.ListResultList.ListResultList(List),5,10
org.apache.openjpa.lib.rop.ListResultList.getDelegate(),3,5
org.apache.openjpa.lib.rop.ListResultList.isProviderOpen(),1,1
org.apache.openjpa.lib.rop.ListResultList.isClosed(),1,2
org.apache.openjpa.lib.rop.ListResultList.close(),2,2
org.apache.openjpa.lib.rop.ListResultList.contains(Object),3,4
org.apache.openjpa.lib.rop.ListResultList.containsAll(Collection),3,4
org.apache.openjpa.lib.rop.ListResultList.get(int),3,4
org.apache.openjpa.lib.rop.ListResultList.indexOf(Object),3,4
org.apache.openjpa.lib.rop.ListResultList.lastIndexOf(Object),3,4
org.apache.openjpa.lib.rop.ListResultList.size(),2,3
org.apache.openjpa.lib.rop.ListResultList.isEmpty(),2,3
org.apache.openjpa.lib.rop.ListResultList.iterator(),2,4
org.apache.openjpa.lib.rop.ListResultList.listIterator(),3,10
org.apache.openjpa.lib.rop.ListResultList.listIterator(int),4,12
org.apache.openjpa.lib.rop.ListResultList.toArray(),3,4
org.apache.openjpa.lib.rop.ListResultList.toArray(Object[]),3,5
org.apache.openjpa.lib.rop.ListResultList.writeReplace(),4,4
org.apache.openjpa.lib.rop.ListResultList.toString(),2,4
"org.apache.openjpa.lib.rop.ListResultList.subList(int,int)",3,10
org.apache.openjpa.persistence.criteria.JoinDomainTestCase.getDomainClasses(),2,2
org.apache.openjpa.persistence.criteria.JoinDomainTestCase.setUp(),15,34
org.apache.openjpa.persistence.criteria.JoinDomainTestCase.tearDown(),5,12
org.apache.openjpa.persistence.criteria.JoinDomainTestCase.getEntityManagerFactory(),6,9
org.apache.openjpa.persistence.criteria.JoinDomainTestCase.setEntityManagerFactory(OpenJPAEntityManagerFactorySPI),10,15
org.apache.openjpa.persistence.criteria.JoinDomainTestCase.getAuditor(),2,4
org.apache.openjpa.persistence.criteria.JoinDomainTestCase.setAuditor(SQLAuditor),6,10
org.apache.openjpa.persistence.criteria.JoinDomainTestCase.getCriteriaBuilder(),2,4
org.apache.openjpa.persistence.criteria.JoinDomainTestCase.setCriteriaBuilder(CriteriaBuilder),3,5
org.apache.openjpa.persistence.criteria.JoinDomainTestCase.getEntityManager(),2,4
org.apache.openjpa.persistence.criteria.JoinDomainTestCase.setEntityManager(EntityManager),3,5
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.setId(int),1,1
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.getVersion(),1,2
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.setVersion(int),2,5
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.getPrimDbl(),2,4
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.setPrimDbl(double),3,9
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.getDbl(),1,2
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.setDbl(Double),2,5
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.getBigDecimal(),1,3
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.setBigDecimal(BigDecimal),2,6
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.getPrimDblPrecis(),3,6
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.setPrimDblPrecis(double),4,13
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.getDblPrecis(),2,4
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.setDblPrecis(Double),3,9
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.getBigDecimalPrecis(),2,5
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.setBigDecimalPrecis(BigDecimal),3,10
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.getPrimDblScale(),3,6
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.setPrimDblScale(double),4,13
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.getDblScale(),2,4
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.setDblScale(Double),3,9
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.getBigDecimalScale(),2,5
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.setBigDecimalScale(BigDecimal),3,10
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.getPrimDblPrecisScale(),4,8
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.setPrimDblPrecisScale(double),5,17
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.getDblPrecisScale(),3,6
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.setDblPrecisScale(Double),4,13
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.getBigDecimalPrecisScale(),3,7
org.apache.openjpa.persistence.jdbc.mapping.PrecisionTestEntity.setBigDecimalPrecisScale(BigDecimal),4,14
org.apache.openjpa.persistence.jdbc.query.cache.FullTimeEmployee.getSalary(),1,2
org.apache.openjpa.persistence.jdbc.query.cache.FullTimeEmployee.setSalary(double),2,5
org.apache.openjpa.persistence.identity.StringIdEntity.getId(),1,1
org.apache.openjpa.persistence.identity.StringIdEntity.setId(String),2,2
org.apache.openjpa.persistence.identity.StringIdEntity.getData(),1,2
org.apache.openjpa.persistence.identity.StringIdEntity.setData(int),2,5
org.apache.openjpa.persistence.identity.StringIdEntity.toString(),3,6
org.apache.openjpa.persistence.jdbc.maps.qualified.path.TestQualifiedPath.setUp(),12,15
org.apache.openjpa.persistence.jdbc.maps.qualified.path.TestQualifiedPath.testQueries(),22,117
org.apache.openjpa.persistence.jdbc.maps.qualified.path.TestQualifiedPath.createObj(),9,12
org.apache.openjpa.persistence.jdbc.maps.qualified.path.TestQualifiedPath.createDivision(int),13,35
org.apache.openjpa.persistence.jdbc.maps.qualified.path.TestQualifiedPath.createEmployee(int),15,83
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.EntityReservedWords(),3,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getId(),0,0
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setId(int),1,1
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getAdd(),1,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setAdd(int),2,5
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getApplication(),1,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setApplication(int),2,5
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getBegin(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setBegin(BigDecimal),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getBigint(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setBigint(BigInteger),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getCalendar(),1,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setCalendar(int),2,5
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getCharacter(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setCharacter(String),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getConditional(),1,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setConditional(int),2,5
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getDate(),1,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setDate(Date),2,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getDecimal(),1,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setDecimal(BigDecimal),2,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getDistinct(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setDistinct(Time),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getException(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setException(String),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getEach(),0,0
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setEach(int),1,1
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getFrom(),1,1
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setFrom(String),2,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getFile(),1,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setFile(int),2,5
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getGrant(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setGrant(String),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getGlobal(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setGlobal(BigDecimal),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getHour(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setHour(String),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getHoldlock(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setHoldlock(String),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getInteger(),1,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setInteger(BigInteger),2,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getIndex(),1,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setIndex(int),2,5
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getJoin(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setJoin(BigInteger),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getJar(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setJar(String),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getKey(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setKey(Calendar),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getKill(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setKill(Timestamp),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getLike(),1,1
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setLike(Integer),2,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getLoop(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setLoop(BigDecimal),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getMinute(),1,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setMinute(int),2,5
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getMerge(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setMerge(Date),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getNumber(),1,1
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setNumber(String),2,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getNot(),0,0
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setNot(int),1,1
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getOuter(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setOuter(Date),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getOn(),1,1
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setOn(String),2,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getPrimary(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setPrimary(BigInteger),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getPurge(),1,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setPurge(int),2,5
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getQuiesce(),1,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setQuiesce(int),2,5
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getQuit(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setQuit(String),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getRestrict(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setRestrict(BigDecimal),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getRename(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setRename(Time),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getSelect(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setSelect(String),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getSavepoint(),1,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setSavepoint(int),2,5
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getTime(),1,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setTime(Time),2,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getTimestamp(),1,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setTimestamp(Timestamp),2,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getTrigger(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.settrigger(Calendar),3,5
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getUpdate(),1,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setUpdate(int),2,5
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getUntil(),1,1
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setUntil(String),2,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getVarchar(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setVarchar(String),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getVariable(),1,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setVariable(int),2,5
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getWait(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setWait(Timestamp),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getWhere(),1,1
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setwHere(BigDecimal),2,2
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getXml(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setxml(BigInteger),3,5
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getYear(),0,0
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setyear(int),1,1
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getYears(),0,0
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setyears(int),1,1
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getZerofill(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setZerofill(Date),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getZone(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setZone(String),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getType(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setType(Integer),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getAlias(),2,3
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setAlias(String),3,6
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.getBoolean(),0,0
org.apache.openjpa.persistence.dynamicschema.EntityReservedWords.setBoolean(int),1,1
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCLeafB2.getLeafB2Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCLeafB2.setLeafB2Data(String),4,10
org.apache.openjpa.persistence.criteria.TestDistinctCriteria.setUp(),10,15
org.apache.openjpa.persistence.criteria.TestDistinctCriteria.tearDown(),6,8
org.apache.openjpa.persistence.criteria.TestDistinctCriteria.createDataForTestDistinct(),13,43
org.apache.openjpa.persistence.criteria.TestDistinctCriteria.deleteDataForTestDistinct(),13,25
org.apache.openjpa.persistence.criteria.TestDistinctCriteria.testDistinct(),22,73
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Compny1.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Compny1.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Compny1.getOrganization(),3,3
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Compny1.addToOrganization(Division,VicePresident)",6,8
org.apache.openjpa.lib.util.concurrent.AbstractConcurrentEventManager.AbstractConcurrentEventManager(),7,7
org.apache.openjpa.lib.util.concurrent.AbstractConcurrentEventManager.isFailFast(),5,8
org.apache.openjpa.lib.util.concurrent.AbstractConcurrentEventManager.setFailFast(boolean),6,13
org.apache.openjpa.lib.util.concurrent.AbstractConcurrentEventManager.addListener(Object),6,11
org.apache.openjpa.lib.util.concurrent.AbstractConcurrentEventManager.removeListener(Object),5,10
org.apache.openjpa.lib.util.concurrent.AbstractConcurrentEventManager.hasListener(Object),6,9
org.apache.openjpa.lib.util.concurrent.AbstractConcurrentEventManager.hasListeners(),3,5
org.apache.openjpa.lib.util.concurrent.AbstractConcurrentEventManager.getListeners(),6,9
org.apache.openjpa.lib.util.concurrent.AbstractConcurrentEventManager.fireEvent(Object),16,42
"org.apache.openjpa.lib.util.concurrent.AbstractConcurrentEventManager.fireEvent(Object,Object)",7,12
org.apache.openjpa.lib.util.concurrent.AbstractConcurrentEventManager.newListenerCollection(),10,15
org.apache.openjpa.persistence.jdbc.TestTimestampPKDeletion.setUp(),3,4
org.apache.openjpa.persistence.jdbc.TestTimestampPKDeletion.testTimestampPKDeletion(),18,56
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.Division.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.Division.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.Division.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.Division.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.Division.getVp(),2,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.Division.setVp(VicePresident),3,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.Division.equals(Object),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.Division.hashCode(),4,11
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.Company.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.Company.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.Company.getOrganization(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.Company.addToOrganization(VicePresident),5,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.Company.removeFromOrganization(Division),3,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.Company.getOrganization(Division),4,5
org.apache.openjpa.persistence.compat.SimpleEntity2.SimpleEntity2(),2,2
"org.apache.openjpa.persistence.compat.SimpleEntity2.SimpleEntity2(String,String)",5,10
org.apache.openjpa.persistence.compat.SimpleEntity2.getId(),0,0
org.apache.openjpa.persistence.compat.SimpleEntity2.setId(long),1,1
org.apache.openjpa.persistence.compat.SimpleEntity2.getName(),2,3
org.apache.openjpa.persistence.compat.SimpleEntity2.setName(String),3,6
org.apache.openjpa.persistence.compat.SimpleEntity2.getValue(),2,3
org.apache.openjpa.persistence.compat.SimpleEntity2.setValue(String),3,6
org.apache.openjpa.persistence.kernel.TestIncrementalFlushesDeletes.TestIncrementalFlushesDeletes(String),6,7
org.apache.openjpa.persistence.kernel.TestIncrementalFlushesDeletes.TestIncrementalFlushesDeletes(),6,10
org.apache.openjpa.persistence.kernel.TestIncrementalFlushesDeletes.setUp(),9,16
org.apache.openjpa.persistence.kernel.TestIncrementalFlushesDeletes.tearDown(),14,17
"org.apache.openjpa.persistence.kernel.TestIncrementalFlushesDeletes.assertState(PCState,boolean)",4,8
org.apache.openjpa.persistence.kernel.TestIncrementalFlushesDeletes.testNewDeleted(),4,5
org.apache.openjpa.persistence.kernel.TestIncrementalFlushesDeletes.testNewDeletedFlushed(),6,10
org.apache.openjpa.persistence.kernel.TestIncrementalFlushesDeletes.testNewFlushedDeleted(),7,10
org.apache.openjpa.persistence.kernel.TestIncrementalFlushesDeletes.testNewFlushedDeletedFlushed(),8,16
org.apache.openjpa.persistence.jdbc.meta.TestDFG.TestDFG(String),6,9
org.apache.openjpa.persistence.jdbc.meta.TestDFG.setUp(),20,39
org.apache.openjpa.persistence.jdbc.meta.TestDFG.testDFG(),19,62
org.apache.openjpa.persistence.jdbc.meta.TestDFG.testDFGWrites(),22,33
org.apache.openjpa.persistence.query.AbstractVisitable.asExpression(AliasContext),9,9
org.apache.openjpa.persistence.query.AbstractVisitable.asProjection(AliasContext),9,9
org.apache.openjpa.persistence.query.AbstractVisitable.getAliasHint(AliasContext),9,10
org.apache.openjpa.persistence.query.AbstractVisitable.asJoinable(AliasContext),9,9
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectD.CacheObjectD(),2,2
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectD.CacheObjectD(String),4,4
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectD.getStr(),2,3
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectD.setStr(String),3,4
"org.apache.openjpa.persistence.query.GreaterThanExpression.GreaterThanExpression(Expression,Expression)",5,10
org.apache.openjpa.persistence.embed.attrOverrides.PropertyOwner.getAddress(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.PropertyOwner.setAddress(Address),3,6
org.apache.openjpa.persistence.embed.attrOverrides.PropertyOwner.getSsn(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.PropertyOwner.setSsn(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.PropertyOwner.equals(Object),6,14
org.apache.openjpa.persistence.embed.attrOverrides.PropertyOwner.hashCode(),5,14
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity3.setOne2Melems(List<BaseTestElement3>),6,9
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity3.getOne2Melems(),5,6
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity3.setCollelems(Set<BaseTestElement3>),5,9
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity3.getCollelems(),5,6
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity3.setM2melems(List<BaseTestElement3>),6,9
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity3.getM2melems(),5,6
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity3.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity3.getId(),0,0
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableSelfCollection.TestMultiTableSelfCollection(String),7,8
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableSelfCollection.TestMultiTableSelfCollection(),7,12
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableSelfCollection.setUp(),18,93
org.apache.openjpa.persistence.jdbc.meta.TestMultiTableSelfCollection.testSelfCollections(),23,161
org.apache.openjpa.persistence.enhance.common.apps.Entity1.Entity1(),1,1
"org.apache.openjpa.persistence.enhance.common.apps.Entity1.Entity1(long,String,int)",3,11
org.apache.openjpa.persistence.enhance.common.apps.Entity1.getPk(),0,0
org.apache.openjpa.persistence.enhance.common.apps.Entity1.setStringField(String),4,8
org.apache.openjpa.persistence.enhance.common.apps.Entity1.getStringField(),2,5
org.apache.openjpa.persistence.enhance.common.apps.Entity1.setIntField(int),3,5
org.apache.openjpa.persistence.enhance.common.apps.Entity1.getIntField(),1,2
org.apache.openjpa.persistence.enhance.common.apps.Entity1.setEntity2Field(Entity2),4,8
org.apache.openjpa.persistence.enhance.common.apps.Entity1.getEntity2Field(),2,5
org.apache.openjpa.persistence.enhance.common.apps.Entity1.toString(),2,8
"org.apache.openjpa.persistence.InvalidStateException.InvalidStateException(Message,Throwable[],Object,boolean)",9,14
"org.apache.openjpa.persistence.InvalidStateException.InvalidStateException(String,Throwable[],Object,boolean)",9,16
org.apache.openjpa.persistence.InvalidStateException.getType(),2,2
org.apache.openjpa.persistence.InvalidStateException.getSubtype(),4,4
org.apache.openjpa.persistence.InvalidStateException.isFatal(),1,2
org.apache.openjpa.persistence.InvalidStateException.getCause(),5,6
org.apache.openjpa.persistence.InvalidStateException.getNestedThrowables(),5,8
org.apache.openjpa.persistence.InvalidStateException.getFailedObject(),2,4
org.apache.openjpa.persistence.InvalidStateException.toString(),2,4
org.apache.openjpa.persistence.InvalidStateException.printStackTrace(),5,8
org.apache.openjpa.persistence.InvalidStateException.printStackTrace(PrintStream),7,12
org.apache.openjpa.persistence.InvalidStateException.printStackTrace(PrintWriter),7,12
org.apache.openjpa.persistence.InvalidStateException.writeObject(ObjectOutputStream),11,22
org.apache.openjpa.persistence.InvalidStateException.readObject(ObjectInputStream),10,17
org.apache.openjpa.persistence.jdbc.query.domain.Magazine.getName(),2,3
org.apache.openjpa.persistence.jdbc.query.domain.Magazine.setName(String),3,6
org.apache.openjpa.persistence.jdbc.query.domain.Magazine.getId(),0,0
org.apache.openjpa.persistence.jdbc.query.domain.Magazine.getPublisher(),1,3
org.apache.openjpa.persistence.jdbc.query.domain.Magazine.setPublisher(Publisher),2,6
org.apache.openjpa.persistence.jdbc.query.domain.Magazine.getDatePublished(),2,5
org.apache.openjpa.persistence.jdbc.query.domain.Magazine.setDatePublished(Date),3,10
org.apache.openjpa.persistence.jdbc.query.domain.Magazine.getTsPublished(),2,3
org.apache.openjpa.persistence.jdbc.query.domain.Magazine.setTsPublished(Timestamp),3,6
org.apache.openjpa.persistence.enhance.identity.EmployeeId2.EmployeeId2(),1,1
"org.apache.openjpa.persistence.enhance.identity.EmployeeId2.EmployeeId2(String,String)",3,9
org.apache.openjpa.persistence.enhance.identity.EmployeeId2.setFirstName(String),3,6
org.apache.openjpa.persistence.enhance.identity.EmployeeId2.getFirstName(),2,3
org.apache.openjpa.persistence.enhance.identity.EmployeeId2.setLastName(String),3,6
org.apache.openjpa.persistence.enhance.identity.EmployeeId2.getLastName(),2,3
org.apache.openjpa.persistence.enhance.identity.EmployeeId2.equals(Object),6,26
org.apache.openjpa.persistence.enhance.identity.EmployeeId2.hashCode(),4,14
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.setUp(),15,18
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.tearDown(),3,4
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.createEntityF(),15,65
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.testCreateF(),9,12
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.testCreateF2(),15,20
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.runQueries(),7,9
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.queryOnEntityOnly(),11,21
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.queryOnColumnValue(),14,24
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimId.queryCollection(),14,23
org.apache.openjpa.lib.util.JavaVersions.getParameterizedTypes(Field),11,17
org.apache.openjpa.lib.util.JavaVersions.getParameterizedTypes(Method),12,20
"org.apache.openjpa.lib.util.JavaVersions.collectParameterizedTypes(Type,Class<>)",17,45
org.apache.openjpa.lib.util.JavaVersions.extractClass(Type),8,18
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.PhoneNumber.getNumber(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.PhoneNumber.setNumber(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.PhoneNumber.getEmployees(),5,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.PhoneNumber.addEmployees(FullName,Employee)",5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.PhoneNumber.removeEmployee(FullName),4,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.PhoneNumber.equals(Object),16,45
org.apache.openjpa.persistence.detachment.TestDetach.setUp(),18,28
org.apache.openjpa.persistence.detachment.TestDetach.testDetachCascadeIsSet(),23,75
org.apache.openjpa.persistence.detachment.TestDetach.testDetachRemovesEntityAndCascadedRelationFromContext(),18,38
org.apache.openjpa.persistence.detachment.TestDetach.testDetachingDirtyEntityDoesNotImplicitlyFlush(),19,27
org.apache.openjpa.persistence.detachment.TestDetach.testDetachingNewEntityIsIgnored(),15,37
org.apache.openjpa.persistence.detachment.TestDetach.testDetachingDetachedEntityIsIgnored(),20,80
org.apache.openjpa.persistence.detachment.TestDetach.testFlushingBeforeDetachingSavesChange(),5,5
org.apache.openjpa.persistence.detachment.TestDetach.testManagedEntityContinuesToReferDetachedEntities(),18,40
org.apache.openjpa.persistence.detachment.TestDetach.createData(),17,83
org.apache.openjpa.persistence.detachment.TestDetach.assertDetached(Object),4,6
org.apache.openjpa.persistence.detachment.TestDetach.assertNotDetached(Object),4,6
org.apache.openjpa.kernel.DelegatingFetchConfiguration.DelegatingFetchConfiguration(FetchConfiguration),6,10
"org.apache.openjpa.kernel.DelegatingFetchConfiguration.DelegatingFetchConfiguration(FetchConfiguration,RuntimeExceptionTranslator)",11,29
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getDelegate(),4,6
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getInnermostDelegate(),5,10
org.apache.openjpa.kernel.DelegatingFetchConfiguration.hashCode(),4,6
org.apache.openjpa.kernel.DelegatingFetchConfiguration.equals(Object),7,13
org.apache.openjpa.kernel.DelegatingFetchConfiguration.translate(RuntimeException),5,11
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getContext(),6,8
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setContext(StoreContext),8,12
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getFetchBatchSize(),6,10
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setFetchBatchSize(int),8,20
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getMaxFetchDepth(),6,10
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setMaxFetchDepth(int),8,16
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getRootInstances(),7,9
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setRootInstances(Collection),10,15
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getRootClasses(),7,9
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setRootClasses(Collection),10,15
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getQueryCacheEnabled(),7,10
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setQueryCacheEnabled(boolean),9,16
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getFlushBeforeQueries(),6,8
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setFlushBeforeQueries(int),8,14
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getExtendedPathLookup(),7,10
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setExtendedPathLookup(boolean),10,16
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getFetchGroups(),5,7
org.apache.openjpa.kernel.DelegatingFetchConfiguration.hasFetchGroup(String),5,7
org.apache.openjpa.kernel.DelegatingFetchConfiguration.addFetchGroup(String),7,11
org.apache.openjpa.kernel.DelegatingFetchConfiguration.addFetchGroups(Collection),7,11
org.apache.openjpa.kernel.DelegatingFetchConfiguration.removeFetchGroup(String),7,11
org.apache.openjpa.kernel.DelegatingFetchConfiguration.removeFetchGroups(Collection),7,11
org.apache.openjpa.kernel.DelegatingFetchConfiguration.clearFetchGroups(),5,8
org.apache.openjpa.kernel.DelegatingFetchConfiguration.resetFetchGroups(),6,10
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getFields(),6,7
org.apache.openjpa.kernel.DelegatingFetchConfiguration.hasField(String),6,9
org.apache.openjpa.kernel.DelegatingFetchConfiguration.addField(String),8,13
org.apache.openjpa.kernel.DelegatingFetchConfiguration.addFields(Collection),8,13
org.apache.openjpa.kernel.DelegatingFetchConfiguration.removeField(String),8,13
org.apache.openjpa.kernel.DelegatingFetchConfiguration.removeFields(Collection),8,13
org.apache.openjpa.kernel.DelegatingFetchConfiguration.clearFields(),6,8
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getLockTimeout(),6,8
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setLockTimeout(int),8,14
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getQueryTimeout(),6,8
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setQueryTimeout(int),8,14
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getLockScope(),6,8
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setLockScope(int),8,14
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getReadLockLevel(),7,10
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setReadLockLevel(int),9,16
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getWriteLockLevel(),7,10
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setWriteLockLevel(int),9,16
org.apache.openjpa.kernel.DelegatingFetchConfiguration.newResultList(ResultObjectProvider),9,15
org.apache.openjpa.kernel.DelegatingFetchConfiguration.copy(FetchConfiguration),6,10
org.apache.openjpa.kernel.DelegatingFetchConfiguration.clone(),6,7
"org.apache.openjpa.kernel.DelegatingFetchConfiguration.setHint(String,Object)",10,14
"org.apache.openjpa.kernel.DelegatingFetchConfiguration.setHint(String,Object,Object)",11,17
org.apache.openjpa.kernel.DelegatingFetchConfiguration.isHintSet(String),8,11
org.apache.openjpa.kernel.DelegatingFetchConfiguration.isDefaultPUFetchGroupConfigurationOnly(),5,8
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getHint(String),8,10
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getHints(),8,9
org.apache.openjpa.kernel.DelegatingFetchConfiguration.requiresFetch(FieldMetaData),9,13
org.apache.openjpa.kernel.DelegatingFetchConfiguration.requiresLoad(),6,8
org.apache.openjpa.kernel.DelegatingFetchConfiguration.traverse(FieldMetaData),10,13
org.apache.openjpa.kernel.DelegatingFetchConfiguration.lock(),5,6
org.apache.openjpa.kernel.DelegatingFetchConfiguration.unlock(),5,6
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getCacheRetrieveMode(),8,14
org.apache.openjpa.kernel.DelegatingFetchConfiguration.getCacheStoreMode(),8,14
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setCacheRetrieveMode(DataCacheRetrieveMode),9,18
org.apache.openjpa.kernel.DelegatingFetchConfiguration.setCacheStoreMode(DataCacheStoreMode),9,18
org.apache.openjpa.kernel.DelegatingFetchConfiguration.isFetchConfigurationSQLCacheAdmissible(),8,14
org.apache.openjpa.persistence.inheritance.polymorphic.TestTablePerClassInheritanceWithAbstractRoot.setUp(),10,13
org.apache.openjpa.persistence.inheritance.polymorphic.TestTablePerClassInheritanceWithAbstractRoot.populate(),38,109
org.apache.openjpa.persistence.inheritance.polymorphic.TestTablePerClassInheritanceWithAbstractRoot.testConsistency(),29,58
"org.apache.openjpa.persistence.inheritance.polymorphic.TestTablePerClassInheritanceWithAbstractRoot.linkConsistently(Translation,Translatable)",6,14
org.apache.openjpa.persistence.inheritance.polymorphic.TestTablePerClassInheritanceWithAbstractRoot.count(Class),17,24
org.apache.openjpa.persistence.inheritance.polymorphic.TestTablePerClassInheritanceWithAbstractRoot.count(Class<>),12,19
org.apache.openjpa.persistence.inheritance.polymorphic.TestTablePerClassInheritanceWithAbstractRoot.testEntityTypeForTablePerClassInheritance(),40,152
org.apache.openjpa.persistence.conf.TestOpenJPAConfiguration.TestOpenJPAConfiguration(String),5,7
org.apache.openjpa.persistence.conf.TestOpenJPAConfiguration.testSetObjects(),31,136
org.apache.openjpa.persistence.conf.TestOpenJPAConfiguration.testClassAliases(),32,72
org.apache.openjpa.persistence.conf.TestOpenJPAConfiguration.testBeanAccessors(),55,126
org.apache.openjpa.persistence.conf.TestOpenJPAConfiguration.testInvalidPlugins(),26,41
org.apache.openjpa.persistence.conf.TestOpenJPAConfiguration.testInvalidConfigurationWarnings(),36,94
org.apache.openjpa.persistence.conf.TestOpenJPAConfiguration.testInvalidNonPluginValues(),30,49
org.apache.openjpa.persistence.detachment.model.SimpleC.getId(),0,0
org.apache.openjpa.persistence.detachment.model.SimpleC.getName(),2,3
org.apache.openjpa.persistence.detachment.model.SimpleC.setName(String),3,6
org.apache.openjpa.persistence.detachment.model.SimpleC.setParent(SimpleB),3,4
org.apache.openjpa.persistence.detachment.model.SimpleC.getParent(),2,3
org.apache.openjpa.lib.conf.TestValue.SimpleValue.getInternalString(),2,3
org.apache.openjpa.lib.conf.TestValue.SimpleValue.getValueType(),2,2
org.apache.openjpa.lib.conf.TestValue.SimpleValue.setInternalObject(Object),4,5
org.apache.openjpa.lib.conf.TestValue.SimpleValue.setInternalString(String),4,5
org.apache.openjpa.lib.conf.TestValue.SimpleValue.get(),1,1
org.apache.openjpa.lib.conf.TestValue.testSetAliasesByValue(),13,44
org.apache.openjpa.lib.conf.TestValue.testEquivalentValueCanBeSet(),14,39
org.apache.openjpa.lib.conf.TestValue.testEquivalentValuesAreUnmodifable(),22,45
org.apache.openjpa.lib.conf.TestAnchorParsing.testFQAnchor(),21,32
org.apache.openjpa.lib.conf.TestAnchorParsing.testNoResource(),3,3
org.apache.openjpa.lib.conf.TestAnchorParsing.testNoAnchor(),7,7
org.apache.openjpa.lib.conf.TestAnchorParsing.allHelper(String),28,58
org.apache.openjpa.lib.conf.TestAnchorParsing.testProductDerivationsLoadResource(),19,70
org.apache.openjpa.lib.conf.TestAnchorParsing.testNonexistantResourceLoad(),11,18
org.apache.openjpa.lib.conf.TestAnchorParsing.testProductDerivationsLoadFile(),22,60
org.apache.openjpa.lib.conf.TestAnchorParsing.testNonexistantFileLoad(),14,18
org.apache.openjpa.lib.conf.TestAnchorParsing.resourceToTemporaryFile(String),22,37
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Course.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Course.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Course.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Course.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Course.equals(Object),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Course.hashCode(),4,11
"org.apache.openjpa.persistence.criteria.ParameterExpressionImpl<T>.ParameterExpressionImpl(Class<T>,String)",12,28
org.apache.openjpa.persistence.criteria.ParameterExpressionImpl<T>.getName(),3,6
org.apache.openjpa.persistence.criteria.ParameterExpressionImpl<T>.getPosition(),9,12
org.apache.openjpa.persistence.criteria.ParameterExpressionImpl<T>.setIndex(int),2,5
org.apache.openjpa.persistence.criteria.ParameterExpressionImpl<T>.toString(),10,21
org.apache.openjpa.persistence.criteria.ParameterExpressionImpl<T>.setValue(Object),3,6
org.apache.openjpa.persistence.criteria.ParameterExpressionImpl<T>.value(),2,3
"org.apache.openjpa.persistence.criteria.ParameterExpressionImpl<T>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",24,48
org.apache.openjpa.persistence.criteria.ParameterExpressionImpl<T>.asValue(AliasContext),8,10
org.apache.openjpa.persistence.criteria.ParameterExpressionImpl<T>.getParameterType(),3,4
org.apache.openjpa.persistence.embed.Listing.Listing(),1,1
"org.apache.openjpa.persistence.embed.Listing.Listing(Seller,Double)",3,8
org.apache.openjpa.persistence.embed.Listing.getSeller(),1,3
org.apache.openjpa.persistence.embed.Listing.setSeller(Seller),2,6
org.apache.openjpa.persistence.embed.Listing.getPrice(),1,2
org.apache.openjpa.persistence.embed.Listing.setPrice(Double),2,5
org.apache.openjpa.persistence.embed.Listing.getComments(),2,3
org.apache.openjpa.persistence.embed.Listing.setComments(String),3,6
"org.apache.openjpa.lib.util.ReferenceHashMap.ReferenceHashMap(int,int)",7,15
"org.apache.openjpa.lib.util.ReferenceHashMap.ReferenceHashMap(int,int,int,float)",10,21
org.apache.openjpa.lib.util.ReferenceHashMap.toReferenceConstant(int),14,38
org.apache.openjpa.lib.util.ReferenceHashMap.getMaxSize(),2,4
org.apache.openjpa.lib.util.ReferenceHashMap.setMaxSize(int),7,23
org.apache.openjpa.lib.util.ReferenceHashMap.isFull(),2,3
"org.apache.openjpa.lib.util.ReferenceHashMap.overflowRemoved(Object,Object)",5,6
org.apache.openjpa.lib.util.ReferenceHashMap.valueExpired(Object),4,4
org.apache.openjpa.lib.util.ReferenceHashMap.keyExpired(Object),4,4
org.apache.openjpa.lib.util.ReferenceHashMap.removeExpired(),3,3
org.apache.openjpa.lib.util.ReferenceHashMap.removeOverflow(int),10,22
"org.apache.openjpa.lib.util.ReferenceHashMap.addMapping(int,int,Object,Object)",13,27
"org.apache.openjpa.lib.util.ReferenceHashMap.createEntry(HashEntry,int,Object,Object)",8,18
org.apache.openjpa.lib.util.ReferenceHashMap.purge(Reference),25,76
"org.apache.openjpa.lib.util.ReferenceHashMap.purge(AccessibleEntry,Reference)",13,45
org.apache.openjpa.lib.util.ReferenceHashMap.isHard(int),8,11
org.apache.openjpa.lib.util.ReferenceHashMap.doWriteObject(ObjectOutputStream),7,11
org.apache.openjpa.lib.util.ReferenceHashMap.doReadObject(ObjectInputStream),8,13
"org.apache.openjpa.lib.util.ReferenceHashMap.AccessibleEntry.AccessibleEntry(org.apache.commons.collections.map.AbstractReferenceMap,HashEntry,int,Object,Object)",13,23
org.apache.openjpa.lib.util.ReferenceHashMap.AccessibleEntry.key(),2,3
org.apache.openjpa.lib.util.ReferenceHashMap.AccessibleEntry.value(),2,3
org.apache.openjpa.lib.util.ReferenceHashMap.AccessibleEntry.nullValue(),1,2
org.apache.openjpa.lib.util.ReferenceHashMap.AccessibleEntry.nextEntry(),2,5
org.apache.openjpa.lib.util.ReferenceHashMap.AccessibleEntry.setNextEntry(AccessibleEntry),3,4
org.apache.openjpa.persistence.jdbc.annotations.PropertyAccess1.PropertyAccess1(),2,2
org.apache.openjpa.persistence.jdbc.annotations.PropertyAccess1.PropertyAccess1(int),2,2
org.apache.openjpa.persistence.jdbc.annotations.PropertyAccess1.getId(),0,0
org.apache.openjpa.persistence.jdbc.annotations.PropertyAccess1.setId(int),1,1
org.apache.openjpa.persistence.jdbc.annotations.PropertyAccess1.getName(),2,3
org.apache.openjpa.persistence.jdbc.annotations.PropertyAccess1.setName(String),3,4
org.apache.openjpa.persistence.jdbc.annotations.PropertyAccess1.getIntValue(),2,2
org.apache.openjpa.persistence.jdbc.annotations.PropertyAccess1.setIntValue(int),3,5
org.apache.openjpa.kernel.MethodStoreQuery.invalidateCompilation(),3,4
"org.apache.openjpa.kernel.MethodStoreQuery.newInMemoryExecutor(ClassMetaData,boolean)",6,11
"org.apache.openjpa.kernel.MethodStoreQuery.newDataStoreExecutor(ClassMetaData,boolean)",6,12
org.apache.openjpa.kernel.MethodStoreQuery.supportsInMemoryExecution(),3,3
org.apache.openjpa.kernel.MethodStoreQuery.supportsDataStoreExecution(),4,4
org.apache.openjpa.kernel.MethodStoreQuery.requiresCandidateType(),3,3
org.apache.openjpa.kernel.MethodStoreQuery.bindParameterTypes(),27,57
"org.apache.openjpa.kernel.MethodStoreQuery.MethodExecutor.MethodExecutor(MethodStoreQuery,ClassMetaData,boolean,boolean)",10,16
"org.apache.openjpa.kernel.MethodStoreQuery.MethodExecutor.executeQuery(StoreQuery,Object[],Range)",54,163
"org.apache.openjpa.kernel.MethodStoreQuery.MethodExecutor.invoke(StoreQuery,Object[])",21,30
org.apache.openjpa.kernel.MethodStoreQuery.MethodExecutor.validate(StoreQuery),35,115
org.apache.openjpa.kernel.MethodStoreQuery.MethodExecutor.getOrderedParameterTypes(StoreQuery),8,12
"org.apache.openjpa.kernel.MethodStoreQuery.MethodExecutor.toParameterArray(StoreQuery,Map)",28,80
org.apache.openjpa.kernel.MethodStoreQuery.MethodExecutor.positionalParameterBase(Collection),17,37
org.apache.openjpa.audit.TestBeginEventOnTransactionListener.setUp(),4,5
org.apache.openjpa.audit.TestBeginEventOnTransactionListener.getPersistenceUnitName(),5,5
org.apache.openjpa.audit.TestBeginEventOnTransactionListener.test(),6,7
org.apache.openjpa.audit.TestBeginEventOnTransactionListener.doTest(EntityManagerFactory),20,39
"org.apache.openjpa.audit.TestBeginEventOnTransactionListener.MockAuditor.audit(Broker,Collection<Audited>,Collection<Audited>,Collection<Audited>)",8,13
org.apache.openjpa.audit.TestBeginEventOnTransactionListener.MockAuditor.isRollbackOnError(),2,2
org.apache.openjpa.audit.TestBeginEventOnTransactionListener.MockAuditor.close(),2,2
org.apache.openjpa.audit.TestBeginEventOnTransactionListener.MockAuditor.setConfiguration(Configuration),3,4
org.apache.openjpa.audit.TestBeginEventOnTransactionListener.MockAuditor.startConfiguration(),2,2
org.apache.openjpa.audit.TestBeginEventOnTransactionListener.MockAuditor.endConfiguration(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.setDstr(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.getDstr(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.setDint(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.getDint(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.setDdbl(double),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.getDdbl(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.getA(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.setA(AttachA),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.setBs(Set),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.getBs(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.setPcStringMap(Map),3,10
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.getPcStringMap(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.setBigIntegerPCMap(TreeMap),4,11
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.getBigIntegerPCMap(),3,6
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.setEmbeddedE(AttachE),3,6
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.getEmbeddedE(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.setEmbeddedA(AttachA),3,6
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.getEmbeddedA(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.AttachD.getVersion(),2,3
org.apache.openjpa.conf.TestGetProperty.setUp(),10,13
org.apache.openjpa.conf.TestGetProperty.tearDown(),4,5
org.apache.openjpa.conf.TestGetProperty.testGetProperty(),16,27
org.apache.openjpa.conf.TestGetProperty.Test.Test(),5,5
org.apache.openjpa.conf.TestGetProperty.Test.run(),3,3
org.apache.openjpa.persistence.jdbc.common.apps.EagerPCSub.EagerPCSub(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.EagerPCSub.EagerPCSub(int),2,2
org.apache.openjpa.persistence.jdbc.common.apps.EagerPCSub.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.EagerPCSub.setIntField(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.EagerPCSub.getEagerCollection2(),3,5
org.apache.openjpa.persistence.jdbc.common.apps.EagerPCSub.setEagerCollection2(List),4,10
org.apache.openjpa.persistence.access.MixedMappedSuper.setId(int),2,2
org.apache.openjpa.persistence.access.MixedMappedSuper.getId(),1,1
org.apache.openjpa.persistence.access.MixedMappedSuper.setName(String),4,6
org.apache.openjpa.persistence.access.MixedMappedSuper.getName(),3,3
org.apache.openjpa.persistence.access.MixedMappedSuper.equals(Object),6,14
org.apache.openjpa.persistence.fields.TestEnumsInJPQL.setUp(),18,27
org.apache.openjpa.persistence.fields.TestEnumsInJPQL.testEnumLiteralInSelect(),19,22
org.apache.openjpa.persistence.fields.TestEnumsInJPQL.testEnumLiteralInSetInUpdate(),24,33
org.apache.openjpa.persistence.fields.TestEnumsInJPQL.testEnumLiteralInWhereInUpdate(),24,33
org.apache.openjpa.persistence.fields.TestEnumsInJPQL.postUpdateCheck(boolean),22,43
org.apache.openjpa.persistence.fields.TestEnumsInJPQL.testEnumPositionalParamInSelect(),17,20
org.apache.openjpa.persistence.fields.TestEnumsInJPQL.testEnumNamedParamInSelect(),17,20
org.apache.openjpa.persistence.fields.TestEnumsInJPQL.testEnumParamInSetInUpdate(),21,30
org.apache.openjpa.persistence.fields.TestEnumsInJPQL.testEnumParamInWhereInUpdate(),21,30
org.apache.openjpa.persistence.fields.TestEnumsInJPQL.testMemberOf(),18,25
org.apache.openjpa.persistence.access.xml.XMLEmbedMixedAccess.getFirstName(),2,3
org.apache.openjpa.persistence.access.xml.XMLEmbedMixedAccess.setFirstName(String),4,6
org.apache.openjpa.persistence.access.xml.XMLEmbedMixedAccess.getLastName(),2,3
org.apache.openjpa.persistence.access.xml.XMLEmbedMixedAccess.setLastName(String),4,6
org.apache.openjpa.persistence.access.xml.XMLEmbedMixedAccess.getMiddleName(),3,4
org.apache.openjpa.persistence.access.xml.XMLEmbedMixedAccess.setMiddleName(String),5,8
org.apache.openjpa.persistence.access.xml.XMLEmbedMixedAccess.equals(Object),9,28
org.apache.openjpa.persistence.access.xml.XMLEmbedMixedAccess.setMName(String),3,6
org.apache.openjpa.persistence.access.xml.XMLEmbedMixedAccess.getMName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCCountry.PCCountry(),1,1
"org.apache.openjpa.persistence.kernel.common.apps.PCCountry.PCCountry(String,String)",5,11
org.apache.openjpa.persistence.kernel.common.apps.PCCountry.getCode(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCCountry.setCode(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.PCCountry.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCCountry.setName(String),3,6
"org.apache.openjpa.persistence.kernel.common.apps.PCCountry.reflect(PCCountry,String)",10,15
org.apache.openjpa.persistence.criteria.Joins.clone(Join),12,39
"org.apache.openjpa.persistence.criteria.Joins.makeJoin(FromImpl<>,Members.Member,JoinType)",10,46
"org.apache.openjpa.persistence.criteria.Joins.getMembers(PathImpl,java.util.List<Members.Member>,java.util.List<JoinType>)",11,42
"org.apache.openjpa.persistence.criteria.Joins.SingularJoin<Z,X>.SingularJoin(FromImpl<Z>,Members.SingularAttributeImpl<X>,JoinType)",8,18
"org.apache.openjpa.persistence.criteria.Joins.SingularJoin<Z,X>.getJoinType()",2,6
"org.apache.openjpa.persistence.criteria.Joins.SingularJoin<Z,X>.getParent()",2,4
"org.apache.openjpa.persistence.criteria.Joins.SingularJoin<Z,X>.getMember()",0,0
"org.apache.openjpa.persistence.criteria.Joins.SingularJoin<Z,X>.getAttribute()",5,12
"org.apache.openjpa.persistence.criteria.Joins.SingularJoin<Z,X>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",30,96
"org.apache.openjpa.persistence.criteria.Joins.SingularJoin<Z,X>.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",56,337
"org.apache.openjpa.persistence.criteria.Joins.SingularJoin<Z,X>.getVariableForCorrPath(SubqueryImpl<>,PathImpl<>)",12,43
"org.apache.openjpa.persistence.criteria.Joins.SingularJoin<Z,X>.setImplicitContainsTypes(Value,Value,int)",29,111
"org.apache.openjpa.persistence.criteria.Joins.SingularJoin<Z,X>.asVariable(AliasContext)",8,12
"org.apache.openjpa.persistence.criteria.Joins.AbstractCollection<Z,C,E>.AbstractCollection(FromImpl<Z>,Members.PluralAttributeImpl<C,E>,JoinType)",10,18
"org.apache.openjpa.persistence.criteria.Joins.AbstractCollection<Z,C,E>.getJoinType()",2,6
"org.apache.openjpa.persistence.criteria.Joins.AbstractCollection<Z,C,E>.getParent()",3,6
"org.apache.openjpa.persistence.criteria.Joins.AbstractCollection<Z,C,E>.getAttribute()",1,2
"org.apache.openjpa.persistence.criteria.Joins.AbstractCollection<Z,C,E>.getModel()",4,6
"org.apache.openjpa.persistence.criteria.Joins.AbstractCollection<Z,C,E>.getMemberClassMetaData()",8,18
"org.apache.openjpa.persistence.criteria.Joins.AbstractCollection<Z,C,E>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",27,76
"org.apache.openjpa.persistence.criteria.Joins.AbstractCollection<Z,C,E>.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",55,363
"org.apache.openjpa.persistence.criteria.Joins.AbstractCollection<Z,C,E>.getVariableForCorrPath(SubqueryImpl<>,PathImpl<>)",12,43
"org.apache.openjpa.persistence.criteria.Joins.AbstractCollection<Z,C,E>.asVariable(AliasContext)",8,12
"org.apache.openjpa.persistence.criteria.Joins.Collection<Z,E>.Collection(FromImpl<Z>,Members.CollectionAttributeImpl<E>,JoinType)",6,9
"org.apache.openjpa.persistence.criteria.Joins.Collection<Z,E>.getModel()",3,5
"org.apache.openjpa.persistence.criteria.Joins.Set<Z,E>.Set(FromImpl<Z>,Members.SetAttributeImpl<E>,JoinType)",6,9
"org.apache.openjpa.persistence.criteria.Joins.Set<Z,E>.getModel()",3,5
"org.apache.openjpa.persistence.criteria.Joins.List<Z,E>.List(FromImpl<Z>,Members.ListAttributeImpl<E>,JoinType)",6,9
"org.apache.openjpa.persistence.criteria.Joins.List<Z,E>.getModel()",3,5
"org.apache.openjpa.persistence.criteria.Joins.List<Z,E>.index()",4,5
"org.apache.openjpa.persistence.criteria.Joins.Map<Z,K,V>.Map(FromImpl<Z>,Members.MapAttributeImpl<K,V>,JoinType)",6,9
"org.apache.openjpa.persistence.criteria.Joins.Map<Z,K,V>.getModel()",3,5
"org.apache.openjpa.persistence.criteria.Joins.Map<Z,K,V>.joinKey()",7,11
"org.apache.openjpa.persistence.criteria.Joins.Map<Z,K,V>.joinKey(JoinType)",18,70
"org.apache.openjpa.persistence.criteria.Joins.Map<Z,K,V>.entry()",5,8
"org.apache.openjpa.persistence.criteria.Joins.Map<Z,K,V>.key()",3,4
"org.apache.openjpa.persistence.criteria.Joins.Map<Z,K,V>.value()",2,2
"org.apache.openjpa.persistence.criteria.Joins.Map<Z,K,V>.toKernelExpression(ExpressionFactory,CriteriaQueryImpl<>)",12,24
"org.apache.openjpa.persistence.criteria.Joins.MapKey<Z,K>.MapKey(Map<Z,K>)",8,23
"org.apache.openjpa.persistence.criteria.Joins.MapKey<Z,K>.getType()",3,5
"org.apache.openjpa.persistence.criteria.Joins.MapKey<Z,K>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",17,26
"org.apache.openjpa.persistence.criteria.Joins.MapKey<Z,K>.asValue(AliasContext)",13,25
"org.apache.openjpa.persistence.criteria.Joins.MapEntry<K,V>.MapEntry(Map<K,V>)",6,15
"org.apache.openjpa.persistence.criteria.Joins.MapEntry<K,V>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",18,38
"org.apache.openjpa.persistence.criteria.Joins.MapEntry<K,V>.asValue(AliasContext)",13,25
"org.apache.openjpa.persistence.criteria.Joins.KeyJoin<K,V>.KeyJoin(FromImpl<java.util.Map<K,V>>,KeyAttributeImpl<K>,JoinType)",9,16
"org.apache.openjpa.persistence.criteria.Joins.KeyJoin<K,V>.toValue(ExpressionFactory,CriteriaQueryImpl<>)",8,13
org.apache.openjpa.persistence.jdbc.query.domain.GameBean.GameBean(Game),2,6
org.apache.openjpa.persistence.jdbc.meta.TestLocators.TestLocators(String),4,5
org.apache.openjpa.persistence.jdbc.meta.TestLocators.TestLocators(),4,6
org.apache.openjpa.persistence.jdbc.meta.TestLocators.setUp(),14,21
org.apache.openjpa.persistence.jdbc.meta.TestLocators.tearDown(),6,7
org.apache.openjpa.persistence.jdbc.meta.TestLocators.testBLOBs(),3,4
org.apache.openjpa.persistence.jdbc.meta.TestLocators.testSmallBLOBs(),19,45
org.apache.openjpa.persistence.jdbc.meta.TestLocators.doBlobTest(int),20,56
org.apache.openjpa.persistence.jdbc.meta.TestLocators.testShrinkBLOB(),20,74
org.apache.openjpa.persistence.jdbc.meta.TestLocators.testCLOBs(),3,4
org.apache.openjpa.persistence.jdbc.meta.TestLocators.testSmallCLOBs(),19,45
org.apache.openjpa.persistence.jdbc.meta.TestLocators.doClobTest(int),22,60
org.apache.openjpa.persistence.jdbc.meta.TestLocators.testShrinkCLOB(),22,80
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCLeafD1.getLeafD1Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCLeafD1.setLeafD1Data(String),4,10
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCMappedSuperclass.getMappedSuperclassData(),4,7
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCMappedSuperclass.setMappedSuperclassData(String),5,14
"org.apache.openjpa.kernel.TLoadedState.initialize(StateManagerImpl,PCState)",7,8
org.apache.openjpa.kernel.TLoadedState.release(StateManagerImpl),4,4
org.apache.openjpa.kernel.TLoadedState.toString(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKEmbeddedEntity.hashCode(),5,17
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKEmbeddedEntity.equals(Object),7,19
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKEmbeddedEntity.getKeyA(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKEmbeddedEntity.setKeyA(int),2,5
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKEmbeddedEntity.getKeyB(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKEmbeddedEntity.setKeyB(int),2,5
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKEmbeddedEntity.getKeyC(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKEmbeddedEntity.setKeyC(int),2,5
org.apache.openjpa.persistence.datacache.CacheLoadTest.setUp(),14,29
org.apache.openjpa.persistence.datacache.CacheLoadTest.tearDown(),4,7
org.apache.openjpa.persistence.datacache.CacheLoadTest.testCacheLoad(),16,21
org.apache.openjpa.persistence.datacache.CacheLoadTest.rnd(int),4,5
org.apache.openjpa.persistence.datacache.CacheLoadTest.insert(),13,15
org.apache.openjpa.persistence.datacache.CacheLoadTest.query(),30,62
org.apache.openjpa.persistence.datacache.CacheLoadTest.delete(),19,32
org.apache.openjpa.persistence.datacache.CacheLoadTest.read(),12,19
org.apache.openjpa.persistence.datacache.CacheLoadTest.rndclass(),5,9
org.apache.openjpa.persistence.inheritance.entity.Department.Department(),4,6
"org.apache.openjpa.persistence.inheritance.entity.Department.Department(int,String)",6,13
org.apache.openjpa.persistence.inheritance.entity.Department.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.Department.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entity.Department.getDepartmentName(),3,5
org.apache.openjpa.persistence.inheritance.entity.Department.setDepartmentName(String),4,10
org.apache.openjpa.persistence.inheritance.entity.Department.getDepartmentManager(),2,5
org.apache.openjpa.persistence.inheritance.entity.Department.setDepartmentManager(Manager),3,10
org.apache.openjpa.persistence.inheritance.entity.Department.getEmployeeList(),2,6
org.apache.openjpa.persistence.inheritance.jointable.ParttimeEmployee.ParttimeEmployee(),2,2
org.apache.openjpa.persistence.inheritance.jointable.ParttimeEmployee.ParttimeEmployee(String),6,7
org.apache.openjpa.persistence.inheritance.jointable.ParttimeEmployee.getPTEmpProp1(),3,5
org.apache.openjpa.persistence.inheritance.jointable.ParttimeEmployee.setPTEmpProp1(String),4,10
org.apache.openjpa.persistence.inheritance.jointable.ParttimeEmployee.getDept(),2,3
org.apache.openjpa.persistence.inheritance.jointable.ParttimeEmployee.setDept(Department),3,6
org.apache.openjpa.persistence.inheritance.jointable.ParttimeEmployee.equals(Object),6,12
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity1.Entity1(),1,1
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity1.Entity1(long,String,int)",3,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity1.getPk(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity1.setStringField(String),4,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity1.getStringField(),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity1.setIntField(int),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity1.getIntField(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity1.setEntity2Field(Entity2),4,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity1.getEntity2Field(),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity1.toString(),2,8
"org.apache.openjpa.kernel.exps.Args.Args(Value,Value)",7,12
org.apache.openjpa.kernel.exps.Args.Args(Value),4,13
org.apache.openjpa.kernel.exps.Args.getValues(),5,7
org.apache.openjpa.kernel.exps.Args.getType(),2,2
org.apache.openjpa.kernel.exps.Args.getTypes(),5,8
org.apache.openjpa.kernel.exps.Args.setImplicitType(Class),3,4
"org.apache.openjpa.kernel.exps.Args.eval(Object,Object,StoreContext,Object[])",12,27
org.apache.openjpa.kernel.exps.Args.acceptVisit(ExpressionVisitor),9,16
org.apache.openjpa.persistence.datacache.common.apps.AttachC.setCstr(String),3,6
org.apache.openjpa.persistence.datacache.common.apps.AttachC.getCstr(),2,3
org.apache.openjpa.persistence.datacache.common.apps.AttachC.setCint(int),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachC.getCint(),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachC.setCdbl(double),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachC.getCdbl(),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachC.setEs(List),2,2
org.apache.openjpa.persistence.datacache.common.apps.AttachC.getEs(),1,1
org.apache.openjpa.persistence.jdbc.kernel.BaseJDBCTest.BaseJDBCTest(),5,8
org.apache.openjpa.persistence.jdbc.kernel.BaseJDBCTest.BaseJDBCTest(String),6,7
org.apache.openjpa.persistence.jdbc.kernel.BaseJDBCTest.defaultPersistenceXmlResource(),12,15
org.apache.openjpa.persistence.jdbc.kernel.BaseJDBCTest.getPM(),4,9
"org.apache.openjpa.persistence.jdbc.kernel.BaseJDBCTest.getPM(boolean,boolean)",10,25
"org.apache.openjpa.persistence.jdbc.kernel.BaseJDBCTest.deleteAll(Broker,Class)",4,9
"org.apache.openjpa.persistence.jdbc.kernel.BaseJDBCTest.deleteAll(Broker,Class,boolean)",19,53
"org.apache.openjpa.persistence.jdbc.kernel.BaseJDBCTest.deleteAll(OpenJPAEntityManager,Class)",9,13
"org.apache.openjpa.persistence.jdbc.kernel.BaseJDBCTest.deleteAll(OpenJPAEntityManager,Class,boolean)",10,15
org.apache.openjpa.persistence.jdbc.kernel.BaseJDBCTest.persist(Object),7,19
org.apache.openjpa.persistence.jdbc.kernel.BaseJDBCTest.getProperties(),1,3
org.apache.openjpa.persistence.jdbc.kernel.BaseJDBCTest.getProperties(String[]),34,89
"org.apache.openjpa.persistence.query.QueryExpression.QueryExpression(QueryDefinitionImpl,UnaryFunctionalOperator)",7,8
"org.apache.openjpa.kernel.exps.EqualExpression.EqualExpression(Val,Val)",7,12
"org.apache.openjpa.kernel.exps.EqualExpression.compare(Object,Object)",3,4
"org.apache.openjpa.kernel.exps.OrExpression.OrExpression(Exp,Exp)",6,13
"org.apache.openjpa.kernel.exps.OrExpression.eval(Object,Object,StoreContext,Object[])",10,22
"org.apache.openjpa.kernel.exps.OrExpression.eval(Collection,StoreContext,Object[])",10,18
org.apache.openjpa.kernel.exps.OrExpression.acceptVisit(ExpressionVisitor),7,17
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.LongNameValidator.validateName(NamedEntity),19,28
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.LongNameValidator.testpost(NamedEntity),11,14
org.apache.openjpa.persistence.cache.jpa.TestCacheModeDisableSelective.getEntityManagerFactory(),13,28
org.apache.openjpa.persistence.cache.jpa.TestCacheModeDisableSelective.getListener(),4,10
org.apache.openjpa.persistence.cache.jpa.TestCacheModeDisableSelective.getSql(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeDisableSelective.testCacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeDisableSelective.testUncacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeDisableSelective.testUnspecified(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeDisableSelective.getExpectedInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeDisableSelective.getExpectedNotInCache(),2,4
org.apache.openjpa.persistence.embed.Embed_ToMany.getName1(),2,3
org.apache.openjpa.persistence.embed.Embed_ToMany.setName1(String),3,6
org.apache.openjpa.persistence.embed.Embed_ToMany.getName2(),2,3
org.apache.openjpa.persistence.embed.Embed_ToMany.setName2(String),3,6
org.apache.openjpa.persistence.embed.Embed_ToMany.getName3(),2,3
org.apache.openjpa.persistence.embed.Embed_ToMany.setName3(String),3,6
org.apache.openjpa.persistence.embed.Embed_ToMany.getEntityBs(),2,3
org.apache.openjpa.persistence.embed.Embed_ToMany.addEntityB(EntityB1),2,4
org.apache.openjpa.persistence.EntityManagerImpl.EntityManagerImpl(),4,4
"org.apache.openjpa.persistence.EntityManagerImpl.EntityManagerImpl(EntityManagerFactoryImpl,Broker)",9,17
"org.apache.openjpa.persistence.EntityManagerImpl.initialize(EntityManagerFactoryImpl,Broker)",26,38
org.apache.openjpa.persistence.EntityManagerImpl.getBroker(),2,6
org.apache.openjpa.persistence.EntityManagerImpl.getEntityManagerFactory(),5,8
org.apache.openjpa.persistence.EntityManagerImpl.getConfiguration(),3,5
org.apache.openjpa.persistence.EntityManagerImpl.getFetchPlan(),10,23
org.apache.openjpa.persistence.EntityManagerImpl.pushFetchPlan(),3,8
org.apache.openjpa.persistence.EntityManagerImpl.pushFetchPlan(FetchConfiguration),9,19
org.apache.openjpa.persistence.EntityManagerImpl.popFetchPlan(),11,18
org.apache.openjpa.persistence.EntityManagerImpl.getConnectionRetainMode(),6,15
org.apache.openjpa.persistence.EntityManagerImpl.isTransactionManaged(),3,4
org.apache.openjpa.persistence.EntityManagerImpl.isManaged(),2,3
org.apache.openjpa.persistence.EntityManagerImpl.getManagedRuntime(),3,7
org.apache.openjpa.persistence.EntityManagerImpl.getSyncWithManagedTransactions(),4,7
org.apache.openjpa.persistence.EntityManagerImpl.setSyncWithManagedTransactions(boolean),7,13
org.apache.openjpa.persistence.EntityManagerImpl.getClassLoader(),2,4
org.apache.openjpa.persistence.EntityManagerImpl.getConnectionUserName(),5,8
org.apache.openjpa.persistence.EntityManagerImpl.getConnectionPassword(),4,6
org.apache.openjpa.persistence.EntityManagerImpl.getMultithreaded(),2,3
org.apache.openjpa.persistence.EntityManagerImpl.setMultithreaded(boolean),5,9
org.apache.openjpa.persistence.EntityManagerImpl.getIgnoreChanges(),3,5
org.apache.openjpa.persistence.EntityManagerImpl.setIgnoreChanges(boolean),7,11
org.apache.openjpa.persistence.EntityManagerImpl.getNontransactionalRead(),3,5
org.apache.openjpa.persistence.EntityManagerImpl.setNontransactionalRead(boolean),7,11
org.apache.openjpa.persistence.EntityManagerImpl.getNontransactionalWrite(),3,5
org.apache.openjpa.persistence.EntityManagerImpl.setNontransactionalWrite(boolean),7,11
org.apache.openjpa.persistence.EntityManagerImpl.getOptimistic(),2,3
org.apache.openjpa.persistence.EntityManagerImpl.setOptimistic(boolean),6,9
org.apache.openjpa.persistence.EntityManagerImpl.getRestoreState(),5,9
org.apache.openjpa.persistence.EntityManagerImpl.setRestoreState(RestoreStateType),9,13
org.apache.openjpa.persistence.EntityManagerImpl.setRestoreState(int),5,9
org.apache.openjpa.persistence.EntityManagerImpl.getRetainState(),2,3
org.apache.openjpa.persistence.EntityManagerImpl.setRetainState(boolean),6,9
org.apache.openjpa.persistence.EntityManagerImpl.getAutoClear(),5,9
org.apache.openjpa.persistence.EntityManagerImpl.setAutoClear(AutoClearType),9,13
org.apache.openjpa.persistence.EntityManagerImpl.setAutoClear(int),5,9
org.apache.openjpa.persistence.EntityManagerImpl.getDetachState(),5,9
org.apache.openjpa.persistence.EntityManagerImpl.setDetachState(DetachStateType),8,13
org.apache.openjpa.persistence.EntityManagerImpl.setDetachState(int),5,9
org.apache.openjpa.persistence.EntityManagerImpl.getAutoDetach(),5,13
org.apache.openjpa.persistence.EntityManagerImpl.setAutoDetach(AutoDetachType),8,19
org.apache.openjpa.persistence.EntityManagerImpl.setAutoDetach(EnumSet<AutoDetachType>),8,19
org.apache.openjpa.persistence.EntityManagerImpl.setAutoDetach(int),7,15
"org.apache.openjpa.persistence.EntityManagerImpl.setAutoDetach(AutoDetachType,boolean)",8,19
"org.apache.openjpa.persistence.EntityManagerImpl.setAutoDetach(int,boolean)",7,11
org.apache.openjpa.persistence.EntityManagerImpl.getEvictFromStoreCache(),5,7
org.apache.openjpa.persistence.EntityManagerImpl.setEvictFromStoreCache(boolean),8,13
org.apache.openjpa.persistence.EntityManagerImpl.getPopulateStoreCache(),5,7
org.apache.openjpa.persistence.EntityManagerImpl.setPopulateStoreCache(boolean),8,13
org.apache.openjpa.persistence.EntityManagerImpl.isTrackChangesByType(),4,7
org.apache.openjpa.persistence.EntityManagerImpl.setTrackChangesByType(boolean),7,15
org.apache.openjpa.persistence.EntityManagerImpl.isLargeTransaction(),4,4
org.apache.openjpa.persistence.EntityManagerImpl.setLargeTransaction(boolean),6,8
org.apache.openjpa.persistence.EntityManagerImpl.getUserObject(Object),4,9
"org.apache.openjpa.persistence.EntityManagerImpl.putUserObject(Object,Object)",7,14
org.apache.openjpa.persistence.EntityManagerImpl.addTransactionListener(Object),7,12
org.apache.openjpa.persistence.EntityManagerImpl.removeTransactionListener(Object),7,12
org.apache.openjpa.persistence.EntityManagerImpl.getTransactionListenerCallbackModes(),7,15
org.apache.openjpa.persistence.EntityManagerImpl.setTransactionListenerCallbackMode(CallbackMode),8,21
org.apache.openjpa.persistence.EntityManagerImpl.setTransactionListenerCallbackMode(EnumSet<CallbackMode>),9,21
org.apache.openjpa.persistence.EntityManagerImpl.getTransactionListenerCallbackMode(),5,9
org.apache.openjpa.persistence.EntityManagerImpl.setTransactionListenerCallbackMode(int),8,10
"org.apache.openjpa.persistence.EntityManagerImpl.addLifecycleListener(Object,Class)",8,14
org.apache.openjpa.persistence.EntityManagerImpl.removeLifecycleListener(Object),7,12
org.apache.openjpa.persistence.EntityManagerImpl.getLifecycleListenerCallbackModes(),7,15
org.apache.openjpa.persistence.EntityManagerImpl.setLifecycleListenerCallbackMode(CallbackMode),8,21
org.apache.openjpa.persistence.EntityManagerImpl.setLifecycleListenerCallbackMode(EnumSet<CallbackMode>),9,21
org.apache.openjpa.persistence.EntityManagerImpl.getLifecycleListenerCallbackMode(),5,9
org.apache.openjpa.persistence.EntityManagerImpl.setLifecycleListenerCallbackMode(int),8,17
"org.apache.openjpa.persistence.EntityManagerImpl.getReference(Class<T>,Object)",7,13
"org.apache.openjpa.persistence.EntityManagerImpl.find(Class<T>,Object)",6,13
"org.apache.openjpa.persistence.EntityManagerImpl.find(Class<T>,Object,LockModeType)",6,10
"org.apache.openjpa.persistence.EntityManagerImpl.find(Class<T>,Object,Map<String,Object>)",6,10
"org.apache.openjpa.persistence.EntityManagerImpl.find(Class<T>,Object,LockModeType,Map<String,Object>)",21,43
"org.apache.openjpa.persistence.EntityManagerImpl.findAll(Class<T>,Object)",11,21
"org.apache.openjpa.persistence.EntityManagerImpl.findAll(Class<T>,Collection)",11,15
"org.apache.openjpa.persistence.EntityManagerImpl.findAll(Class<T>,Collection).$1.processArgument(Object)",6,9
"org.apache.openjpa.persistence.EntityManagerImpl.findAll(Class<T>,Collection).$1.processReturn(Object,OpenJPAStateManager)",7,11
"org.apache.openjpa.persistence.EntityManagerImpl.findCached(Class<T>,Object)",7,12
org.apache.openjpa.persistence.EntityManagerImpl.getObjectIdClass(Class),9,14
org.apache.openjpa.persistence.EntityManagerImpl.getTransaction(),9,11
org.apache.openjpa.persistence.EntityManagerImpl.joinTransaction(),11,14
org.apache.openjpa.persistence.EntityManagerImpl.begin(),2,3
org.apache.openjpa.persistence.EntityManagerImpl.commit(),41,80
org.apache.openjpa.persistence.EntityManagerImpl.rollback(),2,3
org.apache.openjpa.persistence.EntityManagerImpl.commitAndResume(),3,5
org.apache.openjpa.persistence.EntityManagerImpl.rollbackAndResume(),3,5
org.apache.openjpa.persistence.EntityManagerImpl.getRollbackCause(),10,12
org.apache.openjpa.persistence.EntityManagerImpl.getRollbackOnly(),8,9
org.apache.openjpa.persistence.EntityManagerImpl.setRollbackOnly(),3,5
org.apache.openjpa.persistence.EntityManagerImpl.setRollbackOnly(Throwable),5,8
org.apache.openjpa.persistence.EntityManagerImpl.setSavepoint(String),7,10
org.apache.openjpa.persistence.EntityManagerImpl.rollbackToSavepoint(),5,7
org.apache.openjpa.persistence.EntityManagerImpl.rollbackToSavepoint(String),7,10
org.apache.openjpa.persistence.EntityManagerImpl.releaseSavepoint(),5,7
org.apache.openjpa.persistence.EntityManagerImpl.releaseSavepoint(String),7,10
org.apache.openjpa.persistence.EntityManagerImpl.flush(),6,9
org.apache.openjpa.persistence.EntityManagerImpl.preFlush(),5,7
org.apache.openjpa.persistence.EntityManagerImpl.validateChanges(),5,7
org.apache.openjpa.persistence.EntityManagerImpl.isActive(),2,3
org.apache.openjpa.persistence.EntityManagerImpl.isStoreActive(),3,5
org.apache.openjpa.persistence.EntityManagerImpl.beginStore(),3,5
org.apache.openjpa.persistence.EntityManagerImpl.contains(Object),17,23
org.apache.openjpa.persistence.EntityManagerImpl.containsAll(Object),4,8
org.apache.openjpa.persistence.EntityManagerImpl.containsAll(Collection),5,8
org.apache.openjpa.persistence.EntityManagerImpl.persist(Object),6,8
org.apache.openjpa.persistence.EntityManagerImpl.persistAll(Object),5,7
org.apache.openjpa.persistence.EntityManagerImpl.persistAll(Collection),6,8
org.apache.openjpa.persistence.EntityManagerImpl.remove(Object),7,8
org.apache.openjpa.persistence.EntityManagerImpl.removeAll(Object),5,7
org.apache.openjpa.persistence.EntityManagerImpl.removeAll(Collection),7,8
org.apache.openjpa.persistence.EntityManagerImpl.release(Object),6,8
org.apache.openjpa.persistence.EntityManagerImpl.releaseAll(Collection),6,8
org.apache.openjpa.persistence.EntityManagerImpl.releaseAll(Object),5,7
org.apache.openjpa.persistence.EntityManagerImpl.refresh(Object),3,5
"org.apache.openjpa.persistence.EntityManagerImpl.refresh(Object,LockModeType)",6,10
"org.apache.openjpa.persistence.EntityManagerImpl.refresh(Object,Map<String,Object>)",6,10
"org.apache.openjpa.persistence.EntityManagerImpl.refresh(Object,LockModeType,Map<String,Object>)",30,71
org.apache.openjpa.persistence.EntityManagerImpl.refreshAll(),8,11
org.apache.openjpa.persistence.EntityManagerImpl.refreshAll(Collection),8,11
org.apache.openjpa.persistence.EntityManagerImpl.refreshAll(Object),5,7
org.apache.openjpa.persistence.EntityManagerImpl.retrieve(Object),6,8
org.apache.openjpa.persistence.EntityManagerImpl.retrieveAll(Collection),6,8
org.apache.openjpa.persistence.EntityManagerImpl.retrieveAll(Object),5,7
org.apache.openjpa.persistence.EntityManagerImpl.evict(Object),6,8
org.apache.openjpa.persistence.EntityManagerImpl.evictAll(Collection),6,8
org.apache.openjpa.persistence.EntityManagerImpl.evictAll(Object),5,7
org.apache.openjpa.persistence.EntityManagerImpl.evictAll(),4,5
org.apache.openjpa.persistence.EntityManagerImpl.evictAll(Class),6,9
org.apache.openjpa.persistence.EntityManagerImpl.evictAll(Extent),7,11
org.apache.openjpa.persistence.EntityManagerImpl.detachCopy(T),15,51
org.apache.openjpa.persistence.EntityManagerImpl.detachAll(Object),8,11
org.apache.openjpa.persistence.EntityManagerImpl.detachAll(Collection),8,11
org.apache.openjpa.persistence.EntityManagerImpl.merge(T),6,7
org.apache.openjpa.persistence.EntityManagerImpl.mergeAll(Object),9,13
org.apache.openjpa.persistence.EntityManagerImpl.mergeAll(Collection),9,11
"org.apache.openjpa.persistence.EntityManagerImpl.transactional(Object,boolean)",8,12
"org.apache.openjpa.persistence.EntityManagerImpl.transactionalAll(Collection,boolean)",8,12
"org.apache.openjpa.persistence.EntityManagerImpl.transactionalAll(Object[],boolean)",10,14
org.apache.openjpa.persistence.EntityManagerImpl.nontransactional(Object),6,8
org.apache.openjpa.persistence.EntityManagerImpl.nontransactionalAll(Collection),6,8
org.apache.openjpa.persistence.EntityManagerImpl.nontransactionalAll(Object[]),8,10
org.apache.openjpa.persistence.EntityManagerImpl.getNamedGenerator(String),20,40
org.apache.openjpa.persistence.EntityManagerImpl.getIdGenerator(Class),17,34
"org.apache.openjpa.persistence.EntityManagerImpl.getFieldGenerator(Class,String)",24,54
"org.apache.openjpa.persistence.EntityManagerImpl.createExtent(Class<T>,boolean)",8,13
"org.apache.openjpa.persistence.EntityManagerImpl.createQuery(String,Class<T>)",6,13
org.apache.openjpa.persistence.EntityManagerImpl.createQuery(String),7,13
"org.apache.openjpa.persistence.EntityManagerImpl.createQuery(String,String)",33,72
org.apache.openjpa.persistence.EntityManagerImpl.createQuery(Query),14,26
"org.apache.openjpa.persistence.EntityManagerImpl.createNamedQuery(String,Class<T>)",8,15
org.apache.openjpa.persistence.EntityManagerImpl.createNamedQuery(String),41,97
org.apache.openjpa.persistence.EntityManagerImpl.createNativeQuery(String),8,16
"org.apache.openjpa.persistence.EntityManagerImpl.createNativeQuery(String,Class)",7,13
"org.apache.openjpa.persistence.EntityManagerImpl.createNativeQuery(String,String)",20,39
"org.apache.openjpa.persistence.EntityManagerImpl.newQueryImpl(org.apache.openjpa.kernel.Query,QueryMetaData)",10,21
org.apache.openjpa.persistence.EntityManagerImpl.newQueryImpl(org.apache.openjpa.kernel.Query),23,43
org.apache.openjpa.persistence.EntityManagerImpl.validateSQL(String),11,16
org.apache.openjpa.persistence.EntityManagerImpl.getPreparedQueryCache(),7,15
org.apache.openjpa.persistence.EntityManagerImpl.getPreparedQuery(String),8,23
org.apache.openjpa.persistence.EntityManagerImpl.setFlushMode(FlushModeType),10,21
org.apache.openjpa.persistence.EntityManagerImpl.getFlushMode(),9,15
org.apache.openjpa.persistence.EntityManagerImpl.fromFlushBeforeQueries(int),12,30
org.apache.openjpa.persistence.EntityManagerImpl.toFlushBeforeQueries(FlushModeType),17,47
org.apache.openjpa.persistence.EntityManagerImpl.prepareForPooling(),34,50
org.apache.openjpa.persistence.EntityManagerImpl.clear(),5,5
org.apache.openjpa.persistence.EntityManagerImpl.getDelegate(),5,5
org.apache.openjpa.persistence.EntityManagerImpl.getLockMode(Object),16,28
"org.apache.openjpa.persistence.EntityManagerImpl.lock(Object,LockModeType)",5,10
org.apache.openjpa.persistence.EntityManagerImpl.lock(Object),8,13
"org.apache.openjpa.persistence.EntityManagerImpl.lock(Object,LockModeType,int)",21,37
"org.apache.openjpa.persistence.EntityManagerImpl.lock(Object,LockModeType,Map<String,Object>)",30,59
org.apache.openjpa.persistence.EntityManagerImpl.lockAll(Collection),6,8
"org.apache.openjpa.persistence.EntityManagerImpl.lockAll(Collection,LockModeType,int)",13,21
org.apache.openjpa.persistence.EntityManagerImpl.lockAll(Object),5,7
"org.apache.openjpa.persistence.EntityManagerImpl.lockAll(Object[],LockModeType,int)",8,14
org.apache.openjpa.persistence.EntityManagerImpl.cancelAll(),2,3
org.apache.openjpa.persistence.EntityManagerImpl.getConnection(),3,4
org.apache.openjpa.persistence.EntityManagerImpl.getManagedObjects(),4,6
org.apache.openjpa.persistence.EntityManagerImpl.getTransactionalObjects(),4,6
org.apache.openjpa.persistence.EntityManagerImpl.getPendingTransactionalObjects(),5,8
org.apache.openjpa.persistence.EntityManagerImpl.getDirtyObjects(),4,6
org.apache.openjpa.persistence.EntityManagerImpl.getOrderDirtyObjects(),3,5
org.apache.openjpa.persistence.EntityManagerImpl.setOrderDirtyObjects(boolean),6,9
org.apache.openjpa.persistence.EntityManagerImpl.dirtyClass(Class),6,8
org.apache.openjpa.persistence.EntityManagerImpl.getPersistedClasses(),5,7
org.apache.openjpa.persistence.EntityManagerImpl.getUpdatedClasses(),5,7
org.apache.openjpa.persistence.EntityManagerImpl.getRemovedClasses(),6,7
org.apache.openjpa.persistence.EntityManagerImpl.createInstance(Class<T>),6,8
org.apache.openjpa.persistence.EntityManagerImpl.close(),11,22
org.apache.openjpa.persistence.EntityManagerImpl.isOpen(),3,3
"org.apache.openjpa.persistence.EntityManagerImpl.dirty(Object,String)",12,17
org.apache.openjpa.persistence.EntityManagerImpl.getObjectId(Object),7,12
org.apache.openjpa.persistence.EntityManagerImpl.isDirty(Object),5,6
org.apache.openjpa.persistence.EntityManagerImpl.isTransactional(Object),5,6
org.apache.openjpa.persistence.EntityManagerImpl.isPersistent(Object),5,6
org.apache.openjpa.persistence.EntityManagerImpl.isNewlyPersistent(Object),6,6
org.apache.openjpa.persistence.EntityManagerImpl.isRemoved(Object),6,6
org.apache.openjpa.persistence.EntityManagerImpl.isDetached(Object),6,8
org.apache.openjpa.persistence.EntityManagerImpl.getVersion(Object),5,7
org.apache.openjpa.persistence.EntityManagerImpl.assertNotCloseInvoked(),14,26
"org.apache.openjpa.persistence.EntityManagerImpl.assertValidAttchedEntity(String,Object)",22,38
org.apache.openjpa.persistence.EntityManagerImpl.processArgument(Object),4,6
"org.apache.openjpa.persistence.EntityManagerImpl.processReturn(Object,OpenJPAStateManager)",8,9
"org.apache.openjpa.persistence.EntityManagerImpl.processArgument(int,Object,OpenJPAStateManager)",31,71
org.apache.openjpa.persistence.EntityManagerImpl.hashCode(),3,6
org.apache.openjpa.persistence.EntityManagerImpl.equals(Object),6,9
org.apache.openjpa.persistence.EntityManagerImpl.readExternal(ObjectInput),34,88
org.apache.openjpa.persistence.EntityManagerImpl.writeExternal(ObjectOutput),27,65
"org.apache.openjpa.persistence.EntityManagerImpl.BrokerBytesInputStream.BrokerBytesInputStream(byte[],OpenJPAConfiguration)",13,25
org.apache.openjpa.persistence.EntityManagerImpl.BrokerBytesInputStream.primitiveType(char),3,6
org.apache.openjpa.persistence.EntityManagerImpl.BrokerBytesInputStream.resolveClass(ObjectStreamClass),22,53
org.apache.openjpa.persistence.EntityManagerImpl.BrokerBytesInputStream.lookupClass(String),27,55
org.apache.openjpa.persistence.EntityManagerImpl.detach(Object),11,15
org.apache.openjpa.persistence.EntityManagerImpl.createQuery(CriteriaQuery<T>),25,69
org.apache.openjpa.persistence.EntityManagerImpl.createDynamicQuery(org.apache.openjpa.persistence.query.QueryDefinition),14,24
org.apache.openjpa.persistence.EntityManagerImpl.getProperties(),38,153
org.apache.openjpa.persistence.EntityManagerImpl.getCriteriaBuilder(),4,8
org.apache.openjpa.persistence.EntityManagerImpl.getSupportedProperties(),5,7
org.apache.openjpa.persistence.EntityManagerImpl.unwrap(Class<T>),33,58
org.apache.openjpa.persistence.EntityManagerImpl.setQuerySQLCache(boolean),7,11
org.apache.openjpa.persistence.EntityManagerImpl.getQuerySQLCache(),5,7
org.apache.openjpa.persistence.EntityManagerImpl.getExceptionTranslator(),4,6
"org.apache.openjpa.persistence.EntityManagerImpl.configureCurrentFetchPlan(FetchPlan,Map<String,Object>,LockModeType,boolean)",36,105
"org.apache.openjpa.persistence.EntityManagerImpl.configureCurrentCacheModes(FetchPlan,Map<String,Object>)",32,135
org.apache.openjpa.persistence.EntityManagerImpl.getMetamodel(),2,4
"org.apache.openjpa.persistence.EntityManagerImpl.setProperty(String,Object)",35,67
"org.apache.openjpa.persistence.EntityManagerImpl.setKernelProperty(Object,String,Object)",29,94
org.apache.openjpa.persistence.EntityManagerImpl.getBeanPropertyName(String),18,43
"org.apache.openjpa.persistence.EntityManagerImpl.convertUserValue(String,Object,Class<>)",29,116
"org.apache.openjpa.persistence.EntityManagerImpl.cloneProperties(Map<String,Object>)",6,17
org.apache.openjpa.lib.identifier.IdConfigurationTestImpl.IdConfigurationTestImpl(),6,6
org.apache.openjpa.lib.identifier.IdConfigurationTestImpl.delimitAll(),1,1
org.apache.openjpa.lib.identifier.IdConfigurationTestImpl.getDefaultIdentifierRule(),3,6
org.apache.openjpa.lib.identifier.IdConfigurationTestImpl.getDelimitedCase(),5,5
org.apache.openjpa.lib.identifier.IdConfigurationTestImpl.getLeadingDelimiter(),3,3
org.apache.openjpa.lib.identifier.IdConfigurationTestImpl.getIdentifierDelimiter(),3,3
org.apache.openjpa.lib.identifier.IdConfigurationTestImpl.getIdentifierConcatenator(),3,3
org.apache.openjpa.lib.identifier.IdConfigurationTestImpl.getIdentifierRule(T),3,9
org.apache.openjpa.lib.identifier.IdConfigurationTestImpl.getIdentifierRules(),4,9
org.apache.openjpa.lib.identifier.IdConfigurationTestImpl.getTrailingDelimiter(),3,3
org.apache.openjpa.lib.identifier.IdConfigurationTestImpl.getSchemaCase(),5,5
org.apache.openjpa.lib.identifier.IdConfigurationTestImpl.getSupportsDelimitedIdentifiers(),3,3
org.apache.openjpa.lib.identifier.IdConfigurationTestImpl.getConversionKey(),3,5
org.apache.openjpa.persistence.generationtype.TestTableGenerator.setUp(),3,4
org.apache.openjpa.persistence.generationtype.TestTableGenerator.testInitialValue(),18,27
org.apache.openjpa.jdbc.kernel.TestM21UniVersion.setUp(),7,9
org.apache.openjpa.jdbc.kernel.TestM21UniVersion.createEntities(),26,80
org.apache.openjpa.jdbc.kernel.TestM21UniVersion.testNonRelationalFieldInverseSideVersionUpdate(),29,101
org.apache.openjpa.jdbc.kernel.TestM21UniVersion.testNonRelationalFieldOwnerSideVersionUpdate(),30,103
org.apache.openjpa.jdbc.kernel.TestM21UniVersion.testRelationalFieldOwnerSideVersionUpdate(),34,135
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.AnnotationPersistenceMappingParser(JDBCConfiguration),10,12
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parsePackageMappingAnnotations(Package),19,41
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.handleUnknownPackageMappingAnnotation(Package,Annotation)",9,12
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseTableGenerator(AnnotatedElement,TableGenerator)",52,178
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseClassMappingAnnotations(ClassMetaData),63,315
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.handleUnknownClassMappingAnnotation(ClassMapping,Annotation)",9,13
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseAssociationOverrides(ClassMapping,AssociationOverride)",37,120
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseAttributeOverrides(ClassMapping,AttributeOverride)",23,55
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parsePrimaryKeyJoinColumns(ClassMapping,PrimaryKeyJoinColumn)",16,40
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(PrimaryKeyJoinColumn),21,66
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseSecondaryTables(ClassMapping,SecondaryTable)",32,101
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseTable(ClassMapping,Table)",15,38
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.createUniqueConstraint(MetaDataContext,UniqueConstraint)",26,90
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.addUniqueConstraints(String,MetaDataContext,MappingInfo,UniqueConstraint)",21,61
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.toTableIdentifier(String,String)",11,43
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseSQLResultSetMappings(ClassMapping,SqlResultSetMapping)",47,159
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseDiscriminatorColumn(ClassMapping,DiscriminatorColumn)",25,108
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseInheritance(ClassMapping,Inheritance)",16,40
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseMappingOverrides(ClassMapping,MappingOverride)",21,47
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.populate(FieldMapping,MappingOverride)",14,34
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseDataStoreIdColumn(ClassMapping,DataStoreIdColumn)",29,70
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseForeignKey(MappingInfo,ForeignKey)",14,27
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseForeignKey(MappingInfo,String,boolean,boolean,ForeignKeyAction,ForeignKeyAction)",23,79
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.assertDefault(ForeignKey),24,32
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.toForeignKeyAction(ForeignKeyAction),14,51
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseIndex(MappingInfo,Index)",8,18
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseIndex(MappingInfo,String,boolean,boolean)",21,50
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseUnique(FieldMapping,org.apache.openjpa.persistence.jdbc.Unique)",25,62
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseVersionColumns(ClassMapping,VersionColumn)",15,35
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(VersionColumn,boolean)",17,32
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(String,boolean,boolean,boolean,String,int,int,int,String,boolean)",29,113
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseMappingOverrides(ClassMapping,XMappingOverride)",21,47
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.populate(FieldMapping,XMappingOverride)",15,51
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseElementColumns(FieldMapping,ElementColumn)",17,40
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(ElementColumn,boolean)",29,84
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseKeyJoinColumns(FieldMapping,KeyJoinColumn)",18,43
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(KeyJoinColumn,boolean)",26,97
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.toEagerFetchModeConstant(FetchMode),13,35
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseLobMapping(FieldMetaData),26,80
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseMemberMappingAnnotations(FieldMetaData),85,683
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.handleUnknownMemberMappingAnnotation(FieldMapping,Annotation)",9,13
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.toPolymorphicConstant(NonpolymorphicType),14,28
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseAssociationOverrides(FieldMapping,AssociationOverride)",33,108
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseAttributeOverrides(FieldMapping,AttributeOverride)",15,38
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.getEmbeddedFieldMapping(FieldMapping,String)",6,15
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.getEmbeddedFieldMapping(FieldMapping,String,boolean)",29,128
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.getEmbeddedClassType(FieldMapping,String)",27,110
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.getEmbeddedMapping(ValueMapping,boolean)",9,23
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.getEmbeddedMapping(ValueMapping),4,9
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.getAttributeOverrideField(String,FieldMapping,ClassMapping)",19,85
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseEnumerated(FieldMapping,Enumerated)",18,35
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseMapKeyEnumerated(FieldMapping,MapKeyEnumerated)",18,34
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseTemporal(FieldMapping,Temporal)",30,86
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseMapKeyTemporal(FieldMapping,MapKeyTemporal)",30,73
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseColumns(FieldMapping,javax.persistence.Column)",61,184
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(javax.persistence.Column,boolean)",11,21
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.setupColumn(Column,javax.persistence.Column,boolean)",29,82
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.setColumns(FieldMapping,MappingInfo,List<Column>,int)",27,51
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.trackSecondaryTable(FieldMapping,DBIdentifier,DBIdentifier,int)",21,55
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseJoinTable(FieldMapping,JoinTable)",18,61
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseJoinColumns(FieldMapping,MappingInfo,boolean,JoinColumn)",39,152
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(JoinColumn),25,84
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.setTargetIdentifier(Column,String)",12,33
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseKeyColumns(FieldMapping,KeyColumn)",17,40
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(KeyColumn,boolean)",29,84
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parsePrimaryKeyJoinColumns(FieldMapping,PrimaryKeyJoinColumn)",18,41
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseXJoinColumns(FieldMapping,MappingInfo,boolean,XJoinColumn)",27,73
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(XJoinColumn,boolean)",26,94
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseEmbeddedMapping(FieldMapping,EmbeddedMapping)",27,89
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseEmbeddedMapping(ValueMapping,DBIdentifier,DBIdentifier,XMappingOverride[])",22,79
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.populateNullIndicator(DBIdentifier,ValueMappingInfo)",16,31
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseContainerTable(FieldMapping,ContainerTable)",18,60
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseCollectionTable(FieldMapping,CollectionTable)",21,56
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseOrderColumn(FieldMapping,OrderColumn)",28,69
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseJavaxOrderColumn(FieldMapping,javax.persistence.OrderColumn)",23,62
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseElementJoinColumns(FieldMapping,ElementJoinColumn)",18,43
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(ElementJoinColumn,boolean)",27,95
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseMapKeyColumn(FieldMapping,MapKeyColumn)",17,57
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.setupMapKeyColumn(FieldMapping,Column,MapKeyColumn)",31,93
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.setMapKeyColumn(FieldMapping,MappingInfo,Column,int)",24,51
"org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.parseMapKeyJoinColumns(FieldMapping,MapKeyJoinColumn)",18,45
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.newColumn(MapKeyJoinColumn),26,80
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.normalizeSequenceName(String),9,20
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.normalizeSchemaName(String),9,20
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.normalizeCatalogName(String),9,20
org.apache.openjpa.persistence.jdbc.AnnotationPersistenceMappingParser.delimit(),3,4
org.apache.openjpa.persistence.datacache.TestEntitiesAsKeys.setUp(),19,24
org.apache.openjpa.persistence.datacache.TestEntitiesAsKeys.tearDown(),4,7
org.apache.openjpa.persistence.datacache.TestEntitiesAsKeys.populate(),20,36
org.apache.openjpa.persistence.datacache.TestEntitiesAsKeys.testMapContents(),18,41
org.apache.openjpa.persistence.datacache.TestEntitiesAsKeys.getEmbeddableMap(Integer),8,34
org.apache.openjpa.persistence.datacache.common.apps.AttachA.setAstr(String),3,6
org.apache.openjpa.persistence.datacache.common.apps.AttachA.getAstr(),2,3
org.apache.openjpa.persistence.datacache.common.apps.AttachA.setAint(int),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachA.getAint(),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachA.setAdbl(double),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachA.getAdbl(),1,2
org.apache.openjpa.persistence.datacache.common.apps.AttachA.setStringArray(String[]),3,10
org.apache.openjpa.persistence.datacache.common.apps.AttachA.getStringArray(),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachA.setAttachEArray(AttachE[]),3,10
org.apache.openjpa.persistence.datacache.common.apps.AttachA.getAttachEArray(),2,5
org.apache.openjpa.persistence.datacache.common.apps.AttachA.writeObject(ObjectOutputStream),5,8
org.apache.openjpa.persistence.datacache.common.apps.AttachA.readObject(ObjectInputStream),6,10
org.apache.openjpa.persistence.jpql.expressions.TestInMemoryScalarExpressions.TestInMemoryScalarExpressions(String),7,8
org.apache.openjpa.persistence.jpql.expressions.TestInMemoryScalarExpressions.setUp(),48,131
org.apache.openjpa.persistence.jpql.expressions.TestInMemoryScalarExpressions.testCoalesceExpressions(),31,67
org.apache.openjpa.persistence.jpql.expressions.TestInMemoryScalarExpressions.testNullIfExpressions(),33,68
org.apache.openjpa.persistence.jpql.expressions.TestInMemoryScalarExpressions.testSimpleCaseExpression(),32,67
org.apache.openjpa.persistence.jpql.expressions.TestInMemoryScalarExpressions.testGeneralCaseExpression(),29,67
"org.apache.openjpa.persistence.jpql.expressions.TestInMemoryScalarExpressions.createUser(String,String,Address,int,boolean)",12,57
org.apache.openjpa.persistence.jdbc.meta.TestRawField.TestRawField(String),7,11
org.apache.openjpa.persistence.jdbc.meta.TestRawField.setUp(),4,4
org.apache.openjpa.persistence.jdbc.meta.TestRawField.testRaw(),21,49
org.apache.openjpa.lib.meta.ResourceMetaDataIterator.ResourceMetaDataIterator(String),10,12
"org.apache.openjpa.lib.meta.ResourceMetaDataIterator.ResourceMetaDataIterator(String,ClassLoader)",30,72
org.apache.openjpa.lib.meta.ResourceMetaDataIterator.hasNext(),3,4
org.apache.openjpa.lib.meta.ResourceMetaDataIterator.next(),4,5
org.apache.openjpa.lib.meta.ResourceMetaDataIterator.getInputStream(),14,27
org.apache.openjpa.lib.meta.ResourceMetaDataIterator.getFile(),16,28
org.apache.openjpa.lib.meta.ResourceMetaDataIterator.close(),1,1
org.apache.openjpa.persistence.delimited.identifiers.Car2.Car2(),1,1
org.apache.openjpa.persistence.delimited.identifiers.Car2.Car2(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.Car2.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.Car2.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.Car2.getModel(),2,4
org.apache.openjpa.persistence.delimited.identifiers.Car2.setModel(String),5,10
org.apache.openjpa.persistence.delimited.identifiers.Car2.getColor(),2,4
org.apache.openjpa.persistence.delimited.identifiers.Car2.setName(String),5,10
org.apache.openjpa.jdbc.persistence.classcriteria.Item.Item(),1,1
org.apache.openjpa.jdbc.persistence.classcriteria.Item.Item(String),3,5
org.apache.openjpa.jdbc.persistence.classcriteria.Item.getId(),0,0
org.apache.openjpa.jdbc.persistence.classcriteria.Item.getTitle(),2,3
org.apache.openjpa.jdbc.persistence.classcriteria.Item.setTitle(String),10,16
org.apache.openjpa.jdbc.persistence.classcriteria.Item.getRating(),1,2
org.apache.openjpa.jdbc.persistence.classcriteria.Item.equals(Object),3,6
org.apache.openjpa.jdbc.persistence.classcriteria.Item.hashCode(),2,2
org.apache.openjpa.persistence.kernel.TestEJBInterfaces.TestEJBInterfaces(String),6,7
org.apache.openjpa.persistence.kernel.TestEJBInterfaces.setUp(),5,10
org.apache.openjpa.persistence.kernel.TestEJBInterfaces.testInterfaceField(),19,137
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.getEntityManagerFactory(),5,8
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.getSql(),3,3
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.getExpectedNotInCache(),2,2
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.getExpectedInCache(),2,2
"org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.assertCacheContents(Cache,boolean,boolean,boolean)",17,52
"org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.assertCacheables(Cache,boolean)",16,38
"org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.assertUncacheables(Cache,boolean)",16,38
"org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.assertUnspecified(Cache,boolean)",12,26
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.assertNoSql(Action),9,15
"org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.assertSqlInc(Action,int)",14,36
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.Action.run(),1,1
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.getCacheEnabled(),4,4
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testReadModeByass(),17,19
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testReadModeByass().$1.run(),16,23
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testRetrieveModeUse(),18,30
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testRetrieveModeUse().$2.run(),15,28
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testRetrieveModeUse().$3.run(),15,28
"org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.updateAndFind(Class<>,int,Class<>,int,CacheStoreMode,CacheRetrieveMode)",18,58
"org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.entityManagerStoreModeTest(CacheStoreMode,CacheStoreMode,boolean,boolean,int)",55,262
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testStoreModeUseBypass(),10,23
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testStoreModeUseUse(),7,16
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testRefresh(),26,78
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testStoreModeUseRefresh(),8,18
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.entityManagerStoreModeTest(),8,20
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testStoreModeBypassUse(),8,18
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testStoreModeBypassRefresh(),13,26
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testStoreModeRefreshUse(),8,18
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testStoreModeRefreshBypass(),9,20
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testStoreModeRefreshRefresh(),8,20
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testResultsFromQueryAreInCache(),26,80
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.testResultsFromFindAreInCache(),21,56
org.apache.openjpa.persistence.cache.jpa.AbstractCacheModeTestCase.getAlias(Class<>),13,20
org.apache.openjpa.persistence.jdbc.common.apps.HorizC.setStringC(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizC.getStringC(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizC.setIntC(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizC.getIntC(),0,0
org.apache.openjpa.persistence.common.apps.EmbeddedPC.getIntField(),1,2
org.apache.openjpa.persistence.common.apps.EmbeddedPC.setIntField(int),2,5
org.apache.openjpa.persistence.common.apps.EmbeddedPC.getStringField(),2,5
org.apache.openjpa.persistence.common.apps.EmbeddedPC.setStringField(String),3,10
org.apache.openjpa.persistence.delimited.identifiers.EntityE.EntityE(String),3,5
org.apache.openjpa.persistence.delimited.identifiers.EntityE.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityE.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityE.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityE.setName(String),4,10
"org.apache.openjpa.meta.ProxySetupStateManager.setProxyData(PersistenceCapable,ClassMetaData)",35,106
"org.apache.openjpa.meta.ProxySetupStateManager.getPCPrimaryKey(Object,int)",8,9
org.apache.openjpa.meta.ProxySetupStateManager.replaceStateManager(StateManager),4,6
org.apache.openjpa.meta.ProxySetupStateManager.isDirty(),3,3
org.apache.openjpa.meta.ProxySetupStateManager.isTransactional(),3,3
org.apache.openjpa.meta.ProxySetupStateManager.isPersistent(),3,3
org.apache.openjpa.meta.ProxySetupStateManager.isNew(),2,2
org.apache.openjpa.meta.ProxySetupStateManager.isDeleted(),3,3
org.apache.openjpa.meta.ProxySetupStateManager.isDetached(),3,3
org.apache.openjpa.meta.ProxySetupStateManager.getGenericContext(),5,5
org.apache.openjpa.meta.ProxySetupStateManager.dirty(String),4,4
org.apache.openjpa.meta.ProxySetupStateManager.fetchObjectId(),4,5
org.apache.openjpa.meta.ProxySetupStateManager.getVersion(),4,4
org.apache.openjpa.meta.ProxySetupStateManager.accessingField(int),4,4
org.apache.openjpa.meta.ProxySetupStateManager.serializing(),3,3
org.apache.openjpa.meta.ProxySetupStateManager.writeDetached(ObjectOutput),6,6
org.apache.openjpa.meta.ProxySetupStateManager.proxyDetachedDeserialized(int),6,6
"org.apache.openjpa.meta.ProxySetupStateManager.settingBooleanField(PersistenceCapable,int,boolean,boolean,int)",7,7
"org.apache.openjpa.meta.ProxySetupStateManager.settingCharField(PersistenceCapable,int,char,char,int)",7,7
"org.apache.openjpa.meta.ProxySetupStateManager.settingByteField(PersistenceCapable,int,byte,byte,int)",7,7
"org.apache.openjpa.meta.ProxySetupStateManager.settingShortField(PersistenceCapable,int,short,short,int)",7,7
"org.apache.openjpa.meta.ProxySetupStateManager.settingIntField(PersistenceCapable,int,int,int,int)",7,7
"org.apache.openjpa.meta.ProxySetupStateManager.settingLongField(PersistenceCapable,int,long,long,int)",7,7
"org.apache.openjpa.meta.ProxySetupStateManager.settingFloatField(PersistenceCapable,int,float,float,int)",7,7
"org.apache.openjpa.meta.ProxySetupStateManager.settingDoubleField(PersistenceCapable,int,double,double,int)",7,7
"org.apache.openjpa.meta.ProxySetupStateManager.settingStringField(PersistenceCapable,int,String,String,int)",8,10
"org.apache.openjpa.meta.ProxySetupStateManager.settingObjectField(PersistenceCapable,int,Object,Object,int)",8,10
"org.apache.openjpa.meta.ProxySetupStateManager.providedBooleanField(PersistenceCapable,int,boolean)",12,12
"org.apache.openjpa.meta.ProxySetupStateManager.providedCharField(PersistenceCapable,int,char)",12,12
"org.apache.openjpa.meta.ProxySetupStateManager.providedByteField(PersistenceCapable,int,byte)",12,12
"org.apache.openjpa.meta.ProxySetupStateManager.providedShortField(PersistenceCapable,int,short)",12,12
"org.apache.openjpa.meta.ProxySetupStateManager.providedIntField(PersistenceCapable,int,int)",12,12
"org.apache.openjpa.meta.ProxySetupStateManager.providedLongField(PersistenceCapable,int,long)",12,12
"org.apache.openjpa.meta.ProxySetupStateManager.providedFloatField(PersistenceCapable,int,float)",12,12
"org.apache.openjpa.meta.ProxySetupStateManager.providedDoubleField(PersistenceCapable,int,double)",12,12
"org.apache.openjpa.meta.ProxySetupStateManager.providedStringField(PersistenceCapable,int,String)",13,15
"org.apache.openjpa.meta.ProxySetupStateManager.providedObjectField(PersistenceCapable,int,Object)",5,7
"org.apache.openjpa.meta.ProxySetupStateManager.replaceBooleanField(PersistenceCapable,int)",6,6
"org.apache.openjpa.meta.ProxySetupStateManager.replaceCharField(PersistenceCapable,int)",6,6
"org.apache.openjpa.meta.ProxySetupStateManager.replaceByteField(PersistenceCapable,int)",6,6
"org.apache.openjpa.meta.ProxySetupStateManager.replaceShortField(PersistenceCapable,int)",6,6
"org.apache.openjpa.meta.ProxySetupStateManager.replaceIntField(PersistenceCapable,int)",6,6
"org.apache.openjpa.meta.ProxySetupStateManager.replaceLongField(PersistenceCapable,int)",6,6
"org.apache.openjpa.meta.ProxySetupStateManager.replaceFloatField(PersistenceCapable,int)",6,6
"org.apache.openjpa.meta.ProxySetupStateManager.replaceDoubleField(PersistenceCapable,int)",6,6
"org.apache.openjpa.meta.ProxySetupStateManager.replaceStringField(PersistenceCapable,int)",7,8
"org.apache.openjpa.meta.ProxySetupStateManager.replaceObjectField(PersistenceCapable,int)",7,8
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalB.setStringB(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalB.getStringB(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalB.setIntB(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalB.getIntB(),0,0
org.apache.openjpa.persistence.inheritance.TestInheritanceWithMSCID.setUp(),14,45
org.apache.openjpa.persistence.inheritance.TestInheritanceWithMSCID.testPersistableWithEntitiesInL1Cache(),38,113
org.apache.openjpa.persistence.inheritance.TestInheritanceWithMSCID.testPersistableWithEntitiesClearedFromL1Cache(),39,114
org.apache.openjpa.persistence.inheritance.TestInheritanceWithMSCID.query001TestLogic(boolean),45,133
org.apache.openjpa.persistence.inheritance.TestInheritanceWithMSCID.testQuery001WithL1(),15,21
org.apache.openjpa.persistence.inheritance.TestInheritanceWithMSCID.testQuery001NoL1(),15,21
org.apache.openjpa.persistence.compat.EntityC_B11JT.getId(),0,0
org.apache.openjpa.persistence.compat.EntityC_B11JT.getName(),2,3
org.apache.openjpa.persistence.compat.EntityC_B11JT.setName(String),3,6
org.apache.openjpa.persistence.compat.EntityC_B11JT.setBi11jt(Bi_1To1_JT),1,1
org.apache.openjpa.persistence.compat.EntityC_B11JT.getBi11jt(),0,0
org.apache.openjpa.persistence.compat.EntityC_B11JT.hashCode(),3,5
org.apache.openjpa.persistence.compat.EntityC_B11JT.equals(Object),4,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Office.Office(),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Office.Office(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Office.getAddress(),1,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Office.setAddress(Address),2,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Office.getDivision(),1,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Office.setDivision(Division),2,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Office.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Office.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Office.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Office.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Office.equals(Object),4,8
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Office.hashCode(),4,11
org.apache.openjpa.persistence.embed.attrOverrides.AddressXml.getStreet(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.AddressXml.setStreet(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.AddressXml.getCity(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.AddressXml.setCity(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.AddressXml.getState(),1,1
org.apache.openjpa.persistence.embed.attrOverrides.AddressXml.setState(String),2,2
org.apache.openjpa.persistence.embed.lazy.ReclinerId.setId(int),1,1
org.apache.openjpa.persistence.embed.lazy.ReclinerId.getId(),0,0
org.apache.openjpa.persistence.embed.lazy.ReclinerId.setColor(String),3,6
org.apache.openjpa.persistence.embed.lazy.ReclinerId.getColor(),2,3
org.apache.openjpa.persistence.embed.lazy.ReclinerId.equals(Object),6,14
org.apache.openjpa.persistence.embed.lazy.ReclinerId.hashCode(),3,5
org.apache.openjpa.persistence.detach.EntityA.EntityA(),1,1
"org.apache.openjpa.persistence.detach.EntityA.EntityA(long,String,String)",4,9
org.apache.openjpa.persistence.detach.EntityA.getId(),0,0
org.apache.openjpa.persistence.detach.EntityA.setId(long),1,1
org.apache.openjpa.persistence.detach.EntityA.getName(),2,3
org.apache.openjpa.persistence.detach.EntityA.setName(String),3,6
org.apache.openjpa.persistence.detach.EntityA.getDescription(),2,4
org.apache.openjpa.persistence.detach.EntityA.setDescription(String),4,10
org.apache.openjpa.persistence.detach.EntityA.getEntityB(),1,4
org.apache.openjpa.persistence.detach.EntityA.setEntityB(EntityB),3,10
org.apache.openjpa.persistence.detach.EntityA.getEntityC(),1,4
org.apache.openjpa.persistence.detach.EntityA.setEntityC(EntityC),3,10
org.apache.openjpa.persistence.detach.EntityA.getEntityD(),1,4
org.apache.openjpa.persistence.detach.EntityA.setEntityD(EntityD),3,10
org.apache.openjpa.persistence.detach.EntityA.getEntityE(),1,4
org.apache.openjpa.persistence.detach.EntityA.setEntityE(EntityE),3,10
org.apache.openjpa.persistence.detachment.TestAttachWithNoChanges.setUp(),4,6
org.apache.openjpa.persistence.detachment.TestAttachWithNoChanges.testAttachWithNoChangesChecksVersion(),33,55
org.apache.openjpa.persistence.detachment.TestAttachWithNoChanges.main(String[]),8,9
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCMappedSuperclass.getMappedSuperclassData(),4,7
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCMappedSuperclass.setMappedSuperclassData(String),5,14
org.apache.openjpa.persistence.discriminator.fetch.Person.getId(),0,0
org.apache.openjpa.persistence.discriminator.fetch.Person.setId(int),1,1
"org.apache.openjpa.persistence.enhance.identity.Dependent5.Dependent5(String,Employee5)",5,9
"org.apache.openjpa.persistence.enhance.identity.Dependent5.Dependent5(DependentId5,Employee5)",4,8
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeEnableSelective.getEntityManagerFactory(),20,43
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeEnableSelective.getListener(),4,10
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeEnableSelective.getSql(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeEnableSelective.getExpectedInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeEnableSelective.getExpectedNotInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeEnableSelective.testCacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeEnableSelective.testUncacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeEnableSelective.testUnspecified(),3,4
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.EntityB.getEntityBData(),3,3
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.EntityB.setEntityBData(String),4,6
org.apache.openjpa.persistence.inheritance.entity.RegularUser.getAdmin(),1,3
org.apache.openjpa.persistence.inheritance.entity.RegularUser.setAdmin(Admin),2,6
org.apache.openjpa.persistence.inheritance.mappedsuperclass.DerivedEntityFromMappedSuperWithoutId.getId(),0,0
org.apache.openjpa.persistence.inheritance.mappedsuperclass.DerivedEntityFromMappedSuperWithoutId.setId(long),1,1
org.apache.openjpa.persistence.inheritance.mappedsuperclass.DerivedEntityFromMappedSuperWithoutId.getName(),2,3
org.apache.openjpa.persistence.inheritance.mappedsuperclass.DerivedEntityFromMappedSuperWithoutId.setName(String),3,6
org.apache.openjpa.persistence.inheritance.mappedsuperclass.DerivedEntityFromMappedSuperWithoutId.getVersion(),1,2
org.apache.openjpa.persistence.inheritance.mappedsuperclass.DerivedEntityFromMappedSuperWithoutId.setVersion(int),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.ContractEmployee.ContractEmployee(),2,2
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.ContractEmployee.ContractEmployee(int,String,int,int)",7,12
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.ContractEmployee.verifyTerm(),14,19
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.ContractEmployee.getDailyRate(),2,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.ContractEmployee.setDailyRate(int),3,9
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.ContractEmployee.getTerm(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.ContractEmployee.setTerm(int),2,5
org.apache.openjpa.persistence.enhance.identity.Person2.getSsn(),1,2
org.apache.openjpa.persistence.enhance.identity.Person2.setSsn(long),2,5
org.apache.openjpa.persistence.enhance.identity.Person2.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.Person2.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.Person2.getMedical(),2,4
org.apache.openjpa.persistence.enhance.identity.Person2.setMedical(MedicalHistory2),3,7
org.apache.openjpa.persistence.enhance.identity.Person2.equals(Object),8,26
org.apache.openjpa.persistence.enhance.identity.Person2.hashCode(),5,13
org.apache.openjpa.persistence.cache.jpa.model.UncacheableEntity.getName(),2,3
org.apache.openjpa.persistence.cache.jpa.model.UncacheableEntity.setName(String),3,6
org.apache.openjpa.persistence.cache.jpa.model.UncacheableEntity.getId(),0,0
org.apache.openjpa.persistence.cache.jpa.model.UncacheableEntity.setId(int),1,1
org.apache.openjpa.persistence.cache.jpa.model.UncacheableEntity.getVersion(),1,2
org.apache.openjpa.persistence.cache.jpa.model.UncacheableEntity.setVersion(int),2,5
org.apache.openjpa.persistence.common.utils.BufferedLogFactory.newLogImpl(),3,6
org.apache.openjpa.persistence.common.utils.BufferedLogFactory.getBuffer(),5,7
org.apache.openjpa.persistence.common.utils.BufferedLogFactory.clear(),1,1
org.apache.openjpa.persistence.common.utils.BufferedLogFactory.clearDisallowedMessages(),2,4
org.apache.openjpa.persistence.common.utils.BufferedLogFactory.addDisallowedMessage(String),6,9
org.apache.openjpa.persistence.common.utils.BufferedLogFactory.removeDisallowedMessage(String),6,9
org.apache.openjpa.persistence.common.utils.BufferedLogFactory.getDisallowedMessages(),6,9
org.apache.openjpa.persistence.common.utils.BufferedLogFactory.assertLogMessage(String),7,8
org.apache.openjpa.persistence.common.utils.BufferedLogFactory.assertNoLogMessage(String),7,8
org.apache.openjpa.persistence.common.utils.BufferedLogFactory.setBufferSize(int),3,9
org.apache.openjpa.persistence.common.utils.BufferedLogFactory.getBufferSize(),2,4
"org.apache.openjpa.persistence.common.utils.BufferedLogFactory.BufferedLog.log(short,String,Throwable)",18,36
org.apache.openjpa.persistence.compat.LineItem.LineItem(),2,2
"org.apache.openjpa.persistence.compat.LineItem.LineItem(String,int)",4,6
org.apache.openjpa.persistence.compat.LineItem.getId(),1,1
org.apache.openjpa.persistence.compat.LineItem.setId(String),2,2
org.apache.openjpa.persistence.compat.LineItem.getQuantity(),1,2
org.apache.openjpa.persistence.compat.LineItem.setQuantity(int),2,5
org.apache.openjpa.persistence.compat.LineItem.getInvoice(),1,3
org.apache.openjpa.persistence.compat.LineItem.setInvoice(Invoice),2,6
org.apache.openjpa.persistence.embed.Item1.getId(),0,0
org.apache.openjpa.persistence.embed.Item1.setId(int),1,1
org.apache.openjpa.persistence.embed.Item1.getImages(),3,5
"org.apache.openjpa.persistence.embed.Item1.addImage(String,String)",6,13
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.setUp(),7,9
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.setCandidate(Query,Class)",15,37
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.queryQualifiedId(boolean),35,102
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.testQueryObject(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.createObj(),15,23
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.createDepartment(EntityManager,int)",15,27
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.createEmployee(EntityManager,int)",6,9
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.findObj(),11,22
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.updateObj(EntityManager,Department)",22,44
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.deleteObj(EntityManager,Department)",10,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.assertDepartment(Department),14,27
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.queryObj(),4,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.queryDepartment(),14,28
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.queryEmployee(),14,28
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.TestSpec10_1_26_Ex1.assertEmployee(Employee),3,6
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.setUp(),27,41
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.tearDown(),10,16
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.testEmptyBrokerSerialization(),18,42
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.testNontransactionalBrokerSerialization(),22,34
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.testUnflushedOptimisticTxBrokerSerialization(),35,73
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.testFlushedOptimisticTxBrokerSerialization(),26,31
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.testConnectedOptimisticTxBrokerSerialization(),24,29
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.testEmptyPessimisticTxBrokerSerialization(),28,35
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.testNonEmptyPessimisticTxBrokerSerialization(),30,37
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.testFetchConfigurationMutations(),20,67
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.testInMemorySavepointsWithNewInstances(),33,82
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.testInMemorySavepointsWithModifiedInstances(),32,80
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.testEventManagers(),32,130
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.serialize(Object),12,29
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.deserializeEM(byte[]),5,10
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.deserialize(byte[]),13,31
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.close(EntityManager),6,8
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.getManagedType(),2,2
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.newManagedInstance(),2,2
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.modifyInstance(T),2,2
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.getModifiedValue(T),3,3
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.graphSize(),8,9
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.getSecondaryType(),4,5
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.TxListener.TxListener(),1,1
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.TxListener.afterBegin(TransactionEvent),6,10
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.TxListener.readObject(ObjectInputStream),8,12
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.LifeListener.afterRefresh(LifecycleEvent),6,10
org.apache.openjpa.kernel.AbstractBrokerSerializationTest<T>.LifeListener.readObject(ObjectInputStream),9,13
org.apache.openjpa.persistence.callbacks.MSCListenerEntity.getId(),0,0
org.apache.openjpa.persistence.callbacks.MSCListenerEntity.setId(long),1,1
org.apache.openjpa.persistence.callbacks.MSCListenerEntity.getValue(),1,2
org.apache.openjpa.persistence.callbacks.MSCListenerEntity.setValue(int),2,5
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.setUp(),16,22
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.testAssocOverride1(),16,26
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.testAssocOverride2(),15,23
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.createObj1(),15,23
"org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.createEmployee(EntityManager,int)",30,186
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.createPhoneNumber(EntityManager),6,10
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.findObj1(),7,11
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.queryObj1(),15,28
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.assertEmployee(Employee),14,34
"org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.assertPhoneNumber(PhoneNumber,int)",6,10
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.createObj2(),15,23
"org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.createPartTimeEmployee(EntityManager,int)",16,50
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.findObj2(),11,15
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.queryObj2(),23,37
org.apache.openjpa.persistence.embed.attrOverrides.TestAssocOverrides.assertMappingOverrides(String),29,118
org.apache.openjpa.persistence.kernel.TestInheritance.TestInheritance(),4,6
org.apache.openjpa.persistence.kernel.TestInheritance.TestInheritance(String),4,5
org.apache.openjpa.persistence.kernel.TestInheritance.setUp(),13,34
org.apache.openjpa.persistence.kernel.TestInheritance.testGetAllRuntimeTest1s(),17,22
org.apache.openjpa.persistence.kernel.TestInheritance.testGetAllRuntimeTest2s(),17,24
org.apache.openjpa.persistence.kernel.TestInheritance.testGetAllRuntimeTest3s(),17,24
org.apache.openjpa.persistence.kernel.TestInheritance.testGetJustRuntimeTest1s(),21,38
org.apache.openjpa.persistence.kernel.TestInheritance.testGetJustRuntimeTest2s(),21,39
org.apache.openjpa.persistence.kernel.TestInheritance.testGetJustRuntimeTest3(),21,38
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullName.FullName(),1,1
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullName.FullName(String,String)",2,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullName.getFName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullName.setFName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullName.getLName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullName.setLName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullName.equals(Object),3,11
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullName.hashCode(),4,13
org.apache.openjpa.persistence.jdbc.query.cache.TestNonPrimaryKeyQueryParameters.setUp(),16,24
org.apache.openjpa.persistence.jdbc.query.cache.TestNonPrimaryKeyQueryParameters.testSelectQueryWithPrimaryKeyParameter(),27,49
org.apache.openjpa.persistence.jdbc.query.cache.TestNonPrimaryKeyQueryParameters.testSelectQueryWithNoParameter(),23,41
org.apache.openjpa.persistence.jdbc.query.cache.TestNonPrimaryKeyQueryParameters.testFind(),27,49
org.apache.openjpa.persistence.jdbc.query.cache.TestNonPrimaryKeyQueryParameters.testSelectSubClass(),19,40
org.apache.openjpa.persistence.jdbc.query.cache.TestNonPrimaryKeyQueryParameters.testSelectBaseClass(),18,28
org.apache.openjpa.persistence.jdbc.query.cache.TestNonPrimaryKeyQueryParameters.createDepartment(String),24,57
org.apache.openjpa.persistence.jdbc.query.cache.TestNonPrimaryKeyQueryParameters.createInvoice(),21,42
org.apache.openjpa.persistence.enhance.identity.Employee1.getEmpId(),1,2
org.apache.openjpa.persistence.enhance.identity.Employee1.setEmpId(int),2,5
org.apache.openjpa.persistence.enhance.identity.Employee1.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.Employee1.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.Employee1.getDependents(),3,4
org.apache.openjpa.persistence.enhance.identity.Employee1.setDependents(List<Dependent1>),4,7
org.apache.openjpa.persistence.enhance.identity.Employee1.addDependent(Dependent1),3,5
org.apache.openjpa.persistence.enhance.identity.Employee1.equals(Object),9,26
org.apache.openjpa.persistence.enhance.identity.Employee1.hashCode(),7,19
"org.apache.openjpa.util.MapChangeTrackerImpl.MapChangeTrackerImpl(Map,boolean)",9,16
org.apache.openjpa.util.MapChangeTrackerImpl.getTrackKeys(),2,3
org.apache.openjpa.util.MapChangeTrackerImpl.setTrackKeys(boolean),3,6
"org.apache.openjpa.util.MapChangeTrackerImpl.added(Object,Object)",5,10
"org.apache.openjpa.util.MapChangeTrackerImpl.removed(Object,Object)",5,10
"org.apache.openjpa.util.MapChangeTrackerImpl.changed(Object,Object,Object)",7,14
org.apache.openjpa.util.MapChangeTrackerImpl.add(Object),23,41
org.apache.openjpa.util.MapChangeTrackerImpl.remove(Object),22,37
org.apache.openjpa.util.MapChangeTrackerImpl.change(Object),19,38
org.apache.openjpa.persistence.compat.Bi_1To1_JT.getId(),0,0
org.apache.openjpa.persistence.compat.Bi_1To1_JT.getName(),2,3
org.apache.openjpa.persistence.compat.Bi_1To1_JT.setName(String),3,6
org.apache.openjpa.persistence.compat.Bi_1To1_JT.getEntityC(),1,3
org.apache.openjpa.persistence.compat.Bi_1To1_JT.setEntityC(EntityC_B11JT),2,6
org.apache.openjpa.persistence.compat.Bi_1To1_JT.hashCode(),3,5
org.apache.openjpa.persistence.compat.Bi_1To1_JT.equals(Object),4,9
org.apache.openjpa.enhance.TestGetDeclaredMethod.testGetDeclaredMethod(),11,18
org.apache.openjpa.enhance.TestGetDeclaredMethod.testMostDerived(),17,45
org.apache.openjpa.enhance.TestGetDeclaredMethod.testGenerics(),20,33
org.apache.openjpa.enhance.TestGetDeclaredMethod.Iface.getObject(),1,2
org.apache.openjpa.enhance.TestGetDeclaredMethod.Impl.getObject(),2,3
org.apache.openjpa.enhance.TestGetDeclaredMethod.Other.getObject(),2,2
org.apache.openjpa.enhance.TestGetDeclaredMethod.GenericsIface<T>.getObject(),1,1
org.apache.openjpa.enhance.TestGetDeclaredMethod.GenericsImpl.getObject(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.setFstr(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.getFstr(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.setFint(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.getFint(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.setFdbl(double),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.getFdbl(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.setE(AttachE),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.getE(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.setStrings(List),3,6
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.getStrings(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.ID.ID(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.ID.ID(String),7,14
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.ID.hashCode(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.ID.toString(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.ID.equals(Object),2,3
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.setId1(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.getId1(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.setId2(String),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.getId2(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.setEmbeddedC(AttachC),3,6
org.apache.openjpa.persistence.jdbc.common.apps.AttachF.getEmbeddedC(),2,3
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.ConcurrentReferenceHashSet(int),14,56
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.add(E),3,5
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.addAll(Collection<>),4,6
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.clear(),1,1
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.contains(Object),4,6
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.containsAll(Collection<>),4,6
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.isEmpty(),2,3
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.iterator(),2,4
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.remove(Object),4,6
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.removeAll(Collection<>),4,6
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.retainAll(Collection<>),4,6
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.size(),2,3
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.toArray(),3,4
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.toArray(T[]),3,5
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.hashCode(),3,5
org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet<E>.equals(Object),7,19
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.Company.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.Company.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.Company.getOrganization(),3,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.Company.addToOrganization(VicePresident),6,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.Company.removeFromOrganization(Division),4,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.Company.getOrganization(Division),5,5
org.apache.openjpa.persistence.jdbc.meta.TestEJBCustomMapping.TestEJBCustomMapping(String),6,7
org.apache.openjpa.persistence.jdbc.meta.TestEJBCustomMapping.setUp(),12,21
org.apache.openjpa.persistence.jdbc.meta.TestEJBCustomMapping.testInsert(),11,17
org.apache.openjpa.persistence.jdbc.meta.TestEJBCustomMapping.testUpdate(),13,29
org.apache.openjpa.persistence.jdbc.common.apps.AttachB.setBstr(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.AttachB.getBstr(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.AttachB.setBint(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachB.getBint(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachB.setBdbl(double),2,5
org.apache.openjpa.persistence.jdbc.common.apps.AttachB.getBdbl(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachB.setDs(Set),1,2
org.apache.openjpa.persistence.jdbc.common.apps.AttachB.getDs(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.AttachB.setStringIntMap(Map),3,10
org.apache.openjpa.persistence.jdbc.common.apps.AttachB.getStringIntMap(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.BuildSchemaPC.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.BuildSchemaPC.setStringField(String),3,10
org.apache.openjpa.persistence.jdbc.common.apps.BuildSchemaPC.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.BuildSchemaPC.setIntField(int),2,5
org.apache.openjpa.persistence.fetchgroups.FGEmployee.FGEmployee(),1,1
"org.apache.openjpa.persistence.fetchgroups.FGEmployee.FGEmployee(int,String,String,String,FGDepartment,FGAddress,FGManager,String)",10,29
org.apache.openjpa.persistence.fetchgroups.FGEmployee.getAddress(),1,3
org.apache.openjpa.persistence.fetchgroups.FGEmployee.setAddress(FGAddress),2,6
org.apache.openjpa.persistence.fetchgroups.FGEmployee.getDept(),2,3
org.apache.openjpa.persistence.fetchgroups.FGEmployee.setDept(FGDepartment),3,6
org.apache.openjpa.persistence.fetchgroups.FGEmployee.getDescription(),2,3
org.apache.openjpa.persistence.fetchgroups.FGEmployee.setDescription(String),4,6
org.apache.openjpa.persistence.fetchgroups.FGEmployee.getFirstName(),2,3
org.apache.openjpa.persistence.fetchgroups.FGEmployee.setFirstName(String),3,6
org.apache.openjpa.persistence.fetchgroups.FGEmployee.getId(),0,0
org.apache.openjpa.persistence.fetchgroups.FGEmployee.setId(int),1,1
org.apache.openjpa.persistence.fetchgroups.FGEmployee.getLastName(),2,3
org.apache.openjpa.persistence.fetchgroups.FGEmployee.setLastName(String),3,6
org.apache.openjpa.persistence.fetchgroups.FGEmployee.getManager(),1,3
org.apache.openjpa.persistence.fetchgroups.FGEmployee.setManager(FGManager),2,6
org.apache.openjpa.persistence.fetchgroups.FGEmployee.getRating(),2,3
org.apache.openjpa.persistence.fetchgroups.FGEmployee.setRating(String),3,6
org.apache.openjpa.persistence.fetchgroups.FGEmployee.toString(),3,5
org.apache.openjpa.persistence.generationtype.Dog4.getId(),0,0
org.apache.openjpa.persistence.generationtype.Dog4.setId(int),1,1
org.apache.openjpa.persistence.generationtype.Dog4.getName(),2,3
org.apache.openjpa.persistence.generationtype.Dog4.setName(String),3,6
org.apache.openjpa.persistence.exception.TestException.setUp(),3,4
org.apache.openjpa.persistence.exception.TestException.disabledTestThrowsOptimisticException(),36,93
org.apache.openjpa.persistence.exception.TestException.testThrowsEntityExistsException(),18,38
org.apache.openjpa.persistence.exception.TestException.testThrowsEntityNotFoundException(),20,44
org.apache.openjpa.persistence.exception.TestException.testErrorCodeConfigurationHasAllKnownDictionaries(),28,48
org.apache.openjpa.persistence.exception.TestException.testIllegalArgumennExceptionOnInvalidQuery(),19,37
org.apache.openjpa.persistence.exception.TestException.testIllegalArgumennExceptionOnInvalidNamedQuery(),15,33
"org.apache.openjpa.persistence.exception.TestException.assertException(Throwable,Class)",24,55
"org.apache.openjpa.persistence.exception.TestException.isExpectedException(Throwable,Class)",10,22
"org.apache.openjpa.persistence.exception.TestException.print(Throwable,int)",14,31
org.apache.openjpa.persistence.compat.Uni_1ToM_FK.getId(),0,0
org.apache.openjpa.persistence.compat.Uni_1ToM_FK.getName(),2,3
org.apache.openjpa.persistence.compat.Uni_1ToM_FK.setName(String),3,6
org.apache.openjpa.persistence.compat.Uni_1ToM_FK.getEntityCs(),3,5
org.apache.openjpa.persistence.compat.Uni_1ToM_FK.setEntityCs(List<EntityC_U1MFK>),4,8
org.apache.openjpa.persistence.compat.Uni_1ToM_FK.hashCode(),3,5
org.apache.openjpa.persistence.compat.Uni_1ToM_FK.equals(Object),6,19
org.apache.openjpa.persistence.jdbc.common.apps.BaseSub1.getBaseSub1Field(),3,6
org.apache.openjpa.persistence.jdbc.common.apps.BaseSub1.setBaseSub1Field(int),4,13
org.apache.openjpa.persistence.criteria.results.Item.getProduct(),2,3
org.apache.openjpa.persistence.criteria.results.Item.setProduct(Producer),3,6
org.apache.openjpa.persistence.criteria.results.Item.getId(),0,0
org.apache.openjpa.persistence.criteria.results.Item.getOrder(),0,0
org.apache.openjpa.persistence.criteria.results.Item.setOrder(Order),1,1
org.apache.openjpa.persistence.CallbackMode.CallbackMode(int),3,6
org.apache.openjpa.persistence.CallbackMode.toEnumSet(int),12,56
org.apache.openjpa.persistence.CallbackMode.fromEnumSet(EnumSet<CallbackMode>),4,15
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.setUp(),9,11
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.testQueryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.setCandidate(Query,Class)",15,37
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.queryQualifiedId(boolean),27,118
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.createObj(EntityManagerFactory),15,27
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.createStudent(EntityManager,int)",12,26
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.createCourse(EntityManager,int)",6,10
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.createSemester(EntityManager,int)",6,10
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.findObj(EntityManagerFactory),10,21
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.assertStudent(Student),5,8
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.assertCourse(Course),3,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.assertSemester(Semester),3,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.queryObj(EntityManagerFactory),9,15
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.queryStudent(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.queryCourse(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.TestSpec10_1_29_Ex3.querySemester(EntityManagerFactory),15,32
org.apache.openjpa.persistence.datacache.Item.getId(),0,0
org.apache.openjpa.persistence.datacache.Item.setId(int),1,1
org.apache.openjpa.persistence.datacache.Item.getVersion(),1,2
org.apache.openjpa.persistence.datacache.Item.setVersion(int),2,5
org.apache.openjpa.persistence.datacache.Item.getName(),2,3
org.apache.openjpa.persistence.datacache.Item.setName(String),3,6
org.apache.openjpa.persistence.datacache.Item.getType(),2,3
org.apache.openjpa.persistence.datacache.Item.setType(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.CustomMappingPC.CustomMappingPC(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.CustomMappingPC.CustomMappingPC(int),2,2
org.apache.openjpa.persistence.jdbc.common.apps.CustomMappingPC.isFemale(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.CustomMappingPC.setFemale(boolean),2,5
org.apache.openjpa.persistence.jdbc.common.apps.CustomMappingPC.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.CustomMappingPC.setName(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.CustomMappingPC.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.CustomMappingPC.setId(int),1,1
org.apache.openjpa.persistence.criteria.Contact.getPhones(),3,4
org.apache.openjpa.persistence.criteria.Contact.addPhone(Phone),3,7
org.apache.openjpa.persistence.criteria.Contact.getAddress(),1,3
org.apache.openjpa.persistence.criteria.Contact.setAddress(Address),2,6
org.apache.openjpa.persistence.jdbc.sqlcache.Merchandise.getId(),0,0
org.apache.openjpa.persistence.jdbc.sqlcache.Merchandise.setId(long),1,1
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.setUp(),9,19
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.tearDown(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.testExclusionPatternsAreSet(),17,38
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.testCachePopulationSetUp(),7,7
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.testAddExclusionPatternDisallowsCacheing(),14,29
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.testAddExclusionPatternMakesExistingEntryInvalid(),19,41
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.testRemoveExclusionPatternAllowsCacheing(),15,43
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.testRemoveExclusionPatternDoesNotRemoveUserProhbitedKeys(),21,65
"org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCacheExclusion.assertContent(String[],String[])",11,28
org.apache.openjpa.persistence.graph.TestPersistentGraph.setUp(),13,19
org.apache.openjpa.persistence.graph.TestPersistentGraph.testMapping(),19,39
org.apache.openjpa.persistence.graph.TestPersistentGraph.printMapping(FieldMapping),13,65
"org.apache.openjpa.persistence.graph.TestPersistentGraph.getFieldMapping(Class<>,String)",18,43
"org.apache.openjpa.persistence.graph.TestPersistentGraph.assertStrategy(Class<>,String,Class<>,Class<>)",16,77
"org.apache.openjpa.persistence.graph.TestPersistentGraph.getStrategy(Class<>,String)",25,63
org.apache.openjpa.persistence.graph.TestPersistentGraph.testCreateGraph(),23,52
org.apache.openjpa.persistence.graph.TestPersistentGraph.testQueryRelation(),35,86
org.apache.openjpa.persistence.graph.TestPersistentGraph.testQueryRelationOnSourceParameter(),21,41
org.apache.openjpa.persistence.graph.TestPersistentGraph.testQueryRelationOnSingleAttributeKey(),23,45
org.apache.openjpa.persistence.graph.TestPersistentGraph.testQueryRelationOnSingleAttributeKeyValue(),26,61
org.apache.openjpa.persistence.graph.TestPersistentGraph.testQueryRelationOnMultipleAttributeKeyValuePairs(),32,145
org.apache.openjpa.persistence.graph.TestPersistentGraph.testAddRemoveAttribute(),38,107
org.apache.openjpa.persistence.graph.TestPersistentGraph.isPopulated(),8,8
org.apache.openjpa.persistence.graph.TestPersistentGraph.createData(),35,112
"org.apache.openjpa.persistence.graph.TestPersistentGraph.assertDataEquals(Graph<Object>,People[],City[])",20,95
org.apache.openjpa.persistence.graph.TestPersistentGraph.indexOf(People),4,6
org.apache.openjpa.persistence.graph.TestPersistentGraph.indexOf(City),6,9
org.apache.openjpa.persistence.jdbc.schema.TestClassSequenceFactory.TestClassSequenceFactory(),5,8
org.apache.openjpa.persistence.jdbc.schema.TestClassSequenceFactory.TestClassSequenceFactory(String),4,6
org.apache.openjpa.persistence.jdbc.schema.TestClassSequenceFactory.setUp(),30,60
org.apache.openjpa.persistence.jdbc.schema.TestClassSequenceFactory.testSequence(),19,39
org.apache.openjpa.persistence.jdbc.schema.TestClassSequenceFactory.testExtensions(),22,69
org.apache.openjpa.persistence.jdbc.schema.TestClassSequenceFactory.adjustConfiguration(JDBCConfiguration),18,29
org.apache.openjpa.persistence.jdbc.schema.TestClassSequenceFactory.main(String[]),3,4
"org.apache.openjpa.persistence.jdbc.schema.TestClassSequenceFactory.UpdateThread.UpdateThread(Set,JDBCConfiguration)",6,11
org.apache.openjpa.persistence.jdbc.schema.TestClassSequenceFactory.UpdateThread.run(),15,28
org.apache.openjpa.persistence.jdbc.order.BaseTestElement2.BaseTestElement2(),3,3
org.apache.openjpa.persistence.jdbc.order.BaseTestElement2.BaseTestElement2(String),5,7
org.apache.openjpa.persistence.jdbc.order.BaseTestElement2.setName(String),3,6
org.apache.openjpa.persistence.jdbc.order.BaseTestElement2.getName(),2,3
org.apache.openjpa.persistence.jdbc.order.BaseTestElement2.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.BaseTestElement2.getId(),0,0
org.apache.openjpa.persistence.jdbc.order.BaseTestElement2.equals(Object),9,22
org.apache.openjpa.persistence.inheritance.TestCallbackEntity.getPersistenceUnitName(),5,5
org.apache.openjpa.persistence.inheritance.TestCallbackEntity.testCallbackEntity(),48,87
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCLeafB2.getLeafB2Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCLeafB2.setLeafB2Data(String),4,10
org.apache.openjpa.persistence.identity.TestGenerationType.setUp(),11,18
org.apache.openjpa.persistence.identity.TestGenerationType.supportsAutoAssign(),14,18
org.apache.openjpa.persistence.identity.TestGenerationType.testCreateEntityManager(),22,48
org.apache.openjpa.persistence.identity.TestGenerationType.testPersist(),16,20
org.apache.openjpa.persistence.identity.TestGenerationType.testQuery(),30,52
org.apache.openjpa.persistence.identity.TestGenerationType.testPersistWithoutGetGeneratedKeys(),4,6
org.apache.openjpa.persistence.identity.TestGenerationType.testQueryWithoutGetGeneratedKeys(),4,6
org.apache.openjpa.persistence.identity.TestGenerationType.main(String[]),8,9
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCLeafD1.getLeafD1Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCLeafD1.setLeafD1Data(String),4,10
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCMappedSuperclass.getMappedSuperclassData(),4,7
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCMappedSuperclass.setMappedSuperclassData(String),5,14
org.apache.openjpa.persistence.inheritance.entity.MidClass.setMidClassName(String),4,10
org.apache.openjpa.persistence.inheritance.entity.MidClass.getMidClassName(),3,5
org.apache.openjpa.persistence.inheritance.entity.MidClass.toString(),3,7
org.apache.openjpa.persistence.jpql.version.type.ShortVersionEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.version.type.ShortVersionEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.version.type.ShortVersionEntity.getVersion(),1,2
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLPrimitiveType.UMLPrimitiveType(),3,3
org.apache.openjpa.persistence.kernel.TestEJBLocales.TestEJBLocales(String),6,7
org.apache.openjpa.persistence.kernel.TestEJBLocales.setUp(),4,9
org.apache.openjpa.persistence.kernel.TestEJBLocales.testLocales(),21,68
"org.apache.openjpa.persistence.kernel.TestEJBLocales.findAll(Class,EntityManager)",10,12
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Site1.getStores(),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Site1.setStores(List<Store1>),4,9
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Site1.setSiteName(String),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Site1.getSiteName(),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Site1.setSiteDescription(String),4,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Site1.getSiteDescription(),3,5
org.apache.openjpa.persistence.inheritance.entity.FTEmployee.getSalary(),1,2
org.apache.openjpa.persistence.inheritance.entity.FTEmployee.setSalary(double),2,5
org.apache.openjpa.persistence.criteria.TestSubqueries.testExist(),17,44
org.apache.openjpa.persistence.criteria.TestSubqueries.testNotExist(),18,59
org.apache.openjpa.persistence.criteria.TestSubqueries.testAny(),18,61
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery01(),17,41
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery02(),15,46
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery03(),15,44
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery04(),18,35
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery05(),12,26
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery06(),12,24
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery07(),12,26
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery08(),16,51
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery09(),17,49
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery10(),15,36
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery11(),16,54
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery12(),17,45
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery13(),20,43
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery14(),21,75
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery15(),16,39
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery16(),15,43
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery17(),14,42
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery18(),18,36
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery19(),14,29
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery20(),15,37
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery21(),23,82
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery22(),23,75
org.apache.openjpa.persistence.criteria.TestSubqueries.testSubquery23(),22,69
org.apache.openjpa.persistence.jdbc.order.Inning.Inning(),1,1
"org.apache.openjpa.persistence.jdbc.order.Inning.Inning(int,int,int)",4,7
org.apache.openjpa.persistence.jdbc.order.Inning.setInningNumber(int),2,3
org.apache.openjpa.persistence.jdbc.order.Inning.getInningNumber(),1,2
org.apache.openjpa.persistence.jdbc.order.Inning.setHitsHome(int),3,9
org.apache.openjpa.persistence.jdbc.order.Inning.getHitsHome(),2,4
org.apache.openjpa.persistence.jdbc.order.Inning.setHitsAway(int),2,5
org.apache.openjpa.persistence.jdbc.order.Inning.getHitsAway(),1,2
org.apache.openjpa.persistence.jdbc.order.Inning.equals(Object),6,16
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeNone.getEntityManagerFactory(),19,42
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeNone.getListener(),4,10
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeNone.getSql(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeNone.getCacheEnabled(),2,2
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeNone.testCacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeNone.testUncacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeNone.testUnspecified(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeNone.getExpectedInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeNone.getExpectedNotInCache(),2,4
org.apache.openjpa.persistence.datacache.TestM2MInDataCache.setUp(),10,13
org.apache.openjpa.persistence.datacache.TestM2MInDataCache.populate(EntityManager),11,41
"org.apache.openjpa.persistence.datacache.TestM2MInDataCache.validateGraph(M2MEntityE,M2MEntityE,M2MEntityF,M2MEntityF)",5,26
org.apache.openjpa.persistence.datacache.TestM2MInDataCache.testM2MDataCache(),13,35
org.apache.openjpa.persistence.datacache.TestM2MInDataCache.testEagerFetch(),19,41
org.apache.openjpa.jdbc.kernel.TestCollectionTracking.setUp(),4,5
org.apache.openjpa.jdbc.kernel.TestCollectionTracking.testCollectTracking(),11,50
"org.apache.openjpa.jdbc.kernel.TestCollectionTracking.assertA(int,int,int,String)",22,48
"org.apache.openjpa.jdbc.kernel.TestCollectionTracking.modifyA(int,int,int,String)",34,102
org.apache.openjpa.jdbc.kernel.TestCollectionTracking.clearTables(),15,30
org.apache.openjpa.persistence.jdbc.query.cache.AbstractQueryCacheTest.setUp(Object),41,70
org.apache.openjpa.persistence.jdbc.query.cache.AbstractQueryCacheTest.tearDown(),4,7
org.apache.openjpa.persistence.jdbc.query.cache.AbstractQueryCacheTest.reCreateData(),26,57
org.apache.openjpa.persistence.jdbc.query.cache.AbstractQueryCacheTest.deleteAllData(),19,45
org.apache.openjpa.persistence.jdbc.query.cache.AbstractQueryCacheTest.loadQueryCache(),22,31
org.apache.openjpa.persistence.jdbc.query.cache.AbstractQueryCacheTest.updateAnEntity(),17,28
org.apache.openjpa.persistence.jdbc.query.cache.AbstractQueryCacheTest.getQueryCache(),19,40
org.apache.openjpa.persistence.jdbc.query.cache.AbstractQueryCacheTest.queryCacheGet(),11,24
org.apache.openjpa.persistence.jdbc.query.cache.AbstractQueryCacheTest.checkSupportsIdentityGenerationType(),15,21
org.apache.openjpa.persistence.jdbc.query.cache.AbstractQueryCacheTest.testEviction(),98,201
org.apache.openjpa.persistence.datacache.common.apps.EmbeddedEntity.getMarker(),2,3
org.apache.openjpa.persistence.datacache.common.apps.EmbeddedEntity.setMarker(String),3,6
org.apache.openjpa.persistence.jdbc.query.domain.Scrabble.getTile(),1,2
org.apache.openjpa.persistence.jdbc.query.domain.Scrabble.setTile(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.Cat2.Cat2(),1,1
org.apache.openjpa.persistence.delimited.identifiers.Cat2.Cat2(int),1,1
org.apache.openjpa.persistence.merge.GrandChildPK.getChild(),1,3
org.apache.openjpa.persistence.merge.GrandChildPK.setChild(ChildPK),2,6
org.apache.openjpa.persistence.merge.GrandChildPK.getGrandChildKey(),4,7
org.apache.openjpa.persistence.merge.GrandChildPK.setGrandChildKey(Integer),5,14
org.apache.openjpa.persistence.merge.GrandChildPK.hashCode(),7,23
org.apache.openjpa.persistence.merge.GrandChildPK.equals(Object),6,29
org.apache.openjpa.kernel.TestBrokerFactoryListenerRegistry.setUp(),3,4
org.apache.openjpa.kernel.TestBrokerFactoryListenerRegistry.createEMF(Object),14,33
org.apache.openjpa.kernel.TestBrokerFactoryListenerRegistry.createEMF(Object).$1.beforePersist(LifecycleEvent),4,6
org.apache.openjpa.kernel.TestBrokerFactoryListenerRegistry.createEMF(Object).$2.afterBegin(TransactionEvent),4,6
org.apache.openjpa.kernel.TestBrokerFactoryListenerRegistry.testLifecycleListenerRegistry(),18,29
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCLeafA.getLeafAData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCLeafA.setLeafAData(String),4,10
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.TimeEntity(),2,2
"org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.TimeEntity(int,String,int)",5,9
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.getName(),2,3
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.setName(String),3,6
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.getValue(),1,2
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.setValue(int),2,5
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.getCal2Timestamp(),3,5
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.setCal2Timestamp(Calendar),4,10
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.getCal2Time(),3,5
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.setCal2Time(Calendar),4,10
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.getCal2Date(),3,5
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.setCal2Date(Calendar),4,10
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.getUDate2Timestamp(),5,7
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.setUDate2Timestamp(java.util.Date),6,12
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.getUDate2Time(),5,7
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.setUDate2Time(java.util.Date),6,12
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.getUDate2SDate(),4,7
org.apache.openjpa.persistence.jdbc.query.domain.TimeEntity.setUDate2SDate(java.util.Date),5,12
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCLeafB2.getLeafB2Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCLeafB2.setLeafB2Data(String),4,10
org.apache.openjpa.persistence.inheritance.entity.BaseClass4.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entity.BaseClass4.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.BaseClass4.setVersion(int),2,5
org.apache.openjpa.persistence.inheritance.entity.BaseClass4.getVersion(),1,2
org.apache.openjpa.persistence.inheritance.entity.BaseClass4.setName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.BaseClass4.getName(),2,3
org.apache.openjpa.persistence.inheritance.entity.BaseClass4.toString(),3,6
org.apache.openjpa.persistence.detachment.TestDetachment.setUp(),3,4
org.apache.openjpa.persistence.detachment.TestDetachment.testAttachWithNewString(),8,19
org.apache.openjpa.persistence.detachment.TestDetachment.testSetSameStringInstance(),9,17
org.apache.openjpa.persistence.detachment.TestDetachment.testSetSameString(),9,16
org.apache.openjpa.persistence.detachment.TestDetachment.prepare(),16,26
org.apache.openjpa.persistence.detachment.TestDetachment.detach(int),11,19
org.apache.openjpa.persistence.detachment.TestDetachment.attach(Record),14,21
org.apache.openjpa.persistence.dynamicschema.TestResWordEntity.setUp(),1,1
org.apache.openjpa.persistence.dynamicschema.TestResWordEntity.testMultipleSchemafactories1(),29,64
org.apache.openjpa.persistence.dynamicschema.TestResWordEntity.testMultipleSchemafactories2(),29,64
org.apache.openjpa.persistence.dynamicschema.TestResWordEntity.testMultipleSchemafactories3(),29,58
org.apache.openjpa.persistence.dynamicschema.TestResWordEntity.testMultipleSchemafactories4(),26,56
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraintWithXMLDescriptor.setUp(Object),7,10
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraintWithXMLDescriptor.getPersistenceUnitName(),8,8
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraintWithXMLDescriptor.testMapping(),37,106
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraintWithXMLDescriptor.supportsUniqueConstraints(),16,30
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraintWithXMLDescriptor.getUniqueConstraint(String),19,42
"org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraintWithXMLDescriptor.assertSQLFragnments(List<String>,String)",13,26
org.apache.openjpa.persistence.jpql.entities.XMLUnorderedNameEntity.XMLUnorderedNameEntity(),4,4
org.apache.openjpa.persistence.jpql.entities.XMLUnorderedNameEntity.XMLUnorderedNameEntity(String),5,9
org.apache.openjpa.persistence.jpql.entities.XMLUnorderedNameEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.entities.XMLUnorderedNameEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.entities.XMLUnorderedNameEntity.getName(),2,3
org.apache.openjpa.persistence.jpql.entities.XMLUnorderedNameEntity.setName(String),3,6
org.apache.openjpa.persistence.jpql.entities.XMLUnorderedNameEntity.toString(),5,7
"org.apache.openjpa.persistence.meta.SourceAnnotationHandler.SourceAnnotationHandler(ProcessingEnvironment,CompileTimeLogger)",12,23
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.determineTypeAccess(TypeElement),9,36
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.determineMemberAccess(Element),3,3
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.validateAccess(TypeElement),6,6
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isMixedAccess(TypeElement),4,4
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getPersistentMembers(TypeElement),10,31
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getFieldAccessPersistentMembers(TypeElement),25,70
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getPropertyAccessPersistentMembers(TypeElement),20,55
"org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getDefaultAccessPersistentMembers(TypeElement,int)",24,74
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getImplicitAccessType(TypeElement),32,114
"org.apache.openjpa.persistence.meta.SourceAnnotationHandler.merge(Set<>,Set<>)",12,31
"org.apache.openjpa.persistence.meta.SourceAnnotationHandler.matchGetterAndSetter(Set<ExecutableElement>,Set<ExecutableElement>)",36,113
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.InclusiveFilter<T>.includes(T),3,3
"org.apache.openjpa.persistence.meta.SourceAnnotationHandler.filter(Collection<T>,InclusiveFilter)",14,29
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.GetterFilter.includes(ExecutableElement),5,6
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.SetterFilter.includes(ExecutableElement),5,6
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.AccessFilter.AccessFilter(AccessType),4,7
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.AccessFilter.includes(Element),9,13
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.KindFilter.KindFilter(ElementKind),3,5
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.KindFilter.includes(Element),4,5
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.TransientFilter.includes(Element),8,16
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.AnnotatedFilter.includes(Element),4,5
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getExplicitAccessType(TypeElement),14,41
"org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getAnnotationValue(Element,Class<>)",8,16
"org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getAnnotationValue(Element,Class<>,String)",24,60
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.toString(Collection<>),10,20
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.toDetails(Element),7,22
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getPersistentMemberName(Element),9,13
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.extractFieldName(ExecutableElement),15,28
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isAnnotated(Element),12,18
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isAnnotatedAsEntity(Element),9,13
"org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isAnnotatedWith(Element,Class<>)",6,9
"org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isAnnotatedWith(Element,Set<String>)",22,56
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getTargetEntityType(Element),11,21
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getDeclaredTypeName(TypeMirror),5,11
"org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getDeclaredTypeName(TypeMirror,boolean)",6,13
"org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getDeclaredTypeName(TypeMirror,boolean,boolean)",24,65
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getDeclaredType(Element),17,38
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isPrimitive(TypeMirror),5,18
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.box(TypeMirror),8,14
"org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getTypeParameter(Element,TypeMirror,int,boolean)",28,83
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.getPersistentSupertype(TypeElement),17,38
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isBoolean(TypeMirror),9,16
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isVoid(TypeMirror),4,9
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isMethod(Element),6,11
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isNormalGetter(ExecutableElement),18,32
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isBooleanGetter(ExecutableElement),17,33
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isGetter(ExecutableElement),5,9
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isSetter(ExecutableElement),18,32
org.apache.openjpa.persistence.meta.SourceAnnotationHandler.isRootObject(TypeMirror),10,19
"org.apache.openjpa.persistence.meta.SourceAnnotationHandler.startsWith(String,String)",5,14
"org.apache.openjpa.persistence.meta.SourceAnnotationHandler.equalsByValue(Enum<>,Object)",5,9
org.apache.openjpa.persistence.inheritance.jointable.Contractor.Contractor(),1,1
org.apache.openjpa.persistence.inheritance.jointable.Contractor.Contractor(String),5,6
org.apache.openjpa.persistence.inheritance.jointable.Contractor.getCtrProp1(),3,5
org.apache.openjpa.persistence.inheritance.jointable.Contractor.setCtrProp1(String),4,10
org.apache.openjpa.persistence.inheritance.jointable.Contractor.getDept(),2,3
org.apache.openjpa.persistence.inheritance.jointable.Contractor.setDept(Department),3,6
org.apache.openjpa.persistence.inheritance.jointable.Contractor.equals(Object),5,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Employee.getPhoneNumbers(),4,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Employee.addPhoneNumber(Department,PhoneNumber)",4,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Employee.removePhoneNumber(Department),4,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Employee.equals(Object),14,43
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedOwner.getPk(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedOwner.setBasic(String),3,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedOwner.getBasic(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedOwner.setEmbed(EmbedValue),3,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedOwner.getEmbed(),2,4
org.apache.openjpa.persistence.jdbc.unique.TestUniqueConstraint.setUp(Object),6,8
org.apache.openjpa.persistence.jdbc.unique.TestUniqueConstraint.testMapping(),24,75
"org.apache.openjpa.persistence.jdbc.unique.TestUniqueConstraint.assertSQLFragnments(List<String>,String)",13,26
org.apache.openjpa.persistence.kernel.TestFieldRange.TestFieldRange(),5,8
org.apache.openjpa.persistence.kernel.TestFieldRange.TestFieldRange(String),5,6
org.apache.openjpa.persistence.kernel.TestFieldRange.setUp(),6,7
org.apache.openjpa.persistence.kernel.TestFieldRange.testSaveState(),11,17
org.apache.openjpa.persistence.kernel.TestFieldRange.testLargeNumbersNegative(),28,48
org.apache.openjpa.persistence.kernel.TestFieldRange.testDoubleAndFloatPrecision(),12,17
org.apache.openjpa.persistence.kernel.TestFieldRange.testZeroNumbers(),12,15
org.apache.openjpa.persistence.kernel.TestFieldRange.testLowDate(),4,6
org.apache.openjpa.persistence.kernel.TestFieldRange.testCurDate(),8,10
org.apache.openjpa.persistence.kernel.TestFieldRange.testHighDate(),39,50
org.apache.openjpa.persistence.kernel.TestFieldRange.testProblematicDates(),8,10
org.apache.openjpa.persistence.kernel.TestFieldRange.dateTest(long),11,16
"org.apache.openjpa.persistence.kernel.TestFieldRange.allFieldSaveState(int,short,long,float,double,byte,boolean,char,Date,Serializable,String,BigInteger,BigDecimal)",23,51
"org.apache.openjpa.persistence.kernel.TestFieldRange.allFieldSaveStateInternal(int,short,long,float,double,byte,boolean,char,Date,Serializable,String,BigInteger,BigDecimal)",75,394
org.apache.openjpa.persistence.common.apps.Textile.getTextileId(),2,3
org.apache.openjpa.persistence.common.apps.Textile.setTextileId(Integer),3,6
org.apache.openjpa.persistence.common.apps.Textile.getTxeName(),3,5
org.apache.openjpa.persistence.common.apps.Textile.setTxeName(String),4,10
org.apache.openjpa.persistence.blob.mysql.BlobColumnEntity.getId(),0,0
org.apache.openjpa.persistence.blob.mysql.BlobColumnEntity.setId(int),1,1
org.apache.openjpa.persistence.blob.mysql.BlobColumnEntity.getSmallLob(),1,2
org.apache.openjpa.persistence.blob.mysql.BlobColumnEntity.setSmallLob(byte[]),2,5
org.apache.openjpa.persistence.blob.mysql.BlobColumnEntity.getMedLob(),2,4
org.apache.openjpa.persistence.blob.mysql.BlobColumnEntity.setMedLob(byte[]),3,9
org.apache.openjpa.persistence.blob.mysql.BlobColumnEntity.getLongLob(),1,2
org.apache.openjpa.persistence.blob.mysql.BlobColumnEntity.setLongLob(byte[]),2,5
org.apache.openjpa.persistence.blob.mysql.BlobColumnEntity.getDefaultLob(),1,2
org.apache.openjpa.persistence.blob.mysql.BlobColumnEntity.setDefaultLob(byte[]),2,5
org.apache.openjpa.persistence.blob.mysql.BlobColumnEntity.getDefinedLob(),2,4
org.apache.openjpa.persistence.blob.mysql.BlobColumnEntity.setDefinedLob(byte[]),3,9
org.apache.openjpa.persistence.proxy.delayed.Product.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.Product.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.Product.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.Product.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.Product.compareTo(Product),4,11
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_RelKey_FK.getId(),0,0
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_RelKey_FK.getName(),2,3
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_RelKey_FK.setName(String),3,6
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_RelKey_FK.hashCode(),3,5
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_RelKey_FK.equals(Object),7,17
org.apache.openjpa.persistence.compat.EntityC_U1M_Map_RelKey_FK.toString(),2,3
org.apache.openjpa.persistence.cascade.VertexType.VertexType(),5,6
org.apache.openjpa.persistence.cascade.VertexType.VertexType(String),4,6
org.apache.openjpa.persistence.cascade.VertexType.getName(),2,3
org.apache.openjpa.persistence.cascade.VertexType.getOid(),1,2
org.apache.openjpa.persistence.proxy.delayed.pqueue.Member.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.pqueue.Member.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.pqueue.Member.setAccounts(Collection<IAccount>),4,9
org.apache.openjpa.persistence.proxy.delayed.pqueue.Member.getAccounts(),3,4
org.apache.openjpa.persistence.embed.EntityA_Embed.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Embed.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Embed.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Embed.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Embed.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Embed.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Embed.getEmbed(),1,3
org.apache.openjpa.persistence.embed.EntityA_Embed.setEmbed(Embed),2,6
org.apache.openjpa.persistence.jpql.entities.IOrderedElements.getId(),0,0
org.apache.openjpa.persistence.jpql.entities.IOrderedElements.setId(int),1,1
org.apache.openjpa.persistence.jpql.entities.IOrderedElements.getListElements(),3,4
org.apache.openjpa.persistence.jpql.entities.IOrderedElements.setListElements(List<String>),4,6
org.apache.openjpa.persistence.jpql.entities.IOrderedElements.addListElements(String),5,5
org.apache.openjpa.persistence.jpql.entities.IOrderedElements.removeListElements(int),5,5
"org.apache.openjpa.persistence.jpql.entities.IOrderedElements.insertListElements(int,String)",6,6
org.apache.openjpa.persistence.jpql.entities.IOrderedElements.toString(),1,2
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLNamed.UMLNamed(),2,2
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLNamed.getId(),1,1
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLNamed.setId(String),2,2
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLNamed.getName(),2,3
org.apache.openjpa.persistence.inheritance.jointable.onetomany.UMLNamed.setName(String),3,6
org.apache.openjpa.persistence.embed.Item2.getId(),0,0
org.apache.openjpa.persistence.embed.Item2.setId(int),1,1
org.apache.openjpa.persistence.embed.Item2.getImages(),3,5
"org.apache.openjpa.persistence.embed.Item2.addImage(String,String)",6,13
org.apache.openjpa.persistence.query.DistinctExpression.DistinctExpression(Expression),6,9
org.apache.openjpa.persistence.compat.EmployeeId.EmployeeId(),1,1
org.apache.openjpa.persistence.compat.EmployeeId.EmployeeId(String),3,5
org.apache.openjpa.persistence.compat.EmployeeId.equals(Object),5,13
org.apache.openjpa.persistence.compat.EmployeeId.hashCode(),3,5
org.apache.openjpa.persistence.embed.attrOverrides.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.embed.attrOverrides.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.embed.attrOverrides.Employee.setContactInfo(ContactInfo),3,11
org.apache.openjpa.persistence.embed.attrOverrides.Employee.getContactInfo(),2,6
org.apache.openjpa.persistence.embed.attrOverrides.Employee.addJobInfo(JobInfo),5,15
org.apache.openjpa.persistence.embed.attrOverrides.Employee.getJobInfos(),5,8
"org.apache.openjpa.persistence.query.ModExpression.ModExpression(ExpressionImpl,ExpressionImpl)",6,10
org.apache.openjpa.persistence.query.ModExpression.asExpression(AliasContext),6,11
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_FK.getId(),0,0
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_FK.getName(),2,3
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_FK.setName(String),3,6
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_FK.getEntityCs(),3,6
"org.apache.openjpa.persistence.compat.Uni_1ToM_Map_FK.setEntityCs(Map<String,EntityC_U1M_Map_FK>)",4,9
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_FK.hashCode(),3,5
org.apache.openjpa.persistence.compat.Uni_1ToM_Map_FK.equals(Object),10,29
org.apache.openjpa.persistence.enhance.TestNoNoArgs.TestNoNoArgs(String),4,4
org.apache.openjpa.persistence.enhance.TestNoNoArgs.setUp(),14,24
org.apache.openjpa.persistence.enhance.TestNoNoArgs.testNoNoArgs(),12,12
org.apache.openjpa.persistence.enhance.TestNoNoArgs.testNo2NoArgs(),15,23
org.apache.openjpa.persistence.enhance.TestNoNoArgs.testNo3NoArgs(),17,17
org.apache.openjpa.persistence.jdbc.meta.TestUseSchemaElement.setUp(),20,25
org.apache.openjpa.persistence.jdbc.meta.TestUseSchemaElement.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.jdbc.meta.TestUseSchemaElement.testGettersAndSetters(),80,217
org.apache.openjpa.persistence.enhance.identity.EmpId.getEmpId(),1,2
org.apache.openjpa.persistence.enhance.identity.EmpId.setEmpId(int),2,5
org.apache.openjpa.persistence.enhance.identity.EmpId.getEmpType(),3,7
org.apache.openjpa.persistence.enhance.identity.EmpId.setEmpType(Employee.EmpType),4,12
org.apache.openjpa.persistence.enhance.identity.EmpId.equals(Object),4,11
org.apache.openjpa.persistence.enhance.identity.EmpId.hashCode(),4,7
org.apache.openjpa.persistence.datacache.CachedManager.getEmployees(),4,5
org.apache.openjpa.persistence.datacache.CachedManager.setEmployees(Collection<CachedEmployee>),5,8
org.apache.openjpa.persistence.kernel.common.apps.ByteArray.ByteArray(),1,1
"org.apache.openjpa.persistence.kernel.common.apps.ByteArray.ByteArray(String,int)",4,6
org.apache.openjpa.persistence.kernel.common.apps.ByteArray.getString(),1,3
org.apache.openjpa.persistence.kernel.common.apps.ByteArray.setString(String),2,4
org.apache.openjpa.persistence.kernel.common.apps.ByteArray.getBytes(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ByteArray.setBytes(byte[]),2,3
org.apache.openjpa.persistence.kernel.common.apps.ByteArray.getIds(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ByteArray.setIds(int),2,5
org.apache.openjpa.persistence.jdbc.query.TestNamedSQLQueries.TestNamedSQLQueries(),6,10
org.apache.openjpa.persistence.jdbc.query.TestNamedSQLQueries.TestNamedSQLQueries(String),5,7
org.apache.openjpa.persistence.jdbc.query.TestNamedSQLQueries.setUp(),12,24
org.apache.openjpa.persistence.jdbc.query.TestNamedSQLQueries.testNamedQuery(),21,44
org.apache.openjpa.persistence.jdbc.query.TestNamedSQLQueries.testSystem(),28,76
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.setA(int),2,3
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.getA(),0,0
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.setB(String),3,4
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.getB(),1,1
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.setC(BigInteger),3,4
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.getC(),1,1
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.setD(Date),3,4
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.getD(),1,1
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.setE(String),3,4
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.getE(),1,1
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.setF(String),3,4
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.getF(),1,1
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.setG(FetchGroupTestObject),5,6
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.getG(),3,3
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.setH(FetchGroupTestObject),5,6
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject.getH(),3,3
org.apache.openjpa.persistence.jdbc.common.apps.CircularFKPC.CircularFKPC(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.CircularFKPC.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.CircularFKPC.setStringField(String),3,10
org.apache.openjpa.persistence.jdbc.common.apps.CircularFKPC.getFKField(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.CircularFKPC.setFKField(CircularFKPC2),4,7
org.apache.openjpa.persistence.datacache.TestUniteratedQueryResult.TestUniteratedQueryResult(String),6,8
org.apache.openjpa.persistence.datacache.TestUniteratedQueryResult.setUp(),23,40
org.apache.openjpa.persistence.datacache.TestUniteratedQueryResult.test(),23,115
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceOwner.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceOwner.setIntField(int),2,3
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceOwner.getIFace(),3,3
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceOwner.setIFace(ManagedInterfaceSup),4,6
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceOwner.getEmbed(),2,4
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceOwner.setEmbed(ManagedInterfaceEmbed),3,7
org.apache.openjpa.persistence.jdbc.query.cache.InvoiceKey.InvoiceKey(),2,2
"org.apache.openjpa.persistence.jdbc.query.cache.InvoiceKey.InvoiceKey(int,String)",5,9
org.apache.openjpa.persistence.jdbc.query.cache.InvoiceKey.equals(Object),6,17
org.apache.openjpa.persistence.jdbc.query.cache.InvoiceKey.hashCode(),5,10
org.apache.openjpa.persistence.detach.Entity11.Entity11(),1,1
"org.apache.openjpa.persistence.detach.Entity11.Entity11(long,String)",3,5
org.apache.openjpa.persistence.detach.Entity11.getId(),0,0
org.apache.openjpa.persistence.detach.Entity11.setId(long),1,1
org.apache.openjpa.persistence.detach.Entity11.getName(),2,3
org.apache.openjpa.persistence.detach.Entity11.setName(String),3,6
org.apache.openjpa.persistence.event.TestBeforeCommit.setUp(),23,45
org.apache.openjpa.persistence.event.TestBeforeCommit.tearDown(),4,7
org.apache.openjpa.persistence.event.TestBeforeCommit.testQuery(),27,69
org.apache.openjpa.persistence.event.TestBeforeCommit.testEmptyTransaction(),30,66
org.apache.openjpa.persistence.event.TestBeforeCommit.beforeCommit(TransactionEvent),9,15
org.apache.openjpa.persistence.event.TestBeforeCommit.doQuery(EntityManager),10,15
org.apache.openjpa.persistence.event.TestBeforeCommit.afterBegin(TransactionEvent),5,6
org.apache.openjpa.persistence.event.TestBeforeCommit.afterFlush(TransactionEvent),3,4
org.apache.openjpa.persistence.event.TestBeforeCommit.beforeFlush(TransactionEvent),3,4
org.apache.openjpa.persistence.event.TestBeforeCommit.afterCommit(TransactionEvent),3,4
org.apache.openjpa.persistence.event.TestBeforeCommit.afterCommitComplete(TransactionEvent),4,5
org.apache.openjpa.persistence.event.TestBeforeCommit.afterRollback(TransactionEvent),3,4
org.apache.openjpa.persistence.event.TestBeforeCommit.afterRollbackComplete(TransactionEvent),4,5
org.apache.openjpa.persistence.event.TestBeforeCommit.afterStateTransitions(TransactionEvent),3,4
org.apache.openjpa.persistence.detach.serializable.TestSerializableDetachedStateManager.setUp(),10,13
org.apache.openjpa.persistence.detach.serializable.TestSerializableDetachedStateManager.testRoundTrip(),24,33
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.LRSPC(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.LRSPC(String),4,6
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.newInstance(String),5,9
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.getStringSet(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.setStringSet(Set),2,10
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.getRelSet(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.setRelSet(Set),2,10
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.getStringCollection(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.setStringCollection(Collection),3,10
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.getRelCollection(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.setRelCollection(Collection),3,10
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.getStringMap(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.setStringMap(Map),3,10
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.getRelMap(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.setRelMap(Map),3,10
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LRSPC.compareTo(Object),5,8
org.apache.openjpa.persistence.jdbc.common.apps.PerClassTestObject2.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.PerClassTestObject2.setName(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.PerClassTestObject2.getAge(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.PerClassTestObject2.setAge(String),3,6
org.apache.openjpa.persistence.embed.Division.getId(),0,0
org.apache.openjpa.persistence.embed.Division.setId(int),1,1
org.apache.openjpa.persistence.embed.Division.getName(),2,3
org.apache.openjpa.persistence.embed.Division.setName(String),3,6
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedJoinAnnotation.setUp(),22,63
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedJoinAnnotation.tearDown(),3,4
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedJoinAnnotation.createEMF(Object),12,15
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedJoinAnnotation.createHandI(int),9,61
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedJoinAnnotation.testCreate(),12,23
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedJoinAnnotation.runQueries(),9,15
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedJoinAnnotation.queryJoinTable(),13,24
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedJoinAnnotation.queryJoinColumn(),13,24
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedJoinAnnotation.querySecondaryTableValue(),15,26
org.apache.openjpa.persistence.delimited.identifiers.TestDelimitedJoinAnnotation.queryMapValue(),13,23
"org.apache.openjpa.persistence.query.AndPredicate.AndPredicate(Predicate,Predicate)",1,3
"org.apache.openjpa.persistence.jdbc.IsolationLevel.IsolationLevel(int,String)",6,12
org.apache.openjpa.persistence.jdbc.IsolationLevel.getConnectionConstant(),2,4
org.apache.openjpa.persistence.jdbc.IsolationLevel.fromConnectionConstant(int),20,42
org.apache.openjpa.persistence.jdbc.IsolationLevel.fromKernelConstant(int),5,8
org.apache.openjpa.persistence.jdbc.IsolationLevel.toKernelConstant(),3,4
org.apache.openjpa.persistence.jdbc.IsolationLevel.toKernelConstantFromString(String),15,34
org.apache.openjpa.persistence.jdbc.IsolationLevel.convertToKernelConstant(String),6,9
org.apache.openjpa.persistence.jdbc.IsolationLevel.convertToKernelConstant(int),6,9
org.apache.openjpa.enhance.TestUnenhancedOneToMany.setUp(),3,5
org.apache.openjpa.enhance.TestUnenhancedOneToMany.testOneToMany(),34,88
org.apache.openjpa.persistence.embed.PhoneNumber.getNumber(),0,0
org.apache.openjpa.persistence.embed.PhoneNumber.setNumber(int),1,1
org.apache.openjpa.persistence.embed.PhoneNumber.getEmployees(),3,4
org.apache.openjpa.persistence.embed.PhoneNumber.addEmployees(Employee),3,7
org.apache.openjpa.persistence.event.AnEntity.getVersion(),1,2
org.apache.openjpa.persistence.event.AnEntity.setVersion(int),2,5
org.apache.openjpa.persistence.event.AnEntity.setId(int),1,1
org.apache.openjpa.persistence.event.AnEntity.getId(),0,0
org.apache.openjpa.persistence.event.AnEntity.setName(String),3,6
org.apache.openjpa.persistence.event.AnEntity.getName(),2,3
org.apache.openjpa.persistence.event.AnEntity.toString(),2,4
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimInheritance.setUp(),26,52
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimInheritance.tearDown(),3,4
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimInheritance.getPersistenceUnitName(),8,8
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimInheritance.createPontiac(int),6,11
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimInheritance.createChevrolet(int),7,12
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimInheritance.testCreate(),10,16
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimInheritance.runQueries(),5,6
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimInheritance.queryChevrolet(),14,23
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimInheritance.queryPontiac(),13,24
org.apache.openjpa.enhance.TestPCEnhancerEnhancementContractVersion.setUp(),10,11
org.apache.openjpa.enhance.TestPCEnhancerEnhancementContractVersion.testCurrentLevel(),8,9
org.apache.openjpa.enhance.TestPCEnhancerEnhancementContractVersion.testDownLevel(),9,10
org.apache.openjpa.enhance.TestPCEnhancerEnhancementContractVersion.testContact(),21,37
org.apache.openjpa.persistence.query.QueryBuilder.createQueryDefinition(),6,13
org.apache.openjpa.persistence.query.QueryBuilder.createQueryDefinition(Class),9,19
org.apache.openjpa.persistence.query.QueryBuilder.createSubqueryDefinition(PathExpression),7,8
org.apache.openjpa.persistence.enhance.identity.TestMappedById.setUp(),14,42
org.apache.openjpa.persistence.enhance.identity.TestMappedById.testMapsId1(),7,9
org.apache.openjpa.persistence.enhance.identity.TestMappedById.testMapsId2(),7,9
org.apache.openjpa.persistence.enhance.identity.TestMappedById.testMapsId3(),7,9
org.apache.openjpa.persistence.enhance.identity.TestMappedById.testMapsId4(),24,26
org.apache.openjpa.persistence.enhance.identity.TestMappedById.testMapsId5(),28,32
org.apache.openjpa.persistence.enhance.identity.TestMappedById.testMapsId6(),7,9
org.apache.openjpa.persistence.enhance.identity.TestMappedById.testMapsId7(),7,9
org.apache.openjpa.persistence.enhance.identity.TestMappedById.testEnumIdClass(),18,49
org.apache.openjpa.persistence.enhance.identity.TestMappedById.testEmbeddedIdNestedInIdClass(),19,48
org.apache.openjpa.persistence.enhance.identity.TestMappedById.testCountDistinctMultiCols(),35,118
org.apache.openjpa.persistence.enhance.identity.TestMappedById.createObj1(),14,22
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.createEmployee1(EntityManager,int)",13,23
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.createDependent1(EntityManager,int,Employee1)",10,18
org.apache.openjpa.persistence.enhance.identity.TestMappedById.findObj1(),14,21
org.apache.openjpa.persistence.enhance.identity.TestMappedById.queryObj1(),3,4
org.apache.openjpa.persistence.enhance.identity.TestMappedById.queryDependent1(),19,36
org.apache.openjpa.persistence.enhance.identity.TestMappedById.assertDependent1(Dependent1),5,11
org.apache.openjpa.persistence.enhance.identity.TestMappedById.createObj2(),14,22
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.createEmployee2(EntityManager,int)",12,21
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.createDependent2(EntityManager,int,Employee2)",11,19
org.apache.openjpa.persistence.enhance.identity.TestMappedById.findObj2(),14,22
org.apache.openjpa.persistence.enhance.identity.TestMappedById.queryObj2(),3,4
org.apache.openjpa.persistence.enhance.identity.TestMappedById.queryDependent2(),17,46
org.apache.openjpa.persistence.enhance.identity.TestMappedById.assertDependent2(Dependent2),6,12
org.apache.openjpa.persistence.enhance.identity.TestMappedById.createObj3(),14,22
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.createPerson1(EntityManager,int)",13,35
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.createMedicalHistory1(EntityManager,int)",7,14
org.apache.openjpa.persistence.enhance.identity.TestMappedById.findObj3(),12,25
org.apache.openjpa.persistence.enhance.identity.TestMappedById.queryObj3(),4,5
org.apache.openjpa.persistence.enhance.identity.TestMappedById.queryMedicalHistory1(),19,58
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.assertMedicalHistory1(MedicalHistory1,String)",6,11
org.apache.openjpa.persistence.enhance.identity.TestMappedById.createObj4(),14,22
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.createPerson2(EntityManager,int)",13,26
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.createMedicalHistory2(EntityManager,int)",7,14
org.apache.openjpa.persistence.enhance.identity.TestMappedById.findObj4(long),11,16
org.apache.openjpa.persistence.enhance.identity.TestMappedById.queryObj4(),4,5
org.apache.openjpa.persistence.enhance.identity.TestMappedById.queryMedicalHistory4(),23,69
org.apache.openjpa.persistence.enhance.identity.TestMappedById.assertMedicalHistory2(MedicalHistory2),7,16
org.apache.openjpa.persistence.enhance.identity.TestMappedById.createObj5(),24,36
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.createEmployee3(EntityManager,int)",13,21
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.createDependent3(EntityManager,int,Employee3)",13,27
org.apache.openjpa.persistence.enhance.identity.TestMappedById.findObj5(),11,16
org.apache.openjpa.persistence.enhance.identity.TestMappedById.queryObj5(),20,36
org.apache.openjpa.persistence.enhance.identity.TestMappedById.assertDependent3(Dependent3),5,11
org.apache.openjpa.persistence.enhance.identity.TestMappedById.createObj6(),14,22
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.createPerson3(EntityManager,int)",12,27
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.createMedicalHistory3(EntityManager,int)",7,14
org.apache.openjpa.persistence.enhance.identity.TestMappedById.findObj6(),17,31
org.apache.openjpa.persistence.enhance.identity.TestMappedById.queryObj6(),20,41
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.assertMedicalHistory3(MedicalHistory3,String)",6,11
org.apache.openjpa.persistence.enhance.identity.TestMappedById.createObj7(),14,22
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.createPerson4(EntityManager,int)",12,25
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.createMedicalHistory4(EntityManager,int)",7,14
org.apache.openjpa.persistence.enhance.identity.TestMappedById.findObj7(),13,26
org.apache.openjpa.persistence.enhance.identity.TestMappedById.queryObj7(),20,41
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.assertMedicalHistory4(MedicalHistory4,String)",7,15
org.apache.openjpa.persistence.enhance.identity.TestMappedById.testPersistDerivedIdentityUsingIdClassAndGeneratedKey(),32,46
org.apache.openjpa.persistence.enhance.identity.TestMappedById.testMergeDerivedIdentityUsingIdClassAndGeneratedKey(),32,46
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.persistEmployee4(EntityManager,int)",11,18
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.persistDependent4(EntityManager,int,Employee4)",7,12
"org.apache.openjpa.persistence.enhance.identity.TestMappedById.mergeEmployee4(EntityManager,int)",13,24
org.apache.openjpa.persistence.enhance.identity.TestMappedById.testEnumInEmbeddedId(),24,63
org.apache.openjpa.persistence.query.UpperExpression.UpperExpression(Expression),5,7
org.apache.openjpa.enhance.UnenhancedPropertyAccess.getId(),0,0
org.apache.openjpa.enhance.UnenhancedPropertyAccess.setId(int),1,1
org.apache.openjpa.enhance.UnenhancedPropertyAccess.getVersion(),1,2
org.apache.openjpa.enhance.UnenhancedPropertyAccess.setVersion(int),2,3
org.apache.openjpa.enhance.UnenhancedPropertyAccess.getStringField(),2,3
org.apache.openjpa.enhance.UnenhancedPropertyAccess.setStringField(String),3,4
org.apache.openjpa.enhance.UnenhancedPropertyAccess.getLazyField(),3,5
org.apache.openjpa.enhance.UnenhancedPropertyAccess.setLazyField(String),4,6
org.apache.openjpa.enhance.UnenhancedPropertyAccess.equals(Object),6,6
org.apache.openjpa.enhance.UnenhancedPropertyAccess.hashCode(),2,2
org.apache.openjpa.enhance.UnenhancedPropertyAccess.clone(),4,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.setUp(),8,11
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.setCandidate(Query,Class)",15,37
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.queryQualifiedId(boolean),34,93
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.testQueryObject(),5,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.createObj(EntityManagerFactory),16,27
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.createDepartment(EntityManager,int)",12,21
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.createEmployee(EntityManager,int)",5,8
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.findObj(EntityManagerFactory),18,40
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.updateObj(EntityManager,Department)",22,44
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.deleteObj(EntityManager,Department)",10,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.assertDepartment(Department),12,25
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.queryObj(EntityManagerFactory),8,12
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.queryDepartment(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.queryEmployee(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.TestSpec10_1_26_Ex2.assertEmployee(Employee),3,6
org.apache.openjpa.persistence.datacache.TestJPACache.setUp(),12,16
org.apache.openjpa.persistence.datacache.TestJPACache.populate(),28,82
org.apache.openjpa.persistence.datacache.TestJPACache.testInterfacesReturned(),18,41
org.apache.openjpa.persistence.datacache.TestJPACache.testContains(),22,44
org.apache.openjpa.persistence.datacache.TestJPACache.testEvictInstance(),16,69
org.apache.openjpa.persistence.datacache.TestJPACache.testEvictClass(),20,72
org.apache.openjpa.persistence.datacache.TestJPACache.testEvictAll(),16,55
org.apache.openjpa.persistence.datacache.TestJPACache.testContainsNullEntity(),14,19
org.apache.openjpa.persistence.datacache.TestJPACache.testContainsNonEntityClass(),11,18
org.apache.openjpa.persistence.datacache.TestJPACache.testContainsNullPrimaryKey(),8,9
org.apache.openjpa.persistence.datacache.TestJPACache.testContainsNegativePrimaryKey(),9,10
org.apache.openjpa.persistence.datacache.TestJPACache.testContainsInvalidPrimaryKeyType(),15,16
org.apache.openjpa.persistence.datacache.TestJPACache.testEvictNullInstance(),10,16
org.apache.openjpa.persistence.datacache.TestJPACache.testEvictNonEntityInstance(),12,18
org.apache.openjpa.persistence.datacache.TestJPACache.testEvictNullPrimaryKey(),8,9
org.apache.openjpa.persistence.datacache.TestJPACache.testEvictNegativePrimaryKey(),9,10
org.apache.openjpa.persistence.datacache.TestJPACache.testEvictInvalidPrimaryKeyType(),15,16
org.apache.openjpa.persistence.datacache.TestJPACache.testEvictNullClass(),9,15
org.apache.openjpa.persistence.datacache.TestJPACache.testEvictNonEntity(),11,18
org.apache.openjpa.persistence.datacache.TestJPACache.testIllegalStateExceptionAfterClose(),9,16
org.apache.openjpa.persistence.datacache.TestJPACache.testIllegalStateExceptionGetAfterClose(),16,26
"org.apache.openjpa.persistence.datacache.TestJPACache.assertInCache(Class<>,Object)",15,36
"org.apache.openjpa.persistence.datacache.TestJPACache.assertNotInCache(Class<>,Object)",14,35
org.apache.openjpa.enhance.ids.TestOptimizeIdCopy.setUp(),5,6
org.apache.openjpa.enhance.ids.TestOptimizeIdCopy.testIdOptimization(),38,74
org.apache.openjpa.enhance.ids.TestOptimizeIdCopy.testIdOptimizationConstructorOutOfOrder(),34,63
org.apache.openjpa.enhance.ids.TestOptimizeIdCopy.testNoOptimization(),28,53
org.apache.openjpa.instrumentation.CacheableEntity.setId(int),1,1
org.apache.openjpa.instrumentation.CacheableEntity.getId(),0,0
org.apache.openjpa.instrumentation.CacheableEntity.setName(String),3,6
org.apache.openjpa.instrumentation.CacheableEntity.getName(),2,3
"org.apache.openjpa.persistence.jdbc.FetchMode.FetchMode(int,String)",7,11
org.apache.openjpa.persistence.jdbc.FetchMode.toKernelConstant(),4,5
org.apache.openjpa.persistence.jdbc.FetchMode.fromKernelConstant(int),12,31
org.apache.openjpa.persistence.jdbc.FetchMode.convertToKernelConstant(String),6,9
org.apache.openjpa.persistence.jdbc.FetchMode.convertToKernelConstant(int),13,22
org.apache.openjpa.persistence.jdbc.FetchMode.toKernelConstantFromString(String),16,34
org.apache.openjpa.persistence.identity.SimpleCompoundIdTestEntity.getFirstId(),0,0
org.apache.openjpa.persistence.identity.SimpleCompoundIdTestEntity.getSecondId(),0,0
org.apache.openjpa.kernel.TestInstanceGraphBrokerSerialization.getManagedType(),3,4
org.apache.openjpa.kernel.TestInstanceGraphBrokerSerialization.newManagedInstance(),8,18
org.apache.openjpa.kernel.TestInstanceGraphBrokerSerialization.modifyInstance(ManyOneEntity),7,7
org.apache.openjpa.kernel.TestInstanceGraphBrokerSerialization.getModifiedValue(ManyOneEntity),6,6
org.apache.openjpa.kernel.TestInstanceGraphBrokerSerialization.graphSize(),2,2
org.apache.openjpa.persistence.identity.IdentityGenerationType.getOrderId(),0,0
org.apache.openjpa.persistence.identity.IdentityGenerationType.setOrderId(Long),1,1
org.apache.openjpa.persistence.identity.IdentityGenerationType.getSomeData(),2,3
org.apache.openjpa.persistence.identity.IdentityGenerationType.setSomeData(String),3,6
org.apache.openjpa.persistence.inheritance.NoGenEntityL3.getL3Data(),1,2
org.apache.openjpa.persistence.inheritance.NoGenEntityL3.setL3Data(int),2,5
org.apache.openjpa.meta.TestMetaDataInheritanceComparator.testInheritanceComparatorWithBase(),5,7
org.apache.openjpa.meta.TestMetaDataInheritanceComparator.setUp(),1,2
org.apache.openjpa.meta.TestMetaDataInheritanceComparator.inheritanceComparatorHelper(boolean),8,29
org.apache.openjpa.meta.TestMetaDataInheritanceComparator.testMetaDataInheritanceComparatorWithBase(),7,11
org.apache.openjpa.meta.TestMetaDataInheritanceComparator.metaDataInheritanceComparatorHelper(boolean),13,74
org.apache.openjpa.meta.TestMetaDataInheritanceComparator.testEndToEnd(),7,7
org.apache.openjpa.persistence.datacache.stats.TestStatistics.setUp(),22,34
org.apache.openjpa.persistence.datacache.stats.TestStatistics.startCaching(Class<>),12,23
org.apache.openjpa.persistence.datacache.stats.TestStatistics.testPerfectCache(),31,68
"org.apache.openjpa.persistence.datacache.stats.TestStatistics.assertStatistics(CacheStatistics,long[])",9,20
org.apache.openjpa.persistence.datacache.stats.TestStatistics.print(CacheStatistics),9,9
org.apache.openjpa.meta.Painter.Painter(),1,1
org.apache.openjpa.meta.Painter.Painter(String),3,4
org.apache.openjpa.persistence.access.Ingredient.Ingredient(),1,1
org.apache.openjpa.persistence.access.Ingredient.Ingredient(String),5,8
org.apache.openjpa.persistence.access.Ingredient.setName(String),3,6
org.apache.openjpa.persistence.access.Ingredient.getName(),2,3
org.apache.openjpa.persistence.access.Ingredient.setDescription(String),3,6
org.apache.openjpa.persistence.access.Ingredient.getDescription(),2,3
org.apache.openjpa.persistence.access.Ingredient.setQuantity(Quantity),3,6
org.apache.openjpa.persistence.access.Ingredient.getQuantity(),2,3
org.apache.openjpa.persistence.event.common.apps.TransactionalClassPC.getIntField(),1,2
org.apache.openjpa.persistence.event.common.apps.TransactionalClassPC.setIntField(int),2,5
org.apache.openjpa.persistence.access.xml.XMLFieldAccess.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLFieldAccess.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLFieldAccess.setVersion(int),2,5
org.apache.openjpa.persistence.access.xml.XMLFieldAccess.getVersion(),1,2
org.apache.openjpa.persistence.access.xml.XMLFieldAccess.setStringField(String),5,9
org.apache.openjpa.persistence.access.xml.XMLFieldAccess.getStringField(),3,5
org.apache.openjpa.persistence.access.xml.XMLFieldAccess.equals(Object),8,19
org.apache.openjpa.persistence.access.xml.XMLFieldAccess.setStrField(String),4,10
org.apache.openjpa.persistence.access.xml.XMLFieldAccess.getStrField(),3,5
org.apache.openjpa.persistence.access.FieldEmbedEntity.setId(int),1,1
org.apache.openjpa.persistence.access.FieldEmbedEntity.getId(),0,0
org.apache.openjpa.persistence.access.FieldEmbedEntity.setName(String),3,6
org.apache.openjpa.persistence.access.FieldEmbedEntity.getName(),2,3
org.apache.openjpa.persistence.access.FieldEmbedEntity.getEPA(),4,5
org.apache.openjpa.persistence.access.FieldEmbedEntity.setEPA(EmbedPropAccess),5,6
org.apache.openjpa.persistence.access.FieldEmbedEntity.equals(Object),8,20
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimitedJoinAnnotations.setUp(),27,71
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimitedJoinAnnotations.tearDown(),5,6
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimitedJoinAnnotations.createCandD(int),9,61
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimitedJoinAnnotations.testCreate(),12,23
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimitedJoinAnnotations.runQueries(),9,15
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimitedJoinAnnotations.queryJoinTable(),13,24
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimitedJoinAnnotations.queryJoinColumn(),13,24
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimitedJoinAnnotations.querySecondaryTableValue(),15,26
org.apache.openjpa.persistence.delimited.identifiers.noschema.TestNoSchemaManualDelimitedJoinAnnotations.queryMapValue(),13,23
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess2.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess2.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess2.setVersion(int),2,5
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess2.getVersion(),1,2
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess2.setStrProp(String),6,9
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess2.getStrProp(),4,5
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess2.equals(Object),11,31
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess2.setStrField(String),4,10
org.apache.openjpa.persistence.access.xml.XMLDefPropMixedFieldAccess2.getStrField(),3,5
org.apache.openjpa.persistence.detach.Entity1.getId(),0,0
org.apache.openjpa.persistence.detach.Entity1.Entity1(),1,1
"org.apache.openjpa.persistence.detach.Entity1.Entity1(long,String)",3,5
org.apache.openjpa.persistence.detach.Entity1.setId(long),1,1
org.apache.openjpa.persistence.detach.Entity1.getName(),2,3
org.apache.openjpa.persistence.detach.Entity1.setName(String),3,6
org.apache.openjpa.persistence.detach.Entity1.getE14(),1,1
org.apache.openjpa.persistence.detach.Entity1.setE14(Entity14),2,2
org.apache.openjpa.persistence.annotations.TestAnnotationBasics.TestAnnotationBasics(String),6,7
org.apache.openjpa.persistence.annotations.TestAnnotationBasics.testSingleFieldIdentity(),14,38
org.apache.openjpa.persistence.annotations.TestEmbeddedId.TestEmbeddedId(String),5,6
org.apache.openjpa.persistence.annotations.TestEmbeddedId.setUp(),14,50
org.apache.openjpa.persistence.annotations.TestEmbeddedId.testGetObjectId(),18,41
org.apache.openjpa.persistence.annotations.TestEmbeddedId.testMutateEmbeddedIdFieldValueOfNew(),25,102
org.apache.openjpa.persistence.annotations.TestEmbeddedId.testMutateEmbeddedIdFieldValueOfExisting(),21,38
org.apache.openjpa.persistence.annotations.TestEmbeddedId.testDetachAttach(),19,60
org.apache.openjpa.persistence.annotations.TestEmbeddedId.testQuery(),14,45
org.apache.openjpa.persistence.annotations.TestEmbeddedId.testAutoAssigned(),18,116
org.apache.openjpa.persistence.jdbc.common.apps.MultiD.setDString0(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.MultiD.getDString0(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.MultiD.setDString1(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.MultiD.getDString1(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.MultiD.setA(MultiA),3,4
org.apache.openjpa.persistence.jdbc.common.apps.MultiD.getA(),1,1
org.apache.openjpa.lib.util.Options.Options(),2,2
org.apache.openjpa.lib.util.Options.Options(Properties),6,12
org.apache.openjpa.lib.util.Options.setFromCmdLine(String[]),47,111
org.apache.openjpa.lib.util.Options.setInto(Object),85,237
"org.apache.openjpa.lib.util.Options.setInto(Object,Map.Entry)",36,111
org.apache.openjpa.lib.util.Options.trimQuote(String),12,20
org.apache.openjpa.lib.util.Options.findOptionsFor(Class<>),40,80
"org.apache.openjpa.lib.util.Options.matchOptionToMember(String,Object[])",75,256
org.apache.openjpa.lib.util.Options.getType(Object),8,11
"org.apache.openjpa.lib.util.Options.invoke(Object,Object,Object[])",10,24
"org.apache.openjpa.lib.util.Options.stringToObject(String,Class<>)",49,135
org.apache.openjpa.lib.util.Options.getDefaultValue(Class<>),8,15
"org.apache.openjpa.lib.util.Options.getBooleanProperty(String,String,boolean)",18,34
"org.apache.openjpa.lib.util.Options.getFloatProperty(String,String,float)",19,32
"org.apache.openjpa.lib.util.Options.getDoubleProperty(String,String,double)",19,32
"org.apache.openjpa.lib.util.Options.getLongProperty(String,String,long)",19,32
"org.apache.openjpa.lib.util.Options.getIntProperty(String,String,int)",20,33
"org.apache.openjpa.lib.util.Options.getProperty(String,String,String)",17,30
"org.apache.openjpa.lib.util.Options.removeBooleanProperty(String,String,boolean)",21,43
"org.apache.openjpa.lib.util.Options.removeFloatProperty(String,String,float)",20,39
"org.apache.openjpa.lib.util.Options.removeDoubleProperty(String,String,double)",20,39
"org.apache.openjpa.lib.util.Options.removeLongProperty(String,String,long)",20,39
"org.apache.openjpa.lib.util.Options.removeIntProperty(String,String,int)",21,40
"org.apache.openjpa.lib.util.Options.removeProperty(String,String,String)",18,34
"org.apache.openjpa.lib.util.Options.EmptyOptions.setProperty(String,String)",9,10
"org.apache.openjpa.lib.util.Options.EmptyOptions.put(Object,Object)",6,8
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest2.RuntimeTest2(),2,2
"org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest2.RuntimeTest2(String,int)",4,5
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest2.getIntField2(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.RuntimeTest2.setIntField2(int),2,5
org.apache.openjpa.persistence.datacache.CascadeChild.getId(),0,0
org.apache.openjpa.persistence.datacache.CascadeChild.getName(),2,3
org.apache.openjpa.persistence.datacache.CascadeChild.setName(String),3,6
org.apache.openjpa.persistence.annotations.TestPersistentCollection.setUp(),8,21
org.apache.openjpa.persistence.annotations.TestPersistentCollection.testPersistentCollectionOfEmbeddables(),27,77
org.apache.openjpa.persistence.annotations.TestPersistentCollection.testPersistentCollectionOfEntities(),27,77
org.apache.openjpa.persistence.annotations.TestPersistentCollection.testPersistentCollectionStringsLazy(),28,65
org.apache.openjpa.persistence.annotations.TestPersistentCollection.testPersistentCollectionStringsEager(),28,65
org.apache.openjpa.lib.rop.TestEagerResultList.TestEagerResultList(String),5,7
org.apache.openjpa.lib.rop.TestEagerResultList.getResultList(ResultObjectProvider),5,12
org.apache.openjpa.lib.rop.TestEagerResultList.main(String[]),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.FlightSchedule.FlightSchedule(),2,2
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.FlightSchedule.FlightSchedule(String,Calendar,Date,Date,String)",10,17
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.FlightSchedule.getFlightName(),4,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.FlightSchedule.setFlightName(String),5,10
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.FlightSchedule.getFlightNum(),2,4
org.apache.openjpa.persistence.detach.TestDetachNoProxy.setUp(),11,14
org.apache.openjpa.persistence.detach.TestDetachNoProxy.createEntities(int),12,19
org.apache.openjpa.persistence.detach.TestDetachNoProxy.testDetach20(),38,140
org.apache.openjpa.persistence.detach.TestDetachNoProxy.testDetachCopy20(),40,159
org.apache.openjpa.persistence.detach.TestDetachNoProxy.testDetachAll20(),50,180
org.apache.openjpa.persistence.detach.TestDetachNoProxy.testClear10Compat(),44,153
org.apache.openjpa.persistence.detach.TestDetachNoProxy.testClear20Compat(),44,153
org.apache.openjpa.persistence.detach.TestDetachNoProxy.testClear20New(),44,148
"org.apache.openjpa.persistence.detach.TestDetachNoProxy.verifySerializable(Entity20,boolean,boolean)",33,118
"org.apache.openjpa.persistence.detach.TestDetachNoProxy.verifyEntities(Entity20,boolean)",18,48
org.apache.openjpa.persistence.detach.TestDetachNoProxy.printClassNames(Entity20),12,27
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntitySub.LifeCycleDDEntitySub(),4,4
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntitySub.LifeCycleDDEntitySub(String,String)",5,6
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntitySub.verifyPrePersist(),10,13
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntitySub.verifyPostPersist(),10,13
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntitySub.verifyPreRemove(),10,13
org.apache.openjpa.jdbc.kernel.EntityG.getEntityF(),1,3
org.apache.openjpa.jdbc.kernel.EntityG.setEntityF(EntityF),2,6
org.apache.openjpa.jdbc.kernel.EntityG.getId(),0,0
org.apache.openjpa.jdbc.kernel.EntityG.setId(int),1,1
org.apache.openjpa.persistence.callbacks.ListenerInEntity.getId(),0,0
org.apache.openjpa.persistence.callbacks.ListenerInEntity.setId(long),1,1
org.apache.openjpa.persistence.callbacks.ListenerInEntity.getValue(),1,2
org.apache.openjpa.persistence.callbacks.ListenerInEntity.setValue(int),2,5
org.apache.openjpa.persistence.callbacks.ListenerInEntity.prePersist(),3,5
org.apache.openjpa.persistence.callbacks.ListenerInEntity.postPersist(),3,5
org.apache.openjpa.persistence.callbacks.ListenerInEntity.postLoad(),3,5
org.apache.openjpa.persistence.callbacks.ListenerInEntity.preUpdate(),3,5
org.apache.openjpa.persistence.callbacks.ListenerInEntity.postUpdate(),3,5
org.apache.openjpa.persistence.callbacks.ListenerInEntity.preRemove(),3,5
org.apache.openjpa.persistence.callbacks.ListenerInEntity.postRemove(),3,5
org.apache.openjpa.persistence.jdbc.annotations.EmbedOwner.getPk(),0,0
org.apache.openjpa.persistence.jdbc.annotations.EmbedOwner.setBasic(String),3,6
org.apache.openjpa.persistence.jdbc.annotations.EmbedOwner.getBasic(),2,3
org.apache.openjpa.persistence.jdbc.annotations.EmbedOwner.setEmbed(EmbedValue),3,7
org.apache.openjpa.persistence.jdbc.annotations.EmbedOwner.getEmbed(),2,4
org.apache.openjpa.persistence.jdbc.annotations.EmbedOwner.getEmbedCollection(),4,7
org.apache.openjpa.persistence.jdbc.annotations.EmbedOwner.setEmbedCollection(Set<EmbedValue>),4,12
org.apache.openjpa.persistence.identity.entityasidentity.TestEntityAsIdentityFields.setUp(),4,6
org.apache.openjpa.persistence.identity.entityasidentity.TestEntityAsIdentityFields.testEntityAsIdentityField001(),23,33
org.apache.openjpa.persistence.identity.entityasidentity.TestEntityAsIdentityFields.testEntityAsIdentityField002A(),24,49
org.apache.openjpa.persistence.identity.entityasidentity.TestEntityAsIdentityFields.testEntityAsIdentityField002B(),23,46
org.apache.openjpa.persistence.identity.entityasidentity.TestEntityAsIdentityFields.testEntityAsIdentityField002C(),25,65
org.apache.openjpa.persistence.identity.entityasidentity.TestEntityAsIdentityFields.testEntityAsIdentityField003A(),27,48
org.apache.openjpa.persistence.identity.entityasidentity.TestEntityAsIdentityFields.testEntityAsIdentityField004A(),29,72
org.apache.openjpa.persistence.identity.entityasidentity.TestEntityAsIdentityFields.createPopulation(EntityManager),22,69
org.apache.openjpa.persistence.jdbc.kernel.TestEJBAutoIncrement.TestEJBAutoIncrement(String),6,7
org.apache.openjpa.persistence.jdbc.kernel.TestEJBAutoIncrement.setUp(),4,10
org.apache.openjpa.persistence.jdbc.kernel.TestEJBAutoIncrement.testInsert(),15,102
org.apache.openjpa.persistence.jdbc.kernel.TestEJBAutoIncrement.testUpdate(),14,72
org.apache.openjpa.persistence.jdbc.kernel.TestEJBAutoIncrement.testCircularReferences(),15,72
org.apache.openjpa.persistence.jdbc.kernel.TestEJBAutoIncrement.testMultipleFlushes(),16,91
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCEntityB.getEntityBData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCEntityB.setEntityBData(String),4,10
org.apache.openjpa.persistence.access.AbstractMappedSuperField.setId(int),1,1
org.apache.openjpa.persistence.access.AbstractMappedSuperField.getId(),0,0
org.apache.openjpa.persistence.access.AbstractMappedSuperField.setName(String),3,6
org.apache.openjpa.persistence.access.AbstractMappedSuperField.getName(),2,3
org.apache.openjpa.persistence.access.AbstractMappedSuperField.getCreateDate(),2,3
org.apache.openjpa.persistence.access.AbstractMappedSuperField.setCreateDate(Date),3,5
org.apache.openjpa.persistence.access.AbstractMappedSuperField.equals(Object),6,14
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity1.Entity1(),1,1
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity1.Entity1(long,String,int)",3,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity1.getPk(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity1.setStringField(String),4,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity1.getStringField(),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity1.setIntField(int),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity1.getIntField(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity1.setEntity2Field(Entity2),4,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity1.getEntity2Field(),2,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity1.toString(),2,8
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.TestIrregularJoins(String),4,6
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.TestIrregularJoins(),5,8
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.setUp(),27,193
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testNonPKOneOne(),5,7
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testEagerNonPKOneOne(),9,15
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.nonPKOneOne(OpenJPAEntityManager),9,18
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testPartialOneOne(),6,9
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testEagerPartialOneOne(),10,18
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.partialOneOne(OpenJPAEntityManager),9,19
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testVerticalNonPKOneOne(),6,9
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testEagerVerticalNonPKOneOne(),10,17
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.verticalNonPKOneOne(OpenJPAEntityManager),10,26
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testVerticalPartialOneOne(),7,11
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testEagerVerticalPartialOneOne(),11,20
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.verticalPartialOneOne(OpenJPAEntityManager),10,29
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testNonPKManyMany(),5,7
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testEagerNonPKManyMany(),9,15
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.nonPKManyMany(OpenJPAEntityManager),13,26
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testPartialManyMany(),6,9
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testEagerPartialManyMany(),11,18
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.partialManyMany(OpenJPAEntityManager),13,28
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testVerticalNonPKManyMany(),6,9
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testEagerVerticalNonPKManyMany(),10,17
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.verticalNonPKManyMany(OpenJPAEntityManager),14,42
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testVerticalPartialManyMany(),7,11
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testEagerVerticalPartialManyMany(),11,20
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.verticalPartialManyMany(OpenJPAEntityManager),14,47
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testVerticalConstant(),10,34
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testConstantOneOne(),6,9
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testEagerConstantOneOne(),10,17
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.constantOneOne(OpenJPAEntityManager),9,20
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testConstantOneMany(),6,9
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.testEagerConstantOneMany(),10,17
org.apache.openjpa.persistence.jdbc.meta.TestIrregularJoins.constantOneMany(OpenJPAEntityManager),13,23
org.apache.openjpa.persistence.kernel.TestCalendarFields.TestCalendarFields(String),7,11
org.apache.openjpa.persistence.kernel.TestCalendarFields.setUp(),4,5
org.apache.openjpa.persistence.kernel.TestCalendarFields.testFieldDefaultTimeZone(),19,41
org.apache.openjpa.persistence.kernel.TestCalendarFields.testTimeZoneEquals(),14,36
org.apache.openjpa.persistence.kernel.TestCalendarFields.testCalendarQuery(),27,123
"org.apache.openjpa.persistence.kernel.TestCalendarFields.newCalendar(Date,String)",8,20
org.apache.openjpa.persistence.kernel.TestCalendarFields.testMutateCalendarDirties(),39,160
"org.apache.openjpa.persistence.kernel.TestCalendarFields.setTimeInMillis(Calendar,long)",12,31
"org.apache.openjpa.persistence.kernel.TestCalendarFields.assertTimeZonesEquals(CalendarFields,CalendarFields)",9,26
org.apache.openjpa.persistence.access.PropertySub3.getCreateDate(),3,5
org.apache.openjpa.persistence.access.PropertySub3.setCreateDate(Date),4,8
org.apache.openjpa.persistence.access.PropertySub3.equals(Object),9,29
org.apache.openjpa.persistence.access.xml.XMLPropertySub3.getCreateDate(),3,5
org.apache.openjpa.persistence.access.xml.XMLPropertySub3.setCreateDate(Date),4,8
org.apache.openjpa.persistence.access.xml.XMLPropertySub3.equals(Object),10,32
org.apache.openjpa.persistence.jdbc.update.TestTimestampVersion.setUp(),7,11
org.apache.openjpa.persistence.jdbc.update.TestTimestampVersion.testQueryOnVersion(),20,40
org.apache.openjpa.persistence.jdbc.update.TestTimestampVersion.testBulkUpdateOnTimestampedVersion(),36,78
org.apache.openjpa.persistence.jdbc.update.TestTimestampVersion.testBulkUpdateOnNumericVersion(),27,63
org.apache.openjpa.persistence.jpql.entities.IOrderedEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.entities.IOrderedEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.entities.IOrderedEntity.getEntities(),4,4
org.apache.openjpa.persistence.jpql.entities.IOrderedEntity.setEntities(List<INameEntity>),5,6
org.apache.openjpa.persistence.jpql.entities.IOrderedEntity.addEntity(INameEntity),4,5
org.apache.openjpa.persistence.jpql.entities.IOrderedEntity.removeEntity(int),4,5
"org.apache.openjpa.persistence.jpql.entities.IOrderedEntity.insertEntity(int,INameEntity)",4,6
org.apache.openjpa.persistence.jpql.entities.IOrderedEntity.toString(),1,2
org.apache.openjpa.persistence.jdbc.mapping.TestCompositeIdTraversalInSQLMapping.TestCompositeIdTraversalInSQLMapping(String),8,9
org.apache.openjpa.persistence.jdbc.mapping.TestCompositeIdTraversalInSQLMapping.setUp(),5,8
"org.apache.openjpa.persistence.jdbc.mapping.TestCompositeIdTraversalInSQLMapping.persist(Integer,String,String)",17,50
org.apache.openjpa.persistence.jdbc.mapping.TestCompositeIdTraversalInSQLMapping.testTraversalWhenSQLSelectsBothEndOfTheRelation(),32,123
org.apache.openjpa.persistence.jdbc.mapping.TestCompositeIdTraversalInSQLMapping.testTraversalWhenSQLSelectsOnlyOneEndOfTheRelation(),30,95
org.apache.openjpa.persistence.jdbc.mapping.TestCompositeIdTraversalInSQLMapping.testTraversalWhenSQLSelectsUnrelatedInstances(),33,142
org.apache.openjpa.persistence.jdbc.mapping.TestCompositeIdTraversalInSQLMapping.testRecursiveTraversal(),30,87
"org.apache.openjpa.persistence.jdbc.mapping.TestCompositeIdTraversalInSQLMapping.persistChainedRelative(Integer,int)",16,54
"org.apache.openjpa.persistence.jdbc.mapping.TestCompositeIdTraversalInSQLMapping.createSelfJoinSQL(String,int,int)",13,52
org.apache.openjpa.persistence.annotations.TestVersion.TestVersion(String),5,6
org.apache.openjpa.persistence.annotations.TestVersion.setUp(),14,70
org.apache.openjpa.persistence.annotations.TestVersion.testVersionNumeric(),23,57
org.apache.openjpa.persistence.annotations.TestVersion.testVersionTimestamp(),24,58
org.apache.openjpa.persistence.annotations.TestVersion.testVersionSubclass(),23,57
org.apache.openjpa.persistence.annotations.TestVersion.testVersionNoChange(),12,31
org.apache.openjpa.persistence.annotations.TestVersion.testNoDefaultVersionWithoutFieldOrColumn(),25,45
org.apache.openjpa.persistence.annotations.TestVersion.testVersionWithField(),23,43
org.apache.openjpa.persistence.jdbc.annotations.TablePerClass2.setBasic2(String),3,4
org.apache.openjpa.persistence.jdbc.annotations.TablePerClass2.getBasic2(),2,3
org.apache.openjpa.persistence.callbacks.PostPersistEntity.postPersist(),6,9
org.apache.openjpa.persistence.callbacks.PostPersistEntity.getName(),2,3
org.apache.openjpa.persistence.callbacks.PostPersistEntity.setName(String),3,6
org.apache.openjpa.persistence.callbacks.PostPersistEntity.getId(),0,0
org.apache.openjpa.persistence.callbacks.PostPersistEntity.getByReflection(String),13,17
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC2.getPc2Field(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC2.setPc2Field(int),2,5
org.apache.openjpa.persistence.criteria.BlogUser.getChars(),1,2
org.apache.openjpa.persistence.criteria.BlogUser.setChars(char[]),3,7
org.apache.openjpa.persistence.criteria.BlogUser.getCharacters(),2,3
org.apache.openjpa.persistence.criteria.BlogUser.setCharacters(Character[]),4,6
org.apache.openjpa.persistence.criteria.BlogUser.getId(),0,0
org.apache.openjpa.persistence.criteria.BlogUser.setId(int),1,1
org.apache.openjpa.persistence.criteria.BlogUser.getVersion(),1,2
org.apache.openjpa.persistence.criteria.BlogUser.setVersion(int),2,5
org.apache.openjpa.persistence.criteria.BlogUser.getUsername(),2,3
org.apache.openjpa.persistence.criteria.BlogUser.setUsername(String),3,6
org.apache.openjpa.persistence.criteria.BlogUser.getPic(),1,2
org.apache.openjpa.persistence.criteria.BlogUser.setPic(byte[]),2,5
org.apache.openjpa.persistence.jdbc.annotations.EmbeddableSuper.EmbeddableSuper(),1,1
org.apache.openjpa.persistence.jdbc.annotations.EmbeddableSuper.getPK(),0,0
org.apache.openjpa.persistence.jdbc.annotations.EmbeddableSuper.setPK(long),1,1
org.apache.openjpa.persistence.jdbc.annotations.EmbeddableSuper.getTrans(),1,2
org.apache.openjpa.persistence.jdbc.annotations.EmbeddableSuper.setTrans(int),2,5
org.apache.openjpa.persistence.jdbc.annotations.EmbeddableSuper.getClob(),2,3
org.apache.openjpa.persistence.jdbc.annotations.EmbeddableSuper.setClob(String),3,6
org.apache.openjpa.persistence.jdbc.annotations.EmbeddableSuper.getVersion(),1,2
org.apache.openjpa.persistence.jdbc.annotations.EmbeddableSuper.setVersion(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.PartialJoinPC3.getNonPK3(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.PartialJoinPC3.setNonPK3(NonPKJoinPC3),2,2
org.apache.openjpa.persistence.jdbc.common.apps.PartialJoinPC3.getNonPK2s(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.PartialJoinPC3.setNonPK2s(Set),1,2
org.apache.openjpa.enhance.TestUnenhancedCompoundPK.setUp(),7,11
org.apache.openjpa.enhance.TestUnenhancedCompoundPK.testCompoundPKFieldAccessUserDefined(),9,26
org.apache.openjpa.enhance.TestUnenhancedCompoundPK.testCompoundPKFieldAccessOpenJPADefined(),9,26
org.apache.openjpa.enhance.TestUnenhancedCompoundPK.testCompoundPKPropertyAccessUserDefined(),9,26
org.apache.openjpa.enhance.TestUnenhancedCompoundPK.testCompoundPKPropertyAccessOpenJPADefined(),9,26
"org.apache.openjpa.enhance.TestUnenhancedCompoundPK.compoundPKHelper(Object,Object,boolean)",15,20
org.apache.openjpa.persistence.delimited.identifiers.EntityD.EntityD(),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityD.EntityD(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityD.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityD.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityD.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityD.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.EntityD.getEntityCs(),2,5
org.apache.openjpa.persistence.delimited.identifiers.EntityD.setEntityCs(Collection<EntityC>),4,11
org.apache.openjpa.persistence.delimited.identifiers.EntityD.addEntityC(EntityC),2,7
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.CompositeId.CompositeId(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.CompositeId.CompositeId(String),7,15
"org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.CompositeId.CompositeId(Integer,String)",4,6
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.CompositeId.getId(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.CompositeId.setId(Integer),2,2
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.CompositeId.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.CompositeId.setName(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.CompositeId.toString(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.CompositeId.equals(Object),4,9
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.CompositeId.hashCode(),3,7
org.apache.openjpa.persistence.LockScopesHelper.toLockScope(PessimisticLockScope),14,29
org.apache.openjpa.persistence.LockScopesHelper.fromLockScope(int),14,28
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuperSub.EmbeddableSuperSub(),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuperSub.getSub(),2,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuperSub.setSub(EmbeddableSuperSub),3,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuperSub.getSup(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuperSub.setSup(EmbeddableSuper),3,6
org.apache.openjpa.persistence.generationtype.TestEntityWithGeneratedValueAndPostPersist.setUp(),8,9
org.apache.openjpa.persistence.generationtype.TestEntityWithGeneratedValueAndPostPersist.setValue(int),5,8
org.apache.openjpa.persistence.generationtype.TestEntityWithGeneratedValueAndPostPersist.testValueCapturedInPostPersistAfterCommit(),24,57
org.apache.openjpa.persistence.generationtype.TestEntityWithGeneratedValueAndPostPersist.testValueCapturedInPostPersistAfterFlush(),26,76
org.apache.openjpa.persistence.generationtype.TestEntityWithGeneratedValueAndPostPersist.getEM(),4,6
org.apache.openjpa.persistence.query.TestEJBPolymorphicQuery.TestEJBPolymorphicQuery(String),6,7
org.apache.openjpa.persistence.query.TestEJBPolymorphicQuery.setUp(),13,29
org.apache.openjpa.persistence.query.TestEJBPolymorphicQuery.testPolymorphicSelect(),20,29
org.apache.openjpa.persistence.query.TestEJBPolymorphicQuery.testPolymorphicDelete(),13,17
org.apache.openjpa.lib.util.TimestampHelper.getNanoPrecisionTimestamp(),16,38
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.getAge(),3,4
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.getNickNames(),4,6
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.addNickName(String),5,11
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.getCreditRating(),3,5
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.addCreditRating(CreditRating),3,6
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.getTimestamps(),3,3
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.addTimestamp(Timestamp),2,4
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.getLobs(),3,4
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.addLob(String),4,7
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.getEmbed(),1,4
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.setEmbed(Embed_Embed),2,7
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.getEmbeds(),3,5
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.addEmbed(Embed_Embed),3,8
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.getEmbed1ToOnes(),3,5
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.addEmbed1ToOnes(Embed_ToOne),3,8
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.getTransientJavaValue(),3,5
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.setTransientJavaValue(Integer),4,10
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.getTransientValue(),2,3
org.apache.openjpa.persistence.embed.EntityA_Embed_Complex.setTransientValue(Integer),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.Employee.getPhoneNumbers(),4,6
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.Employee.addPhoneNumber(FullPhoneName,PhoneNumber)",4,10
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.Employee.removePhoneNumber(FullPhoneName),4,8
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.Employee.equals(Object),14,48
org.apache.openjpa.persistence.jdbc.maps.qualified.path.Employee.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.qualified.path.Employee.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.qualified.path.Employee.getPersonalInfo(),2,6
org.apache.openjpa.persistence.jdbc.maps.qualified.path.Employee.setPersonalInfo(PersonalInfo),3,11
"org.apache.openjpa.persistence.datacache.common.apps.SelfReferencingCacheTestObject.SelfReferencingCacheTestObject(String,SelfReferencingCacheTestObject)",9,20
org.apache.openjpa.persistence.datacache.common.apps.SelfReferencingCacheTestObject.getO(),5,5
org.apache.openjpa.persistence.datacache.common.apps.SelfReferencingCacheTestObject.getStr(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.EmployeePK.EmployeePK(),1,1
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.EmployeePK.EmployeePK(String,Date)",5,9
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.EmployeePK.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.EmployeePK.getBDay(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.EmployeePK.equals(Object),5,11
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.EmployeePK.hashCode(),4,12
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.Company.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.Company.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.Company.getOrganization(),3,3
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.Company.addToOrganization(Division,VicePresident)",6,8
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.Company.removeFromOrganization(Division),4,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.Company.getOrganization(Division),5,5
"org.apache.openjpa.persistence.criteria.results.FooBar.FooBar(long,long)",4,8
org.apache.openjpa.persistence.criteria.results.FooBar.getFid(),1,2
org.apache.openjpa.persistence.criteria.results.FooBar.getBid(),1,2
org.apache.openjpa.persistence.jdbc.annotations.TestMixedAccess.testMixedAccessEntityError(),21,45
org.apache.openjpa.persistence.jdbc.annotations.TestMixedAccess.testInappropriateTransientError(),21,40
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.Company.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.Company.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.Company.getOrganization(),3,3
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.Company.addToOrganization(VicePresident,FileName)",7,11
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.Company.removeFromOrganization(FileName),5,10
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.Company.getOrganization(FileName),6,10
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.setUp(),9,12
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.setCandidate(Query,Class)",17,43
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.queryQualifiedId(boolean),49,231
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.testQueryObject(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.createObj(),16,27
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.createEmployee(EntityManager,int)",14,41
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.createDivision(EntityManager,int)",6,10
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.findObj(),9,15
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.queryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.queryPhoneNumber(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.queryEmployee(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.assertEmployee(Employee),10,27
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.assertPhoneNumber(PhoneNumber),10,20
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.checkPhoneMap(Map<Division,PhoneNumber>,Map<Division,PhoneNumber>)",14,37
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.TestMany2ManyMap.checkEmpMap(Map<Division,Employee>,Map<Division,Employee>)",15,37
org.apache.openjpa.persistence.datacache.TestQueryResultTypes.TestQueryResultTypes(String),6,8
org.apache.openjpa.persistence.datacache.TestQueryResultTypes.testQueryResultTypesWithThis(),17,33
org.apache.openjpa.persistence.datacache.TestQueryResultTypes.testQueryResultTypesWithRelated(),18,40
org.apache.openjpa.persistence.datacache.TestQueryResultTypes.testSingleProjectionOfNonThisRelation(),18,30
org.apache.openjpa.persistence.datacache.TestQueryResultTypes.testSingleProjectionOfThisRelation(),17,25
org.apache.openjpa.persistence.datacache.TestQueryResultTypes.testNoResultClause(),17,24
org.apache.openjpa.persistence.datacache.TestQueryResultTypes.getBroker(),7,9
org.apache.openjpa.persistence.event.common.apps.RuntimeTest2.RuntimeTest2(),2,2
"org.apache.openjpa.persistence.event.common.apps.RuntimeTest2.RuntimeTest2(String,int)",4,5
org.apache.openjpa.persistence.event.common.apps.RuntimeTest2.getIntField2(),1,2
org.apache.openjpa.persistence.event.common.apps.RuntimeTest2.setIntField2(int),2,5
org.apache.openjpa.persistence.common.apps.RuntimeTest2.RuntimeTest2(int),3,4
"org.apache.openjpa.persistence.common.apps.RuntimeTest2.RuntimeTest2(String,int)",4,5
org.apache.openjpa.persistence.common.apps.RuntimeTest2.getIntField2(),1,2
org.apache.openjpa.persistence.common.apps.RuntimeTest2.setIntField2(int),2,5
org.apache.openjpa.persistence.common.apps.RuntimeTest2.toString(),2,8
org.apache.openjpa.persistence.jdbc.meta.TestEJBOuterJoinValues.TestEJBOuterJoinValues(String),7,8
org.apache.openjpa.persistence.jdbc.meta.TestEJBOuterJoinValues.setUp(),13,26
org.apache.openjpa.persistence.jdbc.meta.TestEJBOuterJoinValues.testNull(),11,29
org.apache.openjpa.persistence.jdbc.meta.TestEJBOuterJoinValues.testUpdate(),12,30
org.apache.openjpa.persistence.jdbc.meta.TestEJBOuterJoinValues.testInsert(),17,26
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingMappedSuper4.getPoint(),0,0
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingMappedSuper4.setPoint(Point),1,1
org.apache.openjpa.persistence.criteria.Address.Address(),1,1
"org.apache.openjpa.persistence.criteria.Address.Address(String,String,String,String)",8,18
org.apache.openjpa.persistence.criteria.Address.getId(),0,0
org.apache.openjpa.persistence.criteria.Address.getStreet(),2,3
org.apache.openjpa.persistence.criteria.Address.setStreet(String),3,6
org.apache.openjpa.persistence.criteria.Address.getCity(),2,3
org.apache.openjpa.persistence.criteria.Address.setCity(String),3,6
org.apache.openjpa.persistence.criteria.Address.getCounty(),2,3
org.apache.openjpa.persistence.criteria.Address.setCounty(String),3,6
org.apache.openjpa.persistence.criteria.Address.getState(),1,1
org.apache.openjpa.persistence.criteria.Address.setState(String),2,2
org.apache.openjpa.persistence.criteria.Address.getZipcode(),4,4
org.apache.openjpa.persistence.criteria.Address.getCountry(),2,3
org.apache.openjpa.persistence.criteria.Address.setCountry(String),3,6
org.apache.openjpa.persistence.criteria.Address.setZipcode(String),5,9
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdResultSetAnnotations.setUp(),25,70
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdResultSetAnnotations.tearDown(),3,4
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdResultSetAnnotations.createEMF(Object),12,15
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdResultSetAnnotations.createChevrolet(int),7,15
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdResultSetAnnotations.createPontiac(int),6,14
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdResultSetAnnotations.testCreate(),10,16
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdResultSetAnnotations.runQueries(),5,5
org.apache.openjpa.persistence.delimited.identifiers.TestDelimIdResultSetAnnotations.resultSetQuery(),19,61
org.apache.openjpa.persistence.delimited.identifiers.Pontiac.Pontiac(),1,1
org.apache.openjpa.persistence.delimited.identifiers.Pontiac.Pontiac(int),1,1
org.apache.openjpa.jdbc.meta.TestBooleanValue.setUp(),4,5
org.apache.openjpa.jdbc.meta.TestBooleanValue.testBooleanValue(),31,61
org.apache.openjpa.persistence.criteria.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.criteria.Employee.setContactInfo(Contact),3,10
org.apache.openjpa.persistence.criteria.Employee.getContactInfo(),2,5
org.apache.openjpa.persistence.criteria.Employee.setDepartment(Department),2,6
org.apache.openjpa.persistence.criteria.Employee.getDepartment(),1,3
org.apache.openjpa.persistence.criteria.Employee.setSpouse(Employee),3,6
org.apache.openjpa.persistence.criteria.Employee.getSpouse(),2,3
org.apache.openjpa.persistence.criteria.Employee.getName(),2,3
org.apache.openjpa.persistence.criteria.Employee.setName(String),3,6
org.apache.openjpa.persistence.criteria.Employee.setManager(Manager),2,6
org.apache.openjpa.persistence.criteria.Employee.getManager(),1,3
org.apache.openjpa.persistence.criteria.Employee.setSalary(long),2,5
org.apache.openjpa.persistence.criteria.Employee.getSalary(),1,2
org.apache.openjpa.persistence.criteria.Employee.setRating(int),2,5
org.apache.openjpa.persistence.criteria.Employee.getRating(),1,2
org.apache.openjpa.persistence.log.TestConnectionRetainModeWarning.tearDown(),3,4
org.apache.openjpa.persistence.log.TestConnectionRetainModeWarning.getLog(String),7,13
org.apache.openjpa.persistence.log.TestConnectionRetainModeWarning.getLog(String).$1.isEnabled(short),3,3
org.apache.openjpa.persistence.log.TestConnectionRetainModeWarning.getLog(String).$1.trace(Object),6,7
"org.apache.openjpa.persistence.log.TestConnectionRetainModeWarning.getLog(String).$1.log(short,String,Throwable)",7,8
org.apache.openjpa.persistence.log.TestConnectionRetainModeWarning.getLog(String).$1.error(Object),6,7
org.apache.openjpa.persistence.log.TestConnectionRetainModeWarning.getLog(String).$1.warn(Object),4,6
org.apache.openjpa.persistence.log.TestConnectionRetainModeWarning.getLog(String).$1.info(Object),6,7
org.apache.openjpa.persistence.log.TestConnectionRetainModeWarning.assertMessageContains(String),5,11
org.apache.openjpa.persistence.log.TestConnectionRetainModeWarning.assertMessageNotFound(String),8,12
org.apache.openjpa.persistence.log.TestConnectionRetainModeWarning.testInfoMessage(),21,28
org.apache.openjpa.persistence.log.TestConnectionRetainModeWarning.testInfoMessageNotFound(),22,30
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI3.EntityI3(),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI3.EntityI3(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI3.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI3.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI3.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI3.setName(String),4,10
org.apache.openjpa.jta.ContainerTest.setUp(Object),8,12
org.apache.openjpa.jta.ContainerTest.runTest(),11,17
org.apache.openjpa.jta.ContainerTest.tearDown(),19,30
org.apache.openjpa.jta.ContainerTest.commit(),8,9
org.apache.openjpa.jta.ContainerTest.rollback(),8,9
org.apache.openjpa.persistence.Generator.getName(),3,4
org.apache.openjpa.persistence.Generator.next(),3,3
org.apache.openjpa.persistence.Generator.current(),6,9
org.apache.openjpa.persistence.Generator.allocate(int),7,9
org.apache.openjpa.persistence.Generator.getDelegate(),18,19
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCEntityB.getEntityBData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCEntityB.setEntityBData(String),4,10
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCLeafA.getLeafAData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCLeafA.setLeafAData(String),4,10
org.apache.openjpa.persistence.inheritance.entities.EntityMapping.InheritanceEntityMapping.getEntityClass(),12,197
org.apache.openjpa.persistence.inheritance.entities.EntityMapping.InheritanceEntityMapping.getEntityName(),4,6
org.apache.openjpa.persistence.inheritance.entities.EntityMapping.createEntityObjectInstance(InheritanceEntityMapping),10,21
org.apache.openjpa.persistence.inheritance.entity.ManagedIface.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.ManagedIface.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entity.ManagedIface.getIntFieldSup(),2,2
org.apache.openjpa.persistence.inheritance.entity.ManagedIface.setIntFieldSup(int),3,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.Department.getDeptId(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.Department.setDeptId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.Department.getEmpMap(),3,7
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.Department.setEmpMap(Map<EmployeePK,Employee>)",4,12
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.Department.addEmployee(Employee),4,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex2.Department.removeEmployee(EmployeePK),4,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.Division.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.Division.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.Division.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.Division.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.Division.equals(Object),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.Division.hashCode(),4,11
org.apache.openjpa.persistence.inheritance.jointable.onetomany.TestMapsIdWithAutoGeneratedKey.setUp(),17,26
org.apache.openjpa.persistence.inheritance.jointable.onetomany.TestMapsIdWithAutoGeneratedKey.testPersistShirtWithPart(),27,68
org.apache.openjpa.persistence.jdbc.maps.update.MultilingualString.MultilingualString(),2,2
"org.apache.openjpa.persistence.jdbc.maps.update.MultilingualString.MultilingualString(String,String)",5,10
org.apache.openjpa.persistence.jdbc.maps.update.MultilingualString.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.update.MultilingualString.setId(long),1,1
org.apache.openjpa.persistence.jdbc.maps.update.MultilingualString.getMap(),3,6
"org.apache.openjpa.persistence.jdbc.maps.update.MultilingualString.setMap(Map<String,LocalizedString>)",4,9
"org.apache.openjpa.persistence.jdbc.maps.update.MultilingualString.setText(String,String)",6,12
org.apache.openjpa.persistence.jdbc.maps.update.MultilingualString.getText(String),6,11
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.NamedEntity.getName(),2,2
org.apache.openjpa.persistence.inheritance.entity.SubclassD.setClassDName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.SubclassD.getClassDName(),2,3
org.apache.openjpa.persistence.inheritance.entity.SubclassD.toString(),2,5
org.apache.openjpa.persistence.kernel.TestTransition2.TestTransition2(),5,6
org.apache.openjpa.persistence.kernel.TestTransition2.TestTransition2(String),4,5
org.apache.openjpa.persistence.kernel.TestTransition2.setUp(),17,31
org.apache.openjpa.persistence.kernel.TestTransition2.testFlagTransitions1(),21,28
org.apache.openjpa.persistence.kernel.TestTransition2.testFlagTransitions2(),22,31
org.apache.openjpa.persistence.kernel.TestTransition2.testFlagTransitions3(),21,31
org.apache.openjpa.persistence.kernel.TestTransition2.testFlagTransitions4(),23,34
org.apache.openjpa.persistence.kernel.TestTransition2.testFlagTransitions5(),19,26
org.apache.openjpa.persistence.kernel.TestTransition2.testFlagTransitions6(),22,36
org.apache.openjpa.persistence.kernel.TestTransition2.testFlagTransitions7(),23,40
org.apache.openjpa.persistence.kernel.TestTransition2.testStateTransitions1(),21,30
org.apache.openjpa.persistence.kernel.TestTransition2.testStateTransitions2(),22,29
org.apache.openjpa.persistence.kernel.TestTransition2.testStateTransitions3(),19,26
org.apache.openjpa.persistence.kernel.TestTransition2.testStateTransitions3a(),19,26
org.apache.openjpa.persistence.kernel.TestTransition2.testStateTransitions4(),20,29
org.apache.openjpa.persistence.kernel.TestTransition2.testStateTransitions4a(),20,29
org.apache.openjpa.persistence.kernel.TestTransition2.testStateTransitions5(),25,43
org.apache.openjpa.persistence.kernel.TestTransition2.testStateTransitions6(),20,30
org.apache.openjpa.persistence.kernel.TestTransition2.testOptStateTransitions1(),20,29
org.apache.openjpa.persistence.kernel.TestTransition2.testOptStateTransitions2(),21,28
org.apache.openjpa.persistence.kernel.TestTransition2.testOptStateTransitions3(),19,27
org.apache.openjpa.persistence.kernel.TestTransition2.testOptStateTransitions4(),19,28
org.apache.openjpa.persistence.kernel.TestTransition2.testOptStateTransitions5(),25,44
org.apache.openjpa.persistence.kernel.TestTransition2.testOptStateTransitions6(),19,27
org.apache.openjpa.persistence.kernel.TestTransition2.testOptRetainStateTransitions1(),21,30
org.apache.openjpa.persistence.kernel.TestTransition2.testOptRetainStateTransitions2(),22,29
org.apache.openjpa.persistence.kernel.TestTransition2.testOptRetainStateTransitions3(),20,28
org.apache.openjpa.persistence.kernel.TestTransition2.testOptRetainStateTransitions4(),20,29
org.apache.openjpa.persistence.kernel.TestTransition2.testOptRetainStateTransitions5(),26,45
org.apache.openjpa.persistence.kernel.TestTransition2.testOptRetainStateTransitions6(),25,34
org.apache.openjpa.persistence.kernel.TestTransition2.testRetainStateTransitions1(),22,31
org.apache.openjpa.persistence.kernel.TestTransition2.testRetainStateTransitions2(),23,30
org.apache.openjpa.persistence.kernel.TestTransition2.testRetainStateTransitions3(),21,29
org.apache.openjpa.persistence.kernel.TestTransition2.testRetainStateTransitions4(),21,30
org.apache.openjpa.persistence.kernel.TestTransition2.testRetainStateTransitions5(),26,44
org.apache.openjpa.persistence.kernel.TestTransition2.testRetainStateTransitions6(),21,29
org.apache.openjpa.persistence.kernel.TestTransition2.testTransientStateTransitions1(),20,27
org.apache.openjpa.persistence.kernel.TestTransition2.testTransientStateTransitions2(),20,27
org.apache.openjpa.persistence.kernel.TestTransition2.testTransientStateTransitions3(),23,32
org.apache.openjpa.persistence.kernel.TestTransition2.createTest2(),5,8
"org.apache.openjpa.persistence.kernel.TestTransition2.createTest2(String,int)",6,13
org.apache.openjpa.persistence.kernel.TestTransition2.createTest2(ModRuntimeTest2),7,19
org.apache.openjpa.persistence.kernel.TestTransition2.changeTest2(ModRuntimeTest2),13,24
"org.apache.openjpa.persistence.kernel.TestTransition2.assertTest2Changed(ModRuntimeTest2,boolean)",13,22
org.apache.openjpa.persistence.kernel.TestTransition2.assertTest2Orig(ModRuntimeTest2),22,42
org.apache.openjpa.persistence.kernel.TestTransition2.assertTransient(Object),11,20
"org.apache.openjpa.persistence.kernel.TestTransition2.assertPersistent(Object,boolean,boolean,boolean,boolean)",15,34
org.apache.openjpa.persistence.cache.jpa.TestCacheModeNoneDataCacheTrue.getEntityManagerFactory(),23,47
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiB.setStringB(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiB.getStringB(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiB.setIntB(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiB.getIntB(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiB.ID.ID(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiB.ID.ID(String),2,3
org.apache.openjpa.persistence.inheritance.polymorphic.Translation.getTranslatable(),1,3
org.apache.openjpa.persistence.inheritance.polymorphic.Translation.setTranslatable(Translatable),2,6
org.apache.openjpa.persistence.detach.Entity20.Entity20(),1,1
org.apache.openjpa.persistence.detach.Entity20.Entity20(int),11,21
org.apache.openjpa.persistence.detach.Entity20.setId(Integer),2,2
org.apache.openjpa.persistence.detach.Entity20.getId(),1,1
org.apache.openjpa.persistence.detach.Entity20.setName(String),3,6
org.apache.openjpa.persistence.detach.Entity20.getName(),2,3
org.apache.openjpa.persistence.detach.Entity20.setDate(Date),3,5
org.apache.openjpa.persistence.detach.Entity20.getDate(),2,4
org.apache.openjpa.persistence.detach.Entity20.setTime(Time),3,5
org.apache.openjpa.persistence.detach.Entity20.getTime(),2,4
org.apache.openjpa.persistence.detach.Entity20.setTimestamp(Timestamp),3,5
org.apache.openjpa.persistence.detach.Entity20.getTimestamp(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.InvertB.InvertB(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.InvertB.InvertB(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.InvertB.getInvertA(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.InvertB.setInvertA(InvertA),2,4
org.apache.openjpa.persistence.jdbc.common.apps.InvertB.getTest(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.InvertB.setTest(String),3,4
org.apache.openjpa.persistence.jdbc.common.apps.InvertB.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.InvertB.setId(int),1,1
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_RelKey_JT.getId(),0,0
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_RelKey_JT.getName(),2,3
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_RelKey_JT.setName(String),3,6
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_RelKey_JT.setBi1mjt(Bi_1ToM_Map_RelKey_JT),5,8
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_RelKey_JT.getBi1mjt(),4,5
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_RelKey_JT.hashCode(),3,5
org.apache.openjpa.persistence.compat.EntityC_B1M_Map_RelKey_JT.equals(Object),7,17
org.apache.openjpa.persistence.detach.xml.Passenger.setId(long),1,1
org.apache.openjpa.persistence.detach.xml.Passenger.getId(),0,0
org.apache.openjpa.persistence.detach.xml.Passenger.setName(String),3,6
org.apache.openjpa.persistence.detach.xml.Passenger.getName(),2,3
org.apache.openjpa.persistence.detach.xml.Passenger.setAutos(Collection<Automobile>),4,7
org.apache.openjpa.persistence.detach.xml.Passenger.getAutos(),3,4
org.apache.openjpa.persistence.detachment.model.DMCustomerInventory.DMCustomerInventory(),2,2
org.apache.openjpa.persistence.detachment.model.DMCustomerInventory.getId(),0,0
org.apache.openjpa.persistence.detachment.model.DMCustomerInventory.setId(long),1,1
org.apache.openjpa.persistence.detachment.model.DMCustomerInventory.getItem(),1,3
org.apache.openjpa.persistence.detachment.model.DMCustomerInventory.setItem(DMItem),2,6
org.apache.openjpa.persistence.detachment.model.DMCustomerInventory.getQuantity(),1,2
org.apache.openjpa.persistence.detachment.model.DMCustomerInventory.setQuantity(int),2,5
org.apache.openjpa.persistence.detachment.model.DMCustomerInventory.getCustomer(),1,3
org.apache.openjpa.persistence.detachment.model.DMCustomerInventory.setCustomer(DMCustomer),2,6
org.apache.openjpa.persistence.jdbc.order.BattingOrder.setBatters(List<Player>),4,7
org.apache.openjpa.persistence.jdbc.order.BattingOrder.getBatters(),3,4
org.apache.openjpa.persistence.jdbc.order.BattingOrder.setPinchHitters(List<Player>),5,11
org.apache.openjpa.persistence.jdbc.order.BattingOrder.getPinchHitters(),4,6
org.apache.openjpa.persistence.jdbc.order.BattingOrder.setFixedBatters(List<Player>),5,11
org.apache.openjpa.persistence.jdbc.order.BattingOrder.getFixedBatters(),4,6
org.apache.openjpa.persistence.jdbc.order.BattingOrder.setTitles(List<String>),4,7
org.apache.openjpa.persistence.jdbc.order.BattingOrder.getTitles(),3,4
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimIdResultSetAnnotations.setUp(),32,70
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimIdResultSetAnnotations.tearDown(),3,4
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimIdResultSetAnnotations.createCat(int),7,15
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimIdResultSetAnnotations.createDog(int),7,15
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimIdResultSetAnnotations.testCreate(),10,16
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimIdResultSetAnnotations.runQueries(),5,5
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimIdResultSetAnnotations.resultSetQuery(),22,64
org.apache.openjpa.persistence.embed.Address.getGeocode(),1,3
org.apache.openjpa.persistence.embed.Address.setGeocode(Geocode),2,6
org.apache.openjpa.persistence.embed.Address.getStreetAddress(),3,5
org.apache.openjpa.persistence.embed.Address.setStreetAddress(String),4,10
org.apache.openjpa.persistence.embed.Address.getCity(),2,3
org.apache.openjpa.persistence.embed.Address.setCity(String),3,6
org.apache.openjpa.persistence.embed.Address.getState(),1,1
org.apache.openjpa.persistence.embed.Address.setState(String),2,2
org.apache.openjpa.persistence.embed.Address.getZip(),2,3
org.apache.openjpa.persistence.embed.Address.setZip(Integer),3,6
org.apache.openjpa.persistence.OpenJPAEntityManager.getEntityManagerFactory(),5,11
org.apache.openjpa.persistence.OpenJPAEntityManager.getFetchPlan(),7,11
org.apache.openjpa.persistence.OpenJPAEntityManager.pushFetchPlan(),10,19
org.apache.openjpa.persistence.OpenJPAEntityManager.popFetchPlan(),15,18
org.apache.openjpa.persistence.OpenJPAEntityManager.getConnectionRetainMode(),5,11
org.apache.openjpa.persistence.OpenJPAEntityManager.isTransactionManaged(),6,7
org.apache.openjpa.persistence.OpenJPAEntityManager.isManaged(),11,17
org.apache.openjpa.persistence.OpenJPAEntityManager.getSyncWithManagedTransactions(),9,10
org.apache.openjpa.persistence.OpenJPAEntityManager.setSyncWithManagedTransactions(boolean),11,12
org.apache.openjpa.persistence.OpenJPAEntityManager.getClassLoader(),8,10
org.apache.openjpa.persistence.OpenJPAEntityManager.getConnectionUserName(),4,7
org.apache.openjpa.persistence.OpenJPAEntityManager.getConnectionPassword(),3,5
org.apache.openjpa.persistence.OpenJPAEntityManager.getMultithreaded(),6,7
org.apache.openjpa.persistence.OpenJPAEntityManager.setMultithreaded(boolean),8,9
org.apache.openjpa.persistence.OpenJPAEntityManager.getIgnoreChanges(),8,9
org.apache.openjpa.persistence.OpenJPAEntityManager.setIgnoreChanges(boolean),9,11
org.apache.openjpa.persistence.OpenJPAEntityManager.getNontransactionalRead(),5,6
org.apache.openjpa.persistence.OpenJPAEntityManager.setNontransactionalRead(boolean),6,8
org.apache.openjpa.persistence.OpenJPAEntityManager.getNontransactionalWrite(),5,6
org.apache.openjpa.persistence.OpenJPAEntityManager.setNontransactionalWrite(boolean),6,8
org.apache.openjpa.persistence.OpenJPAEntityManager.getOptimistic(),3,4
org.apache.openjpa.persistence.OpenJPAEntityManager.setOptimistic(boolean),5,6
org.apache.openjpa.persistence.OpenJPAEntityManager.getRestoreState(),5,7
org.apache.openjpa.persistence.OpenJPAEntityManager.setRestoreState(RestoreStateType),6,10
org.apache.openjpa.persistence.OpenJPAEntityManager.getRetainState(),5,6
org.apache.openjpa.persistence.OpenJPAEntityManager.setRetainState(boolean),6,8
org.apache.openjpa.persistence.OpenJPAEntityManager.getDetachState(),8,10
org.apache.openjpa.persistence.OpenJPAEntityManager.setDetachState(DetachStateType),9,12
org.apache.openjpa.persistence.OpenJPAEntityManager.getAutoClear(),4,5
org.apache.openjpa.persistence.OpenJPAEntityManager.setAutoClear(AutoClearType),5,7
org.apache.openjpa.persistence.OpenJPAEntityManager.getAutoDetach(),12,17
org.apache.openjpa.persistence.OpenJPAEntityManager.setAutoDetach(AutoDetachType),16,22
org.apache.openjpa.persistence.OpenJPAEntityManager.setAutoDetach(EnumSet<AutoDetachType>),16,23
"org.apache.openjpa.persistence.OpenJPAEntityManager.setAutoDetach(AutoDetachType,boolean)",15,20
org.apache.openjpa.persistence.OpenJPAEntityManager.getEvictFromStoreCache(),7,10
org.apache.openjpa.persistence.OpenJPAEntityManager.setEvictFromStoreCache(boolean),8,12
org.apache.openjpa.persistence.OpenJPAEntityManager.getPopulateStoreCache(),8,10
org.apache.openjpa.persistence.OpenJPAEntityManager.setPopulateStoreCache(boolean),7,11
org.apache.openjpa.persistence.OpenJPAEntityManager.isTrackChangesByType(),16,19
org.apache.openjpa.persistence.OpenJPAEntityManager.setTrackChangesByType(boolean),25,29
"org.apache.openjpa.persistence.OpenJPAEntityManager.putUserObject(Object,Object)",10,17
org.apache.openjpa.persistence.OpenJPAEntityManager.getUserObject(Object),7,11
"org.apache.openjpa.persistence.OpenJPAEntityManager.findAll(Class<T>,Object)",7,14
"org.apache.openjpa.persistence.OpenJPAEntityManager.findAll(Class<T>,Collection)",8,15
"org.apache.openjpa.persistence.OpenJPAEntityManager.findCached(Class<T>,Object)",7,15
org.apache.openjpa.persistence.OpenJPAEntityManager.getObjectIdClass(Class),6,9
org.apache.openjpa.persistence.OpenJPAEntityManager.getTransaction(),3,4
org.apache.openjpa.persistence.OpenJPAEntityManager.setSavepoint(String),7,10
org.apache.openjpa.persistence.OpenJPAEntityManager.rollbackToSavepoint(),7,9
org.apache.openjpa.persistence.OpenJPAEntityManager.rollbackToSavepoint(String),9,12
org.apache.openjpa.persistence.OpenJPAEntityManager.releaseSavepoint(),6,10
org.apache.openjpa.persistence.OpenJPAEntityManager.releaseSavepoint(String),8,11
org.apache.openjpa.persistence.OpenJPAEntityManager.preFlush(),20,22
org.apache.openjpa.persistence.OpenJPAEntityManager.validateChanges(),21,33
org.apache.openjpa.persistence.OpenJPAEntityManager.isStoreActive(),3,5
org.apache.openjpa.persistence.OpenJPAEntityManager.beginStore(),9,11
org.apache.openjpa.persistence.OpenJPAEntityManager.containsAll(Object),5,5
org.apache.openjpa.persistence.OpenJPAEntityManager.containsAll(Collection),5,5
org.apache.openjpa.persistence.OpenJPAEntityManager.persistAll(Object),4,5
org.apache.openjpa.persistence.OpenJPAEntityManager.persistAll(Collection),4,5
org.apache.openjpa.persistence.OpenJPAEntityManager.removeAll(Object),6,6
org.apache.openjpa.persistence.OpenJPAEntityManager.removeAll(Collection),6,6
org.apache.openjpa.persistence.OpenJPAEntityManager.release(Object),5,7
org.apache.openjpa.persistence.OpenJPAEntityManager.releaseAll(Object),6,8
org.apache.openjpa.persistence.OpenJPAEntityManager.releaseAll(Collection),7,8
org.apache.openjpa.persistence.OpenJPAEntityManager.retrieve(Object),15,21
org.apache.openjpa.persistence.OpenJPAEntityManager.retrieveAll(Object),5,7
org.apache.openjpa.persistence.OpenJPAEntityManager.retrieveAll(Collection),5,7
org.apache.openjpa.persistence.OpenJPAEntityManager.refreshAll(Object),4,5
org.apache.openjpa.persistence.OpenJPAEntityManager.refreshAll(Collection),4,5
org.apache.openjpa.persistence.OpenJPAEntityManager.refreshAll(),3,4
org.apache.openjpa.persistence.OpenJPAEntityManager.evict(Object),20,25
org.apache.openjpa.persistence.OpenJPAEntityManager.evictAll(Object),22,28
org.apache.openjpa.persistence.OpenJPAEntityManager.evictAll(Collection),23,29
org.apache.openjpa.persistence.OpenJPAEntityManager.evictAll(),19,22
org.apache.openjpa.persistence.OpenJPAEntityManager.evictAll(Class),27,34
org.apache.openjpa.persistence.OpenJPAEntityManager.evictAll(Extent),27,36
org.apache.openjpa.persistence.OpenJPAEntityManager.detachCopy(T),28,46
org.apache.openjpa.persistence.OpenJPAEntityManager.detachAll(Collection),10,15
org.apache.openjpa.persistence.OpenJPAEntityManager.detachAll(Object),10,15
org.apache.openjpa.persistence.OpenJPAEntityManager.mergeAll(Object),10,14
org.apache.openjpa.persistence.OpenJPAEntityManager.mergeAll(Collection),11,16
"org.apache.openjpa.persistence.OpenJPAEntityManager.transactional(Object,boolean)",9,16
"org.apache.openjpa.persistence.OpenJPAEntityManager.transactionalAll(Collection,boolean)",10,18
"org.apache.openjpa.persistence.OpenJPAEntityManager.transactionalAll(Object[],boolean)",10,18
org.apache.openjpa.persistence.OpenJPAEntityManager.nontransactional(Object),2,4
org.apache.openjpa.persistence.OpenJPAEntityManager.nontransactionalAll(Collection),4,5
org.apache.openjpa.persistence.OpenJPAEntityManager.nontransactionalAll(Object[]),4,5
org.apache.openjpa.persistence.OpenJPAEntityManager.getNamedGenerator(String),6,9
org.apache.openjpa.persistence.OpenJPAEntityManager.getIdGenerator(Class),11,15
"org.apache.openjpa.persistence.OpenJPAEntityManager.getFieldGenerator(Class,String)",10,15
"org.apache.openjpa.persistence.OpenJPAEntityManager.createExtent(Class<T>,boolean)",7,9
org.apache.openjpa.persistence.OpenJPAEntityManager.createQuery(String),4,6
org.apache.openjpa.persistence.OpenJPAEntityManager.createNamedQuery(String),6,7
org.apache.openjpa.persistence.OpenJPAEntityManager.createNativeQuery(String),5,6
"org.apache.openjpa.persistence.OpenJPAEntityManager.createNativeQuery(String,Class)",6,7
"org.apache.openjpa.persistence.OpenJPAEntityManager.createNativeQuery(String,String)",7,9
org.apache.openjpa.persistence.OpenJPAEntityManager.createQuery(Query),3,8
"org.apache.openjpa.persistence.OpenJPAEntityManager.createQuery(String,String)",5,11
org.apache.openjpa.persistence.OpenJPAEntityManager.createDynamicQuery(QueryDefinition),8,14
org.apache.openjpa.persistence.OpenJPAEntityManager.getLockMode(Object),6,10
"org.apache.openjpa.persistence.OpenJPAEntityManager.lock(Object,LockModeType,int)",14,26
org.apache.openjpa.persistence.OpenJPAEntityManager.lock(Object),13,14
"org.apache.openjpa.persistence.OpenJPAEntityManager.lockAll(Collection,LockModeType,int)",16,28
org.apache.openjpa.persistence.OpenJPAEntityManager.lockAll(Collection),14,15
"org.apache.openjpa.persistence.OpenJPAEntityManager.lockAll(Object[],LockModeType,int)",16,28
org.apache.openjpa.persistence.OpenJPAEntityManager.lockAll(Object),14,15
org.apache.openjpa.persistence.OpenJPAEntityManager.cancelAll(),13,17
org.apache.openjpa.persistence.OpenJPAEntityManager.getConnection(),5,7
org.apache.openjpa.persistence.OpenJPAEntityManager.getManagedObjects(),5,6
org.apache.openjpa.persistence.OpenJPAEntityManager.getTransactionalObjects(),7,7
org.apache.openjpa.persistence.OpenJPAEntityManager.getPendingTransactionalObjects(),7,8
org.apache.openjpa.persistence.OpenJPAEntityManager.getDirtyObjects(),6,7
org.apache.openjpa.persistence.OpenJPAEntityManager.getOrderDirtyObjects(),7,9
org.apache.openjpa.persistence.OpenJPAEntityManager.setOrderDirtyObjects(boolean),8,10
org.apache.openjpa.persistence.OpenJPAEntityManager.dirtyClass(Class),5,6
org.apache.openjpa.persistence.OpenJPAEntityManager.getPersistedClasses(),7,8
org.apache.openjpa.persistence.OpenJPAEntityManager.getRemovedClasses(),7,8
org.apache.openjpa.persistence.OpenJPAEntityManager.getUpdatedClasses(),8,9
org.apache.openjpa.persistence.OpenJPAEntityManager.createInstance(Class<T>),37,76
"org.apache.openjpa.persistence.OpenJPAEntityManager.dirty(Object,String)",5,8
org.apache.openjpa.persistence.OpenJPAEntityManager.getObjectId(Object),3,5
org.apache.openjpa.persistence.OpenJPAEntityManager.isDirty(Object),2,4
org.apache.openjpa.persistence.OpenJPAEntityManager.isTransactional(Object),2,4
org.apache.openjpa.persistence.OpenJPAEntityManager.isPersistent(Object),2,4
org.apache.openjpa.persistence.OpenJPAEntityManager.isNewlyPersistent(Object),5,7
org.apache.openjpa.persistence.OpenJPAEntityManager.isRemoved(Object),3,4
org.apache.openjpa.persistence.OpenJPAEntityManager.isDetached(Object),2,2
org.apache.openjpa.persistence.OpenJPAEntityManager.getVersion(Object),6,9
org.apache.openjpa.persistence.OpenJPAEntityManager.getConfiguration(),18,22
org.apache.openjpa.persistence.OpenJPAEntityManager.setRestoreState(int),6,10
org.apache.openjpa.persistence.OpenJPAEntityManager.setDetachState(int),6,10
org.apache.openjpa.persistence.OpenJPAEntityManager.setAutoClear(int),6,10
org.apache.openjpa.persistence.OpenJPAEntityManager.setAutoDetach(int),10,22
"org.apache.openjpa.persistence.OpenJPAEntityManager.setAutoDetach(int,boolean)",8,13
org.apache.openjpa.persistence.OpenJPAEntityManager.isLargeTransaction(),7,7
org.apache.openjpa.persistence.OpenJPAEntityManager.setLargeTransaction(boolean),9,10
org.apache.openjpa.persistence.OpenJPAEntityManager.addTransactionListener(Object),17,20
org.apache.openjpa.persistence.OpenJPAEntityManager.removeTransactionListener(Object),17,20
org.apache.openjpa.persistence.OpenJPAEntityManager.getTransactionListenerCallbackMode(),17,19
org.apache.openjpa.persistence.OpenJPAEntityManager.setTransactionListenerCallbackMode(int),18,22
"org.apache.openjpa.persistence.OpenJPAEntityManager.addLifecycleListener(Object,Class)",18,21
org.apache.openjpa.persistence.OpenJPAEntityManager.removeLifecycleListener(Object),17,20
org.apache.openjpa.persistence.OpenJPAEntityManager.getLifecycleListenerCallbackMode(),17,19
org.apache.openjpa.persistence.OpenJPAEntityManager.setLifecycleListenerCallbackMode(int),18,22
org.apache.openjpa.persistence.OpenJPAEntityManager.begin(),7,11
org.apache.openjpa.persistence.OpenJPAEntityManager.commit(),7,11
org.apache.openjpa.persistence.OpenJPAEntityManager.rollback(),7,11
org.apache.openjpa.persistence.OpenJPAEntityManager.isActive(),7,11
org.apache.openjpa.persistence.OpenJPAEntityManager.commitAndResume(),9,15
org.apache.openjpa.persistence.OpenJPAEntityManager.rollbackAndResume(),9,15
org.apache.openjpa.persistence.OpenJPAEntityManager.setRollbackOnly(),8,14
org.apache.openjpa.persistence.OpenJPAEntityManager.setRollbackOnly(Throwable),11,17
org.apache.openjpa.persistence.OpenJPAEntityManager.getRollbackCause(),10,16
org.apache.openjpa.persistence.OpenJPAEntityManager.getRollbackOnly(),7,11
org.apache.openjpa.persistence.OpenJPAEntityManager.getCriteriaBuilder(),6,10
org.apache.openjpa.persistence.OpenJPAEntityManager.getSupportedProperties(),5,7
org.apache.openjpa.persistence.detachment.TestNoCascadeOneToOneMerge.setUp(),11,16
org.apache.openjpa.persistence.detachment.TestNoCascadeOneToOneMerge.createEntities(),14,37
org.apache.openjpa.persistence.detachment.TestNoCascadeOneToOneMerge.testMergeAllAttached(),16,33
org.apache.openjpa.persistence.detachment.TestNoCascadeOneToOneMerge.testMergeRefAttached(),17,41
org.apache.openjpa.persistence.detachment.TestNoCascadeOneToOneMerge.testMergeDetached(),17,43
org.apache.openjpa.persistence.detachment.TestNoCascadeOneToOneMerge.main(String[]),8,9
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityB.EntityB(String),3,5
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityB.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityB.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityB.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityB.setName(String),4,10
org.apache.openjpa.persistence.embed.Company2.getId(),0,0
org.apache.openjpa.persistence.embed.Company2.setId(int),1,1
org.apache.openjpa.persistence.embed.Company2.getOrganization(),2,3
"org.apache.openjpa.persistence.embed.Company2.addToOrganization(Division,VicePresident)",5,8
org.apache.openjpa.persistence.embed.FeatureIdXml.getOid(),2,3
org.apache.openjpa.persistence.embed.FeatureIdXml.setOid(String),3,6
org.apache.openjpa.persistence.embed.FeatureIdXml.getIndex(),1,2
org.apache.openjpa.persistence.embed.FeatureIdXml.setIndex(int),3,5
org.apache.openjpa.persistence.embed.FeatureIdXml.equals(Object),7,16
org.apache.openjpa.persistence.embed.FeatureIdXml.hashCode(),4,6
org.apache.openjpa.persistence.embed.FeatureIdXml.toString(),3,4
org.apache.openjpa.persistence.embed.FeatureIdXml.FeatureIdXml(),2,2
"org.apache.openjpa.persistence.embed.FeatureIdXml.FeatureIdXml(int,String)",6,9
org.apache.openjpa.persistence.jdbc.update.BaseTimestampedEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.update.BaseTimestampedEntity.getName(),2,3
org.apache.openjpa.persistence.jdbc.update.BaseTimestampedEntity.setName(String),3,6
org.apache.openjpa.persistence.jdbc.update.BaseTimestampedEntity.getVersion(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.Project.getId(),0,0
org.apache.openjpa.persistence.embed.attrOverrides.Project.setId(int),1,1
org.apache.openjpa.persistence.embed.attrOverrides.Project.getDescription(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.Project.setDescription(String),3,6
org.apache.openjpa.persistence.enhance.identity.DependentId4.equals(Object),4,7
org.apache.openjpa.persistence.enhance.identity.DependentId4.hashCode(),3,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.Employee.getPhoneNumbers(),4,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.Employee.addPhoneNumber(Department,PhoneNumber)",4,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.Employee.removePhoneNumber(Department),4,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.Employee.equals(Object),14,43
org.apache.openjpa.persistence.jpql.entities.OrderedNameEntity.OrderedNameEntity(),2,2
org.apache.openjpa.persistence.jpql.entities.OrderedNameEntity.OrderedNameEntity(String),3,7
org.apache.openjpa.persistence.jpql.entities.OrderedNameEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.entities.OrderedNameEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.entities.OrderedNameEntity.getName(),2,3
org.apache.openjpa.persistence.jpql.entities.OrderedNameEntity.setName(String),3,6
org.apache.openjpa.persistence.jpql.entities.OrderedNameEntity.toString(),3,5
org.apache.openjpa.persistence.jpql.entities.OrderedNameEntity.getEntities(),3,4
org.apache.openjpa.persistence.jpql.entities.OrderedNameEntity.setEntities(List<IOrderedEntity>),4,7
org.apache.openjpa.persistence.jpql.entities.OrderedNameEntity.addEntity(IOrderedEntity),5,12
org.apache.openjpa.persistence.jpql.entities.OrderedNameEntity.removeEntity(IOrderedEntity),5,17
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.setUp(),23,68
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.tearDown(),3,4
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.getPersistenceUnitName(),8,8
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.createHandI(int),9,61
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.testCreate(),10,20
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.runQueries(),9,15
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.queryJoinTable(),13,23
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.queryJoinColumn(),13,23
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.querySecondaryTableValue(),15,26
org.apache.openjpa.persistence.delimited.identifiers.xml.TestXmlDelimitedJoinAnnotation.queryMapValue(),13,23
org.apache.openjpa.persistence.embed.OrderXml.getCust(),3,4
org.apache.openjpa.persistence.embed.OrderXml.setCust(CustomerXml),4,7
org.apache.openjpa.persistence.embed.OrderXml.getId(),0,0
org.apache.openjpa.persistence.embed.OrderXml.setId(int),1,1
org.apache.openjpa.persistence.embed.OrderXml.getDescription(),2,3
org.apache.openjpa.persistence.embed.OrderXml.setDescription(String),4,6
org.apache.openjpa.persistence.embed.OrderXml.equals(Object),6,12
org.apache.openjpa.persistence.criteria.Student.getId(),0,0
org.apache.openjpa.persistence.criteria.Student.getName(),2,3
org.apache.openjpa.persistence.criteria.Student.setName(String),3,6
org.apache.openjpa.persistence.criteria.Student.getEnrollment(),2,3
"org.apache.openjpa.persistence.criteria.Student.addToEnrollment(Course,Semester)",4,9
org.apache.openjpa.persistence.query.EntryExpression.EntryExpression(AbstractDomainObject),7,9
org.apache.openjpa.persistence.jdbc.annotations.TestSerializedLobs.setUp(),5,8
org.apache.openjpa.persistence.jdbc.annotations.TestSerializedLobs.testSerialized(),19,48
org.apache.openjpa.persistence.jdbc.annotations.TestSerializedLobs.testBlob(),39,91
org.apache.openjpa.persistence.jdbc.annotations.TestSerializedLobs.testClob(),21,47
org.apache.openjpa.persistence.jdbc.annotations.TestSerializedLobs.testNullableClob(),16,31
org.apache.openjpa.persistence.jdbc.annotations.TestSerializedLobs.testNullableBlob(),14,28
org.apache.openjpa.persistence.detach.Entity6.Entity6(),1,1
"org.apache.openjpa.persistence.detach.Entity6.Entity6(long,String)",3,5
org.apache.openjpa.persistence.detach.Entity6.getId(),0,0
org.apache.openjpa.persistence.detach.Entity6.setId(long),1,1
org.apache.openjpa.persistence.detach.Entity6.getName(),2,3
org.apache.openjpa.persistence.detach.Entity6.setName(String),3,6
org.apache.openjpa.persistence.detach.Entity6.getE7(),1,1
org.apache.openjpa.persistence.detach.Entity6.setE7(Entity7),2,2
org.apache.openjpa.persistence.foreign.keys.TopLevel.getId(),0,0
org.apache.openjpa.persistence.foreign.keys.TopLevel.setId(long),1,1
org.apache.openjpa.persistence.foreign.keys.TopLevel.getContMultSEColl(),7,11
org.apache.openjpa.persistence.foreign.keys.TopLevel.setContMultSEColl(Collection<ContainsMultSimpleEntity>),8,18
org.apache.openjpa.persistence.enhance.common.apps.BackingFieldNameMismatchInstance.getId(),0,0
org.apache.openjpa.persistence.enhance.common.apps.BackingFieldNameMismatchInstance.setId(long),1,1
org.apache.openjpa.persistence.enhance.common.apps.BackingFieldNameMismatchInstance.getVersion(),1,2
org.apache.openjpa.persistence.enhance.common.apps.BackingFieldNameMismatchInstance.setVersion(int),2,3
org.apache.openjpa.persistence.enhance.common.apps.BackingFieldNameMismatchInstance.getStringField(),2,3
org.apache.openjpa.persistence.enhance.common.apps.BackingFieldNameMismatchInstance.setStringField(String),3,4
org.apache.openjpa.persistence.detachment.Record.getContent(),2,3
org.apache.openjpa.persistence.detachment.Record.setContent(String),3,6
org.apache.openjpa.persistence.detachment.Record.getId(),0,0
org.apache.openjpa.persistence.detachment.Record.setId(int),1,1
org.apache.openjpa.persistence.criteria.CreditCard.getId(),0,0
org.apache.openjpa.persistence.criteria.CreditCard.getTransactionHistory(),3,7
org.apache.openjpa.persistence.criteria.CreditCard.setTransactionHistory(List<TransactionHistory>),4,12
org.apache.openjpa.persistence.criteria.CreditCard.addTransactionHistory(TransactionHistory),3,10
org.apache.openjpa.persistence.criteria.CreditCard.getCustomer(),1,3
org.apache.openjpa.persistence.criteria.CreditCard.setCustomerr(Customer),3,6
org.apache.openjpa.persistence.discriminator.fetch.Employee.getManager(),1,3
org.apache.openjpa.persistence.discriminator.fetch.Employee.setManager(Manager),2,6
org.apache.openjpa.persistence.jdbc.annotations.NativeORMSequenceEntity.setId(int),1,1
org.apache.openjpa.persistence.jdbc.annotations.NativeORMSequenceEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.annotations.NativeORMSequenceEntity.setName(String),3,6
org.apache.openjpa.persistence.jdbc.annotations.NativeORMSequenceEntity.getName(),2,3
org.apache.openjpa.persistence.embed.Embed_Coll_Integer.getIntVal1(),1,2
org.apache.openjpa.persistence.embed.Embed_Coll_Integer.setIntVal1(int),2,5
org.apache.openjpa.persistence.embed.Embed_Coll_Integer.getIntVal2(),1,2
org.apache.openjpa.persistence.embed.Embed_Coll_Integer.setIntVal2(int),2,5
org.apache.openjpa.persistence.embed.Embed_Coll_Integer.getIntVal3(),1,2
org.apache.openjpa.persistence.embed.Embed_Coll_Integer.setIntVal3(int),2,5
org.apache.openjpa.persistence.embed.Embed_Coll_Integer.getOtherIntVals(),3,4
org.apache.openjpa.persistence.embed.Embed_Coll_Integer.addOtherIntVal(int),3,6
org.apache.openjpa.persistence.enhance.identity.DependentId1.DependentId1(),1,1
"org.apache.openjpa.persistence.enhance.identity.DependentId1.DependentId1(String,long)",4,8
org.apache.openjpa.persistence.enhance.identity.DependentId1.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.DependentId1.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.DependentId1.setEmpPK(long),2,5
org.apache.openjpa.persistence.enhance.identity.DependentId1.getEmpPK(),1,2
org.apache.openjpa.persistence.enhance.identity.DependentId1.equals(Object),5,13
org.apache.openjpa.persistence.enhance.identity.DependentId1.hashCode(),5,12
"org.apache.openjpa.persistence.PersistenceException.PersistenceException(String,Throwable[],Object,boolean)",9,16
org.apache.openjpa.persistence.PersistenceException.getType(),1,1
org.apache.openjpa.persistence.PersistenceException.getSubtype(),1,1
org.apache.openjpa.persistence.PersistenceException.isFatal(),1,2
org.apache.openjpa.persistence.PersistenceException.getCause(),5,6
org.apache.openjpa.persistence.PersistenceException.getNestedThrowables(),5,8
org.apache.openjpa.persistence.PersistenceException.getFailedObject(),2,4
org.apache.openjpa.persistence.PersistenceException.toString(),2,4
org.apache.openjpa.persistence.PersistenceException.printStackTrace(),5,8
org.apache.openjpa.persistence.PersistenceException.printStackTrace(PrintStream),7,12
org.apache.openjpa.persistence.PersistenceException.printStackTrace(PrintWriter),7,12
org.apache.openjpa.persistence.PersistenceException.writeObject(ObjectOutputStream),11,22
org.apache.openjpa.persistence.PersistenceException.readObject(ObjectInputStream),10,17
"org.apache.openjpa.persistence.meta.CompileTimeLogger.CompileTimeLogger(ProcessingEnvironment,String)",20,63
org.apache.openjpa.persistence.meta.CompileTimeLogger.info(Localizer.Message),7,10
org.apache.openjpa.persistence.meta.CompileTimeLogger.trace(Localizer.Message),7,10
org.apache.openjpa.persistence.meta.CompileTimeLogger.warn(Localizer.Message),8,11
org.apache.openjpa.persistence.meta.CompileTimeLogger.error(Localizer.Message),3,6
"org.apache.openjpa.persistence.meta.CompileTimeLogger.error(Localizer.Message,Throwable)",10,14
"org.apache.openjpa.persistence.meta.CompileTimeLogger.log(Level,Localizer.Message,Diagnostic.Kind)",9,16
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCEntityB.getEntityBData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCEntityB.setEntityBData(String),4,10
org.apache.openjpa.persistence.jdbc.annotations.TestVersion.setUp(),28,76
org.apache.openjpa.persistence.jdbc.annotations.TestVersion.testVersionNumeric(),18,55
org.apache.openjpa.persistence.jdbc.annotations.TestVersion.testVersionTimestamp(),32,86
org.apache.openjpa.persistence.jdbc.annotations.TestVersion.testVersionSubclass(),18,54
org.apache.openjpa.persistence.jdbc.annotations.TestVersion.testVersionNoChange(),14,32
org.apache.openjpa.persistence.jdbc.annotations.TestVersion.testNoDefaultVersionWithoutFieldOrColumn(),18,29
org.apache.openjpa.persistence.jdbc.annotations.TestVersion.testVersionWithField(),16,27
org.apache.openjpa.persistence.jdbc.annotations.TestVersion.testNullInitialVersion(),27,69
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.Division.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.Division.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.Division.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.Division.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.Division.equals(Object),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.Division.hashCode(),4,11
"org.apache.openjpa.persistence.query.BinaryOperatorExpression.BinaryOperatorExpression(Expression,BinaryFunctionalOperator,Expression)",4,8
org.apache.openjpa.persistence.query.BinaryOperatorExpression.getOperand1(),2,2
org.apache.openjpa.persistence.query.BinaryOperatorExpression.getOperand2(),2,2
org.apache.openjpa.persistence.query.BinaryOperatorExpression.getOperator(),3,4
org.apache.openjpa.persistence.query.BinaryOperatorExpression.asExpression(AliasContext),6,11
org.apache.openjpa.persistence.query.BinaryOperatorExpression.asProjection(AliasContext),6,15
org.apache.openjpa.persistence.kernel.common.apps.AttachE.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.AttachE.setEstr(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachE.getEstr(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AttachE.setEint(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachE.getEint(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachE.setEdbl(double),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachE.getEdbl(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachE.setB(AttachB),2,2
org.apache.openjpa.persistence.kernel.common.apps.AttachE.getB(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AttachE.setF(AttachF),2,2
org.apache.openjpa.persistence.kernel.common.apps.AttachE.getF(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AttachE.setDateField(Date),3,8
org.apache.openjpa.persistence.kernel.common.apps.AttachE.getDateField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC4.ConstantJoinPC4(),2,2
"org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC4.ConstantJoinPC4(String,int)",4,6
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC4.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC4.setOneToOne1(ConstantJoinPC5),4,5
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC4.getOneToOne1(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC4.setManyToMany(Set),2,4
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC4.getManyToMany(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC4.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC4.setId(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC4.setName(String),3,6
org.apache.openjpa.persistence.kernel.TestEJBObjectCollections.TestEJBObjectCollections(String),7,8
org.apache.openjpa.persistence.kernel.TestEJBObjectCollections.testHashSet(),10,27
org.apache.openjpa.persistence.kernel.TestEJBObjectCollections.setUp(),8,9
org.apache.openjpa.persistence.kernel.TestEJBObjectCollections.tearDown(),2,3
"org.apache.openjpa.persistence.kernel.TestEJBObjectCollections.add(Object[],int)",14,42
org.apache.openjpa.persistence.kernel.common.apps.NonMappedInterface.getIntField(),1,1
org.apache.openjpa.persistence.kernel.common.apps.NonMappedInterface.setIntField(int),2,2
org.apache.openjpa.persistence.query.LiteralExpression.LiteralExpression(Object),3,5
org.apache.openjpa.persistence.jdbc.query.domain.Application.getUser(),2,3
org.apache.openjpa.persistence.jdbc.query.domain.Application.setUser(Applicant),3,6
org.apache.openjpa.persistence.jdbc.query.domain.Application.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.Manager.getManagesList(),3,6
org.apache.openjpa.persistence.inheritance.entity.Manager.toString(),3,7
org.apache.openjpa.persistence.criteria.TransactionHistory.getId(),0,0
org.apache.openjpa.persistence.criteria.TransactionHistory.getDetails(),2,3
org.apache.openjpa.persistence.criteria.TransactionHistory.setDetails(String),3,6
org.apache.openjpa.persistence.criteria.TransactionHistory.getTimestamp(),3,4
org.apache.openjpa.persistence.criteria.TransactionHistory.setTimestamp(Timestamp),4,9
org.apache.openjpa.persistence.query.SizeExpression.SizeExpression(Expression),5,7
org.apache.openjpa.persistence.inheritance.jointable.Employee.Employee(),1,1
org.apache.openjpa.persistence.inheritance.jointable.Employee.setDescription(String),4,10
org.apache.openjpa.persistence.inheritance.jointable.Employee.getDescription(),2,3
"org.apache.openjpa.persistence.PessimisticLockException.PessimisticLockException(String,Throwable[],Object)",9,17
org.apache.openjpa.persistence.PessimisticLockException.getType(),2,2
org.apache.openjpa.persistence.PessimisticLockException.getSubtype(),4,4
org.apache.openjpa.persistence.PessimisticLockException.isFatal(),1,2
org.apache.openjpa.persistence.PessimisticLockException.getCause(),5,6
org.apache.openjpa.persistence.PessimisticLockException.getNestedThrowables(),5,8
org.apache.openjpa.persistence.PessimisticLockException.getFailedObject(),2,4
org.apache.openjpa.persistence.PessimisticLockException.toString(),2,4
org.apache.openjpa.persistence.PessimisticLockException.printStackTrace(),5,8
org.apache.openjpa.persistence.PessimisticLockException.printStackTrace(PrintStream),7,12
org.apache.openjpa.persistence.PessimisticLockException.printStackTrace(PrintWriter),7,12
org.apache.openjpa.persistence.PessimisticLockException.writeObject(ObjectOutputStream),11,22
org.apache.openjpa.persistence.PessimisticLockException.readObject(ObjectInputStream),10,17
org.apache.openjpa.persistence.jdbc.schema.TestSequenceGeneratorEnsureCapacityCall.TestSequenceGeneratorEnsureCapacityCall(String),10,17
org.apache.openjpa.persistence.jdbc.schema.TestSequenceGeneratorEnsureCapacityCall.testDBSequenceFactory(),8,20
org.apache.openjpa.persistence.jdbc.schema.TestSequenceGeneratorEnsureCapacityCall.testClassDBSequenceFactory(),8,20
"org.apache.openjpa.persistence.jdbc.schema.TestSequenceGeneratorEnsureCapacityCall.incrementTest(Class,int)",27,50
org.apache.openjpa.persistence.jdbc.schema.TestSequenceGeneratorEnsureCapacityCall.seqForClass(Class),12,33
org.apache.openjpa.persistence.validation.ValidationUtils.setupValidation(OpenJPAConfiguration),77,246
org.apache.openjpa.persistence.validation.ValidationUtils.isConstraintViolationException(Exception),15,29
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setSomeField(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getSomeField(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setAppIdSuper(AppIdSuper),2,6
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getAppIdSuper(),1,3
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setAppIdSubA(AppIdSubA),3,11
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getAppIdSubA(),2,6
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setAppIdSubB(AppIdSubB),3,11
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getAppIdSubB(),2,6
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setAppIdSubC(AppIdSubC),3,11
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getAppIdSubC(),2,6
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setAppIdSubD(AppIdSubD),3,11
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getAppIdSubD(),2,6
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setAppIdSubE(AppIdSubE),3,11
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getAppIdSubE(),2,6
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setAppIdSubF(AppIdSubF),3,11
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getAppIdSubF(),2,6
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setAppIdSubAs(Collection),4,10
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getAppIdSubAs(),3,5
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setAppIdSubBs(List),4,10
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getAppIdSubBs(),3,5
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setAppIdSubCs(Set),3,10
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getAppIdSubCs(),3,5
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setAppIdSubDs(LinkedList),5,11
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getAppIdSubDs(),4,6
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setAppIdSubEs(HashSet),4,11
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getAppIdSubEs(),4,6
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setAppIdSubFs(ArrayList),5,11
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getAppIdSubFs(),4,6
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.setAppIdSupers(Set),3,10
org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder.getAppIdSupers(),3,5
org.apache.openjpa.persistence.enhance.identity.BeneContact.getVersion(),1,2
org.apache.openjpa.persistence.enhance.identity.BeneContact.setVersion(int),2,5
org.apache.openjpa.persistence.enhance.identity.BeneContact.getLastUpdateDate(),2,5
org.apache.openjpa.persistence.enhance.identity.BeneContact.setLastUpdateDate(Date),3,10
org.apache.openjpa.persistence.enhance.identity.BeneContact.getEmail(),2,3
org.apache.openjpa.persistence.enhance.identity.BeneContact.setEmail(String),3,6
org.apache.openjpa.persistence.enhance.identity.BeneContact.getPhone(),2,3
org.apache.openjpa.persistence.enhance.identity.BeneContact.setPhone(String),3,6
org.apache.openjpa.persistence.enhance.identity.BeneContact.getId(),2,2
org.apache.openjpa.persistence.enhance.identity.BeneContact.setId(BeneContactId),3,3
org.apache.openjpa.persistence.enhance.identity.BeneContact.getBeneficiary(),1,3
org.apache.openjpa.persistence.enhance.identity.BeneContact.setBeneficiary(Beneficiary),2,6
org.apache.openjpa.persistence.jdbc.JoinSyntax.JoinSyntax(int),4,7
org.apache.openjpa.persistence.jdbc.JoinSyntax.toKernelConstant(),4,5
org.apache.openjpa.persistence.jdbc.JoinSyntax.fromKernelConstant(int),11,28
org.apache.openjpa.persistence.jdbc.sqlcache.TestMultithreadedReparametrization.setUp(),26,38
org.apache.openjpa.persistence.jdbc.sqlcache.TestMultithreadedReparametrization.testReparametrizationUnderHeavyLoad(),43,107
"org.apache.openjpa.persistence.jdbc.sqlcache.TestMultithreadedReparametrization.QueryThread.QueryThread(EntityManager,String,Object[],int)",9,13
org.apache.openjpa.persistence.jdbc.sqlcache.TestMultithreadedReparametrization.QueryThread.run(),26,46
org.apache.openjpa.persistence.entity.MixedMappingLocationEmbeddedId.MixedMappingLocationEmbeddedId(),9,9
org.apache.openjpa.persistence.entity.MixedMappingLocationEmbeddedId.getId(),0,0
org.apache.openjpa.persistence.entity.MixedMappingLocationEmbeddedId.equals(Object),8,10
org.apache.openjpa.persistence.entity.MixedMappingLocationEmbeddedId.hashCode(),7,9
org.apache.openjpa.persistence.jdbc.TestIsolationFecthHint.setUp(),4,5
org.apache.openjpa.persistence.jdbc.TestIsolationFecthHint.testFetchPlanIsolationURHint(),37,78
org.apache.openjpa.persistence.delimited.identifiers.EntityD3.EntityD3(),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityD3.EntityD3(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityD3.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityD3.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityD3.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityD3.setName(String),4,10
org.apache.openjpa.persistence.discriminator.StringAbstractEntity.getId(),0,0
org.apache.openjpa.persistence.discriminator.StringAbstractEntity.getName(),2,3
org.apache.openjpa.persistence.discriminator.StringAbstractEntity.setName(String),3,6
org.apache.openjpa.enhance.TestClassHierarchyEnhancement.testSerialize(),17,36
org.apache.openjpa.enhance.TestClassHierarchyEnhancement.serializeObject(Object),9,24
org.apache.openjpa.enhance.TestClassHierarchyEnhancement.deSerializeObject(byte[]),11,26
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity2.Entity2(),1,1
"org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity2.Entity2(long,String,int)",3,11
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity2.getPk(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity2.setStringField(String),4,8
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity2.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity2.setIntField(int),3,5
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity2.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity2.toString(),2,8
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI.EntityI(),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI.EntityI(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI.getEntityHs(),2,4
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI.setEntityHs(Collection<EntityH>),4,10
org.apache.openjpa.persistence.delimited.identifiers.xml.EntityI.addEntityH(EntityH),2,6
org.apache.openjpa.persistence.embed.EmbedXml.getIntVal1(),1,2
org.apache.openjpa.persistence.embed.EmbedXml.setIntVal1(int),2,5
org.apache.openjpa.persistence.embed.EmbedXml.getIntVal2(),1,2
org.apache.openjpa.persistence.embed.EmbedXml.setIntVal2(int),2,5
org.apache.openjpa.persistence.embed.EmbedXml.getIntVal3(),1,2
org.apache.openjpa.persistence.embed.EmbedXml.setIntVal3(int),2,5
org.apache.openjpa.persistence.detach.Entity4.Entity4(),1,1
"org.apache.openjpa.persistence.detach.Entity4.Entity4(long,String)",3,5
org.apache.openjpa.persistence.detach.Entity4.getId(),0,0
org.apache.openjpa.persistence.detach.Entity4.setId(long),1,1
org.apache.openjpa.persistence.detach.Entity4.getName(),2,3
org.apache.openjpa.persistence.detach.Entity4.setName(String),3,6
org.apache.openjpa.persistence.detach.Entity4.getE5(),1,1
org.apache.openjpa.persistence.detach.Entity4.setE5(Entity5),2,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceOwnerAppId.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceOwnerAppId.setIntField(int),2,3
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceOwnerAppId.getIFace(),4,4
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceOwnerAppId.setIFace(ManagedInterfaceSupAppId),5,7
org.apache.openjpa.enhance.ids.Hardware.Hardware(),1,1
org.apache.openjpa.enhance.ids.Hardware.setSerial(String),3,6
org.apache.openjpa.enhance.ids.Hardware.getSerial(),2,3
org.apache.openjpa.enhance.ids.Hardware.setModel(String),3,6
org.apache.openjpa.enhance.ids.Hardware.getModel(),2,3
org.apache.openjpa.enhance.ids.Hardware.setDescription(String),3,6
org.apache.openjpa.enhance.ids.Hardware.getDescription(),2,3
org.apache.openjpa.persistence.query.PathOperator.PathOperator(String),4,6
org.apache.openjpa.persistence.query.PathOperator.toString(),2,3
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest4.RuntimeTest4(),2,2
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest4.RuntimeTest4(String),5,6
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest4.setName(String),4,6
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest4.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest4.getRuntimeTest5s(),3,5
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest4.setRuntimeTest5s(Collection),4,6
org.apache.openjpa.persistence.identity.CompoundBooleanId.hashCode(),4,12
org.apache.openjpa.persistence.identity.CompoundBooleanId.equals(Object),5,14
org.apache.openjpa.persistence.identity.CompoundBooleanId.getStringId(),1,3
org.apache.openjpa.persistence.identity.CompoundBooleanId.setStringId(String),2,6
org.apache.openjpa.persistence.identity.CompoundBooleanId.isBooleanId(),0,0
org.apache.openjpa.persistence.identity.CompoundBooleanId.setBooleanId(boolean),1,1
org.apache.openjpa.persistence.inheritance.EntityL3.getL3Data(),1,2
org.apache.openjpa.persistence.inheritance.EntityL3.setL3Data(int),2,5
org.apache.openjpa.persistence.query.WhenClause.WhenClause(Object),2,2
org.apache.openjpa.persistence.query.WhenClause.getThen(),1,1
org.apache.openjpa.persistence.query.WhenClause.setThen(Object),4,5
org.apache.openjpa.persistence.query.WhenClause.hasThen(),0,0
org.apache.openjpa.persistence.query.WhenClause.toJPQL(AliasContext),9,25
org.apache.openjpa.persistence.meta.TestExternalValues.TestExternalValues(String),5,7
org.apache.openjpa.persistence.meta.TestExternalValues.setUp(),5,5
org.apache.openjpa.persistence.meta.TestExternalValues.testInsert(),16,52
org.apache.openjpa.persistence.meta.TestExternalValues.testComplexStrings(),16,39
org.apache.openjpa.persistence.meta.TestExternalValues.testAllNull(),11,30
org.apache.openjpa.persistence.meta.TestExternalValues.testPositionalBindingQueryParameterEqualsDeclaredType(),23,45
org.apache.openjpa.persistence.meta.TestExternalValues.testNamedBindingQueryParameterEqualsDeclaredType(),23,47
org.apache.openjpa.persistence.meta.TestExternalValues.testPositionalBindingQueryParameterNotEqualsExternalizedType(),26,44
org.apache.openjpa.persistence.meta.TestExternalValues.testNamedBindingQueryParameterNotEqualsExternalizedType(),26,46
org.apache.openjpa.persistence.meta.TestExternalValues.createInstance(UUID),13,21
org.apache.openjpa.persistence.access.EmbedOuterField.getOuterName(),3,4
org.apache.openjpa.persistence.access.EmbedOuterField.setOuterName(String),4,9
org.apache.openjpa.persistence.access.EmbedOuterField.equals(Object),7,19
org.apache.openjpa.persistence.access.xml.XMLAbstractMappedSuperProperty.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLAbstractMappedSuperProperty.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLAbstractMappedSuperProperty.setName(String),3,6
org.apache.openjpa.persistence.access.xml.XMLAbstractMappedSuperProperty.getName(),2,3
org.apache.openjpa.persistence.access.xml.XMLAbstractMappedSuperProperty.getCreateDate(),2,3
org.apache.openjpa.persistence.access.xml.XMLAbstractMappedSuperProperty.setCreateDate(Date),3,5
org.apache.openjpa.persistence.access.xml.XMLAbstractMappedSuperProperty.equals(Object),7,17
org.apache.openjpa.persistence.kernel.TestSavepointEmbedded.TestSavepointEmbedded(String),7,11
org.apache.openjpa.persistence.kernel.TestSavepointEmbedded.getSavepointPlugin(),6,6
org.apache.openjpa.persistence.kernel.TestSavepointEmbedded.expectNewEmbeddedFailure(),3,3
org.apache.openjpa.persistence.kernel.TestSavepointEmbedded.getProperties(String[]),7,15
org.apache.openjpa.persistence.kernel.TestSavepointEmbedded.setUp(),4,4
org.apache.openjpa.persistence.kernel.TestSavepointEmbedded.newEmbeddedOwnerPC(),2,6
org.apache.openjpa.persistence.kernel.TestSavepointEmbedded.testClearNew(),2,10
"org.apache.openjpa.persistence.kernel.TestSavepointEmbedded.doClearNewTest(boolean,int,int)",20,64
org.apache.openjpa.persistence.kernel.TestSavepointEmbedded.testEmbeddedReassign(),3,27
"org.apache.openjpa.persistence.kernel.TestSavepointEmbedded.doEmbeddedReassignTest(boolean,int,int)",20,67
org.apache.openjpa.persistence.kernel.TestSavepointEmbedded.testEmbeddedChange(),10,37
"org.apache.openjpa.persistence.kernel.TestSavepointEmbedded.doEmbeddedChangeTest(boolean,int,int)",20,60
org.apache.openjpa.persistence.kernel.TestSavepointEmbedded.testEmbeddedChange2(),10,37
"org.apache.openjpa.persistence.kernel.TestSavepointEmbedded.doEmbeddedChangeTest2(boolean,int,int)",24,71
org.apache.openjpa.persistence.merge.model.Label2.Label2(ShipPackage2),3,3
org.apache.openjpa.persistence.merge.model.Label2.setId(long),1,1
org.apache.openjpa.persistence.merge.model.Label2.getId(),0,0
org.apache.openjpa.persistence.merge.model.Label2.setPackage2(ShipPackage2),3,3
org.apache.openjpa.persistence.merge.model.Label2.getPackage2(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2.getPk1(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2.setPk1(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2.getPk2(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2.setPk2(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2.getOneOneOwner(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2.setOneOneOwner(MappingTest1),4,7
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2.getOneManyOwner(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2.setOneManyOwner(MappingTest1),4,7
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2.getManyManyOwner(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest2.setManyManyOwner(Set),2,6
org.apache.openjpa.persistence.jdbc.schema.TestSchemaGenerator.getPersistenceUnitName(),11,11
org.apache.openjpa.persistence.jdbc.schema.TestSchemaGenerator.TestSchemaGenerator(String),7,11
org.apache.openjpa.persistence.jdbc.schema.TestSchemaGenerator.testSchemaGen(),32,76
org.apache.openjpa.persistence.jdbc.mapping.bidi.IParent.getId(),0,0
org.apache.openjpa.persistence.jdbc.mapping.bidi.IParent.setId(long),1,1
org.apache.openjpa.persistence.jdbc.mapping.bidi.IParent.getName(),2,2
org.apache.openjpa.persistence.jdbc.mapping.bidi.IParent.setName(String),3,4
org.apache.openjpa.persistence.jdbc.mapping.bidi.IParent.getChildren(),3,3
org.apache.openjpa.persistence.jdbc.mapping.bidi.IParent.addChild(Child),2,4
org.apache.openjpa.persistence.entityoperation.TestCascades.TestCascades(String),5,6
org.apache.openjpa.persistence.entityoperation.TestCascades.setUp(),4,4
org.apache.openjpa.persistence.entityoperation.TestCascades.testNoCascadePersist(),17,39
org.apache.openjpa.persistence.entityoperation.TestCascades.testCascadePersistIsImmediate(),17,45
org.apache.openjpa.persistence.entityoperation.TestCascades.testNoCascadePersistFlushWithDeletedCausesException(),28,100
org.apache.openjpa.persistence.entityoperation.TestCascades.testCascadePersistFlushWithDeleted(),19,82
org.apache.openjpa.persistence.entityoperation.TestCascades.testNoCascadePersistFlushWithTransientCausesException(),26,78
org.apache.openjpa.persistence.entityoperation.TestCascades.testNoCascadePersistFlushWithPersistent(),17,71
org.apache.openjpa.persistence.entityoperation.TestCascades.testCascadePersistFlushWithTransient(),16,64
org.apache.openjpa.persistence.entityoperation.TestCascades.testCascadePersistFlushWithPersistent(),16,65
org.apache.openjpa.persistence.entityoperation.TestCascades.testCascadeCircleThroughPersistent(),16,60
org.apache.openjpa.persistence.entityoperation.TestCascades.testNoCascadeDelete(),24,111
org.apache.openjpa.persistence.entityoperation.TestCascades.testDeepCascadeDelete(),24,195
org.apache.openjpa.persistence.entityoperation.TestCascades.testCircularCascadeDelete(),21,89
org.apache.openjpa.persistence.entityoperation.TestCascades.testNoCascadeRefresh(),18,93
org.apache.openjpa.persistence.entityoperation.TestCascades.testCircularCascadeRefresh(),23,262
org.apache.openjpa.persistence.entityoperation.TestCascades.testNoCascadeAttachClean(),24,112
org.apache.openjpa.persistence.entityoperation.TestCascades.testCascadeAttachClean(),23,127
org.apache.openjpa.persistence.entityoperation.TestCascades.testNoCascadeAttachDirtyFields(),25,120
org.apache.openjpa.persistence.entityoperation.TestCascades.testCascadeAttachDirtyFields(),25,136
org.apache.openjpa.persistence.entityoperation.TestCascades.testNoCascadeAttachDirtyRelations(),26,132
org.apache.openjpa.persistence.entityoperation.TestCascades.testCascadeAttachDirtyRelations(),26,148
org.apache.openjpa.persistence.entityoperation.TestCascades.testNoCascadeReferenceIsPreLoadedReference(),23,84
org.apache.openjpa.persistence.entityoperation.TestCascades.testNoCascadeNewCausesException(),26,96
org.apache.openjpa.persistence.entityoperation.TestCascades.testCascadeNewPersisted(),24,101
org.apache.openjpa.persistence.entityoperation.TestCascades.testCascadesDeleteNonPersistent(),19,116
org.apache.openjpa.persistence.jpql.TestOneToManySubQuery.setUp(),7,11
org.apache.openjpa.persistence.jpql.TestOneToManySubQuery.test(),15,27
"org.apache.openjpa.persistence.query.BetweenExpression.BetweenExpression(Expression,RangeExpression)",6,14
org.apache.openjpa.meta.C.getA(),0,0
org.apache.openjpa.meta.C.setA(A),1,1
org.apache.openjpa.meta.C.getB(),0,0
org.apache.openjpa.meta.C.setB(B),1,1
org.apache.openjpa.meta.C.getNum(),1,2
org.apache.openjpa.meta.C.setNum(long),2,5
org.apache.openjpa.meta.C.Identity.hashCode(),3,5
org.apache.openjpa.meta.C.Identity.equals(Object),5,13
org.apache.openjpa.meta.C.Identity.getB(),1,1
org.apache.openjpa.meta.C.Identity.setB(B),1,1
org.apache.openjpa.meta.C.Identity.setB(String),2,2
org.apache.openjpa.meta.C.Identity.getNum(),1,2
org.apache.openjpa.meta.C.Identity.setNum(long),2,5
org.apache.openjpa.persistence.annotations.PColl_EntityC.getId(),0,0
org.apache.openjpa.persistence.annotations.PColl_EntityC.setId(int),1,1
org.apache.openjpa.persistence.annotations.PColl_EntityC.toString(),5,6
org.apache.openjpa.persistence.jdbc.common.apps.PreAttachCallback.jdoPreAttach(),8,8
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.Employee.getPhoneNumbers(),4,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.Employee.addPhoneNumber(String,PhoneNumber)",5,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.Employee.removePhoneNumber(String),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.Employee.equals(Object),13,42
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapOrder.SQLMapOrder(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapOrder.SQLMapOrder(int),2,2
"org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapOrder.SQLMapOrder(int,int)",4,5
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapOrder.getItem(),3,5
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapOrder.setItem(SQLMapItem),4,8
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapOrder.getQuantity(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapOrder.setQuantity(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapOrder.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapOrder.inform(),4,4
org.apache.openjpa.persistence.embed.TestEmbeddableXml.setUp(),2,3
org.apache.openjpa.persistence.embed.TestEmbeddableXml.getPersistenceUnitName(),5,5
org.apache.openjpa.persistence.embed.TestEmbeddableXml.testJoinColumns(),21,44
org.apache.openjpa.persistence.embed.TestEmbeddableXml.createFeatureXml(),23,102
org.apache.openjpa.persistence.embed.TestEmbeddableXml.testEntityA_Coll_StringXml(),7,19
org.apache.openjpa.persistence.embed.TestEmbeddableXml.testEntityA_Coll_Embed_Embed(),7,22
org.apache.openjpa.persistence.embed.TestEmbeddableXml.createEntityA_Coll_StringXml(),13,31
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.createEntityA_Coll_StringXml(EntityManager,int)",15,29
org.apache.openjpa.persistence.embed.TestEmbeddableXml.createEntityA_Coll_Embed_EmbedXml(),13,34
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.createEntityA_Coll_Embed_EmbedXml(EntityManager,int)",13,37
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.createEmbed_EmbedXml(EntityManager,int,int)",8,41
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.createEmbedXml(int,int)",6,24
org.apache.openjpa.persistence.embed.TestEmbeddableXml.findEntityA_Coll_StringXml(),29,55
org.apache.openjpa.persistence.embed.TestEmbeddableXml.findEntityA_Coll_Embed_EmbedXml(),9,33
org.apache.openjpa.persistence.embed.TestEmbeddableXml.checkEntityA_Coll_StringXml(EntityA_Coll_StringXml),11,39
org.apache.openjpa.persistence.embed.TestEmbeddableXml.checkEntityA_Coll_Embed_EmbedXml(EntityA_Coll_Embed_EmbedXml),11,43
org.apache.openjpa.persistence.embed.TestEmbeddableXml.checkEmbed_EmbedXml(Embed_EmbedXml),5,32
org.apache.openjpa.persistence.embed.TestEmbeddableXml.checkEmbedXml(EmbedXml),5,21
org.apache.openjpa.persistence.embed.TestEmbeddableXml.queryEntityA_Coll_StringXml(),17,49
org.apache.openjpa.persistence.embed.TestEmbeddableXml.queryEntityA_Coll_Embed_EmbedXml(),17,54
org.apache.openjpa.persistence.embed.TestEmbeddableXml.testMapKeyAnnotations(),7,9
org.apache.openjpa.persistence.embed.TestEmbeddableXml.createObj(),5,8
org.apache.openjpa.persistence.embed.TestEmbeddableXml.findObj(),4,4
org.apache.openjpa.persistence.embed.TestEmbeddableXml.createDepartments(),14,23
org.apache.openjpa.persistence.embed.TestEmbeddableXml.createCompanies(),14,23
org.apache.openjpa.persistence.embed.TestEmbeddableXml.createItems(),13,23
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.createItem(EntityManager,int)",12,21
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.createDepartment(EntityManager,int)",16,30
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.createEmployee(EntityManager,int)",7,12
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.createCompany(EntityManager,int)",15,27
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.createDivision(EntityManager,int)",7,13
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.createVicePresident(EntityManager,int)",8,17
org.apache.openjpa.persistence.embed.TestEmbeddableXml.findCompany(),12,38
org.apache.openjpa.persistence.embed.TestEmbeddableXml.findDepartment(),12,26
org.apache.openjpa.persistence.embed.TestEmbeddableXml.findItem(),9,21
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.updateItem(EntityManager,ItemXml)",20,69
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.deleteItem(EntityManager,ItemXml)",10,17
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.updateCompany(EntityManager,CompanyXml)",28,74
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.deleteCompany(EntityManager,CompanyXml)",10,15
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.updateDepartment(EntityManager,DepartmentXml)",22,46
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.deleteDepartment(EntityManager,DepartmentXml)",10,15
org.apache.openjpa.persistence.embed.TestEmbeddableXml.queryObj(),9,15
org.apache.openjpa.persistence.embed.TestEmbeddableXml.queryDepartment(),15,31
org.apache.openjpa.persistence.embed.TestEmbeddableXml.queryEmployee(),15,31
org.apache.openjpa.persistence.embed.TestEmbeddableXml.queryCompany(),15,31
org.apache.openjpa.persistence.embed.TestEmbeddableXml.queryDivision(),15,31
org.apache.openjpa.persistence.embed.TestEmbeddableXml.queryVicePresident(),17,38
org.apache.openjpa.persistence.embed.TestEmbeddableXml.queryItem(),15,33
org.apache.openjpa.persistence.embed.TestEmbeddableXml.assertDepartment(DepartmentXml),15,30
org.apache.openjpa.persistence.embed.TestEmbeddableXml.assertItem(ItemXml),7,15
org.apache.openjpa.persistence.embed.TestEmbeddableXml.assertEmployee(EmployeeXml),4,8
org.apache.openjpa.persistence.embed.TestEmbeddableXml.assertCompany(CompanyXml),6,9
org.apache.openjpa.persistence.embed.TestEmbeddableXml.assertDivision(DivisionXml),4,6
org.apache.openjpa.persistence.embed.TestEmbeddableXml.assertVicePresident(VicePresidentXml),5,8
org.apache.openjpa.persistence.embed.TestEmbeddableXml.createOrphanRemoval(),15,23
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.createCustomer(EntityManager,int)",11,23
"org.apache.openjpa.persistence.embed.TestEmbeddableXml.createOrder(EntityManager,int)",6,8
org.apache.openjpa.persistence.embed.TestEmbeddableXml.testOrphanRemovalTarget(),24,61
org.apache.openjpa.persistence.embed.TestEmbeddableXml.testOrphanRemovalTargetSetNull(),22,41
org.apache.openjpa.persistence.embed.TestEmbeddableXml.testOrphanRemovalSource(),20,37
org.apache.openjpa.persistence.kernel.common.apps.Entity1.Entity1(),1,1
"org.apache.openjpa.persistence.kernel.common.apps.Entity1.Entity1(long,String,int)",3,11
org.apache.openjpa.persistence.kernel.common.apps.Entity1.getPk(),0,0
org.apache.openjpa.persistence.kernel.common.apps.Entity1.setStringField(String),4,8
org.apache.openjpa.persistence.kernel.common.apps.Entity1.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.Entity1.setIntField(int),3,5
org.apache.openjpa.persistence.kernel.common.apps.Entity1.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.Entity1.setEntity2Field(Entity2),4,8
org.apache.openjpa.persistence.kernel.common.apps.Entity1.getEntity2Field(),2,5
org.apache.openjpa.persistence.kernel.common.apps.Entity1.toString(),2,8
org.apache.openjpa.persistence.jdbc.annotations.TestExtensionAnnotations.setUp(),9,15
org.apache.openjpa.persistence.jdbc.annotations.TestExtensionAnnotations.testDataStoreId(),14,22
org.apache.openjpa.persistence.jdbc.annotations.TestExtensionAnnotations.testDataCache(),5,7
org.apache.openjpa.persistence.jdbc.annotations.TestExtensionAnnotations.testFetchGroups(),14,40
org.apache.openjpa.persistence.jdbc.annotations.TestExtensionAnnotations.testValueStrategy(),15,68
org.apache.openjpa.persistence.jdbc.annotations.TestExtensionAnnotations.testReadOnly(),10,11
org.apache.openjpa.persistence.jdbc.annotations.TestExtensionAnnotations.testInverseLogical(),8,13
org.apache.openjpa.persistence.jdbc.annotations.TestExtensionAnnotations.testDependent(),15,36
org.apache.openjpa.persistence.jdbc.annotations.TestExtensionAnnotations.testLRS(),5,10
org.apache.openjpa.persistence.jdbc.annotations.TestExtensionAnnotations.testClassCriteria(),7,21
org.apache.openjpa.persistence.jdbc.annotations.TestExtensionAnnotations.testExternalValues(),15,43
org.apache.openjpa.persistence.jdbc.annotations.TestExtensionAnnotations.testExternalizer(),16,39
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC.setDefaultLockGroupStringField(String),5,10
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC.getDefaultLockGroupStringField(),3,7
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC.setExplicitDefaultLockGroupIntField(int),5,9
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC.getExplicitDefaultLockGroupIntField(),3,6
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC.setLockGroup0IntField(int),4,7
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC.getLockGroup0IntField(),2,4
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC.setLockGroup0StringField(String),5,10
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC.getLockGroup0StringField(),3,7
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC.setLockGroup1RelationField(RuntimeTest1),7,11
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC.getLockGroup1RelationField(),5,8
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC.setLockGroup1IntField(int),4,7
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC.getLockGroup1IntField(),2,4
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC.setUnlockedStringField(String),5,10
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC.getUnlockedStringField(),3,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PartyId.PartyId(),1,1
"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PartyId.PartyId(String,int)",3,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PartyId.getPartyName(),3,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PartyId.getId(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PartyId.equals(Object),4,10
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PartyId.hashCode(),4,6
org.apache.openjpa.persistence.kernel.common.apps.PCDirectory.PCDirectory(),1,1
org.apache.openjpa.persistence.kernel.common.apps.PCDirectory.PCDirectory(String),3,5
org.apache.openjpa.persistence.kernel.common.apps.PCDirectory.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.PCDirectory.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCDirectory.getParent(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCDirectory.getChildren(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCDirectory.getFiles(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCDirectory.add(PCDirectory),11,25
org.apache.openjpa.persistence.kernel.common.apps.PCDirectory.add(String),13,29
"org.apache.openjpa.persistence.kernel.common.apps.PCDirectory.isChild(PCDirectory,boolean)",7,19
"org.apache.openjpa.persistence.kernel.common.apps.PCDirectory.isChild(PCFile,boolean)",8,20
"org.apache.openjpa.persistence.kernel.common.apps.PCDirectory.reflect(PCDirectory,String)",10,15
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimInheritance.setUp(),32,49
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimInheritance.tearDown(),3,4
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimInheritance.createDog(int),6,12
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimInheritance.createCat(int),6,12
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimInheritance.testCreate(),10,16
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimInheritance.runQueries(),5,6
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimInheritance.queryCat(),13,23
org.apache.openjpa.persistence.delimited.identifiers.TestManualDelimInheritance.queryDog(),13,24
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeAll.getEntityManagerFactory(),18,41
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeAll.getListener(),4,10
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeAll.getSql(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeAll.testCacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeAll.testUncacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeAll.testUnspecified(),3,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeAll.getExpectedInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestPropertyCacheModeAll.getExpectedNotInCache(),2,4
org.apache.openjpa.persistence.lifecycle.TestPessimisticPNonTransToPDirty.setUp(),18,29
org.apache.openjpa.persistence.lifecycle.TestPessimisticPNonTransToPDirty.testPNonTransToPDirty(),27,39
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3Id.AutoIncrementPC3Id(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3Id.AutoIncrementPC3Id(String),4,6
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3Id.toString(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3Id.hashCode(),5,5
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3Id.equals(Object),5,12
org.apache.openjpa.persistence.callbacks.AddListenerEntity.getId(),0,0
org.apache.openjpa.persistence.callbacks.AddListenerEntity.setId(long),1,1
org.apache.openjpa.persistence.callbacks.AddListenerEntity.getValue(),1,2
org.apache.openjpa.persistence.callbacks.AddListenerEntity.setValue(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalB.setStringB(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalB.getStringB(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalB.setIntB(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalB.getIntB(),0,0
org.apache.openjpa.persistence.jdbc.TestJDBCEnumToKernelConstantMappings.testEagerFetchModes(),15,116
org.apache.openjpa.persistence.jdbc.TestJDBCEnumToKernelConstantMappings.testLRSSizeType(),15,119
org.apache.openjpa.persistence.jdbc.TestJDBCEnumToKernelConstantMappings.testJoinSyntaxType(),15,109
org.apache.openjpa.persistence.jdbc.TestJDBCEnumToKernelConstantMappings.testResultSetType(),13,93
org.apache.openjpa.persistence.jdbc.TestJDBCEnumToKernelConstantMappings.testFetchDirection(),13,74
org.apache.openjpa.persistence.jdbc.TestJDBCEnumToKernelConstantMappings.getConstantCount(Class),6,7
org.apache.openjpa.persistence.meta.TestPersistentClasses.TestPersistentClasses(String),5,7
"org.apache.openjpa.persistence.meta.TestPersistentClasses.assertClass(Class,OpenJPAConfiguration,boolean)",6,9
"org.apache.openjpa.persistence.meta.TestPersistentClasses.assertClass(String,OpenJPAConfiguration,boolean)",20,38
org.apache.openjpa.persistence.meta.TestPersistentClasses.testNoneConfigured(),22,36
org.apache.openjpa.persistence.meta.TestPersistentClasses.testJPAClasspathScanner(),23,57
org.apache.openjpa.persistence.meta.TestPersistentClasses.testTypes(),21,63
org.apache.openjpa.persistence.jpql.version.type.BaseEntity.getVersion(),1,2
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddedId.setUp(),18,54
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddedId.testGetObjectId(),20,40
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddedId.testMutateEmbeddedIdFieldValueOfNew(),25,89
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddedId.testMutateEmbeddedIdFieldValueOfExisting(),24,38
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddedId.testDetachAttach(),23,61
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddedId.testQuery(),15,44
org.apache.openjpa.persistence.jdbc.annotations.TestEmbeddedId.testAutoAssigned(),21,119
org.apache.openjpa.persistence.jdbc.common.apps.HorizA.setStringA(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizA.getStringA(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizA.setIntA(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizA.getIntA(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizA.setRelations(Set),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizA.getRelations(),2,3
org.apache.openjpa.persistence.proxy.delayed.hset.Employee.setEmpName(String),4,10
org.apache.openjpa.persistence.proxy.delayed.hset.Employee.getEmpName(),3,5
org.apache.openjpa.persistence.proxy.delayed.hset.Employee.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.hset.Employee.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.hset.Employee.setDept(IDepartment),3,6
org.apache.openjpa.persistence.proxy.delayed.hset.Employee.getDept(),2,3
org.apache.openjpa.persistence.proxy.delayed.hset.Employee.hashCode(),2,2
org.apache.openjpa.persistence.proxy.delayed.hset.Employee.equals(Object),6,13
org.apache.openjpa.persistence.jdbc.order.Widget.Widget(),1,1
org.apache.openjpa.persistence.jdbc.order.Widget.Widget(String),3,5
org.apache.openjpa.persistence.jdbc.order.Widget.setId(String),2,2
org.apache.openjpa.persistence.jdbc.order.Widget.getId(),1,1
org.apache.openjpa.persistence.jdbc.order.Widget.setName(String),3,6
org.apache.openjpa.persistence.jdbc.order.Widget.getName(),2,3
org.apache.openjpa.persistence.jdbc.order.Widget.setOwners(Collection<Owner>),4,7
org.apache.openjpa.persistence.jdbc.order.Widget.getOwners(),3,4
org.apache.openjpa.persistence.jdbc.order.Widget.equals(Object),5,15
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.ProxiesPC(),1,1
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.ProxiesPC(String),3,5
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.getStringSet(),2,5
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.setStringSet(Set),2,10
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.getProxySet(),3,6
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.setProxySet(TreeSet),3,11
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.getStringMap(),2,5
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.setStringMap(Map),3,10
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.getProxyMap(),3,6
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.setProxyMap(TreeMap),4,11
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.compareTo(Object),4,6
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.getList(),1,3
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.setList(List),2,6
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.getComp(),2,3
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.setComp(Collection),3,6
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.getSQLDate(),3,7
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.setSQLDate(java.sql.Date),4,12
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.getTimestamp(),3,5
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.setTimestamp(java.sql.Timestamp),4,8
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.getDate(),1,3
org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC.setDate(Date),2,6
org.apache.openjpa.persistence.models.company.idclass.FullTimeEmployee.setSalary(float),2,5
org.apache.openjpa.persistence.models.company.idclass.FullTimeEmployee.getSalary(),1,2
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.PhoneNumber.getNumber(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.PhoneNumber.setNumber(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.PhoneNumber.getEmployees(),5,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.PhoneNumber.addEmployees(String,Employee)",5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.PhoneNumber.removeEmployee(String),4,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.PhoneNumber.equals(Object),16,45
org.apache.openjpa.persistence.jdbc.query.procedure.AbstractProcedureList.addXToCharlie(),6,8
"org.apache.openjpa.persistence.jdbc.query.procedure.AbstractProcedureList.addSuffixToName(String,String)",8,13
org.apache.openjpa.persistence.jdbc.query.procedure.AbstractProcedureList.getAllApplicants(),5,7
org.apache.openjpa.persistence.jdbc.query.procedure.AbstractProcedureList.getTwoApplicants(),5,7
org.apache.openjpa.persistence.nullity.NullValues.NullValues(),9,36
org.apache.openjpa.persistence.nullity.NullValues.getId(),0,0
org.apache.openjpa.persistence.nullity.NullValues.getNullable(),2,3
org.apache.openjpa.persistence.nullity.NullValues.setNullable(Integer),3,6
org.apache.openjpa.persistence.nullity.NullValues.getNotNullable(),2,3
org.apache.openjpa.persistence.nullity.NullValues.setNotNullable(Integer),3,6
org.apache.openjpa.persistence.nullity.NullValues.getOptional(),2,3
org.apache.openjpa.persistence.nullity.NullValues.setOptional(Integer),3,6
org.apache.openjpa.persistence.nullity.NullValues.getNotOptional(),2,3
org.apache.openjpa.persistence.nullity.NullValues.setNotOptional(Integer),3,6
org.apache.openjpa.persistence.nullity.NullValues.getNullableBlob(),3,6
org.apache.openjpa.persistence.nullity.NullValues.setNullableBlob(BlobValue),4,11
org.apache.openjpa.persistence.nullity.NullValues.getNotNullableBlob(),3,6
org.apache.openjpa.persistence.nullity.NullValues.setNotNullableBlob(BlobValue),4,11
org.apache.openjpa.persistence.nullity.NullValues.getOptionalBlob(),3,6
org.apache.openjpa.persistence.nullity.NullValues.setOptionalBlob(BlobValue),4,11
org.apache.openjpa.persistence.nullity.NullValues.getNotOptionalBlob(),3,6
org.apache.openjpa.persistence.nullity.NullValues.setNotOptionalBlob(BlobValue),4,11
org.apache.openjpa.persistence.nullity.NullValues.getUniqueNullable(),3,5
org.apache.openjpa.persistence.nullity.NullValues.setUniqueNullable(String),4,6
org.apache.openjpa.persistence.nullity.NullValues.getVersion(),1,2
org.apache.openjpa.persistence.embed.lazy.Guy.setName(String),3,6
org.apache.openjpa.persistence.embed.lazy.Guy.getName(),2,3
org.apache.openjpa.persistence.embed.lazy.Guy.setHeight(int),2,5
org.apache.openjpa.persistence.embed.lazy.Guy.getHeight(),1,2
org.apache.openjpa.persistence.embed.lazy.Guy.setWeight(int),2,5
org.apache.openjpa.persistence.embed.lazy.Guy.getWeight(),1,2
org.apache.openjpa.persistence.results.cls.ResultClsAnnotation.ResultClsAnnotation(),3,3
org.apache.openjpa.persistence.results.cls.ResultClsAnnotation.getId(),1,1
org.apache.openjpa.persistence.results.cls.ResultClsAnnotation.setId(String),2,2
org.apache.openjpa.persistence.results.cls.ResultClsAnnotation.getDescription(),2,3
org.apache.openjpa.persistence.results.cls.ResultClsAnnotation.setDescription(String),3,6
org.apache.openjpa.persistence.datacache.DistributedCacheTest.setCache(String),4,6
org.apache.openjpa.persistence.datacache.DistributedCacheTest.setQueryCache(String),5,8
org.apache.openjpa.persistence.datacache.DistributedCacheTest.setRemoteCommitProvider(String),6,8
org.apache.openjpa.persistence.datacache.DistributedCacheTest.DistributedCacheTest(String),4,6
"org.apache.openjpa.persistence.datacache.DistributedCacheTest.DistributedCacheTest(String,Class)",4,7
org.apache.openjpa.persistence.datacache.DistributedCacheTest.getConfs(),2,3
org.apache.openjpa.persistence.datacache.DistributedCacheTest.getConfs2(),2,3
org.apache.openjpa.persistence.datacache.DistributedCacheTest.getConfs(boolean),26,65
org.apache.openjpa.persistence.enhance.identity.MedicalHistory1.getId(),1,1
org.apache.openjpa.persistence.enhance.identity.MedicalHistory1.setId(PersonId1),2,2
org.apache.openjpa.persistence.enhance.identity.MedicalHistory1.getPatient(),2,3
org.apache.openjpa.persistence.enhance.identity.MedicalHistory1.setPatient(Person1),3,4
org.apache.openjpa.persistence.enhance.identity.MedicalHistory1.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.MedicalHistory1.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.MedicalHistory1.equals(Object),8,23
org.apache.openjpa.persistence.enhance.identity.MedicalHistory1.hashCode(),5,14
org.apache.openjpa.persistence.querycache.TestQueryCache.setUp(),26,49
org.apache.openjpa.persistence.querycache.TestQueryCache.testCachedQuery(),13,29
org.apache.openjpa.persistence.querycache.TestQueryCache.testResultList(),10,15
org.apache.openjpa.persistence.querycache.TestQueryCache.testGetSingleList(),16,27
org.apache.openjpa.persistence.querycache.TestQueryCache.testExecuteUpdate(),23,65
org.apache.openjpa.persistence.querycache.TestQueryCache.testSetMaxResults(),13,17
org.apache.openjpa.persistence.querycache.TestQueryCache.testSetFirstResults(),14,25
org.apache.openjpa.persistence.querycache.TestQueryCache.testName(),12,24
org.apache.openjpa.persistence.querycache.TestQueryCache.startTx(EntityManager),5,5
org.apache.openjpa.persistence.querycache.TestQueryCache.isActiveTx(EntityManager),4,5
org.apache.openjpa.persistence.querycache.TestQueryCache.endTx(EntityManager),6,10
org.apache.openjpa.persistence.event.PostRemoveCallbackEntity.getName(),2,3
org.apache.openjpa.persistence.event.PostRemoveCallbackEntity.setName(String),3,6
org.apache.openjpa.persistence.event.PostRemoveCallbackEntity.getId(),0,0
org.apache.openjpa.persistence.event.PostRemoveCallbackEntity.postRemove(),12,24
org.apache.openjpa.persistence.event.PostRemoveCallbackEntity.getPostRemoveTime(),3,6
org.apache.openjpa.persistence.datacache.TestLRUCache.setUp(Object),18,34
org.apache.openjpa.persistence.datacache.TestLRUCache.testQueryCacheOverFlow(),43,97
org.apache.openjpa.persistence.datacache.TestLRUCache.testDataCacheOverFlow(),30,74
"org.apache.openjpa.persistence.datacache.TestLRUCache.contains(String,List<String>)",5,10
org.apache.openjpa.persistence.models.library.Volunteer.Volunteer(),2,2
org.apache.openjpa.persistence.models.library.Volunteer.Volunteer(Borrower),6,20
org.apache.openjpa.persistence.models.library.Volunteer.getBorrower(),1,3
org.apache.openjpa.persistence.models.library.Volunteer.getHoursPerWeek(),2,4
org.apache.openjpa.persistence.models.library.Volunteer.setHoursPerWeek(int),6,12
org.apache.openjpa.persistence.models.library.Volunteer.toString(),5,6
org.apache.openjpa.persistence.models.library.Volunteer.hashCode(),3,3
org.apache.openjpa.persistence.models.library.Volunteer.equals(Object),16,24
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectJ.CacheObjectJ(),2,2
"org.apache.openjpa.persistence.datacache.common.apps.CacheObjectJ.CacheObjectJ(String,CacheObjectE)",4,6
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectJ.getStr(),2,3
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectJ.setStr(String),3,4
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectJ.getE(),3,3
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.setUp(),22,25
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOneToManyElementRemoval(),53,127
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOneToManyBiDirElementRemoval(),51,147
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testElementCollectionElementRemoval(),54,164
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOneToManyElementInsert(),51,138
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testElementCollectionElementInsert(),46,161
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOneToManyDefault(),39,101
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOneToManyNamed(),42,89
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testManyToMany(),38,117
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateBiOrderedManyToMany(),44,137
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testElementCollectionBasic(),40,95
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testElementCollectionEmbeddables(),40,92
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOrderColumnInsertable(),32,47
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOrderColumnUpdateable(),26,41
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOrderColumnTable(),51,211
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOrderColumnPredicateQuery(),34,104
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.testOrderColumnProjectionQuery(),34,87
org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.createQueryData(),28,118
"org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateIndexAndValues(OpenJPAEntityManagerSPI,String,String,int,Object[],String,Object)",34,87
"org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateCollIndexAndValues(OpenJPAEntityManagerSPI,String,String,int,Object[],String,Object)",34,87
"org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateOrderColumnName(Class,String,String)",7,19
"org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.getOrderColumn(OpenJPAEntityManagerFactorySPI,Class,String)",18,36
"org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateOrderColumnName(OpenJPAEntityManagerFactorySPI,Class,String,String)",14,27
"org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateOrderColumnTable(OpenJPAEntityManagerFactorySPI,Class,String,String,String)",18,46
"org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateOrderColumnUpdatable(OpenJPAEntityManagerFactorySPI,Class,String,boolean)",17,27
"org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.validateOrderColumnInsertable(OpenJPAEntityManagerFactorySPI,Class,String,boolean)",17,27
"org.apache.openjpa.persistence.jdbc.order.TestOrderColumn.tableAndColumnExists(OpenJPAEntityManagerFactorySPI,OpenJPAEntityManagerSPI,String,String,String)",41,117
org.apache.openjpa.persistence.models.library.Borrower.Borrower(),2,2
org.apache.openjpa.persistence.models.library.Borrower.Borrower(String),13,21
org.apache.openjpa.persistence.models.library.Borrower.getName(),2,3
org.apache.openjpa.persistence.models.library.Borrower.getBooks(),4,8
org.apache.openjpa.persistence.models.library.Borrower.borrowBook(Book),6,11
org.apache.openjpa.persistence.models.library.Borrower.returnBook(Book),4,9
org.apache.openjpa.persistence.models.library.Borrower.setVolunteer(Volunteer),2,6
org.apache.openjpa.persistence.models.library.Borrower.getVolunteer(),1,3
org.apache.openjpa.persistence.models.library.Borrower.toString(),4,5
org.apache.openjpa.persistence.models.library.Borrower.hashCode(),3,3
org.apache.openjpa.persistence.models.library.Borrower.equals(Object),16,24
org.apache.openjpa.persistence.query.MaxExpression.MaxExpression(Expression),5,7
org.apache.openjpa.persistence.detach.xml.Driver.setId(long),1,1
org.apache.openjpa.persistence.detach.xml.Driver.getId(),0,0
org.apache.openjpa.persistence.detach.xml.Driver.setName(String),3,6
org.apache.openjpa.persistence.detach.xml.Driver.getName(),2,3
org.apache.openjpa.persistence.detach.xml.Driver.setAuto(Automobile),3,6
org.apache.openjpa.persistence.detach.xml.Driver.getAuto(),2,3
org.apache.openjpa.persistence.discriminator.IntegerLeafEntity.getSubInt(),1,2
org.apache.openjpa.persistence.discriminator.IntegerLeafEntity.setSubInt(int),2,5
org.apache.openjpa.persistence.event.TestTCPRemoteRecovery.TestTCPRemoteRecovery(String),6,6
org.apache.openjpa.persistence.event.TestTCPRemoteRecovery.setUp(),4,4
org.apache.openjpa.persistence.event.TestTCPRemoteRecovery.tearDownTestClass(),3,5
org.apache.openjpa.persistence.event.TestTCPRemoteRecovery.pause(double),6,10
org.apache.openjpa.persistence.event.TestTCPRemoteRecovery.testReceiverRecovers(),107,359
org.apache.openjpa.persistence.event.TestTCPRemoteRecovery.testSenderRecovers(),71,217
"org.apache.openjpa.persistence.event.TestTCPRemoteRecovery.performAddsModifiesDeletes(EntityManager,int)",34,70
"org.apache.openjpa.persistence.event.TestTCPRemoteRecovery.createDistinctFactory(Class,String)",23,62
org.apache.openjpa.persistence.event.TestTCPRemoteRecovery.RemoteCommitListenerTestImpl.afterCommit(RemoteCommitEvent),17,34
org.apache.openjpa.persistence.event.TestTCPRemoteRecovery.RemoteCommitListenerTestImpl.close(),1,1
org.apache.openjpa.persistence.event.TestTCPRemoteRecovery.RemoteCommitListenerTestImpl.toString(),9,16
org.apache.openjpa.persistence.jdbc.kernel.TestEmbeddedPessimisticLocking.TestEmbeddedPessimisticLocking(String),6,7
org.apache.openjpa.persistence.jdbc.kernel.TestEmbeddedPessimisticLocking.setUp(),8,10
org.apache.openjpa.persistence.jdbc.kernel.TestEmbeddedPessimisticLocking.setUpTestCase(),33,94
org.apache.openjpa.persistence.jdbc.kernel.TestEmbeddedPessimisticLocking.prepareEMF(OpenJPAEntityManagerFactory),26,37
org.apache.openjpa.persistence.jdbc.kernel.TestEmbeddedPessimisticLocking.testEmbeddedFieldsWithLockedParent(),41,68
org.apache.openjpa.persistence.jdbc.kernel.TestEmbeddedPessimisticLocking.testEmbeddedFieldsWithUnlockedParent(),50,123
org.apache.openjpa.persistence.jdbc.kernel.TestEmbeddedPessimisticLocking.testComplexEmbeddedFieldsWithLockedParent(),40,84
org.apache.openjpa.persistence.jdbc.kernel.TestEmbeddedPessimisticLocking.testComplexEmbeddedFieldsWithUnlockedParent(),55,171
org.apache.openjpa.persistence.jdbc.kernel.TestEmbeddedPessimisticLocking.getProps(),22,41
org.apache.openjpa.persistence.generationtype.TestMultipleSchemaNames.setUp(),57,332
org.apache.openjpa.persistence.generationtype.TestMultipleSchemaNames.testGeneratedAUTO(),38,230
org.apache.openjpa.persistence.generationtype.TestMultipleSchemaNames.testGeneratedTABLE(),33,464
org.apache.openjpa.persistence.generationtype.TestMultipleSchemaNames.testGeneratedIDENTITY(),29,115
org.apache.openjpa.persistence.generationtype.TestMultipleSchemaNames.createSchemas(),40,95
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.setUp(),8,11
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.setCandidate(Query,Class)",17,43
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.queryQualifiedId(boolean),24,85
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.testQueryObject(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.createObj(),16,27
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.createEmployee(EntityManager,int)",13,35
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.findObj(),9,15
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.queryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.queryPhoneNumber(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.queryEmployee(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.assertEmployee(Employee),10,27
org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.assertPhoneNumber(PhoneNumber),10,19
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.checkPhoneMap(Map<String,PhoneNumber>,Map<String,PhoneNumber>)",14,39
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex5.TestMany2ManyMapEx5.checkEmpMap(Map<String,Employee>,Map<String,Employee>)",15,39
org.apache.openjpa.persistence.jpql.version.TestJoinVersionField.setUp(),7,8
org.apache.openjpa.persistence.jpql.version.TestJoinVersionField.testGetDocuments(),23,46
org.apache.openjpa.persistence.jpql.version.TestJoinVersionField.testGetDocumentsByExplicitAttributeSelection(),29,53
org.apache.openjpa.persistence.jpql.version.TestJoinVersionField.createTestData(),14,32
org.apache.openjpa.persistence.kernel.TestQueries.TestQueries(String),4,5
org.apache.openjpa.persistence.kernel.TestQueries.TestQueries(),2,2
org.apache.openjpa.persistence.kernel.TestQueries.setUp(),4,9
org.apache.openjpa.persistence.kernel.TestQueries.testSimpleQuery(),15,56
org.apache.openjpa.persistence.kernel.TestQueries.testAndQuery(),21,44
org.apache.openjpa.persistence.kernel.TestQueries.testRelationQuery(),8,18
"org.apache.openjpa.persistence.kernel.TestQueries.relationQuery(int,String,int)",28,62
org.apache.openjpa.persistence.kernel.TestQueries.testQueryExecuteThrowsExceptionWhenNoNTR(),25,46
"org.apache.openjpa.persistence.kernel.TestQueries.deleteByQuery(Class,boolean,String,OpenJPAEntityManager)",34,86
"org.apache.openjpa.persistence.kernel.TestQueries.runQuery(Class,boolean,String,OpenJPAEntityManager)",22,43
"org.apache.openjpa.persistence.kernel.TestQueries.persist(RuntimeTest1,OpenJPAEntityManager)",13,27
"org.apache.openjpa.persistence.kernel.TestQueries.newRuntimeTest1(String,int)",5,17
"org.apache.openjpa.persistence.kernel.TestQueries.newRuntimeTest2(String,int)",5,17
org.apache.openjpa.persistence.embed.attrOverrides.BasicEmbedXML.BasicEmbedXML(),3,3
org.apache.openjpa.persistence.embed.attrOverrides.BasicEmbedXML.BasicEmbedXML(int),5,9
org.apache.openjpa.persistence.embed.attrOverrides.BasicEmbedXML.getIntegerValue(),2,4
org.apache.openjpa.persistence.embed.attrOverrides.BasicEmbedXML.setNotIntegerValue(Integer),3,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.Employee.getPhoneNumbers(),4,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.Employee.addPhoneNumber(FullName,PhoneNumber)",4,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.Employee.removePhoneNumber(FullName),4,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.Employee.equals(Object),14,43
org.apache.openjpa.persistence.proxy.delayed.IDepartment.setEmployees(Collection<IEmployee>),4,5
org.apache.openjpa.persistence.proxy.delayed.IDepartment.getEmployees(),3,3
org.apache.openjpa.persistence.proxy.delayed.IDepartment.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.IDepartment.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.IDepartment.setLocations(Collection<Location>),4,5
org.apache.openjpa.persistence.proxy.delayed.IDepartment.getLocations(),3,3
org.apache.openjpa.persistence.proxy.delayed.IDepartment.setProducts(Collection<Product>),4,5
org.apache.openjpa.persistence.proxy.delayed.IDepartment.getProducts(),3,3
org.apache.openjpa.persistence.proxy.delayed.IDepartment.setCertifications(Collection<Certification>),4,5
org.apache.openjpa.persistence.proxy.delayed.IDepartment.getCertifications(),3,3
org.apache.openjpa.persistence.proxy.delayed.IDepartment.setAwards(Collection<Award>),4,5
org.apache.openjpa.persistence.proxy.delayed.IDepartment.getAwards(),3,3
org.apache.openjpa.persistence.kernel.TestGetObjectsById.TestGetObjectsById(String),6,9
org.apache.openjpa.persistence.kernel.TestGetObjectsById.setUp(),16,52
org.apache.openjpa.persistence.kernel.TestGetObjectsById.testGetObjectsByIdInvocation(),13,25
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC2.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC2.setName(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC2.getRef(),4,5
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC2.setRef(EagerOuterJoinPC),5,8
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC2.toString(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC2.getHelper(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC2.setHelper(HelperPC),2,6
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC2.getStringCollection(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.EagerOuterJoinPC2.setStringCollection(Collection),3,10
org.apache.openjpa.persistence.proxy.delayed.alist.UserIdentity.setMember(IMember),1,1
org.apache.openjpa.persistence.proxy.delayed.alist.UserIdentity.getMember(),0,0
org.apache.openjpa.persistence.proxy.delayed.alist.UserIdentity.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.alist.UserIdentity.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.VicePresident.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.VicePresident.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.VicePresident.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.VicePresident.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.VicePresident.getCompany(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.VicePresident.setCompany(Company),2,3
org.apache.openjpa.persistence.relations.entity.LrsEntityA.LrsEntityA(),7,9
org.apache.openjpa.persistence.relations.entity.LrsEntityA.LrsEntityA(String),8,11
"org.apache.openjpa.persistence.relations.entity.LrsEntityA.LrsEntityA(int,String,int)",9,14
org.apache.openjpa.persistence.relations.entity.LrsEntityA.getEntitybs(),4,5
org.apache.openjpa.persistence.relations.entity.LrsEntityA.setEntitybs(Collection<LrsEntityB>),5,8
org.apache.openjpa.persistence.relations.entity.LrsEntityA.getAge(),1,2
org.apache.openjpa.persistence.relations.entity.LrsEntityA.setAge(int),2,5
org.apache.openjpa.persistence.relations.entity.LrsEntityA.getId(),0,0
org.apache.openjpa.persistence.relations.entity.LrsEntityA.getName(),2,3
org.apache.openjpa.persistence.relations.entity.LrsEntityA.setName(String),3,6
org.apache.openjpa.persistence.jdbc.order.Game.Game(),1,1
org.apache.openjpa.persistence.jdbc.order.Game.setId(String),2,2
org.apache.openjpa.persistence.jdbc.order.Game.getId(),1,1
org.apache.openjpa.persistence.jdbc.order.Game.setPlayedIn(List<Player>),4,7
org.apache.openjpa.persistence.jdbc.order.Game.getPlayedIn(),3,4
org.apache.openjpa.persistence.jdbc.order.Game.equals(Object),4,11
org.apache.openjpa.persistence.jdbc.order.Game.setRainDates(List<java.sql.Date>),7,13
org.apache.openjpa.persistence.jdbc.order.Game.getRainDates(),6,8
org.apache.openjpa.persistence.jdbc.order.Game.setInnings(Collection<Inning>),4,7
org.apache.openjpa.persistence.jdbc.order.Game.getInnings(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.HorizO.setStringO(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizO.getStringO(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizO.setIntO(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizO.getIntO(),0,0
org.apache.openjpa.persistence.enhance.identity.BookId1.BookId1(),1,1
"org.apache.openjpa.persistence.enhance.identity.BookId1.BookId1(String,String)",4,9
org.apache.openjpa.persistence.enhance.identity.BookId1.equals(Object),5,11
org.apache.openjpa.persistence.enhance.identity.BookId1.hashCode(),5,8
org.apache.openjpa.persistence.enhance.identity.BookId1.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.BookId1.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.BookId1.getLibrary(),2,3
org.apache.openjpa.persistence.enhance.identity.BookId1.setLibrary(String),3,6
org.apache.openjpa.persistence.enhance.identity.BookId1.safeHash(Object),4,5
org.apache.openjpa.persistence.fetchgroups.TestFetchGroupStacks.setUp(),5,6
org.apache.openjpa.persistence.fetchgroups.TestFetchGroupStacks.testFetchGroupStacks(),21,85
org.apache.openjpa.persistence.fetchgroups.TestFetchGroupStacks.assertFetchGroups(String),10,16
org.apache.openjpa.persistence.identity.SQLBigIntegerIdEntity.getId(),1,1
org.apache.openjpa.persistence.identity.SQLBigIntegerIdEntity.setId(BigInteger),2,2
org.apache.openjpa.persistence.identity.SQLBigIntegerIdEntity.getData(),1,2
org.apache.openjpa.persistence.identity.SQLBigIntegerIdEntity.setData(int),2,5
org.apache.openjpa.persistence.detachment.TestGetReferenceAndImplicitDetachment.setUp(),7,9
org.apache.openjpa.persistence.detachment.TestGetReferenceAndImplicitDetachment.testNonexistentGetReferenceDetachmentInTxWithCommit(),23,38
org.apache.openjpa.persistence.detachment.TestGetReferenceAndImplicitDetachment.testNonexistentGetReferenceDetachmentOutsideTx(),21,34
org.apache.openjpa.persistence.detachment.TestGetReferenceAndImplicitDetachment.testNonexistentGetReferenceDetachmentInTxWithRollback(),22,39
org.apache.openjpa.persistence.detachment.TestGetReferenceAndImplicitDetachment.testNonexistentGetReferenceDetachmentInTxWithFailedCommit(),27,47
org.apache.openjpa.persistence.managedinterface.MixedInterface.getId(),0,0
org.apache.openjpa.persistence.managedinterface.MixedInterface.setId(int),1,1
org.apache.openjpa.persistence.managedinterface.MixedInterface.getIntField(),1,1
org.apache.openjpa.persistence.managedinterface.MixedInterface.setIntField(int),2,2
org.apache.openjpa.persistence.event.TestFakeRemoteEvents.TestFakeRemoteEvents(String),6,6
org.apache.openjpa.persistence.event.TestFakeRemoteEvents.setUp(),4,4
org.apache.openjpa.persistence.event.TestFakeRemoteEvents.testListener(),47,216
org.apache.openjpa.persistence.event.TestFakeRemoteEvents.testProvider(),37,90
"org.apache.openjpa.persistence.event.TestFakeRemoteEvents.equals(Object,Object)",4,13
org.apache.openjpa.persistence.event.TestFakeRemoteEvents.RemoteCommitListenerTestImpl.afterCommit(RemoteCommitEvent),9,20
org.apache.openjpa.persistence.event.TestFakeRemoteEvents.RemoteCommitListenerTestImpl.close(),1,1
org.apache.openjpa.persistence.event.TestFakeRemoteEvents.RemoteCommitProviderTestImpl.RemoteCommitProviderTestImpl(),7,10
org.apache.openjpa.persistence.event.TestFakeRemoteEvents.RemoteCommitProviderTestImpl.broadcast(RemoteCommitEvent),10,20
org.apache.openjpa.persistence.event.TestFakeRemoteEvents.RemoteCommitProviderTestImpl.close(),1,1
org.apache.openjpa.persistence.dynamicschema.ResWordEntity.setId(int),1,1
org.apache.openjpa.persistence.dynamicschema.ResWordEntity.getId(),0,0
org.apache.openjpa.persistence.dynamicschema.ResWordEntity.setAlias(String),3,6
org.apache.openjpa.persistence.dynamicschema.ResWordEntity.getAlias(),2,3
org.apache.openjpa.persistence.dynamicschema.ResWordEntity.getBoolean(),0,0
org.apache.openjpa.persistence.dynamicschema.ResWordEntity.setBoolean(int),1,1
org.apache.openjpa.persistence.dynamicschema.ResWordEntity.getType(),2,3
org.apache.openjpa.persistence.dynamicschema.ResWordEntity.setType(Integer),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.VicePresident.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.VicePresident.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.VicePresident.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.VicePresident.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.VicePresident.getCompany(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.VicePresident.setCompany(Company),2,3
org.apache.openjpa.persistence.embed.Embed_Coll_Map.getName1(),2,3
org.apache.openjpa.persistence.embed.Embed_Coll_Map.setName1(String),3,6
org.apache.openjpa.persistence.embed.Embed_Coll_Map.getName2(),2,3
org.apache.openjpa.persistence.embed.Embed_Coll_Map.setName2(String),3,6
org.apache.openjpa.persistence.embed.Embed_Coll_Map.getName3(),2,3
org.apache.openjpa.persistence.embed.Embed_Coll_Map.setName3(String),3,6
org.apache.openjpa.persistence.embed.Embed_Coll_Map.getMap(),3,7
"org.apache.openjpa.persistence.embed.Embed_Coll_Map.addMap(Integer,Integer)",5,11
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryEntity.MaxQueryEntity(),3,3
"org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryEntity.MaxQueryEntity(int,int,int)",5,9
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryEntity.setId(int),1,1
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryEntity.getRevision(),1,2
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryEntity.setRevision(int),2,5
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryEntity.getDomainId(),1,2
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryEntity.setDomainId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.PhoneNumber.getPhonePK(),1,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.PhoneNumber.setPhonePK(PhonePK),2,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.PhoneNumber.getEmployees(),4,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.PhoneNumber.addEmployees(EmployeePK,Employee)",4,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.PhoneNumber.removeEmployee(EmployeePK),3,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.PhoneNumber.getRoom(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.PhoneNumber.setRoom(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.PhoneNumber.equals(Object),15,50
org.apache.openjpa.persistence.merge.TestMergeDetachStateField.setUp(),6,9
org.apache.openjpa.persistence.merge.TestMergeDetachStateField.testCascadeMergeDetachState(),34,97
org.apache.openjpa.persistence.merge.TestMergeDetachStateField.testCascadeMergeDetachState2(),36,102
org.apache.openjpa.persistence.merge.TestMergeDetachStateField.testCascadeMergeDetachStateComplex(),43,131
"org.apache.openjpa.persistence.merge.TestMergeDetachStateField.verifyDetached(EntityManager,Object[])",12,35
org.apache.openjpa.persistence.embed.ItemXml.getId(),0,0
org.apache.openjpa.persistence.embed.ItemXml.setId(int),1,1
org.apache.openjpa.persistence.embed.ItemXml.getImages(),2,3
"org.apache.openjpa.persistence.embed.ItemXml.addImage(String,String)",6,13
org.apache.openjpa.persistence.embed.ItemXml.removeImage(String),5,9
org.apache.openjpa.persistence.embed.ItemXml.getImage(String),4,9
org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC.ColumnIOPC(),2,2
org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC.ColumnIOPC(int),2,2
org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC.setName(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC.getIgnoreInsert(),2,4
org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC.setIgnoreInsert(int),3,9
org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC.getIgnoreUpdate(),2,4
org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC.setIgnoreUpdate(int),3,9
org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC.getIdent(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC.setIdent(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC.getRel(),3,4
org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC.setRel(ColumnIOPC),4,7
org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC.setId(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.SecondaryTab.SecondaryTab(),2,2
org.apache.openjpa.persistence.kernel.common.apps.SecondaryTab.SecondaryTab(int),2,2
org.apache.openjpa.persistence.kernel.common.apps.SecondaryTab.getid(),1,1
org.apache.openjpa.persistence.kernel.common.apps.SecondaryTab.setid(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.SecondaryTab.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.SecondaryTab.setStringField(String),3,10
org.apache.openjpa.persistence.inheritance.NoGenMappedSuperclassBase.getId(),0,0
org.apache.openjpa.persistence.inheritance.NoGenMappedSuperclassBase.setId(long),1,1
org.apache.openjpa.persistence.identity.ComplexCompoundIdTestEntity.getId(),0,0
org.apache.openjpa.persistence.identity.ComplexCompoundIdTestEntity.getType(),2,4
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCLeafA.getLeafAData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCLeafA.setLeafAData(String),4,10
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCLeafA.getLeafAData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCLeafA.setLeafAData(String),4,10
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.VicePresident.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.VicePresident.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.VicePresident.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.VicePresident.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.VicePresident.getCompany(),2,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.VicePresident.setCompany(Compny1),3,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.VicePresident.equals(Object),5,11
org.apache.openjpa.persistence.jpql.version.Author.getId(),0,0
org.apache.openjpa.persistence.jpql.version.Author.setId(int),1,1
org.apache.openjpa.persistence.jpql.version.Author.getVersion(),1,2
org.apache.openjpa.persistence.jpql.version.Author.setVersion(int),2,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.Division.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.Division.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.Division.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.Division.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.Division.equals(Object),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.Division.hashCode(),4,11
org.apache.openjpa.persistence.criteria.TestCriteria.setUp(),49,64
org.apache.openjpa.persistence.criteria.TestCriteria.testLogicalPredicateAssociativity(),28,61
org.apache.openjpa.persistence.criteria.TestCriteria.testMultipleDomainOfSameClass(),19,36
org.apache.openjpa.persistence.criteria.TestCriteria.testFetchJoin(),17,26
org.apache.openjpa.persistence.criteria.TestCriteria.testMultipartNavigation(),22,41
org.apache.openjpa.persistence.criteria.TestCriteria.testOperatorPath(),23,44
org.apache.openjpa.persistence.criteria.TestCriteria.testLiteral(),23,42
org.apache.openjpa.persistence.criteria.TestCriteria.testTypeExpression(),15,23
org.apache.openjpa.persistence.criteria.TestCriteria.testIndex(),19,35
org.apache.openjpa.persistence.criteria.TestCriteria.testSum(),20,41
org.apache.openjpa.persistence.criteria.TestCriteria.testSize(),16,24
org.apache.openjpa.persistence.criteria.TestCriteria.testCount(),24,59
org.apache.openjpa.persistence.criteria.TestCriteria.testGeneralCase(),18,38
org.apache.openjpa.persistence.criteria.TestCriteria.testMemberOf(),14,18
org.apache.openjpa.persistence.criteria.TestCriteria.testParamater(),18,32
org.apache.openjpa.persistence.criteria.TestCriteria.testBetween(),21,35
org.apache.openjpa.persistence.criteria.TestCriteria.testIsEmpty(),13,18
org.apache.openjpa.persistence.criteria.TestCriteria.testNonCorrelatedSubQuery(),18,47
org.apache.openjpa.persistence.criteria.TestCriteria.testNew(),22,40
org.apache.openjpa.persistence.criteria.TestCriteria.testKeyValueOperatorPath(),26,51
org.apache.openjpa.persistence.criteria.TestCriteria.testGroupByHaving(),17,38
org.apache.openjpa.persistence.criteria.TestCriteria.testGroupByHaving2(),15,31
org.apache.openjpa.persistence.criteria.TestCriteria.testOrderBy(),19,40
org.apache.openjpa.persistence.criteria.TestCriteria.testOrderBy2(),20,50
org.apache.openjpa.persistence.criteria.TestCriteria.testOrderByExpression(),25,54
org.apache.openjpa.persistence.criteria.TestCriteria.testCorrelatedSubquery(),20,49
org.apache.openjpa.persistence.criteria.TestCriteria.testCreateSubquery(),14,30
org.apache.openjpa.persistence.criteria.TestCriteria.testTypeList(),15,21
org.apache.openjpa.persistence.criteria.TestCriteria.testStringList(),15,21
org.apache.openjpa.persistence.criteria.TestCriteria.testConcat(),25,51
org.apache.openjpa.persistence.criteria.TestCriteria.testCorrelatedSubquerySpecialCase1(),18,31
org.apache.openjpa.persistence.criteria.TestCriteria.testCorrelatedSubquerySpecialCase2(),18,33
org.apache.openjpa.persistence.criteria.TestCriteria.testRecursiveDefinitionIsNotAllowed(),17,18
"org.apache.openjpa.persistence.criteria.TestCriteria.compare(String,QueryDefinition)",9,15
"org.apache.openjpa.persistence.criteria.TestCriteria.compare(String,QueryDefinition,Object)",15,22
"org.apache.openjpa.persistence.criteria.TestCriteria.compareLiterally(String,QueryDefinition)",15,29
"org.apache.openjpa.persistence.criteria.TestCriteria.executeActually(String,QueryDefinition,Object)",33,103
"org.apache.openjpa.persistence.criteria.TestCriteria.setParameters(Query,Object)",7,8
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCLeafB2.getLeafB2Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCLeafB2.setLeafB2Data(String),4,10
org.apache.openjpa.persistence.kernel.TestEJBTransactions.TestEJBTransactions(String),6,7
org.apache.openjpa.persistence.kernel.TestEJBTransactions.setUp(),1,1
org.apache.openjpa.persistence.kernel.TestEJBTransactions.testTxCannotBeCommittedTwiceInDiffThreads(),25,43
org.apache.openjpa.persistence.kernel.TestEJBTransactions.testTxCannotBeCommittedTwiceInDiffThreads().$1.run(),6,10
org.apache.openjpa.persistence.kernel.TestEJBTransactions.testTransactionsCannotBeCommittedTwice(),15,22
org.apache.openjpa.persistence.kernel.TestEJBTransactions.testTransactionsCannotBeRolledBackTwice(),17,29
org.apache.openjpa.persistence.embed.lazy.TestLazyEmbeddable.testLazyEmbeddableFields(),75,230
org.apache.openjpa.persistence.embed.lazy.TestLazyEmbeddable.verifyLazyLoading(Recliner),17,78
"org.apache.openjpa.persistence.embed.lazy.TestLazyEmbeddable.selectContains(String,List<String>,String)",13,36
org.apache.openjpa.persistence.embed.lazy.TestLazyEmbeddable.toString(List<String>),5,17
org.apache.openjpa.persistence.embed.lazy.TestLazyEmbeddable.cleanupEMF(OpenJPAEntityManagerFactorySPI),24,34
org.apache.openjpa.persistence.embed.lazy.TestLazyEmbeddable.SQLListener.beforeExecuteStatement(JDBCEvent),6,12
org.apache.openjpa.persistence.kernel.TestFieldRange2.TestFieldRange2(),5,8
org.apache.openjpa.persistence.kernel.TestFieldRange2.TestFieldRange2(String),5,6
org.apache.openjpa.persistence.kernel.TestFieldRange2.setUp(),6,7
org.apache.openjpa.persistence.kernel.TestFieldRange2.testSaveState(),11,17
org.apache.openjpa.persistence.kernel.TestFieldRange2.dateTest(long),11,16
"org.apache.openjpa.persistence.kernel.TestFieldRange2.allFieldSaveState(int,short,long,float,double,byte,boolean,char,Date,Serializable,String,BigInteger,BigDecimal)",23,51
"org.apache.openjpa.persistence.kernel.TestFieldRange2.allFieldSaveStateInternal(int,short,long,float,double,byte,boolean,char,Date,Serializable,String,BigInteger,BigDecimal)",53,301
org.apache.openjpa.persistence.enhance.identity.Page.getNumber(),0,0
org.apache.openjpa.persistence.enhance.identity.Page.setNumber(int),1,1
org.apache.openjpa.persistence.enhance.identity.Page.getBook(),1,3
org.apache.openjpa.persistence.enhance.identity.Page.setBook(Book),2,6
org.apache.openjpa.persistence.fields.TestEnumQueryConstructor.setUp(),15,25
org.apache.openjpa.persistence.fields.TestEnumQueryConstructor.testEnumQueryConstructor(),12,23
org.apache.openjpa.persistence.jdbc.query.domain.Game.getId(),0,0
org.apache.openjpa.persistence.jdbc.query.domain.Game.getName(),2,3
org.apache.openjpa.persistence.jdbc.query.domain.Game.setName(String),3,6
org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.TestMappedByKeyMaps(String),8,13
org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.testInverseKeyMapMapping(),24,78
org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.testJoinTableMapMapping(),25,77
org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.testInverseKeyMap(),6,14
org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.testInverseKeyLRSMap(),6,10
org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.testJoinTableMap(),6,14
org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.testJoinTableLRSMap(),6,10
"org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.mappedByMap(MappedByMapPC,boolean)",41,240
org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.queryMap(MappedByMapPC),27,81
"org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.setLRS(Class,boolean)",10,19
org.apache.openjpa.persistence.jdbc.meta.TestMappedByKeyMaps.unsetLRS(Class),11,17
org.apache.openjpa.persistence.PersistenceMetaDataFactory.setFieldOverride(boolean),5,13
org.apache.openjpa.persistence.PersistenceMetaDataFactory.getFieldOverride(),4,10
org.apache.openjpa.persistence.PersistenceMetaDataFactory.getAnnotationParser(),12,24
org.apache.openjpa.persistence.PersistenceMetaDataFactory.setAnnotationParser(AnnotationPersistenceMetaDataParser),10,26
org.apache.openjpa.persistence.PersistenceMetaDataFactory.newAnnotationParser(),9,17
org.apache.openjpa.persistence.PersistenceMetaDataFactory.newAnnotationSerializer(),8,17
org.apache.openjpa.persistence.PersistenceMetaDataFactory.getXMLParser(),23,82
org.apache.openjpa.persistence.PersistenceMetaDataFactory.resetXMLParser(),13,24
org.apache.openjpa.persistence.PersistenceMetaDataFactory.setXMLParser(XMLPersistenceMetaDataParser),9,26
org.apache.openjpa.persistence.PersistenceMetaDataFactory.newXMLParser(boolean),10,18
org.apache.openjpa.persistence.PersistenceMetaDataFactory.newXMLSerializer(),8,16
"org.apache.openjpa.persistence.PersistenceMetaDataFactory.load(Class<>,int,ClassLoader)",52,176
"org.apache.openjpa.persistence.PersistenceMetaDataFactory.parseXML(URL,Class<>,int,ClassLoader)",29,99
org.apache.openjpa.persistence.PersistenceMetaDataFactory.findXML(Class<>),13,24
"org.apache.openjpa.persistence.PersistenceMetaDataFactory.mapPersistentTypeNames(Object,String[])",26,97
"org.apache.openjpa.persistence.PersistenceMetaDataFactory.getQueryScope(String,ClassLoader)",22,108
"org.apache.openjpa.persistence.PersistenceMetaDataFactory.getResultSetMappingScope(String,ClassLoader)",24,75
"org.apache.openjpa.persistence.PersistenceMetaDataFactory.hasNamedQuery(String,NamedQuery)",6,13
"org.apache.openjpa.persistence.PersistenceMetaDataFactory.hasRSMapping(String,SqlResultSetMapping)",8,16
"org.apache.openjpa.persistence.PersistenceMetaDataFactory.hasNamedNativeQuery(String,NamedNativeQuery)",6,13
org.apache.openjpa.persistence.PersistenceMetaDataFactory.newMetaDataFilter(),11,24
org.apache.openjpa.persistence.PersistenceMetaDataFactory.validateStrategies(ClassMetaData),19,38
org.apache.openjpa.persistence.PersistenceMetaDataFactory.getDefaults(),4,5
org.apache.openjpa.persistence.PersistenceMetaDataFactory.newClassArgParser(),11,20
org.apache.openjpa.persistence.PersistenceMetaDataFactory.clear(),3,10
org.apache.openjpa.persistence.PersistenceMetaDataFactory.newParser(boolean),3,6
org.apache.openjpa.persistence.PersistenceMetaDataFactory.newSerializer(),2,4
"org.apache.openjpa.persistence.PersistenceMetaDataFactory.parse(MetaDataParser,Class[])",9,12
org.apache.openjpa.persistence.PersistenceMetaDataFactory.defaultSourceFile(ClassMetaData),5,8
"org.apache.openjpa.persistence.PersistenceMetaDataFactory.defaultSourceFile(QueryMetaData,Map)",10,29
"org.apache.openjpa.persistence.PersistenceMetaDataFactory.defaultSourceFile(SequenceMetaData,Map)",10,12
org.apache.openjpa.persistence.PersistenceMetaDataFactory.defaultXMLFile(),26,52
org.apache.openjpa.persistence.PersistenceMetaDataFactory.setConfiguration(Configuration),3,4
org.apache.openjpa.persistence.PersistenceMetaDataFactory.startConfiguration(),2,2
org.apache.openjpa.persistence.PersistenceMetaDataFactory.endConfiguration(),9,15
org.apache.openjpa.persistence.PersistenceMetaDataFactory.setInto(Options),6,12
org.apache.openjpa.persistence.PersistenceMetaDataFactory.getXMLAnnotationParser(),13,33
org.apache.openjpa.persistence.PersistenceMetaDataFactory.setXMLAnnotationParser(AnnotationPersistenceXMLMetaDataParser),11,33
org.apache.openjpa.persistence.PersistenceMetaDataFactory.newXMLAnnotationParser(),10,22
org.apache.openjpa.persistence.PersistenceMetaDataFactory.loadXMLMetaData(Class<>),9,18
org.apache.openjpa.persistence.PersistenceMetaDataFactory.getManagedClassName(String),6,15
org.apache.openjpa.persistence.PersistenceMetaDataFactory.getMetaModelClassName(String),7,15
org.apache.openjpa.persistence.PersistenceMetaDataFactory.isMetaClass(Class<>),3,3
org.apache.openjpa.persistence.PersistenceMetaDataFactory.getManagedClass(Class<>),5,5
org.apache.openjpa.persistence.jdbc.meta.TestRangeQuery.TestRangeQuery(String),7,11
org.apache.openjpa.persistence.jdbc.meta.TestRangeQuery.skipTest(),9,12
org.apache.openjpa.persistence.jdbc.meta.TestRangeQuery.setUp(),6,11
org.apache.openjpa.persistence.jdbc.meta.TestRangeQuery.testQueryRange(),37,82
org.apache.openjpa.persistence.jdbc.meta.TestRangeQuery.insertManyStringList(),17,31
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.getIntField(),1,1
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.setIntField(int),2,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.getEmbed(),2,3
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.setEmbed(ManagedInterfaceEmbed),3,5
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.getSelf(),3,3
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.setSelf(ManagedInterfaceAppId),5,5
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.getSetInteger(),2,3
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.setSetInteger(Set),3,5
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.getSetPC(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.setSetPC(Set),2,4
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.getSetI(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.setSetI(Set),2,4
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.getPC(),2,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.setPC(RuntimeTest1),3,3
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceAppId.unimplemented(),1,1
org.apache.openjpa.persistence.jdbc.order.BiOrderMappedByEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.order.BiOrderMappedByEntity.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.BiOrderMappedByEntity.getBo2mEntities(),3,4
org.apache.openjpa.persistence.jdbc.order.BiOrderMappedByEntity.setBo2mEntity(List<BiOrderEntity>),5,7
org.apache.openjpa.persistence.jdbc.order.BiOrderMappedByEntity.addBo2mEntity(BiOrderEntity),6,12
org.apache.openjpa.persistence.jdbc.order.BiOrderMappedByEntity.removeBo2mEntity(int),6,15
"org.apache.openjpa.persistence.jdbc.order.BiOrderMappedByEntity.insertBo2mEntity(int,BiOrderEntity)",8,14
org.apache.openjpa.persistence.jdbc.order.BiOrderMappedByEntity.equals(Object),6,13
org.apache.openjpa.persistence.inheritance.TestFindAbstractClass.setUp(),15,26
org.apache.openjpa.persistence.inheritance.TestFindAbstractClass.testEntityTypeInheritanceTypeJoined(),17,38
org.apache.openjpa.persistence.inheritance.TestFindAbstractClass.testFind(),11,17
org.apache.openjpa.persistence.inheritance.TestFindAbstractClass.main(String[]),6,7
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrcField.DtaSrcField(),3,3
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrcField.getId(),1,1
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrcField.setId(String),2,2
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrcField.getDatasource(),5,5
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrcField.setDataSourceId(DtaSrc),6,9
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrcField.getName(),2,3
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrcField.setName(String),3,6
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrcField.hashCode(),4,10
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrcField.equals(Object),6,17
org.apache.openjpa.persistence.inheritance.AbstractBase.getId(),1,1
org.apache.openjpa.persistence.inheritance.AbstractBase.setId(String),2,2
org.apache.openjpa.persistence.jdbc.sqlcache.Book.Book(),3,3
org.apache.openjpa.persistence.jdbc.sqlcache.Book.Book(String),4,6
org.apache.openjpa.persistence.jdbc.sqlcache.Book.getTitle(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.Book.setTitle(String),3,6
org.apache.openjpa.persistence.jdbc.sqlcache.Book.getAuthors(),3,4
org.apache.openjpa.persistence.jdbc.sqlcache.Book.addAuthor(Author),6,12
org.apache.openjpa.persistence.jdbc.sqlcache.Book.getToken(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.Book.setToken(String),3,4
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCLeafB2.getLeafB2Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCLeafB2.setLeafB2Data(String),4,10
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee2.Employee2(),1,1
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee2.Employee2(String,Date)",5,9
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee2.getEmpPK(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee2.setEmpPK(EmployeePK2),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee2.getDepartment(),1,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Employee2.setDepartment(Department2),2,6
org.apache.openjpa.persistence.jdbc.strategy.MappedEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.strategy.MappedEntity.getValue(),1,2
org.apache.openjpa.persistence.jdbc.strategy.MappedEntity.setValue(long),2,5
org.apache.openjpa.persistence.meta.common.apps.MetaTest3.toMap(Object),6,7
org.apache.openjpa.persistence.meta.common.apps.MetaTest3.fromMap(Map),6,7
org.apache.openjpa.persistence.kernel.TestBigDecimals.TestBigDecimals(),4,6
org.apache.openjpa.persistence.kernel.TestBigDecimals.TestBigDecimals(String),4,5
org.apache.openjpa.persistence.kernel.TestBigDecimals.testBigDecimalDataIntegrity(),18,22
org.apache.openjpa.persistence.kernel.TestBigDecimals.bigDecimalTest(BigDecimal),32,72
org.apache.openjpa.persistence.jpql.entities.OrderedManyToManyEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.entities.OrderedManyToManyEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.entities.OrderedManyToManyEntity.getEntities(),4,5
org.apache.openjpa.persistence.jpql.entities.OrderedManyToManyEntity.setEntities(List<INameEntity>),5,8
org.apache.openjpa.persistence.jpql.entities.OrderedManyToManyEntity.addEntity(INameEntity),6,14
org.apache.openjpa.persistence.jpql.entities.OrderedManyToManyEntity.removeEntity(int),7,17
"org.apache.openjpa.persistence.jpql.entities.OrderedManyToManyEntity.insertEntity(int,INameEntity)",8,16
org.apache.openjpa.persistence.jpql.entities.OrderedManyToManyEntity.toString(),3,4
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCLeafD1.getLeafD1Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.intdiscriminator.PIdSTIDMSCLeafD1.setLeafD1Data(String),4,10
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafD1.getLeafD1Data(),3,3
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafD1.setLeafD1Data(String),4,6
org.apache.openjpa.persistence.models.company.basic.Customer.setOrders(Collection<>),3,5
org.apache.openjpa.persistence.models.company.basic.Customer.getOrders(),2,2
org.apache.openjpa.persistence.models.company.basic.Customer.setShippingAddress(IAddress),3,11
org.apache.openjpa.persistence.models.company.basic.Customer.getShippingAddress(),2,5
org.apache.openjpa.persistence.models.company.basic.Customer.setBillingAddress(IAddress),3,11
org.apache.openjpa.persistence.models.company.basic.Customer.getBillingAddress(),2,5
org.apache.openjpa.persistence.kernel.TestEJBTransactionalClass.TestEJBTransactionalClass(String),6,7
org.apache.openjpa.persistence.kernel.TestEJBTransactionalClass.testTransactional(),11,24
org.apache.openjpa.persistence.proxy.delayed.IEmployee.setEmpName(String),4,6
org.apache.openjpa.persistence.proxy.delayed.IEmployee.getEmpName(),3,3
org.apache.openjpa.persistence.proxy.delayed.IEmployee.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.IEmployee.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.IEmployee.setDept(IDepartment),3,4
org.apache.openjpa.persistence.proxy.delayed.IEmployee.getDept(),2,2
org.apache.openjpa.persistence.kernel.TestIndirectRecursion.setUp(),14,22
org.apache.openjpa.persistence.kernel.TestIndirectRecursion.testFetch(),41,92
"org.apache.openjpa.persistence.kernel.TestIndirectRecursion.assertMatrixEqual(byte[][],byte[][])",9,11
"org.apache.openjpa.persistence.kernel.TestIndirectRecursion.fillTransitionMatrix(byte[][],Set<State>,State)",11,30
"org.apache.openjpa.persistence.kernel.TestIndirectRecursion.fillTransitionMatrix(byte[][],Transition)",4,8
org.apache.openjpa.persistence.kernel.TestIndirectRecursion.getIndex(State),5,5
"org.apache.openjpa.persistence.kernel.TestIndirectRecursion.newTransition(State,State)",7,16
"org.apache.openjpa.persistence.kernel.TestIndirectRecursion.findOutgoingState(String,State)",8,19
"org.apache.openjpa.persistence.kernel.TestIndirectRecursion.findIncomingState(String,State)",8,19
"org.apache.openjpa.persistence.kernel.TestIndirectRecursion.assertIncomingStates(State,State)",6,13
"org.apache.openjpa.persistence.kernel.TestIndirectRecursion.assertOutgoingStates(State,State)",6,13
org.apache.openjpa.persistence.jdbc.meta.TestEagerDistinct.TestEagerDistinct(String),7,11
org.apache.openjpa.persistence.jdbc.meta.TestEagerDistinct.skipTest(),9,12
org.apache.openjpa.persistence.jdbc.meta.TestEagerDistinct.setUpTestCase(),25,67
org.apache.openjpa.persistence.jdbc.meta.TestEagerDistinct.getPM(),9,18
org.apache.openjpa.persistence.jdbc.meta.TestEagerDistinct.testEagerParallelWithNonDistinctQuery(),6,10
org.apache.openjpa.persistence.jdbc.meta.TestEagerDistinct.testPagingEagerParallelWithNonDistinctQuery(),7,11
org.apache.openjpa.persistence.jdbc.meta.TestEagerDistinct.eagerParallelWithNonDistinctQuery(int),27,54
"org.apache.openjpa.persistence.jdbc.meta.TestEagerDistinct.assertHelperPC2(String,HelperPC2)",7,26
org.apache.openjpa.persistence.jdbc.meta.TestEagerDistinct.testEagerParallelWithDistinctQuery(),6,10
org.apache.openjpa.persistence.jdbc.meta.TestEagerDistinct.testPagingEagerParallelWithDistinctQuery(),7,11
org.apache.openjpa.persistence.jdbc.meta.TestEagerDistinct.eagerParallelWithDistinctQuery(int),32,58
org.apache.openjpa.persistence.jdbc.meta.TestEagerDistinct.testNestedEagerParallel(),5,8
org.apache.openjpa.persistence.jdbc.meta.TestEagerDistinct.testPagingNestedEagerParallel(),6,9
org.apache.openjpa.persistence.jdbc.meta.TestEagerDistinct.nestedEagerParallel(int),40,184
org.apache.openjpa.persistence.kernel.common.apps.AppIdSuper.setSuperField(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.AppIdSuper.getSuperField(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AppIdSuper.ID.ID(),0,0
org.apache.openjpa.persistence.kernel.common.apps.AppIdSuper.ID.ID(String),2,4
org.apache.openjpa.persistence.kernel.common.apps.AppIdSuper.ID.hashCode(),6,6
org.apache.openjpa.persistence.kernel.common.apps.AppIdSuper.ID.equals(Object),2,2
org.apache.openjpa.persistence.kernel.common.apps.AppIdSuper.ID.toString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AppIdSuper.ID.fromString(String),3,9
org.apache.openjpa.persistence.jdbc.query.TestEJBQLSelectNPlusOne.TestEJBQLSelectNPlusOne(String),6,7
org.apache.openjpa.persistence.jdbc.query.TestEJBQLSelectNPlusOne.setUp(),11,15
org.apache.openjpa.persistence.jdbc.query.TestEJBQLSelectNPlusOne.testSimpleEJBQLQuery(),23,32
org.apache.openjpa.persistence.inheritance.entity.AbstractClass.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entity.AbstractClass.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.AbstractClass.setVersion(int),2,3
org.apache.openjpa.persistence.inheritance.entity.AbstractClass.getVersion(),1,1
org.apache.openjpa.persistence.inheritance.entity.AbstractClass.setName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.AbstractClass.getName(),2,3
org.apache.openjpa.persistence.inheritance.entity.AbstractClass.toString(),2,4
org.apache.openjpa.persistence.kernel.TestSuppressBatchOLE.setUp(),19,43
org.apache.openjpa.persistence.kernel.TestSuppressBatchOLE.test(),23,59
org.apache.openjpa.persistence.kernel.TestSuppressBatchOLE.createEntity(),4,20
org.apache.openjpa.persistence.kernel.TestRetainValuesInOptimistic.TestRetainValuesInOptimistic(),6,10
org.apache.openjpa.persistence.kernel.TestRetainValuesInOptimistic.TestRetainValuesInOptimistic(String),5,7
org.apache.openjpa.persistence.kernel.TestRetainValuesInOptimistic.setUp(),13,18
org.apache.openjpa.persistence.kernel.TestRetainValuesInOptimistic.testRetain(),4,6
org.apache.openjpa.persistence.kernel.TestRetainValuesInOptimistic.testNotRetain(),4,6
org.apache.openjpa.persistence.kernel.TestRetainValuesInOptimistic.clearTest(boolean),30,85
org.apache.openjpa.persistence.kernel.TestRetainValuesInOptimistic.optLockTest(boolean),24,69
org.apache.openjpa.persistence.kernel.TestRetainValuesInOptimistic.getPM(boolean),15,33
org.apache.openjpa.persistence.jdbc.query.cache.LineItem.LineItem(),2,2
"org.apache.openjpa.persistence.jdbc.query.cache.LineItem.LineItem(String,int)",4,6
org.apache.openjpa.persistence.jdbc.query.cache.LineItem.getId(),1,1
org.apache.openjpa.persistence.jdbc.query.cache.LineItem.setId(String),2,2
org.apache.openjpa.persistence.jdbc.query.cache.LineItem.getQuantity(),1,2
org.apache.openjpa.persistence.jdbc.query.cache.LineItem.setQuantity(int),2,5
org.apache.openjpa.persistence.jdbc.query.cache.LineItem.getInvoice(),1,3
org.apache.openjpa.persistence.jdbc.query.cache.LineItem.setInvoice(Invoice),2,6
org.apache.openjpa.persistence.inheritance.entity.MidClass3.setMidClass3Name(String),4,10
org.apache.openjpa.persistence.inheritance.entity.MidClass3.getMidClass2Name(),3,5
org.apache.openjpa.persistence.inheritance.entity.MidClass3.toString(),3,7
org.apache.openjpa.persistence.jdbc.meta.TestMetaDataValueIndicator.TestMetaDataValueIndicator(String),7,8
org.apache.openjpa.persistence.jdbc.meta.TestMetaDataValueIndicator.TestMetaDataValueIndicator(),7,12
org.apache.openjpa.persistence.jdbc.meta.TestMetaDataValueIndicator.setUp(),15,40
org.apache.openjpa.persistence.jdbc.meta.TestMetaDataValueIndicator.tearDown(),6,8
org.apache.openjpa.persistence.jdbc.meta.TestMetaDataValueIndicator.testMetaData(),10,18
org.apache.openjpa.persistence.jdbc.meta.TestMetaDataValueIndicator.testOperations(),31,87
org.apache.openjpa.persistence.jdbc.meta.TestMetaDataValueIndicator.countExtent(Extent),4,11
org.apache.openjpa.persistence.jdbc.query.sub.TestSubQuery.setUp(),8,12
org.apache.openjpa.persistence.jdbc.query.sub.TestSubQuery.populate(),18,117
org.apache.openjpa.persistence.jdbc.query.sub.TestSubQuery.test(),18,63
org.apache.openjpa.persistence.query.common.apps.ComplexB.ComplexB(),1,1
"org.apache.openjpa.persistence.query.common.apps.ComplexB.ComplexB(String,int,Date,ComplexC[],ComplexA)",6,14
org.apache.openjpa.persistence.query.common.apps.ComplexB.setStringB(String),2,6
org.apache.openjpa.persistence.query.common.apps.ComplexB.getStringB(),1,3
org.apache.openjpa.persistence.query.common.apps.ComplexB.setIntB(int),1,1
org.apache.openjpa.persistence.query.common.apps.ComplexB.getIntB(),0,0
org.apache.openjpa.persistence.query.common.apps.ComplexB.setDateB(Date),2,6
org.apache.openjpa.persistence.query.common.apps.ComplexB.getDateB(),1,3
org.apache.openjpa.persistence.query.common.apps.ComplexB.setCs(Collection),2,2
org.apache.openjpa.persistence.query.common.apps.ComplexB.getCs(),1,1
org.apache.openjpa.persistence.query.common.apps.ComplexB.setA(ComplexA),2,2
org.apache.openjpa.persistence.query.common.apps.ComplexB.getA(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionB.AttachVersionB(),2,2
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionB.AttachVersionB(int),2,2
"org.apache.openjpa.persistence.kernel.common.apps.AttachVersionB.AttachVersionB(int,String,String)",4,6
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionB.getStringField2(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionB.setStringField2(String),3,6
org.apache.openjpa.persistence.query.common.apps.SimpleAppIdPC.getPk(),1,1
org.apache.openjpa.persistence.query.common.apps.SimpleAppIdPC.setPk(String),2,2
org.apache.openjpa.persistence.query.common.apps.SimpleAppIdPC.getIntField(),1,2
org.apache.openjpa.persistence.query.common.apps.SimpleAppIdPC.setIntField(int),2,5
org.apache.openjpa.persistence.merge.TestLazyFields.setUp(),4,5
org.apache.openjpa.persistence.merge.TestLazyFields.testMergeOfLazyFields(),39,71
org.apache.openjpa.persistence.kernel.TestPMMemory.TestPMMemory(),4,6
org.apache.openjpa.persistence.kernel.TestPMMemory.TestPMMemory(String),3,3
org.apache.openjpa.persistence.kernel.TestPMMemory.skipTest(),2,2
org.apache.openjpa.persistence.kernel.TestPMMemory.main(String[]),11,19
org.apache.openjpa.persistence.kernel.TestPMMemory.setUp(),7,14
"org.apache.openjpa.persistence.kernel.TestPMMemory.deleteAllStaged(OpenJPAEntityManager,Class)",57,97
org.apache.openjpa.persistence.kernel.TestPMMemory.reportMemory(),12,27
org.apache.openjpa.persistence.kernel.TestPMMemory.reportMemory(String),10,22
org.apache.openjpa.persistence.kernel.TestPMMemory.pause(double),6,11
org.apache.openjpa.persistence.kernel.TestPMMemory.testMemoryUse(),46,122
org.apache.openjpa.persistence.kernel.TestPMMemory.testMemoryUse().$1.afterCommit(TransactionEvent),14,20
org.apache.openjpa.persistence.kernel.TestPMMemory.grabAllMemory(),11,22
"org.apache.openjpa.persistence.kernel.TestPMMemory.performAddsModifiesDeletes(OpenJPAEntityManager,int,int)",30,58
"org.apache.openjpa.persistence.kernel.TestPMMemory.createDistinctFactory(Class,String)",26,60
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.ExternalValues(),2,2
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.ExternalValues(int),2,2
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.getBooleanToShort(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.setBooleanToShort(boolean),1,1
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.getByteToDouble(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.setByteToDouble(byte),1,1
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.getIntToFloat(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.setIntToFloat(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.getLongToChar(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.setLongToChar(long),1,1
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.getShortToString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.setShortToString(short),2,3
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.getDoubleToByte(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.setDoubleToByte(double),1,1
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.getFloatToBoolean(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.setFloatToBoolean(float),1,1
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.getCharToInt(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.setCharToInt(char),1,1
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.getStringToLong(),1,3
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.setStringToLong(String),2,4
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ExternalValues.setId(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.InverseB.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.InverseB.setStringField(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.InverseB.getOneOne(),1,1
org.apache.openjpa.persistence.kernel.common.apps.InverseB.setOneOne(InverseB),2,2
org.apache.openjpa.persistence.kernel.common.apps.InverseB.getManyMany(),1,1
org.apache.openjpa.persistence.jdbc.update.Parent.getId(),0,0
org.apache.openjpa.persistence.jdbc.update.Parent.getName(),2,3
org.apache.openjpa.persistence.jdbc.update.Parent.setName(String),3,6
org.apache.openjpa.persistence.jdbc.update.Parent.getChildren(),3,4
org.apache.openjpa.persistence.jdbc.update.Parent.newChild(String),21,38
org.apache.openjpa.persistence.jdbc.update.Parent.removeChild(Child),3,8
org.apache.openjpa.persistence.jdbc.update.Parent.add(Child),16,24
org.apache.openjpa.persistence.jdbc.meta.tableperclass.TestUnionPlaceholderTypes.TestUnionPlaceholderTypes(String),8,13
org.apache.openjpa.persistence.jdbc.meta.tableperclass.TestUnionPlaceholderTypes.setUpTestCase(),13,21
org.apache.openjpa.persistence.jdbc.meta.tableperclass.TestUnionPlaceholderTypes.testUnion(),24,137
org.apache.openjpa.persistence.jdbc.query.cache.Employee.getSsn(),2,3
org.apache.openjpa.persistence.jdbc.query.cache.Employee.setSsn(String),3,6
org.apache.openjpa.persistence.jdbc.query.cache.Employee.getDept(),2,3
org.apache.openjpa.persistence.jdbc.query.cache.Employee.setDept(Department),3,6
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned3.setPK(Long),1,1
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned3.getPK(),0,0
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned3.Id.Id(),0,0
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned3.Id.Id(String),3,4
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned3.Id.hashCode(),5,6
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned3.Id.toString(),1,2
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned3.Id.equals(Object),2,2
org.apache.openjpa.persistence.jdbc.meta.vertical.TestJoinSubclasses.TestJoinSubclasses(String),7,11
org.apache.openjpa.persistence.jdbc.meta.vertical.TestJoinSubclasses.skipTest(),10,15
org.apache.openjpa.persistence.jdbc.meta.vertical.TestJoinSubclasses.setUpTestCase(),25,101
org.apache.openjpa.persistence.jdbc.meta.vertical.TestJoinSubclasses.testBaseExtentNoSubs(),21,51
org.apache.openjpa.persistence.jdbc.meta.vertical.TestJoinSubclasses.testBaseExtentWithSubs(),29,99
org.apache.openjpa.persistence.jdbc.meta.vertical.TestJoinSubclasses.testLeafExtent(),24,62
org.apache.openjpa.persistence.jdbc.meta.vertical.TestJoinSubclasses.testBaseGetById(),19,66
org.apache.openjpa.persistence.jdbc.meta.vertical.TestJoinSubclasses.testLeafGetById(),23,92
org.apache.openjpa.persistence.jdbc.common.apps.InverseKeyMapPC.getHelpers(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.InverseKeyMapPC.setHelpers(Map),3,6
org.apache.openjpa.persistence.jdbc.common.apps.InverseKeyMapPC.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.InverseKeyMapPC.setName(String),3,6
org.apache.openjpa.persistence.jdbc.order.ColDefTestElement.ColDefTestElement(),4,4
org.apache.openjpa.persistence.jdbc.order.ColDefTestElement.ColDefTestElement(String),6,8
org.apache.openjpa.persistence.jdbc.order.ColDefTestElement.setName(String),3,6
org.apache.openjpa.persistence.jdbc.order.ColDefTestElement.getName(),2,3
org.apache.openjpa.persistence.jdbc.order.ColDefTestElement.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.ColDefTestElement.getId(),0,0
org.apache.openjpa.persistence.jdbc.order.ColDefTestElement.equals(Object),10,25
org.apache.openjpa.persistence.jdbc.common.apps.OpOrderPCSub.getSub(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.OpOrderPCSub.setSub(String),3,6
org.apache.openjpa.persistence.datacache.MapHolder.getId(),0,0
org.apache.openjpa.persistence.datacache.MapHolder.setId(int),1,1
org.apache.openjpa.persistence.datacache.MapHolder.getVersion(),1,2
org.apache.openjpa.persistence.datacache.MapHolder.setVersion(int),2,5
org.apache.openjpa.persistence.datacache.MapHolder.getEmbeddableMap(),2,9
"org.apache.openjpa.persistence.datacache.MapHolder.setEmbeddableMap(Map<MapEmbeddable,MapEmbeddable>)",3,14
org.apache.openjpa.persistence.datacache.MapHolder.toString(),5,10
org.apache.openjpa.persistence.jdbc.common.apps.StateImagePC2.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.StateImagePC2.setStringField(String),3,10
org.apache.openjpa.persistence.detach.TestDetachStateCascade.setUp(),22,63
org.apache.openjpa.persistence.detach.TestDetachStateCascade.create(int),5,34
org.apache.openjpa.persistence.detach.TestDetachStateCascade.testLoaded(),25,67
org.apache.openjpa.persistence.detach.TestDetachStateCascade.testDetachStateAll(),24,51
org.apache.openjpa.persistence.detach.TestDetachStateCascade.testDetachStateFetchGroup(),29,74
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubD.setPkd(double),2,5
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubD.getPkd(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubD.setStringFieldD(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubD.getStringFieldD(),2,5
org.apache.openjpa.persistence.entity.EntityA.EntityA(),1,1
org.apache.openjpa.persistence.entity.EntityA.EntityA(String),3,5
org.apache.openjpa.persistence.entity.EntityA.getId(),0,0
org.apache.openjpa.persistence.entity.EntityA.getName(),2,3
org.apache.openjpa.persistence.entity.EntityA.setName(String),3,6
org.apache.openjpa.persistence.entity.EntityA.getBs(),3,3
org.apache.openjpa.persistence.external.EntityA.EntityA(),1,1
org.apache.openjpa.persistence.external.EntityA.getId(),0,0
org.apache.openjpa.persistence.external.EntityA.getS1(),1,1
org.apache.openjpa.persistence.external.EntityA.setS1(String),2,2
org.apache.openjpa.persistence.external.EntityA.getS2(),1,1
org.apache.openjpa.persistence.external.EntityA.setS2(String),2,2
org.apache.openjpa.persistence.external.EntityA.getUseStreaming(),1,2
org.apache.openjpa.persistence.external.EntityA.setUseStreaming(boolean),2,5
org.apache.openjpa.persistence.jdbc.query.TestNativeQueryProcedures.setUp(),34,83
org.apache.openjpa.persistence.jdbc.query.TestNativeQueryProcedures.tearDown(),20,45
org.apache.openjpa.persistence.jdbc.query.TestNativeQueryProcedures.testNoReturnNoParamProcedure(),49,152
org.apache.openjpa.persistence.jdbc.query.TestNativeQueryProcedures.testNoReturnMultiParamProcedure(),52,175
org.apache.openjpa.persistence.jdbc.query.TestNativeQueryProcedures.testOneReturnNoParamProcedure(),46,158
org.apache.openjpa.persistence.jdbc.query.TestNativeQueryProcedures.testOneReturnMultiParamProcedure(),50,201
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.AnnoTest2(),2,2
"org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.AnnoTest2(long,String)",3,3
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.setPk1(long),2,3
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.getPk1(),0,0
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.setPk2(String),3,4
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.getPk2(),1,1
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.getVersion(),2,3
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.setBasic(String),3,4
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.getBasic(),2,3
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.setInverseOneOne(AnnoTest1),4,5
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.getInverseOneOne(),3,4
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.setOneManyOwner(AnnoTest1),4,5
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.getOneManyOwner(),3,4
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.getManyMany(),1,1
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.Oid.Oid(),1,1
"org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.Oid.Oid(long,String)",2,2
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.Oid.Oid(String),7,15
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.Oid.equals(Object),3,6
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.Oid.hashCode(),2,4
org.apache.openjpa.persistence.jdbc.annotations.AnnoTest2.Oid.toString(),1,2
org.apache.openjpa.persistence.hugariannotation.TestHungarianNotationRemoval.setUp(),12,17
org.apache.openjpa.persistence.hugariannotation.TestHungarianNotationRemoval.testSimpleColumnNameTruncation(),32,52
org.apache.openjpa.persistence.hugariannotation.TestHungarianNotationRemoval.testCustomNameNotAltered(),20,25
org.apache.openjpa.persistence.delimited.identifiers.Chevrolet2.Chevrolet2(),1,1
org.apache.openjpa.persistence.delimited.identifiers.Chevrolet2.Chevrolet2(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.Pontiac.Pontiac(),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.Pontiac.Pontiac(int),1,1
org.apache.openjpa.persistence.distinctjoin.Course.getId(),0,0
org.apache.openjpa.persistence.distinctjoin.Course.getCourseNumber(),2,3
org.apache.openjpa.persistence.distinctjoin.Course.setCourseNumber(String),3,6
org.apache.openjpa.persistence.distinctjoin.Course.getObjective(),3,4
org.apache.openjpa.persistence.distinctjoin.Course.setObjective(LocalizedText),4,7
org.apache.openjpa.persistence.distinctjoin.Course.getTitle(),3,4
org.apache.openjpa.persistence.distinctjoin.Course.setTitle(LocalizedText),4,7
org.apache.openjpa.persistence.distinctjoin.Course.getLobColumn(),3,5
org.apache.openjpa.persistence.distinctjoin.Course.setLobColumn(String),4,10
org.apache.openjpa.persistence.distinctjoin.Course.getOptlock(),2,3
org.apache.openjpa.persistence.distinctjoin.Course.setOptlock(Integer),3,6
org.apache.openjpa.persistence.distinctjoin.Course.getLecturers(),3,4
org.apache.openjpa.persistence.distinctjoin.Course.setLecturers(List<Lecturer>),4,7
org.apache.openjpa.persistence.distinctjoin.Course.addLecturer(Lecturer),6,16
org.apache.openjpa.persistence.distinctjoin.Course.getNormalAttribute(),3,5
org.apache.openjpa.persistence.distinctjoin.Course.setNormalAttribute(String),4,10
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCMappedSuperclass.getMappedSuperclassData(),4,7
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCMappedSuperclass.setMappedSuperclassData(String),5,14
org.apache.openjpa.persistence.derivedid.EDSQLDateID.EDSQLDateID(),2,2
org.apache.openjpa.persistence.derivedid.EDSQLDateID.EDSQLDateID(ESQLDateID),7,12
org.apache.openjpa.persistence.derivedid.EDSQLDateID.getRid(),3,4
org.apache.openjpa.persistence.derivedid.EDSQLDateID.setRid(ESQLDateID),4,7
org.apache.openjpa.persistence.derivedid.EDSQLDateID.getName(),2,3
org.apache.openjpa.persistence.derivedid.EDSQLDateID.setName(String),3,6
org.apache.openjpa.persistence.access.EmbedFieldAccess.getFirstName(),2,3
org.apache.openjpa.persistence.access.EmbedFieldAccess.setFirstName(String),4,6
org.apache.openjpa.persistence.access.EmbedFieldAccess.getLastName(),2,3
org.apache.openjpa.persistence.access.EmbedFieldAccess.setLastName(String),4,6
org.apache.openjpa.persistence.access.EmbedFieldAccess.equals(Object),7,20
org.apache.openjpa.persistence.detach.Entity8.Entity8(),1,1
"org.apache.openjpa.persistence.detach.Entity8.Entity8(long,String)",3,5
org.apache.openjpa.persistence.detach.Entity8.getId(),0,0
org.apache.openjpa.persistence.detach.Entity8.setId(long),1,1
org.apache.openjpa.persistence.detach.Entity8.getName(),2,3
org.apache.openjpa.persistence.detach.Entity8.setName(String),3,6
org.apache.openjpa.persistence.detach.Entity8.getE9(),1,1
org.apache.openjpa.persistence.detach.Entity8.setE9(Entity9),2,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatD.setStringD(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatD.getStringD(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatD.setIntD(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatD.getIntD(),0,0
org.apache.openjpa.persistence.embed.Embed_EmbedXml.getIntVal1(),1,2
org.apache.openjpa.persistence.embed.Embed_EmbedXml.setIntVal1(int),2,5
org.apache.openjpa.persistence.embed.Embed_EmbedXml.getIntVal2(),1,2
org.apache.openjpa.persistence.embed.Embed_EmbedXml.setIntVal2(int),2,5
org.apache.openjpa.persistence.embed.Embed_EmbedXml.getIntVal3(),1,2
org.apache.openjpa.persistence.embed.Embed_EmbedXml.setIntVal3(int),2,5
org.apache.openjpa.persistence.embed.Embed_EmbedXml.getEmbed(),2,4
org.apache.openjpa.persistence.embed.Embed_EmbedXml.setEmbed(EmbedXml),3,7
org.apache.openjpa.persistence.jdbc.common.apps.JoinSubclassBaseSubFlat.getBaseSubFlatField(),4,8
org.apache.openjpa.persistence.jdbc.common.apps.JoinSubclassBaseSubFlat.setBaseSubFlatField(int),5,17
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_Embed.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_Embed.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_Embed.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_Embed.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_Embed.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_Embed.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_Embed.getEmbeds(),3,5
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_Embed.setEmbeds(List<Embed_Embed>),4,8
org.apache.openjpa.persistence.embed.EntityA_Coll_Embed_Embed.addEmbed(Embed_Embed),3,8
org.apache.openjpa.persistence.jdbc.common.apps.MultiB.setBString(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.MultiB.getBString(),1,3
org.apache.openjpa.persistence.access.TestDefaultAccess.setUp(),7,8
org.apache.openjpa.persistence.access.TestDefaultAccess.testDefaultMappedSuperclassAccess(),27,40
org.apache.openjpa.persistence.access.TestDefaultAccess.testEMDefaultFieldAccess(),22,54
org.apache.openjpa.persistence.access.TestDefaultAccess.testEMDefaultPropertyAccess(),22,54
org.apache.openjpa.persistence.access.TestDefaultAccess.testPUDefaultFieldAccess(),24,55
org.apache.openjpa.persistence.access.TestDefaultAccess.testPUDefaultPropertyAccess(),24,55
org.apache.openjpa.persistence.access.TestDefaultAccess.verifyDefaultFieldAccess(OpenJPAEntityManagerSPI),43,186
org.apache.openjpa.persistence.access.TestDefaultAccess.verifyDefaultPropertyAccess(OpenJPAEntityManagerSPI),43,179
org.apache.openjpa.persistence.jdbc.common.apps.TransactionalClassPC.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.TransactionalClassPC.setIntField(int),2,5
org.apache.openjpa.persistence.annotations.PColl_EmbedB.getName(),2,3
org.apache.openjpa.persistence.annotations.PColl_EmbedB.setName(String),3,6
org.apache.openjpa.persistence.annotations.PColl_EmbedB.getM2oC(),2,2
org.apache.openjpa.persistence.annotations.PColl_EmbedB.setM2oC(PColl_EntityC),3,3
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdClass.getPk1(),0,0
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdClass.setPk1(long),1,1
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdClass.getPk2(),0,0
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdClass.setPk2(long),1,1
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdClass.getPk3(),0,0
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdClass.setPk3(long),1,1
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdClass.toString(),1,2
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdClass.hashCode(),5,5
org.apache.openjpa.persistence.jdbc.annotations.EmbeddedIdClass.equals(Object),3,5
org.apache.openjpa.persistence.embed.Embed_Embed_ToMany.getIntVal1(),1,2
org.apache.openjpa.persistence.embed.Embed_Embed_ToMany.setIntVal1(int),2,5
org.apache.openjpa.persistence.embed.Embed_Embed_ToMany.getIntVal2(),1,2
org.apache.openjpa.persistence.embed.Embed_Embed_ToMany.setIntVal2(int),2,5
org.apache.openjpa.persistence.embed.Embed_Embed_ToMany.getIntVal3(),1,2
org.apache.openjpa.persistence.embed.Embed_Embed_ToMany.setIntVal3(int),2,5
org.apache.openjpa.persistence.embed.Embed_Embed_ToMany.getEmbed(),1,3
org.apache.openjpa.persistence.embed.Embed_Embed_ToMany.setEmbed(Embed_ToMany),2,6
org.apache.openjpa.persistence.jdbc.annotations.TestMultiColumnVersionXML.setUp(),1,2
org.apache.openjpa.persistence.jdbc.annotations.TestMultiColumnVersionXML.getPersistenceUnitName(),7,7
org.apache.openjpa.persistence.jdbc.common.apps.PostAttachCallback.jdoPostAttach(Object),13,19
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPC2.ByteArrayPKPC2(),2,2
"org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPC2.ByteArrayPKPC2(byte[],String)",4,7
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPC2.getSubfield(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.ByteArrayPKPC2.setSubfield(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.UnidirectionalOneToOneOwner.getMarker(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.UnidirectionalOneToOneOwner.setMarker(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.UnidirectionalOneToOneOwner.getOwned(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.UnidirectionalOneToOneOwner.setOwned(UnidirectionalOneToOneOwned),3,7
org.apache.openjpa.persistence.jdbc.common.apps.UnidirectionalOneToOneOwner.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.UnidirectionalOneToOneOwner.getVersion(),1,2
org.apache.openjpa.persistence.kernel.common.apps.MapElementIntf.getElementData(),3,3
org.apache.openjpa.persistence.jpql.clauses.TestEJBClauses.TestEJBClauses(String),6,7
org.apache.openjpa.persistence.jpql.clauses.TestEJBClauses.setUp(),30,78
org.apache.openjpa.persistence.jpql.clauses.TestEJBClauses.testFromClause1(),15,23
org.apache.openjpa.persistence.jpql.clauses.TestEJBClauses.testFromClause2(),18,26
org.apache.openjpa.persistence.jpql.clauses.TestEJBClauses.testFromClause3(),19,30
org.apache.openjpa.persistence.jpql.clauses.TestEJBClauses.testWhereClause1(),18,24
org.apache.openjpa.persistence.jpql.clauses.TestEJBClauses.testWhereClause2(),22,30
org.apache.openjpa.persistence.jpql.clauses.TestEJBClauses.testClauseRangeVar(),21,34
org.apache.openjpa.persistence.jpql.clauses.TestEJBClauses.testClausePathExpr(),33,46
org.apache.openjpa.persistence.jpql.clauses.TestEJBClauses.testClausePathExpr2(),20,24
org.apache.openjpa.persistence.jpql.clauses.TestEJBClauses.testCollMemberDecl(),24,30
org.apache.openjpa.persistence.jdbc.version.model.TimestampVersion.getId(),0,0
org.apache.openjpa.persistence.jdbc.version.model.TimestampVersion.setId(int),1,1
org.apache.openjpa.persistence.jdbc.version.model.TimestampVersion.getVersion(),2,3
org.apache.openjpa.persistence.jdbc.version.model.TimestampVersion.setVersion(Timestamp),3,6
org.apache.openjpa.persistence.jdbc.query.cache.PartComposite.PartComposite(),1,1
"org.apache.openjpa.persistence.jdbc.query.cache.PartComposite.PartComposite(int,String,double,double)",11,21
"org.apache.openjpa.persistence.jdbc.query.cache.PartComposite.addSubPart(EntityManager,int,Part)",9,12
org.apache.openjpa.persistence.jdbc.query.cache.PartComposite.getAssemblyCost(),2,4
org.apache.openjpa.persistence.jdbc.query.cache.PartComposite.setAssemblyCost(double),3,9
org.apache.openjpa.persistence.jdbc.query.cache.PartComposite.getMassIncrement(),2,4
org.apache.openjpa.persistence.jdbc.query.cache.PartComposite.setMassIncrement(double),3,9
org.apache.openjpa.persistence.jdbc.query.cache.PartComposite.toString(),8,14
org.apache.openjpa.persistence.jdbc.query.cache.PartComposite.getPartsUsed(),2,2
org.apache.openjpa.persistence.jdbc.query.cache.PartComposite.setPartsUsed(Collection<Usage>),3,3
org.apache.openjpa.persistence.jdbc.query.cache.PartComposite.getAssemblyTime(),2,4
org.apache.openjpa.persistence.jdbc.query.cache.PartComposite.setAssemblyTime(double),3,9
org.apache.openjpa.persistence.jdbc.mapping.bidi.Person.getSsn(),1,2
org.apache.openjpa.persistence.jdbc.mapping.bidi.Person.getAddresses(),3,4
org.apache.openjpa.persistence.jdbc.mapping.bidi.Person.addAddress(Address),9,18
org.apache.openjpa.persistence.jdbc.mapping.bidi.Person.getName(),2,3
org.apache.openjpa.persistence.jdbc.mapping.bidi.Person.setName(String),3,6
org.apache.openjpa.persistence.jdbc.mapping.bidi.Person.setSsn(long),2,5
org.apache.openjpa.persistence.jdbc.mapping.TestNativeQueries.setUp(),12,26
org.apache.openjpa.persistence.jdbc.mapping.TestNativeQueries.testNoParameter(),13,14
org.apache.openjpa.persistence.jdbc.mapping.TestNativeQueries.testLiteral(),14,15
org.apache.openjpa.persistence.jdbc.mapping.TestNativeQueries.testParameter(),15,17
org.apache.openjpa.persistence.jdbc.mapping.TestNativeQueries.testOutOfOrderParameter(),16,21
org.apache.openjpa.persistence.jdbc.mapping.TestNativeQueries.testDuplicateParameter(),16,19
org.apache.openjpa.persistence.jdbc.mapping.TestNativeQueries.testDifferentParameterToSameField(),16,21
org.apache.openjpa.persistence.jdbc.mapping.TestNativeQueries.testQuoteParameterIgnored(),18,20
org.apache.openjpa.persistence.jdbc.mapping.TestNativeQueries.testParameterMarkerWithoutSpaces(),17,19
org.apache.openjpa.persistence.jdbc.mapping.TestNativeQueries.testZeroBasedParameterSettingFails(),20,25
org.apache.openjpa.persistence.jdbc.mapping.TestNativeQueries.testNamedParameterFails(),32,43
org.apache.openjpa.persistence.jdbc.mapping.TestNativeQueries.testHintsAreProcessed(),20,32
org.apache.openjpa.persistence.jdbc.mapping.TestNativeQueries.testNullResult(),11,13
"org.apache.openjpa.persistence.jdbc.mapping.TestNativeQueries.assertSize(int,List)",4,6
org.apache.openjpa.persistence.jdbc.schema.TestDBSequenceFactory.TestDBSequenceFactory(),5,8
org.apache.openjpa.persistence.jdbc.schema.TestDBSequenceFactory.TestDBSequenceFactory(String),4,6
org.apache.openjpa.persistence.jdbc.schema.TestDBSequenceFactory.testSequence(),21,37
org.apache.openjpa.persistence.jdbc.schema.TestDBSequenceFactory.main(String[]),3,4
org.apache.openjpa.persistence.jdbc.schema.TestDBSequenceFactory.UpdateThread.UpdateThread(Set),3,6
org.apache.openjpa.persistence.jdbc.schema.TestDBSequenceFactory.UpdateThread.run(),20,45
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.PhoneNumber.getNumber(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.PhoneNumber.setNumber(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.PhoneNumber.getEmployees(),5,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.PhoneNumber.addEmployees(Division,Employee)",5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.PhoneNumber.removeEmployee(Division),4,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex7.PhoneNumber.equals(Object),16,45
org.apache.openjpa.persistence.models.company.fetchlazy.ProductOrder.setItems(List<>),5,11
org.apache.openjpa.persistence.models.company.fetchlazy.ProductOrder.getItems(),4,5
org.apache.openjpa.persistence.models.company.fetchlazy.ProductOrder.setOrderDate(Date),2,6
org.apache.openjpa.persistence.models.company.fetchlazy.ProductOrder.getOrderDate(),1,3
org.apache.openjpa.persistence.models.company.fetchlazy.ProductOrder.setShippedDate(Date),3,10
org.apache.openjpa.persistence.models.company.fetchlazy.ProductOrder.getShippedDate(),2,5
org.apache.openjpa.persistence.models.company.fetchlazy.ProductOrder.setCustomer(ICustomer),2,7
org.apache.openjpa.persistence.models.company.fetchlazy.ProductOrder.getCustomer(),1,3
org.apache.openjpa.persistence.models.company.fetchlazy.ProductOrder.setId(long),1,1
org.apache.openjpa.persistence.models.company.fetchlazy.ProductOrder.getId(),0,0
org.apache.openjpa.persistence.datacache.TestCacheExclusions.populate(),21,45
org.apache.openjpa.persistence.datacache.TestCacheExclusions.tearDown(),23,39
org.apache.openjpa.persistence.datacache.TestCacheExclusions.testCacheAll(),10,17
org.apache.openjpa.persistence.datacache.TestCacheExclusions.testCacheItems(),12,19
org.apache.openjpa.persistence.datacache.TestCacheExclusions.testCacheItemsAndPurchases(),14,21
org.apache.openjpa.persistence.datacache.TestCacheExclusions.testCacheItemsAndOrders(),12,19
org.apache.openjpa.persistence.datacache.TestCacheExclusions.testCachePurchasesAndOrders(),12,19
org.apache.openjpa.persistence.datacache.TestCacheExclusions.testExcludePurchases(),13,19
org.apache.openjpa.persistence.datacache.TestCacheExclusions.testExcludeOrders(),11,17
org.apache.openjpa.persistence.datacache.TestCacheExclusions.testExcludeItems(),13,19
org.apache.openjpa.persistence.datacache.TestCacheExclusions.testExcludeOrdersAndPurchases(),13,19
org.apache.openjpa.persistence.datacache.TestCacheExclusions.testIncludePurchaseItemExcludePurchase(),22,35
"org.apache.openjpa.persistence.datacache.TestCacheExclusions.getEntityManagerFactoryCacheSettings(Class<>[],Class<>[])",40,166
"org.apache.openjpa.persistence.datacache.TestCacheExclusions.assertCacheContents(StoreCache,boolean,boolean,boolean)",14,54
org.apache.openjpa.persistence.jpql.version.type.TimestampVersionEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.version.type.TimestampVersionEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.version.type.TimestampVersionEntity.getVersion(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.setUp(),9,14
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.setCandidate(Query,Class)",17,43
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.queryQualifiedId(boolean),51,251
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.testQueryObject(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.createObj(),17,28
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.createEmployee(EntityManager,int)",20,67
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.findObj(),10,17
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.queryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.queryPhoneNumber(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.queryEmployee(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.assertEmployee(Employee),10,31
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.assertPhoneNumber(PhoneNumber),9,24
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.checkPhoneMap(Map<PhonePK,PhoneNumber>,Map<PhonePK,PhoneNumber>)",13,37
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.TestMany2ManyMapEx10.checkEmpMap(Map<EmployeePK,Employee>,Map<EmployeePK,Employee>)",15,43
org.apache.openjpa.persistence.kernel.common.apps.DateVersion.DateVersion(),2,2
"org.apache.openjpa.persistence.kernel.common.apps.DateVersion.DateVersion(String,int)",3,4
org.apache.openjpa.persistence.kernel.common.apps.DateVersion.setString(String),2,4
org.apache.openjpa.persistence.kernel.common.apps.DateVersion.getString(),1,3
org.apache.openjpa.persistence.kernel.common.apps.DateVersion.toString(),1,3
org.apache.openjpa.persistence.kernel.common.apps.DateVersion.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.DateVersion.setId(int),1,1
org.apache.openjpa.persistence.jdbc.sqlcache.Parent.getId(),0,0
org.apache.openjpa.persistence.jdbc.sqlcache.Parent.setId(long),1,1
org.apache.openjpa.persistence.jdbc.sqlcache.Parent.getName(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.Parent.setName(String),3,6
org.apache.openjpa.persistence.jdbc.sqlcache.Parent.setAddrId(Address),3,6
org.apache.openjpa.persistence.jdbc.sqlcache.Parent.getAddrId(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.Parent.getChildren(),3,4
org.apache.openjpa.persistence.jdbc.sqlcache.Parent.newChild(String),21,38
org.apache.openjpa.persistence.jdbc.sqlcache.Parent.removeChild(Child),3,8
org.apache.openjpa.persistence.jdbc.sqlcache.Parent.add(Child),16,24
"org.apache.openjpa.persistence.jdbc.SQLSniffer.matches(List<String>,String)",16,28
org.apache.openjpa.persistence.jdbc.SQLSniffer.getRegularExpression(String),7,13
org.apache.openjpa.persistence.jdbc.strategy.TestHandlerStrategy.setUp(),16,23
org.apache.openjpa.persistence.jdbc.strategy.TestHandlerStrategy.testIssue_OPENJPA2328(),42,67
org.apache.openjpa.persistence.models.company.idclass.PartTimeEmployee.setWage(float),2,5
org.apache.openjpa.persistence.models.company.idclass.PartTimeEmployee.getWage(),1,2
org.apache.openjpa.persistence.models.company.idclass.PartTimeEmployee.setWeeklyHours(int),3,9
org.apache.openjpa.persistence.models.company.idclass.PartTimeEmployee.getWeeklyHours(),2,4
org.apache.openjpa.persistence.query.OpenJPAQueryBuilder.createQueryDefinition(String),5,12
org.apache.openjpa.persistence.query.OpenJPAQueryBuilder.createQueryDefinition(Query),6,13
org.apache.openjpa.persistence.query.OpenJPAQueryBuilder.toJPQL(QueryDefinition),6,10
org.apache.openjpa.persistence.kernel.TestAbstractMappedAppIdSuper.TestAbstractMappedAppIdSuper(String),7,11
org.apache.openjpa.persistence.models.company.joined.Person.setFirstName(String),3,6
org.apache.openjpa.persistence.models.company.joined.Person.getFirstName(),2,3
org.apache.openjpa.persistence.models.company.joined.Person.setLastName(String),3,6
org.apache.openjpa.persistence.models.company.joined.Person.getLastName(),2,3
org.apache.openjpa.persistence.models.company.joined.Person.setHomeAddress(IAddress),3,11
org.apache.openjpa.persistence.models.company.joined.Person.getHomeAddress(),2,5
org.apache.openjpa.persistence.models.company.joined.Person.setId(long),1,1
org.apache.openjpa.persistence.models.company.joined.Person.getId(),0,0
"org.apache.openjpa.persistence.proxy.entities.Configrable<K,V>.getConfiguration()",2,2
"org.apache.openjpa.persistence.proxy.entities.Configrable<K,V>.setConfiguration(Parameterizable<K,V>)",4,4
org.apache.openjpa.persistence.query.UnaryFunctionalOperator.UnaryFunctionalOperator(String),5,7
org.apache.openjpa.persistence.query.UnaryFunctionalOperator.toString(),2,3
org.apache.openjpa.persistence.jpql.entities.OrderedElementEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.entities.OrderedElementEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.entities.OrderedElementEntity.getListElements(),3,5
org.apache.openjpa.persistence.jpql.entities.OrderedElementEntity.setListElements(List<String>),4,8
org.apache.openjpa.persistence.jpql.entities.OrderedElementEntity.addListElements(String),6,13
org.apache.openjpa.persistence.jpql.entities.OrderedElementEntity.removeListElements(int),7,16
"org.apache.openjpa.persistence.jpql.entities.OrderedElementEntity.insertListElements(int,String)",8,15
org.apache.openjpa.persistence.jpql.entities.OrderedElementEntity.toString(),4,5
org.apache.openjpa.persistence.jpql.clauses.TestEJBQueryInterface.TestEJBQueryInterface(String),6,7
org.apache.openjpa.persistence.jpql.clauses.TestEJBQueryInterface.setUp(),15,33
org.apache.openjpa.persistence.jpql.clauses.TestEJBQueryInterface.testResultList(),12,20
org.apache.openjpa.persistence.jpql.clauses.TestEJBQueryInterface.testGetSingleList(),15,28
org.apache.openjpa.persistence.jpql.clauses.TestEJBQueryInterface.testExecuteUpdate(),12,27
org.apache.openjpa.persistence.jpql.clauses.TestEJBQueryInterface.testSetMaxResults(),15,22
org.apache.openjpa.persistence.jpql.clauses.TestEJBQueryInterface.testSetFirstResults(),16,30
org.apache.openjpa.persistence.jpql.clauses.TestEJBQueryInterface.xxxtestSetParameter1(),21,47
org.apache.openjpa.persistence.event.TestPostRemove.setUp(),6,7
org.apache.openjpa.persistence.event.TestPostRemove.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.event.TestPostRemove.testPostRemoveInvokedOnlyAfterDatabaseDeleteWithLogicalFlush(),23,42
org.apache.openjpa.persistence.event.TestPostRemove.testPostRemoveInvokedAfterDatabaseDeleteWithoutFlush(),22,44
org.apache.openjpa.persistence.event.TestPostRemove.testPostRemoveNotInvokedAfterRollback(),19,42
org.apache.openjpa.persistence.event.TestPostRemove.testPostRemoveNotInvokedAfterRollbackWithIntermediateFlush(),21,52
org.apache.openjpa.persistence.event.TestPostRemove.testPostRemoveInvokedOnFlushThatIssuesDatabaseDelete(),24,67
org.apache.openjpa.persistence.event.TestPostRemove.testPostRemoveNotInvokedAfterDatabaseInsert(),18,39
org.apache.openjpa.persistence.event.TestPostRemove.isPostRemovedInvoked(PostRemoveCallbackEntity),7,10
"org.apache.openjpa.persistence.graph.Graph<E>.link(V1,V2)",19,38
"org.apache.openjpa.persistence.graph.Graph<E>.delink(V1,V2)",14,30
"org.apache.openjpa.persistence.graph.Graph<E>.getRelation(V1,V2)",12,31
org.apache.openjpa.persistence.graph.Graph<E>.getTargets(E),10,17
org.apache.openjpa.persistence.graph.Graph<E>.getSources(E),9,18
org.apache.openjpa.persistence.graph.Graph<E>.getRelationsFrom(V),6,10
org.apache.openjpa.persistence.graph.Graph<E>.getRelationsTo(V),6,10
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.setUp(),9,12
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.setCandidate(Query,Class)",17,43
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.queryQualifiedId(boolean),27,131
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.testQueryObject(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.createObj(),16,27
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.createEmployee(EntityManager,int)",15,38
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.createDepartment(EntityManager,int)",6,10
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.findObj(),9,15
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.queryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.queryPhoneNumber(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.queryEmployee(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.assertEmployee(Employee),10,27
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.assertPhoneNumber(PhoneNumber),10,20
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.checkPhoneMap(Map<Department,PhoneNumber>,Map<Department,PhoneNumber>)",14,37
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.TestMany2ManyMapEx2.checkEmpMap(Map<String,Employee>,Map<String,Employee>)",15,39
org.apache.openjpa.persistence.jpql.expressions.TestEntityTypeExpression.TestEntityTypeExpression(String),7,8
org.apache.openjpa.persistence.jpql.expressions.TestEntityTypeExpression.setUp(),38,111
org.apache.openjpa.persistence.jpql.expressions.TestEntityTypeExpression.testTypeOnNonPolymorphicEntity(),21,32
org.apache.openjpa.persistence.jpql.expressions.TestEntityTypeExpression.testTypeExpression(),47,394
"org.apache.openjpa.persistence.jpql.expressions.TestEntityTypeExpression.createUser(String,String,Address,int,boolean)",12,57
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.RelationOwner.getId(),1,1
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.RelationOwner.setId(Integer),2,2
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.RelationOwner.getSupers(),3,4
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.RelationOwner.setSupers(Collection<Superclass>),4,7
org.apache.openjpa.persistence.delimited.identifiers.EntityG.EntityG(),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityG.EntityG(int),1,1
"org.apache.openjpa.persistence.delimited.identifiers.EntityG.EntityG(int,String)",3,5
org.apache.openjpa.persistence.delimited.identifiers.EntityG.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityG.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityG.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityG.setName(String),4,10
org.apache.openjpa.persistence.jdbc.annotations.UnenhancedMixedAccess.getStringField(),5,6
org.apache.openjpa.persistence.jdbc.annotations.UnenhancedMixedAccess.setStringField(String),7,8
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC3.HelperPC3(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC3.HelperPC3(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC3.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC3.setStringField(String),3,10
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC3.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC3.setId(int),1,1
org.apache.openjpa.persistence.criteria.DependentId.getName(),2,3
org.apache.openjpa.persistence.criteria.DependentId.setName(String),3,6
org.apache.openjpa.persistence.criteria.DependentId.getEmpid(),1,2
org.apache.openjpa.persistence.criteria.DependentId.setEmpid(long),2,5
org.apache.openjpa.persistence.criteria.DependentId.getEffDate(),2,5
org.apache.openjpa.persistence.criteria.DependentId.setEffDate(Date),3,10
org.apache.openjpa.persistence.criteria.DependentId.hashCode(),8,26
org.apache.openjpa.persistence.criteria.DependentId.equals(Object),8,25
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterB.setStringB(String),2,4
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterB.getStringB(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterB.setIntB(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterB.getIntB(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.JoinTableMapPC.getHelpers(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.JoinTableMapPC.setHelpers(Map),3,6
org.apache.openjpa.persistence.jdbc.common.apps.JoinTableMapPC.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.JoinTableMapPC.setName(String),3,6
org.apache.openjpa.persistence.detachment.model.SimpleA.getId(),0,0
org.apache.openjpa.persistence.detachment.model.SimpleA.getName(),2,3
org.apache.openjpa.persistence.detachment.model.SimpleA.setName(String),3,6
org.apache.openjpa.persistence.detachment.model.SimpleA.getRef(),2,4
org.apache.openjpa.persistence.detachment.model.SimpleA.setRef(SimpleRef),3,7
org.apache.openjpa.persistence.detachment.model.SimpleA.addB(SimpleB),4,6
org.apache.openjpa.persistence.detachment.model.SimpleA.getBs(),2,3
org.apache.openjpa.persistence.embed.Company1.getId(),0,0
org.apache.openjpa.persistence.embed.Company1.setId(int),1,1
org.apache.openjpa.persistence.embed.Company1.getOrganization(),2,3
"org.apache.openjpa.persistence.embed.Company1.addToOrganization(Division,VicePresident)",5,8
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.setUp(),8,21
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.testHavingClauseWithEntityExpression(),22,75
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.setCandidate(Query,Class<>)",14,49
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.queryQualifiedId(boolean),34,127
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.testQueryObject(),4,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.createObj(),15,33
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.createDepartment1(EntityManager,int)",15,38
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.createEmployee1(EntityManager,int)",6,9
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.createDepartment2(EntityManager,int)",12,21
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.createEmployee2(EntityManager,int)",5,8
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.createDepartment3(EntityManager,int)",12,21
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.createEmployee3(EntityManager,int)",7,17
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.findObj(),13,42
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.assertDepartment1(Department1),14,27
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.assertDepartment2(Department2),10,20
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.assertDepartment3(Department3),11,25
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.assertEmployee1(Employee1),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.assertEmployee2(Employee2),3,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.assertEmployee3(Employee3),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.queryObj(),5,20
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.queryDepartment1(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.queryEmployee1(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.queryDepartment2(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.queryEmployee2(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.queryDepartment3(EntityManagerFactory),15,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.TestSpec10_1_26.queryEmployee3(EntityManagerFactory),15,32
org.apache.openjpa.persistence.embed.Embed_ToOne.getName1(),2,3
org.apache.openjpa.persistence.embed.Embed_ToOne.setName1(String),3,6
org.apache.openjpa.persistence.embed.Embed_ToOne.getName2(),2,3
org.apache.openjpa.persistence.embed.Embed_ToOne.setName2(String),3,6
org.apache.openjpa.persistence.embed.Embed_ToOne.getName3(),2,3
org.apache.openjpa.persistence.embed.Embed_ToOne.setName3(String),3,6
org.apache.openjpa.persistence.embed.Embed_ToOne.setEntityB(EntityB1),2,3
org.apache.openjpa.persistence.embed.Embed_ToOne.getEntityB(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.Department.getDeptId(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.Department.setDeptId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.Department.getEmployees(),5,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.Department.addEmployee(Employee),5,8
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.Department.removeEmployee(EmployeeName),4,8
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Address.Address(),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Address.Address(String),3,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Address.Address(String,String,String,String)",5,14
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Address.toString(),4,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Address.getStreet(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Address.setStreet(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Address.getCity(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Address.setCity(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Address.getState(),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Address.setState(String),2,2
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Address.getZip(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Address.setZip(String),3,6
org.apache.openjpa.persistence.embed.Seller.Seller(),1,1
org.apache.openjpa.persistence.embed.Seller.Seller(String),3,3
org.apache.openjpa.persistence.embed.Seller.getId(),0,0
org.apache.openjpa.persistence.embed.Seller.getName(),2,3
org.apache.openjpa.persistence.embed.Seller.setName(String),3,6
org.apache.openjpa.persistence.embed.Seller.toString(),3,5
org.apache.openjpa.persistence.jdbc.query.JDBCTestCase.JDBCTestCase(),4,6
org.apache.openjpa.persistence.jdbc.query.JDBCTestCase.JDBCTestCase(String),4,5
org.apache.openjpa.persistence.jdbc.query.JDBCTestCase.getDefaultInheritanceStrategy(),5,6
org.apache.openjpa.persistence.jdbc.query.JDBCTestCase.getClassMapping(Class),9,16
"org.apache.openjpa.persistence.jdbc.query.JDBCTestCase.getFieldMapping(Class,String)",3,10
org.apache.openjpa.persistence.jdbc.query.JDBCTestCase.isInheritanceStrategyVertical(),4,8
org.apache.openjpa.persistence.jdbc.query.cache.DepartmentId.DepartmentId(),1,1
org.apache.openjpa.persistence.jdbc.query.cache.DepartmentId.DepartmentId(String),3,5
org.apache.openjpa.persistence.jdbc.query.cache.DepartmentId.hashCode(),3,5
org.apache.openjpa.persistence.jdbc.query.cache.DepartmentId.equals(Object),5,14
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance.getId(),0,0
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance.setId(long),1,1
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance.getManaged2(),4,6
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance.setManaged2(ManagedInverseTestInstance2),5,9
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance.getStringField(),2,5
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance.setStringField(String),3,10
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance.getVersion(),1,2
org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance.setVersion(int),2,5
org.apache.openjpa.persistence.models.company.idclass.Address.setStreetAddress(String),4,10
org.apache.openjpa.persistence.models.company.idclass.Address.getStreetAddress(),3,5
org.apache.openjpa.persistence.models.company.idclass.Address.setCity(String),3,6
org.apache.openjpa.persistence.models.company.idclass.Address.getCity(),2,3
org.apache.openjpa.persistence.models.company.idclass.Address.setState(String),2,2
org.apache.openjpa.persistence.models.company.idclass.Address.getState(),1,1
org.apache.openjpa.persistence.models.company.idclass.Address.setPostalCode(String),4,10
org.apache.openjpa.persistence.models.company.idclass.Address.getPostalCode(),3,5
org.apache.openjpa.persistence.models.company.idclass.Address.setPhoneNumber(String),3,6
org.apache.openjpa.persistence.models.company.idclass.Address.getPhoneNumber(),2,3
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.TestDetachedStateManager(String),7,11
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.deleteAll(),2,5
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.getPM(),10,13
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.setUp(),21,34
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.testDetach(),20,66
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.testDetachWithGroups(),35,110
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.testDetachNoOverwrite(),17,43
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.testOptimisticLock(),24,45
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.testEmbedded(),15,42
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.testNullEmbedded(),16,35
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.testNullEmbeddedRelated(),17,47
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.testNullCollection(),14,22
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.testCollectionAdd(),3,5
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.testCollectionChanges(),3,5
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.doCollectionTest(boolean),22,57
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.doSerializationTest(boolean),36,198
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.enhance(),24,37
org.apache.openjpa.persistence.kernel.TestDetachedStateManager.assertDetachedSM(Object),9,17
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.setUp(),29,78
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testEntityEmbeddableTest(),29,98
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testStringEqualExpression(),17,32
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testSetAndListJoins(),24,59
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testLeftSetJoin(),19,37
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testFetchJoins(),23,36
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testPathNavigation(),25,67
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testKeyPathNavigation(),23,43
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testIndexExpression(),24,60
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testIsEmptyExpressionOnJoin(),16,31
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testFunctionalExpressionInProjection(),33,84
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testTypeExpression(),15,27
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testJoinAndIndexExpression(),21,56
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testAggregateExpressionInProjection(),26,62
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testSizeExpressionInProjection(),22,41
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testCaseExpression(),23,71
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testMemberOfExpression(),18,27
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testParameters(),21,33
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testParameters().$1.decorate(Query),5,5
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testKeyExpressionInSelectList(),30,80
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testConstructorInSelectList(),21,53
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testUncorrelatedSubqueryWithAggregateProjection(),21,51
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testSubqueryWithExistsClause(),19,57
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testSubqueryWithAllClause(),20,59
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testCorrelatedSubqueryWithCount(),16,33
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testCorrelatedSubqueryWithJoin(),22,47
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testCorrelatedSubqueryWithAllClause(),24,47
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testGroupByAndHaving(),19,47
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testOrderingByExpressionNotIncludedInSelection(),26,55
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testOrderingByExpressionIncludedInSelection(),25,68
org.apache.openjpa.persistence.criteria.TestMetaModelTypesafeCriteria.testOrderingWithNumericalExpressionInSelection(),33,102
org.apache.openjpa.persistence.kernel.common.apps.MixedInterface.getIntField(),1,1
org.apache.openjpa.persistence.kernel.common.apps.MixedInterface.setIntField(int),2,2
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity.setUp(),12,13
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity.testMerge(),25,50
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity.testPersist(),3,3
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity.testQueryRootLevel(),18,35
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity.testQueryIntermediateLevel(),20,51
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity.testQueryLeafLevel(),18,48
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity.testFindRootNode(),13,25
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity.testFindIntermediateNode(),12,28
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity.testFindLeafNode(),13,37
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity.testUpdate(),16,36
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity.testDeleteRoot(),19,30
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity.testDeleteLeafObtainedByQuery(),24,39
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity.testDeleteLeafObtainedByFind(),22,55
org.apache.openjpa.persistence.enhance.identity.TestMultipleLevelDerivedIdentity.create(),19,51
org.apache.openjpa.persistence.property.IContact.getAddress(),1,2
org.apache.openjpa.persistence.property.IContact.setAddress(IAddress),2,4
org.apache.openjpa.persistence.property.IContact.getEmail(),2,2
org.apache.openjpa.persistence.property.IContact.setEmail(String),3,4
org.apache.openjpa.persistence.property.IContact.getPhone(),2,2
org.apache.openjpa.persistence.property.IContact.setPhone(String),3,4
org.apache.openjpa.persistence.property.IContact.getType(),2,2
org.apache.openjpa.persistence.property.IContact.setType(String),3,4
org.apache.openjpa.persistence.kernel.common.apps.SingleId.getPkString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.SingleId.setString(String),2,3
org.apache.openjpa.persistence.kernel.common.apps.SingleId.getString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.SingleId.correctIdClass(Class),2,2
org.apache.openjpa.persistence.generationtype.Dog2.Dog2(),1,1
org.apache.openjpa.persistence.generationtype.Dog2.Dog2(String),3,5
org.apache.openjpa.persistence.generationtype.Dog2.getId2(),0,0
org.apache.openjpa.persistence.generationtype.Dog2.setId2(int),1,1
org.apache.openjpa.persistence.generationtype.Dog2.getName(),2,3
org.apache.openjpa.persistence.generationtype.Dog2.setName(String),3,6
org.apache.openjpa.persistence.generationtype.Dog2.getPrice(),1,2
org.apache.openjpa.persistence.generationtype.Dog2.setPrice(float),2,5
org.apache.openjpa.persistence.generationtype.Dog2.isDomestic(),1,2
org.apache.openjpa.persistence.generationtype.Dog2.setDomestic(boolean),2,5
org.apache.openjpa.persistence.kernel.TestExtents.TestExtents(),4,6
org.apache.openjpa.persistence.kernel.TestExtents.TestExtents(String),4,5
org.apache.openjpa.persistence.kernel.TestExtents.setUp(),10,23
org.apache.openjpa.persistence.kernel.TestExtents.testExtent1(),11,22
org.apache.openjpa.persistence.kernel.TestExtents.testExtent2(),11,20
org.apache.openjpa.persistence.kernel.TestExtents.testExtent3(),11,20
org.apache.openjpa.persistence.kernel.TestExtents.testExtent4(),15,28
"org.apache.openjpa.persistence.kernel.TestExtents.assertContainsSame(List,Collection)",7,19
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestDate(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestDate(Date),3,10
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestCalendar(Calendar),3,10
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestCalendar(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestObject(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestObject(Object),3,10
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestchar(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestchar(char),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestint(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestint(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestshort(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestshort(short),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestlong(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestlong(long),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestboolean(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestboolean(boolean),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestfloat(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestfloat(float),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestdouble(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestdouble(double),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestString(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestString(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestBigString(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestBigString(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestbyte(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestbyte(byte),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestBigInteger(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestBigInteger(BigInteger),3,10
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getTestBigDecimal(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setTestBigDecimal(BigDecimal),3,10
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.toString(),17,56
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.hashCode(),19,55
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.equals(Object),18,55
"org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.eq(Object,Object)",8,12
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest.setId(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.AIntf.getName(),2,2
org.apache.openjpa.persistence.kernel.common.apps.AIntf.setName(String),3,4
org.apache.openjpa.persistence.inheritance.entity.XMLCallback.prePersist(),3,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.VicePresident.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.VicePresident.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.VicePresident.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.VicePresident.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.VicePresident.getCompany(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex3.VicePresident.setCompany(Company),2,3
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity.setOne2Melems(List<BaseTestElement>),6,9
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity.getOne2Melems(),5,6
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity.setCollelems(Set<BaseTestElement>),5,9
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity.getCollelems(),5,6
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity.setM2melems(List<BaseTestElement>),6,9
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity.getM2melems(),5,6
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.oracle.PObject.getId(),0,0
org.apache.openjpa.persistence.jdbc.oracle.PObject.getName(),2,3
org.apache.openjpa.persistence.jdbc.oracle.PObject.setName(String),3,4
org.apache.openjpa.persistence.kernel.common.apps.ConcreteMappedAppIdSub.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.ConcreteMappedAppIdSub.setName(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.InterfaceHolder.InterfaceHolder(),1,1
org.apache.openjpa.persistence.kernel.common.apps.InterfaceHolder.InterfaceHolder(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.InterfaceHolder.setIntf(InterfaceTest),3,6
org.apache.openjpa.persistence.kernel.common.apps.InterfaceHolder.getIntf(),2,3
org.apache.openjpa.persistence.kernel.common.apps.InterfaceHolder.setIntfs(Set),2,6
org.apache.openjpa.persistence.kernel.common.apps.InterfaceHolder.getIntfs(),2,3
org.apache.openjpa.persistence.kernel.common.apps.InterfaceHolder.setId(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.InterfaceHolder.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.InterfaceHolder.toString(),4,10
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppD.setStringD(String),2,4
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppD.getStringD(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppD.setIntD(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppD.getIntD(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterD.setStringD(String),2,4
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterD.getStringD(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterD.setIntD(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterD.getIntD(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest3.getVerticalValue(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest3.setVerticalValue(int),3,9
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.getNum(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.setNum(long),3,5
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.getString(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.setString(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.getClob(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.setClob(String),5,7
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.getBool(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.setBool(boolean),3,5
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.getDecimal(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.setDecimal(float),3,5
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.getCharacter(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.setCharacter(char),3,5
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.setDate(Date),3,6
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.getDate(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.getManyToMany(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.QueryTest1.setManyToMany(Collection),3,4
org.apache.openjpa.persistence.kernel.TestSecondClassValues.TestSecondClassValues(),4,6
org.apache.openjpa.persistence.kernel.TestSecondClassValues.TestSecondClassValues(String),4,5
org.apache.openjpa.persistence.kernel.TestSecondClassValues.setUp(),1,1
org.apache.openjpa.persistence.kernel.TestSecondClassValues.rnd(),3,3
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testMapDeletion(),20,95
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testStringCollection(),10,17
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testLongCollection(),18,27
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testShortCollection(),9,15
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testBigIntegerCollection(),10,17
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testBigDecimalCollection(),17,24
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testIntegerCollection(),10,16
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testByteCollection(),9,15
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testBooleanCollection(),9,15
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testFloatCollection(),17,24
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testDoubleCollection(),17,24
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testDateCollection(),10,20
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testBigDecimalBigIntegerMap(),16,26
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testStrIntMap(),9,17
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testIntLongMap(),16,27
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testFloatByteMap(),15,24
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testByteDoubleMap(),15,24
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testDoubleCharMap(),15,24
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testCharBooleanMap(),7,15
org.apache.openjpa.persistence.kernel.TestSecondClassValues.testDateStrMap(),14,32
org.apache.openjpa.persistence.kernel.TestSecondClassValues.saveSecondClassMap(HashMap),6,11
org.apache.openjpa.persistence.kernel.TestSecondClassValues.commit(),9,14
org.apache.openjpa.persistence.kernel.TestSecondClassValues.begin(),5,5
org.apache.openjpa.persistence.kernel.TestSecondClassValues.saveSecondClassMapInternal(HashMap),64,226
org.apache.openjpa.persistence.kernel.TestSecondClassValues.saveSecondClassCollection(ArrayList),5,9
"org.apache.openjpa.persistence.kernel.TestSecondClassValues.saveSecondClassCollection(ArrayList,boolean)",9,15
"org.apache.openjpa.persistence.kernel.TestSecondClassValues.saveSecondClassCollectionInternal(ArrayList,boolean)",60,262
"org.apache.openjpa.persistence.kernel.TestSecondClassValues.assertClassAndValueEquals(Object,Object)",18,46
org.apache.openjpa.persistence.kernel.TestSecondClassValues.dump(Collection),16,41
org.apache.openjpa.persistence.kernel.TestSecondClassValues.dumpDates(Collection),11,20
"org.apache.openjpa.persistence.kernel.TestSecondClassValues.setGetMap(SCOTest,HashMap,boolean)",24,131
"org.apache.openjpa.persistence.kernel.TestSecondClassValues.setGetCollection(SCOTest,Collection,boolean)",20,101
org.apache.openjpa.persistence.kernel.TestSecondClassValues.CollectionSorter.CollectionSorter(),2,2
"org.apache.openjpa.persistence.kernel.TestSecondClassValues.CollectionSorter.compare(Object,Object)",4,9
org.apache.openjpa.persistence.jdbc.sqlcache.Address.Address(),1,1
"org.apache.openjpa.persistence.jdbc.sqlcache.Address.Address(String,String,String,int)",5,13
org.apache.openjpa.persistence.jdbc.sqlcache.Address.getStreet(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.Address.setStreet(String),3,6
org.apache.openjpa.persistence.jdbc.sqlcache.Address.getCity(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.Address.setCity(String),3,6
org.apache.openjpa.persistence.jdbc.sqlcache.Address.getState(),1,1
org.apache.openjpa.persistence.jdbc.sqlcache.Address.setState(String),2,2
org.apache.openjpa.persistence.jdbc.sqlcache.Address.getZip(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.Address.setZip(int),2,5
org.apache.openjpa.persistence.jdbc.sqlcache.Address.getId(),0,0
org.apache.openjpa.persistence.kernel.TestEJBEmbedded.TestEJBEmbedded(String),5,6
org.apache.openjpa.persistence.kernel.TestEJBEmbedded.setUp(),14,61
org.apache.openjpa.persistence.kernel.TestEJBEmbedded.testInsert(),12,34
org.apache.openjpa.persistence.kernel.TestEJBEmbedded.testDelete(),16,39
org.apache.openjpa.persistence.kernel.TestEJBEmbedded.testUpdateRetain(),14,42
org.apache.openjpa.persistence.kernel.TestEJBEmbedded.testReplace(),17,83
org.apache.openjpa.persistence.kernel.TestEJBEmbedded.testShare(),19,67
org.apache.openjpa.persistence.kernel.TestEJBEmbedded.testOptimisticLocking2(),20,43
org.apache.openjpa.persistence.enhance.identity.Dependent1Xml.getEmp(),3,4
org.apache.openjpa.persistence.enhance.identity.Dependent1Xml.setEmp(Employee1Xml),4,7
org.apache.openjpa.persistence.enhance.identity.Dependent1Xml.getId(),2,2
org.apache.openjpa.persistence.enhance.identity.Dependent1Xml.setId(DependentId1Xml),3,3
org.apache.openjpa.persistence.enhance.identity.Dependent1Xml.equals(Object),6,18
org.apache.openjpa.persistence.enhance.identity.Dependent1Xml.hashCode(),4,13
org.apache.openjpa.persistence.inheritance.entity.BaseClass6.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entity.BaseClass6.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.BaseClass6.setName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.BaseClass6.getName(),2,3
org.apache.openjpa.persistence.inheritance.entity.BaseClass6.toString(),2,4
org.apache.openjpa.persistence.inheritance.entity.SubclassH.setClassHName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.SubclassH.getClassHName(),2,3
org.apache.openjpa.persistence.inheritance.entity.SubclassH.toString(),4,9
org.apache.openjpa.persistence.inheritance.entity.SubclassH.getIntFieldSup(),2,4
org.apache.openjpa.persistence.inheritance.entity.SubclassH.setIntFieldSup(int),3,5
org.apache.openjpa.persistence.inheritance.entity.SubclassH.setBaseclass5(BaseClass5),3,6
org.apache.openjpa.persistence.inheritance.entity.SubclassH.getBaseclass5(),2,3
org.apache.openjpa.persistence.event.TestLocalRemoteEvents.TestLocalRemoteEvents(String),5,5
org.apache.openjpa.persistence.event.TestLocalRemoteEvents.setUp(),4,4
org.apache.openjpa.persistence.event.TestLocalRemoteEvents.testLocalEvents(),8,9
org.apache.openjpa.persistence.jdbc.order.BaseTestElement.BaseTestElement(),3,3
org.apache.openjpa.persistence.jdbc.order.BaseTestElement.BaseTestElement(String),5,7
org.apache.openjpa.persistence.jdbc.order.BaseTestElement.setName(String),3,6
org.apache.openjpa.persistence.jdbc.order.BaseTestElement.getName(),2,3
org.apache.openjpa.persistence.jdbc.order.BaseTestElement.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.BaseTestElement.getId(),0,0
org.apache.openjpa.persistence.jdbc.order.BaseTestElement.equals(Object),9,22
org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccess.UnenhancedCompoundPKFieldAccess(),4,4
"org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccess.UnenhancedCompoundPKFieldAccess(int,int)",4,4
org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccess.PK.PK(),0,0
"org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccess.PK.PK(int,int)",0,0
org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccess.PK.toString(),2,6
org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccess.PK.hashCode(),2,2
org.apache.openjpa.enhance.UnenhancedCompoundPKFieldAccess.PK.equals(Object),3,7
org.apache.openjpa.instrumentation.QSCInstrument.getName(),2,3
org.apache.openjpa.instrumentation.QSCInstrument.initialize(),11,17
org.apache.openjpa.instrumentation.QSCInstrument.start(),3,3
org.apache.openjpa.instrumentation.QSCInstrument.stop(),3,3
org.apache.openjpa.persistence.jdbc.TestOptimizeForClause.setUp(),3,4
org.apache.openjpa.persistence.jdbc.TestOptimizeForClause.testOptimizeForClauseViaGetSingleResult(),31,51
org.apache.openjpa.persistence.jdbc.TestOptimizeForClause.testOptimizeForClauseViaHint(),6,8
org.apache.openjpa.persistence.jdbc.TestOptimizeForClause.testOptimizeForClauseViaFind(),5,7
org.apache.openjpa.persistence.jdbc.TestOptimizeForClause.testOptimizeForClauseViaQueryHint(),7,9
"org.apache.openjpa.persistence.jdbc.TestOptimizeForClause.tstOptimizeForClause(boolean,boolean,boolean)",47,108
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreadedInitialization.setUp(),2,2
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreadedInitialization.test(),20,105
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreadedInitialization.Worker.Worker(EntityManager),3,3
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreadedInitialization.Worker.getDog(),1,3
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreadedInitialization.Worker.getException(),1,3
org.apache.openjpa.persistence.generationtype.TestTableGeneratorMultithreadedInitialization.Worker.run(),13,16
org.apache.openjpa.persistence.jdbc.annotations.TestEJBEmbedded.setUp(),9,11
org.apache.openjpa.persistence.jdbc.annotations.TestEJBEmbedded.testEmbedded(),28,103
org.apache.openjpa.persistence.jdbc.annotations.TestEJBEmbedded.testEmbeddedMetaData(),13,38
org.apache.openjpa.persistence.jdbc.annotations.TestEJBEmbedded.nullTestLogic(boolean),34,114
org.apache.openjpa.persistence.jdbc.annotations.TestEJBEmbedded.testNullNoCache(),3,4
org.apache.openjpa.persistence.jdbc.annotations.TestEJBEmbedded.testNullCacheEnabled(),4,5
org.apache.openjpa.persistence.jdbc.annotations.TestEJBEmbedded.testMappingTransferAndOverride(),34,99
org.apache.openjpa.persistence.identity.TestCompundIdWithNull.setUp(),28,43
org.apache.openjpa.persistence.identity.TestCompundIdWithNull.testSimpleCompoundIdTestEntity(),22,55
org.apache.openjpa.persistence.identity.TestCompundIdWithNull.testComplexCompoundIdTestEntity(),23,56
org.apache.openjpa.persistence.identity.TestCompundIdWithNull.createTables(EntityManager),52,160
org.apache.openjpa.persistence.jdbc.query.domain.Applicant.getName(),2,3
org.apache.openjpa.persistence.jdbc.query.domain.Applicant.setName(String),3,6
org.apache.openjpa.persistence.jdbc.query.domain.Applicant.getId(),0,0
org.apache.openjpa.kernel.TestUnenhancedPropertyAccessInstanceBrokerSerialization.getManagedType(),5,8
org.apache.openjpa.kernel.TestUnenhancedPropertyAccessInstanceBrokerSerialization.newManagedInstance(),9,15
org.apache.openjpa.kernel.TestUnenhancedPropertyAccessInstanceBrokerSerialization.modifyInstance(UnenhancedPropertyAccess),9,9
org.apache.openjpa.kernel.TestUnenhancedPropertyAccessInstanceBrokerSerialization.getModifiedValue(UnenhancedPropertyAccess),8,8
org.apache.openjpa.persistence.inheritance.TestMappedSuperclass.setUp(),4,6
org.apache.openjpa.persistence.inheritance.TestMappedSuperclass.classArray(Class),2,3
org.apache.openjpa.persistence.inheritance.TestMappedSuperclass.testMappedSuperclassContract001(),37,80
org.apache.openjpa.persistence.inheritance.TestMappedSuperclass.testMappedSuperclassContract002(),37,80
org.apache.openjpa.persistence.kernel.TestFetchPlan.TestFetchPlan(),5,8
org.apache.openjpa.persistence.kernel.TestFetchPlan.TestFetchPlan(String),5,6
org.apache.openjpa.persistence.kernel.TestFetchPlan.setUp(),12,21
org.apache.openjpa.persistence.kernel.TestFetchPlan.createTestData(),42,176
org.apache.openjpa.persistence.kernel.TestFetchPlan.testZeroRecursionDepthSingleValuedField(),14,24
org.apache.openjpa.persistence.kernel.TestFetchPlan.testOneRecursionDepthSingleValuedField(),13,26
org.apache.openjpa.persistence.kernel.TestFetchPlan.testTwoRecursionDepthSingleValuedField(),15,29
org.apache.openjpa.persistence.kernel.TestFetchPlan.testThreeRecursionDepthSingleValuedField(),12,16
org.apache.openjpa.persistence.kernel.TestFetchPlan.testInfiniteRecursionDepthSingleValuedField(),10,14
"org.apache.openjpa.persistence.kernel.TestFetchPlan.genericTestForSingleValuedRecursiveField(String,int,int)",27,48
"org.apache.openjpa.persistence.kernel.TestFetchPlan.queryDirectoryWithPlan(String,int,int)",33,93
"org.apache.openjpa.persistence.kernel.TestFetchPlan.checkParents(PCDirectory,int,int)",21,54
"org.apache.openjpa.persistence.kernel.TestFetchPlan.getParents(PCDirectory,int)",22,48
"org.apache.openjpa.persistence.kernel.TestFetchPlan.assertNullParent(PCDirectory[],int)",10,13
org.apache.openjpa.persistence.kernel.TestFetchPlan.getDirectoryName(int),4,5
org.apache.openjpa.persistence.kernel.TestFetchPlan.getFileName(int),4,5
org.apache.openjpa.persistence.kernel.TestFetchPlan.quoted(String),3,5
org.apache.openjpa.persistence.kernel.TestFetchPlan.testRelationTraversal(),40,104
org.apache.openjpa.persistence.kernel.TestFetchPlan.testRelationTraversalTruncated(),40,102
org.apache.openjpa.persistence.kernel.TestFetchPlan.testRelationTraversalWithCompanyAsRoot(),51,159
org.apache.openjpa.persistence.kernel.TestFetchPlan.testDetachedRelationTraversalWithCompanyAsRoot(),35,135
org.apache.openjpa.persistence.kernel.TestFetchPlan.testDefaultFetchGroup(),21,33
org.apache.openjpa.persistence.kernel.TestFetchPlan.testDefaultFetchGroupExistsByDefault(),10,14
org.apache.openjpa.persistence.kernel.TestFetchPlan.testDefaultFetchGroupCanBeRemoved(),11,39
org.apache.openjpa.persistence.kernel.TestFetchPlan.tearDown(),2,3
org.apache.openjpa.persistence.kernel.TestFetchPlan.clearTestData(),43,117
org.apache.openjpa.persistence.jdbc.common.apps.ComplexEmbeddedPC.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.ComplexEmbeddedPC.setStringField(String),3,10
org.apache.openjpa.persistence.jdbc.common.apps.ComplexEmbeddedPC.getOwnerField(),3,6
org.apache.openjpa.persistence.jdbc.common.apps.ComplexEmbeddedPC.setOwnerField(EmbeddedOwnerPC),4,11
org.apache.openjpa.persistence.jdbc.common.apps.ComplexEmbeddedPC.getStringSet(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.ComplexEmbeddedPC.setStringSet(Set),2,10
org.apache.openjpa.persistence.Country.Country(),1,1
"org.apache.openjpa.persistence.Country.Country(long,String)",3,5
org.apache.openjpa.persistence.Country.getId(),0,0
org.apache.openjpa.persistence.Country.getName(),2,3
org.apache.openjpa.persistence.Country.setName(String),3,6
org.apache.openjpa.persistence.access.MenuItem.getId(),1,1
org.apache.openjpa.persistence.access.MenuItem.setId(String),2,2
org.apache.openjpa.persistence.access.MenuItem.getIngredients(),4,5
"org.apache.openjpa.persistence.access.MenuItem.setIngredients(Map<String,Ingredient>)",5,8
org.apache.openjpa.persistence.access.MenuItem.setName(String),3,6
org.apache.openjpa.persistence.access.MenuItem.getName(),2,3
org.apache.openjpa.persistence.jdbc.meta.TestIntermediate.TestIntermediate(String),3,5
org.apache.openjpa.persistence.jdbc.meta.TestIntermediate.TestIntermediate(),4,6
org.apache.openjpa.persistence.jdbc.meta.TestIntermediate.setUp(),17,44
org.apache.openjpa.persistence.jdbc.meta.TestIntermediate.testOneOneSetsIntermediate(),11,24
org.apache.openjpa.persistence.jdbc.meta.TestIntermediate.testDataCacheOneOneSetsIntermediate(),16,41
org.apache.openjpa.persistence.jdbc.meta.TestIntermediate.oneOneIntermediateTest(Broker),18,39
org.apache.openjpa.persistence.access.xml.XMLFieldSub2.getCreateDate(),3,5
org.apache.openjpa.persistence.access.xml.XMLFieldSub2.setCreateDate(Date),4,8
org.apache.openjpa.persistence.access.xml.XMLFieldSub2.equals(Object),10,32
org.apache.openjpa.persistence.relations.OneOneParent.getId(),0,0
org.apache.openjpa.persistence.relations.OneOneParent.getName(),2,3
org.apache.openjpa.persistence.relations.OneOneParent.setName(String),3,6
org.apache.openjpa.persistence.relations.OneOneParent.getChild(),1,3
org.apache.openjpa.persistence.relations.OneOneParent.setChild(OneOneChild),2,6
org.apache.openjpa.persistence.annotations.TestFlatInheritance.TestFlatInheritance(String),6,7
org.apache.openjpa.persistence.annotations.TestFlatInheritance.setUp(),3,3
org.apache.openjpa.persistence.annotations.TestFlatInheritance.testInheritance(),13,43
org.apache.openjpa.persistence.relations.TestConcurrentMap.setUp(),5,8
org.apache.openjpa.persistence.relations.TestConcurrentMap.testConcurrentMap001(),14,43
org.apache.openjpa.persistence.kernel.TestOptimisticLockGroups.TestOptimisticLockGroups(),5,8
org.apache.openjpa.persistence.kernel.TestOptimisticLockGroups.TestOptimisticLockGroups(String),5,6
org.apache.openjpa.persistence.kernel.TestOptimisticLockGroups.setUp(),10,12
org.apache.openjpa.persistence.kernel.TestOptimisticLockGroups.testDefaultLockGroupFailure1(),20,38
org.apache.openjpa.persistence.kernel.TestOptimisticLockGroups.testDefaultLockGroupFailure2(),21,37
org.apache.openjpa.persistence.kernel.TestOptimisticLockGroups.testNonDefaultLockGroupFailure1(),19,34
org.apache.openjpa.persistence.kernel.TestOptimisticLockGroups.testNonDefaultLockGroupFailure2(),20,35
org.apache.openjpa.persistence.kernel.TestOptimisticLockGroups.testMultipleLockGroupSuccess1(),16,46
org.apache.openjpa.persistence.kernel.TestOptimisticLockGroups.testMultipleLockGroupSuccess2(),15,34
org.apache.openjpa.persistence.kernel.TestOptimisticLockGroups.testAttachDetachSuccess(),34,94
org.apache.openjpa.persistence.kernel.TestOptimisticLockGroups.testAttachDetachFailure(),37,93
org.apache.openjpa.persistence.kernel.TestOptimisticLockGroups.testLockGroupNone(),20,42
org.apache.openjpa.persistence.kernel.TestOptimisticLockGroups.getFailedObject(Exception),3,4
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.TestEJBQLCondExpression(String),7,8
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.setUp(),37,111
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.testNothing(),14,25
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.testBetweenExpr(),24,43
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.testNotBetweenExpr(),19,29
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.testInExpr(),21,41
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.testNotInExpr(),20,31
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.testLikeExpr(),23,103
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.testNullExpr(),23,44
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.testNullExpr2(),19,28
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.testIsEmptyExpr(),19,29
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.testIsEmptyExpr2(),19,29
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.testExistExpr(),26,52
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.testNotExistExpr(),22,36
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.testAnyExpr(),21,35
org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.testConstructorExpr(),34,63
"org.apache.openjpa.persistence.jpql.expressions.TestEJBQLCondExpression.createUser(String,String,Address,int,boolean)",13,67
org.apache.openjpa.persistence.jdbc.mapping.Authority.Authority(),1,1
org.apache.openjpa.persistence.jdbc.mapping.Authority.Authority(AuthorityValues),4,7
org.apache.openjpa.persistence.jdbc.mapping.Authority.getId(),1,1
org.apache.openjpa.persistence.jdbc.mapping.Authority.setAuthorityName(AuthorityValues),5,9
org.apache.openjpa.persistence.jdbc.mapping.Authority.getAuthorityName(),3,6
org.apache.openjpa.persistence.relations.TestMapCollectionToBlob.setUp(),11,14
org.apache.openjpa.persistence.relations.TestMapCollectionToBlob.testHandlerToHandlerMaps(),28,55
org.apache.openjpa.persistence.relations.TestMapCollectionToBlob.getBlobFieldStrategy(),17,32
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.Division.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.Division.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.Division.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.Division.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.Division.equals(Object),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex5.Division.hashCode(),4,11
org.apache.openjpa.persistence.models.company.IEmployee.setManager(IFullTimeEmployee),4,5
org.apache.openjpa.persistence.models.company.IEmployee.getManager(),3,3
org.apache.openjpa.persistence.models.company.IEmployee.setCompany(ICompany),2,4
org.apache.openjpa.persistence.models.company.IEmployee.getCompany(),1,2
org.apache.openjpa.persistence.models.company.IEmployee.setTitle(String),3,4
org.apache.openjpa.persistence.models.company.IEmployee.getTitle(),2,2
org.apache.openjpa.persistence.models.company.IEmployee.setHireDate(Date),3,6
org.apache.openjpa.persistence.models.company.IEmployee.getHireDate(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Semester.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Semester.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Semester.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex3.Semester.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Division.getPhone(),1,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Division.setPhone(PhoneNumber),2,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Division.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Division.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Division.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Division.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Division.equals(Object),4,8
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.Division.hashCode(),4,11
org.apache.openjpa.persistence.models.company.fetchlazy.Product.setName(String),3,6
org.apache.openjpa.persistence.models.company.fetchlazy.Product.getName(),2,3
org.apache.openjpa.persistence.models.company.fetchlazy.Product.setImage(byte[]),2,5
org.apache.openjpa.persistence.models.company.fetchlazy.Product.getImage(),1,2
org.apache.openjpa.persistence.models.company.fetchlazy.Product.setPrice(float),2,5
org.apache.openjpa.persistence.models.company.fetchlazy.Product.getPrice(),1,2
org.apache.openjpa.persistence.models.company.fetchlazy.Product.setDistributors(Set<>),3,9
org.apache.openjpa.persistence.models.company.fetchlazy.Product.getDistributors(),3,4
org.apache.openjpa.persistence.models.company.fetchlazy.Product.setId(long),1,1
org.apache.openjpa.persistence.models.company.fetchlazy.Product.getId(),0,0
org.apache.openjpa.persistence.batch.exception.Ent1.getPk(),0,0
org.apache.openjpa.persistence.batch.exception.Ent1.setPk(int),1,1
org.apache.openjpa.persistence.batch.exception.Ent1.getName(),2,3
org.apache.openjpa.persistence.batch.exception.Ent1.setName(String),4,6
org.apache.openjpa.persistence.batch.exception.Ent1.Ent1(),1,1
"org.apache.openjpa.persistence.batch.exception.Ent1.Ent1(int,String)",4,5
org.apache.openjpa.persistence.batch.exception.Ent1.toString(),3,4
org.apache.openjpa.persistence.batch.exception.Ent1.hashCode(),5,15
org.apache.openjpa.persistence.batch.exception.Ent1.equals(Object),5,14
org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.TestDistributedKodoDataCache(String),7,9
org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.setUp(),4,7
org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.ChangeOperation.getName(),2,2
"org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.ChangeOperation.operation(OpenJPAEntityManagerFactory,boolean)",6,6
org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.performAsModify.getName(),6,6
"org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.performAsModify.operation(OpenJPAEntityManagerFactory,boolean)",22,39
org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.performAsDelete.getName(),6,6
"org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.performAsDelete.operation(OpenJPAEntityManagerFactory,boolean)",20,36
org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.testNormalTransAndDataCacheDelete(),9,12
org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.testNormalTransAndDataCacheModify(),9,12
org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.testLargeTransAndDataCacheDelete(),8,11
org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.testLargeTransAndDataCacheModify(),8,11
"org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.coreTestTransAndChange(ChangeOperation,boolean,boolean)",86,359
org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.performLoadAll(OpenJPAEntityManager),18,52
"org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.seedDataStore(OpenJPAEntityManager,int)",25,70
"org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.createDistinctFactory(Class,String)",33,83
org.apache.openjpa.persistence.datacache.TestDistributedKodoDataCache.pause(double),6,10
org.apache.openjpa.persistence.proxy.entities.Person.getDateOfBirth(),2,5
org.apache.openjpa.persistence.proxy.entities.Person.setDateOfBirth(Date),3,10
org.apache.openjpa.persistence.proxy.entities.Person.getFirstName(),2,3
org.apache.openjpa.persistence.proxy.entities.Person.setFirstName(String),3,6
org.apache.openjpa.persistence.proxy.entities.Person.getGovernmentId(),2,3
org.apache.openjpa.persistence.proxy.entities.Person.setGovernmentId(String),3,6
org.apache.openjpa.persistence.proxy.entities.Person.getLastName(),2,3
org.apache.openjpa.persistence.proxy.entities.Person.setLastName(String),3,6
org.apache.openjpa.persistence.proxy.entities.Person.getPicture(),1,2
org.apache.openjpa.persistence.proxy.entities.Person.setPicture(Byte[]),2,5
org.apache.openjpa.persistence.proxy.entities.Person.getTimeOfBirth(),3,5
org.apache.openjpa.persistence.proxy.entities.Person.setTimeOfBirth(Date),4,10
org.apache.openjpa.persistence.proxy.entities.Person.getContact(),1,3
org.apache.openjpa.persistence.proxy.entities.Person.setContact(IContact),2,6
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl4.InterfaceTestImpl4(),2,2
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl4.InterfaceTestImpl4(String),5,7
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl4.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl4.setStringField(String),4,8
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl4.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl4.setIntField(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityB.EntityB(String),3,5
org.apache.openjpa.persistence.delimited.identifiers.EntityB.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityB.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityB.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityB.setName(String),4,10
org.apache.openjpa.persistence.models.company.idclass.LineItem.setQuantity(int),2,5
org.apache.openjpa.persistence.models.company.idclass.LineItem.getQuantity(),1,2
org.apache.openjpa.persistence.models.company.idclass.LineItem.setProduct(IProduct),2,7
org.apache.openjpa.persistence.models.company.idclass.LineItem.getProduct(),1,3
org.apache.openjpa.persistence.cascade.Edge.Edge(),1,1
org.apache.openjpa.persistence.cascade.Edge.Edge(Vertex),4,5
org.apache.openjpa.persistence.cascade.Edge.setTarget(Vertex),4,6
org.apache.openjpa.persistence.cascade.Edge.getOid(),1,2
org.apache.openjpa.persistence.kernel.common.apps.UnAnnotPojo.UnAnnotPojo(),2,2
org.apache.openjpa.persistence.kernel.common.apps.UnAnnotPojo.UnAnnotPojo(String),4,6
org.apache.openjpa.persistence.kernel.common.apps.UnAnnotPojo.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.UnAnnotPojo.setName(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.UnAnnotPojo.getNum(),1,2
org.apache.openjpa.persistence.kernel.common.apps.UnAnnotPojo.setNum(int),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest4.RuntimeTest4(String),5,6
org.apache.openjpa.persistence.query.common.apps.RuntimeTest4.setName(String),4,6
org.apache.openjpa.persistence.query.common.apps.RuntimeTest4.getName(),2,3
org.apache.openjpa.persistence.query.common.apps.RuntimeTest4.getRuntimeTest5s(),3,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest4.setRuntimeTest5s(Collection),4,6
org.apache.openjpa.persistence.models.company.IPartTimeEmployee.setWage(float),2,3
org.apache.openjpa.persistence.models.company.IPartTimeEmployee.getWage(),1,1
org.apache.openjpa.persistence.models.company.IPartTimeEmployee.setWeeklyHours(int),3,5
org.apache.openjpa.persistence.models.company.IPartTimeEmployee.getWeeklyHours(),2,2
org.apache.openjpa.persistence.relations.ConcurrentEntityRight.ConcurrentEntityRight(),6,12
org.apache.openjpa.persistence.relations.ConcurrentEntityRight.getId(),0,0
org.apache.openjpa.persistence.relations.ConcurrentEntityRight.setId(int),1,1
org.apache.openjpa.persistence.relations.ConcurrentEntityRight.getStrData(),3,5
org.apache.openjpa.persistence.relations.ConcurrentEntityRight.setStrData(String),4,10
org.apache.openjpa.persistence.relations.ConcurrentEntityRight.getLeftEntityMap(),5,11
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppB.setStringB(String),2,4
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppB.getStringB(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppB.setIntB(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppB.getIntB(),0,0
org.apache.openjpa.persistence.jdbc.query.cache.TestQueryTimestampEviction.setUp(),19,29
org.apache.openjpa.persistence.jdbc.query.cache.TestQueryTimestampEviction.testEmptyResultTimeout(),49,82
org.apache.openjpa.persistence.jdbc.query.cache.TestQueryTimestampEviction.testTimestampEvictionEnablement(),15,25
org.apache.openjpa.persistence.jdbc.query.cache.TestQueryTimestampEviction.testLoadQueries(),31,52
org.apache.openjpa.persistence.jdbc.query.cache.TestQueryTimestampEviction.testWriteLock(),41,67
org.apache.openjpa.persistence.jdbc.query.cache.TestQueryTimestampEviction.testWriteLock().$1.run(),4,5
org.apache.openjpa.persistence.kernel.common.apps.MixedInterfaceImpl.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.MixedInterfaceImpl.setIntField(int),2,3
org.apache.openjpa.persistence.jdbc.annotations.ExtensionsEntity.getExternalValues(),2,4
org.apache.openjpa.persistence.jdbc.annotations.ExtensionsEntity.setExternalValues(char),3,9
org.apache.openjpa.persistence.jdbc.annotations.ExtensionsEntity.getExternalizer(),1,2
org.apache.openjpa.persistence.jdbc.annotations.ExtensionsEntity.setExternalizer(Class),2,5
org.apache.openjpa.persistence.jdbc.common.apps.HorizK.setStringK(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizK.getStringK(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizK.setIntK(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizK.getIntK(),0,0
org.apache.openjpa.persistence.kernel.common.apps.PCFile.PCFile(),1,1
"org.apache.openjpa.persistence.kernel.common.apps.PCFile.PCFile(PCDirectory,String)",9,20
org.apache.openjpa.persistence.kernel.common.apps.PCFile.getDir(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCFile.getName(),2,3
org.apache.openjpa.persistence.detachment.TestDetachNoStateField.setUp(Object),14,20
org.apache.openjpa.persistence.detachment.TestDetachNoStateField.testIsDetchedNoStateManagerZeroVersionField(),20,52
org.apache.openjpa.persistence.detachment.TestDetachNoStateField.testPersistRelationshipToDetchedEntityZeroVersion(),30,74
org.apache.openjpa.persistence.detachment.TestDetachNoStateField.testSetVersionPropertyAccess(),10,20
org.apache.openjpa.persistence.detachment.TestDetachNoStateField.loadDB(),21,34
org.apache.openjpa.persistence.strategy.value.TestValueStrategy.setUp(),8,9
org.apache.openjpa.persistence.strategy.value.TestValueStrategy.testIt(),8,14
org.apache.openjpa.persistence.strategy.value.TestValueStrategy.create(),15,31
org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.setUp(),2,3
org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.setUp(Object),11,27
"org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.findUserIdentity(EntityManager,int)",4,8
"org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.findDepartment(EntityManager,int)",3,5
org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.createUserIdentity(),3,9
"org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.createAccount(String,IUserIdentity)",7,12
org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.createDepartment(),2,5
org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.createMember(String),4,6
org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.createEmployee(),2,5
org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.createEmployees(),6,7
org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.createProducts(),6,7
org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.createAwards(),6,7
org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.createLocations(),6,7
org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.createCertifications(),6,7
org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.createAccounts(),6,7
"org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.getEmployee(Collection<IEmployee>,int)",5,11
"org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxy.getProduct(Collection<Product>,int)",5,11
org.apache.openjpa.persistence.distinctjoin.LocalizedText.LocalizedText(),6,6
org.apache.openjpa.persistence.distinctjoin.LocalizedText.getTextDe(),2,3
org.apache.openjpa.persistence.distinctjoin.LocalizedText.setTextDe(String),3,6
org.apache.openjpa.persistence.distinctjoin.LocalizedText.getTextEn(),2,3
org.apache.openjpa.persistence.distinctjoin.LocalizedText.setTextEn(String),3,6
org.apache.openjpa.persistence.jdbc.version.model.ShortVersion.getId(),0,0
org.apache.openjpa.persistence.jdbc.version.model.ShortVersion.setId(int),1,1
org.apache.openjpa.persistence.jdbc.version.model.ShortVersion.getVersion(),1,2
org.apache.openjpa.persistence.jdbc.version.model.ShortVersion.setVersion(short),2,5
org.apache.openjpa.persistence.embed.Embed_Coll_Embed.getIntVal1(),1,2
org.apache.openjpa.persistence.embed.Embed_Coll_Embed.setIntVal1(int),2,5
org.apache.openjpa.persistence.embed.Embed_Coll_Embed.getIntVal2(),1,2
org.apache.openjpa.persistence.embed.Embed_Coll_Embed.setIntVal2(int),2,5
org.apache.openjpa.persistence.embed.Embed_Coll_Embed.getIntVal3(),1,2
org.apache.openjpa.persistence.embed.Embed_Coll_Embed.setIntVal3(int),2,5
org.apache.openjpa.persistence.embed.Embed_Coll_Embed.getEmbeds(),3,4
org.apache.openjpa.persistence.embed.Embed_Coll_Embed.addEmbed(Embed),3,7
"org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryMapEntity.MaxQueryMapEntity(int,int,String)",8,14
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryMapEntity.MaxQueryMapEntity(),4,4
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryMapEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryMapEntity.setId(int),1,1
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryMapEntity.getRevision(),1,2
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryMapEntity.setRevision(int),2,5
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryMapEntity.getRefEntity(),4,7
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryMapEntity.setRefEntity(MaxQueryEntity),5,12
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryMapEntity.getSelectCriteria(),3,5
org.apache.openjpa.persistence.jdbc.query.sub.MaxQueryMapEntity.setSelectCriteria(String),4,10
org.apache.openjpa.persistence.jdbc.schema.TestSchema.TestSchema(),4,6
org.apache.openjpa.persistence.jdbc.schema.TestSchema.TestSchema(String),3,5
org.apache.openjpa.persistence.jdbc.schema.TestSchema.testSchema(),10,94
org.apache.openjpa.persistence.jdbc.schema.TestSchema.testTable(),22,183
org.apache.openjpa.persistence.jdbc.schema.TestSchema.testIndex(),20,95
org.apache.openjpa.persistence.jdbc.schema.TestSchema.testForeignKey(),26,147
org.apache.openjpa.persistence.jdbc.schema.TestSchema.testSchemaGroup(),8,52
org.apache.openjpa.persistence.jdbc.schema.TestSchema.testPrimaryKeyRemoval(),14,67
org.apache.openjpa.persistence.jdbc.schema.TestSchema.testColumnRemoval(),17,94
org.apache.openjpa.persistence.jdbc.schema.TestSchema.main(String[]),5,6
org.apache.openjpa.persistence.jpql.entities.OrderedOneToManyEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.entities.OrderedOneToManyEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.entities.OrderedOneToManyEntity.getEntities(),4,5
org.apache.openjpa.persistence.jpql.entities.OrderedOneToManyEntity.setEntities(List<INameEntity>),6,8
org.apache.openjpa.persistence.jpql.entities.OrderedOneToManyEntity.addEntity(INameEntity),6,14
org.apache.openjpa.persistence.jpql.entities.OrderedOneToManyEntity.removeEntity(int),7,17
"org.apache.openjpa.persistence.jpql.entities.OrderedOneToManyEntity.insertEntity(int,INameEntity)",8,16
org.apache.openjpa.persistence.jpql.entities.OrderedOneToManyEntity.toString(),3,4
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.PhoneNumber.getDivision(),1,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.PhoneNumber.setDivision(Division),2,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.PhoneNumber.getNumber(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.PhoneNumber.setNumber(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.PhoneNumber.getEmployees(),5,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.PhoneNumber.addEmployees(Division,Employee)",5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.PhoneNumber.removeEmployee(Division),4,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex1.PhoneNumber.equals(Object),16,45
org.apache.openjpa.persistence.jdbc.sqlcache.TestDefaultQueryStatistics.setUp(),5,7
org.apache.openjpa.persistence.jdbc.sqlcache.TestDefaultQueryStatistics.testThreadSafety(),19,32
org.apache.openjpa.persistence.jdbc.sqlcache.TestDefaultQueryStatistics.testThreadSafety().$1.run(),7,8
org.apache.openjpa.persistence.jdbc.sqlcache.TestDefaultQueryStatistics.testStatsSize(),12,15
org.apache.openjpa.persistence.jdbc.sqlcache.TestDefaultQueryStatistics.testQueryStatisticsIsDisabledByDefault(),16,30
org.apache.openjpa.persistence.merge.model.ShipPackage2.setId(long),2,3
org.apache.openjpa.persistence.merge.model.ShipPackage2.getId(),0,0
org.apache.openjpa.persistence.merge.model.ShipPackage2.setLabel2(Label2),2,4
org.apache.openjpa.persistence.merge.model.ShipPackage2.getLabel2(),1,3
org.apache.openjpa.persistence.embed.Item3.getId(),0,0
org.apache.openjpa.persistence.embed.Item3.setId(int),1,1
org.apache.openjpa.persistence.embed.Item3.getImages(),3,5
"org.apache.openjpa.persistence.embed.Item3.addImage(String,String)",6,13
org.apache.openjpa.persistence.embed.attrOverrides.XMLOverEntity.setId(int),1,1
org.apache.openjpa.persistence.embed.attrOverrides.XMLOverEntity.getId(),0,0
org.apache.openjpa.persistence.embed.attrOverrides.XMLOverEntity.setEmbed(AnnoOverEmbed),3,7
org.apache.openjpa.persistence.embed.attrOverrides.XMLOverEntity.getEmbed(),2,4
org.apache.openjpa.persistence.jdbc.kernel.TestCircularFK.TestCircularFK(String),4,5
org.apache.openjpa.persistence.jdbc.kernel.TestCircularFK.TestCircularFK(),4,6
org.apache.openjpa.persistence.jdbc.kernel.TestCircularFK.setUp(),13,35
org.apache.openjpa.persistence.jdbc.kernel.TestCircularFK.testInsert(),16,35
org.apache.openjpa.persistence.jdbc.kernel.TestCircularFK.testDelete(),14,36
org.apache.openjpa.persistence.jdbc.kernel.TestCircularFK.testUpdate(),14,59
org.apache.openjpa.persistence.jpql.clauses.TestEJBDeleteUpdateImpl.TestEJBDeleteUpdateImpl(),5,5
org.apache.openjpa.persistence.jpql.clauses.TestEJBDeleteUpdateImpl.TestEJBDeleteUpdateImpl(String),8,9
org.apache.openjpa.persistence.jpql.clauses.TestEJBDeleteUpdateImpl.setUp(),13,39
org.apache.openjpa.persistence.jpql.clauses.TestEJBDeleteUpdateImpl.testUpdate1(),26,67
org.apache.openjpa.persistence.jpql.clauses.TestEJBDeleteUpdateImpl.testUpdate2(),24,65
org.apache.openjpa.persistence.jpql.clauses.TestEJBDeleteUpdateImpl.testDelete1(),22,51
org.apache.openjpa.persistence.jpql.clauses.TestEJBDeleteUpdateImpl.testDelete2(),20,43
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubE.setStringFieldE(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubE.getStringFieldE(),2,5
org.apache.openjpa.persistence.enhance.identity.Library.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.Library.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.Library.getBooks(),3,4
org.apache.openjpa.persistence.enhance.identity.Library.getBook(String),5,9
org.apache.openjpa.persistence.enhance.identity.Library.addBook(Book),5,10
org.apache.openjpa.persistence.enhance.identity.Library.getLocation(),2,3
org.apache.openjpa.persistence.enhance.identity.Library.setLocation(String),3,6
org.apache.openjpa.persistence.enhance.identity.Library.equals(Object),4,8
org.apache.openjpa.persistence.enhance.identity.Library.hashCode(),3,5
org.apache.openjpa.persistence.models.company.IProduct.setName(String),3,4
org.apache.openjpa.persistence.models.company.IProduct.getName(),2,2
org.apache.openjpa.persistence.models.company.IProduct.setImage(byte[]),2,3
org.apache.openjpa.persistence.models.company.IProduct.getImage(),1,1
org.apache.openjpa.persistence.models.company.IProduct.setPrice(float),2,3
org.apache.openjpa.persistence.models.company.IProduct.getPrice(),1,1
org.apache.openjpa.persistence.models.company.IProduct.setDistributors(Set<>),3,5
org.apache.openjpa.persistence.models.company.IProduct.getDistributors(),3,3
org.apache.openjpa.persistence.jpql.functions.TestSetParameter.setUp(),20,35
org.apache.openjpa.persistence.jpql.functions.TestSetParameter.testSetPositionalParameter(),25,45
org.apache.openjpa.persistence.jpql.functions.TestSetParameter.testSetPositionalParameterInNonIntutiveOrder(),26,46
org.apache.openjpa.persistence.jpql.functions.TestSetParameter.testSetNamedParameter(),25,49
org.apache.openjpa.persistence.jpql.functions.TestSetParameter.testNativeSQL(),29,49
org.apache.openjpa.persistence.jpql.functions.TestSetParameter.testMissingFirstPositionalParameter(),24,32
org.apache.openjpa.persistence.jpql.functions.TestSetParameter.testMixedParameterTypesParameter(),24,34
"org.apache.openjpa.persistence.jpql.functions.TestSetParameter.createUser(String,String,int,boolean)",15,57
org.apache.openjpa.persistence.jpql.functions.TestSetParameter.verifyUpdate(),13,24
org.apache.openjpa.persistence.compat.TestMessageListener.setUp(),6,7
org.apache.openjpa.persistence.compat.TestMessageListener.testUpdateInPreUpdate(),68,252
org.apache.openjpa.persistence.compat.TestMessageListener.testUpdateInPreUpdate2(),71,281
"org.apache.openjpa.persistence.compat.TestMessageListener.assertStatus(int,int,int,int,int,int,int)",12,92
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.CalendarFields(),2,2
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.setGmt(Calendar),3,6
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.getGmt(),2,3
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.setPacific(Calendar),3,6
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.getPacific(),2,3
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.setNewYork(Calendar),3,6
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.getNewYork(),2,3
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.setBerlin(Calendar),3,6
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.getBerlin(),2,3
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.setSingapore(Calendar),3,6
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.getSingapore(),2,3
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.setUnassigned(Calendar),3,6
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.getUnassigned(),2,3
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.getCalendars(),10,11
org.apache.openjpa.persistence.kernel.common.apps.CalendarFields.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.Employee.getPhoneNumbers(),4,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.Employee.addPhoneNumber(FullName,PhoneNumber)",4,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.Employee.removePhoneNumber(FullName),4,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex8.Employee.equals(Object),14,43
org.apache.openjpa.persistence.kernel.TestEJBLobs.TestEJBLobs(String),6,7
org.apache.openjpa.persistence.kernel.TestEJBLobs.setUp(),20,60
org.apache.openjpa.persistence.kernel.TestEJBLobs.testOtherFields(),5,6
org.apache.openjpa.persistence.kernel.TestEJBLobs.testClob(),5,7
org.apache.openjpa.persistence.kernel.TestEJBLobs.testBlob(),5,9
org.apache.openjpa.persistence.kernel.TestEJBLobs.testSetNull(),7,15
org.apache.openjpa.persistence.kernel.TestEJBLobs.testDelete(),3,4
org.apache.openjpa.persistence.kernel.TestEJBLobs.testUpdate(),11,26
org.apache.openjpa.persistence.kernel.TestEJBLobs.Inner.getString(),1,3
org.apache.openjpa.persistence.kernel.TestEJBLobs.Inner.setString(String),3,6
org.apache.openjpa.persistence.kernel.TestEJBLobs.Inner.getClob(),3,4
org.apache.openjpa.persistence.kernel.TestEJBLobs.Inner.setClob(String),5,7
org.apache.openjpa.persistence.kernel.TestEJBLobs.Inner.getEBlob(),3,4
org.apache.openjpa.persistence.kernel.TestEJBLobs.Inner.setEBlob(String),5,6
org.apache.openjpa.persistence.kernel.TestEJBLobs.Inner.getBlob(),3,4
org.apache.openjpa.persistence.kernel.TestEJBLobs.Inner.setBlob(Inner2),5,7
org.apache.openjpa.persistence.kernel.TestEJBLobs.Inner2.getString(),1,3
org.apache.openjpa.persistence.kernel.TestEJBLobs.Inner2.setString(String),2,6
org.apache.openjpa.persistence.kernel.common.apps.Lobs.Lobs(),1,1
org.apache.openjpa.persistence.kernel.common.apps.Lobs.Lobs(int),2,3
org.apache.openjpa.persistence.kernel.common.apps.Lobs.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.Lobs.setId(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.Lobs.getLobNullable(),3,5
org.apache.openjpa.persistence.kernel.common.apps.Lobs.setLobNullable(String),4,8
org.apache.openjpa.persistence.kernel.common.apps.Lobs.getLobNotNullable(),3,5
org.apache.openjpa.persistence.kernel.common.apps.Lobs.setLobNotNullable(String),4,8
org.apache.openjpa.persistence.kernel.TestPCClass.TestPCClass(),3,4
org.apache.openjpa.persistence.kernel.TestPCClass.TestPCClass(String),2,4
org.apache.openjpa.persistence.kernel.TestPCClass.setUp(),2,3
org.apache.openjpa.persistence.kernel.TestPCClass.testMetaData(),25,219
org.apache.openjpa.persistence.kernel.TestPCClass.testPersist(),12,36
org.apache.openjpa.persistence.jpql.version.type.LongVersionEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.version.type.LongVersionEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.version.type.LongVersionEntity.getVersion(),1,2
org.apache.openjpa.persistence.kernel.common.apps.PCPerson.PCPerson(),1,1
org.apache.openjpa.persistence.kernel.common.apps.PCPerson.PCPerson(String),4,6
org.apache.openjpa.persistence.kernel.common.apps.PCPerson.getAddress(),1,3
org.apache.openjpa.persistence.kernel.common.apps.PCPerson.setAddress(PCAddress),2,6
org.apache.openjpa.persistence.kernel.common.apps.PCPerson.getChildren(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCPerson.setChildren(Set),2,6
org.apache.openjpa.persistence.kernel.common.apps.PCPerson.addChildren(PCPerson),6,11
org.apache.openjpa.persistence.kernel.common.apps.PCPerson.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCPerson.setName(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.PCPerson.getParent(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCPerson.setParent(PCPerson),3,6
"org.apache.openjpa.persistence.kernel.common.apps.PCPerson.reflect(PCPerson,String)",10,15
org.apache.openjpa.persistence.jdbc.order.Owner.setCars(Collection<Car>),4,7
org.apache.openjpa.persistence.jdbc.order.Owner.getCars(),3,4
org.apache.openjpa.persistence.jdbc.order.Owner.setHomes(Collection<Home>),4,7
org.apache.openjpa.persistence.jdbc.order.Owner.getHomes(),3,4
org.apache.openjpa.persistence.jdbc.order.Owner.setBikeColl(Collection<Bicycle>),5,11
org.apache.openjpa.persistence.jdbc.order.Owner.getBikeColl(),4,6
org.apache.openjpa.persistence.jdbc.order.Owner.setWidgets(Collection<Widget>),4,7
org.apache.openjpa.persistence.jdbc.order.Owner.getWidgets(),3,4
org.apache.openjpa.persistence.managedinterface.ManagedInterfaceEmbed.getEmbedIntField(),2,2
org.apache.openjpa.persistence.managedinterface.ManagedInterfaceEmbed.setEmbedIntField(int),3,3
org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.setUp(),2,3
org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.setUp(Object),11,27
"org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.findUserIdentity(EntityManager,int)",4,8
"org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.findDepartment(EntityManager,int)",3,5
org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.createUserIdentity(),3,9
"org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.createAccount(String,IUserIdentity)",7,12
org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.createDepartment(),2,5
org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.createMember(String),4,6
org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.createEmployee(),2,5
org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.createEmployees(),6,7
org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.createProducts(),6,7
org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.createAwards(),6,7
org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.createLocations(),6,7
org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.createCertifications(),6,7
org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.createAccounts(),6,7
"org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.getEmployee(Collection<IEmployee>,int)",5,10
"org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxy.getProduct(Collection<Product>,int)",5,10
org.apache.openjpa.persistence.kernel.common.apps.AppIdClassString.AppIdClassString(),2,2
org.apache.openjpa.persistence.kernel.common.apps.AppIdClassString.AppIdClassString(int),2,2
org.apache.openjpa.persistence.kernel.common.apps.AppIdClassString.getPk(),0,0
org.apache.openjpa.persistence.kernel.common.apps.AppIdClassString.Idkey.Idkey(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AppIdClassString.Idkey.Idkey(String),4,4
org.apache.openjpa.persistence.kernel.common.apps.AppIdClassString.Idkey.hashCode(),2,2
org.apache.openjpa.persistence.kernel.common.apps.AppIdClassString.Idkey.toString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AppIdClassString.Idkey.equals(Object),3,3
org.apache.openjpa.persistence.xml.XmlOverrideEntity.getId(),0,0
org.apache.openjpa.persistence.xml.XmlOverrideEntity.setId(int),1,1
org.apache.openjpa.persistence.xml.XmlOverrideEntity.getName(),2,3
org.apache.openjpa.persistence.xml.XmlOverrideEntity.setName(String),3,6
org.apache.openjpa.persistence.xml.XmlOverrideEntity.getDescription(),2,3
org.apache.openjpa.persistence.xml.XmlOverrideEntity.setDescription(String),3,6
org.apache.openjpa.persistence.xml.XmlOverrideEntity.getPicture(),1,2
org.apache.openjpa.persistence.xml.XmlOverrideEntity.setPicture(Byte[]),2,5
org.apache.openjpa.persistence.query.Order.Order(),0,0
"org.apache.openjpa.persistence.query.Order.Order(double,boolean,Customer)",5,9
org.apache.openjpa.persistence.query.Order.getAmount(),1,2
org.apache.openjpa.persistence.query.Order.setAmount(double),2,5
org.apache.openjpa.persistence.query.Order.getCustomer(),1,3
org.apache.openjpa.persistence.query.Order.setCustomer(Customer),2,6
org.apache.openjpa.persistence.query.Order.isDelivered(),1,2
org.apache.openjpa.persistence.query.Order.setDelivered(boolean),2,5
org.apache.openjpa.persistence.query.Order.getOid(),1,2
org.apache.openjpa.persistence.query.Order.toString(),6,11
org.apache.openjpa.persistence.query.Order.getLineitems(),3,4
org.apache.openjpa.persistence.query.Order.setLineitems(Collection<OrderItem>),4,7
org.apache.openjpa.persistence.query.Order.getOrderTs(),1,1
org.apache.openjpa.persistence.query.Order.setOrderTs(Timestamp),2,2
org.apache.openjpa.persistence.lock.extended.LSESngTblAbs.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSESngTblAbs.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSESngTblAbs.getFirstName(),2,3
org.apache.openjpa.persistence.lock.extended.LSESngTblAbs.setFirstName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSESngTblAbs.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSESngTblAbs.toString(),10,13
org.apache.openjpa.persistence.lock.extended.LSESngTblAbs.readExternal(ObjectInput),9,14
org.apache.openjpa.persistence.lock.extended.LSESngTblAbs.writeExternal(ObjectOutput),7,11
org.apache.openjpa.persistence.kernel.TestSequence.TestSequence(),4,6
org.apache.openjpa.persistence.kernel.TestSequence.TestSequence(String),4,5
org.apache.openjpa.persistence.kernel.TestSequence.setUp(),3,4
org.apache.openjpa.persistence.kernel.TestSequence.testSequence(),14,28
org.apache.openjpa.persistence.jdbc.order.Trainer.Trainer(),1,1
org.apache.openjpa.persistence.jdbc.order.Trainer.Trainer(String),4,6
org.apache.openjpa.persistence.jdbc.order.Trainer.setPlayersTrained(List<Player>),5,11
org.apache.openjpa.persistence.jdbc.order.Trainer.getPlayersTrained(),4,6
org.apache.openjpa.persistence.kernel.common.apps.PersistentMapHolder.getNamedMap(String),10,123
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1.ModRuntimeTest1(),3,3
"org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1.ModRuntimeTest1(String,int)",6,9
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1.setIntField(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1.setStringField(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1.getSelfOneOne(),4,5
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1.setSelfOneOne(ModRuntimeTest1),5,8
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1.getSelfOneMany(),2,3
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1.setSelfOneMany(Set),2,6
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1.toString(),2,8
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1.getLocaleField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1.setLocaleField(Locale),3,10
org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass.IdClassEntity.IdClassEntity(),2,2
org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass.IdClassEntity.getId(),0,0
org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass.IdClassEntity.setId(int),1,1
org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass.IdClassEntity.getSomeData(),2,3
org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass.IdClassEntity.setSomeData(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.SingleIdChar.correctIdClass(Class),2,2
org.apache.openjpa.persistence.kernel.common.apps.SingleIdChar.getPk(),0,0
org.apache.openjpa.persistence.kernel.common.apps.SingleIdChar.getPkString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.SingleIdChar.setPk(char),1,1
org.apache.openjpa.persistence.kernel.common.apps.SingleIdChar.getString(),2,3
org.apache.openjpa.persistence.kernel.common.apps.SingleIdChar.setString(String),3,4
org.apache.openjpa.persistence.kernel.TestEJBState.TestEJBState(String),5,6
org.apache.openjpa.persistence.kernel.TestEJBState.setUp(),5,6
org.apache.openjpa.persistence.kernel.TestEJBState.testBigDecimalsLoseTrailingZeros(),18,41
org.apache.openjpa.persistence.kernel.TestProxies2.TestProxies2(String),4,5
org.apache.openjpa.persistence.kernel.TestProxies2.setUp(),25,112
org.apache.openjpa.persistence.kernel.TestProxies2.testStringSet(),23,81
org.apache.openjpa.persistence.kernel.TestProxies2.testStringMap(),22,67
org.apache.openjpa.persistence.kernel.TestProxies2.testProxySet(),24,115
org.apache.openjpa.persistence.kernel.TestProxies2.testProxyMap(),24,108
org.apache.openjpa.persistence.kernel.TestProxies2.testReplace(),18,35
org.apache.openjpa.persistence.kernel.TestProxies2.testComparators(),23,61
org.apache.openjpa.persistence.kernel.TestProxies2.testChangeListOrder(),31,303
org.apache.openjpa.persistence.kernel.TestProxies2.testDate(),21,43
org.apache.openjpa.persistence.kernel.TestProxies2.testSQLDate(),23,51
org.apache.openjpa.persistence.kernel.TestProxies2.testTimestamp(),22,41
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.EmployeeName.EmployeeName(),2,2
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.EmployeeName.EmployeeName(String,String)",3,10
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.EmployeeName.getFName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.EmployeeName.setFName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.EmployeeName.getLName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.EmployeeName.setLName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.EmployeeName.equals(Object),4,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex3.EmployeeName.hashCode(),4,13
org.apache.openjpa.persistence.kernel.TestExtents2.TestExtents2(String),4,5
org.apache.openjpa.persistence.kernel.TestExtents2.TestExtents2(),4,6
org.apache.openjpa.persistence.kernel.TestExtents2.setUp(),12,58
org.apache.openjpa.persistence.kernel.TestExtents2.testProperties(),12,38
org.apache.openjpa.persistence.kernel.TestExtents2.testNoSubclasses(),15,23
org.apache.openjpa.persistence.kernel.TestExtents2.testSubclasses(),16,48
org.apache.openjpa.persistence.kernel.TestExtents2.testContainsNewlyPersisted(),29,67
org.apache.openjpa.persistence.kernel.TestExtents2.testNotContainsNewlyDeleted(),30,69
org.apache.openjpa.persistence.kernel.common.apps.AImplB.AImplB(),1,1
"org.apache.openjpa.persistence.kernel.common.apps.AImplB.AImplB(String,int,String)",4,7
org.apache.openjpa.persistence.kernel.common.apps.AImplB.setName(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.AImplB.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AImplB.setPK1(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.AImplB.getPK1(),0,0
org.apache.openjpa.persistence.kernel.common.apps.AImplB.setPK2(String),2,2
org.apache.openjpa.persistence.kernel.common.apps.AImplB.getPK2(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AImplB.Idkey.Idkey(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AImplB.Idkey.Idkey(String),7,15
org.apache.openjpa.persistence.kernel.common.apps.AImplB.Idkey.toString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AImplB.Idkey.equals(Object),3,6
org.apache.openjpa.persistence.kernel.common.apps.AImplB.Idkey.hashCode(),2,4
org.apache.openjpa.persistence.kernel.common.apps.AttachD.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.AttachD.setDstr(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachD.getDstr(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AttachD.setDint(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachD.getDint(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachD.setDdbl(double),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachD.getDdbl(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachD.getA(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AttachD.setA(AttachA),2,2
org.apache.openjpa.persistence.kernel.common.apps.AttachD.setBs(Set),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachD.getBs(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AttachD.setPcStringMap(Map),3,10
org.apache.openjpa.persistence.kernel.common.apps.AttachD.getPcStringMap(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachD.setBigIntegerPCMap(TreeMap),4,11
org.apache.openjpa.persistence.kernel.common.apps.AttachD.getBigIntegerPCMap(),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachD.setEmbeddedE(AttachE),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachD.getEmbeddedE(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AttachD.setEmbeddedA(AttachA),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachD.getEmbeddedA(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AttachD.getVersion(),2,3
org.apache.openjpa.persistence.kernel.common.apps.State.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.State.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.State.setName(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.State.getOutgoingTransitions(),4,6
org.apache.openjpa.persistence.kernel.common.apps.State.addOutgoingTransitions(Transition),6,18
org.apache.openjpa.persistence.kernel.common.apps.State.getIncomingTransitions(),4,6
org.apache.openjpa.persistence.kernel.common.apps.State.addIncomingTransitions(Transition),6,18
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubB.setStringFieldB(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubB.getStringFieldB(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubB.setPkb(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubB.getPkb(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubB.ID.ID(),0,0
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubB.ID.ID(String),2,4
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubB.ID.hashCode(),6,11
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubB.ID.equals(Object),3,8
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubB.ID.toString(),3,5
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubB.ID.fromString(String),6,16
"org.apache.openjpa.persistence.datacache.CacheTestBroker.newQueryImpl(String,StoreQuery)",7,12
org.apache.openjpa.persistence.datacache.CacheTestBroker.CachedQueryResult.CachedQueryResult(List),4,6
"org.apache.openjpa.persistence.datacache.CacheTestBroker.CacheTestQuery.CacheTestQuery(Broker,String,StoreQuery)",7,13
"org.apache.openjpa.persistence.datacache.CacheTestBroker.CacheTestQuery.toResult(StoreQuery,StoreQuery.Executor,ResultObjectProvider,StoreQuery.Range)",15,53
org.apache.openjpa.persistence.jdbc.query.cache.PartBase.PartBase(),1,1
"org.apache.openjpa.persistence.jdbc.query.cache.PartBase.PartBase(int,String,double,double)",7,15
org.apache.openjpa.persistence.jdbc.query.cache.PartBase.getCost(),1,2
org.apache.openjpa.persistence.jdbc.query.cache.PartBase.setCost(double),2,5
org.apache.openjpa.persistence.jdbc.query.cache.PartBase.getMass(),1,2
org.apache.openjpa.persistence.jdbc.query.cache.PartBase.setMass(double),2,5
org.apache.openjpa.persistence.jdbc.query.cache.PartBase.getSuppliers(),3,4
org.apache.openjpa.persistence.jdbc.query.cache.PartBase.setSuppliers(List<Supplier>),4,7
org.apache.openjpa.persistence.jdbc.query.cache.PartBase.toString(),11,20
org.apache.openjpa.persistence.jdbc.query.cache.PartBase.getBackOrder(),0,0
org.apache.openjpa.persistence.jdbc.query.cache.PartBase.setBackOrder(int),1,1
org.apache.openjpa.persistence.meta.TestFieldDeclarationOrder.TestFieldDeclarationOrder(String),5,7
org.apache.openjpa.persistence.meta.TestFieldDeclarationOrder.testSubclass(),19,73
org.apache.openjpa.persistence.meta.TestFieldDeclarationOrder.testSuperclass(),17,48
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC.EmbeddedOwnerPC(),2,2
"org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC.EmbeddedOwnerPC(int,int)",2,2
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC.getId1(),0,0
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC.getId2(),0,0
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC.getEmbedded(),1,3
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC.setEmbedded(EmbeddedPC),2,6
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC.setStringField(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC.getComplexEmbedded(),2,6
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC.setComplexEmbedded(ComplexEmbeddedPC),3,11
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC.EmbKey.EmbKey(),2,2
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC.EmbKey.EmbKey(String),8,18
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC.EmbKey.equals(Object),5,11
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC.EmbKey.hashCode(),2,4
org.apache.openjpa.persistence.proxy.delayed.lhset.Employee.setEmpName(String),4,10
org.apache.openjpa.persistence.proxy.delayed.lhset.Employee.getEmpName(),3,5
org.apache.openjpa.persistence.proxy.delayed.lhset.Employee.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.lhset.Employee.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.lhset.Employee.setDept(IDepartment),3,6
org.apache.openjpa.persistence.proxy.delayed.lhset.Employee.getDept(),2,3
org.apache.openjpa.persistence.proxy.delayed.lhset.Employee.hashCode(),2,2
org.apache.openjpa.persistence.proxy.delayed.lhset.Employee.equals(Object),6,13
org.apache.openjpa.persistence.jdbc.oracle.PObjectNative.getId(),0,0
org.apache.openjpa.persistence.jdbc.oracle.PObjectNative.getName(),2,3
org.apache.openjpa.persistence.jdbc.oracle.PObjectNative.setName(String),3,4
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectBChild1.CacheObjectBChild1(),3,3
"org.apache.openjpa.persistence.datacache.common.apps.CacheObjectBChild1.CacheObjectBChild1(String,String)",6,8
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectBChild1.getStr1(),2,3
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectBChild1.setStr1(String),3,4
org.apache.openjpa.persistence.jdbc.sqlcache.Singer.Singer(),1,1
"org.apache.openjpa.persistence.jdbc.sqlcache.Singer.Singer(String,String,short,int)",5,11
org.apache.openjpa.persistence.jdbc.sqlcache.Singer.getCds(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.Singer.addCd(CD),5,9
org.apache.openjpa.persistence.proxy.delayed.pqueue.Employee.setEmpName(String),4,10
org.apache.openjpa.persistence.proxy.delayed.pqueue.Employee.getEmpName(),3,5
org.apache.openjpa.persistence.proxy.delayed.pqueue.Employee.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.pqueue.Employee.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.pqueue.Employee.setDept(IDepartment),3,6
org.apache.openjpa.persistence.proxy.delayed.pqueue.Employee.getDept(),2,3
org.apache.openjpa.persistence.proxy.delayed.pqueue.Employee.hashCode(),2,2
org.apache.openjpa.persistence.proxy.delayed.pqueue.Employee.equals(Object),6,13
org.apache.openjpa.persistence.proxy.delayed.pqueue.Employee.compareTo(Employee),5,13
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl2.InterfaceTestImpl2(),2,2
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl2.InterfaceTestImpl2(String),5,7
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl2.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl2.setStringField(String),4,8
org.apache.openjpa.persistence.proxy.entities.IAnnuityHolder.getCategory(),3,4
org.apache.openjpa.persistence.proxy.entities.IAnnuityHolder.setCategory(AnnuityHolderCategory),4,6
org.apache.openjpa.persistence.kernel.common.apps.ObjectCollectionHolder.setHashSet(HashSet),2,11
org.apache.openjpa.persistence.kernel.common.apps.ObjectCollectionHolder.getHashSet(),2,6
org.apache.openjpa.persistence.kernel.common.apps.ObjectCollectionHolder.addToHashSet(Object),4,7
org.apache.openjpa.persistence.kernel.common.apps.ObjectCollectionHolder.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ObjectCollectionHolder.setId(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.SingleIdString.correctIdClass(Class),3,3
org.apache.openjpa.persistence.kernel.common.apps.SingleIdString.getPk(),1,1
org.apache.openjpa.persistence.kernel.common.apps.SingleIdString.getPkString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.SingleIdString.setPk(String),2,2
org.apache.openjpa.persistence.kernel.common.apps.SingleIdString.getString(),2,3
org.apache.openjpa.persistence.kernel.common.apps.SingleIdString.setString(String),3,4
org.apache.openjpa.persistence.kernel.TestOpenResultsCommit.TestOpenResultsCommit(),5,8
org.apache.openjpa.persistence.kernel.TestOpenResultsCommit.TestOpenResultsCommit(String),5,8
org.apache.openjpa.persistence.kernel.TestOpenResultsCommit.setUp(),11,14
org.apache.openjpa.persistence.kernel.TestOpenResultsCommit.testCommitWithModeTransaction(),12,22
org.apache.openjpa.persistence.kernel.TestOpenResultsCommit.testCommitWithModeOpenJPAEntityManager(),15,25
org.apache.openjpa.persistence.kernel.TestOpenResultsCommit.testCommitWithModeOnDemand(),12,22
org.apache.openjpa.persistence.kernel.TestOpenResultsCommit.testCommitWithOpenResults(String),29,56
org.apache.openjpa.persistence.jdbc.meta.TestEJBConstantJoinOnSameRefTable.TestEJBConstantJoinOnSameRefTable(String),8,9
org.apache.openjpa.persistence.jdbc.meta.TestEJBConstantJoinOnSameRefTable.setUp(),13,34
org.apache.openjpa.persistence.jdbc.meta.TestEJBConstantJoinOnSameRefTable.testConstantManyToMany(),13,36
org.apache.openjpa.persistence.jdbc.meta.TestEJBConstantJoinOnSameRefTable.testConstantOneToOne1(),11,17
org.apache.openjpa.persistence.jdbc.meta.TestEJBConstantJoinOnSameRefTable.testSharedJoinTableModifications(),13,26
org.apache.openjpa.persistence.merge.model.Car.setId(long),1,1
org.apache.openjpa.persistence.merge.model.Car.getId(),0,0
org.apache.openjpa.persistence.merge.model.Car.setModel(Model),2,6
org.apache.openjpa.persistence.merge.model.Car.getModel(),1,3
org.apache.openjpa.persistence.jdbc.query.TestUpdateSingleValuedAssociationXML.setUp(),2,3
org.apache.openjpa.persistence.jdbc.query.TestUpdateSingleValuedAssociationXML.getPersistenceUnitName(),7,7
org.apache.openjpa.persistence.kernel.common.apps.AttachF.setFstr(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachF.getFstr(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AttachF.setFint(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachF.getFint(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachF.setFdbl(double),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachF.getFdbl(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachF.setE(AttachE),2,2
org.apache.openjpa.persistence.kernel.common.apps.AttachF.getE(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AttachF.setStrings(List),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachF.getStrings(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AttachF.ID.ID(),0,0
org.apache.openjpa.persistence.kernel.common.apps.AttachF.ID.ID(String),7,14
org.apache.openjpa.persistence.kernel.common.apps.AttachF.ID.hashCode(),2,4
org.apache.openjpa.persistence.kernel.common.apps.AttachF.ID.toString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachF.ID.equals(Object),2,3
org.apache.openjpa.persistence.kernel.common.apps.AttachF.setId1(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.AttachF.getId1(),0,0
org.apache.openjpa.persistence.kernel.common.apps.AttachF.setId2(String),2,2
org.apache.openjpa.persistence.kernel.common.apps.AttachF.getId2(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AttachF.setEmbeddedC(AttachC),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachF.getEmbeddedC(),2,3
org.apache.openjpa.persistence.meta.TestMetaDataRepository.setUp(),2,3
org.apache.openjpa.persistence.meta.TestMetaDataRepository.testPreloadBasic(),49,99
org.apache.openjpa.persistence.meta.TestMetaDataRepository.testPreloadCleanUp(),25,46
org.apache.openjpa.persistence.meta.TestMetaDataRepository.testXmlMappingPreload(),24,49
org.apache.openjpa.persistence.meta.TestMetaDataRepository.testPreloadConfiguration(),17,44
org.apache.openjpa.persistence.kernel.TestSerialize.TestSerialize(),4,6
org.apache.openjpa.persistence.kernel.TestSerialize.TestSerialize(String),4,5
org.apache.openjpa.persistence.kernel.TestSerialize.setUp(),13,19
org.apache.openjpa.persistence.kernel.TestSerialize.testConfigurationSerializable(),13,14
org.apache.openjpa.persistence.kernel.TestSerialize.testSerialize(),23,57
org.apache.openjpa.persistence.jdbc.order.ColDefTestEntity.setOne2Mcoldef(List<ColDefTestElement>),7,10
org.apache.openjpa.persistence.jdbc.order.ColDefTestEntity.getOne2Mcoldef(),6,7
org.apache.openjpa.persistence.jdbc.order.ColDefTestEntity.setCollcoldef(Set<ColDefTestElement>),6,10
org.apache.openjpa.persistence.jdbc.order.ColDefTestEntity.getCollcoldef(),6,7
org.apache.openjpa.persistence.jdbc.order.ColDefTestEntity.setM2mcoldef(List<ColDefTestElement>),7,10
org.apache.openjpa.persistence.jdbc.order.ColDefTestEntity.getM2mcoldef(),6,7
org.apache.openjpa.persistence.jdbc.order.ColDefTestEntity.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.ColDefTestEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalD.setStringD(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalD.getStringD(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalD.setIntD(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterVerticalD.getIntD(),0,0
org.apache.openjpa.persistence.jdbc.strategy.Person.Person(),1,1
org.apache.openjpa.persistence.jdbc.strategy.Person.getAge(),1,2
org.apache.openjpa.persistence.jdbc.strategy.Person.setAge(int),2,5
org.apache.openjpa.persistence.jdbc.strategy.Person.getName(),2,3
org.apache.openjpa.persistence.jdbc.strategy.Person.setName(String),3,6
org.apache.openjpa.persistence.jdbc.strategy.Person.getIdPerson(),1,2
org.apache.openjpa.persistence.jdbc.strategy.Person.setIdPerson(long),2,5
org.apache.openjpa.persistence.jdbc.strategy.Person.getAddress(),1,3
org.apache.openjpa.persistence.jdbc.strategy.Person.setAddress(Address),2,6
org.apache.openjpa.persistence.jpql.joins.TestEJBJoins.TestEJBJoins(String),6,7
org.apache.openjpa.persistence.jpql.joins.TestEJBJoins.setUp(),30,78
org.apache.openjpa.persistence.jpql.joins.TestEJBJoins.testInnerJoin(),19,27
org.apache.openjpa.persistence.jpql.joins.TestEJBJoins.testOuterJoin(),19,26
org.apache.openjpa.persistence.jpql.joins.TestEJBJoins.testFetchJoin1(),16,23
org.apache.openjpa.persistence.jpql.joins.TestEJBJoins.testFetchJoin2(),23,33
org.apache.openjpa.persistence.jpql.joins.TestEJBJoins.testLeftOuterJoin(),25,34
org.apache.openjpa.persistence.jpql.joins.TestEJBJoins.testInnerJoinFetch(),18,26
org.apache.openjpa.persistence.jpql.joins.TestEJBJoins.testLeftJoinFetch(),18,27
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.EntityF(String),3,5
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.getNonDelimName(),3,7
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.setNonDelimName(String),5,16
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.getSecName(),3,7
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.setSecName(String),5,16
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.getCollectionSet(),4,7
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.setCollectionSet(Set<String>),5,16
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.addCollectionSet(String),6,8
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.getCollectionDelimSet(),6,9
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.setCollectionDelimSet(Set<String>),7,21
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.addCollectionDelimSet(String),7,9
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.getCollectionMap(),4,9
"org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.setCollectionMap(Map<String,String>)",6,18
"org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.addCollectionMap(String,String)",7,11
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.getDelimCollectionMap(),4,12
"org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.setDelimCollectionMap(Map<String,String>)",6,24
"org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityF.addDelimCollectionMap(String,String)",7,13
org.apache.openjpa.persistence.query.TestAccessPathsOfSubqueries.TestAccessPathsOfSubqueries(String),6,7
org.apache.openjpa.persistence.query.TestAccessPathsOfSubqueries.testSimpleSubqueryAccessPath(),29,69
org.apache.openjpa.persistence.query.TestAccessPathsOfSubqueries.testRelationTraversalSubqueryAccessPath(),30,87
org.apache.openjpa.persistence.jdbc.common.apps.MultiF.setString1(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.MultiF.getString1(),1,3
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.RuntimeTest1(),2,2
"org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.RuntimeTest1(String,int)",10,14
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getByteField(),1,2
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setByteField(byte),2,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getBooleanField(),1,2
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setBooleanField(boolean),2,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getCharField(),1,2
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setCharField(char),2,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getDoubleField(),1,2
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setDoubleField(double),2,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getFloatField(),1,2
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setFloatField(float),2,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getIntField(),1,2
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setIntField(int),2,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getLongField(),1,2
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setLongField(long),2,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getShortField(),1,2
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setShortField(short),2,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getStringField(),2,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setStringField(String),3,10
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getBigIntegerField(),2,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setBigIntegerField(BigInteger),3,10
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getBigDecimalField(),2,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setBigDecimalField(BigDecimal),3,10
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getDateField(),2,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setDateField(Date),3,10
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getLocaleField(),2,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setLocaleField(Locale),3,10
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getByteObjfield(),1,2
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setByteObjfield(Byte),2,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getBooleanObjField(),2,4
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setBooleanObjField(Boolean),3,9
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getCharObjField(),3,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setCharObjField(Character),4,10
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getDoubleObjField(),2,4
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setDoubleObjField(Double),3,9
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getFloatObjField(),2,4
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setFloatObjField(Float),3,9
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getIntObjField(),3,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setIntObjField(Integer),4,10
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getLongObjField(),2,4
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setLongObjField(Long),3,9
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getShortObjField(),2,4
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setShortObjField(Short),3,9
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getTransField(),3,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setTransField(TransactionalClassPC),4,10
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getSelfOneOne(),3,4
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setSelfOneOne(RuntimeTest1),4,7
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.getSelfOneMany(),2,3
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1.setSelfOneMany(Set),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizG.setStringG(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizG.getStringG(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizG.setIntG(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizG.getIntG(),0,0
org.apache.openjpa.persistence.proxy.delayed.alist.Department.setEmployees(Collection<IEmployee>),5,9
org.apache.openjpa.persistence.proxy.delayed.alist.Department.getEmployees(),3,4
org.apache.openjpa.persistence.proxy.delayed.alist.Department.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.alist.Department.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.alist.Department.setLocations(Collection<Location>),5,9
org.apache.openjpa.persistence.proxy.delayed.alist.Department.getLocations(),3,4
org.apache.openjpa.persistence.proxy.delayed.alist.Department.setProducts(Collection<Product>),5,9
org.apache.openjpa.persistence.proxy.delayed.alist.Department.getProducts(),3,4
org.apache.openjpa.persistence.proxy.delayed.alist.Department.setCertifications(Collection<Certification>),5,9
org.apache.openjpa.persistence.proxy.delayed.alist.Department.getCertifications(),3,4
org.apache.openjpa.persistence.proxy.delayed.alist.Department.setAwards(Collection<Award>),5,9
org.apache.openjpa.persistence.proxy.delayed.alist.Department.getAwards(),3,4
org.apache.openjpa.persistence.jdbc.query.procedure.DerbyProcedureList.getCreateProcedureList(),26,175
org.apache.openjpa.persistence.jdbc.query.procedure.DerbyProcedureList.getDropProcedureList(),12,56
org.apache.openjpa.persistence.jdbc.query.procedure.DerbyProcedureList.callAddXToCharlie(),4,7
org.apache.openjpa.persistence.jdbc.query.procedure.DerbyProcedureList.addXToCharlie(),18,26
org.apache.openjpa.persistence.jdbc.query.procedure.DerbyProcedureList.callAddSuffixToName(),5,9
"org.apache.openjpa.persistence.jdbc.query.procedure.DerbyProcedureList.addSuffixToName(String,String)",18,36
org.apache.openjpa.persistence.jdbc.query.procedure.DerbyProcedureList.callGetAllApplicants(),3,5
org.apache.openjpa.persistence.jdbc.query.procedure.DerbyProcedureList.getAllApplicants(ResultSet[]),17,22
org.apache.openjpa.persistence.jdbc.query.procedure.DerbyProcedureList.callGetTwoApplicants(),3,5
"org.apache.openjpa.persistence.jdbc.query.procedure.DerbyProcedureList.getTwoApplicants(String,String,ResultSet[])",19,34
org.apache.openjpa.persistence.jdbc.query.procedure.DerbyProcedureList.callGetAllApplicantsAndGames(),4,7
"org.apache.openjpa.persistence.jdbc.query.procedure.DerbyProcedureList.getAllApplicantsAndGames(ResultSet[],ResultSet[])",19,34
org.apache.openjpa.persistence.proxy.delayed.tset.UserIdentity.setMember(IMember),1,1
org.apache.openjpa.persistence.proxy.delayed.tset.UserIdentity.getMember(),0,0
org.apache.openjpa.persistence.proxy.delayed.tset.UserIdentity.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.tset.UserIdentity.getId(),0,0
org.apache.openjpa.persistence.models.company.fetchlazy.Employee.setManager(IFullTimeEmployee),4,9
org.apache.openjpa.persistence.models.company.fetchlazy.Employee.getManager(),3,4
org.apache.openjpa.persistence.models.company.fetchlazy.Employee.setCompany(ICompany),2,7
org.apache.openjpa.persistence.models.company.fetchlazy.Employee.getCompany(),1,3
org.apache.openjpa.persistence.models.company.fetchlazy.Employee.setTitle(String),3,6
org.apache.openjpa.persistence.models.company.fetchlazy.Employee.getTitle(),2,3
org.apache.openjpa.persistence.models.company.fetchlazy.Employee.setHireDate(Date),3,10
org.apache.openjpa.persistence.models.company.fetchlazy.Employee.getHireDate(),2,5
org.apache.openjpa.persistence.models.company.joined.ProductOrder.setItems(List<>),5,11
org.apache.openjpa.persistence.models.company.joined.ProductOrder.getItems(),4,5
org.apache.openjpa.persistence.models.company.joined.ProductOrder.setOrderDate(Date),2,6
org.apache.openjpa.persistence.models.company.joined.ProductOrder.getOrderDate(),1,3
org.apache.openjpa.persistence.models.company.joined.ProductOrder.setShippedDate(Date),3,10
org.apache.openjpa.persistence.models.company.joined.ProductOrder.getShippedDate(),2,5
org.apache.openjpa.persistence.models.company.joined.ProductOrder.setCustomer(ICustomer),2,7
org.apache.openjpa.persistence.models.company.joined.ProductOrder.getCustomer(),1,3
org.apache.openjpa.persistence.models.company.joined.ProductOrder.setId(long),1,1
org.apache.openjpa.persistence.models.company.joined.ProductOrder.getId(),0,0
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaParser.TestXMLSchemaParser(),6,10
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaParser.TestXMLSchemaParser(String),5,7
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaParser.setUp(),7,7
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaParser.parseSchemaGroup(),11,30
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaParser.getSchemaGroup(),6,11
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaParser.testSchemaParsing(),10,20
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaParser.testSequenceParsing(),15,64
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaParser.testTableColumnParsing(),17,57
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaParser.testPrimaryKeyParsing(),16,55
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaParser.testIndexParsing(),15,59
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaParser.testForeignKeyParsing(),21,103
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaParser.main(String[]),7,8
org.apache.openjpa.persistence.jdbc.schema.TestXMLSchemaParser.SCMSchemaParser.SCMSchemaParser(JDBCConfiguration),8,10
org.apache.openjpa.persistence.jdbc.sqlcache.ParentId.ParentId(),1,1
org.apache.openjpa.persistence.jdbc.sqlcache.ParentId.getId(),0,0
org.apache.openjpa.persistence.jdbc.sqlcache.ParentId.setiId(long),1,1
org.apache.openjpa.persistence.jdbc.sqlcache.ParentId.getName(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.ParentId.setName(String),3,6
org.apache.openjpa.persistence.jdbc.sqlcache.ParentId.getAddrId(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.ParentId.setAddrId(long),2,5
org.apache.openjpa.persistence.jdbc.sqlcache.ParentId.equals(Object),5,10
org.apache.openjpa.persistence.jdbc.sqlcache.ParentId.hashCode(),8,15
org.apache.openjpa.persistence.event.common.apps.Duration.Duration(String),5,7
org.apache.openjpa.persistence.event.common.apps.Duration.getName(),2,3
org.apache.openjpa.persistence.event.common.apps.Duration.start(),10,14
org.apache.openjpa.persistence.event.common.apps.Duration.stop(),11,18
org.apache.openjpa.persistence.event.common.apps.Duration.clone(),4,6
org.apache.openjpa.persistence.event.common.apps.Duration.getCurrentDuration(),11,37
org.apache.openjpa.persistence.event.common.apps.Duration.getDurationAsSeconds(),16,28
org.apache.openjpa.persistence.event.common.apps.Duration.isRunning(),1,2
org.apache.openjpa.persistence.event.common.apps.Duration.wasStarted(),1,2
org.apache.openjpa.persistence.event.common.apps.Duration.toString(),11,31
org.apache.openjpa.enhance.UnenhancedIdentityIdPropertyAccess.UnenhancedIdentityIdPropertyAccess(),4,4
org.apache.openjpa.enhance.UnenhancedIdentityIdPropertyAccess.getId(),0,0
org.apache.openjpa.enhance.UnenhancedIdentityIdPropertyAccess.setId(int),1,1
org.apache.openjpa.enhance.UnenhancedIdentityIdPropertyAccess.getStringField(),2,5
org.apache.openjpa.enhance.UnenhancedIdentityIdPropertyAccess.setStringField(String),3,10
org.apache.openjpa.jdbc.kernel.EntityC.EntityC(),1,1
org.apache.openjpa.jdbc.kernel.EntityC.setId(Integer),2,2
org.apache.openjpa.jdbc.kernel.EntityC.getId(),1,1
org.apache.openjpa.jdbc.kernel.EntityC.getEntityD(),1,3
org.apache.openjpa.jdbc.kernel.EntityC.setEntityD(EntityD),2,6
org.apache.openjpa.jdbc.kernel.EntityC.getName(),2,3
org.apache.openjpa.jdbc.kernel.EntityC.setName(String),3,6
org.apache.openjpa.persistence.query.TestQuotedNumbersInFilters2.TestQuotedNumbersInFilters2(String),5,6
org.apache.openjpa.persistence.query.TestQuotedNumbersInFilters2.setUp(),19,59
org.apache.openjpa.persistence.query.TestQuotedNumbersInFilters2.testUnquotedNumbersWithExtraPrecision(),18,42
org.apache.openjpa.persistence.query.TestQuotedNumbersInFilters2.testSingleQuotedStrings(),9,13
org.apache.openjpa.persistence.query.TestQuotedNumbersInFilters2.testDoubleQuotedStrings(),8,12
org.apache.openjpa.persistence.query.TestQuotedNumbersInFilters2.testKodo31SingleQuotedMultipleCharacterBehavior(),24,52
org.apache.openjpa.persistence.query.TestQuotedNumbersInFilters2.testKodo31UnquotedInMemBehavior(),13,24
org.apache.openjpa.persistence.query.TestQuotedNumbersInFilters2.testKodo31UnquotedDatastoreBehavior(),8,17
org.apache.openjpa.persistence.query.TestQuotedNumbersInFilters2.helper(String),6,8
"org.apache.openjpa.persistence.query.TestQuotedNumbersInFilters2.helper(String,boolean)",28,51
"org.apache.openjpa.persistence.query.TestQuotedNumbersInFilters2.helper31(String,boolean)",31,45
"org.apache.openjpa.persistence.query.TestQuotedNumbersInFilters2.getResults(Query,boolean)",12,18
org.apache.openjpa.persistence.identity.entityasidentity.Account.Account(),1,1
org.apache.openjpa.persistence.identity.entityasidentity.Account.getAccountId(),2,3
org.apache.openjpa.persistence.identity.entityasidentity.Account.setAccountId(Integer),3,6
org.apache.openjpa.persistence.identity.entityasidentity.Account.getGroupId(),1,1
org.apache.openjpa.persistence.identity.entityasidentity.Account.setGroupId(Integer),2,2
org.apache.openjpa.persistence.identity.entityasidentity.Account.getAccountHolder(),3,5
org.apache.openjpa.persistence.identity.entityasidentity.Account.setAccountHolder(Person),4,10
org.apache.openjpa.persistence.identity.entityasidentity.Account.getBalanceInDollars(),2,4
org.apache.openjpa.persistence.identity.entityasidentity.Account.setBalanceInDollars(long),3,9
org.apache.openjpa.persistence.identity.entityasidentity.Account.getBalanceInCents(),2,4
org.apache.openjpa.persistence.identity.entityasidentity.Account.setBalanceInCents(int),3,9
org.apache.openjpa.persistence.identity.entityasidentity.Account.isAccountLocked(),2,4
org.apache.openjpa.persistence.identity.entityasidentity.Account.setAccountLocked(boolean),3,9
org.apache.openjpa.persistence.sequence.hsql.HSQLEmployee2.getId(),0,0
org.apache.openjpa.persistence.sequence.hsql.HSQLEmployee2.setId(int),1,1
org.apache.openjpa.persistence.sequence.hsql.HSQLEmployee2.getFirstName(),2,3
org.apache.openjpa.persistence.sequence.hsql.HSQLEmployee2.setFirstName(String),3,6
org.apache.openjpa.persistence.sequence.hsql.HSQLEmployee2.getLastName(),2,3
org.apache.openjpa.persistence.sequence.hsql.HSQLEmployee2.setLastName(String),3,6
org.apache.openjpa.persistence.inheritance.datacache.TestInheritanceWithDataCache.setUp(),3,4
org.apache.openjpa.persistence.inheritance.datacache.TestInheritanceWithDataCache.test(),17,42
org.apache.openjpa.persistence.TestOpenJPA2330.setUp(),2,5
org.apache.openjpa.persistence.TestOpenJPA2330.testOpenJPA2330(),17,32
org.apache.openjpa.persistence.TestOpenJPA2330.testOpenJPA2335(),18,58
org.apache.openjpa.persistence.property.PrivAccessModsEntity.getId(),0,0
org.apache.openjpa.persistence.property.PrivAccessModsEntity.setId(int),1,1
org.apache.openjpa.persistence.property.PrivAccessModsEntity.setPubString(String),3,10
org.apache.openjpa.persistence.property.PrivAccessModsEntity.getPubString(),2,5
org.apache.openjpa.persistence.property.PrivAccessModsEntity.setProtString(String),3,10
org.apache.openjpa.persistence.property.PrivAccessModsEntity.getProtString(),2,5
org.apache.openjpa.persistence.property.PrivAccessModsEntity.setPrivString(String),3,10
org.apache.openjpa.persistence.property.PrivAccessModsEntity.getPrivString(),2,5
org.apache.openjpa.persistence.property.PrivAccessModsEntity.setPubPrivString(String),6,14
org.apache.openjpa.persistence.property.PrivAccessModsEntity.getPubPrivString(),3,6
org.apache.openjpa.persistence.access.PropEntity.setId(int),1,1
org.apache.openjpa.persistence.access.PropEntity.getId(),0,0
org.apache.openjpa.persistence.access.PropEntity.setName(String),3,6
org.apache.openjpa.persistence.access.PropEntity.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.IMember.setName(String),3,4
org.apache.openjpa.persistence.proxy.delayed.IMember.getName(),2,2
org.apache.openjpa.persistence.proxy.delayed.IMember.setAccounts(Collection<IAccount>),4,5
org.apache.openjpa.persistence.proxy.delayed.IMember.getAccounts(),3,3
org.apache.openjpa.persistence.access.xml.XMLPropEmbedEntity.setId(int),1,1
org.apache.openjpa.persistence.access.xml.XMLPropEmbedEntity.getId(),0,0
org.apache.openjpa.persistence.access.xml.XMLPropEmbedEntity.setName(String),3,6
org.apache.openjpa.persistence.access.xml.XMLPropEmbedEntity.getName(),2,3
org.apache.openjpa.persistence.access.xml.XMLPropEmbedEntity.getEmbedProp(),6,7
org.apache.openjpa.persistence.access.xml.XMLPropEmbedEntity.setEmbedProp(XMLEmbedFieldAccess),7,8
org.apache.openjpa.persistence.access.xml.XMLPropEmbedEntity.equals(Object),8,25
org.apache.openjpa.persistence.jpql.expressions.TestIndex.JPQLIndexEntityClasses.JPQLIndexEntityClasses(Class<>),7,19
org.apache.openjpa.persistence.jpql.expressions.TestIndex.JPQLIndexEntityClasses.getEntityClass(),2,2
org.apache.openjpa.persistence.jpql.expressions.TestIndex.JPQLIndexEntityClasses.getEntityClassName(),3,5
org.apache.openjpa.persistence.jpql.expressions.TestIndex.JPQLIndexEntityClasses.getEntityName(),3,5
org.apache.openjpa.persistence.jpql.expressions.TestIndex.getPersistenceUnitName(),12,12
org.apache.openjpa.persistence.jpql.expressions.TestIndex.setUp(),13,33
org.apache.openjpa.persistence.jpql.expressions.TestIndex.testO2MTreeQueryIndex(),25,42
org.apache.openjpa.persistence.jpql.expressions.TestIndex.testO2MQueryIndex(),19,31
org.apache.openjpa.persistence.jpql.expressions.TestIndex.testO2MXMLQueryIndex(),13,28
org.apache.openjpa.persistence.jpql.expressions.TestIndex.testM2MQueryIndex(),10,21
org.apache.openjpa.persistence.jpql.expressions.TestIndex.testM2MXMLQueryIndex(),12,24
org.apache.openjpa.persistence.jpql.expressions.TestIndex.testElementQueryIndex(),11,22
org.apache.openjpa.persistence.jpql.expressions.TestIndex.testElementXMLQueryIndex(),12,25
org.apache.openjpa.persistence.jpql.expressions.TestIndex.createTreeNodeEntities(int[]),18,40
"org.apache.openjpa.persistence.jpql.expressions.TestIndex.assertArrayEquals(int[],int[])",8,12
"org.apache.openjpa.persistence.jpql.expressions.TestIndex.createEntities(JPQLIndexEntityClasses,Class<E>)",20,96
"org.apache.openjpa.persistence.jpql.expressions.TestIndex.createO2MEntities(JPQLIndexEntityClasses,Class<INameEntity>)",44,143
"org.apache.openjpa.persistence.jpql.expressions.TestIndex.createM2MEntities(JPQLIndexEntityClasses,Class<IColumnEntity>)",46,163
org.apache.openjpa.persistence.jpql.expressions.TestIndex.createOrderedElements(JPQLIndexEntityClasses),41,114
"org.apache.openjpa.persistence.jpql.expressions.TestIndex.verifyEntities(JPQLIndexEntityClasses,Class<E>)",20,96
"org.apache.openjpa.persistence.jpql.expressions.TestIndex.verifyO2MEntities(JPQLIndexEntityClasses,Class<INameEntity>)",44,137
"org.apache.openjpa.persistence.jpql.expressions.TestIndex.verifyM2MEntities(JPQLIndexEntityClasses,Class<IColumnEntity>)",46,229
org.apache.openjpa.persistence.jpql.expressions.TestIndex.verifyOrderedElements(JPQLIndexEntityClasses),41,131
org.apache.openjpa.persistence.proxy.TestEntitySerialize.setUp(),15,20
org.apache.openjpa.persistence.proxy.TestEntitySerialize.testSerialization(),29,55
org.apache.openjpa.persistence.proxy.TestEntitySerialize.createAnnuity(EntityManager),19,76
org.apache.openjpa.persistence.proxy.TestEntitySerialize.getId(),4,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.CallbackStorage.CallbackStorage(),2,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.CallbackStorage.getInstance(),4,8
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.CallbackStorage.getClist(),3,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.CallbackStorage.setClist(List<String>),6,9
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.CallbackStorage.clearStore(),5,5
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.CallbackStorage.isEmpty(),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.CallbackStorage.size(),2,3
org.apache.openjpa.persistence.relations.RelationToHandlerMapInstance.getMap(),5,7
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TablePerClass1.getPk(),0,0
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TablePerClass1.setBasic(int),2,3
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TablePerClass1.getBasic(),1,2
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TablePerClass1.getEmbed(),2,4
org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TablePerClass1.setEmbed(EmbedValue),3,5
org.apache.openjpa.persistence.proxy.delayed.alist.Employee.setEmpName(String),4,10
org.apache.openjpa.persistence.proxy.delayed.alist.Employee.getEmpName(),3,5
org.apache.openjpa.persistence.proxy.delayed.alist.Employee.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.alist.Employee.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.alist.Employee.setDept(IDepartment),3,6
org.apache.openjpa.persistence.proxy.delayed.alist.Employee.getDept(),2,3
org.apache.openjpa.persistence.proxy.delayed.alist.Employee.equals(Object),6,13
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEnableSelective.getEntityManagerFactory(),13,28
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEnableSelective.getListener(),4,10
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEnableSelective.getSql(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEnableSelective.getExpectedInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEnableSelective.getExpectedNotInCache(),2,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEnableSelective.testCacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEnableSelective.testUncacheables(),3,4
org.apache.openjpa.persistence.cache.jpa.TestCacheModeEnableSelective.testUnspecified(),3,4
org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxyDetachLite.setUp(),8,11
org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxyDetachLite.testPostDetach(),51,125
org.apache.openjpa.persistence.common.apps.MaleUser.MaleUser(),2,2
"org.apache.openjpa.persistence.common.apps.MaleUser.MaleUser(String,String,Address,int,int)",8,13
org.apache.openjpa.persistence.kernel.TestDependentFields2.TestDependentFields2(String),5,6
org.apache.openjpa.persistence.kernel.TestDependentFields2.setUp(),25,129
org.apache.openjpa.persistence.kernel.TestDependentFields2.testDependentFieldsLoaded(),7,8
org.apache.openjpa.persistence.kernel.TestDependentFields2.testDependentFieldsLoadedWithRollback(),7,9
org.apache.openjpa.persistence.kernel.TestDependentFields2.testDependentFieldsLoadedWithPreStore(),9,10
org.apache.openjpa.persistence.kernel.TestDependentFields2.testDependentFieldsUnloaded(),7,8
org.apache.openjpa.persistence.kernel.TestDependentFields2.testDependentFieldsUnloadedWithRollback(),7,9
org.apache.openjpa.persistence.kernel.TestDependentFields2.testDependentFieldsUnloadedWithPreStore(),9,10
"org.apache.openjpa.persistence.kernel.TestDependentFields2.delete(boolean,int)",34,181
org.apache.openjpa.persistence.kernel.TestDependentFields2.checkFields(),11,29
org.apache.openjpa.persistence.kernel.TestDependentFields2.testNullDeletesDependent(),4,6
org.apache.openjpa.persistence.kernel.TestDependentFields2.testNullDeletesDependentWithRollback(),4,7
org.apache.openjpa.persistence.kernel.TestDependentFields2.testNullDeletesDependentWithPreStore(),6,8
org.apache.openjpa.persistence.kernel.TestDependentFields2.nullDeletesDependent(int),23,58
org.apache.openjpa.persistence.kernel.TestDependentFields2.testRemoveDeletesDependent(),5,8
org.apache.openjpa.persistence.kernel.TestDependentFields2.testRemoveDeletesDependentWithRollback(),5,9
org.apache.openjpa.persistence.kernel.TestDependentFields2.testRemoveDeletesDependentWithPreStore(),7,10
org.apache.openjpa.persistence.kernel.TestDependentFields2.removeDeletesDependent(int),29,124
org.apache.openjpa.persistence.kernel.TestDependentFields2.testMoveDependentInContainer(),5,8
org.apache.openjpa.persistence.kernel.TestDependentFields2.testMoveDependentInContainerWithRollback(),5,9
org.apache.openjpa.persistence.kernel.TestDependentFields2.testMoveDependentInContainerWithPreStore(),7,10
org.apache.openjpa.persistence.kernel.TestDependentFields2.moveDependentInContainer(int),30,115
org.apache.openjpa.persistence.kernel.TestDependentFields2.testRefedDependentNotDeleted(),5,8
org.apache.openjpa.persistence.kernel.TestDependentFields2.testRefedDependentNotDeletedWithRollback(),5,9
org.apache.openjpa.persistence.kernel.TestDependentFields2.testRefedDependentNotDeletedWithPreStore(),7,10
org.apache.openjpa.persistence.kernel.TestDependentFields2.refedDependentNotDeleted(int),23,63
org.apache.openjpa.persistence.kernel.TestDependentFields2.testNullSharedDependent(),4,6
org.apache.openjpa.persistence.kernel.TestDependentFields2.testNullSharedDependentWithRollback(),4,7
org.apache.openjpa.persistence.kernel.TestDependentFields2.testNullSharedDependentWithPreStore(),6,8
org.apache.openjpa.persistence.kernel.TestDependentFields2.nullSharedDependent(int),37,91
org.apache.openjpa.persistence.kernel.TestDependentFields2.testClearMappedDependentOfDetached(),4,7
org.apache.openjpa.persistence.kernel.TestDependentFields2.testClearInverseKeyDependentOfDetached(),5,8
org.apache.openjpa.persistence.kernel.TestDependentFields2.clearDependentOfDetachedTest(boolean),28,176
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity.getCustom(),1,2
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity.setCustom(Point),2,5
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity.getStringCollection(),3,5
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity.getJoinCollection(),6,8
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity.getStringMap(),2,5
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity.getJoinMap(),5,11
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity.getEmbed(),3,4
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity.setEmbed(ExtensionsEntity),4,7
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity.getEmbedCollection(),4,7
org.apache.openjpa.persistence.kernel.TestEJBEntityManager.TestEJBEntityManager(String),7,8
org.apache.openjpa.persistence.kernel.TestEJBEntityManager.setUp(),11,29
org.apache.openjpa.persistence.kernel.TestEJBEntityManager.testMultipleCloseThreaded(),34,66
org.apache.openjpa.persistence.kernel.TestEJBEntityManager.testMultipleCloseThreaded().$1.run(),8,13
org.apache.openjpa.persistence.kernel.TestEJBEntityManager.testIllegalState(),21,30
org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxyDetachLite.setUp(),8,11
org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxyDetachLite.testPostDetach(),51,122
org.apache.openjpa.persistence.query.common.apps.ComplexA.ComplexA(),1,1
"org.apache.openjpa.persistence.query.common.apps.ComplexA.ComplexA(String,int,Date,ComplexB[])",6,13
org.apache.openjpa.persistence.query.common.apps.ComplexA.setStringA(String),2,6
org.apache.openjpa.persistence.query.common.apps.ComplexA.getStringA(),1,3
org.apache.openjpa.persistence.query.common.apps.ComplexA.setIntA(int),1,1
org.apache.openjpa.persistence.query.common.apps.ComplexA.getIntA(),0,0
org.apache.openjpa.persistence.query.common.apps.ComplexA.setDateA(Date),2,6
org.apache.openjpa.persistence.query.common.apps.ComplexA.getDateA(),1,3
org.apache.openjpa.persistence.query.common.apps.ComplexA.setBs(Collection),2,2
org.apache.openjpa.persistence.query.common.apps.ComplexA.getBs(),1,1
org.apache.openjpa.persistence.query.common.apps.TransactionalClassPC.getIntField(),1,2
org.apache.openjpa.persistence.query.common.apps.TransactionalClassPC.setIntField(int),2,5
org.apache.openjpa.persistence.jpql.clauses.TestBulkUpdate.TestBulkUpdate(String),6,7
org.apache.openjpa.persistence.jpql.clauses.TestBulkUpdate.setUp(),3,5
org.apache.openjpa.persistence.jpql.clauses.TestBulkUpdate.testSimpleBulkUpdate(),4,8
org.apache.openjpa.persistence.jpql.clauses.TestBulkUpdate.testSimpleBulkUpdate(int),28,223
org.apache.openjpa.persistence.relations.E.E(),0,0
org.apache.openjpa.persistence.relations.E.getName(),2,3
org.apache.openjpa.persistence.relations.E.setName(String),3,6
org.apache.openjpa.persistence.relations.E.getCms(),2,3
org.apache.openjpa.persistence.relations.E.setCms(Set<CM>),2,6
org.apache.openjpa.persistence.relations.E.getEId(),1,1
org.apache.openjpa.persistence.relations.E.setEId(String),2,2
org.apache.openjpa.persistence.relations.E.getVcss(),3,4
org.apache.openjpa.persistence.relations.E.setVcss(Set<VCS>),3,7
org.apache.openjpa.persistence.relations.PPhone.getId(),0,0
org.apache.openjpa.persistence.relations.PPhone.getNumber(),1,1
org.apache.openjpa.persistence.relations.PPhone.setNumber(String),2,2
org.apache.openjpa.persistence.relations.PPhone.getPeople(),3,4
org.apache.openjpa.persistence.relations.PPhone.setPeople(Collection<PPerson>),4,7
org.apache.openjpa.persistence.relations.PPhone.toString(),2,3
org.apache.openjpa.persistence.query.BaseQueryTest.BaseQueryTest(String),8,12
org.apache.openjpa.persistence.query.BaseQueryTest.getEM(),4,9
"org.apache.openjpa.persistence.query.BaseQueryTest.getEM(boolean,boolean)",10,25
"org.apache.openjpa.persistence.query.BaseQueryTest.deleteAll(Broker,Class,boolean)",19,53
org.apache.openjpa.persistence.query.BaseQueryTest.persist(Object),7,19
org.apache.openjpa.persistence.query.BaseQueryTest.getProperties(),1,3
org.apache.openjpa.persistence.query.BaseQueryTest.getProperties(String[]),34,89
org.apache.openjpa.persistence.detach.TimestampVersionEntity.getVersion(),2,3
org.apache.openjpa.persistence.detach.TimestampVersionEntity.TimestampVersionEntity(),3,3
org.apache.openjpa.persistence.detach.TimestampVersionEntity.TimestampVersionEntity(int),3,3
org.apache.openjpa.persistence.detach.TimestampVersionEntity.getId(),0,0
org.apache.openjpa.persistence.detach.TimestampVersionEntity.setId(int),1,1
org.apache.openjpa.persistence.detach.TimestampVersionEntity.getName(),2,3
org.apache.openjpa.persistence.detach.TimestampVersionEntity.setName(String),3,6
org.apache.openjpa.persistence.jdbc.annotations.TestOneToMany.setUp(),5,8
org.apache.openjpa.persistence.jdbc.annotations.TestOneToMany.testOneToMany(),21,48
org.apache.openjpa.persistence.jdbc.annotations.TestOneToMany.testInverseOwnerOneToMany(),24,66
org.apache.openjpa.persistence.discriminator.CharAbstractEntity.getId(),0,0
org.apache.openjpa.persistence.discriminator.CharAbstractEntity.getName(),2,3
org.apache.openjpa.persistence.discriminator.CharAbstractEntity.setName(String),3,6
org.apache.openjpa.persistence.criteria.CustomerDetails.CustomerDetails(),2,2
"org.apache.openjpa.persistence.criteria.CustomerDetails.CustomerDetails(long,int)",3,5
"org.apache.openjpa.persistence.criteria.CustomerDetails.CustomerDetails(long,int,int)",4,8
org.apache.openjpa.persistence.criteria.CustomerDetails.getStatus(),1,2
org.apache.openjpa.persistence.criteria.CustomerDetails.setStatus(int),2,5
org.apache.openjpa.persistence.criteria.CustomerDetails.getId(),0,0
org.apache.openjpa.persistence.criteria.CustomerDetails.setId(long),1,1
org.apache.openjpa.persistence.criteria.CustomerDetails.getQuantity(),1,2
org.apache.openjpa.persistence.criteria.CustomerDetails.setQuantity(int),2,5
org.apache.openjpa.persistence.embed.CompanyXml.getId(),0,0
org.apache.openjpa.persistence.embed.CompanyXml.setId(int),1,1
org.apache.openjpa.persistence.embed.CompanyXml.getOrganization(),2,3
"org.apache.openjpa.persistence.embed.CompanyXml.addToOrganization(DivisionXml,VicePresidentXml)",6,10
org.apache.openjpa.persistence.embed.CompanyXml.removeFromOrganization(DivisionXml),4,6
org.apache.openjpa.persistence.embed.CompanyXml.getOrganization(DivisionXml),5,7
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC2.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC2.setName(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC2.getList(),1,3
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC2.setList(List),2,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.PhoneNumber.getNumber(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.PhoneNumber.setNumber(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.PhoneNumber.getEmployees(),5,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.PhoneNumber.addEmployees(Division,Employee)",5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.PhoneNumber.removeEmployee(Division),4,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.PhoneNumber.equals(Object),16,45
org.apache.openjpa.persistence.kernel.common.apps.PCCompany.PCCompany(),1,1
org.apache.openjpa.persistence.kernel.common.apps.PCCompany.PCCompany(String),4,6
org.apache.openjpa.persistence.kernel.common.apps.PCCompany.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.PCCompany.getAddress(),1,3
org.apache.openjpa.persistence.kernel.common.apps.PCCompany.setAddress(PCAddress),2,6
org.apache.openjpa.persistence.kernel.common.apps.PCCompany.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCCompany.setName(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.PCCompany.getDepartments(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCCompany.setDepartments(Set),2,6
org.apache.openjpa.persistence.kernel.common.apps.PCCompany.addDepartment(PCDepartment),7,14
org.apache.openjpa.persistence.kernel.common.apps.PCCompany.contains(PCDepartment),4,7
"org.apache.openjpa.persistence.kernel.common.apps.PCCompany.reflect(PCCompany,String)",10,15
org.apache.openjpa.persistence.relations.TestManyOneAsId.setUp(),30,200
"org.apache.openjpa.persistence.relations.TestManyOneAsId.assertRelations(EntityManager,ManyOneIdOwner)",11,39
"org.apache.openjpa.persistence.relations.TestManyOneAsId.assertDataStoreRelations(OpenJPAEntityManager,DataStoreManyOneIdOwner)",17,69
"org.apache.openjpa.persistence.relations.TestManyOneAsId.assertCompoundRelations(OpenJPAEntityManager,ManyOneCompoundIdOwner)",15,53
org.apache.openjpa.persistence.relations.TestManyOneAsId.testRetrieveWithManyOneId(),10,15
org.apache.openjpa.persistence.relations.TestManyOneAsId.testRetrieveWithDataStoreManyOneId(),14,27
org.apache.openjpa.persistence.relations.TestManyOneAsId.testRetrieveWithCompoundManyOneId(),14,32
org.apache.openjpa.persistence.relations.TestManyOneAsId.testAttemptToChangeManyOne(),24,36
org.apache.openjpa.persistence.relations.TestManyOneAsId.testChangeRelationToManyOneOwner(),21,68
org.apache.openjpa.persistence.relations.TestManyOneAsId.testChangeRelationToDataStoreManyOneOwner(),27,103
org.apache.openjpa.persistence.relations.TestManyOneAsId.testChangeRelationToCompoundManyOneOwner(),24,87
org.apache.openjpa.persistence.relations.TestManyOneAsId.testQuery(),17,46
org.apache.openjpa.persistence.relations.TestManyOneAsId.testDataStoreQuery(),21,50
org.apache.openjpa.persistence.relations.TestManyOneAsId.testCompoundQuery(),19,64
org.apache.openjpa.persistence.relations.TestManyOneAsId.main(String[]),6,7
org.apache.openjpa.persistence.embed.TestUpdateEmbeddedQueryResult.setUp(),8,14
org.apache.openjpa.persistence.embed.TestUpdateEmbeddedQueryResult.testUpdateEmbedded(),38,130
org.apache.openjpa.persistence.embed.TestUpdateEmbeddedQueryResult.testEntityA_Embed_Embed_update(),6,14
org.apache.openjpa.persistence.embed.TestUpdateEmbeddedQueryResult.createEntityA_Embed_Embed(),11,28
"org.apache.openjpa.persistence.embed.TestUpdateEmbeddedQueryResult.createEntityA_Embed_Embed(EntityManager,int)",8,27
"org.apache.openjpa.persistence.embed.TestUpdateEmbeddedQueryResult.createEmbed_Embed(EntityManager,int,int)",7,35
"org.apache.openjpa.persistence.embed.TestUpdateEmbeddedQueryResult.createEmbed(int,int)",5,20
org.apache.openjpa.persistence.embed.TestUpdateEmbeddedQueryResult.testBulkUpdateEmbeddedField(),28,77
org.apache.openjpa.persistence.embed.TestUpdateEmbeddedQueryResult.updateEmbedded_EntityA_Embed_Embed(),30,99
org.apache.openjpa.persistence.models.company.basic.Product.setName(String),3,6
org.apache.openjpa.persistence.models.company.basic.Product.getName(),2,3
org.apache.openjpa.persistence.models.company.basic.Product.setImage(byte[]),2,5
org.apache.openjpa.persistence.models.company.basic.Product.getImage(),1,2
org.apache.openjpa.persistence.models.company.basic.Product.setPrice(float),2,5
org.apache.openjpa.persistence.models.company.basic.Product.getPrice(),1,2
org.apache.openjpa.persistence.models.company.basic.Product.setDistributors(Set<>),3,9
org.apache.openjpa.persistence.models.company.basic.Product.getDistributors(),3,4
org.apache.openjpa.persistence.models.company.basic.Product.setId(long),1,1
org.apache.openjpa.persistence.models.company.basic.Product.getId(),0,0
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.TestInstanceCallbacks(String),5,6
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.TestInstanceCallbacks(),4,8
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.setUp(),13,31
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.tearDown(),3,4
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.testPostLoad(),7,10
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.testPreStore(),4,7
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.testPreStoreWithFlush(),4,8
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.testPreStoreWithPreStore(),4,9
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.preStoreTest(int),28,68
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.testPreDelete(),8,13
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.testPreDeleteRecursion(),10,19
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.testSetRelatedReferenceInPreStore(),22,44
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.testFlushCausesFlush(),11,15
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.testPreStoreCausesFlush(),14,16
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.causeFlushTest(int),18,27
org.apache.openjpa.persistence.kernel.TestInstanceCallbacks.assertNoCallbacksInvoked(InstanceCallbacksTest),14,39
org.apache.openjpa.persistence.kernel.TestPersistentMaps.TestPersistentMaps(),5,8
org.apache.openjpa.persistence.kernel.TestPersistentMaps.TestPersistentMaps(String),5,6
org.apache.openjpa.persistence.kernel.TestPersistentMaps.setUp(),10,13
org.apache.openjpa.persistence.kernel.TestPersistentMaps.getHolder(OpenJPAEntityManager),12,20
org.apache.openjpa.persistence.kernel.TestPersistentMaps.keyInstance(Class),9,14
"org.apache.openjpa.persistence.kernel.TestPersistentMaps.testMap(int,String,Class,Class)",38,272
org.apache.openjpa.persistence.kernel.TestPersistentMaps.testPCKeyStringValue(),7,14
org.apache.openjpa.persistence.kernel.TestPersistentMaps.testStringKeyPCValue(),7,14
org.apache.openjpa.persistence.kernel.TestPersistentMaps.testPCKeyPCValue(),6,13
org.apache.openjpa.persistence.kernel.TestPersistentMaps.testPCSubKeyStringValue(),9,17
org.apache.openjpa.persistence.kernel.TestPersistentMaps.testStringKeyPCSubValue(),9,17
org.apache.openjpa.persistence.kernel.TestPersistentMaps.testPCSubKeyPCValue(),8,16
org.apache.openjpa.persistence.kernel.TestPersistentMaps.testPCSubKeyPCSubValue(),8,19
org.apache.openjpa.persistence.kernel.TestPersistentMaps.testPCKeyPCSubValue(),8,16
org.apache.openjpa.persistence.kernel.TestPersistentMaps.testPCIntfKeyStringValue(),8,16
org.apache.openjpa.persistence.kernel.TestPersistentMaps.testStringKeyPCIntfValue(),8,16
org.apache.openjpa.persistence.kernel.TestPersistentMaps.testPCIntfKeyPCValue(),7,15
org.apache.openjpa.persistence.kernel.TestPersistentMaps.testQueryMultipleMaps(),47,223
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest2.RuntimeTest2(),2,2
"org.apache.openjpa.persistence.meta.common.apps.RuntimeTest2.RuntimeTest2(String,int)",4,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest2.getIntField2(),1,2
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest2.setIntField2(int),2,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Department3.getDeptId(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Department3.setDeptId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Department3.getEmployees(),5,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Department3.addEmployee(Employee3),5,8
org.apache.openjpa.persistence.models.company.fetchlazy.Person.setFirstName(String),3,6
org.apache.openjpa.persistence.models.company.fetchlazy.Person.getFirstName(),2,3
org.apache.openjpa.persistence.models.company.fetchlazy.Person.setLastName(String),3,6
org.apache.openjpa.persistence.models.company.fetchlazy.Person.getLastName(),2,3
org.apache.openjpa.persistence.models.company.fetchlazy.Person.setHomeAddress(IAddress),3,11
org.apache.openjpa.persistence.models.company.fetchlazy.Person.getHomeAddress(),2,5
org.apache.openjpa.persistence.models.company.fetchlazy.Person.setId(long),1,1
org.apache.openjpa.persistence.models.company.fetchlazy.Person.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Division.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Division.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Division.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Division.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Division.equals(Object),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Division.hashCode(),4,11
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Division.toString(),5,7
org.apache.openjpa.persistence.property.AccessModsEntity.getId(),0,0
org.apache.openjpa.persistence.property.AccessModsEntity.setId(int),1,1
org.apache.openjpa.persistence.property.AccessModsEntity.setPubString(String),3,10
org.apache.openjpa.persistence.property.AccessModsEntity.getPubString(),2,5
org.apache.openjpa.persistence.property.AccessModsEntity.setProtString(String),3,10
org.apache.openjpa.persistence.property.AccessModsEntity.getProtString(),2,5
org.apache.openjpa.persistence.property.AccessModsEntity.setPrivString(String),3,10
org.apache.openjpa.persistence.property.AccessModsEntity.getPrivString(),2,5
org.apache.openjpa.persistence.property.AccessModsEntity.setPubPrivString(String),6,14
org.apache.openjpa.persistence.property.AccessModsEntity.getPubPrivString(),3,6
org.apache.openjpa.persistence.datacache.OrderedOneManyParent.getId(),0,0
org.apache.openjpa.persistence.datacache.OrderedOneManyParent.getChildren(),3,4
org.apache.openjpa.persistence.datacache.OrderedOneManyParent.getName(),2,3
org.apache.openjpa.persistence.datacache.OrderedOneManyParent.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.alist.Member.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.alist.Member.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.alist.Member.setAccounts(Collection<IAccount>),5,9
org.apache.openjpa.persistence.proxy.delayed.alist.Member.getAccounts(),3,4
org.apache.openjpa.persistence.simple.TestSubclassOfAbstractSuperclass.setUp(),3,4
org.apache.openjpa.persistence.simple.TestSubclassOfAbstractSuperclass.testPersist(),12,16
org.apache.openjpa.persistence.simple.TestSubclassOfAbstractSuperclass.main(String[]),7,8
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.RuntimeTest1(),2,2
"org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.RuntimeTest1(String,int)",5,8
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getByteField(),1,2
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setByteField(byte),2,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getBooleanField(),1,2
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setBooleanField(boolean),2,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getCharField(),1,2
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setCharField(char),2,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getDoubleField(),1,2
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setDoubleField(double),2,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getFloatField(),1,2
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setFloatField(float),2,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getIntField(),1,2
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setIntField(int),2,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getLongField(),1,2
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setLongField(long),2,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getShortField(),1,2
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setShortField(short),2,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getStringField(),2,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setStringField(String),3,10
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getBigIntegerField(),2,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setBigIntegerField(BigInteger),3,10
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getBigDecimalField(),2,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setBigDecimalField(BigDecimal),3,10
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getDateField(),2,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setDateField(Date),3,10
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getLocaleField(),2,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setLocaleField(Locale),3,10
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getByteObjfield(),1,2
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setByteObjfield(Byte),2,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getBooleanObjField(),2,4
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setBooleanObjField(Boolean),3,9
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getCharObjField(),3,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setCharObjField(Character),4,10
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getDoubleObjField(),2,4
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setDoubleObjField(Double),3,9
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getFloatObjField(),2,4
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setFloatObjField(Float),3,9
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getIntObjField(),3,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setIntObjField(Integer),4,10
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getLongObjField(),2,4
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setLongObjField(Long),3,9
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getShortObjField(),2,4
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setShortObjField(Short),3,9
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getTransField(),3,5
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setTransField(TransactionalClassPC),4,10
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getSelfOneOne(),3,4
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setSelfOneOne(RuntimeTest1),4,7
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.getSelfOneMany(),2,3
org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1.setSelfOneMany(Set),2,6
org.apache.openjpa.persistence.kernel.common.apps.SingleIdInt.correctIdClass(Class),2,2
org.apache.openjpa.persistence.kernel.common.apps.SingleIdInt.getPkString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.SingleIdInt.getPk(),0,0
org.apache.openjpa.persistence.kernel.common.apps.SingleIdInt.setPk(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.SingleIdInt.getString(),2,3
org.apache.openjpa.persistence.kernel.common.apps.SingleIdInt.setString(String),3,4
org.apache.openjpa.persistence.models.company.ICustomer.setOrders(Collection<>),3,3
org.apache.openjpa.persistence.models.company.ICustomer.getOrders(),2,2
org.apache.openjpa.persistence.models.company.ICustomer.setShippingAddress(IAddress),3,6
org.apache.openjpa.persistence.models.company.ICustomer.getShippingAddress(),2,3
org.apache.openjpa.persistence.models.company.ICustomer.setBillingAddress(IAddress),3,6
org.apache.openjpa.persistence.models.company.ICustomer.getBillingAddress(),2,3
org.apache.openjpa.persistence.test.CombinatorialTestHelper.CombinatorialTestHelper(),18,19
org.apache.openjpa.persistence.test.CombinatorialTestHelper.setCombinatorialOption(Object[]),39,101
"org.apache.openjpa.persistence.test.CombinatorialTestHelper.addOption(String,Object[])",8,14
"org.apache.openjpa.persistence.test.CombinatorialTestHelper.addOption(String,List)",8,14
"org.apache.openjpa.persistence.test.CombinatorialTestHelper.addOption(String,Object[],boolean)",9,14
"org.apache.openjpa.persistence.test.CombinatorialTestHelper.addOption(String,List,boolean)",19,44
org.apache.openjpa.persistence.test.CombinatorialTestHelper.getOption(String),14,27
org.apache.openjpa.persistence.test.CombinatorialTestHelper.getOptionAsString(String),7,17
org.apache.openjpa.persistence.test.CombinatorialTestHelper.getOptions(),5,7
org.apache.openjpa.persistence.test.CombinatorialTestHelper.getOptionsAsString(),14,46
org.apache.openjpa.persistence.test.CombinatorialTestHelper.hasMoreCombination(),7,7
org.apache.openjpa.persistence.test.CombinatorialTestHelper.getCombinationSize(),5,7
org.apache.openjpa.persistence.jdbc.common.apps.EmbeddedPC.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.EmbeddedPC.setIntField(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.EmbeddedPC.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.EmbeddedPC.setStringField(String),3,10
org.apache.openjpa.persistence.lock.extended.LSESecTbl.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSESecTbl.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSESecTbl.getFirstName(),2,3
org.apache.openjpa.persistence.lock.extended.LSESecTbl.setFirstName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSESecTbl.getLastName(),2,3
org.apache.openjpa.persistence.lock.extended.LSESecTbl.setLastName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSESecTbl.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSESecTbl.toString(),10,14
org.apache.openjpa.persistence.lock.extended.LSESecTbl.readExternal(ObjectInput),9,18
org.apache.openjpa.persistence.lock.extended.LSESecTbl.writeExternal(ObjectOutput),7,14
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatB.setStringB(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatB.getStringB(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatB.setIntB(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizInterFlatB.getIntB(),0,0
org.apache.openjpa.persistence.util.MapEntity.setId(int),1,1
org.apache.openjpa.persistence.util.MapEntity.getId(),0,0
org.apache.openjpa.persistence.util.MapEntity.setMapValEntity(MapValEntity),4,16
org.apache.openjpa.persistence.util.MapEntity.getMapValEntity(),3,9
"org.apache.openjpa.persistence.util.MapEntity.setMapEntities(Map<MapKeyEmbed,MapValEntity>)",7,16
org.apache.openjpa.persistence.util.MapEntity.getMapEntities(),6,11
org.apache.openjpa.persistence.detachment.DetachmentOneManyChild.getId(),0,0
org.apache.openjpa.persistence.detachment.DetachmentOneManyChild.getName(),2,3
org.apache.openjpa.persistence.detachment.DetachmentOneManyChild.setName(String),3,6
org.apache.openjpa.persistence.detachment.DetachmentOneManyChild.getParent(),2,4
org.apache.openjpa.persistence.detachment.DetachmentOneManyChild.setParent(DetachmentOneManyParent),3,7
org.apache.openjpa.persistence.xml.TestSimpleXmlEntity.setUp(),10,12
org.apache.openjpa.persistence.xml.TestSimpleXmlEntity.getPersistenceUnitName(),5,7
org.apache.openjpa.persistence.xml.TestSimpleXmlEntity.testId(),18,23
org.apache.openjpa.persistence.xml.TestSimpleXmlEntity.testNamedQueryInXmlNamedEntity(),9,13
org.apache.openjpa.persistence.xml.TestSimpleXmlEntity.testNamedQueryInXmlUsingShortClassName(),21,35
org.apache.openjpa.persistence.xml.TestSimpleXmlEntity.testNamedEntityInDynamicQuery(),11,12
org.apache.openjpa.persistence.xml.TestSimpleXmlEntity.testShortClassNameInDynamicQuery(),22,33
"org.apache.openjpa.persistence.xml.TestSimpleXmlEntity.assertMarkerInErrorMessage(Exception,String)",10,23
org.apache.openjpa.persistence.proxy.delayed.vec.Account.Account(),1,1
"org.apache.openjpa.persistence.proxy.delayed.vec.Account.Account(String,IUserIdentity)",8,13
org.apache.openjpa.persistence.proxy.delayed.vec.Account.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.vec.Account.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.vec.Account.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.vec.Account.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.vec.Account.setUserIdent(IUserIdentity),4,13
org.apache.openjpa.persistence.proxy.delayed.vec.Account.getUserIdent(),3,6
org.apache.openjpa.persistence.proxy.delayed.llist.Employee.setEmpName(String),4,10
org.apache.openjpa.persistence.proxy.delayed.llist.Employee.getEmpName(),3,5
org.apache.openjpa.persistence.proxy.delayed.llist.Employee.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.llist.Employee.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.llist.Employee.setDept(IDepartment),3,6
org.apache.openjpa.persistence.proxy.delayed.llist.Employee.getDept(),2,3
org.apache.openjpa.persistence.proxy.delayed.llist.Employee.hashCode(),2,2
org.apache.openjpa.persistence.proxy.delayed.llist.Employee.equals(Object),6,13
org.apache.openjpa.persistence.proxy.entities.IContact.getAddress(),1,2
org.apache.openjpa.persistence.proxy.entities.IContact.setAddress(IAddress),2,4
org.apache.openjpa.persistence.proxy.entities.IContact.getEmail(),2,2
org.apache.openjpa.persistence.proxy.entities.IContact.setEmail(String),3,4
org.apache.openjpa.persistence.proxy.entities.IContact.getPhone(),2,2
org.apache.openjpa.persistence.proxy.entities.IContact.setPhone(String),3,4
org.apache.openjpa.persistence.proxy.entities.IContact.getContactType(),2,4
org.apache.openjpa.persistence.proxy.entities.IContact.setContactType(ContactType),3,6
"org.apache.openjpa.persistence.proxy.entities.Parameterizable<K,V>.addParameter(K,V)",4,4
"org.apache.openjpa.persistence.proxy.entities.Parameterizable<K,V>.removeParameter(K)",3,3
"org.apache.openjpa.persistence.proxy.entities.Parameterizable<K,V>.clearAllParameters()",1,1
"org.apache.openjpa.persistence.proxy.entities.Parameterizable<K,V>.getParameters()",2,2
"org.apache.openjpa.persistence.proxy.entities.Parameterizable<K,V>.getParameterValue(K)",3,3
"org.apache.openjpa.persistence.proxy.entities.Parameterizable<K,V>.addAllParams(Map<K,V>)",3,4
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.setUp(),9,12
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.setCandidate(Query,Class)",17,43
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.queryQualifiedId(boolean),33,96
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.testQueryObject(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.createObj(),16,27
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.createEmployee(EntityManager,int)",14,37
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.findObj(),9,15
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.queryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.queryPhoneNumber(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.queryEmployee(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.assertEmployee(Employee),10,27
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.assertPhoneNumber(PhoneNumber),10,20
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.checkPhoneMap(Map<String,PhoneNumber>,Map<String,PhoneNumber>)",14,39
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.TestMany2ManyMapEx6.checkEmpMap(Map<FullName,Employee>,Map<FullName,Employee>)",15,39
org.apache.openjpa.persistence.query.OrderItem.OrderItem(),1,1
"org.apache.openjpa.persistence.query.OrderItem.OrderItem(int,double,Order)",3,7
org.apache.openjpa.persistence.query.OrderItem.getCost(),1,2
org.apache.openjpa.persistence.query.OrderItem.setCost(double),2,5
org.apache.openjpa.persistence.query.OrderItem.getLid(),1,2
org.apache.openjpa.persistence.query.OrderItem.setLid(int),2,5
org.apache.openjpa.persistence.query.OrderItem.getQuantity(),1,2
org.apache.openjpa.persistence.query.OrderItem.setQuantity(int),2,5
org.apache.openjpa.persistence.query.OrderItem.getOrder(),0,0
org.apache.openjpa.persistence.query.OrderItem.setOrder(Order),1,1
org.apache.openjpa.persistence.embed.attrOverrides.PartTimeEmployee.getHourlyWage(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.PartTimeEmployee.setHourlyWage(Float),3,6
org.apache.openjpa.persistence.enhance.common.apps.SubclassClone.SubclassClone(String),4,6
org.apache.openjpa.persistence.enhance.common.apps.SubclassClone.getString(),1,3
org.apache.openjpa.persistence.enhance.common.apps.SubclassClone.safeClone(),6,11
org.apache.openjpa.persistence.lockmgr.TestFetchHints.setUp(),7,10
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchBatchSizeHint(),34,141
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanFetchBatchSizeHint(),35,147
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.fetchBatchSizeHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,int)",16,52
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanEagerFetchModeHint(),37,313
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testJdbcEagerFetchModeHint(),40,290
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.eagerFetchModeHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,Object,int)",16,51
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanJoinSyntaxHint(),37,292
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testJdbcJoinSyntaxHint(),43,274
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.joinSyntaxHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,Object,int)",16,48
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanFetchDirectionHint(),36,292
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testJdbcFetchDirectionHint(),39,269
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.fetchDirectionHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,Object,int)",15,48
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanIsolationHint(),49,445
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testJdbcTransactionIsolationHint(),50,383
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.isolationHintTest(OpenJPAEntityManager,JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,Object,int)",19,49
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanLRSSizeAlgorithmHint(),38,301
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanLRSSizeHint(),43,285
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testJdbcLRSSizeHint(),43,283
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.lrsSizeHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,Object,int)",17,54
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanMaxFetchDepthHint(),35,151
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testMaxFetchDepthHint(),35,141
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.maxFetchDepthHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,int)",16,47
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testLockTimeoutHint(),37,182
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanLockTimeoutHint(),37,188
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testJavaxLockTimeoutHint(),38,185
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.lockTimeoutHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,int)",16,44
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testQueryTimeoutHint(),37,182
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanQueryTimeoutHint(),37,188
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testJavaxQueryTimeoutHint(),38,185
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.queryTimeoutHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,int)",16,44
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanResultSetTypeHint(),38,277
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testJdbcResultSetTypeHint(),40,297
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.resultSetTypeHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,Object,int)",16,51
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanSubclassFetchModeHint(),38,313
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testJdbcSubclassFetchModeHint(),41,292
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.subclassFetchModeHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,Object,int)",16,51
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFlushBeforeQueriesHint(),39,255
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.flushBeforeQueriesHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,int)",16,39
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testReadLockLevelHint(),50,575
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.readLockLevelHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,Object,int)",18,53
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testWriteLockLevelHint(),50,575
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.writeLockLevelHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,Object,int)",18,53
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanReadLockModeHintInTx(),8,21
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanReadLockModeHintNotInTx(),7,13
org.apache.openjpa.persistence.lockmgr.TestFetchHints.fetchPlanReadLockModeHint(boolean),46,700
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.readLockModeHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,Object,int)",18,53
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanWriteLockModeHintInTx(),8,21
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testFetchPlanWriteLockModeHintNotInTx(),7,13
org.apache.openjpa.persistence.lockmgr.TestFetchHints.fetchPlanWriteLockModeHint(boolean),46,700
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.writeLockModeHintTest(JDBCFetchPlan,JDBCFetchConfigurationImpl,String,Object,Object,Object)",18,54
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testSimiliarLockTimeoutHints(),22,181
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.similarLockTimeoutHintsTest(OpenJPAEntityManager,String,Object,Object)",29,95
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testSimiliarQueryTimeoutHints(),22,181
"org.apache.openjpa.persistence.lockmgr.TestFetchHints.similarQueryTimeoutHintsTest(OpenJPAEntityManager,String,Object,Object)",29,95
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testSetHintAddHintsArgument(),39,111
org.apache.openjpa.persistence.lockmgr.TestFetchHints.testInvalidQuerySetHint(),33,58
org.apache.openjpa.persistence.relations.BasicEntity.getId(),0,0
org.apache.openjpa.persistence.relations.BasicEntity.getName(),2,3
org.apache.openjpa.persistence.relations.BasicEntity.setName(String),3,6
org.apache.openjpa.persistence.relations.BasicEntity.getRel(),3,4
org.apache.openjpa.persistence.relations.BasicEntity.setRel(BasicEntity),4,7
org.apache.openjpa.persistence.query.TestEJBDeleteUpdateImpl.TestEJBDeleteUpdateImpl(String),6,8
org.apache.openjpa.persistence.query.TestEJBDeleteUpdateImpl.setUp(),16,49
org.apache.openjpa.persistence.query.TestEJBDeleteUpdateImpl.testUpdate1(),27,74
org.apache.openjpa.persistence.query.TestEJBDeleteUpdateImpl.testUpdate2(),26,79
org.apache.openjpa.persistence.query.TestEJBDeleteUpdateImpl.testDelete1(),24,59
org.apache.openjpa.persistence.query.TestEJBDeleteUpdateImpl.testDelete2(),22,49
org.apache.openjpa.persistence.query.TestEJBDeleteUpdateImpl.testUpdate3(),18,34
org.apache.openjpa.persistence.kernel.common.apps.FetchBase.getText(),2,3
org.apache.openjpa.persistence.kernel.common.apps.FetchBase.setText(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.FetchBase.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl1.InterfaceTestImpl1(),2,2
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl1.InterfaceTestImpl1(String),5,7
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl1.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl1.setStringField(String),4,8
org.apache.openjpa.persistence.relations.ChainEntityB.addChainEntityC(ChainEntityC),7,26
org.apache.openjpa.persistence.relations.ChainEntityB.getChainEntityCSet(),6,20
org.apache.openjpa.persistence.relations.ChainEntityB.getName(),2,3
org.apache.openjpa.persistence.relations.ChainEntityB.setName(String),3,6
org.apache.openjpa.persistence.relations.ChainEntityB.getId(),0,0
org.apache.openjpa.persistence.relations.ChainEntityB.setId(long),1,1
org.apache.openjpa.persistence.relations.IFace.getName(),2,2
org.apache.openjpa.persistence.jdbc.unique.TestUniqueConstraintWithXMLDescriptor.setUp(Object),6,8
org.apache.openjpa.persistence.jdbc.unique.TestUniqueConstraintWithXMLDescriptor.getPersistenceUnitName(),7,7
org.apache.openjpa.persistence.jdbc.unique.TestUniqueConstraintWithXMLDescriptor.testMapping(),37,86
"org.apache.openjpa.persistence.jdbc.unique.TestUniqueConstraintWithXMLDescriptor.assertSQLFragnments(List<String>,String)",13,26
org.apache.openjpa.persistence.proxy.entities.IPayor.getName(),2,2
org.apache.openjpa.persistence.proxy.entities.IPayor.setName(String),3,4
org.apache.openjpa.persistence.meta.ExplicitPropertyAccessMixed.getF1(),1,1
org.apache.openjpa.persistence.meta.ExplicitPropertyAccessMixed.setF1(String),2,2
org.apache.openjpa.persistence.meta.ExplicitPropertyAccessMixed.getF2(),0,0
org.apache.openjpa.persistence.meta.ExplicitPropertyAccessMixed.setF2(long),1,1
org.apache.openjpa.persistence.meta.ExplicitPropertyAccessMixed.getF3(),4,4
org.apache.openjpa.persistence.meta.ExplicitPropertyAccessMixed.setF3(ImplicitFieldAccessBase),5,5
org.apache.openjpa.persistence.meta.ExplicitPropertyAccessMixed.getF4(),0,0
org.apache.openjpa.persistence.meta.ExplicitPropertyAccessMixed.setF4(int),1,1
org.apache.openjpa.persistence.meta.ExplicitPropertyAccessMixed.getF5(),0,0
org.apache.openjpa.persistence.meta.ExplicitPropertyAccessMixed.setF5(short),1,1
org.apache.openjpa.persistence.meta.ExplicitPropertyAccessMixed.getF6(),4,4
org.apache.openjpa.persistence.meta.ExplicitPropertyAccessMixed.setF6(ImplicitFieldAccessBase),5,5
"org.apache.openjpa.persistence.graph.Relation<V1,V2>.getSource()",3,6
"org.apache.openjpa.persistence.graph.Relation<V1,V2>.getTarget()",6,10
"org.apache.openjpa.persistence.graph.Relation<V1,V2>.addAttribute(String,Object)",15,20
"org.apache.openjpa.persistence.graph.Relation<V1,V2>.hasAttribute(String)",6,8
"org.apache.openjpa.persistence.graph.Relation<V1,V2>.getAttribute(String)",8,17
"org.apache.openjpa.persistence.graph.Relation<V1,V2>.removeAttribute(String)",10,12
"org.apache.openjpa.persistence.graph.Relation<V1,V2>.getAttributes()",7,7
org.apache.openjpa.persistence.kernel.common.apps.TransactionalClassPC.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.TransactionalClassPC.setIntField(int),2,5
org.apache.openjpa.persistence.kernel.TestPersistenceManagerFactoryImpl.TestPersistenceManagerFactoryImpl(),9,13
org.apache.openjpa.persistence.kernel.TestPersistenceManagerFactoryImpl.TestPersistenceManagerFactoryImpl(String),6,8
org.apache.openjpa.persistence.kernel.TestPersistenceManagerFactoryImpl.setUp(),11,21
org.apache.openjpa.persistence.kernel.TestPersistenceManagerFactoryImpl.testFactoryLifecycleListeners(),40,117
org.apache.openjpa.persistence.kernel.TestPersistenceManagerFactoryImpl.testFactoryLifecycleListeners().$1.afterLoad(LifecycleEvent),3,3
org.apache.openjpa.persistence.kernel.TestPersistenceManagerFactoryImpl.testFactoryLifecycleListeners().$1.afterRefresh(LifecycleEvent),3,3
org.apache.openjpa.persistence.kernel.TestPersistenceManagerFactoryImpl.testPlatform(),15,24
org.apache.openjpa.persistence.kernel.TestPersistenceManagerFactoryImpl.getEmf(Map),11,21
org.apache.openjpa.persistence.kernel.TestPersistenceManagerFactoryImpl.BrokerFactoryTest.getInstance(ConfigurationProvider),16,35
org.apache.openjpa.persistence.kernel.TestPersistenceManagerFactoryImpl.BrokerFactoryTest.newInstance(ConfigurationProvider),15,24
org.apache.openjpa.persistence.kernel.TestPersistenceManagerFactoryImpl.BrokerFactoryTest.BrokerFactoryTest(OpenJPAConfiguration),6,7
org.apache.openjpa.persistence.kernel.TestPersistenceManagerFactoryImpl.BrokerFactoryTest.newStoreManager(),2,4
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceSupAppId.getId1(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceSupAppId.setId1(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceSupAppId.getId2(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceSupAppId.setId2(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceSupAppId.getIntFieldSup(),2,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceSupAppId.setIntFieldSup(int),3,3
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceSupAppId.Id.Id(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceSupAppId.Id.Id(String),7,16
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceSupAppId.Id.toString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceSupAppId.Id.hashCode(),2,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceSupAppId.Id.equals(Object),2,2
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.ValueStrategyPC(),2,2
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.ValueStrategyPC(int),2,2
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.setName(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.getIgnoreUpdate(),2,4
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.setIgnoreUpdate(int),3,9
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.getRestrictUpdate(),2,4
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.setRestrictUpdate(int),3,9
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.getUUID(),2,3
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.setUUID(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.getUUIDHex(),3,5
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.setUUIDHex(String),4,10
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.getVersion(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.setVersion(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.getSequence(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.setSequence(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.setId(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.getUuid(),2,3
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.setUuid(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.getUuidHex(),3,5
org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC.setUuidHex(String),4,10
org.apache.openjpa.persistence.merge.ParentPK.ParentPK(),2,2
org.apache.openjpa.persistence.merge.ParentPK.ParentPK(Integer),3,5
org.apache.openjpa.persistence.merge.ParentPK.getKey1(),2,3
org.apache.openjpa.persistence.merge.ParentPK.setKey1(String),3,6
org.apache.openjpa.persistence.merge.ParentPK.getKey2(),2,3
org.apache.openjpa.persistence.merge.ParentPK.setKey2(Integer),3,6
org.apache.openjpa.persistence.merge.ParentPK.hashCode(),5,19
org.apache.openjpa.persistence.merge.ParentPK.equals(Object),5,19
org.apache.openjpa.persistence.kernel.TestStaticInnerClasses.TestStaticInnerClasses(),5,8
org.apache.openjpa.persistence.kernel.TestStaticInnerClasses.TestStaticInnerClasses(String),5,6
org.apache.openjpa.persistence.kernel.TestStaticInnerClasses.setUp(),13,20
org.apache.openjpa.persistence.kernel.TestStaticInnerClasses.testGetById(),9,13
org.apache.openjpa.persistence.kernel.TestStaticInnerClasses.testGetByQuery(),49,119
org.apache.openjpa.persistence.kernel.TestStaticInnerClasses.Inner.Inner(),1,1
org.apache.openjpa.persistence.kernel.TestStaticInnerClasses.Inner.Inner(String),2,5
org.apache.openjpa.persistence.kernel.TestStaticInnerClasses.Inner.addTwin(),5,6
org.apache.openjpa.persistence.kernel.TestStaticInnerClasses.Inner.getString(),1,3
org.apache.openjpa.persistence.querycache.common.apps.UnidirectionalOne2OneOwned.getId(),0,0
org.apache.openjpa.persistence.querycache.common.apps.UnidirectionalOne2OneOwned.setId(long),1,1
org.apache.openjpa.persistence.querycache.common.apps.UnidirectionalOne2OneOwned.getName(),2,3
org.apache.openjpa.persistence.querycache.common.apps.UnidirectionalOne2OneOwned.setName(String),3,6
org.apache.openjpa.persistence.querycache.common.apps.UnidirectionalOne2OneOwned.getVersion(),1,2
org.apache.openjpa.persistence.querycache.common.apps.UnidirectionalOne2OneOwned.toString(),3,5
org.apache.openjpa.persistence.enhance.identity.Person4.getId(),1,1
org.apache.openjpa.persistence.enhance.identity.Person4.setId(PersonId4),2,2
org.apache.openjpa.persistence.enhance.identity.Person4.getMedical(),2,4
org.apache.openjpa.persistence.enhance.identity.Person4.setMedical(MedicalHistory4),3,7
org.apache.openjpa.persistence.enhance.identity.Person4.equals(Object),6,19
org.apache.openjpa.persistence.enhance.identity.Person4.hashCode(),4,14
org.apache.openjpa.persistence.query.ScheduleDay.ScheduleDay(),2,2
org.apache.openjpa.persistence.query.ScheduleDay.getId(),1,1
org.apache.openjpa.persistence.query.ScheduleDay.setId(Integer),3,4
org.apache.openjpa.persistence.query.ScheduleDay.getDate(),1,3
org.apache.openjpa.persistence.query.ScheduleDay.setDate(Date),3,6
org.apache.openjpa.persistence.merge.model.ToyBox.ToyBox(),4,7
org.apache.openjpa.persistence.merge.model.ToyBox.ToyBox(int),4,7
org.apache.openjpa.persistence.merge.model.ToyBox.getId(),0,0
org.apache.openjpa.persistence.merge.model.ToyBox.setId(int),1,1
org.apache.openjpa.persistence.merge.model.ToyBox.getOwnerName(),3,5
org.apache.openjpa.persistence.merge.model.ToyBox.setOwnerName(String),4,10
org.apache.openjpa.persistence.merge.model.ToyBox.getToyList(),2,6
org.apache.openjpa.persistence.merge.model.ToyBox.setToyList(List<Toy>),3,11
org.apache.openjpa.persistence.merge.model.ToyBox.getVersion(),1,2
org.apache.openjpa.persistence.relations.EntityBInverseEager.EntityBInverseEager(),3,3
org.apache.openjpa.persistence.relations.EntityBInverseEager.EntityBInverseEager(String),5,7
org.apache.openjpa.persistence.relations.EntityBInverseEager.getA(),3,4
org.apache.openjpa.persistence.relations.EntityBInverseEager.setA(EntityAInverseEager),4,7
org.apache.openjpa.persistence.relations.EntityBInverseEager.getId(),0,0
org.apache.openjpa.persistence.relations.EntityBInverseEager.getName(),2,3
org.apache.openjpa.persistence.relations.EntityBInverseEager.setName(String),3,6
org.apache.openjpa.persistence.kernel.TestFetchGroupsQuery.TestFetchGroupsQuery(),5,8
org.apache.openjpa.persistence.kernel.TestFetchGroupsQuery.TestFetchGroupsQuery(String),4,4
org.apache.openjpa.persistence.kernel.TestFetchGroupsQuery.getO1(OpenJPAEntityManager),13,35
org.apache.openjpa.persistence.kernel.TestFetchGroupsQuery.getO2(OpenJPAEntityManager),13,35
org.apache.openjpa.persistence.kernel.TestFetchGroupsQuery.getC1(OpenJPAEntityManager),14,40
org.apache.openjpa.persistence.kernel.common.apps.InverseA.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.InverseA.setStringField(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.InverseA.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.InverseA.setIntField(int),2,3
org.apache.openjpa.persistence.kernel.common.apps.InverseA.getOneOne(),1,1
org.apache.openjpa.persistence.kernel.common.apps.InverseA.setOneOne(InverseA),2,2
org.apache.openjpa.persistence.kernel.common.apps.InverseA.getOneOneOwner(),2,3
org.apache.openjpa.persistence.kernel.common.apps.InverseA.setOneOneOwner(InverseA),3,4
org.apache.openjpa.persistence.kernel.common.apps.InverseA.getOneMany(),1,1
org.apache.openjpa.persistence.kernel.common.apps.InverseA.setOneMany(InverseA),2,2
org.apache.openjpa.persistence.kernel.common.apps.InverseA.getManyOne(),1,1
org.apache.openjpa.persistence.kernel.common.apps.InverseA.getManyMany(),1,1
org.apache.openjpa.persistence.kernel.common.apps.InverseA.getManyManyOwner(),2,3
org.apache.openjpa.persistence.kernel.common.apps.InverseA.getNullSet(),1,3
org.apache.openjpa.persistence.kernel.common.apps.InverseA.setNullSet(Set),1,4
org.apache.openjpa.persistence.kernel.common.apps.InverseA.getNullOwner(),2,3
org.apache.openjpa.persistence.kernel.common.apps.InverseA.setNullOwner(InverseA),3,4
org.apache.openjpa.persistence.meta.TestFactoryMethod.TestFactoryMethod(String),5,7
org.apache.openjpa.persistence.meta.TestFactoryMethod.setUp(),7,11
org.apache.openjpa.persistence.meta.TestFactoryMethod.getRepository(),14,34
org.apache.openjpa.persistence.meta.TestFactoryMethod.testFactoryMatchesByType(),26,68
org.apache.openjpa.persistence.meta.TestFactoryMethod.testFactoryMatchesByTypeWidening(),31,76
org.apache.openjpa.persistence.meta.TestFactoryMethod.testFactoryMatchesByTypeBoxing(),32,79
org.apache.openjpa.persistence.meta.TestFactoryMethod.testFactoryMatchesByTypeWrapper(),33,81
org.apache.openjpa.persistence.meta.TestFactoryMethod.testFactoryMatchesByTypeUnboxing(),32,78
org.apache.openjpa.persistence.meta.TestFactoryMethod.testFactoryMatchesByTypeUnboxingWidening(),35,83
org.apache.openjpa.persistence.recursive.TestRecursiveRelationships.setUp(),4,5
org.apache.openjpa.persistence.recursive.TestRecursiveRelationships.testRecursiveNodes(),25,89
org.apache.openjpa.persistence.meta.ImplicitFieldAccessMappedSuperclass.getId(),0,0
org.apache.openjpa.persistence.meta.ImplicitFieldAccessMappedSuperclass.setId(long),1,1
org.apache.openjpa.persistence.meta.ImplicitFieldAccessMappedSuperclass.getCreateTime(),5,7
org.apache.openjpa.persistence.meta.ImplicitFieldAccessMappedSuperclass.setCreateTime(java.util.Date),6,12
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.ModInstanceCallbackTests(),4,4
"org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.ModInstanceCallbackTests(String,int)",6,14
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.setNonNullString(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.setStringField(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.setIntField(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.getNonDFGField(),2,4
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.setNonDFGField(int),3,9
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.getOneOne(),3,3
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.setOneOne(ModRuntimeTest1),4,4
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.jdoPostLoad(),8,12
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.jdoPreClear(),4,6
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.jdoPreStore(),29,67
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.jdoPreDelete(),11,23
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.getRel(),5,6
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.setRel(ModInstanceCallbackTests),6,9
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.getRelId(),2,3
org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests.setRelId(Object),3,6
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCLeafD1.getLeafD1Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCLeafD1.setLeafD1Data(String),4,10
org.apache.openjpa.persistence.kernel.common.apps.SingleIdByte.correctIdClass(Class),2,2
org.apache.openjpa.persistence.kernel.common.apps.SingleIdByte.getPk(),0,0
org.apache.openjpa.persistence.kernel.common.apps.SingleIdByte.setPk(byte),1,1
org.apache.openjpa.persistence.kernel.common.apps.SingleIdByte.getPkString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.SingleIdByte.getString(),2,3
org.apache.openjpa.persistence.kernel.common.apps.SingleIdByte.setString(String),3,4
org.apache.openjpa.persistence.kernel.DummyBrokerFactory.DummyBrokerFactory(JDBCConfiguration),6,9
org.apache.openjpa.persistence.kernel.DummyBrokerFactory.newInstance(ConfigurationProvider),10,18
org.apache.openjpa.persistence.kernel.DummyBrokerFactory.newStoreManager(),5,9
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.FileName.FileName(),2,2
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.FileName.FileName(String,String)",3,10
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.FileName.getFName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.FileName.setFName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.FileName.getLName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.FileName.setLName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.FileName.equals(Object),4,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex8.FileName.hashCode(),4,15
org.apache.openjpa.persistence.kernel.common.apps.BlobTest.BlobTest(),2,2
org.apache.openjpa.persistence.kernel.common.apps.BlobTest.setBlob(Object),3,6
org.apache.openjpa.persistence.kernel.common.apps.BlobTest.getBlob(),1,2
org.apache.openjpa.persistence.kernel.common.apps.BlobTest.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTest2.getIntField(),1,1
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTest2.setIntField(int),2,2
org.apache.openjpa.persistence.kernel.common.apps.MapElementPCChild.setElementDataChild(String),5,14
org.apache.openjpa.persistence.kernel.common.apps.MapElementPCChild.getElementDataChild(),4,7
org.apache.openjpa.persistence.kernel.common.apps.MapElementPCChild.hashCode(),8,12
org.apache.openjpa.persistence.kernel.common.apps.MapElementPCChild.equals(Object),6,13
org.apache.openjpa.persistence.kernel.common.apps.MapElementPCChild.toString(),4,6
org.apache.openjpa.persistence.kernel.Test2EJBConcurrency.Test2EJBConcurrency(String),6,7
org.apache.openjpa.persistence.kernel.Test2EJBConcurrency.setUp(),10,15
org.apache.openjpa.persistence.kernel.Test2EJBConcurrency.testOptConcurrency1(),16,83
org.apache.openjpa.persistence.relations.EntityA1InverseEager.EntityA1InverseEager(),3,3
org.apache.openjpa.persistence.relations.EntityA1InverseEager.EntityA1InverseEager(String),5,8
org.apache.openjpa.persistence.relations.EntityA1InverseEager.getName1(),2,3
org.apache.openjpa.persistence.relations.EntityA1InverseEager.setName1(String),3,6
org.apache.openjpa.persistence.kernel.TestPojoWithoutAnnotationsCannotBePersisted.TestPojoWithoutAnnotationsCannotBePersisted(String),7,8
org.apache.openjpa.persistence.kernel.TestPojoWithoutAnnotationsCannotBePersisted.setUp(),8,14
org.apache.openjpa.persistence.kernel.TestPojoWithoutAnnotationsCannotBePersisted.testPersistingUnAnnotatedObject(),15,22
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned2.SequenceAssigned2(),2,2
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned2.SequenceAssigned2(long),2,2
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned2.getFoo(),1,2
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned2.setFoo(int),2,5
org.apache.openjpa.persistence.kernel.TestDynamicFetchPlan.setUp(),6,9
org.apache.openjpa.persistence.kernel.TestDynamicFetchPlan.createData(),13,24
org.apache.openjpa.persistence.kernel.TestDynamicFetchPlan.testFetchBySubClassFieldB(),25,44
org.apache.openjpa.persistence.kernel.TestDynamicFetchPlan.testFetchBySubClassFieldA(),25,44
org.apache.openjpa.persistence.kernel.TestDynamicFetchPlan.testFetchBySuperClassField(),25,45
org.apache.openjpa.persistence.kernel.TestDynamicFetchPlan.testFetchBySubClassFieldNameB(),25,47
org.apache.openjpa.persistence.kernel.TestDynamicFetchPlan.testFetchBySubClassFieldNameA(),25,47
org.apache.openjpa.persistence.kernel.TestDynamicFetchPlan.testFetchBySuperClassFieldName(),25,48
org.apache.openjpa.persistence.kernel.TestDynamicFetchPlan.testClearFetchPlan(),20,62
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.isManager(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.setManager(boolean),2,5
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.getName(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.setName(String),3,6
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.getDepartment(),1,3
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.setDepartment(Department),2,6
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.getAddress(),1,3
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.setAddress(Address),2,6
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.getId(),0,0
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.getHireStatus(),3,5
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.setHireStatus(Category),4,8
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.getCurrentStatus(),3,4
org.apache.openjpa.persistence.jdbc.sqlcache.Employee.getCurrentStatus(Category),3,6
org.apache.openjpa.persistence.meta.common.apps.OrderByPCRelSub.getSub(),1,2
org.apache.openjpa.persistence.meta.common.apps.OrderByPCRelSub.setSub(int),2,5
org.apache.openjpa.persistence.meta.common.apps.OrderByPC.getId(),0,0
org.apache.openjpa.persistence.meta.common.apps.OrderByPC.setId(long),1,1
org.apache.openjpa.persistence.meta.common.apps.OrderByPC.getStringListAsc(),3,7
org.apache.openjpa.persistence.meta.common.apps.OrderByPC.getIntArrayDesc(),2,4
org.apache.openjpa.persistence.meta.common.apps.OrderByPC.setIntArrayDesc(int[]),3,9
org.apache.openjpa.persistence.meta.common.apps.OrderByPC.getOrderByPKAsc(),2,3
org.apache.openjpa.persistence.meta.common.apps.OrderByPC.getOrderByStringDesc(),3,5
org.apache.openjpa.persistence.meta.common.apps.OrderByPC.getOrderByStringAndPKDesc(),3,5
org.apache.openjpa.persistence.meta.common.apps.OrderByPC.getOneToManyAsc(),2,3
org.apache.openjpa.persistence.models.company.basic.Person.setFirstName(String),3,6
org.apache.openjpa.persistence.models.company.basic.Person.getFirstName(),2,3
org.apache.openjpa.persistence.models.company.basic.Person.setLastName(String),3,6
org.apache.openjpa.persistence.models.company.basic.Person.getLastName(),2,3
org.apache.openjpa.persistence.models.company.basic.Person.setHomeAddress(IAddress),3,11
org.apache.openjpa.persistence.models.company.basic.Person.getHomeAddress(),2,5
org.apache.openjpa.persistence.models.company.basic.Person.setId(long),1,1
org.apache.openjpa.persistence.models.company.basic.Person.getId(),0,0
org.apache.openjpa.persistence.relations.TestInverseEagerSQL.setUp(),44,213
org.apache.openjpa.persistence.relations.TestInverseEagerSQL.testOneToManyInverseEagerQuery(),34,58
org.apache.openjpa.persistence.relations.TestInverseEagerSQL.testOneToOneInverseEagerQuery(),31,64
org.apache.openjpa.persistence.relations.TestInverseEagerSQL.testOneToManyInheritanceQuery(),34,179
org.apache.openjpa.persistence.relations.TestInverseEagerSQL.testOneToManyEagerInverseLazyQuery(),38,75
org.apache.openjpa.persistence.relations.TestInverseEagerSQL.testManyToManyEagerEagerInverseLazyQuery(),37,74
org.apache.openjpa.persistence.relations.TestInverseEagerSQL.testTargetOrphanRemoval(),40,98
org.apache.openjpa.persistence.relations.TestInverseEagerSQL.testSourceOrphanRemoval(),35,54
org.apache.openjpa.persistence.relations.TestInverseEagerSQL.main(String[]),9,10
org.apache.openjpa.persistence.merge.TestCascadeOneToManyMerge.setUp(),4,6
org.apache.openjpa.persistence.merge.TestCascadeOneToManyMerge.testOneToManyCascadeMergeSingleEntity(),52,162
org.apache.openjpa.persistence.merge.TestCascadeOneToManyMerge.testOneToManyCascadeMergeDoubleEntity(),50,203
org.apache.openjpa.persistence.query.common.apps.RuntimeTest2.RuntimeTest2(),2,2
org.apache.openjpa.persistence.query.common.apps.RuntimeTest2.RuntimeTest2(int),3,4
"org.apache.openjpa.persistence.query.common.apps.RuntimeTest2.RuntimeTest2(String,int)",4,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest2.getIntField2(),1,2
org.apache.openjpa.persistence.query.common.apps.RuntimeTest2.setIntField2(int),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest2.toString(),2,8
org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.setUp(),2,3
org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.setUp(Object),11,27
"org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.findUserIdentity(EntityManager,int)",4,8
"org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.findDepartment(EntityManager,int)",3,5
org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.createUserIdentity(),3,9
"org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.createAccount(String,IUserIdentity)",7,12
org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.createDepartment(),2,5
org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.createMember(String),4,6
org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.createEmployee(),2,5
org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.createEmployees(),6,7
org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.createProducts(),6,7
org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.createAwards(),6,7
org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.createLocations(),6,7
org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.createCertifications(),6,7
org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.createAccounts(),6,7
"org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.getEmployee(Collection<IEmployee>,int)",6,11
"org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxy.getProduct(Collection<Product>,int)",6,11
org.apache.openjpa.persistence.query.TestQueryLock.TestQueryLock(String),4,6
org.apache.openjpa.persistence.query.TestQueryLock.setUp(),3,3
org.apache.openjpa.persistence.query.TestQueryLock.testJPQLLock(),35,104
org.apache.openjpa.persistence.query.TestQueryLock.testCriteriaLock(),35,113
org.apache.openjpa.persistence.query.TestQueryLock.testNativeLock(),24,79
org.apache.openjpa.persistence.merge.model.Inner.getName(),2,3
org.apache.openjpa.persistence.merge.model.Inner.setName(String),3,6
org.apache.openjpa.persistence.merge.model.Inner.getId(),0,0
org.apache.openjpa.persistence.merge.model.Inner.setId(Long),1,1
org.apache.openjpa.persistence.merge.model.Inner.getOuters(),3,4
org.apache.openjpa.persistence.merge.model.Inner.setOuters(Collection<Outer>),4,7
org.apache.openjpa.persistence.relations.EmbeddableWithRelation.getName(),2,3
org.apache.openjpa.persistence.relations.EmbeddableWithRelation.setName(String),3,6
org.apache.openjpa.persistence.relations.EmbeddableWithRelation.getRel(),4,5
org.apache.openjpa.persistence.relations.EmbeddableWithRelation.setRel(MultipleSameTypedEmbedded),5,8
org.apache.openjpa.persistence.models.company.joined.Employee.setManager(IFullTimeEmployee),4,9
org.apache.openjpa.persistence.models.company.joined.Employee.getManager(),3,4
org.apache.openjpa.persistence.models.company.joined.Employee.setCompany(ICompany),2,7
org.apache.openjpa.persistence.models.company.joined.Employee.getCompany(),1,3
org.apache.openjpa.persistence.models.company.joined.Employee.setTitle(String),3,6
org.apache.openjpa.persistence.models.company.joined.Employee.getTitle(),2,3
org.apache.openjpa.persistence.models.company.joined.Employee.setHireDate(Date),3,10
org.apache.openjpa.persistence.models.company.joined.Employee.getHireDate(),2,5
org.apache.openjpa.persistence.kernel.TestInitializeEagerly.setUp(),11,15
org.apache.openjpa.persistence.kernel.TestInitializeEagerly.test(),8,10
org.apache.openjpa.persistence.kernel.TestRestoreValues.TestRestoreValues(String),7,11
org.apache.openjpa.persistence.kernel.TestRestoreValues.setUp(),15,26
org.apache.openjpa.persistence.kernel.TestRestoreValues.getPM(),9,20
org.apache.openjpa.persistence.kernel.TestRestoreValues.testUnloadedFieldDirtiedBeforeLoadedField(),16,29
org.apache.openjpa.persistence.kernel.TestRestoreValues.testUnloadedFieldDirtiedAfterLoadedField(),16,27
org.apache.openjpa.persistence.kernel.TestRestoreValues.testLoadedFieldDirtiedAfterLoadedField(),15,27
org.apache.openjpa.persistence.kernel.TestRestoreValues.testNewInstanceUnmodifiedInTransaction(),14,20
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.VicePresident.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.VicePresident.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.VicePresident.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.VicePresident.setName(String),3,6
org.apache.openjpa.persistence.query.common.apps.QueryTest2.QueryTest2(),2,2
org.apache.openjpa.persistence.query.common.apps.QueryTest2.QueryTest2(int),2,2
org.apache.openjpa.persistence.query.common.apps.QueryTest2.getOneToOne(),2,2
org.apache.openjpa.persistence.query.common.apps.QueryTest2.setOneToOne(QueryTest2),4,5
org.apache.openjpa.persistence.query.common.apps.QueryTest2.getStringCollection(),2,5
org.apache.openjpa.persistence.query.common.apps.QueryTest2.setStringCollection(List<String>),5,9
org.apache.openjpa.persistence.query.common.apps.QueryTest2.getOneToMany(),1,1
org.apache.openjpa.persistence.query.common.apps.QueryTest2.setOneToMany(List<QueryTest2>),5,6
org.apache.openjpa.persistence.query.common.apps.QueryTest2.getStringMap(),2,5
org.apache.openjpa.persistence.query.common.apps.QueryTest2.setStringMap(Map),4,8
org.apache.openjpa.persistence.query.common.apps.QueryTest2.getStringToManyMap(),2,5
org.apache.openjpa.persistence.query.common.apps.QueryTest2.setStringToManyMap(Map),4,8
org.apache.openjpa.persistence.query.GroupingTestCase.prepareQuery(Query),2,3
org.apache.openjpa.persistence.query.GroupingTestCase.setUp(),32,129
org.apache.openjpa.persistence.query.GroupingTestCase.testSimpleGroup(),17,32
org.apache.openjpa.persistence.query.GroupingTestCase.testOrderByAggregate(),22,37
org.apache.openjpa.persistence.query.GroupingTestCase.testCompoundGroupSame(),17,33
org.apache.openjpa.persistence.query.GroupingTestCase.testCompoundGroupDifferent(),17,39
org.apache.openjpa.persistence.query.GroupingTestCase.testDifferentGroupLengths(),16,32
org.apache.openjpa.persistence.query.GroupingTestCase.testGroupRelationField(),18,36
org.apache.openjpa.persistence.query.GroupingTestCase.testSubstringInGroupBy(),24,57
org.apache.openjpa.persistence.query.GroupingTestCase.testGroupedAggregate(),17,32
org.apache.openjpa.persistence.query.GroupingTestCase.testGroupedRelationAggregate(),20,37
org.apache.openjpa.persistence.query.GroupingTestCase.testGroupedMixedProjection(),19,38
org.apache.openjpa.persistence.query.GroupingTestCase.testSimpleHaving(),12,17
org.apache.openjpa.persistence.query.GroupingTestCase.testAggregateHaving(),12,16
org.apache.openjpa.persistence.query.GroupingTestCase.testMixedHaving(),17,32
org.apache.openjpa.persistence.query.GroupingTestCase.testVariableGroup(),18,34
org.apache.openjpa.persistence.query.GroupingTestCase.testVariableHaving(),24,41
org.apache.openjpa.persistence.meta.ExplicitFieldAccess.getF1(),0,0
org.apache.openjpa.persistence.meta.ExplicitFieldAccess.setF1(long),1,1
org.apache.openjpa.persistence.meta.ExplicitFieldAccess.getF2(),0,0
org.apache.openjpa.persistence.meta.ExplicitFieldAccess.setF2(int),1,1
org.apache.openjpa.persistence.meta.ExplicitFieldAccess.getF3(),0,0
org.apache.openjpa.persistence.meta.ExplicitFieldAccess.setF3(short),1,1
org.apache.openjpa.persistence.meta.ExplicitFieldAccess.getF4(),4,4
org.apache.openjpa.persistence.meta.ExplicitFieldAccess.setF4(ImplicitFieldAccessBase),5,5
org.apache.openjpa.persistence.meta.ExplicitFieldAccess.getF5(),4,4
org.apache.openjpa.persistence.meta.ExplicitFieldAccess.setF5(ImplicitFieldAccessBase),5,5
org.apache.openjpa.persistence.meta.ExplicitFieldAccess.getF6(),4,4
org.apache.openjpa.persistence.meta.ExplicitFieldAccess.setF6(ImplicitFieldAccessBase),5,5
org.apache.openjpa.persistence.models.company.joined.Company.setName(String),3,6
org.apache.openjpa.persistence.models.company.joined.Company.getName(),2,3
org.apache.openjpa.persistence.models.company.joined.Company.setAddress(IAddress),2,7
org.apache.openjpa.persistence.models.company.joined.Company.getAddress(),1,3
org.apache.openjpa.persistence.models.company.joined.Company.setEmployees(Set<>),3,9
org.apache.openjpa.persistence.models.company.joined.Company.getEmployees(),3,4
org.apache.openjpa.persistence.models.company.joined.Company.setProducts(Set<>),3,9
org.apache.openjpa.persistence.models.company.joined.Company.getProducts(),3,4
org.apache.openjpa.persistence.models.company.joined.Company.setId(long),1,1
org.apache.openjpa.persistence.models.company.joined.Company.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.AbstractMappedAppIdSuper.getPk(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AbstractMappedAppIdSuper.setPk(String),2,2
org.apache.openjpa.persistence.jdbc.meta.TestEJBInverseOneToOne.TestEJBInverseOneToOne(String),5,6
org.apache.openjpa.persistence.jdbc.meta.TestEJBInverseOneToOne.setUp(),3,5
org.apache.openjpa.persistence.jdbc.meta.TestEJBInverseOneToOne.insertData(EntityManager),12,24
org.apache.openjpa.persistence.jdbc.meta.TestEJBInverseOneToOne.testLoad(),11,24
org.apache.openjpa.persistence.query.TestNamedQueries.TestNamedQueries(String),4,6
org.apache.openjpa.persistence.query.TestNamedQueries.setUp(),10,17
org.apache.openjpa.persistence.query.TestNamedQueries.testNamedClassQuery(),30,90
org.apache.openjpa.persistence.query.TestNamedQueries.testNamespace(),12,23
org.apache.openjpa.persistence.query.TestNamedQueries.testSystemJDOQL(),20,39
org.apache.openjpa.persistence.query.TestNamedQueries.testInterfaceResultClass(),12,19
org.apache.openjpa.persistence.jdbc.meta.TestMultiDFG.TestMultiDFG(String),5,6
org.apache.openjpa.persistence.jdbc.meta.TestMultiDFG.TestMultiDFG(),5,8
org.apache.openjpa.persistence.jdbc.meta.TestMultiDFG.setUp(),14,23
org.apache.openjpa.persistence.jdbc.meta.TestMultiDFG.testDFG(),23,54
org.apache.openjpa.persistence.sequence.TestDropAddSequence.setUp(),29,48
org.apache.openjpa.persistence.sequence.TestDropAddSequence.getPersistenceUnitName(),8,8
org.apache.openjpa.persistence.sequence.TestDropAddSequence.testDropAddSequence(),35,62
org.apache.openjpa.persistence.sequence.TestDropAddSequence.supportsSequences(OpenJPAEntityManagerFactorySPI),15,21
org.apache.openjpa.persistence.models.company.idclass.Employee.setManager(IFullTimeEmployee),4,9
org.apache.openjpa.persistence.models.company.idclass.Employee.getManager(),3,4
org.apache.openjpa.persistence.models.company.idclass.Employee.setCompany(ICompany),2,7
org.apache.openjpa.persistence.models.company.idclass.Employee.getCompany(),1,3
org.apache.openjpa.persistence.models.company.idclass.Employee.setTitle(String),3,6
org.apache.openjpa.persistence.models.company.idclass.Employee.getTitle(),2,3
org.apache.openjpa.persistence.models.company.idclass.Employee.setHireDate(Date),3,10
org.apache.openjpa.persistence.models.company.idclass.Employee.getHireDate(),2,5
org.apache.openjpa.persistence.simple.TestBasicAnnotation.setUp(),4,5
org.apache.openjpa.persistence.simple.TestBasicAnnotation.testEagerFetchType(),42,145
org.apache.openjpa.persistence.simple.TestBasicAnnotation.main(String[]),8,9
org.apache.openjpa.persistence.jdbc.meta.TestNoClassColumn.TestNoClassColumn(),4,6
org.apache.openjpa.persistence.jdbc.meta.TestNoClassColumn.TestNoClassColumn(String),3,5
org.apache.openjpa.persistence.jdbc.meta.TestNoClassColumn.testQuery(),25,43
org.apache.openjpa.persistence.property.IAddress.getCity(),2,2
org.apache.openjpa.persistence.property.IAddress.setCity(String),3,4
org.apache.openjpa.persistence.property.IAddress.getCountry(),2,2
org.apache.openjpa.persistence.property.IAddress.setCountry(String),3,4
org.apache.openjpa.persistence.property.IAddress.getLine1(),2,2
org.apache.openjpa.persistence.property.IAddress.setLine1(String),3,4
org.apache.openjpa.persistence.property.IAddress.getLine2(),2,2
org.apache.openjpa.persistence.property.IAddress.setLine2(String),3,4
org.apache.openjpa.persistence.property.IAddress.getState(),1,1
org.apache.openjpa.persistence.property.IAddress.setState(String),2,2
org.apache.openjpa.persistence.property.IAddress.getZipCode(),3,3
org.apache.openjpa.persistence.property.IAddress.setZipCode(String),4,6
org.apache.openjpa.persistence.kernel.TestEJBManagedInverses.TestEJBManagedInverses(String),7,8
org.apache.openjpa.persistence.kernel.TestEJBManagedInverses.setUp(),3,5
org.apache.openjpa.persistence.kernel.TestEJBManagedInverses.testOneOne(),1,2
org.apache.openjpa.persistence.kernel.TestEJBManagedInverses.testOneOneWithPreStore(),3,4
org.apache.openjpa.persistence.kernel.TestEJBManagedInverses.oneOneTest(boolean),20,63
org.apache.openjpa.persistence.meta.TestValueStrategies.TestValueStrategies(String),5,7
org.apache.openjpa.persistence.meta.TestValueStrategies.setUp(),4,4
org.apache.openjpa.persistence.meta.TestValueStrategies.testIgnoreUpdate(),18,66
org.apache.openjpa.persistence.meta.TestValueStrategies.testRestrictUpdate(),22,57
org.apache.openjpa.persistence.meta.TestValueStrategies.testUUID(),24,130
org.apache.openjpa.persistence.meta.TestValueStrategies.testSequence(),20,96
org.apache.openjpa.persistence.meta.TestValueStrategies.testVersion(),3,5
org.apache.openjpa.persistence.meta.TestValueStrategies.testVersionDataCache(),12,22
org.apache.openjpa.persistence.meta.TestValueStrategies.versionTest(EntityManagerFactory),33,130
org.apache.openjpa.persistence.meta.TestValueStrategies.testVersionDetach(),32,150
org.apache.openjpa.persistence.meta.TestValueStrategies.testVersionRefresh(),21,74
org.apache.openjpa.persistence.jdbc.sqlcache.OrderJPA.getOrderId(),0,0
org.apache.openjpa.persistence.jdbc.sqlcache.OrderJPA.setOrderId(long),1,1
org.apache.openjpa.persistence.jdbc.sqlcache.OrderJPA.getCustomerId(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.OrderJPA.setCustomerId(int),2,5
org.apache.openjpa.persistence.jdbc.sqlcache.OrderJPA.getDistrictId(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.OrderJPA.setDistrictId(int),2,5
org.apache.openjpa.persistence.jdbc.sqlcache.OrderJPA.getWarehouseId(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.OrderJPA.setWarehouseId(int),2,5
org.apache.openjpa.persistence.jdbc.order.BiOrderEntity.BiOrderEntity(),1,1
org.apache.openjpa.persistence.jdbc.order.BiOrderEntity.BiOrderEntity(String),3,6
org.apache.openjpa.persistence.jdbc.order.BiOrderEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.order.BiOrderEntity.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.BiOrderEntity.getName(),2,3
org.apache.openjpa.persistence.jdbc.order.BiOrderEntity.setName(String),3,6
org.apache.openjpa.persistence.jdbc.order.BiOrderEntity.getEntity(),2,4
org.apache.openjpa.persistence.jdbc.order.BiOrderEntity.setEntity(BiOrderMappedByEntity),4,7
org.apache.openjpa.persistence.jdbc.order.BiOrderEntity.equals(Object),6,14
org.apache.openjpa.persistence.jdbc.query.TestStringFunctions.TestStringFunctions(String),6,11
org.apache.openjpa.persistence.jdbc.query.TestStringFunctions.setUp(),20,55
org.apache.openjpa.persistence.jdbc.query.TestStringFunctions.tearDown(),3,4
org.apache.openjpa.persistence.jdbc.query.TestStringFunctions.testSubstring(),6,10
org.apache.openjpa.persistence.jdbc.query.TestStringFunctions.testIndexOf(),5,12
org.apache.openjpa.persistence.jdbc.query.TestStringFunctions.testToLowerCase(),5,10
org.apache.openjpa.persistence.jdbc.query.TestStringFunctions.testToUpperCase(),5,6
org.apache.openjpa.persistence.jdbc.query.TestStringFunctions.testStartsWith(),6,10
org.apache.openjpa.persistence.jdbc.query.TestStringFunctions.testEndsWith(),5,7
org.apache.openjpa.persistence.jdbc.query.TestStringFunctions.testMatches(),6,10
org.apache.openjpa.persistence.jdbc.query.TestStringFunctions.assertMatch(String),14,23
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.RuntimeTest1(),2,2
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.RuntimeTest1(int),4,5
"org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.RuntimeTest1(String,int)",5,9
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.getIntField1(),1,2
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.setIntField(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.setIntField1(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.setStringField(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.getSelfOneOne(),3,4
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.setSelfOneOne(RuntimeTest1),4,7
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.getSelfOneMany(),2,3
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.setSelfOneMany(Set),2,6
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.toString(),2,8
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.getLocaleField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.setLocaleField(Locale),3,10
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.getDateField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1.setDateField(Date),3,6
org.apache.openjpa.persistence.proxy.TestDetachMerge.setUp(),15,20
org.apache.openjpa.persistence.proxy.TestDetachMerge.testAnnuity1Compat(),41,103
org.apache.openjpa.persistence.proxy.TestDetachMerge.testAnnuity2Compat(),41,103
org.apache.openjpa.persistence.proxy.TestDetachMerge.execute(OpenJPAEntityManagerFactorySPI),45,281
"org.apache.openjpa.persistence.proxy.TestDetachMerge.createAnnuityPayout(OpenJPAEntityManagerFactorySPI,IAnnuity)",24,57
"org.apache.openjpa.persistence.proxy.TestDetachMerge.createAnnuityWithRider(OpenJPAEntityManagerFactorySPI,AnnuityType)",17,53
org.apache.openjpa.persistence.proxy.TestDetachMerge.createAnnuity(AnnuityType),17,83
org.apache.openjpa.persistence.proxy.TestDetachMerge.getRider(),8,23
"org.apache.openjpa.persistence.proxy.TestDetachMerge.verifyAnnuityValues(OpenJPAEntityManagerFactorySPI,IAnnuity,AnnuityType)",33,272
"org.apache.openjpa.persistence.proxy.TestDetachMerge.assertEqual(IAnnuity,IAnnuity,String,String)",12,52
"org.apache.openjpa.persistence.proxy.TestDetachMerge.assertEqual(IEquityAnnuity,IEquityAnnuity,String,String)",13,56
"org.apache.openjpa.persistence.proxy.TestDetachMerge.assertEqual(IFixedAnnuity,IFixedAnnuity,String,String)",13,56
"org.apache.openjpa.persistence.proxy.TestDetachMerge.findAnnuityById(OpenJPAEntityManagerFactorySPI,Class<Annuity>,String)",11,18
"org.apache.openjpa.persistence.proxy.TestDetachMerge.assertEqual(List<IPayout>,List<IPayout>,String,String)",11,55
"org.apache.openjpa.persistence.proxy.TestDetachMerge.assertEqual(IPayout,IPayout,String,String)",10,40
"org.apache.openjpa.persistence.proxy.TestDetachMerge.assertRidersEqual(List<IRider>,List<IRider>,String,String)",11,56
"org.apache.openjpa.persistence.proxy.TestDetachMerge.assertEqual(IRider,IRider,String,String)",11,39
"org.apache.openjpa.persistence.proxy.TestDetachMerge.assertPayorsEqual(List<IPayor>,List<IPayor>,String,String)",12,63
"org.apache.openjpa.persistence.proxy.TestDetachMerge.verifyPayorValues(OpenJPAEntityManagerFactorySPI,IPayor)",16,28
"org.apache.openjpa.persistence.proxy.TestDetachMerge.findPayorById(OpenJPAEntityManagerFactorySPI,Class<Payor>,String)",10,16
"org.apache.openjpa.persistence.proxy.TestDetachMerge.assertEqual(IPayor,IPayor,String,String)",10,31
org.apache.openjpa.persistence.proxy.TestDetachMerge.createPayor(OpenJPAEntityManagerFactorySPI),15,30
"org.apache.openjpa.persistence.proxy.TestDetachMerge.verifyAnnuityHolderValues(OpenJPAEntityManagerFactorySPI,IAnnuityHolder)",18,50
"org.apache.openjpa.persistence.proxy.TestDetachMerge.findHolderById(OpenJPAEntityManagerFactorySPI,Class<AnnuityHolder>,String)",12,21
org.apache.openjpa.persistence.proxy.TestDetachMerge.createEM(OpenJPAEntityManagerFactorySPI),7,13
"org.apache.openjpa.persistence.proxy.TestDetachMerge.assertEqual(IAnnuityHolder,IAnnuityHolder,String,String)",10,40
"org.apache.openjpa.persistence.proxy.TestDetachMerge.assertEqual(IContact,IContact,String,String)",10,31
"org.apache.openjpa.persistence.proxy.TestDetachMerge.createAnnuityHolder(OpenJPAEntityManagerFactorySPI,IContact)",25,75
"org.apache.openjpa.persistence.proxy.TestDetachMerge.verifyContactValues(OpenJPAEntityManagerFactorySPI,IContact)",17,30
"org.apache.openjpa.persistence.proxy.TestDetachMerge.findContactById(OpenJPAEntityManagerFactorySPI,Class<Contact>,String)",10,16
org.apache.openjpa.persistence.proxy.TestDetachMerge.createContact(OpenJPAEntityManagerFactorySPI),18,40
org.apache.openjpa.persistence.proxy.TestDetachMerge.getId(),4,8
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKListEntity.getKeyA(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKListEntity.setKeyA(int),2,5
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKListEntity.getKeyB(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKListEntity.setKeyB(int),2,5
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKListEntity.getKeyC(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKListEntity.setKeyC(int),2,5
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKListEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKListEntity.setId(int),1,1
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKListEntity.getTe(),3,3
org.apache.openjpa.persistence.jdbc.sqlcache.CombinedPKListEntity.setTe(CombinedPKTestEntity),4,4
org.apache.openjpa.persistence.proxy.delayed.hset.Account.Account(),1,1
"org.apache.openjpa.persistence.proxy.delayed.hset.Account.Account(String,IUserIdentity)",8,13
org.apache.openjpa.persistence.proxy.delayed.hset.Account.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.hset.Account.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.hset.Account.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.hset.Account.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.hset.Account.setUserIdent(IUserIdentity),4,13
org.apache.openjpa.persistence.proxy.delayed.hset.Account.getUserIdent(),3,6
org.apache.openjpa.persistence.jdbc.order.TestOrderColumnXML.testOrderColumnNullableFalse(),41,103
org.apache.openjpa.persistence.jdbc.order.TestOrderColumnXML.testOrderColumnColumnDefinition(),50,216
org.apache.openjpa.persistence.jdbc.order.TestOrderColumnXML.testOrderColumnTableXML(),30,84
org.apache.openjpa.persistence.jdbc.order.TestOrderColumnXML.testOrderColumnOrderBy(),35,82
org.apache.openjpa.persistence.jdbc.order.TestOrderColumnXML.testOrderColumnMetaDataSerialization(),55,167
"org.apache.openjpa.persistence.jdbc.order.TestOrderColumnXML.getOrderColumn(OpenJPAEntityManagerFactorySPI,Class,String)",18,36
"org.apache.openjpa.persistence.jdbc.order.TestOrderColumnXML.validateOrderColumnTable(OpenJPAEntityManagerFactorySPI,Class,String,String,String)",18,46
"org.apache.openjpa.persistence.jdbc.order.TestOrderColumnXML.validateOrderColumnDef(OpenJPAEntityManagerFactorySPI,Class,String,String)",15,25
"org.apache.openjpa.persistence.jdbc.order.TestOrderColumnXML.validateOrderColumnNullable(OpenJPAEntityManagerFactorySPI,Class,String,boolean)",14,22
"org.apache.openjpa.persistence.jdbc.order.TestOrderColumnXML.tableAndColumnExists(OpenJPAEntityManagerFactorySPI,OpenJPAEntityManagerSPI,String,String,String)",41,117
org.apache.openjpa.persistence.jdbc.order.TestOrderColumnXML.cleanupEMF(OpenJPAEntityManagerFactorySPI),24,34
org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.setUp(),12,18
org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.testEmbeddedMetaData(),20,56
org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.testManagedInterface(),29,104
org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.testInterfaceOwner(),26,126
org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.testCollection(),25,124
org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.testCollectionPC(),33,160
org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.testCollectionInterfaces(),33,169
org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.testMixedQuery(),28,47
org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.testQueryForMixedInterfaceImpls(),16,29
org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.testMixedExtent(),17,51
org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.createMixed(),15,31
org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.testUnimplementedThrowsException(),17,23
org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.testNonMappedCreateInstanceException(),22,38
org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.testDetach(),24,59
"org.apache.openjpa.persistence.managedinterface.TestManagedInterfaces.createInstance(OpenJPAEntityManager,int)",9,15
org.apache.openjpa.persistence.relations.TestIncompleteRelationship.setUp(),13,35
org.apache.openjpa.persistence.relations.TestIncompleteRelationship.testIncompleteRelationship(),24,71
org.apache.openjpa.persistence.query.TestNewlinesInQueries.setUp(),14,21
org.apache.openjpa.persistence.query.TestNewlinesInQueries.testQuery(),14,23
org.apache.openjpa.persistence.proxy.delayed.hset.Department.setEmployees(Collection<IEmployee>),4,9
org.apache.openjpa.persistence.proxy.delayed.hset.Department.getEmployees(),3,4
org.apache.openjpa.persistence.proxy.delayed.hset.Department.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.hset.Department.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.hset.Department.setLocations(Collection<Location>),4,9
org.apache.openjpa.persistence.proxy.delayed.hset.Department.getLocations(),3,4
org.apache.openjpa.persistence.proxy.delayed.hset.Department.setProducts(Collection<Product>),4,9
org.apache.openjpa.persistence.proxy.delayed.hset.Department.getProducts(),3,4
org.apache.openjpa.persistence.proxy.delayed.hset.Department.setCertifications(Collection<Certification>),4,9
org.apache.openjpa.persistence.proxy.delayed.hset.Department.getCertifications(),3,4
org.apache.openjpa.persistence.proxy.delayed.hset.Department.setAwards(Collection<Award>),4,9
org.apache.openjpa.persistence.proxy.delayed.hset.Department.getAwards(),3,4
org.apache.openjpa.persistence.jdbc.query.TestJDBCGrouping.prepareQuery(Query),3,4
org.apache.openjpa.persistence.sequence.TestSequenceGenerationOnMT.setUp(),6,7
org.apache.openjpa.persistence.sequence.TestSequenceGenerationOnMT.testIdGenerationInMultithreadedEnvironment(),34,57
org.apache.openjpa.persistence.sequence.TestSequenceGenerationOnMT.Loader.Loader(EntityManager),3,3
org.apache.openjpa.persistence.sequence.TestSequenceGenerationOnMT.Loader.call(),8,11
org.apache.openjpa.persistence.datacache.common.apps.FlushDataCacheObject.setString(String),3,6
org.apache.openjpa.persistence.datacache.common.apps.FlushDataCacheObject.getString(),1,3
org.apache.openjpa.persistence.delimited.identifiers.xml.Chevrolet2.Chevrolet2(),1,1
org.apache.openjpa.persistence.delimited.identifiers.xml.Chevrolet2.Chevrolet2(int),1,1
org.apache.openjpa.persistence.generationtype.EntityWithGeneratedValueAndPostPersist.EntityWithGeneratedValueAndPostPersist(long),5,5
org.apache.openjpa.persistence.generationtype.EntityWithGeneratedValueAndPostPersist.getName(),2,3
org.apache.openjpa.persistence.generationtype.EntityWithGeneratedValueAndPostPersist.setName(String),3,6
org.apache.openjpa.persistence.generationtype.EntityWithGeneratedValueAndPostPersist.getId(),0,0
org.apache.openjpa.persistence.generationtype.EntityWithGeneratedValueAndPostPersist.getBingo(),1,2
org.apache.openjpa.persistence.generationtype.EntityWithGeneratedValueAndPostPersist.setCache(ValueCache),3,7
org.apache.openjpa.persistence.generationtype.EntityWithGeneratedValueAndPostPersist.postPersistCallback(),10,12
org.apache.openjpa.persistence.kernel.TestArrayValues2.testStringArray(),8,18
org.apache.openjpa.persistence.kernel.TestArrayValues2.testLongArray(),11,18
org.apache.openjpa.persistence.kernel.TestArrayValues2.testLongPrimitiveArray(),13,20
org.apache.openjpa.persistence.kernel.TestArrayValues2.testShortArray(),7,14
org.apache.openjpa.persistence.kernel.TestArrayValues2.testShortPrimitiveArray(),9,16
org.apache.openjpa.persistence.kernel.TestArrayValues2.testIntArray(),8,16
org.apache.openjpa.persistence.kernel.TestArrayValues2.testIntPrimitiveArray(),9,16
org.apache.openjpa.persistence.kernel.TestArrayValues2.testBooleanArray(),7,14
org.apache.openjpa.persistence.kernel.TestArrayValues2.testCharacterArray(),8,19
org.apache.openjpa.persistence.kernel.TestArrayValues2.testCharacterPrimitiveArray(),10,18
org.apache.openjpa.persistence.kernel.TestArrayValues2.testCharacterPrimitiveClobArray(),11,19
org.apache.openjpa.persistence.kernel.TestArrayValues2.testBooleanPrimitiveArray(),9,16
org.apache.openjpa.persistence.kernel.TestArrayValues2.testFloatArray(),7,14
org.apache.openjpa.persistence.kernel.TestArrayValues2.testFloatPrimitiveArray(),9,16
org.apache.openjpa.persistence.kernel.TestArrayValues2.testDoubleArray(),7,14
org.apache.openjpa.persistence.kernel.TestArrayValues2.testDoublePrimitiveArray(),9,16
org.apache.openjpa.persistence.kernel.TestArrayValues2.testDateArray(),8,18
"org.apache.openjpa.persistence.kernel.TestArrayValues2.saveArray(Object,boolean,boolean)",8,17
"org.apache.openjpa.persistence.kernel.TestArrayValues2.saveArrayInternal(Object,boolean,boolean)",27,128
org.apache.openjpa.persistence.kernel.TestArrayValues2.convertPrimitiveArray(Object),9,26
"org.apache.openjpa.persistence.kernel.TestArrayValues2.assertClassAndValueEquals(Object,Object)",13,30
"org.apache.openjpa.persistence.kernel.TestArrayValues2.setGetTestArray(ArraysTest,Object,boolean,boolean,boolean)",20,172
"org.apache.openjpa.persistence.kernel.TestArrayValues2.TestArraySorter.compare(Object,Object)",9,18
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC.HelperPC(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC.HelperPC(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC.setStringField(String),3,10
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC.getHelper(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC.setHelper(HelperPC),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC.getEager(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC.setEager(EagerPC),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HelperPC.setId(int),1,1
org.apache.openjpa.persistence.models.company.IProductOrder.setItems(List<>),5,6
org.apache.openjpa.persistence.models.company.IProductOrder.getItems(),4,4
org.apache.openjpa.persistence.models.company.IProductOrder.setOrderDate(Date),2,4
org.apache.openjpa.persistence.models.company.IProductOrder.getOrderDate(),1,2
org.apache.openjpa.persistence.models.company.IProductOrder.setShippedDate(Date),3,6
org.apache.openjpa.persistence.models.company.IProductOrder.getShippedDate(),2,3
org.apache.openjpa.persistence.models.company.IProductOrder.setCustomer(ICustomer),2,4
org.apache.openjpa.persistence.models.company.IProductOrder.getCustomer(),1,2
org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxyDetachLite.setUp(),8,11
org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxyDetachLite.testPostDetach(),52,128
org.apache.openjpa.persistence.meta.TestMetamodel.setUp(),33,49
org.apache.openjpa.persistence.meta.TestMetamodel.testMetaModelForDomainClassesExist(),11,16
org.apache.openjpa.persistence.meta.TestMetamodel.testMetaClassFieldsArePopulated(),24,46
org.apache.openjpa.persistence.meta.TestMetamodel.testDomainClassCategorizedInPersistentCategory(),27,98
org.apache.openjpa.persistence.meta.TestMetamodel.testGetAttributeByNameAndTypeFromMetaClass(),21,51
org.apache.openjpa.persistence.meta.TestMetamodel.testAttributeByDeclaration(),23,67
org.apache.openjpa.persistence.meta.TestMetamodel.testPCCollection(),25,85
org.apache.openjpa.persistence.meta.TestMetamodel.testPCList(),22,79
org.apache.openjpa.persistence.meta.TestMetamodel.testPCSet(),25,84
org.apache.openjpa.persistence.meta.TestMetamodel.testDeclaredFields(),18,35
org.apache.openjpa.persistence.meta.TestMetamodel.testNonExistentField(),13,30
org.apache.openjpa.persistence.meta.TestMetamodel.testAttributeGettersForValidInput(),35,232
org.apache.openjpa.persistence.meta.TestMetamodel.testSimpleIdAttributes(),17,29
org.apache.openjpa.persistence.meta.TestMetamodel.testVersionAttributes(),15,28
org.apache.openjpa.persistence.meta.TestMetamodel.testIdClassAttributes(),15,32
org.apache.openjpa.persistence.meta.TestMetamodel.testBasicAttributeType(),16,34
org.apache.openjpa.persistence.meta.TestMetamodel.testEmbeddedAttributeType(),12,28
org.apache.openjpa.persistence.meta.TestMetamodel.testNotFoundErrorMessage(),40,149
"org.apache.openjpa.persistence.meta.TestMetamodel.assertFails(ManagedType<>,String,boolean)",17,28
org.apache.openjpa.persistence.meta.TestMetamodel.categorize(Class<>),9,20
"org.apache.openjpa.persistence.meta.TestMetamodel.assertCategory(PersistenceType,Class<>)",7,11
"org.apache.openjpa.persistence.meta.TestMetamodel.getStaticField(Class<>,String)",12,20
org.apache.openjpa.persistence.proxy.delayed.lhset.Member.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.lhset.Member.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.lhset.Member.setAccounts(Collection<IAccount>),6,11
org.apache.openjpa.persistence.proxy.delayed.lhset.Member.getAccounts(),3,4
org.apache.openjpa.persistence.proxy.entities.AnnuityHolder.getCategory(),3,5
org.apache.openjpa.persistence.proxy.entities.AnnuityHolder.setCategory(AnnuityHolderCategory),4,8
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleD.setStringD(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleD.getStringD(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleD.setIntD(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppSingleD.getIntD(),0,0
org.apache.openjpa.persistence.detach.IntegerVersionEntity.getVersion(),1,2
org.apache.openjpa.persistence.detach.IntegerVersionEntity.IntegerVersionEntity(int),3,3
org.apache.openjpa.persistence.detach.IntegerVersionEntity.getId(),0,0
org.apache.openjpa.persistence.detach.IntegerVersionEntity.setId(int),1,1
org.apache.openjpa.persistence.detach.IntegerVersionEntity.getName(),2,3
org.apache.openjpa.persistence.detach.IntegerVersionEntity.setName(String),3,6
org.apache.openjpa.persistence.merge.model.Outer.getName(),2,3
org.apache.openjpa.persistence.merge.model.Outer.setName(String),3,6
org.apache.openjpa.persistence.merge.model.Outer.getId(),0,0
org.apache.openjpa.persistence.merge.model.Outer.setId(Long),1,1
org.apache.openjpa.persistence.merge.model.Outer.getInners(),3,4
org.apache.openjpa.persistence.merge.model.Outer.setInners(List<Inner>),4,7
org.apache.openjpa.persistence.relations.TestParallelEagerMap.setUp(),12,15
org.apache.openjpa.persistence.relations.TestParallelEagerMap.testParentNotNull(),25,107
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest5.getVertValue(),2,4
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest5.setVertValue(int),3,9
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest5.getVertRel(),4,6
org.apache.openjpa.persistence.jdbc.common.apps.MappingTest5.setVertRel(MappingTest5),5,11
org.apache.openjpa.persistence.models.company.IPerson.setFirstName(String),3,4
org.apache.openjpa.persistence.models.company.IPerson.getFirstName(),2,2
org.apache.openjpa.persistence.models.company.IPerson.setLastName(String),3,4
org.apache.openjpa.persistence.models.company.IPerson.getLastName(),2,2
org.apache.openjpa.persistence.models.company.IPerson.setHomeAddress(IAddress),3,6
org.apache.openjpa.persistence.models.company.IPerson.getHomeAddress(),2,3
org.apache.openjpa.persistence.jpql.entities.XMLOrderedNameEntity.XMLOrderedNameEntity(),3,3
org.apache.openjpa.persistence.jpql.entities.XMLOrderedNameEntity.XMLOrderedNameEntity(String),4,8
org.apache.openjpa.persistence.jpql.entities.XMLOrderedNameEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.entities.XMLOrderedNameEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.entities.XMLOrderedNameEntity.getName(),2,3
org.apache.openjpa.persistence.jpql.entities.XMLOrderedNameEntity.setName(String),3,6
org.apache.openjpa.persistence.jpql.entities.XMLOrderedNameEntity.toString(),4,6
org.apache.openjpa.persistence.jpql.entities.XMLOrderedNameEntity.getColumns(),4,5
org.apache.openjpa.persistence.jpql.entities.XMLOrderedNameEntity.setColumns(List<IColumnEntity>),5,8
org.apache.openjpa.persistence.jpql.entities.XMLOrderedNameEntity.addColumns(IColumnEntity),6,14
org.apache.openjpa.persistence.jpql.entities.XMLOrderedNameEntity.removeColumns(IColumnEntity),6,20
org.apache.openjpa.persistence.jdbc.common.apps.PagingHelperPC.PagingHelperPC(),2,2
org.apache.openjpa.persistence.jdbc.common.apps.PagingHelperPC.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.PagingHelperPC.setIntField(int),2,5
org.apache.openjpa.persistence.proxy.delayed.tset.Employee.setEmpName(String),4,10
org.apache.openjpa.persistence.proxy.delayed.tset.Employee.getEmpName(),3,5
org.apache.openjpa.persistence.proxy.delayed.tset.Employee.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.tset.Employee.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.tset.Employee.setDept(IDepartment),3,6
org.apache.openjpa.persistence.proxy.delayed.tset.Employee.getDept(),2,3
org.apache.openjpa.persistence.proxy.delayed.tset.Employee.hashCode(),2,2
org.apache.openjpa.persistence.proxy.delayed.tset.Employee.equals(Object),6,13
org.apache.openjpa.persistence.proxy.delayed.tset.Employee.compareTo(Employee),5,13
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCEntityB.getEntityBData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.intdiscriminator.PIdJTIDMSCEntityB.setEntityBData(String),4,10
org.apache.openjpa.persistence.query.TestComplexQueries.TestComplexQueries(String),4,6
org.apache.openjpa.persistence.query.TestComplexQueries.setUp(),1,1
org.apache.openjpa.persistence.query.TestComplexQueries.clear(),2,14
"org.apache.openjpa.persistence.query.TestComplexQueries.complexQuery(int,Object,String,Class)",33,85
org.apache.openjpa.persistence.query.TestComplexQueries.testComplex1(),4,9
org.apache.openjpa.persistence.query.TestComplexQueries.testComplex2(),11,21
org.apache.openjpa.persistence.query.TestComplexQueries.testComplex3(),11,21
org.apache.openjpa.persistence.query.TestComplexQueries.testComplex4(),11,23
org.apache.openjpa.persistence.query.TestComplexQueries.testComplex5(),11,25
org.apache.openjpa.persistence.query.TestComplexQueries.testComplex6(),11,27
org.apache.openjpa.persistence.query.TestComplexQueries.testComplex7(),11,29
org.apache.openjpa.persistence.query.TestComplexQueries.testComplex8(),11,31
org.apache.openjpa.persistence.query.TestComplexQueries.testComplex9(),11,31
org.apache.openjpa.persistence.query.TestComplexQueries.testComplex10(),11,21
org.apache.openjpa.persistence.query.TestComplexQueries.testComplex11(),11,23
org.apache.openjpa.persistence.query.TestComplexQueries.testComplex12(),20,33
org.apache.openjpa.persistence.query.TestComplexQueries.testComplex13(),12,22
org.apache.openjpa.persistence.jpql.version.type.ChildVersionEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.version.type.ChildVersionEntity.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCMappedSuperclass.getMappedSuperclassData(),4,7
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCMappedSuperclass.setMappedSuperclassData(String),5,14
org.apache.openjpa.persistence.query.SimpleEntity.SimpleEntity(),2,2
"org.apache.openjpa.persistence.query.SimpleEntity.SimpleEntity(String,String)",5,10
org.apache.openjpa.persistence.query.SimpleEntity.getId(),0,0
org.apache.openjpa.persistence.query.SimpleEntity.setId(long),1,1
org.apache.openjpa.persistence.query.SimpleEntity.getName(),2,3
org.apache.openjpa.persistence.query.SimpleEntity.setName(String),3,6
org.apache.openjpa.persistence.query.SimpleEntity.getValue(),2,3
org.apache.openjpa.persistence.query.SimpleEntity.setValue(String),3,6
org.apache.openjpa.persistence.kernel.TestInitialValueFetching.TestInitialValueFetching(String),8,13
org.apache.openjpa.persistence.kernel.TestInitialValueFetching.setUp(),14,26
org.apache.openjpa.persistence.kernel.TestInitialValueFetching.testInitialValueString(),19,60
org.apache.openjpa.persistence.kernel.TestInitialValueFetching.testInitialValueInt(),18,47
org.apache.openjpa.persistence.kernel.TestInitialValueFetching.testInitialValueMutableValueFailures(),35,65
org.apache.openjpa.persistence.kernel.TestInitialValueFetching.testInitialValueDate(),33,88
org.apache.openjpa.persistence.kernel.TestInitialValueFetching.testInitialValueExceptions(),31,47
org.apache.openjpa.persistence.kernel.TestInitialValueFetching.getObject(OpenJPAEntityManager),18,41
org.apache.openjpa.persistence.meta.TestNonPersistentFields.TestNonPersistentFields(String),5,7
org.apache.openjpa.persistence.meta.TestNonPersistentFields.setUp(),11,18
org.apache.openjpa.persistence.meta.TestNonPersistentFields.testNonPersistentFields(),12,41
org.apache.openjpa.persistence.kernel.TestBrokerFactoryPooling.TestBrokerFactoryPooling(String),8,13
org.apache.openjpa.persistence.kernel.TestBrokerFactoryPooling.testPooling(),5,12
org.apache.openjpa.persistence.query.common.apps.ComplexD.ComplexD(),1,1
"org.apache.openjpa.persistence.query.common.apps.ComplexD.ComplexD(String,int,Date,ComplexE[],ComplexC)",6,14
org.apache.openjpa.persistence.query.common.apps.ComplexD.setStringD(String),2,6
org.apache.openjpa.persistence.query.common.apps.ComplexD.getStringD(),1,3
org.apache.openjpa.persistence.query.common.apps.ComplexD.setIntD(int),1,1
org.apache.openjpa.persistence.query.common.apps.ComplexD.getIntD(),0,0
org.apache.openjpa.persistence.query.common.apps.ComplexD.setDateD(Date),2,6
org.apache.openjpa.persistence.query.common.apps.ComplexD.getDateD(),1,3
org.apache.openjpa.persistence.query.common.apps.ComplexD.setEs(Set),1,2
org.apache.openjpa.persistence.query.common.apps.ComplexD.getEs(),1,1
org.apache.openjpa.persistence.query.common.apps.ComplexD.setC(ComplexC),2,2
org.apache.openjpa.persistence.query.common.apps.ComplexD.getC(),1,1
org.apache.openjpa.persistence.sequence.EntityEmployee.getId(),0,0
org.apache.openjpa.persistence.sequence.EntityEmployee.setId(int),1,1
org.apache.openjpa.persistence.sequence.EntityEmployee.getFirstName(),2,3
org.apache.openjpa.persistence.sequence.EntityEmployee.setFirstName(String),3,6
org.apache.openjpa.persistence.sequence.EntityEmployee.getLastName(),2,3
org.apache.openjpa.persistence.sequence.EntityEmployee.setLastName(String),3,6
org.apache.openjpa.persistence.sequence.EntityEmployee.getSalary(),1,2
org.apache.openjpa.persistence.sequence.EntityEmployee.setSalary(float),2,5
org.apache.openjpa.persistence.sequence.EntityEmployee.toString(),5,11
org.apache.openjpa.persistence.sequence.EntityEmployee.hashCode(),7,27
org.apache.openjpa.persistence.sequence.EntityEmployee.equals(Object),8,25
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.TestOperationOrderUpdateManager(String),24,39
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.insertTest(boolean),22,64
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.insert(),21,75
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.insertAutoAssign(),23,99
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.insertCircularConstraintTest(boolean),14,33
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.insertCircular(),14,28
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.insertCircularAutoAssign(),17,38
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.deleteCircularTest(boolean),23,46
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.deleteTest(boolean),25,55
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.testInsert(),2,4
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.testAutoAssignInsert(),4,6
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.testDeleteCircular(),3,6
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.testAutoAssignDeleteCircular(),5,8
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.testDelete(),2,4
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.testAutoAssignDelete(),4,6
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.testInsertCircularConstraint(),4,8
org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.testAutoAssignInsertCircularConstraint(),6,10
"org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.persistAll(EntityManager,List)",6,10
"org.apache.openjpa.persistence.jdbc.kernel.TestOperationOrderUpdateManager.removeAll(EntityManager,List)",6,10
org.apache.openjpa.persistence.recursive.Node.getId(),0,0
org.apache.openjpa.persistence.recursive.Node.setId(int),1,1
org.apache.openjpa.persistence.recursive.Node.getVersion(),1,2
org.apache.openjpa.persistence.recursive.Node.setVersion(int),2,5
org.apache.openjpa.persistence.recursive.Node.getNodes(),3,4
org.apache.openjpa.persistence.recursive.Node.setNodes(List<Node>),4,7
org.apache.openjpa.persistence.query.TestDistinctQueries.setUp(),17,53
org.apache.openjpa.persistence.query.TestDistinctQueries.testDuplicateResultsInNonDistinctJoinFetchQuery(),17,21
org.apache.openjpa.persistence.query.TestDistinctQueries.testDuplicateResultsInNonDistinctJoinQuery(),17,20
org.apache.openjpa.persistence.query.TestDistinctQueries.testNoDuplicateResultsInDistinctQuery(),17,20
org.apache.openjpa.persistence.query.TestDistinctQueries.testDuplicateResultsInNonDistinctConstructorJoinQuery(),24,30
org.apache.openjpa.persistence.query.TestDistinctQueries.testNoDuplicateResultsInDistinctConstructorQuery(),26,32
org.apache.openjpa.persistence.query.TestDistinctQueries.Holder.Holder(long),5,5
org.apache.openjpa.persistence.relations.EntityDInverseEager.EntityDInverseEager(),3,3
"org.apache.openjpa.persistence.relations.EntityDInverseEager.EntityDInverseEager(String,String,int,int)",9,23
org.apache.openjpa.persistence.relations.EntityDInverseEager.getC(),3,4
org.apache.openjpa.persistence.relations.EntityDInverseEager.setC(EntityCInverseEager),4,7
org.apache.openjpa.persistence.relations.EntityDInverseEager.getId(),0,0
org.apache.openjpa.persistence.relations.EntityDInverseEager.getName(),2,3
org.apache.openjpa.persistence.relations.EntityDInverseEager.setName(String),3,6
org.apache.openjpa.persistence.relations.EntityDInverseEager.getEmail(),2,3
org.apache.openjpa.persistence.relations.EntityDInverseEager.setEmail(String),3,6
org.apache.openjpa.persistence.relations.EntityDInverseEager.getLoginCount(),2,4
org.apache.openjpa.persistence.relations.EntityDInverseEager.setLoginCount(int),3,9
org.apache.openjpa.persistence.relations.EntityDInverseEager.getLogoutCount(),2,4
org.apache.openjpa.persistence.relations.EntityDInverseEager.setLogoutCount(int),3,9
org.apache.openjpa.persistence.property.EmbeddableAddress.getLine1(),2,3
org.apache.openjpa.persistence.property.EmbeddableAddress.setLine1(String),3,6
org.apache.openjpa.persistence.property.EmbeddableAddress.getLine2(),2,3
org.apache.openjpa.persistence.property.EmbeddableAddress.setLine2(String),3,6
org.apache.openjpa.persistence.property.EmbeddableAddress.getCity(),2,3
org.apache.openjpa.persistence.property.EmbeddableAddress.setCity(String),3,6
org.apache.openjpa.persistence.property.EmbeddableAddress.getState(),1,1
org.apache.openjpa.persistence.property.EmbeddableAddress.setState(String),2,2
org.apache.openjpa.persistence.property.EmbeddableAddress.getZipCode(),3,5
org.apache.openjpa.persistence.property.EmbeddableAddress.setZipCode(String),4,10
org.apache.openjpa.persistence.property.EmbeddableAddress.getCountry(),2,3
org.apache.openjpa.persistence.property.EmbeddableAddress.setCountry(String),3,6
org.apache.openjpa.persistence.property.EmbeddableAddress.toString(),13,21
org.apache.openjpa.persistence.jdbc.mapping.bidi.Address.getPhone(),2,3
org.apache.openjpa.persistence.jdbc.mapping.bidi.Address.setPhone(String),3,6
org.apache.openjpa.persistence.jdbc.mapping.bidi.Address.getCity(),2,3
org.apache.openjpa.persistence.jdbc.mapping.bidi.Address.setCity(String),3,6
org.apache.openjpa.persistence.jdbc.mapping.bidi.Address.getZip(),1,2
org.apache.openjpa.persistence.jdbc.mapping.bidi.Address.setZip(int),2,5
org.apache.openjpa.persistence.jdbc.mapping.bidi.Address.getPerson(),1,3
org.apache.openjpa.persistence.jdbc.mapping.bidi.Address.setPerson(Person),2,6
org.apache.openjpa.persistence.relations.TestLazyManyToOne.setUp(),17,29
org.apache.openjpa.persistence.relations.TestLazyManyToOne.testLazyManyToOne(),17,32
org.apache.openjpa.persistence.query.TestQueryEscapeCharacters.setUp(),18,47
org.apache.openjpa.persistence.query.TestQueryEscapeCharacters.tearDown(),15,20
org.apache.openjpa.persistence.query.TestQueryEscapeCharacters.testNormalQuery(),7,7
org.apache.openjpa.persistence.query.TestQueryEscapeCharacters.testMultiResultQuery(),8,8
org.apache.openjpa.persistence.query.TestQueryEscapeCharacters.testEscapedQuery(),6,7
org.apache.openjpa.persistence.query.TestQueryEscapeCharacters.testDoubleEscapedQuery(),6,6
org.apache.openjpa.persistence.query.TestQueryEscapeCharacters.testWrongEscape(),6,6
org.apache.openjpa.persistence.query.TestQueryEscapeCharacters.testDoubleSlashQuery(),24,36
org.apache.openjpa.persistence.query.TestQueryEscapeCharacters.testDifferentEscapeCharacter(),40,88
"org.apache.openjpa.persistence.query.TestQueryEscapeCharacters.performFind(String,String,int)",23,68
org.apache.openjpa.persistence.spring.LibServiceImpl.closeEM(EntityManager),3,4
org.apache.openjpa.persistence.spring.LibServiceImpl.openEM(),4,8
org.apache.openjpa.persistence.spring.LibServiceImpl.commit(EntityTransaction),5,7
org.apache.openjpa.persistence.spring.LibServiceImpl.setTransactionalEntityManagerFactory(TransactionalEntityManagerFactory),6,12
org.apache.openjpa.persistence.spring.LibServiceImpl.findBookByTitle(String),28,49
org.apache.openjpa.persistence.spring.LibServiceImpl.findBorrowerByName(String),24,46
"org.apache.openjpa.persistence.spring.LibServiceImpl.borrowBook(Borrower,Book)",17,30
org.apache.openjpa.persistence.spring.LibServiceImpl.returnBook(Book),16,30
org.apache.openjpa.persistence.merge.TestMerge.setUp(),7,9
org.apache.openjpa.persistence.merge.TestMerge.testMergeManagedParent(),19,53
org.apache.openjpa.persistence.merge.TestMerge.populate(),13,19
org.apache.openjpa.persistence.jdbc.meta.TestEJBByteArray.TestEJBByteArray(String),5,6
org.apache.openjpa.persistence.jdbc.meta.TestEJBByteArray.setUp(),13,34
org.apache.openjpa.persistence.jdbc.meta.TestEJBByteArray.testNull(),10,21
org.apache.openjpa.persistence.jdbc.meta.TestEJBByteArray.testEmpty(),12,31
org.apache.openjpa.persistence.jdbc.meta.TestEJBByteArray.testLarge(),9,19
org.apache.openjpa.persistence.proxy.delayed.alist.Account.Account(),1,1
"org.apache.openjpa.persistence.proxy.delayed.alist.Account.Account(String,IUserIdentity)",8,13
org.apache.openjpa.persistence.proxy.delayed.alist.Account.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.alist.Account.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.alist.Account.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.alist.Account.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.alist.Account.setUserIdent(IUserIdentity),4,13
org.apache.openjpa.persistence.proxy.delayed.alist.Account.getUserIdent(),3,6
org.apache.openjpa.persistence.embed.EntityA_Coll_StringXml.getAge(),1,2
org.apache.openjpa.persistence.embed.EntityA_Coll_StringXml.setAge(int),2,5
org.apache.openjpa.persistence.embed.EntityA_Coll_StringXml.getId(),1,1
org.apache.openjpa.persistence.embed.EntityA_Coll_StringXml.setId(Integer),2,2
org.apache.openjpa.persistence.embed.EntityA_Coll_StringXml.getName(),2,3
org.apache.openjpa.persistence.embed.EntityA_Coll_StringXml.setName(String),3,6
org.apache.openjpa.persistence.embed.EntityA_Coll_StringXml.getNickNames(),4,6
org.apache.openjpa.persistence.embed.EntityA_Coll_StringXml.addNickName(String),5,11
org.apache.openjpa.persistence.query.TestSimple.TestSimple(String),3,5
org.apache.openjpa.persistence.query.TestSimple.setUp(),3,3
org.apache.openjpa.persistence.query.TestSimple.testSimple(),23,121
org.apache.openjpa.persistence.sequence.TestSequence.setUp(),7,9
org.apache.openjpa.persistence.sequence.TestSequence.testMultiThreadedNativeSequences(),25,53
org.apache.openjpa.persistence.sequence.TestSequence.createAndRemove(),18,106
org.apache.openjpa.persistence.sequence.TestSequence.createManyPersonsInSeparateTransactions(),16,31
org.apache.openjpa.persistence.sequence.TestSequence.createManyEmployeesInSeparateTransactions(),17,34
org.apache.openjpa.persistence.sequence.TestSequence.createManyPersonsAndEmployeesInSeparateTransactions(),19,50
org.apache.openjpa.persistence.sequence.TestSequence.createManyPersonsInSingleTransaction(),15,31
org.apache.openjpa.persistence.sequence.TestSequence.createManyEmployeesInSingleTransaction(),16,34
org.apache.openjpa.persistence.sequence.TestSequence.createManyPersonsAndEmployeesInSingleTransaction(),18,50
org.apache.openjpa.persistence.sequence.TestSequence.mttest(),16,23
"org.apache.openjpa.persistence.sequence.TestSequence.mttest(int,int)",8,17
"org.apache.openjpa.persistence.sequence.TestSequence.mttest(int,int,int)",12,21
"org.apache.openjpa.persistence.sequence.TestSequence.mttest(int,int,String,Object[])",33,58
"org.apache.openjpa.persistence.sequence.TestSequence.mttest(int,int,int,String,Object[])",29,69
"org.apache.openjpa.persistence.sequence.TestSequence.mttest(int,int,int,String,Object[]).$1.run()",6,6
"org.apache.openjpa.persistence.sequence.TestSequence.mttest(String,int,int,VolatileRunnable)",9,14
"org.apache.openjpa.persistence.sequence.TestSequence.mttest(String,int,int,int,VolatileRunnable)",62,136
"org.apache.openjpa.persistence.sequence.TestSequence.mttest(String,int,int,int,VolatileRunnable).$2.run()",30,50
org.apache.openjpa.persistence.sequence.TestSequence.isRootThread(),9,10
org.apache.openjpa.persistence.sequence.TestSequence.VolatileRunnable.run(),2,2
"org.apache.openjpa.persistence.sequence.TestSequence.ThreadingException.ThreadingException(String,Throwable)",6,13
"org.apache.openjpa.persistence.sequence.TestSequence.ThreadingException.ThreadingException(String,Throwable[])",6,12
org.apache.openjpa.persistence.sequence.TestSequence.ThreadingException.printStackTrace(),4,7
org.apache.openjpa.persistence.sequence.TestSequence.ThreadingException.printStackTrace(PrintStream),5,10
org.apache.openjpa.persistence.sequence.TestSequence.ThreadingException.printStackTrace(PrintWriter),7,17
org.apache.openjpa.persistence.sequence.TestSequence.callingMethod(String),43,107
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.TestSavepointOrdering(String),6,9
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.setUp(),5,10
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.testCleanUpCommit(),3,5
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.testCleanUpRollback(),3,5
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.doCleanUpTest(boolean),24,52
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.testOrderingWithRollback(),2,3
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.testOrderingWithRelease(),2,3
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.doOrderingTest(boolean),23,105
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.testDisallowFlush(),27,46
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.testDisallowFlush2(),27,46
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.testAllowFlush(),26,47
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.testAllowFlush2(),26,47
"org.apache.openjpa.persistence.kernel.TestSavepointOrdering.assertFlags(String,int,int)",9,15
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.TrackingSavepointManager.supportsIncrementalFlush(),4,5
"org.apache.openjpa.persistence.kernel.TestSavepointOrdering.TrackingSavepointManager.newSavepoint(String,Broker)",7,15
"org.apache.openjpa.persistence.kernel.TestSavepointOrdering.TrackingSavepoint.TrackingSavepoint(Broker,String)",5,8
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.TrackingSavepoint.rollback(Collection),6,12
org.apache.openjpa.persistence.kernel.TestSavepointOrdering.TrackingSavepoint.release(boolean),6,17
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.TestSpecialNumbers(),4,6
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.TestSpecialNumbers(String),4,5
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.setUp(),13,13
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testShortMax(),11,21
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testShortMin(),17,30
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testLongMax(),11,21
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testLongMin(),17,30
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testIntegerMax(),12,25
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testIntegerMin(),18,34
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testFloatMax(),20,42
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testFloatMin(),25,60
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testFloatNaN(),11,18
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testFloatNegativeInfinity(),24,55
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testFloatPostivieInfinity(),25,55
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testDoubleMax(),24,54
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testDoubleMin(),27,63
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testDoubleNaN(),11,18
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testDoubleNegativeInfinity(),13,25
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testDoublePostivieInfinity(),14,25
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testByteMin(),17,30
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testByteMax(),11,21
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testZeroBigInteger(),10,24
org.apache.openjpa.persistence.kernel.TestSpecialNumbers.testOneBigInteger(),9,21
"org.apache.openjpa.persistence.kernel.TestSpecialNumbers.saveAndQuery(Object,String,Object)",20,31
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.Employee.getEmpPK(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.Employee.setEmpPK(EmployeePK),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.Employee.getPhoneNumbers(),3,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.Employee.addPhoneNumber(PhonePK,PhoneNumber)",3,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.Employee.removePhoneNumber(PhonePK),3,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.Employee.getSalary(),1,2
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.Employee.setSalary(int),2,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.Employee.equals(Object),13,46
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex10.Employee.findEmpl(Map<EmployeePK,Employee>,EmployeePK)",12,39
org.apache.openjpa.persistence.relations.OneManyLazyChild.getId(),0,0
org.apache.openjpa.persistence.relations.OneManyLazyChild.getName(),2,3
org.apache.openjpa.persistence.relations.OneManyLazyChild.setName(String),3,6
org.apache.openjpa.persistence.relations.OneManyLazyChild.getParent(),2,4
org.apache.openjpa.persistence.relations.OneManyLazyChild.setParent(OneManyEagerParent),3,7
org.apache.openjpa.persistence.relations.TestHandlerCollections.setUp(),5,6
org.apache.openjpa.persistence.relations.TestHandlerCollections.testHandlerCollections(),22,38
org.apache.openjpa.persistence.relations.ChildClass.ChildClass(),1,1
org.apache.openjpa.persistence.relations.ChildClass.getName(),2,3
org.apache.openjpa.persistence.relations.ChildClass.setName(String),3,6
org.apache.openjpa.persistence.relations.ChildClass.toString(),10,38
org.apache.openjpa.persistence.proxy.delayed.hset.Member.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.hset.Member.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.hset.Member.setAccounts(Collection<IAccount>),4,9
org.apache.openjpa.persistence.proxy.delayed.hset.Member.getAccounts(),3,4
org.apache.openjpa.persistence.enhance.TestDynamicStorageGenerator.TestDynamicStorageGenerator(String),6,6
org.apache.openjpa.persistence.enhance.TestDynamicStorageGenerator.testStorage(),20,98
org.apache.openjpa.persistence.results.cls.TestResultClsAnnotation.setUp(),8,9
org.apache.openjpa.persistence.results.cls.TestResultClsAnnotation.testIt(),24,45
org.apache.openjpa.persistence.results.cls.TestResultClsAnnotation.populate(),15,23
org.apache.openjpa.persistence.results.cls.TestResultClsAnnotation.getQuery(EntityManager),16,65
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.setUp(),4,5
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testPersistAfterClose(),10,16
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testMergeAfterClose(),10,16
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testRemoveAfterClose(),10,16
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testFindAfterClose(),12,16
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testGetReferenceAfterClose(),13,19
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testFlushAfterClose(),9,15
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testSetFlushModeAfterClose(),13,25
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testGetFlushModeAfterClose(),10,18
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testLockAfterClose(),13,20
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testRefreshAfterClose(),10,16
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testClearAfterClose(),8,12
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testContainsAfterClose(),10,16
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testCreateQueryAfterClose(),15,24
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testCreateNamedQueryAfterClose(),11,23
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testCreateNativeQueryAfterClose(),13,21
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testCreateNativeQueryWithMappingAfterClose(),16,25
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testJoinTransactionAfterClose(),10,18
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testGetDelegateAfterClose(),9,15
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.testCloseAfterClose(),8,15
org.apache.openjpa.persistence.simple.TestEntityManagerMethodsThrowAfterClose.main(String[]),10,11
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.TestSpecialNumbers2(String),4,5
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.setUp(),13,13
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testShortMax(),10,20
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testShortMin(),16,29
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testLongMax(),10,20
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testLongMin(),16,29
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testIntegerMax(),11,24
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testIntegerMin(),17,33
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testFloatMax(),16,28
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testFloatMin(),19,38
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testFloatNaN(),10,17
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testFloatNegativeInfinity(),16,29
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testFloatPostivieInfinity(),17,29
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testDoubleMax(),16,28
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testDoubleMin(),26,62
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testDoubleNaN(),10,17
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testDoubleNegativeInfinity(),12,24
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testDoublePostivieInfinity(),13,24
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testByteMin(),22,37
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testByteMax(),10,20
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testZeroBigInteger(),9,23
org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.testOneBigInteger(),8,20
"org.apache.openjpa.persistence.kernel.TestSpecialNumbers2.saveAndQuery(Object,String,Object)",25,42
org.apache.openjpa.persistence.sequence.hsql.HSQLEmployee.getId(),0,0
org.apache.openjpa.persistence.sequence.hsql.HSQLEmployee.setId(int),1,1
org.apache.openjpa.persistence.sequence.hsql.HSQLEmployee.getFirstName(),2,3
org.apache.openjpa.persistence.sequence.hsql.HSQLEmployee.setFirstName(String),3,6
org.apache.openjpa.persistence.sequence.hsql.HSQLEmployee.getLastName(),2,3
org.apache.openjpa.persistence.sequence.hsql.HSQLEmployee.setLastName(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTest.getStringField(),2,3
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTest.setStringField(String),4,5
org.apache.openjpa.persistence.flush.Topic.getTopicId(),1,2
org.apache.openjpa.persistence.flush.Topic.setTopicId(Long),2,5
org.apache.openjpa.persistence.flush.Topic.getClassPeriod(),2,3
org.apache.openjpa.persistence.flush.Topic.setClassPeriod(ClassPeriod),3,6
org.apache.openjpa.persistence.flush.Topic.getTopicText(),3,5
org.apache.openjpa.persistence.flush.Topic.setTopicText(String),4,10
org.apache.openjpa.persistence.flush.Topic.getAssignments(),3,4
org.apache.openjpa.persistence.flush.Topic.setAssignments(Set<Assignment>),3,7
org.apache.openjpa.persistence.flush.Topic.getSubTopics(),4,7
org.apache.openjpa.persistence.flush.Topic.setSubTopics(Set<SubTopic>),4,12
org.apache.openjpa.persistence.jdbc.meta.TestJoinToBaseClass.TestJoinToBaseClass(String),7,11
org.apache.openjpa.persistence.jdbc.meta.TestJoinToBaseClass.testMapping(),21,60
org.apache.openjpa.persistence.jdbc.meta.TestJoinToBaseClass.testConstraintAnalysis(),26,74
"org.apache.openjpa.persistence.jdbc.meta.TestJoinToBaseClass.assertSizes(int,Class)",9,12
org.apache.openjpa.persistence.lock.extended.LSE1x1Rt.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSE1x1Rt.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSE1x1Rt.getLastName(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1x1Rt.setLastName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSE1x1Rt.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSE1x1Rt.toString(),10,14
org.apache.openjpa.persistence.lock.extended.LSE1x1Rt.readExternal(ObjectInput),9,13
org.apache.openjpa.persistence.lock.extended.LSE1x1Rt.writeExternal(ObjectOutput),8,11
org.apache.openjpa.persistence.identity.entityasidentity.AccountId.AccountId(),1,1
org.apache.openjpa.persistence.identity.entityasidentity.AccountId.getAccountId(),2,3
org.apache.openjpa.persistence.identity.entityasidentity.AccountId.setAccountId(Integer),3,6
org.apache.openjpa.persistence.identity.entityasidentity.AccountId.getGroupId(),1,1
org.apache.openjpa.persistence.identity.entityasidentity.AccountId.setGroupId(Integer),2,2
org.apache.openjpa.persistence.identity.entityasidentity.AccountId.getAccountHolder(),3,5
org.apache.openjpa.persistence.identity.entityasidentity.AccountId.setAccountHolder(Integer),4,10
org.apache.openjpa.persistence.identity.entityasidentity.AccountId.equals(Object),4,14
org.apache.openjpa.persistence.identity.entityasidentity.AccountId.hashCode(),8,16
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity1.setOne2Melems(List<BaseTestElement1>),6,9
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity1.getOne2Melems(),5,6
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity1.setCollelems(Set<BaseTestElement1>),5,9
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity1.getCollelems(),5,6
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity1.setM2melems(List<BaseTestElement1>),6,9
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity1.getM2melems(),5,6
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity1.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity1.getId(),0,0
org.apache.openjpa.persistence.merge.model.Toy.Toy(),1,1
org.apache.openjpa.persistence.merge.model.Toy.Toy(int),1,1
org.apache.openjpa.persistence.merge.model.Toy.getId(),0,0
org.apache.openjpa.persistence.merge.model.Toy.setId(int),1,1
org.apache.openjpa.persistence.merge.model.Toy.getToyName(),3,5
org.apache.openjpa.persistence.merge.model.Toy.setToyName(String),4,10
org.apache.openjpa.persistence.merge.model.Toy.getToybox(),3,4
org.apache.openjpa.persistence.merge.model.Toy.setToybox(ToyBox),4,7
org.apache.openjpa.persistence.merge.model.Toy.getVersion(),1,2
org.apache.openjpa.persistence.managedinterface.SimpleManagedInterface.getId(),0,0
org.apache.openjpa.persistence.managedinterface.SimpleManagedInterface.setId(int),1,1
org.apache.openjpa.persistence.managedinterface.SimpleManagedInterface.getString(),1,2
org.apache.openjpa.persistence.managedinterface.SimpleManagedInterface.setString(String),2,3
org.apache.openjpa.persistence.jdbc.order.Person.setName(String),3,6
org.apache.openjpa.persistence.jdbc.order.Person.getName(),2,3
org.apache.openjpa.persistence.jdbc.order.Person.setId(String),2,2
org.apache.openjpa.persistence.jdbc.order.Person.getId(),1,1
org.apache.openjpa.persistence.jdbc.order.Person.equals(Object),6,16
org.apache.openjpa.persistence.entity.EntityC.EntityC(),1,1
org.apache.openjpa.persistence.entity.EntityC.EntityC(EntityB),2,5
org.apache.openjpa.persistence.entity.EntityC.getService(),2,3
org.apache.openjpa.persistence.proxy.delayed.pqueue.Account.Account(),1,1
"org.apache.openjpa.persistence.proxy.delayed.pqueue.Account.Account(String,IUserIdentity)",8,13
org.apache.openjpa.persistence.proxy.delayed.pqueue.Account.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.pqueue.Account.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.pqueue.Account.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.pqueue.Account.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.pqueue.Account.setUserIdent(IUserIdentity),4,13
org.apache.openjpa.persistence.proxy.delayed.pqueue.Account.getUserIdent(),3,6
org.apache.openjpa.persistence.proxy.delayed.pqueue.Account.compareTo(Account),3,4
org.apache.openjpa.persistence.merge.model.Label.Label(ShipPackage),3,3
org.apache.openjpa.persistence.merge.model.Label.setId(long),1,1
org.apache.openjpa.persistence.merge.model.Label.getId(),0,0
org.apache.openjpa.persistence.merge.model.Label.setPackage(ShipPackage),3,3
org.apache.openjpa.persistence.merge.model.Label.getPackage(),2,2
org.apache.openjpa.persistence.jdbc.query.TestAggregateQueryWithNoResult.setUp(),18,24
org.apache.openjpa.persistence.jdbc.query.TestAggregateQueryWithNoResult.testSumWithNoResult(),12,18
org.apache.openjpa.persistence.jdbc.query.TestAggregateQueryWithNoResult.testAvgWithNoResult(),13,21
org.apache.openjpa.persistence.jdbc.query.TestAggregateQueryWithNoResult.testCountWithNoResult(),12,18
org.apache.openjpa.persistence.jdbc.query.TestAggregateQueryWithNoResult.testMaxWithNoResult(),13,21
org.apache.openjpa.persistence.jdbc.query.TestAggregateQueryWithNoResult.testMinWithNoResult(),13,21
org.apache.openjpa.persistence.models.company.basic.Address.setStreetAddress(String),4,10
org.apache.openjpa.persistence.models.company.basic.Address.getStreetAddress(),3,5
org.apache.openjpa.persistence.models.company.basic.Address.setCity(String),3,6
org.apache.openjpa.persistence.models.company.basic.Address.getCity(),2,3
org.apache.openjpa.persistence.models.company.basic.Address.setState(String),2,2
org.apache.openjpa.persistence.models.company.basic.Address.getState(),1,1
org.apache.openjpa.persistence.models.company.basic.Address.setPostalCode(String),4,10
org.apache.openjpa.persistence.models.company.basic.Address.getPostalCode(),3,5
org.apache.openjpa.persistence.models.company.basic.Address.setPhoneNumber(String),3,6
org.apache.openjpa.persistence.models.company.basic.Address.getPhoneNumber(),2,3
org.apache.openjpa.persistence.models.company.basic.Address.setId(long),1,1
org.apache.openjpa.persistence.models.company.basic.Address.getId(),0,0
org.apache.openjpa.persistence.meta.ExplicitFieldAccessMixed.getF1(),0,0
org.apache.openjpa.persistence.meta.ExplicitFieldAccessMixed.setF1(long),1,1
org.apache.openjpa.persistence.meta.ExplicitFieldAccessMixed.getF2(),0,0
org.apache.openjpa.persistence.meta.ExplicitFieldAccessMixed.setF2(int),1,1
org.apache.openjpa.persistence.meta.ExplicitFieldAccessMixed.getF3(),0,0
org.apache.openjpa.persistence.meta.ExplicitFieldAccessMixed.setF3(short),1,1
org.apache.openjpa.persistence.meta.ExplicitFieldAccessMixed.getF4(),4,4
org.apache.openjpa.persistence.meta.ExplicitFieldAccessMixed.setF4(ImplicitFieldAccessBase),5,5
org.apache.openjpa.persistence.meta.ExplicitFieldAccessMixed.getF5(),4,4
org.apache.openjpa.persistence.meta.ExplicitFieldAccessMixed.setF5(ImplicitFieldAccessBase),5,5
org.apache.openjpa.persistence.meta.ExplicitFieldAccessMixed.getF6(),4,4
org.apache.openjpa.persistence.meta.ExplicitFieldAccessMixed.setF6(ImplicitFieldAccessBase),5,5
org.apache.openjpa.persistence.generationtype.DogTable2.DogTable2(),2,2
org.apache.openjpa.persistence.generationtype.DogTable2.DogTable2(String),4,6
org.apache.openjpa.persistence.generationtype.DogTable2.getId2(),0,0
org.apache.openjpa.persistence.generationtype.DogTable2.setId2(int),1,1
org.apache.openjpa.persistence.generationtype.DogTable2.getName(),2,3
org.apache.openjpa.persistence.generationtype.DogTable2.setName(String),3,6
org.apache.openjpa.persistence.generationtype.DogTable2.getPrice(),1,2
org.apache.openjpa.persistence.generationtype.DogTable2.setPrice(float),2,5
org.apache.openjpa.persistence.generationtype.DogTable2.isDomestic(),1,2
org.apache.openjpa.persistence.generationtype.DogTable2.setDomestic(boolean),2,5
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.Superclass.getId(),1,1
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.Superclass.setId(Integer),2,2
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.Superclass.getAttr1(),2,3
org.apache.openjpa.persistence.inheritance.abstractjoinedappid.Superclass.setAttr1(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachA.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.AttachA.setAstr(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachA.getAstr(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AttachA.setAint(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachA.getAint(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachA.setAdbl(double),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachA.getAdbl(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachA.setStringArray(String[]),3,10
org.apache.openjpa.persistence.kernel.common.apps.AttachA.getStringArray(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachA.setAttachEArray(AttachE[]),3,10
org.apache.openjpa.persistence.kernel.common.apps.AttachA.getAttachEArray(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachA.writeObject(ObjectOutputStream),5,8
org.apache.openjpa.persistence.kernel.common.apps.AttachA.readObject(ObjectInputStream),6,10
org.apache.openjpa.persistence.inheritance.MappedSuperclassBase.getId(),0,0
org.apache.openjpa.persistence.inheritance.MappedSuperclassBase.setId(long),1,1
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedPC.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedPC.setIntField(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedPC.getIntField1(),1,2
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedPC.setIntField1(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedPC.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.EmbeddedPC.setStringField(String),3,10
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.CacheObjectA(),2,2
"org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.CacheObjectA(String,long)",5,9
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.getName(),2,3
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.setName(String),3,6
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.getAge(),1,2
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.setAge(long),2,5
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.getRelatedObject(),4,6
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.setRelatedObject(CacheObjectA),5,7
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.getStringCollection(),3,5
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.setStringCollection(Collection),4,8
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.getRelatedCollection(),3,5
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.setRelatedCollection(Collection),4,8
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.getRelatedArray(),4,4
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.setRelatedArray(CacheObjectA[]),5,7
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.getStringArray(),2,5
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.setStringArray(String[]),3,8
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.setPrimitiveArray(float[]),4,7
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.getPrimitiveArray(),2,4
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.setDateArray(Date[]),4,8
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.getDateArray(),2,5
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.setDate(Date),3,6
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.getDate(),1,3
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.setLocale(Locale),3,6
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.getLocale(),1,3
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.setRelatedB(CacheObjectB),5,7
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.getRelatedB(),3,4
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.setRelatedInterface(CacheObjectInterface),5,7
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.getRelatedInterface(),3,4
org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA.toString(),6,15
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCMappedSuperclass.getMappedSuperclassData(),4,7
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.chardiscriminator.PIdSTCDMSCMappedSuperclass.setMappedSuperclassData(String),5,14
org.apache.openjpa.persistence.kernel.common.apps.MapElementPC.setElementData(String),4,10
org.apache.openjpa.persistence.kernel.common.apps.MapElementPC.getElementData(),3,5
org.apache.openjpa.persistence.kernel.common.apps.MapElementPC.hashCode(),4,6
org.apache.openjpa.persistence.kernel.common.apps.MapElementPC.equals(Object),5,9
org.apache.openjpa.persistence.kernel.common.apps.MapElementPC.toString(),3,5
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD2.EntityD2(),1,1
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD2.EntityD2(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD2.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD2.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD2.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD2.setName(String),4,10
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD2.getEntityD3(),1,4
org.apache.openjpa.persistence.delimited.identifiers.noschema.EntityD2.setEntityD3(EntityD3),3,10
org.apache.openjpa.persistence.meta.ExplicitPropertyAccess.getF1(),1,1
org.apache.openjpa.persistence.meta.ExplicitPropertyAccess.setF1(String),2,2
org.apache.openjpa.persistence.meta.ExplicitPropertyAccess.getF2(),0,0
org.apache.openjpa.persistence.meta.ExplicitPropertyAccess.setF2(long),1,1
org.apache.openjpa.persistence.meta.ExplicitPropertyAccess.getF3(),1,1
org.apache.openjpa.persistence.meta.ExplicitPropertyAccess.setF3(String),2,2
org.apache.openjpa.persistence.meta.ExplicitPropertyAccess.getF4(),1,1
org.apache.openjpa.persistence.meta.ExplicitPropertyAccess.setF4(String),2,2
org.apache.openjpa.persistence.meta.ExplicitPropertyAccess.getF5(),4,4
org.apache.openjpa.persistence.meta.ExplicitPropertyAccess.setF5(ImplicitFieldAccessBase),5,5
org.apache.openjpa.persistence.meta.ExplicitPropertyAccess.getF6(),4,4
org.apache.openjpa.persistence.meta.ExplicitPropertyAccess.setF6(ImplicitFieldAccessBase),5,5
org.apache.openjpa.persistence.kernel.common.apps.LockGroupPCKnownSubclass.setKnownSubclassStringField(String),4,14
org.apache.openjpa.persistence.lock.extended.LSEEleCol.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSEEleCol.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSEEleCol.getFirstName(),2,3
org.apache.openjpa.persistence.lock.extended.LSEEleCol.setFirstName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSEEleCol.getCollection(),3,4
org.apache.openjpa.persistence.lock.extended.LSEEleCol.setCollection(Set<String>),3,7
org.apache.openjpa.persistence.lock.extended.LSEEleCol.addCollection(String),4,7
org.apache.openjpa.persistence.lock.extended.LSEEleCol.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSEEleCol.toString(),11,15
org.apache.openjpa.persistence.lock.extended.LSEEleCol.readExternal(ObjectInput),12,18
org.apache.openjpa.persistence.lock.extended.LSEEleCol.writeExternal(ObjectOutput),9,14
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiD.setStringD(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiD.getStringD(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiD.setIntD(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiD.getIntD(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiD.ID.ID(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppMultiD.ID.ID(String),2,3
org.apache.openjpa.persistence.jdbc.order.Car.Car(),1,1
"org.apache.openjpa.persistence.jdbc.order.Car.Car(int,String,String)",3,7
org.apache.openjpa.persistence.jdbc.order.Car.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.Car.getId(),0,0
org.apache.openjpa.persistence.jdbc.order.Car.setModelYear(int),2,3
org.apache.openjpa.persistence.jdbc.order.Car.getModelYear(),1,2
org.apache.openjpa.persistence.jdbc.order.Car.setMake(String),2,2
org.apache.openjpa.persistence.jdbc.order.Car.getMake(),1,1
org.apache.openjpa.persistence.jdbc.order.Car.setModel(String),3,6
org.apache.openjpa.persistence.jdbc.order.Car.getModel(),2,3
org.apache.openjpa.persistence.jdbc.order.Car.setOwner(Owner),2,6
org.apache.openjpa.persistence.jdbc.order.Car.getOwner(),1,3
org.apache.openjpa.persistence.jdbc.order.Car.equals(Object),5,19
org.apache.openjpa.persistence.jdbc.common.apps.HorizI.setStringI(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizI.getStringI(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizI.setIntI(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizI.getIntI(),0,0
org.apache.openjpa.persistence.query.Account.getId(),1,1
org.apache.openjpa.persistence.query.Account.getName(),2,3
org.apache.openjpa.persistence.query.Account.setName(String),3,6
org.apache.openjpa.persistence.query.Account.getBalance(),1,2
org.apache.openjpa.persistence.query.Account.setBalance(int),2,5
org.apache.openjpa.persistence.query.Account.getLoan(),2,3
org.apache.openjpa.persistence.query.Account.setLoan(Integer),3,6
org.apache.openjpa.persistence.query.Account.getCustomer(),2,3
org.apache.openjpa.persistence.query.Account.setCustomer(Customer),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.EmployeeName3.EmployeeName3(),2,2
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.EmployeeName3.EmployeeName3(String,String)",3,10
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.EmployeeName3.getFName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.EmployeeName3.setFName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.EmployeeName3.getLName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.EmployeeName3.setLName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.EmployeeName3.equals(Object),4,14
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.EmployeeName3.hashCode(),4,13
org.apache.openjpa.persistence.jdbc.common.apps.HorizM.setStringM(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizM.getStringM(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizM.setIntM(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizM.getIntM(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.NoClassColumn.getTest(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.NoClassColumn.setTest(String),4,6
org.apache.openjpa.persistence.query.TestJPAQuerySubclassFunc.TestJPAQuerySubclassFunc(String),7,8
org.apache.openjpa.persistence.query.TestJPAQuerySubclassFunc.setUp(),11,44
org.apache.openjpa.persistence.query.TestJPAQuerySubclassFunc.testSubClassIsTrueFunction(),23,42
org.apache.openjpa.persistence.query.TestJPAQuerySubclassFunc.testSubClassIsFalseFunction(),23,47
org.apache.openjpa.persistence.jdbc.common.apps.RawSQL.RawSQL(),2,2
"org.apache.openjpa.persistence.jdbc.common.apps.RawSQL.RawSQL(String,int)",4,6
org.apache.openjpa.persistence.jdbc.common.apps.RawSQL.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.RawSQL.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.RawSQL.toString(),2,8
org.apache.openjpa.persistence.jdbc.kernel.TestBatchFlushWithMetadataException.setUp(),7,8
org.apache.openjpa.persistence.jdbc.kernel.TestBatchFlushWithMetadataException.testCreate(),17,50
org.apache.openjpa.persistence.jdbc.kernel.TestBatchFlushWithMetadataException.commitAndValidate(EntityTransaction),19,40
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCEntityB.getEntityBData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.singletable.stringdiscriminator.PIdSTSDMSCEntityB.setEntityBData(String),4,10
org.apache.openjpa.persistence.jdbc.common.apps.PartialJoinPC.getPk1(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.PartialJoinPC.setPk1(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.PartialJoinPC.getPk2(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.PartialJoinPC.setPk2(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.PartialJoinPC.getNonPK(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.PartialJoinPC.setNonPK(NonPKJoinPC),2,2
org.apache.openjpa.persistence.jdbc.common.apps.PartialJoinPC.getNonPKs(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.PartialJoinPC.setNonPKs(Set),1,2
org.apache.openjpa.persistence.query.TestTimeoutException.setUp(),26,58
org.apache.openjpa.persistence.query.TestTimeoutException.testQueryTimeOutExceptionWhileQueryingWithLocksOnAlreadyLockedEntities(),41,103
org.apache.openjpa.persistence.query.TestTimeoutException.testLockTimeOutExceptionWhileLockingAlreadyLockedEntities(),38,101
org.apache.openjpa.persistence.query.TestTimeoutException.testQueryTimeOutExceptionWhileFindWithLocksOnAlreadyLockedEntities(),41,104
org.apache.openjpa.persistence.query.TestTimeoutException.createEntity(EntityManager),12,16
"org.apache.openjpa.persistence.query.TestTimeoutException.assertError(Throwable,Class<>)",26,58
org.apache.openjpa.persistence.query.TestTimeoutException.getFailedObject(Throwable),15,49
"org.apache.openjpa.persistence.query.TestTimeoutException.print(Throwable,int)",14,31
org.apache.openjpa.persistence.jpql.expressions.TestJPQLScalarExpressions.TestJPQLScalarExpressions(String),7,8
org.apache.openjpa.persistence.jpql.expressions.TestJPQLScalarExpressions.setUp(),48,131
org.apache.openjpa.persistence.jpql.expressions.TestJPQLScalarExpressions.testAggregateResultVariable(),32,78
org.apache.openjpa.persistence.jpql.expressions.TestJPQLScalarExpressions.testMathAndAggregate(),22,91
org.apache.openjpa.persistence.jpql.expressions.TestJPQLScalarExpressions.testCoalesceExpressions(),24,39
org.apache.openjpa.persistence.jpql.expressions.TestJPQLScalarExpressions.testNullIfExpressions(),24,37
org.apache.openjpa.persistence.jpql.expressions.TestJPQLScalarExpressions.testSimpleCaseExpressions(),51,271
org.apache.openjpa.persistence.jpql.expressions.TestJPQLScalarExpressions.testGeneralCaseExpressions(),45,459
org.apache.openjpa.persistence.jpql.expressions.TestJPQLScalarExpressions.testMathFuncOrderByAlias(),18,28
"org.apache.openjpa.persistence.jpql.expressions.TestJPQLScalarExpressions.createUser(String,String,Address,int,boolean)",12,57
org.apache.openjpa.persistence.kernel.common.apps.SingleIdShort.correctIdClass(Class),2,2
org.apache.openjpa.persistence.kernel.common.apps.SingleIdShort.getPkString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.SingleIdShort.getPk(),0,0
org.apache.openjpa.persistence.kernel.common.apps.SingleIdShort.setPk(short),1,1
org.apache.openjpa.persistence.kernel.common.apps.SingleIdShort.getString(),2,3
org.apache.openjpa.persistence.kernel.common.apps.SingleIdShort.setString(String),3,4
org.apache.openjpa.persistence.jdbc.update.NumericVersionedEntity.getId(),0,0
org.apache.openjpa.persistence.jdbc.update.NumericVersionedEntity.getName(),2,3
org.apache.openjpa.persistence.jdbc.update.NumericVersionedEntity.setName(String),3,6
org.apache.openjpa.persistence.jdbc.update.NumericVersionedEntity.getVersion(),1,2
org.apache.openjpa.persistence.merge.model.Model.setId(long),1,1
org.apache.openjpa.persistence.merge.model.Model.getId(),0,0
org.apache.openjpa.persistence.merge.model.Model.setMake(Make),1,1
org.apache.openjpa.persistence.merge.model.Model.getMake(),0,0
org.apache.openjpa.persistence.merge.model.Model.setCar(Car),2,6
org.apache.openjpa.persistence.merge.model.Model.getCar(),1,3
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestOneSidedParentChildWithImplicitForeignKey.setUp(),15,22
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestOneSidedParentChildWithImplicitForeignKey.xtestStrategies(),20,42
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestOneSidedParentChildWithImplicitForeignKey.createData(int),21,54
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestOneSidedParentChildWithImplicitForeignKey.testPersist(),17,37
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestOneSidedParentChildWithImplicitForeignKey.testUpdate(),23,65
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestOneSidedParentChildWithImplicitForeignKey.tearDown(),3,4
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestOneSidedParentChildWithImplicitForeignKey.newParent(int),14,36
org.apache.openjpa.persistence.jdbc.mapping.bidi.TestOneSidedParentChildWithImplicitForeignKey.findParent(int),4,13
org.apache.openjpa.persistence.managedinterface.MixedInterfaceImpl.getId(),0,0
org.apache.openjpa.persistence.managedinterface.MixedInterfaceImpl.setId(int),1,1
org.apache.openjpa.persistence.managedinterface.MixedInterfaceImpl.getIntField(),1,2
org.apache.openjpa.persistence.managedinterface.MixedInterfaceImpl.setIntField(int),2,3
org.apache.openjpa.persistence.embed.attrOverrides.CustomerXml.getId(),1,1
org.apache.openjpa.persistence.embed.attrOverrides.CustomerXml.setId(Integer),2,2
org.apache.openjpa.persistence.embed.attrOverrides.CustomerXml.getName(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.CustomerXml.setName(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.CustomerXml.getAddress(),2,4
org.apache.openjpa.persistence.embed.attrOverrides.CustomerXml.setAddress(AddressXml),3,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullPhoneName.FullPhoneName(),2,2
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullPhoneName.FullPhoneName(String,String)",3,10
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullPhoneName.getFName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullPhoneName.setFName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullPhoneName.getLName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullPhoneName.setLName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullPhoneName.equals(Object),4,14
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.FullPhoneName.hashCode(),4,13
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockException.setUp(),7,10
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockException.testLockTxReqExceptions(),29,138
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockException.testLockIllegalArgrumentExceptions(),45,721
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockException.testLockOptimisticLockExceptions(),27,107
"org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockException.commonLockOptimisticLockExceptions(LockModeType,boolean)",30,109
org.apache.openjpa.persistence.kernel.TestEJBRetainValues.TestEJBRetainValues(String),7,10
org.apache.openjpa.persistence.kernel.TestEJBRetainValues.setUp(),4,4
org.apache.openjpa.persistence.kernel.TestEJBRetainValues.testRetainValues(),30,96
"org.apache.openjpa.persistence.kernel.TestEJBRetainValues.buildSelectQuery(EntityManager,String)",16,22
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Employee.getPhoneNumbers(),4,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Employee.addPhoneNumber(String,PhoneNumber)",5,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Employee.removePhoneNumber(String),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex4.Employee.equals(Object),14,43
org.apache.openjpa.persistence.kernel.common.apps.FetchA.getB(),1,1
org.apache.openjpa.persistence.kernel.common.apps.FetchA.setB(FetchB),2,2
org.apache.openjpa.persistence.inheritance.entity.BaseClass2.setId(int),1,1
org.apache.openjpa.persistence.inheritance.entity.BaseClass2.getId(),0,0
org.apache.openjpa.persistence.inheritance.entity.BaseClass2.setVersion(int),2,5
org.apache.openjpa.persistence.inheritance.entity.BaseClass2.getVersion(),1,2
org.apache.openjpa.persistence.inheritance.entity.BaseClass2.setName(String),3,6
org.apache.openjpa.persistence.inheritance.entity.BaseClass2.getName(),2,3
org.apache.openjpa.persistence.inheritance.entity.BaseClass2.toString(),3,6
org.apache.openjpa.persistence.enhance.identity.Dependent3.getEmp(),2,3
org.apache.openjpa.persistence.enhance.identity.Dependent3.setEmp(Employee3),3,6
org.apache.openjpa.persistence.enhance.identity.Dependent3.getParent(),1,3
org.apache.openjpa.persistence.enhance.identity.Dependent3.setParent(Parent3),2,6
org.apache.openjpa.persistence.enhance.identity.Dependent3.getId(),1,1
org.apache.openjpa.persistence.enhance.identity.Dependent3.setId(DependentId3),2,2
org.apache.openjpa.persistence.enhance.identity.Dependent3.equals(Object),6,19
org.apache.openjpa.persistence.enhance.identity.Dependent3.hashCode(),5,18
org.apache.openjpa.persistence.meta.TestOrderBy.TestOrderBy(String),3,5
org.apache.openjpa.persistence.meta.TestOrderBy.setUp(),3,4
org.apache.openjpa.persistence.meta.TestOrderBy.testStringList(),3,6
org.apache.openjpa.persistence.meta.TestOrderBy.testEagerParallelStringList(),5,8
org.apache.openjpa.persistence.meta.TestOrderBy.testEagerJoinStringList(),5,8
"org.apache.openjpa.persistence.meta.TestOrderBy.stringListTest(boolean,boolean)",31,75
org.apache.openjpa.persistence.meta.TestOrderBy.testIntArray(),14,34
org.apache.openjpa.persistence.meta.TestOrderBy.testOrderByPK(),1,2
org.apache.openjpa.persistence.meta.TestOrderBy.testEagerJoinOrderByPK(),3,4
org.apache.openjpa.persistence.meta.TestOrderBy.testEagerParallelOrderByPK(),3,4
org.apache.openjpa.persistence.meta.TestOrderBy.testOneToManyOrderByPK(),1,2
org.apache.openjpa.persistence.meta.TestOrderBy.testEagerJoinOneToManyOrderByPK(),3,4
org.apache.openjpa.persistence.meta.TestOrderBy.testEagerParallelOneToManyOrderByPK(),3,4
"org.apache.openjpa.persistence.meta.TestOrderBy.orderByPKTest(boolean,boolean,boolean)",30,77
org.apache.openjpa.persistence.meta.TestOrderBy.testOrderByRelatedField(),22,57
org.apache.openjpa.persistence.meta.TestOrderBy.testOrderByPKAndRelatedField(),3,6
org.apache.openjpa.persistence.meta.TestOrderBy.testEagerJoinOrderByPKAndRelatedField(),5,8
org.apache.openjpa.persistence.meta.TestOrderBy.testEagerParallelOrderByPKAndRelatedField(),5,8
"org.apache.openjpa.persistence.meta.TestOrderBy.orderByPKAndRelatedFieldTest(boolean,boolean)",33,114
org.apache.openjpa.persistence.querycache.common.apps.UnidirectionalOne2OneOwner.getId(),0,0
org.apache.openjpa.persistence.querycache.common.apps.UnidirectionalOne2OneOwner.setId(long),1,1
org.apache.openjpa.persistence.querycache.common.apps.UnidirectionalOne2OneOwner.getName(),2,3
org.apache.openjpa.persistence.querycache.common.apps.UnidirectionalOne2OneOwner.setName(String),3,6
org.apache.openjpa.persistence.querycache.common.apps.UnidirectionalOne2OneOwner.getOwned(),2,4
org.apache.openjpa.persistence.querycache.common.apps.UnidirectionalOne2OneOwner.setOwned(UnidirectionalOne2OneOwned),3,7
org.apache.openjpa.persistence.querycache.common.apps.UnidirectionalOne2OneOwner.getVersion(),1,2
org.apache.openjpa.persistence.querycache.common.apps.UnidirectionalOne2OneOwner.toString(),3,5
org.apache.openjpa.persistence.criteria.results.TestMultiselect.setUp(),5,8
org.apache.openjpa.persistence.criteria.results.TestMultiselect.clearData(),12,23
org.apache.openjpa.persistence.criteria.results.TestMultiselect.createData(),13,30
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testTupleQuery(),12,20
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testTupleQueryExplicit(),13,21
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testUserResultQueryWithExplictProjectionOfConstructorArguments(),27,49
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testUserResultQueryWithImplicitProjection(),9,15
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testUserResultQueryWithMismatchProjectionOfConstructorArguments(),16,25
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testMultipleConstructorWithAliasRepeatedAndInOrderingClause(),27,76
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testUserClassArray(),10,17
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testBasicClassArray(),12,19
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testTupleArray(),13,23
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testSingleObject(),21,38
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testSingleObjectViaConstructor(),14,21
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testSingleObjectAsProperty(),12,18
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testSingleObjectImplicit(),11,14
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testSingleObjectViaConstructorImplicit(),15,20
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testSingleObjectAsPropertyImplicit(),13,17
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testSingleObjectMultipleProjections(),30,53
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testSingleObjectMultipleProjectionsAndConstructor(),17,28
org.apache.openjpa.persistence.criteria.results.TestMultiselect.xtestTupleCanNotBeNested(),22,44
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testMultiConstructor(),26,78
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testSelectSingleTermWithMultiselectObjectArray(),13,20
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testSelectSingleTermWithMultiselectObject(),12,18
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testSelectSingleTermWithMultiselectTuple(),12,19
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testSelectSingleTermWithMultiselectTupleArray(),13,20
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testSanity(),8,13
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testSanity2(),9,14
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testDeeplyNestedShape(),25,78
org.apache.openjpa.persistence.criteria.results.TestMultiselect.testConstructorFailsFast(),28,63
"org.apache.openjpa.persistence.criteria.results.TestMultiselect.assertResult(CriteriaQuery<>,Class<>)",3,6
"org.apache.openjpa.persistence.criteria.results.TestMultiselect.assertResult(CriteriaQuery<>,Class<>,Class<>)",21,100
"org.apache.openjpa.persistence.criteria.results.TestMultiselect.fail(String,CriteriaQuery<>)",10,16
org.apache.openjpa.persistence.criteria.results.TestMultiselect.toClass(Object),2,3
org.apache.openjpa.persistence.criteria.results.TestMultiselect.toString(Class<>),5,11
org.apache.openjpa.persistence.relations.IdOrderedOneManyChild.getId(),0,0
org.apache.openjpa.persistence.relations.IdOrderedOneManyChild.setId(long),1,1
org.apache.openjpa.persistence.relations.IdOrderedOneManyChild.getName(),2,3
org.apache.openjpa.persistence.relations.IdOrderedOneManyChild.setName(String),3,6
org.apache.openjpa.persistence.relations.IdOrderedOneManyChild.getExplicitParent(),2,5
org.apache.openjpa.persistence.relations.IdOrderedOneManyChild.setExplicitParent(IdOrderedOneManyParent),3,10
org.apache.openjpa.persistence.relations.IdOrderedOneManyChild.getImplicitParent(),2,5
org.apache.openjpa.persistence.relations.IdOrderedOneManyChild.setImplicitParent(IdOrderedOneManyParent),3,10
org.apache.openjpa.persistence.flush.ClassPeriod.getTopics(),3,4
org.apache.openjpa.persistence.flush.ClassPeriod.setTopics(Set<Topic>),3,7
org.apache.openjpa.persistence.flush.ClassPeriod.getClassPeriodId(),2,2
org.apache.openjpa.persistence.flush.ClassPeriod.setClassPeriodId(Long),3,5
org.apache.openjpa.persistence.flush.ClassPeriod.getCourse(),1,3
org.apache.openjpa.persistence.flush.ClassPeriod.setCourse(Course),2,6
org.apache.openjpa.persistence.flush.ClassPeriod.getClassPeriodText(),4,5
org.apache.openjpa.persistence.flush.ClassPeriod.setClassPeriodText(String),5,10
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned.setPK(long),1,1
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned.getPK(),0,0
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned.setOther(SequenceAssigned),3,3
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned.getOther(),2,2
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned.Id.Id(),0,0
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned.Id.Id(String),3,4
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned.Id.hashCode(),5,5
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned.Id.toString(),1,2
org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned.Id.equals(Object),2,2
org.apache.openjpa.persistence.enhance.identity.Parent3.getPid(),1,2
org.apache.openjpa.persistence.enhance.identity.Parent3.getName(),2,3
org.apache.openjpa.persistence.enhance.identity.Parent3.setName(String),3,6
org.apache.openjpa.persistence.enhance.identity.Parent3.getDependent(),1,3
org.apache.openjpa.persistence.enhance.identity.Parent3.setDependent(Dependent3),2,6
org.apache.openjpa.persistence.enhance.identity.Parent3.equals(Object),6,17
org.apache.openjpa.persistence.enhance.identity.Parent3.hashCode(),6,18
org.apache.openjpa.persistence.kernel.TestPessimisticLocking.TestPessimisticLocking(String),5,6
org.apache.openjpa.persistence.kernel.TestPessimisticLocking.TestPessimisticLocking(),5,8
org.apache.openjpa.persistence.kernel.TestPessimisticLocking.skipTest(),15,25
org.apache.openjpa.persistence.kernel.TestPessimisticLocking.getLockingPM(),16,34
org.apache.openjpa.persistence.kernel.TestPessimisticLocking.setUp(),20,36
org.apache.openjpa.persistence.kernel.TestPessimisticLocking.tearDown(),4,8
org.apache.openjpa.persistence.kernel.TestPessimisticLocking.testPessimisticLocking(),6,12
org.apache.openjpa.persistence.kernel.TestPessimisticLocking.testPessimisticLockingInternal(),11,20
org.apache.openjpa.persistence.kernel.TestPessimisticLocking.pessimisticLockingTest(boolean),51,138
org.apache.openjpa.persistence.kernel.TestPessimisticLocking.TestThread.TestThread(ReentrantLock),11,17
org.apache.openjpa.persistence.kernel.TestPessimisticLocking.TestThread.run(),33,75
org.apache.openjpa.persistence.util.TestJPAFacadeHelper.setUp(),19,28
org.apache.openjpa.persistence.util.TestJPAFacadeHelper.testEmbeddedId(),17,35
org.apache.openjpa.persistence.util.TestJPAFacadeHelper.testCompositeId(),18,36
org.apache.openjpa.persistence.util.TestJPAFacadeHelper.testBasic(),18,60
org.apache.openjpa.persistence.util.TestJPAFacadeHelper.testDerivedId(),19,37
org.apache.openjpa.persistence.util.TestJPAFacadeHelper.testNoId(),40,90
org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxyDetachLite.setUp(),8,11
org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxyDetachLite.testPostDetach(),52,125
org.apache.openjpa.persistence.identity.TestStringId.setUp(),7,9
org.apache.openjpa.persistence.identity.TestStringId.tearDown(),4,7
org.apache.openjpa.persistence.identity.TestStringId.cleanup(),14,19
org.apache.openjpa.persistence.identity.TestStringId.testTrailingWhitespace(),20,54
org.apache.openjpa.persistence.identity.TestStringId.testLeadingWhitespace(),20,58
org.apache.openjpa.persistence.identity.TestStringId.testInnerWhitespace(),20,56
org.apache.openjpa.persistence.query.common.apps.Entity2.Entity2(),1,1
"org.apache.openjpa.persistence.query.common.apps.Entity2.Entity2(long,String,int)",3,11
org.apache.openjpa.persistence.query.common.apps.Entity2.getPk(),0,0
org.apache.openjpa.persistence.query.common.apps.Entity2.setStringField(String),4,8
org.apache.openjpa.persistence.query.common.apps.Entity2.getStringField(),2,5
org.apache.openjpa.persistence.query.common.apps.Entity2.setIntField(int),3,5
org.apache.openjpa.persistence.query.common.apps.Entity2.getIntField(),1,2
org.apache.openjpa.persistence.query.common.apps.Entity2.toString(),2,8
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCLeafA.getLeafAData(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.stringdiscriminator.PIdJTSDMSCLeafA.setLeafAData(String),4,10
org.apache.openjpa.slice.ProductDerivation.putBrokerFactoryAliases(Map),8,10
org.apache.openjpa.slice.ProductDerivation.getConfigurationPrefix(),4,5
org.apache.openjpa.slice.ProductDerivation.getType(),2,3
org.apache.openjpa.slice.ProductDerivation.getSupportedQueryHints(),9,9
org.apache.openjpa.persistence.meta.Embed0.getF1(),0,0
org.apache.openjpa.persistence.meta.Embed0.setF1(long),1,1
org.apache.openjpa.persistence.meta.Embed0.getEntity1(),5,6
org.apache.openjpa.persistence.meta.Embed0.setEntity1(ImplicitFieldAccessSubclass),6,9
org.apache.openjpa.persistence.kernel.TestClassStringConstructor.TestClassStringConstructor(String),6,11
org.apache.openjpa.persistence.kernel.TestClassStringConstructor.setUp(),4,5
org.apache.openjpa.persistence.kernel.TestClassStringConstructor.testConstructor(),11,17
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.AllFieldTypesTest(),5,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestDate(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestDate(Date),3,10
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestCalendar(Calendar),3,10
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestCalendar(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestObject(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestObject(Object),3,10
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestchar(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestchar(char),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestint(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestint(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestshort(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestshort(short),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestlong(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestlong(long),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestboolean(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestboolean(boolean),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestfloat(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestfloat(float),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestdouble(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestdouble(double),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestString(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestString(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestBigString(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestBigString(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestbyte(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestbyte(byte),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestBigInteger(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestBigInteger(BigInteger),3,10
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.getTestBigDecimal(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.setTestBigDecimal(BigDecimal),3,10
"org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.randomize(boolean,boolean)",25,79
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.toString(),17,56
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.hashCode(),19,55
org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.equals(Object),18,55
"org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest.eq(Object,Object)",8,12
org.apache.openjpa.persistence.kernel.TestMultiThreaded.TestMultiThreaded(),5,8
org.apache.openjpa.persistence.kernel.TestMultiThreaded.TestMultiThreaded(String),5,6
org.apache.openjpa.persistence.kernel.TestMultiThreaded.setUp(),27,49
org.apache.openjpa.persistence.kernel.TestMultiThreaded.tearDown(),4,6
org.apache.openjpa.persistence.kernel.TestMultiThreaded.testgetTransaction(),6,7
org.apache.openjpa.persistence.kernel.TestMultiThreaded.testGetObjectById(),7,8
org.apache.openjpa.persistence.kernel.TestMultiThreaded.testQueryExecution(),18,21
org.apache.openjpa.persistence.kernel.TestMultiThreaded.testDeletePersistent(),17,18
org.apache.openjpa.persistence.kernel.TestMultiThreaded.testRefreshAll(),6,7
org.apache.openjpa.persistence.kernel.TestMultiThreaded.testEvictAll(),6,7
org.apache.openjpa.persistence.kernel.TestMultiThreaded.testIterateExtent(),20,40
org.apache.openjpa.persistence.jdbc.maps.qualified.path.Phone.getId(),0,0
"org.apache.openjpa.persistence.jdbc.maps.qualified.path.Phone.Phone(int,String,int)",4,8
org.apache.openjpa.persistence.jdbc.maps.qualified.path.Phone.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.qualified.path.Phone.getType(),2,3
org.apache.openjpa.persistence.jdbc.maps.qualified.path.Phone.setType(String),3,6
org.apache.openjpa.persistence.jdbc.maps.qualified.path.Phone.getNumber(),0,0
org.apache.openjpa.persistence.jdbc.maps.qualified.path.Phone.setNumber(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.VicePresident.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.VicePresident.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.VicePresident.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.VicePresident.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.VicePresident.getCompany(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.VicePresident.setCompany(Company),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.VicePresident.getDivision(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex6.VicePresident.setDivision(Division),3,6
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.ArraysTest(),2,2
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.equals(Object),4,6
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.compareTo(Object),4,6
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getString(),1,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getDate(),1,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getInt(),1,1
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getLong(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getFloat(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getByte(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getDouble(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getBoolean(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getShort(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getCharacter(),1,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getIntP(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getLongP(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getFloatP(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getByteP(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getDoubleP(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getBooleanP(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getShortP(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getCharacterP(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getCharacterPClob(),2,4
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.getArraysTest(),2,6
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setString(String[]),3,6
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setDate(Date[]),3,6
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setInt(Integer[]),3,4
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setLong(Long[]),2,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setFloat(Float[]),2,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setByte(Byte[]),2,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setDouble(Double[]),2,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setBoolean(Boolean[]),2,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setShort(Short[]),2,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setCharacter(Character[]),3,6
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setIntP(int[]),2,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setLongP(long[]),2,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setFloatP(float[]),2,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setByteP(byte[]),2,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setDoubleP(double[]),2,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setBooleanP(boolean[]),2,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setShortP(short[]),2,3
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setCharacterP(char[]),3,5
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setCharacterPClob(char[]),4,7
org.apache.openjpa.persistence.kernel.common.apps.ArraysTest.setArraysTest(ArraysTest[]),4,9
org.apache.openjpa.persistence.jdbc.query.TestNativeQueryParameterBinding.setUp(),3,4
org.apache.openjpa.persistence.jdbc.query.TestNativeQueryParameterBinding.testNamedParameterInNativeQueryIsNotValid(),14,15
org.apache.openjpa.persistence.jdbc.query.TestNativeQueryParameterBinding.testPositionalParameterInNativeQueryIsValid(),12,13
org.apache.openjpa.persistence.jdbc.query.TestNativeQueryParameterBinding.testZeroPositionalParameterInNativeQueryIsNotValid(),15,16
org.apache.openjpa.persistence.jdbc.query.TestNativeQueryParameterBinding.testNativeQueryDeclaredParameters(),18,28
"org.apache.openjpa.persistence.jdbc.query.TestNativeQueryParameterBinding.verifyParams(String,Class<>,Object)",33,60
org.apache.openjpa.persistence.kernel.TestFetchGroupsExtent.TestFetchGroupsExtent(),5,8
org.apache.openjpa.persistence.kernel.TestFetchGroupsExtent.TestFetchGroupsExtent(String),4,4
org.apache.openjpa.persistence.kernel.TestFetchGroupsExtent.getO1(OpenJPAEntityManager),16,33
org.apache.openjpa.persistence.kernel.TestFetchGroupsExtent.getO2(OpenJPAEntityManager),16,33
org.apache.openjpa.persistence.kernel.TestFetchGroupsExtent.getC1(OpenJPAEntityManager),17,36
org.apache.openjpa.persistence.jdbc.order.BaseTestElement1.BaseTestElement1(),3,3
org.apache.openjpa.persistence.jdbc.order.BaseTestElement1.BaseTestElement1(String),5,7
org.apache.openjpa.persistence.jdbc.order.BaseTestElement1.setName(String),3,6
org.apache.openjpa.persistence.jdbc.order.BaseTestElement1.getName(),2,3
org.apache.openjpa.persistence.jdbc.order.BaseTestElement1.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.BaseTestElement1.getId(),0,0
org.apache.openjpa.persistence.jdbc.order.BaseTestElement1.equals(Object),9,22
org.apache.openjpa.persistence.kernel.TestEJBGetObjectByIdValue.TestEJBGetObjectByIdValue(String),7,8
org.apache.openjpa.persistence.kernel.TestEJBGetObjectByIdValue.setUp(),10,17
org.apache.openjpa.persistence.kernel.TestEJBGetObjectByIdValue.testDatastore(),14,37
org.apache.openjpa.persistence.kernel.TestEJBGetObjectByIdValue.testAppId(),14,36
org.apache.openjpa.persistence.jdbc.meta.TestJDBCType.TestJDBCType(String),7,11
org.apache.openjpa.persistence.jdbc.meta.TestJDBCType.testSchemaGeneration(),54,193
org.apache.openjpa.persistence.jdbc.order.Home.Home(),1,1
org.apache.openjpa.persistence.jdbc.order.Home.Home(int),2,2
org.apache.openjpa.persistence.jdbc.order.Home.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.Home.getId(),0,0
org.apache.openjpa.persistence.jdbc.order.Home.setBuildYear(int),2,5
org.apache.openjpa.persistence.jdbc.order.Home.getBuildYear(),1,2
org.apache.openjpa.persistence.jdbc.order.Home.equals(Object),5,13
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.Division.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.Division.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.Division.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.Division.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.Division.getBranches(),3,4
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.Division.addBranch(String),5,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.Division.equals(Object),4,7
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_29_ex1.Division.hashCode(),4,11
org.apache.openjpa.slice.jdbc.DistributedResultSet.add(ResultSet),9,12
org.apache.openjpa.slice.jdbc.DistributedResultSet.absolute(int),6,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.afterLast(),6,6
org.apache.openjpa.slice.jdbc.DistributedResultSet.beforeFirst(),4,4
org.apache.openjpa.slice.jdbc.DistributedResultSet.cancelRowUpdates(),6,9
org.apache.openjpa.slice.jdbc.DistributedResultSet.clearWarnings(),6,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.close(),6,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.deleteRow(),6,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.findColumn(String),6,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.first(),6,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.getArray(int),5,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getArray(String),6,9
org.apache.openjpa.slice.jdbc.DistributedResultSet.getAsciiStream(int),7,11
org.apache.openjpa.slice.jdbc.DistributedResultSet.getAsciiStream(String),8,12
org.apache.openjpa.slice.jdbc.DistributedResultSet.getBigDecimal(int),5,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getBigDecimal(String),6,9
"org.apache.openjpa.slice.jdbc.DistributedResultSet.getBigDecimal(int,int)",5,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.getBigDecimal(String,int)",6,11
org.apache.openjpa.slice.jdbc.DistributedResultSet.getBinaryStream(int),7,11
org.apache.openjpa.slice.jdbc.DistributedResultSet.getBinaryStream(String),8,12
org.apache.openjpa.slice.jdbc.DistributedResultSet.getBlob(int),5,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getBlob(String),6,9
org.apache.openjpa.slice.jdbc.DistributedResultSet.getBoolean(int),4,5
org.apache.openjpa.slice.jdbc.DistributedResultSet.getBoolean(String),5,6
org.apache.openjpa.slice.jdbc.DistributedResultSet.getByte(int),4,5
org.apache.openjpa.slice.jdbc.DistributedResultSet.getByte(String),5,6
org.apache.openjpa.slice.jdbc.DistributedResultSet.getBytes(int),5,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.getBytes(String),6,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getCharacterStream(int),7,10
org.apache.openjpa.slice.jdbc.DistributedResultSet.getCharacterStream(String),8,11
org.apache.openjpa.slice.jdbc.DistributedResultSet.getClob(int),5,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getClob(String),6,9
org.apache.openjpa.slice.jdbc.DistributedResultSet.getConcurrency(),4,5
org.apache.openjpa.slice.jdbc.DistributedResultSet.getCursorName(),6,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getDate(int),5,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getDate(String),6,9
"org.apache.openjpa.slice.jdbc.DistributedResultSet.getDate(int,Calendar)",6,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.getDate(String,Calendar)",7,12
org.apache.openjpa.slice.jdbc.DistributedResultSet.getDouble(int),4,5
org.apache.openjpa.slice.jdbc.DistributedResultSet.getDouble(String),5,6
org.apache.openjpa.slice.jdbc.DistributedResultSet.getFetchDirection(),5,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.getFetchSize(),5,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.getFloat(int),4,5
org.apache.openjpa.slice.jdbc.DistributedResultSet.getFloat(String),5,6
org.apache.openjpa.slice.jdbc.DistributedResultSet.getInt(int),4,5
org.apache.openjpa.slice.jdbc.DistributedResultSet.getInt(String),5,6
org.apache.openjpa.slice.jdbc.DistributedResultSet.getLong(int),4,5
org.apache.openjpa.slice.jdbc.DistributedResultSet.getLong(String),5,6
org.apache.openjpa.slice.jdbc.DistributedResultSet.getMetaData(),7,11
org.apache.openjpa.slice.jdbc.DistributedResultSet.getObject(int),5,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getObject(String),6,9
"org.apache.openjpa.slice.jdbc.DistributedResultSet.getObject(int,Map<Class<String>>)",7,12
"org.apache.openjpa.slice.jdbc.DistributedResultSet.getObject(String,Map<Class<String>>)",7,13
org.apache.openjpa.slice.jdbc.DistributedResultSet.getRef(int),5,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getRef(String),6,9
org.apache.openjpa.slice.jdbc.DistributedResultSet.getRow(),5,6
org.apache.openjpa.slice.jdbc.DistributedResultSet.getShort(int),4,5
org.apache.openjpa.slice.jdbc.DistributedResultSet.getShort(String),5,6
org.apache.openjpa.slice.jdbc.DistributedResultSet.getStatement(),4,6
org.apache.openjpa.slice.jdbc.DistributedResultSet.getString(int),5,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getString(String),5,9
org.apache.openjpa.slice.jdbc.DistributedResultSet.getTime(int),5,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getTime(String),6,9
"org.apache.openjpa.slice.jdbc.DistributedResultSet.getTime(int,Calendar)",6,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.getTime(String,Calendar)",7,12
org.apache.openjpa.slice.jdbc.DistributedResultSet.getTimestamp(int),5,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getTimestamp(String),6,9
"org.apache.openjpa.slice.jdbc.DistributedResultSet.getTimestamp(int,Calendar)",6,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.getTimestamp(String,Calendar)",7,12
org.apache.openjpa.slice.jdbc.DistributedResultSet.getType(),4,5
org.apache.openjpa.slice.jdbc.DistributedResultSet.getURL(int),5,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getURL(String),6,9
org.apache.openjpa.slice.jdbc.DistributedResultSet.getUnicodeStream(int),7,11
org.apache.openjpa.slice.jdbc.DistributedResultSet.getUnicodeStream(String),8,12
org.apache.openjpa.slice.jdbc.DistributedResultSet.getWarnings(),5,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.insertRow(),6,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.isAfterLast(),6,6
org.apache.openjpa.slice.jdbc.DistributedResultSet.isBeforeFirst(),4,4
org.apache.openjpa.slice.jdbc.DistributedResultSet.isFirst(),4,5
org.apache.openjpa.slice.jdbc.DistributedResultSet.isLast(),6,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.last(),7,10
org.apache.openjpa.slice.jdbc.DistributedResultSet.moveToCurrentRow(),7,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.moveToInsertRow(),7,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.next(),7,17
org.apache.openjpa.slice.jdbc.DistributedResultSet.previous(),7,13
org.apache.openjpa.slice.jdbc.DistributedResultSet.refreshRow(),6,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.relative(int),7,11
org.apache.openjpa.slice.jdbc.DistributedResultSet.rowDeleted(),6,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.rowInserted(),6,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.rowUpdated(),6,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.setFetchDirection(int),8,9
org.apache.openjpa.slice.jdbc.DistributedResultSet.setFetchSize(int),8,13
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateArray(int,Array)",7,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateArray(String,Array)",8,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateAsciiStream(int,InputStream,int)",9,13
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateAsciiStream(String,InputStream,int)",10,14
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBigDecimal(int,BigDecimal)",7,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBigDecimal(String,BigDecimal)",8,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBinaryStream(int,InputStream,int)",9,13
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBinaryStream(String,InputStream,int)",10,14
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBlob(int,Blob)",7,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBlob(String,Blob)",8,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBoolean(int,boolean)",6,8
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBoolean(String,boolean)",7,9
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateByte(int,byte)",6,8
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateByte(String,byte)",7,9
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBytes(int,byte[])",7,9
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBytes(String,byte[])",8,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateCharacterStream(int,Reader,int)",9,12
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateCharacterStream(String,Reader,int)",10,13
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateClob(int,Clob)",7,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateClob(String,Clob)",8,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateDate(int,Date)",7,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateDate(String,Date)",8,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateDouble(int,double)",6,8
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateDouble(String,double)",7,9
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateFloat(int,float)",6,8
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateFloat(String,float)",7,9
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateInt(int,int)",6,8
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateInt(String,int)",7,9
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateLong(int,long)",6,8
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateLong(String,long)",7,9
org.apache.openjpa.slice.jdbc.DistributedResultSet.updateNull(int),6,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.updateNull(String),7,8
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateObject(int,Object)",7,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateObject(String,Object)",8,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateObject(int,Object,int)",7,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateObject(String,Object,int)",8,12
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateRef(int,Ref)",7,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateRef(String,Ref)",8,11
org.apache.openjpa.slice.jdbc.DistributedResultSet.updateRow(),6,7
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateShort(int,short)",6,8
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateShort(String,short)",7,9
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateString(int,String)",7,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateString(String,String)",7,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateTime(int,Time)",7,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateTime(String,Time)",8,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateTimestamp(int,Timestamp)",7,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateTimestamp(String,Timestamp)",8,11
org.apache.openjpa.slice.jdbc.DistributedResultSet.wasNull(),3,3
org.apache.openjpa.slice.jdbc.DistributedResultSet.isWrapperFor(Class<>),6,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.unwrap(Class<T>),6,7
org.apache.openjpa.slice.jdbc.DistributedResultSet.getHoldability(),5,6
org.apache.openjpa.slice.jdbc.DistributedResultSet.getNCharacterStream(int),8,9
org.apache.openjpa.slice.jdbc.DistributedResultSet.getNCharacterStream(String),9,10
org.apache.openjpa.slice.jdbc.DistributedResultSet.getNClob(int),6,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getNClob(String),7,9
org.apache.openjpa.slice.jdbc.DistributedResultSet.getNString(int),6,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getNString(String),6,9
org.apache.openjpa.slice.jdbc.DistributedResultSet.getRowId(int),6,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getRowId(String),7,9
org.apache.openjpa.slice.jdbc.DistributedResultSet.getSQLXML(int),6,8
org.apache.openjpa.slice.jdbc.DistributedResultSet.getSQLXML(String),7,9
org.apache.openjpa.slice.jdbc.DistributedResultSet.isClosed(),5,6
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateAsciiStream(int,InputStream)",9,12
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateAsciiStream(String,InputStream)",10,13
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateAsciiStream(int,InputStream,long)",9,13
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateAsciiStream(String,InputStream,long)",10,14
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBinaryStream(int,InputStream)",9,12
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBinaryStream(String,InputStream)",10,13
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBinaryStream(int,InputStream,long)",9,13
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBinaryStream(String,InputStream,long)",10,14
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBlob(int,InputStream)",9,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBlob(String,InputStream)",10,12
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBlob(int,InputStream,long)",9,12
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateBlob(String,InputStream,long)",10,13
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateCharacterStream(int,Reader)",9,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateCharacterStream(String,Reader)",10,12
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateCharacterStream(int,Reader,long)",9,12
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateCharacterStream(String,Reader,long)",10,13
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateClob(int,Reader)",8,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateClob(String,Reader)",9,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateClob(int,Reader,long)",8,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateClob(String,Reader,long)",9,12
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateNCharacterStream(int,Reader)",9,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateNCharacterStream(String,Reader)",10,12
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateNCharacterStream(int,Reader,long)",9,12
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateNCharacterStream(String,Reader,long)",10,13
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateNClob(int,NClob)",7,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateNClob(String,NClob)",8,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateNClob(int,Reader)",8,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateNClob(String,Reader)",9,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateNClob(int,Reader,long)",8,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateNClob(String,Reader,long)",9,12
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateNString(int,String)",7,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateNString(String,String)",7,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateRowId(int,RowId)",7,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateRowId(String,RowId)",8,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateSQLXML(int,SQLXML)",7,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.updateSQLXML(String,SQLXML)",8,11
"org.apache.openjpa.slice.jdbc.DistributedResultSet.getObject(String,Class<T>)",9,10
"org.apache.openjpa.slice.jdbc.DistributedResultSet.getObject(int,Class<T>)",8,9
org.apache.openjpa.persistence.kernel.TestNTW.TestNTW(),4,6
org.apache.openjpa.persistence.kernel.TestNTW.TestNTW(String),4,5
org.apache.openjpa.persistence.kernel.TestNTW.setUp(),11,30
org.apache.openjpa.persistence.kernel.TestNTW.testNonTransactionalWrite(),28,67
org.apache.openjpa.persistence.kernel.TestNTW.broker(),15,32
org.apache.openjpa.persistence.query.TestSubstring.setUp(),41,59
org.apache.openjpa.persistence.query.TestSubstring.testSingleCharacterSubstringInWhere(),12,34
org.apache.openjpa.persistence.query.TestSubstring.testMultiCharacterSubstringInWhere(),14,55
org.apache.openjpa.persistence.query.TestSubstring.testSubstringInSelect(),10,39
org.apache.openjpa.persistence.query.TestSubstring.testSubstringInMemory(),18,50
org.apache.openjpa.persistence.query.TestSubstring.testSubstringWithExpressionsInWhere(),12,13
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.TestSubclassJoinRelations(String),8,13
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.skipTest(),10,15
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.setUpTestCase(),30,158
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testNullOneOne(),16,28
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testEagerNullOneOne(),20,34
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testEmptyBaseList(),18,37
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testEagerEmptyBaseList(),22,43
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testBaseOneOne(),19,51
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testEagerBaseOneOne(),22,53
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testLeafOneOne(),19,59
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testEagerLeafOneOne(),23,65
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testMidOneOne(),19,50
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testEagerMidOneOne(),23,55
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testBaseList(),19,68
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testEagerBaseList(),23,73
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testLeafList(),20,67
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testEagerLeafList(),24,74
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testMidList(),20,85
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testEagerMidList(),24,91
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinRelations.testProjections(),27,110
org.apache.openjpa.persistence.inheritance.serializable.Person.getId(),0,0
org.apache.openjpa.persistence.inheritance.serializable.Person.setId(int),1,1
org.apache.openjpa.persistence.inheritance.serializable.Person.getFirstName(),2,3
org.apache.openjpa.persistence.inheritance.serializable.Person.setFirstName(String),3,6
org.apache.openjpa.persistence.inheritance.serializable.Person.getLastName(),2,3
org.apache.openjpa.persistence.inheritance.serializable.Person.setLastName(String),3,6
org.apache.openjpa.persistence.inheritance.serializable.Person.getVersion(),1,2
org.apache.openjpa.persistence.inheritance.serializable.Person.setVersion(int),2,3
org.apache.openjpa.persistence.inheritance.serializable.Person.hashCode(),5,22
org.apache.openjpa.persistence.inheritance.serializable.Person.equals(Object),5,19
org.apache.openjpa.persistence.query.results.TestJPQLMultiSelectTypedResults.setUp(),14,15
org.apache.openjpa.persistence.query.results.TestJPQLMultiSelectTypedResults.populate(),34,89
org.apache.openjpa.persistence.query.results.TestJPQLMultiSelectTypedResults.tearDown(),2,3
org.apache.openjpa.persistence.query.results.TestJPQLMultiSelectTypedResults.testMultipleConstructor(),25,61
org.apache.openjpa.persistence.query.results.TestJPQLMultiSelectTypedResults.testMultipleConstructorMixWithMultiSelect(),23,67
org.apache.openjpa.persistence.query.results.TestJPQLMultiSelectTypedResults.testMultiSelect(),35,62
org.apache.openjpa.persistence.inheritance.jointable.TestInheritanceTypeJoinedQuery.setUp(),9,12
org.apache.openjpa.persistence.inheritance.jointable.TestInheritanceTypeJoinedQuery.populate(),23,43
org.apache.openjpa.persistence.inheritance.jointable.TestInheritanceTypeJoinedQuery.testInheritanceJoinedTypeOperator(),41,248
org.apache.openjpa.persistence.inheritance.jointable.TestInheritanceTypeJoinedQuery.testInheritanceTypeJoinedQuery(),32,349
org.apache.openjpa.persistence.models.company.idclass.Person.setFirstName(String),3,6
org.apache.openjpa.persistence.models.company.idclass.Person.getFirstName(),2,3
org.apache.openjpa.persistence.models.company.idclass.Person.setLastName(String),3,6
org.apache.openjpa.persistence.models.company.idclass.Person.getLastName(),2,3
org.apache.openjpa.persistence.models.company.idclass.Person.setHomeAddress(IAddress),3,11
org.apache.openjpa.persistence.models.company.idclass.Person.getHomeAddress(),2,5
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity4.getId(),0,0
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity4.setId(long),1,1
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity4.getName(),2,3
org.apache.openjpa.persistence.jdbc.annotations.NonstandardMappingEntity4.setName(String),3,6
org.apache.openjpa.persistence.inheritance.polymorphic.BaseEntity.getId(),0,0
org.apache.openjpa.persistence.inheritance.polymorphic.BaseEntity.getVersion(),1,2
org.apache.openjpa.persistence.relations.TblGrandChild.getGrandChildId(),3,5
org.apache.openjpa.persistence.relations.TblGrandChild.setGrandChildId(Integer),4,10
org.apache.openjpa.persistence.relations.TblGrandChild.getVrsNbr(),3,5
org.apache.openjpa.persistence.relations.TblGrandChild.setVrsNbr(Integer),4,10
org.apache.openjpa.persistence.relations.TblGrandChild.getTblChild(),2,6
org.apache.openjpa.persistence.relations.TblGrandChild.setTblChild(TblChild),3,11
org.apache.openjpa.persistence.jdbc.annotations.Flat2.Flat2(),1,1
org.apache.openjpa.persistence.jdbc.annotations.Flat2.Flat2(int),1,1
org.apache.openjpa.persistence.jdbc.annotations.Flat2.setBasic2(String),3,4
org.apache.openjpa.persistence.jdbc.annotations.Flat2.getBasic2(),2,3
org.apache.openjpa.persistence.jdbc.auto.TestAutoIncrement.setUp(),21,34
org.apache.openjpa.persistence.jdbc.auto.TestAutoIncrement.test(),10,21
org.apache.openjpa.persistence.jdbc.auto.TestAutoIncrement.testMergeNewEntity(),9,18
org.apache.openjpa.persistence.jdbc.auto.TestAutoIncrement.createZeroIdEntity(),22,44
org.apache.openjpa.persistence.relations.TestJoinedMultiInheritanceHierarchy.setUp(),11,15
org.apache.openjpa.persistence.relations.TestJoinedMultiInheritanceHierarchy.testCacheSqlGeneration(),27,62
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.setUp(),34,104
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.tearDown(),12,26
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.isDataCacheActive(OpenJPAEntityManagerFactorySPI),22,41
"org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.createBidirectionalRelation(EntityManager,long,boolean)",30,139
"org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.verifyBidirectionalRelation(boolean,boolean,boolean)",56,175
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testConsitentBidirectionalRelationIsPreservedWithDataCache(),10,13
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testConsitentBidirectionalRelationIsPreservedWithoutDataCache(),10,13
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testInconsitentBidirectionalRelationIsPreservedWithDataCache(),10,13
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testInconsitentBidirectionalRelationIsNotPreservedWithoutDataCache(),10,13
"org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.verifyRefresh(boolean,LockModeType,boolean,boolean,String)",74,264
"org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.getExpectedMarker(boolean,LockModeType,boolean)",26,69
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testDirtyRefreshWithNoLockHitsDatabase(),10,15
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testDirtyRefreshWithNoLockHitsDataCache(),11,16
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testCleanRefreshWithNoLockDoesNotHitDatabase(),11,15
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testCleanRefreshWithNoLockHitsDataCache(),12,16
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testDirtyRefreshWithReadLockHitsDatabase(),12,31
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testCleanRefreshWithReadLockDoesNotHitDatabase(),13,31
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testDirtyRefreshWithWriteLockHitsDatabase(),12,31
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testCleanRefreshWithWriteLockDoesNotHitDatabase(),13,31
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testDirtyRefreshWithoutDataCacheAlwaysHitsDatabase(),16,73
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testCleanRefreshWithoutDataCacheDoesNotHitDatabase(),17,73
"org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.verifyDeleteDetectionOnRefresh(boolean,boolean,LockModeType,Class<>)",70,208
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testDeleteIsNotDetectedOnCleanRefreshWithoutLockWithDataCache(),16,18
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testDeleteIsDetectedOnCleanRefreshWithLockWithDataCache(),19,34
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testDeleteIsDetectedOnDirtyRefreshWithoutLockWithDataCache(),15,18
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testDeleteIsDetectedOnDirtyRefreshWithLockWithDataCache(),18,34
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testDeleteIsDetectedOnDirtyRefreshWitDataCache(),19,34
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testDeleteIsDetectedOnCleanRefreshWithoutLockWithoutDataCache(),16,18
org.apache.openjpa.persistence.datacache.TestDataCacheBehavesIdentical.testDeleteIsDetectedOnCleanRefreshWithLockWithoutDataCache(),19,34
org.apache.openjpa.persistence.jdbc.annotations.TestPropertyAccess.setUp(),4,5
org.apache.openjpa.persistence.jdbc.annotations.TestPropertyAccess.testPropertyAccessBasicCreation(),23,41
org.apache.openjpa.persistence.jdbc.annotations.TestPropertyAccess.testPropertyAccessBasicMutation(),25,56
org.apache.openjpa.persistence.jdbc.annotations.TestPropertyAccess.testJPQL(),16,27
org.apache.openjpa.persistence.jdbc.annotations.TestPropertyAccess.testJPQLWithFieldNameMismatch(),18,29
org.apache.openjpa.persistence.jdbc.meta.TestBuildSchema.TestBuildSchema(),5,8
org.apache.openjpa.persistence.jdbc.meta.TestBuildSchema.TestBuildSchema(String),4,6
org.apache.openjpa.persistence.jdbc.meta.TestBuildSchema.testSchema(),45,98
org.apache.openjpa.persistence.jdbc.meta.TestBuildSchema.fixNewline(String),10,15
org.apache.openjpa.persistence.jdbc.common.apps.BaseSub1Sub2.getBaseSub1Sub2Field(),3,8
org.apache.openjpa.persistence.jdbc.common.apps.BaseSub1Sub2.setBaseSub1Sub2Field(int),4,17
org.apache.openjpa.persistence.jdbc.query.domain.Order.getAmount(),1,2
org.apache.openjpa.persistence.jdbc.query.domain.Order.setAmount(int),2,5
org.apache.openjpa.persistence.jdbc.query.domain.Order.getCustomer(),1,3
org.apache.openjpa.persistence.jdbc.query.domain.Order.setCustomer(Customer),2,6
org.apache.openjpa.persistence.jdbc.query.domain.Order.getId(),0,0
org.apache.openjpa.persistence.datacache.TestOrderbyInDataCache.setUp(),27,57
org.apache.openjpa.persistence.datacache.TestOrderbyInDataCache.testGetChildList(),17,33
org.apache.openjpa.persistence.datacache.TestOrderbyInDataCache.testInsertChild(),25,62
org.apache.openjpa.persistence.datacache.TestOrderbyInDataCache.testUpdateChildName(),20,40
org.apache.openjpa.persistence.delimited.identifiers.EntityI3.EntityI3(),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityI3.EntityI3(int),1,1
org.apache.openjpa.persistence.delimited.identifiers.EntityI3.getId(),0,0
org.apache.openjpa.persistence.delimited.identifiers.EntityI3.setId(int),2,3
org.apache.openjpa.persistence.delimited.identifiers.EntityI3.getName(),2,4
org.apache.openjpa.persistence.delimited.identifiers.EntityI3.setName(String),4,10
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.getF0(),1,1
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.setF0(String),2,4
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.getPrimitiveInt(),1,2
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.setPrimitiveInt(int),2,5
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.getBoxedInt(),2,3
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.setBoxedInt(Integer),3,6
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.getOne2oneRelation(),4,5
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.setOne2oneRelation(ExplicitFieldAccess),5,8
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.getCollectionRelation(),5,8
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.setCollectionRelation(Collection<ExplicitFieldAccess>),6,11
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.getListRelation(),5,8
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.setListRelation(List<ExplicitFieldAccess>),6,13
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.getSetRelation(),5,8
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.setSetRelation(Set<ExplicitFieldAccess>),5,13
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.getMapRelationKeyPC(),7,13
"org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.setMapRelationKeyPC(Map<ExplicitPropertyAccess,ExplicitFieldAccess>)",8,16
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.getMapRelationKeyBasic(),8,13
"org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.setMapRelationKeyBasic(Map<Integer,ExplicitFieldAccess>)",9,16
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.getTransient(),0,0
org.apache.openjpa.persistence.meta.ImplicitFieldAccessBase.setTransient(int),1,1
org.apache.openjpa.persistence.derivedid.EBigIntegerID.EBigIntegerID(),1,1
org.apache.openjpa.persistence.derivedid.EBigIntegerID.EBigIntegerID(BigInteger),2,4
org.apache.openjpa.persistence.derivedid.EBigIntegerID.getId(),1,1
org.apache.openjpa.persistence.derivedid.EBigIntegerID.setId(BigInteger),2,2
org.apache.openjpa.persistence.derivedid.EBigIntegerID.getName(),2,3
org.apache.openjpa.persistence.derivedid.EBigIntegerID.setName(String),3,6
org.apache.openjpa.persistence.relations.SimpleEmbeddable.SimpleEmbeddable(),3,3
org.apache.openjpa.persistence.relations.SimpleEmbeddable.SimpleEmbeddable(String),4,5
org.apache.openjpa.persistence.relations.TestInverseManager.setUp(),9,11
org.apache.openjpa.persistence.relations.TestInverseManager.testPersist(),15,26
org.apache.openjpa.persistence.detach.Entity13.Entity13(),1,1
"org.apache.openjpa.persistence.detach.Entity13.Entity13(long,String)",3,5
org.apache.openjpa.persistence.detach.Entity13.getId(),0,0
org.apache.openjpa.persistence.detach.Entity13.setId(long),1,1
org.apache.openjpa.persistence.detach.Entity13.getName(),2,3
org.apache.openjpa.persistence.detach.Entity13.setName(String),3,6
org.apache.openjpa.persistence.detach.Entity13.getMap(),3,5
"org.apache.openjpa.persistence.detach.Entity13.setMap(Map<String,Entity11>)",4,8
org.apache.openjpa.persistence.jdbc.common.apps.HorizE.setStringE(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizE.getStringE(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizE.setIntE(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizE.getIntE(),0,0
org.apache.openjpa.persistence.property.TestAccessMods.setUp(),10,11
org.apache.openjpa.persistence.property.TestAccessMods.testAccessMods(),25,68
org.apache.openjpa.persistence.jdbc.common.apps.LocatorTestObject.setBytes(byte[]),2,5
org.apache.openjpa.persistence.jdbc.common.apps.LocatorTestObject.getBytes(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.LocatorTestObject.setClobString(String),4,8
org.apache.openjpa.persistence.jdbc.common.apps.LocatorTestObject.getClobString(),2,5
org.apache.openjpa.persistence.models.company.fetchlazy.Address.setStreetAddress(String),4,10
org.apache.openjpa.persistence.models.company.fetchlazy.Address.getStreetAddress(),3,5
org.apache.openjpa.persistence.models.company.fetchlazy.Address.setCity(String),3,6
org.apache.openjpa.persistence.models.company.fetchlazy.Address.getCity(),2,3
org.apache.openjpa.persistence.models.company.fetchlazy.Address.setState(String),2,2
org.apache.openjpa.persistence.models.company.fetchlazy.Address.getState(),1,1
org.apache.openjpa.persistence.models.company.fetchlazy.Address.setPostalCode(String),4,10
org.apache.openjpa.persistence.models.company.fetchlazy.Address.getPostalCode(),3,5
org.apache.openjpa.persistence.models.company.fetchlazy.Address.setPhoneNumber(String),3,6
org.apache.openjpa.persistence.models.company.fetchlazy.Address.getPhoneNumber(),2,3
org.apache.openjpa.persistence.models.company.fetchlazy.Address.setId(long),1,1
org.apache.openjpa.persistence.models.company.fetchlazy.Address.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.MappedByMapPC.getHelpers(),5,6
org.apache.openjpa.persistence.proxy.delayed.vec.Member.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.vec.Member.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.vec.Member.setAccounts(Collection<IAccount>),5,9
org.apache.openjpa.persistence.proxy.delayed.vec.Member.getAccounts(),3,4
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.createEMF(Object),37,49
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.getPersistenceUnitName(),6,11
"org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.createNamedEMF(String,Object)",47,96
"org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.createNamedOpenJPAEMF(String,String,Map<String,Object>)",49,97
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.getPropertiesMap(Object),46,136
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.run(TestResult),3,12
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.tearDown(),11,15
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.closeEMF(EntityManagerFactory),12,29
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.closeEM(EntityManager),14,20
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.closeAllOpenEMs(EntityManagerFactory),19,36
"org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.clear(EntityManagerFactory,Class<>)",23,49
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.clear(EntityManagerFactory),24,34
"org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.clear(EntityManagerFactory,boolean,ClassMetaData)",47,93
"org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.entityName(EntityManagerFactory,Class<>)",13,23
"org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.isBaseManagedInterface(ClassMetaData,ClassMetaData)",19,44
"org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.isExtendedManagedInterface(ClassMetaData,ClassMetaData)",23,57
"org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.assertNotEquals(Object,Object)",8,13
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.roundtrip(T),12,34
"org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.assertException(Throwable,Class<>)",7,15
"org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.assertException(Throwable,Class<>,Class<>)",22,111
"org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.assertExceptionMessage(Throwable,Class<>,String)",13,28
"org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.assertMessage(Throwable,String)",7,22
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.printException(Throwable),3,5
"org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.printException(Throwable,int)",11,25
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.runBare(),8,10
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.runBare(AllowFailure),24,65
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.runTest(),5,7
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.getAllowFailure(),15,41
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.isRunsOnCurrentPlatform(),25,46
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.isTargetPlatform(String),16,30
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.getPlatform(),9,12
"org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.assertCached(Cache,Class<>,Object,boolean)",17,44
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.setTestsDisabled(boolean),4,9
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.isTestsDisabled(),3,7
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.resolveEntityClass(JPAEntityClassEnum),18,37
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.constructNewEntityObject(JPAEntityClassEnum),23,51
org.apache.openjpa.persistence.test.AbstractPersistenceTestCase.constructNewEntityObject(Class<>),17,41
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesA.getIntA(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.PlaceholderTypesA.setIntA(int),1,1
org.apache.openjpa.persistence.query.TestDupNamedQuery.setUp(),14,38
org.apache.openjpa.persistence.query.TestDupNamedQuery.testSimpleQuery(),5,19
"org.apache.openjpa.persistence.query.TestDupNamedQuery.simpleQuery(boolean,String,String,String,String,String,String)",20,102
org.apache.openjpa.persistence.query.TestDupNamedQuery.main(String[]),9,10
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.OwnerOfEntityWithCompositeId.OwnerOfEntityWithCompositeId(),3,3
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.OwnerOfEntityWithCompositeId.OwnerOfEntityWithCompositeId(String),6,8
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.OwnerOfEntityWithCompositeId.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.OwnerOfEntityWithCompositeId.getRelation(),3,4
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.OwnerOfEntityWithCompositeId.setName(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.OwnerOfEntityWithCompositeId.setRelation(EntityWithCompositeId),4,7
org.apache.openjpa.persistence.spring.LibTestingService.LibTestingService(),3,3
org.apache.openjpa.persistence.spring.LibTestingService.setEntityManager(EntityManager),3,5
org.apache.openjpa.persistence.spring.LibTestingService.depopulateDB(),13,25
org.apache.openjpa.persistence.spring.LibTestingService.repopulateDB(),59,207
org.apache.openjpa.persistence.spring.LibTestingService.isDBClean(),17,41
org.apache.openjpa.persistence.spring.LibTestingService.close(),9,11
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC2.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.NonPKJoinPC2.setStringField(String),3,10
org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC.getPk1(),1,1
org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC.setPk1(String),2,2
org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC.getPk2(),0,0
org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC.setPk2(int),1,1
org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC.getIntField(),1,2
org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC.setIntField(int),2,5
org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC.Idkey.Idkey(),1,1
org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC.Idkey.Idkey(String),7,15
org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC.Idkey.toString(),1,2
org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC.Idkey.equals(Object),3,6
org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC.Idkey.hashCode(),2,4
org.apache.openjpa.persistence.relations.IdOrderedOneManyParent.getId(),0,0
org.apache.openjpa.persistence.relations.IdOrderedOneManyParent.getExplicitChildren(),4,6
org.apache.openjpa.persistence.relations.IdOrderedOneManyParent.getImplicitChildren(),4,6
org.apache.openjpa.persistence.relations.IdOrderedOneManyParent.getName(),2,3
org.apache.openjpa.persistence.relations.IdOrderedOneManyParent.setName(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.Relations.getBase(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.Relations.setBase(Base),2,6
org.apache.openjpa.persistence.jdbc.common.apps.Relations.getBaseSub1(),2,6
org.apache.openjpa.persistence.jdbc.common.apps.Relations.setBaseSub1(BaseSub1),3,11
org.apache.openjpa.persistence.jdbc.common.apps.Relations.getBaseSub1Sub2(),2,9
org.apache.openjpa.persistence.jdbc.common.apps.Relations.setBaseSub1Sub2(BaseSub1Sub2),3,16
org.apache.openjpa.persistence.jdbc.common.apps.Relations.getBaseList(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.Relations.setBaseList(List),3,10
org.apache.openjpa.persistence.jdbc.common.apps.Relations.getBaseSub1List(),3,7
org.apache.openjpa.persistence.jdbc.common.apps.Relations.setBaseSub1List(List),4,14
org.apache.openjpa.persistence.jdbc.common.apps.Relations.getBaseSub1Sub2List(),3,9
org.apache.openjpa.persistence.jdbc.common.apps.Relations.setBaseSub1Sub2List(List),4,18
org.apache.openjpa.persistence.jdbc.common.apps.Relations.getNullBase(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.Relations.setNullBase(Base),2,6
org.apache.openjpa.persistence.jdbc.common.apps.Relations.getEmptyBaseList(),3,7
org.apache.openjpa.persistence.jdbc.common.apps.Relations.setEmptyBaseList(List),4,14
org.apache.openjpa.persistence.models.company.idclass.ProductOrder.setItems(List<>),5,11
org.apache.openjpa.persistence.models.company.idclass.ProductOrder.getItems(),4,5
org.apache.openjpa.persistence.models.company.idclass.ProductOrder.setOrderDate(Date),2,6
org.apache.openjpa.persistence.models.company.idclass.ProductOrder.getOrderDate(),1,3
org.apache.openjpa.persistence.models.company.idclass.ProductOrder.setShippedDate(Date),3,10
org.apache.openjpa.persistence.models.company.idclass.ProductOrder.getShippedDate(),2,5
org.apache.openjpa.persistence.models.company.idclass.ProductOrder.setCustomer(ICustomer),2,7
org.apache.openjpa.persistence.models.company.idclass.ProductOrder.getCustomer(),1,3
org.apache.openjpa.persistence.managedinterface.NonMappedInterfaceImpl.getIntField(),2,2
org.apache.openjpa.persistence.managedinterface.NonMappedInterfaceImpl.setIntField(int),3,3
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.TestSQLQueries(String),7,11
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.TestSQLQueries(),3,3
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.setUp(),33,102
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.testStarQuery(),26,52
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.testCompiledQuery(),30,58
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.testCompiledLanguageQuery(),31,63
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.testTableStarQuery(),26,55
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.testColumnQuery(),26,59
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.testJoinQuery(),27,52
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.testParameters(),33,75
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.testOnlySelectedFieldsLoaded(),31,82
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.testSingleColumnClasslessQuery(),29,75
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.testMultiColumnClasslessQuery(),28,67
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.testResultClass(),26,65
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.testClasslessProjection(),26,61
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.relationLoadedTest(),83,201
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.Holder.setRuntimeTest1(RuntimeTest1),3,5
org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.main(String[]),9,11
"org.apache.openjpa.persistence.jdbc.query.TestSQLQueries.roundtrips(Object,boolean)",19,60
org.apache.openjpa.persistence.jpql.entities.IColumnEntity.getEntities(),3,3
org.apache.openjpa.persistence.jpql.entities.IColumnEntity.setEntities(List<IOrderedEntity>),5,5
org.apache.openjpa.persistence.jpql.entities.IColumnEntity.addEntity(IOrderedEntity),2,4
org.apache.openjpa.persistence.jpql.entities.IColumnEntity.removeEntity(IOrderedEntity),2,5
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalD.setStringD(String),2,6
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalD.getStringD(),1,3
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalD.setIntD(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.HorizAppInterVerticalD.getIntD(),0,0
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.CANAddress.getProvince(),6,9
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.CANAddress.setProvince(String),10,16
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.CANAddress.getPostalCode(),7,12
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.CANAddress.setPostalCode(String),11,19
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.CANAddress.toString(),6,16
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.Employee.getPhoneNumbers(),4,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.Employee.addPhoneNumber(Department,PhoneNumber)",4,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.Employee.removePhoneNumber(Department),4,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex2.Employee.equals(Object),14,43
org.apache.openjpa.persistence.relations.MapKeyParent.getId(),0,0
org.apache.openjpa.persistence.relations.MapKeyParent.getChildren(),5,7
"org.apache.openjpa.persistence.relations.MapKeyParent.setChildren(Map<String,MapKeyChild>)",6,10
org.apache.openjpa.persistence.nullity.TestReadOnlyNullity.setUp(),17,25
org.apache.openjpa.persistence.nullity.TestReadOnlyNullity.testNonInsertableBlobDoesNotFail(),15,22
org.apache.openjpa.persistence.nullity.TestReadOnlyNullity.testNonUpdatableBlobDoesNotFail(),21,33
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.Employee.getPhoneNumbers(),4,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.Employee.addPhoneNumber(Division,PhoneNumber)",4,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.Employee.removePhoneNumber(Division),4,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex0.Employee.equals(Object),14,43
org.apache.openjpa.persistence.relations.TblParent.getParentId(),2,3
org.apache.openjpa.persistence.relations.TblParent.setParentId(Integer),3,6
org.apache.openjpa.persistence.relations.TblParent.getTblChildren(),4,7
org.apache.openjpa.persistence.relations.TblParent.setTblChildren(Collection<TblChild>),5,12
org.apache.openjpa.persistence.relations.TblParent.addTblChild(TblChild),4,12
org.apache.openjpa.persistence.relations.TblChild.getChildId(),2,3
org.apache.openjpa.persistence.relations.TblChild.setChildId(Integer),3,6
org.apache.openjpa.persistence.relations.TblChild.getVrsNbr(),3,5
org.apache.openjpa.persistence.relations.TblChild.setVrsNbr(Integer),4,10
org.apache.openjpa.persistence.relations.TblChild.getTblGrandChildren(),5,10
org.apache.openjpa.persistence.relations.TblChild.setTblGrandChildren(Collection<TblGrandChild>),6,17
org.apache.openjpa.persistence.relations.TblChild.addTblGrandChild(TblGrandChild),6,23
org.apache.openjpa.persistence.relations.TblChild.removeTblGrandChild(TblGrandChild),6,23
org.apache.openjpa.persistence.relations.TblChild.getTblParent(),2,6
org.apache.openjpa.persistence.relations.TblChild.setTblParent(TblParent),3,11
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Department1.getDeptId(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Department1.setDeptId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Department1.getEmpMap(),4,7
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex0.Department1.setEmpMap(Map<Integer,Employee1>)",5,12
org.apache.openjpa.persistence.proxy.delayed.Location.setAddress(String),3,6
org.apache.openjpa.persistence.proxy.delayed.Location.getAddress(),2,3
org.apache.openjpa.persistence.proxy.delayed.Location.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.Location.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.Location.setCity(String),3,6
org.apache.openjpa.persistence.proxy.delayed.Location.getCity(),2,3
org.apache.openjpa.persistence.proxy.delayed.Location.setZip(String),3,6
org.apache.openjpa.persistence.proxy.delayed.Location.getZip(),2,3
org.apache.openjpa.persistence.proxy.delayed.Location.compareTo(Location),3,4
org.apache.openjpa.persistence.relations.TestLRS.setUp(),21,56
org.apache.openjpa.persistence.relations.TestLRS.testEMClear(),9,21
org.apache.openjpa.persistence.relations.TestLRS.testEMClose(),9,22
org.apache.openjpa.persistence.relations.TestLRS.testDetachCopy(),14,32
org.apache.openjpa.persistence.relations.TestLRS.testRelationships(),16,32
"org.apache.openjpa.persistence.relations.TestLRS.assertLRS(LRSEntity,String)",13,37
org.apache.openjpa.persistence.relations.TestLRS.assertMerge(LRSEntity),13,32
org.apache.openjpa.persistence.relations.TestLRS.main(String[]),7,8
org.apache.openjpa.persistence.kernel.common.apps.PCAddress.PCAddress(),1,1
"org.apache.openjpa.persistence.kernel.common.apps.PCAddress.PCAddress(String,String,PCCountry)",6,16
org.apache.openjpa.persistence.kernel.common.apps.PCAddress.getCity(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCAddress.setCity(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.PCAddress.getCountry(),1,3
org.apache.openjpa.persistence.kernel.common.apps.PCAddress.setCountry(PCCountry),2,6
org.apache.openjpa.persistence.kernel.common.apps.PCAddress.getStreet(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCAddress.setStreet(String),3,6
"org.apache.openjpa.persistence.kernel.common.apps.PCAddress.reflect(PCAddress,String)",10,15
org.apache.openjpa.persistence.util.EagerEmbedRel.setIntVals(Set<Integer>),3,7
org.apache.openjpa.persistence.util.EagerEmbedRel.getIntVals(),3,4
org.apache.openjpa.persistence.util.EagerEmbedRel.setEagerEnts(Set<EagerEntity>),4,12
org.apache.openjpa.persistence.util.EagerEmbedRel.getEagerEnts(),4,7
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEmbed.setName(String),3,6
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEmbed.getName(),2,3
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEmbed.setEb(XMLAssocOverEntityB),4,4
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEmbed.getEb(),3,3
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEmbed.setMeb(XMLAssocOverEntityB),5,8
org.apache.openjpa.persistence.embed.attrOverrides.XMLAssocOverEmbed.getMeb(),4,5
org.apache.openjpa.persistence.nullity.BlobValue.getStrVal(),3,5
org.apache.openjpa.persistence.nullity.BlobValue.setStrVal(String),4,10
org.apache.openjpa.persistence.nullity.BlobValue.getIntVal(),1,2
org.apache.openjpa.persistence.nullity.BlobValue.setIntVal(int),2,5
org.apache.openjpa.persistence.nullity.BlobValue.getBytes(),1,2
org.apache.openjpa.persistence.nullity.BlobValue.setBytes(byte[]),2,5
org.apache.openjpa.persistence.relations.TestRelationToRelationMaps.setUp(),7,9
org.apache.openjpa.persistence.relations.TestRelationToRelationMaps.testRelationToRelationMaps(),23,53
org.apache.openjpa.slice.ReentrantSliceLock.ReentrantSliceLock(),3,3
org.apache.openjpa.slice.ReentrantSliceLock.ReentrantSliceLock(boolean),4,5
org.apache.openjpa.slice.ReentrantSliceLock.lock(),4,7
org.apache.openjpa.slice.ReentrantSliceLock.unlock(),4,7
org.apache.openjpa.persistence.relations.TestRelationOrphanRemoval.setUp(),5,7
org.apache.openjpa.persistence.relations.TestRelationOrphanRemoval.testRelationOrphanRemoval(),20,89
org.apache.openjpa.persistence.kernel.TestDateQueries.TestDateQueries(),5,8
org.apache.openjpa.persistence.kernel.TestDateQueries.TestDateQueries(String),5,6
org.apache.openjpa.persistence.kernel.TestDateQueries.setUp(),19,64
org.apache.openjpa.persistence.kernel.TestDateQueries.testEquals(),11,21
org.apache.openjpa.persistence.kernel.TestDateQueries.testNotEquals(),8,12
org.apache.openjpa.persistence.kernel.TestDateQueries.testBefore(),11,19
org.apache.openjpa.persistence.kernel.TestDateQueries.testAfter(),11,19
org.apache.openjpa.persistence.kernel.TestDateQueries.testOrderBy(),16,44
org.apache.openjpa.persistence.kernel.TestDateQueries.executeQuery(String),15,23
org.apache.openjpa.persistence.models.company.fetchlazy.FullTimeEmployee.setSalary(float),2,5
org.apache.openjpa.persistence.models.company.fetchlazy.FullTimeEmployee.getSalary(),1,2
org.apache.openjpa.persistence.enhance.common.apps.NoClone.NoClone(String),3,5
org.apache.openjpa.persistence.enhance.common.apps.NoClone.getString(),1,3
org.apache.openjpa.persistence.enhance.common.apps.NoClone.safeClone(),5,9
org.apache.openjpa.persistence.sequence.GeneratedIdObject.getId(),0,0
org.apache.openjpa.persistence.enhance.identity.Employee4.getAge(),1,2
org.apache.openjpa.persistence.enhance.identity.Employee4.setAge(int),2,5
org.apache.openjpa.persistence.enhance.identity.Employee4.getId(),0,0
org.apache.openjpa.persistence.enhance.identity.Employee4.getChildren(),3,4
org.apache.openjpa.persistence.enhance.identity.Employee4.addChild(Dependent4),7,13
org.apache.openjpa.persistence.enhance.identity.Employee4.setChildren(List<Dependent4>),4,7
org.apache.openjpa.persistence.proxy.entities.IAnnuity.getLastPaidAmt(),2,2
org.apache.openjpa.persistence.proxy.entities.IAnnuity.setLastPaidAmt(Double),3,5
org.apache.openjpa.persistence.proxy.entities.IAnnuity.getAccountNumber(),2,2
org.apache.openjpa.persistence.proxy.entities.IAnnuity.setAccountNumber(String),3,4
org.apache.openjpa.persistence.proxy.entities.IAnnuity.getAmount(),1,1
org.apache.openjpa.persistence.proxy.entities.IAnnuity.setAmount(Double),2,3
org.apache.openjpa.persistence.proxy.entities.IAnnuity.getPayouts(),3,3
org.apache.openjpa.persistence.proxy.entities.IAnnuity.setPayouts(List<IPayout>),4,5
org.apache.openjpa.persistence.proxy.entities.IAnnuity.getRiders(),3,3
org.apache.openjpa.persistence.proxy.entities.IAnnuity.setRiders(List<IRider>),4,5
org.apache.openjpa.persistence.proxy.entities.IAnnuity.getAnnuityHolderId(),3,3
org.apache.openjpa.persistence.proxy.entities.IAnnuity.setAnnuityHolderId(String),4,6
org.apache.openjpa.persistence.proxy.entities.IAnnuity.getPayors(),3,3
org.apache.openjpa.persistence.proxy.entities.IAnnuity.setPayors(List<IPayor>),4,5
org.apache.openjpa.persistence.proxy.entities.IAnnuity.getComments(),3,3
org.apache.openjpa.persistence.proxy.entities.IAnnuity.setComments(List<String>),4,5
org.apache.openjpa.persistence.proxy.entities.IAnnuity.getApprovedAt(),2,2
org.apache.openjpa.persistence.proxy.entities.IAnnuity.setApprovedAt(Date),3,4
org.apache.openjpa.persistence.proxy.entities.IAnnuity.getPreviousAnnuity(),2,3
org.apache.openjpa.persistence.proxy.entities.IAnnuity.setPreviousAnnuity(Annuity),3,6
org.apache.openjpa.persistence.fetchgroups.FGAddress.FGAddress(),1,1
"org.apache.openjpa.persistence.fetchgroups.FGAddress.FGAddress(int,String,String,String,int)",5,13
org.apache.openjpa.persistence.fetchgroups.FGAddress.getCity(),2,3
org.apache.openjpa.persistence.fetchgroups.FGAddress.setCity(String),3,6
org.apache.openjpa.persistence.fetchgroups.FGAddress.getId(),0,0
org.apache.openjpa.persistence.fetchgroups.FGAddress.setId(int),1,1
org.apache.openjpa.persistence.fetchgroups.FGAddress.getState(),1,1
org.apache.openjpa.persistence.fetchgroups.FGAddress.setState(String),2,2
org.apache.openjpa.persistence.fetchgroups.FGAddress.getStreet(),2,3
org.apache.openjpa.persistence.fetchgroups.FGAddress.setStreet(String),3,6
org.apache.openjpa.persistence.fetchgroups.FGAddress.getZip(),1,2
org.apache.openjpa.persistence.fetchgroups.FGAddress.setZip(int),2,5
org.apache.openjpa.persistence.fetchgroups.FGAddress.toString(),7,25
org.apache.openjpa.persistence.identity.DoubleObjIdEntity.getId(),0,0
org.apache.openjpa.persistence.identity.DoubleObjIdEntity.setId(Double),1,1
org.apache.openjpa.persistence.identity.DoubleObjIdEntity.getData(),1,2
org.apache.openjpa.persistence.identity.DoubleObjIdEntity.setData(int),2,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCLeafD1.getLeafD1Data(),3,5
org.apache.openjpa.persistence.inheritance.entities.idmsc.jointable.chardiscriminator.PIdJTCDMSCLeafD1.setLeafD1Data(String),4,10
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindException.setUp(),7,10
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindException.testFindTxReqExceptions(),29,134
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindException.testFindIllegalArgrumentExceptions(),37,506
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindException.testLockOptimisticLockExceptions(),27,107
"org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindException.commonLockOptimisticLockExceptions(LockModeType,boolean,boolean)",29,130
org.apache.openjpa.persistence.models.library.Book.Book(),2,2
org.apache.openjpa.persistence.models.library.Book.Book(String),13,21
org.apache.openjpa.persistence.models.library.Book.getTitle(),2,3
org.apache.openjpa.persistence.models.library.Book.getBorrower(),1,3
org.apache.openjpa.persistence.models.library.Book.setBorrower(Borrower),10,22
org.apache.openjpa.persistence.models.library.Book.clearBorrower(),3,4
org.apache.openjpa.persistence.models.library.Book.getDueDate(),2,5
org.apache.openjpa.persistence.models.library.Book.addSubject(Subject),5,14
org.apache.openjpa.persistence.models.library.Book.removeSubject(Subject),5,14
org.apache.openjpa.persistence.models.library.Book.getSubjects(),4,8
org.apache.openjpa.persistence.models.library.Book.toString(),6,10
org.apache.openjpa.persistence.models.library.Book.hashCode(),3,3
org.apache.openjpa.persistence.models.library.Book.equals(Object),16,24
org.apache.openjpa.persistence.proxy.entities.Payout.getTaxableAmount(),3,5
org.apache.openjpa.persistence.proxy.entities.Payout.setTaxableAmount(BigDecimal),7,26
org.apache.openjpa.persistence.proxy.entities.Payout.getStartDate(),3,5
org.apache.openjpa.persistence.proxy.entities.Payout.setStartDate(Calendar),4,10
org.apache.openjpa.persistence.proxy.entities.Payout.getEndDate(),2,3
org.apache.openjpa.persistence.proxy.entities.Payout.setEndDate(Calendar),4,8
org.apache.openjpa.persistence.proxy.entities.Payout.getAnnuity(),1,3
org.apache.openjpa.persistence.proxy.entities.Payout.setAnnuity(IAnnuity),2,6
org.apache.openjpa.persistence.query.Role.Role(),1,1
org.apache.openjpa.persistence.query.Role.getId(),1,1
org.apache.openjpa.persistence.query.Role.setId(Integer),3,4
org.apache.openjpa.persistence.query.Role.getLookup(),1,3
org.apache.openjpa.persistence.query.Role.setLookup(Lookup),2,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Item2.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Item2.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Item2.getImages(),3,5
"org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex0.Item2.addImage(String,String)",6,13
org.apache.openjpa.persistence.query.TestProjectionQueryWithIdenticalResult.setUp(),15,42
org.apache.openjpa.persistence.query.TestProjectionQueryWithIdenticalResult.testDuplicateResultInProjection1(),16,31
org.apache.openjpa.persistence.query.TestProjectionQueryWithIdenticalResult.testDuplicateResultInProjection2(),16,31
org.apache.openjpa.persistence.query.TestProjectionQueryWithIdenticalResult.testDuplicateResultInProjection3(),16,33
org.apache.openjpa.persistence.query.TestProjectionQueryWithIdenticalResult.testDuplicateResultInProjection4(),16,33
"org.apache.openjpa.persistence.query.TestProjectionQueryWithIdenticalResult.executeQuery(String,boolean)",14,24
org.apache.openjpa.persistence.query.common.apps.QTimeout.QTimeout(),1,1
"org.apache.openjpa.persistence.query.common.apps.QTimeout.QTimeout(int,String)",3,4
org.apache.openjpa.persistence.query.common.apps.QTimeout.getId(),0,0
org.apache.openjpa.persistence.query.common.apps.QTimeout.setStringField(String),4,8
org.apache.openjpa.persistence.query.common.apps.QTimeout.getStringField(),2,5
org.apache.openjpa.persistence.query.common.apps.QTimeout.toString(),2,6
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.setUp(Object),19,32
"org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createAccount(String,IUserIdentity)",6,7
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createDepartment(),2,3
"org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.findDepartment(EntityManager,int)",3,4
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createEmployee(),2,3
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createEmployees(),4,4
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createMember(String),3,3
"org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.findUserIdentity(EntityManager,int)",4,6
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createUserIdentity(),3,5
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createProducts(),4,4
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createCertifications(),4,4
"org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.getEmployee(Collection<IEmployee>,int)",4,6
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createAwards(),4,4
"org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.getProduct(Collection<Product>,int)",4,6
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createLocations(),4,4
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createAccounts(),4,4
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.stringMethodName(Method),5,11
"org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.stringMethodName(String,Class<>[])",7,18
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.methodsToIgnore(),4,6
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createAward(),10,15
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createCertification(),8,14
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createProduct(),5,9
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.createLocation(),10,16
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.testSingleRemove(),48,148
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.testSingleAdd(),51,161
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.testMixedAddRemove(),55,230
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.testEagerCollection(),38,88
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.testOrderedCollection(),36,87
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.testSerialization(),47,152
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.testLazyEmbeddableCollection(),36,72
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.testEagerEmbeddableCollection(),38,88
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.testPostDetach(),55,188
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.testEmbeddableRelationship(),38,91
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.testProxyMethods(),41,85
"org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.buildAndInvoke(Method,EntityManager,int,Collection<IEmployee>)",29,47
"org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.buildArgs(Method,Collection<>)",21,63
org.apache.openjpa.persistence.proxy.delayed.DelayedProxyCollectionsTestCase.excludeMethod(Method),12,17
org.apache.openjpa.persistence.query.TestQueryConvertPositionalParameters.setUp(),22,56
org.apache.openjpa.persistence.query.TestQueryConvertPositionalParameters.tearDown(),11,13
org.apache.openjpa.persistence.query.TestQueryConvertPositionalParameters.testNamedPositionalStartAtNonOne(),15,25
org.apache.openjpa.persistence.query.TestQueryConvertPositionalParameters.testJPQLPositionalStartAtNonOne(),17,39
org.apache.openjpa.persistence.query.TestQueryConvertPositionalParameters.testJPQLWithSubQueryPositionalStartAtNonOne(),18,43
org.apache.openjpa.persistence.query.TestQueryConvertPositionalParameters.testPreparedQueryPositionalStartAtNonOne(),28,86
org.apache.openjpa.persistence.query.TestQueryConvertPositionalParameters.testPreparedQueryWithSubQueryPositionalStartAtNonOne(),29,94
org.apache.openjpa.persistence.jdbc.sqlcache.Author.getName(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.Author.setName(String),3,6
org.apache.openjpa.persistence.jdbc.sqlcache.Author.Author(),1,1
"org.apache.openjpa.persistence.jdbc.sqlcache.Author.Author(String,String,short,int)",5,11
org.apache.openjpa.persistence.jdbc.sqlcache.Author.getBooks(),3,4
org.apache.openjpa.persistence.jdbc.sqlcache.Author.addBook(Book),6,12
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.setUp(),9,14
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.testQueryInMemoryQualifiedId(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.testQueryQualifiedId(),4,6
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.setCandidate(Query,Class)",17,43
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.queryQualifiedId(boolean),25,70
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.testQueryObject(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.createObj(),16,27
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.createEmployee(EntityManager,int)",13,43
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.findObj(),9,15
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.queryObj(),5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.queryPhoneNumber(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.queryEmployee(),15,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.assertEmployee(Employee),10,29
org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.assertPhoneNumber(PhoneNumber),10,20
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.checkPhoneMap(Map<FullPhoneName,PhoneNumber>,Map<FullPhoneName,PhoneNumber>)",14,44
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex9.TestMany2ManyMapEx9.checkEmpMap(Map<FullName,Employee>,Map<FullName,Employee>)",15,39
org.apache.openjpa.persistence.relations.CascadingOneManyParent.getId(),0,0
org.apache.openjpa.persistence.relations.CascadingOneManyParent.getChildren(),4,5
org.apache.openjpa.persistence.relations.CascadingOneManyParent.addChild(CascadingOneManyChild),6,11
org.apache.openjpa.persistence.relations.CascadingOneManyParent.getName(),2,3
org.apache.openjpa.persistence.relations.CascadingOneManyParent.setName(String),3,6
org.apache.openjpa.persistence.jdbc.query.TestHintedQuery.setUp(),4,5
org.apache.openjpa.persistence.jdbc.query.TestHintedQuery.testHintedQuery(),40,125
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.RuntimeTest1(),2,2
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.RuntimeTest1(int),4,6
"org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.RuntimeTest1(String,int)",5,9
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getByteField(),1,2
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setByteField(byte),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getBooleanField(),1,2
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setBooleanField(boolean),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getCharField(),1,2
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setCharField(char),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getDoubleField(),1,2
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setDoubleField(double),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getFloatField(),1,2
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setFloatField(float),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getIntField(),1,2
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setIntField(int),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getLongField(),1,2
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setLongField(long),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getShortField(),1,2
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setShortField(short),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getStringField(),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setStringField(String),3,10
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getBigIntegerField(),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setBigIntegerField(BigInteger),3,10
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getBigDecimalField(),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setBigDecimalField(BigDecimal),3,10
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getDateField(),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setDateField(Date),3,10
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getLocaleField(),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setLocaleField(Locale),3,10
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getByteObjfield(),1,2
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setByteObjfield(Byte),2,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getBooleanObjField(),2,4
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setBooleanObjField(Boolean),3,9
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getCharObjField(),3,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setCharObjField(Character),4,10
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getDoubleObjField(),2,4
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setDoubleObjField(Double),3,9
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getFloatObjField(),2,4
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setFloatObjField(Float),3,9
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getIntObjField(),3,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setIntObjField(Integer),4,10
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getLongObjField(),2,4
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setLongObjField(Long),3,9
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getShortObjField(),2,4
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setShortObjField(Short),3,9
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getTransField(),3,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setTransField(TransactionalClassPC),4,10
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getSelfOneOne(),3,4
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setSelfOneOne(RuntimeTest1),4,7
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.getSelfOneMany(),2,3
org.apache.openjpa.persistence.query.common.apps.RuntimeTest1.setSelfOneMany(Set),2,6
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraint.setUp(Object),7,10
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraint.testMapping(),36,102
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraint.supportsUniqueConstraints(),16,30
org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraint.getUniqueConstraint(String),17,38
"org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraint.getUniqueConstraint(DBDictionary,String)",16,54
"org.apache.openjpa.persistence.jdbc.unique.TestNamedUniqueConstraint.assertSQLFragnments(List<String>,String)",13,26
org.apache.openjpa.persistence.relations.HandlerToHandlerMapInstance.getMap(),2,5
org.apache.openjpa.persistence.jdbc.query.cache.Invoice.Invoice(),1,1
"org.apache.openjpa.persistence.jdbc.query.cache.Invoice.Invoice(int,String,double)",5,11
org.apache.openjpa.persistence.jdbc.query.cache.Invoice.getId(),0,0
org.apache.openjpa.persistence.jdbc.query.cache.Invoice.setId(int),1,1
org.apache.openjpa.persistence.jdbc.query.cache.Invoice.getBrandName(),3,5
org.apache.openjpa.persistence.jdbc.query.cache.Invoice.setBrandName(String),4,10
org.apache.openjpa.persistence.jdbc.query.cache.Invoice.getPrice(),1,2
org.apache.openjpa.persistence.jdbc.query.cache.Invoice.setPrice(double),2,5
org.apache.openjpa.persistence.jdbc.query.cache.Invoice.getLineItems(),4,7
org.apache.openjpa.persistence.jdbc.query.cache.Invoice.setLineItems(List<LineItem>),5,12
org.apache.openjpa.persistence.jpql.entities.UnorderedNameEntity.UnorderedNameEntity(),3,3
org.apache.openjpa.persistence.jpql.entities.UnorderedNameEntity.UnorderedNameEntity(String),4,8
org.apache.openjpa.persistence.jpql.entities.UnorderedNameEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.entities.UnorderedNameEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.entities.UnorderedNameEntity.getName(),2,3
org.apache.openjpa.persistence.jpql.entities.UnorderedNameEntity.setName(String),3,6
org.apache.openjpa.persistence.jpql.entities.UnorderedNameEntity.toString(),4,6
org.apache.openjpa.persistence.xmlmapping.entities.Customer.CustomerKey.CustomerKey(),2,2
"org.apache.openjpa.persistence.xmlmapping.entities.Customer.CustomerKey.CustomerKey(String,int)",5,5
org.apache.openjpa.persistence.xmlmapping.entities.Customer.CustomerKey.toString(),3,4
org.apache.openjpa.persistence.xmlmapping.entities.Customer.CustomerKey.equals(Object),7,20
org.apache.openjpa.persistence.xmlmapping.entities.Customer.CustomerKey.hashCode(),3,6
org.apache.openjpa.persistence.xmlmapping.entities.Customer.Customer(),1,1
"org.apache.openjpa.persistence.xmlmapping.entities.Customer.Customer(CustomerKey,String,CreditRating)",7,16
org.apache.openjpa.persistence.xmlmapping.entities.Customer.getName(),2,3
org.apache.openjpa.persistence.xmlmapping.entities.Customer.setName(String),3,6
org.apache.openjpa.persistence.xmlmapping.entities.Customer.getRating(),2,5
org.apache.openjpa.persistence.xmlmapping.entities.Customer.setRating(CreditRating),3,8
org.apache.openjpa.persistence.xmlmapping.entities.Customer.getOrders(),1,1
org.apache.openjpa.persistence.xmlmapping.entities.Customer.setOrders(Collection<Order>),2,2
org.apache.openjpa.persistence.xmlmapping.entities.Customer.toString(),4,6
org.apache.openjpa.persistence.xmlmapping.entities.Customer.getCid(),3,4
org.apache.openjpa.persistence.xmlmapping.entities.Customer.setCid(CustomerKey),4,7
org.apache.openjpa.persistence.xmlmapping.entities.Customer.getAddress(),1,3
org.apache.openjpa.persistence.xmlmapping.entities.Customer.setAddress(EAddress),2,6
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafA.getLeafAData(),3,3
org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafA.setLeafAData(String),4,6
org.apache.openjpa.persistence.relations.HandlerToRelationMapInstance.getMap(),4,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.PhoneNumber.getNumber(),0,0
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.PhoneNumber.setNumber(int),1,1
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.PhoneNumber.getEmployees(),5,5
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.PhoneNumber.addEmployees(FullName,Employee)",5,7
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.PhoneNumber.removeEmployee(FullName),4,5
org.apache.openjpa.persistence.jdbc.maps.m2mmapex3.PhoneNumber.equals(Object),16,45
org.apache.openjpa.persistence.simple.TestSerializedFactory.setUp(),4,5
org.apache.openjpa.persistence.simple.TestSerializedFactory.testSerializedEntityManagerFactory(),59,140
org.apache.openjpa.persistence.simple.TestSerializedFactory.main(String[]),8,9
org.apache.openjpa.persistence.relations.TargetedIFaceRelationParent.getId(),0,0
org.apache.openjpa.persistence.relations.TargetedIFaceRelationParent.getIFace(),1,1
org.apache.openjpa.persistence.relations.TargetedIFaceRelationParent.setIFace(IFace),2,4
org.apache.openjpa.persistence.relations.TargetedIFaceRelationParent.getName(),2,3
org.apache.openjpa.persistence.relations.TargetedIFaceRelationParent.setName(String),3,6
org.apache.openjpa.persistence.jdbc.meta.TestEJBDateVersion.TestEJBDateVersion(String),6,7
org.apache.openjpa.persistence.jdbc.meta.TestEJBDateVersion.setUp(),11,17
org.apache.openjpa.persistence.jdbc.meta.TestEJBDateVersion.testOptLock(),27,102
org.apache.openjpa.persistence.kernel.TestEJBNoPersistentFields.TestEJBNoPersistentFields(String),6,8
org.apache.openjpa.persistence.kernel.TestEJBNoPersistentFields.setUp(),4,4
org.apache.openjpa.persistence.kernel.TestEJBNoPersistentFields.testNoPersistentFields(),14,30
org.apache.openjpa.persistence.kernel.TestEJBNoPersistentFields.Nholder.Nholder(),1,1
"org.apache.openjpa.persistence.kernel.TestEJBNoPersistentFields.Nholder.Nholder(NoPersistentFieldsPC,int)",5,9
org.apache.openjpa.persistence.kernel.TestEJBNoPersistentFields.Nholder.setNpf(NoPersistentFieldsPC),4,7
org.apache.openjpa.persistence.kernel.TestEJBNoPersistentFields.Nholder.getNpf(),3,4
org.apache.openjpa.persistence.kernel.TestEJBNoPersistentFields.Nholder.getIdKey(),2,2
org.apache.openjpa.persistence.kernel.TestEJBNoPersistentFields.Nholder.setIdKey(int),3,5
org.apache.openjpa.persistence.jdbc.query.cache.TestQueryDefaultEviction.setUp(),11,16
org.apache.openjpa.persistence.jdbc.query.cache.TestQueryDefaultEviction.testTimestampEvictionEnablement(),15,23
org.apache.openjpa.persistence.jdbc.query.cache.TestQueryDefaultEviction.testLoadQueries(),23,48
org.apache.openjpa.persistence.relations.VC.VC(),0,0
org.apache.openjpa.persistence.relations.VC.getVcId(),1,1
org.apache.openjpa.persistence.relations.VC.setVcId(String),2,2
org.apache.openjpa.persistence.relations.VC.getDs(),1,1
org.apache.openjpa.persistence.relations.VC.setDs(Set<D>),1,2
org.apache.openjpa.persistence.relations.VC.getVcs(),1,3
org.apache.openjpa.persistence.relations.VC.setVcs(VCS),2,6
org.apache.openjpa.persistence.relations.VC.VCId.getVcId(),1,1
org.apache.openjpa.persistence.relations.VC.VCId.setVcId(String),2,2
org.apache.openjpa.persistence.relations.VC.VCId.getVcs(),1,3
org.apache.openjpa.persistence.relations.VC.VCId.setVcs(VCSId),2,6
org.apache.openjpa.persistence.relations.VC.VCId.equals(Object),4,14
org.apache.openjpa.persistence.relations.VC.VCId.hashCode(),3,8
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.DependentFieldsPC(),2,2
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.getPK(),0,0
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.setPK(long),1,1
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.getRelation(),3,4
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.setRelation(DependentFieldsPC),4,7
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.getOwner(),3,4
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.setOwner(DependentFieldsPC),4,7
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.getList(),1,3
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.getMap(),1,3
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.getDependentRelation(),3,6
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.setDependentRelation(DependentFieldsPC),4,9
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.getDependentList(),2,5
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.getDependentMappedList(),3,7
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.getDependentInverseKeyList(),4,9
org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC.getDependentMap(),2,5
org.apache.openjpa.persistence.sequence.SequencedEntity.setId(int),1,1
org.apache.openjpa.persistence.sequence.SequencedEntity.getId(),0,0
org.apache.openjpa.persistence.sequence.SequencedEntity.setGval2(int),2,5
org.apache.openjpa.persistence.sequence.SequencedEntity.getGval2(),1,2
org.apache.openjpa.persistence.sequence.SequencedEntity.setGval1(int),2,5
org.apache.openjpa.persistence.sequence.SequencedEntity.getGval1(),1,2
org.apache.openjpa.persistence.sequence.SequencedEntity.setGval3(int),2,5
org.apache.openjpa.persistence.sequence.SequencedEntity.getGval3(),1,2
org.apache.openjpa.persistence.jdbc.meta.TestStateImage.TestStateImage(),4,6
org.apache.openjpa.persistence.jdbc.meta.TestStateImage.TestStateImage(String),3,5
org.apache.openjpa.persistence.jdbc.meta.TestStateImage.setUpTestCase(),17,41
org.apache.openjpa.persistence.jdbc.meta.TestStateImage.testOptLock(),22,94
org.apache.openjpa.persistence.jdbc.meta.TestStateImage.NOTWORKINGtestOptLockWithDelete(),29,49
org.apache.openjpa.persistence.jdbc.meta.TestStateImage.testOptLockOnVerticalClass(),39,106
org.apache.openjpa.persistence.jdbc.meta.TestStateImage.testLockGroup(),16,30
org.apache.openjpa.persistence.jdbc.meta.TestStateImage.main(String[]),6,7
"org.apache.openjpa.persistence.jdbc.meta.TestStateImage.getEm(boolean,boolean)",10,22
org.apache.openjpa.persistence.util.OneToEntity.setId(int),1,1
org.apache.openjpa.persistence.util.OneToEntity.getId(),0,0
org.apache.openjpa.persistence.util.OneToEntity.setToManyLazy(Collection<ToManyLazy>),4,7
org.apache.openjpa.persistence.util.OneToEntity.getToManyLazy(),2,4
org.apache.openjpa.persistence.util.OneToEntity.setToManyEager(Collection<ToManyEager>),4,7
org.apache.openjpa.persistence.util.OneToEntity.getToManyEager(),2,4
org.apache.openjpa.persistence.spring.TransactionalEntityManagerFactory.getTransactionalEntityManager(),3,5
org.apache.openjpa.persistence.lock.extended.LSE1x1Lf.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSE1x1Lf.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSE1x1Lf.getFirstName(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1x1Lf.setFirstName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSE1x1Lf.getUniRight(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1x1Lf.setUniRight(LSE1x1Rt),3,6
org.apache.openjpa.persistence.lock.extended.LSE1x1Lf.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSE1x1Lf.toString(),11,16
org.apache.openjpa.persistence.lock.extended.LSE1x1Lf.readExternal(ObjectInput),11,17
org.apache.openjpa.persistence.lock.extended.LSE1x1Lf.writeExternal(ObjectOutput),9,14
org.apache.openjpa.persistence.xs.AccountingHierarchyRateOpenJPAKey.AccountingHierarchyRateOpenJPAKey(),5,5
org.apache.openjpa.persistence.xs.AccountingHierarchyRateOpenJPAKey.AccountingHierarchyRateOpenJPAKey(String),7,9
org.apache.openjpa.persistence.xs.AccountingHierarchyRateOpenJPAKey.getAccountingHierarchy(),3,5
org.apache.openjpa.persistence.xs.AccountingHierarchyRateOpenJPAKey.setAccountingHierarchy(String),4,10
org.apache.openjpa.persistence.xs.AccountingHierarchyRateOpenJPAKey.getId(),1,1
org.apache.openjpa.persistence.xs.AccountingHierarchyRateOpenJPAKey.setId(String),2,2
org.apache.openjpa.persistence.xs.AccountingHierarchyRateOpenJPAKey.toString(),3,4
org.apache.openjpa.persistence.xs.AccountingHierarchyRateOpenJPAKey.hashCode(),4,10
org.apache.openjpa.persistence.xs.AccountingHierarchyRateOpenJPAKey.equals(Object),8,29
org.apache.openjpa.persistence.xs.AccountingHierarchyRateOpenJPAKey.fromString(String),8,23
org.apache.openjpa.persistence.xs.AccountingHierarchyRateOpenJPAKey.Tokenizer.Tokenizer(String),3,5
org.apache.openjpa.persistence.xs.AccountingHierarchyRateOpenJPAKey.Tokenizer.nextToken(),6,11
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue2.setBasic(String),3,6
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue2.getBasic(),2,3
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue2.setIntBasic(int),2,5
org.apache.openjpa.persistence.jdbc.annotations.EmbedValue2.getIntBasic(),1,2
org.apache.openjpa.persistence.simple.AbstractSuperclass.getSomeProperty(),2,3
org.apache.openjpa.persistence.simple.AbstractSuperclass.setSomeProperty(String),4,6
org.apache.openjpa.persistence.jdbc.strategy.Address.Address(),1,1
org.apache.openjpa.persistence.jdbc.strategy.Address.getCity(),2,3
org.apache.openjpa.persistence.jdbc.strategy.Address.setCity(String),3,6
org.apache.openjpa.persistence.jdbc.strategy.Address.getIdAddress(),1,2
org.apache.openjpa.persistence.jdbc.strategy.Address.setIdAddress(long),2,5
org.apache.openjpa.persistence.lock.extended.LSE1xmRt.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSE1xmRt.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSE1xmRt.getLastName(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1xmRt.setLastName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSE1xmRt.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSE1xmRt.toString(),10,14
org.apache.openjpa.persistence.lock.extended.LSE1xmRt.readExternal(ObjectInput),9,13
org.apache.openjpa.persistence.lock.extended.LSE1xmRt.writeExternal(ObjectOutput),8,11
org.apache.openjpa.persistence.jdbc.annotations.TestManyToMany.setUp(),5,8
org.apache.openjpa.persistence.jdbc.annotations.TestManyToMany.testManyToMany(),18,46
org.apache.openjpa.persistence.jdbc.annotations.TestManyToMany.testInverseOwnerManyToMany(),21,51
org.apache.openjpa.persistence.jdbc.query.domain.Publisher.getName(),2,3
org.apache.openjpa.persistence.jdbc.query.domain.Publisher.setName(String),3,6
org.apache.openjpa.persistence.jdbc.query.domain.Publisher.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.PersistenceAware.getTransString(RuntimeTest1),4,7
"org.apache.openjpa.persistence.kernel.common.apps.PersistenceAware.setTransString(RuntimeTest1,String)",6,10
org.apache.openjpa.persistence.kernel.common.apps.PersistenceAware.getModTransString(ModRuntimeTest1),5,9
"org.apache.openjpa.persistence.kernel.common.apps.PersistenceAware.setModTransString(ModRuntimeTest1,String)",7,12
org.apache.openjpa.persistence.util.RelEntity.setId(int),1,1
org.apache.openjpa.persistence.util.RelEntity.getId(),0,0
org.apache.openjpa.persistence.util.RelEntity.setName(String),3,6
org.apache.openjpa.persistence.util.RelEntity.getName(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementOpOrderPCSub.getSub(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementOpOrderPCSub.setSub(String),3,6
org.apache.openjpa.persistence.jdbc.sqlcache.Department.getCompany(),1,3
org.apache.openjpa.persistence.jdbc.sqlcache.Department.setCompany(Company),2,6
org.apache.openjpa.persistence.jdbc.sqlcache.Department.getEmployees(),3,4
org.apache.openjpa.persistence.jdbc.sqlcache.Department.addEmployees(Employee),6,10
org.apache.openjpa.persistence.jdbc.sqlcache.Department.getId(),0,0
org.apache.openjpa.persistence.jdbc.sqlcache.Department.getName(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.Department.setName(String),3,6
org.apache.openjpa.persistence.managedinterface.ManagedInterfaceOwner.getIntField(),1,2
org.apache.openjpa.persistence.managedinterface.ManagedInterfaceOwner.setIntField(int),2,3
org.apache.openjpa.persistence.managedinterface.ManagedInterfaceOwner.getIFace(),3,3
org.apache.openjpa.persistence.managedinterface.ManagedInterfaceOwner.setIFace(ManagedInterfaceSup),4,6
org.apache.openjpa.persistence.managedinterface.ManagedInterfaceOwner.getEmbed(),2,4
org.apache.openjpa.persistence.managedinterface.ManagedInterfaceOwner.setEmbed(ManagedInterfaceEmbed),3,7
org.apache.openjpa.persistence.jdbc.common.apps.DataStoreTripsPC.DataStoreTripsPC(),3,3
org.apache.openjpa.persistence.jdbc.common.apps.DataStoreTripsPC.DataStoreTripsPC(int),4,4
org.apache.openjpa.persistence.jdbc.common.apps.DataStoreTripsPC.getIntField(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.DataStoreTripsPC.setIntField(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.DataStoreTripsPC.getStringField(),2,5
org.apache.openjpa.persistence.jdbc.common.apps.DataStoreTripsPC.setStringField(String),3,10
org.apache.openjpa.persistence.test.CombinatorialPersistenceTestCase.setUp(Object),6,9
org.apache.openjpa.persistence.test.CombinatorialPersistenceTestCase.countTestCases(),5,7
org.apache.openjpa.persistence.test.CombinatorialPersistenceTestCase.runBare(),33,120
org.apache.openjpa.persistence.test.CombinatorialPersistenceTestCase.getHelper(),3,10
org.apache.openjpa.persistence.test.CombinatorialPersistenceTestCase.assertSQL(String),11,20
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.Employee.setEmpId(int),2,5
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.Employee.getDepartment(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_26_ex1.Employee.setDepartment(Department),3,6
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapAddress.SQLMapAddress(),3,3
"org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapAddress.SQLMapAddress(int,String,String,int)",7,14
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapAddress.getId(),0,0
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapAddress.setId(int),1,1
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapAddress.getState(),1,1
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapAddress.setState(String),2,2
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapAddress.getStreet(),2,3
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapAddress.setStreet(String),3,6
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapAddress.getZip(),1,2
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapAddress.setZip(int),2,5
org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapAddress.inform(),4,4
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindBasic.setUp(),7,10
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindBasic.testFindRead(),6,10
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindBasic.testFindWrite(),6,10
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindBasic.testFindOptimistic(),6,10
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindBasic.testFindOptimisticForceInc(),9,16
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindBasic.testFindPessimisticRead(),7,13
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindBasic.testFindPessimisticWrite(),7,13
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindBasic.testFindPessimisticForceInc(),9,16
"org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindBasic.testCommon(String,LockModeType,int,int)",26,147
org.apache.openjpa.persistence.jdbc.query.TestUpdateSingleValuedAssociation.setUp(),5,6
org.apache.openjpa.persistence.jdbc.query.TestUpdateSingleValuedAssociation.testUpdateSingleValuedAssociationToNullViaParameter(),16,25
org.apache.openjpa.persistence.jdbc.query.TestUpdateSingleValuedAssociation.testUpdateSingleValuedAssociationToNullViaLiteral(),16,23
org.apache.openjpa.persistence.jdbc.query.TestUpdateSingleValuedAssociation.testUpdateSingleValuedAssociationToNonNullViaParameter(),16,30
org.apache.openjpa.persistence.jdbc.query.TestUpdateSingleValuedAssociation.assertUserNullity(boolean),16,30
org.apache.openjpa.persistence.jdbc.query.TestUpdateSingleValuedAssociation.createApplicationWithNonNullApplicant(),14,33
org.apache.openjpa.persistence.jdbc.query.TestUpdateSingleValuedAssociation.createApplicationWithNullApplicant(),11,20
org.apache.openjpa.persistence.jdbc.query.TestUpdateSingleValuedAssociation.createApplicant(),12,23
"org.apache.openjpa.persistence.jdbc.query.TestUpdateSingleValuedAssociation.updateByQuery(String,Object)",19,40
org.apache.openjpa.persistence.kernel.TestSimple.TestSimple(String),6,9
org.apache.openjpa.persistence.kernel.TestSimple.setUp(),4,9
org.apache.openjpa.persistence.kernel.TestSimple.testSimple(),24,179
org.apache.openjpa.persistence.jpql.entities.XMLOrderedOneToManyEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.entities.XMLOrderedOneToManyEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.entities.XMLOrderedOneToManyEntity.getEntities(),4,5
org.apache.openjpa.persistence.jpql.entities.XMLOrderedOneToManyEntity.setEntities(List<INameEntity>),5,8
org.apache.openjpa.persistence.jpql.entities.XMLOrderedOneToManyEntity.addEntity(INameEntity),6,14
org.apache.openjpa.persistence.jpql.entities.XMLOrderedOneToManyEntity.removeEntity(int),7,17
"org.apache.openjpa.persistence.jpql.entities.XMLOrderedOneToManyEntity.insertEntity(int,INameEntity)",8,16
org.apache.openjpa.persistence.jpql.entities.XMLOrderedOneToManyEntity.toString(),4,5
org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxyDetachLite.setUp(),8,11
org.apache.openjpa.persistence.proxy.delayed.llist.TestDelayedLinkedListProxyDetachLite.testPostDetach(),52,125
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.FullName.FullName(),1,1
"org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.FullName.FullName(String,String)",2,9
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.FullName.getFName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.FullName.setFName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.FullName.getLName(),2,3
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.FullName.setLName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.FullName.equals(Object),3,11
org.apache.openjpa.persistence.jdbc.maps.m2mmapex6.FullName.hashCode(),4,13
org.apache.openjpa.persistence.proxy.entities.Annuity.Annuity(),1,1
org.apache.openjpa.persistence.proxy.entities.Annuity.getLastPaidAmt(),2,4
org.apache.openjpa.persistence.proxy.entities.Annuity.setLastPaidAmt(Double),5,20
org.apache.openjpa.persistence.proxy.entities.Annuity.getAccountNumber(),2,3
org.apache.openjpa.persistence.proxy.entities.Annuity.setAccountNumber(String),3,6
org.apache.openjpa.persistence.proxy.entities.Annuity.getAmount(),1,2
org.apache.openjpa.persistence.proxy.entities.Annuity.setAmount(Double),4,13
org.apache.openjpa.persistence.proxy.entities.Annuity.getAnnuityHolderId(),3,5
org.apache.openjpa.persistence.proxy.entities.Annuity.setAnnuityHolderId(String),4,10
org.apache.openjpa.persistence.proxy.entities.Annuity.getPayors(),3,4
org.apache.openjpa.persistence.proxy.entities.Annuity.setPayors(List<IPayor>),4,7
org.apache.openjpa.persistence.proxy.entities.Annuity.getPayouts(),3,4
org.apache.openjpa.persistence.proxy.entities.Annuity.setPayouts(List<IPayout>),4,7
org.apache.openjpa.persistence.proxy.entities.Annuity.getRiders(),3,4
org.apache.openjpa.persistence.proxy.entities.Annuity.setRiders(List<IRider>),4,7
org.apache.openjpa.persistence.proxy.entities.Annuity.getComments(),3,4
org.apache.openjpa.persistence.proxy.entities.Annuity.setComments(List<String>),4,7
org.apache.openjpa.persistence.proxy.entities.Annuity.getApprovedAt(),2,3
org.apache.openjpa.persistence.proxy.entities.Annuity.setApprovedAt(Date),3,6
org.apache.openjpa.persistence.proxy.entities.Annuity.getPreviousAnnuity(),2,5
org.apache.openjpa.persistence.proxy.entities.Annuity.setPreviousAnnuity(Annuity),3,10
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.TestLRSProxies(String),5,6
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.TestLRSProxies(),5,8
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.setUp(),23,211
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testStringSet(),6,11
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testStringSetRetain(),7,12
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testStringCollection(),5,11
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testStringCollectionRetain(),6,12
"org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.stringCollectionTest(Object,boolean,boolean)",36,114
"org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.assertStringCollectionChanged(Collection,boolean)",16,52
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testStringMap(),5,11
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testStringMapRetain(),6,12
"org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.stringMapTest(Object,boolean)",26,76
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.assertStringMapChanged(Map),20,83
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testRelSet(),6,11
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testRelSetRetain(),7,12
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testRelCollection(),5,11
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testRelCollectionRetain(),6,12
"org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.relCollectionTest(Object,boolean,boolean)",37,140
"org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.assertRelCollectionChanged(LRSPCIntf,boolean)",20,77
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testRelMap(),5,11
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testRelMapRetain(),6,12
"org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.relMapTest(Object,boolean)",31,132
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.assertRelMapChanged(LRSPCIntf),24,116
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testTransfer(),23,44
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testShare(),19,59
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testRollback(),24,50
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testReplace(),21,39
org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.testAdd(),35,66
"org.apache.openjpa.persistence.jdbc.meta.TestLRSProxies.getEm(boolean,boolean)",10,25
org.apache.openjpa.persistence.query.Case.getId(),1,1
org.apache.openjpa.persistence.query.Case.setId(Integer),2,2
org.apache.openjpa.persistence.query.Case.getScheduleDay(),2,6
org.apache.openjpa.persistence.query.Case.setScheduleDay(ScheduleDay),3,11
org.apache.openjpa.persistence.query.Case.getScheduledAssignments(),4,7
org.apache.openjpa.persistence.query.Case.setScheduledAssignments(List<ScheduledAssignment>),5,12
org.apache.openjpa.persistence.query.Case.addScheduledAssignment(ScheduledAssignment),4,12
org.apache.openjpa.persistence.relations.Parent.getId(),0,0
org.apache.openjpa.persistence.relations.Parent.setId(int),1,1
org.apache.openjpa.persistence.relations.Parent.getChilds(),3,4
org.apache.openjpa.persistence.relations.Parent.setChilds(Collection<Child>),4,7
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubF.setStringFieldF(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubF.getStringFieldF(),2,5
org.apache.openjpa.persistence.relations.TestHandlerToRelationMaps.setUp(),8,9
org.apache.openjpa.persistence.relations.TestHandlerToRelationMaps.testHandlerToRelationMaps(),23,44
org.apache.openjpa.persistence.jdbc.meta.horizontal.TestLockGroupsWithHorizontalBaseType.TestLockGroupsWithHorizontalBaseType(String),10,16
org.apache.openjpa.persistence.jdbc.meta.horizontal.TestLockGroupsWithHorizontalBaseType.setUp(),4,4
org.apache.openjpa.persistence.jdbc.meta.horizontal.TestLockGroupsWithHorizontalBaseType.testHorizontalLockGroup(),19,51
"org.apache.openjpa.persistence.jdbc.meta.horizontal.TestLockGroupsWithHorizontalBaseType.getEm(boolean,boolean)",10,25
org.apache.openjpa.persistence.models.company.ICompany.setName(String),3,4
org.apache.openjpa.persistence.models.company.ICompany.getName(),2,2
org.apache.openjpa.persistence.models.company.ICompany.setAddress(IAddress),2,4
org.apache.openjpa.persistence.models.company.ICompany.getAddress(),1,2
org.apache.openjpa.persistence.models.company.ICompany.setEmployees(Set<>),3,5
org.apache.openjpa.persistence.models.company.ICompany.getEmployees(),3,3
org.apache.openjpa.persistence.models.company.ICompany.setProducts(Set<>),3,5
org.apache.openjpa.persistence.models.company.ICompany.getProducts(),3,3
org.apache.openjpa.persistence.jdbc.sqlcache.Company.getName(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.Company.setName(String),3,6
org.apache.openjpa.persistence.jdbc.sqlcache.Company.getDepartments(),3,4
org.apache.openjpa.persistence.jdbc.sqlcache.Company.addDepartment(Department),6,10
org.apache.openjpa.persistence.jdbc.sqlcache.Company.getId(),0,0
org.apache.openjpa.persistence.jdbc.sqlcache.Company.getStartYear(),1,2
org.apache.openjpa.persistence.jdbc.sqlcache.Company.setStartYear(int),2,5
org.apache.openjpa.persistence.proxy.delayed.IAccount.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.IAccount.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.IAccount.setName(String),3,4
org.apache.openjpa.persistence.proxy.delayed.IAccount.getName(),2,2
org.apache.openjpa.persistence.proxy.delayed.IAccount.setUserIdent(IUserIdentity),4,7
org.apache.openjpa.persistence.proxy.delayed.IAccount.getUserIdent(),3,4
org.apache.openjpa.persistence.proxy.delayed.pqueue.Department.setEmployees(Collection<IEmployee>),6,10
org.apache.openjpa.persistence.proxy.delayed.pqueue.Department.getEmployees(),3,4
org.apache.openjpa.persistence.proxy.delayed.pqueue.Department.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.pqueue.Department.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.pqueue.Department.setLocations(Collection<Location>),6,10
org.apache.openjpa.persistence.proxy.delayed.pqueue.Department.getLocations(),3,4
org.apache.openjpa.persistence.proxy.delayed.pqueue.Department.setProducts(Collection<Product>),6,10
org.apache.openjpa.persistence.proxy.delayed.pqueue.Department.getProducts(),3,4
org.apache.openjpa.persistence.proxy.delayed.pqueue.Department.setCertifications(Collection<Certification>),6,10
org.apache.openjpa.persistence.proxy.delayed.pqueue.Department.getCertifications(),3,4
org.apache.openjpa.persistence.proxy.delayed.pqueue.Department.setAwards(Collection<Award>),6,10
org.apache.openjpa.persistence.proxy.delayed.pqueue.Department.getAwards(),3,4
org.apache.openjpa.persistence.test.ContainerEMFTest.getPersistenceResourceName(),13,18
org.apache.openjpa.persistence.test.ContainerEMFTest.setUp(Object),13,21
"org.apache.openjpa.persistence.test.ContainerEMFTest.createContainerEMF(String,String,Map<String,Object>)",50,136
"org.apache.openjpa.persistence.test.ContainerEMFTest.createContainerEMF(String,PersistenceUnitInfo,Map<String,Object>)",23,52
org.apache.openjpa.persistence.test.ContainerEMFTest.getResourceURL(String),22,37
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.commonSetUp(),37,78
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.platformSpeedTest(),13,35
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.cleanupDB(),20,24
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.newEmployee(int),3,8
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.getLog(),4,6
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.getDumpStackLog(),5,9
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.logStack(Throwable),9,24
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.notifyParent(),4,7
"org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.launchActionSequence(String,Object,Object[][])",47,129
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.launchCommonSequence(TestThread),149,1286
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.getCanonical(LockModeType),9,33
"org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.processException(TestThread,Act,Throwable)",21,52
"org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.buildPropsMap(Object[],int)",13,43
"org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.matchExpectedException(String,Class<>,Throwable)",12,35
"org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.TestThread.TestThread(int,Object[][])",14,24
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.TestThread.notifyThread(),2,3
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.TestThread.run(),17,25
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.PlatformSpeedTestThread.getLoopCnt(),2,4
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.PlatformSpeedTestThread.run(),4,4
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.getDBType(EntityManager),16,28
org.apache.openjpa.persistence.lockmgr.SequencedActionsTest.getConfiguration(EntityManager),5,11
org.apache.openjpa.persistence.query.ManyOneEntitySub.getSubInt(),1,2
org.apache.openjpa.persistence.query.ManyOneEntitySub.setSubInt(int),2,5
org.apache.openjpa.persistence.jdbc.sqlcache.TestInExpressionParamaterBinding.setUp(),19,24
org.apache.openjpa.persistence.jdbc.sqlcache.TestInExpressionParamaterBinding.tearDown(),3,4
org.apache.openjpa.persistence.jdbc.sqlcache.TestInExpressionParamaterBinding.createData(),16,23
org.apache.openjpa.persistence.jdbc.sqlcache.TestInExpressionParamaterBinding.testWithCollectionParamOfDifferentSize(),21,59
org.apache.openjpa.persistence.jdbc.sqlcache.TestInExpressionParamaterBinding.testWithCollectionParamOfDifferentSizeNoParentheses(),22,60
org.apache.openjpa.persistence.jdbc.sqlcache.TestInExpressionParamaterBinding.testWithSingleParam(),21,58
org.apache.openjpa.persistence.jdbc.sqlcache.TestInExpressionParamaterBinding.testWithMultiplParamOfDifferentSizeNoParentheses(),23,88
org.apache.openjpa.persistence.jdbc.sqlcache.TestInExpressionParamaterBinding.testWithSingleParamNoParentheses(),32,47
org.apache.openjpa.persistence.jdbc.sqlcache.TestInExpressionParamaterBinding.assertCached(String),8,18
org.apache.openjpa.persistence.jdbc.sqlcache.TestInExpressionParamaterBinding.assertNotCached(String),5,11
org.apache.openjpa.persistence.jdbc.sqlcache.TestInExpressionParamaterBinding.getPreparedQueryCache(),7,12
org.apache.openjpa.persistence.query.common.apps.CircularFKPC2.getStringField(),2,5
org.apache.openjpa.persistence.query.common.apps.CircularFKPC2.setStringField(String),3,10
org.apache.openjpa.persistence.query.common.apps.CircularFKPC2.getFKField(),3,4
org.apache.openjpa.persistence.query.common.apps.CircularFKPC2.setFKField(CircularFKPC),4,7
org.apache.openjpa.persistence.jdbc.query.cache.EmployeeId.EmployeeId(),1,1
org.apache.openjpa.persistence.jdbc.query.cache.EmployeeId.EmployeeId(String),3,5
org.apache.openjpa.persistence.jdbc.query.cache.EmployeeId.equals(Object),5,13
org.apache.openjpa.persistence.jdbc.query.cache.EmployeeId.hashCode(),3,5
org.apache.openjpa.persistence.simple.Person.getId(),0,0
org.apache.openjpa.persistence.simple.Person.setId(int),1,1
org.apache.openjpa.persistence.simple.Person.getForename(),2,3
org.apache.openjpa.persistence.simple.Person.setForename(String),3,6
org.apache.openjpa.persistence.simple.Person.getSurname(),2,3
org.apache.openjpa.persistence.simple.Person.setSurname(String),3,6
org.apache.openjpa.slice.TestBulkDelete.getPersistenceUnitName(),5,5
org.apache.openjpa.slice.TestBulkDelete.setUp(),10,13
org.apache.openjpa.slice.TestBulkDelete.tearDown(),20,28
org.apache.openjpa.slice.TestBulkDelete.testBulkDelete(),41,113
org.apache.openjpa.persistence.jdbc.query.domain.Binder.Binder(),1,1
"org.apache.openjpa.persistence.jdbc.query.domain.Binder.Binder(int,String,double)",2,2
org.apache.openjpa.persistence.relations.EntityA2InverseEager.EntityA2InverseEager(),3,3
org.apache.openjpa.persistence.relations.EntityA2InverseEager.EntityA2InverseEager(String),5,8
org.apache.openjpa.persistence.relations.EntityA2InverseEager.getName2(),2,3
org.apache.openjpa.persistence.relations.EntityA2InverseEager.setName2(String),3,6
org.apache.openjpa.persistence.validation.TestValidationFactory.setUp(),4,5
org.apache.openjpa.persistence.validation.TestValidationFactory.testValidationFactory1(),26,56
org.apache.openjpa.persistence.validation.TestValidationFactory.testValidationFactory2(),40,88
org.apache.openjpa.persistence.validation.TestValidationFactory.testValidationFactory3(),40,88
org.apache.openjpa.persistence.validation.TestValidationFactory.testValidationFactory4(),45,123
org.apache.openjpa.persistence.query.TestMethodQLQuery.setUp(),3,4
org.apache.openjpa.persistence.query.TestMethodQLQuery.createMethodQuery(String),9,20
org.apache.openjpa.persistence.query.TestMethodQLQuery.testMethodQLWithParameters(),22,46
org.apache.openjpa.persistence.query.TestMethodQLQuery.testMethodQLWithoutParametersDeclared(),13,19
org.apache.openjpa.persistence.query.TestMethodQLQuery.testInvalidMethodReturnType(),15,21
org.apache.openjpa.persistence.query.TestMethodQLQuery.testVoidMethodReturnType(),15,19
"org.apache.openjpa.persistence.query.TestMethodQLQuery.echo(StoreContext,ClassMetaData,boolean,Map,FetchConfiguration)",22,30
"org.apache.openjpa.persistence.query.TestMethodQLQuery.voidMeth(StoreContext,ClassMetaData,boolean,Map,FetchConfiguration)",12,13
"org.apache.openjpa.persistence.query.TestMethodQLQuery.invalidReturnMeth(StoreContext,ClassMetaData,boolean,Map,FetchConfiguration)",14,15
org.apache.openjpa.persistence.models.company.joined.Product.setName(String),3,6
org.apache.openjpa.persistence.models.company.joined.Product.getName(),2,3
org.apache.openjpa.persistence.models.company.joined.Product.setImage(byte[]),2,5
org.apache.openjpa.persistence.models.company.joined.Product.getImage(),1,2
org.apache.openjpa.persistence.models.company.joined.Product.setPrice(float),2,5
org.apache.openjpa.persistence.models.company.joined.Product.getPrice(),1,2
org.apache.openjpa.persistence.models.company.joined.Product.setDistributors(Set<>),3,9
org.apache.openjpa.persistence.models.company.joined.Product.getDistributors(),3,4
org.apache.openjpa.persistence.models.company.joined.Product.setId(long),1,1
org.apache.openjpa.persistence.models.company.joined.Product.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest3.RuntimeTest3(),2,2
"org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest3.RuntimeTest3(String,int)",4,5
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest3.getIntField3(),1,2
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest3.setIntField3(int),2,5
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJTEgr.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJTEgr.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJTEgr.getFirstName(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJTEgr.setFirstName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJTEgr.getUniRight(),3,4
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJTEgr.setUnitRight(Collection<LSE1xmRt>),5,7
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJTEgr.addUnitRight(LSE1xmRt),4,7
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJTEgr.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJTEgr.toString(),12,16
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJTEgr.readExternal(ObjectInput),12,18
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJTEgr.writeExternal(ObjectOutput),9,14
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrc.DtaSrc(),2,2
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrc.getId(),1,1
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrc.setId(String),2,2
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrc.getName(),2,3
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrc.setName(String),3,6
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrc.hashCode(),4,10
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrc.equals(Object),5,14
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrc.setFields(List<DtaSrcField>),6,9
org.apache.openjpa.persistence.jdbc.query.domain.DtaSrc.getFields(),5,6
org.apache.openjpa.persistence.kernel.common.apps.Inner.Inner(),1,1
org.apache.openjpa.persistence.kernel.common.apps.Inner.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.Inner.getNone(),2,3
org.apache.openjpa.persistence.kernel.common.apps.Inner.getException(),2,3
org.apache.openjpa.persistence.kernel.common.apps.Inner.setNone(Integer),4,6
org.apache.openjpa.persistence.kernel.common.apps.Inner.setException(Integer),4,6
org.apache.openjpa.persistence.jdbc.schema.TestPerClassSequenceFactory.TestPerClassSequenceFactory(),5,8
org.apache.openjpa.persistence.jdbc.schema.TestPerClassSequenceFactory.TestPerClassSequenceFactory(String),4,6
org.apache.openjpa.persistence.jdbc.schema.TestPerClassSequenceFactory.testPerClassSequenceFactory(),34,113
org.apache.openjpa.persistence.jdbc.schema.TestPerClassSequenceFactory.DummySequenceFactory.setType(int),2,3
"org.apache.openjpa.persistence.jdbc.schema.TestPerClassSequenceFactory.DummySequenceFactory.next(StoreContext,ClassMetaData)",8,11
"org.apache.openjpa.persistence.jdbc.schema.TestPerClassSequenceFactory.DummySequenceFactory.current(StoreContext,ClassMetaData)",8,9
"org.apache.openjpa.persistence.jdbc.schema.TestPerClassSequenceFactory.DummySequenceFactory.allocate(int,StoreContext,ClassMetaData)",7,8
org.apache.openjpa.persistence.jdbc.schema.TestPerClassSequenceFactory.DummySequenceFactory.close(),1,1
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.commonSetUp(Class<>),22,36
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.cleanupDB(),23,35
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.getDBType(EntityManager),16,28
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.getConfiguration(EntityManager),5,11
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.getLog(),4,6
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.getDumpStackLog(),5,9
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.getDumpSQLLog(),13,24
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.assertLockTestSQLs(String),9,18
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.assertLockTestNoSQLs(String),10,19
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.logStack(Throwable),9,24
"org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.commonLockTest(String,Class<T>,int,boolean,String,String,AssertCallback)",72,548
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.AssertCallback.findNoLockDbSQL(EntityManager),4,4
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.AssertCallback.findPessimisticForcIncDbSQL(EntityManager),6,6
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.AssertCallback.queryPessimisticReadDbSQL(EntityManager),6,6
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.AssertCallback.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager),7,7
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.AssertCallback.namedQueryPessimisticWriteDbSql(EntityManager),7,7
org.apache.openjpa.persistence.lock.extended.LockScopeTestCase.AssertCallback.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager),8,8
"org.apache.openjpa.persistence.jdbc.strategy.InnerJoinStrategy.selectEagerJoin(Select,OpenJPAStateManager,JDBCStore,JDBCFetchConfiguration,int)",17,40
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceSup.getIntFieldSup(),2,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceSup.setIntFieldSup(int),3,3
org.apache.openjpa.slice.SlicePersistence.getSlice(Object),26,56
org.apache.openjpa.slice.SlicePersistence.isReplicated(Object),11,27
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest5.RuntimeTest5(),2,2
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest5.RuntimeTest5(String),5,6
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest5.setName(String),4,6
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest5.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest5.setRuntimeTest4(RuntimeTest4),4,9
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest5.getRuntimeTest4(),2,6
org.apache.openjpa.persistence.jdbc.kernel.TestRawSQL.TestRawSQL(String),4,6
org.apache.openjpa.persistence.jdbc.kernel.TestRawSQL.setUp(),21,40
org.apache.openjpa.persistence.jdbc.kernel.TestRawSQL.testLoadWithResult(),38,75
org.apache.openjpa.persistence.jdbc.kernel.TestRawSQL.testLoadWithPCROP(),20,35
org.apache.openjpa.persistence.jdbc.kernel.TestRawSQL.testLoadWithPCROP().$1.supportsRandomAccess(),3,3
org.apache.openjpa.persistence.jdbc.kernel.TestRawSQL.testLoadWithPCROP().$1.next(),3,3
org.apache.openjpa.persistence.jdbc.kernel.TestRawSQL.testLoadWithPCROP().$1.absolute(int),5,7
org.apache.openjpa.persistence.jdbc.kernel.TestRawSQL.testLoadWithPCROP().$1.size(),3,3
org.apache.openjpa.persistence.jdbc.kernel.TestRawSQL.testLoadWithPCROP().$1.close(),1,1
org.apache.openjpa.persistence.jdbc.kernel.TestRawSQL.testLoadWithPCROP().$1.handleCheckedException(Exception),5,7
org.apache.openjpa.persistence.jdbc.kernel.TestRawSQL.testLoadWithPCROP().$1.getObjectId(ClassMetaData),5,7
org.apache.openjpa.persistence.jdbc.kernel.TestRawSQL.testLoadWithPCROP().$1.getPCType(),3,3
"org.apache.openjpa.persistence.jdbc.kernel.TestRawSQL.testLoadWithPCROP().$1.load(OpenJPAStateManager,FetchConfiguration)",22,38
"org.apache.openjpa.persistence.jdbc.kernel.TestRawSQL.check(ResultList,Broker)",18,42
"org.apache.openjpa.slice.QueryTargetPolicy.getTargets(String,Map<Object,Object>,String,List<String>,Object)",35,75
org.apache.openjpa.persistence.jpql.version.type.PrimativeLongVersionEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.version.type.PrimativeLongVersionEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.version.type.PrimativeLongVersionEntity.getVersion(),1,2
org.apache.openjpa.slice.Manufacturer.getName(),2,3
org.apache.openjpa.slice.Manufacturer.setName(String),3,6
org.apache.openjpa.persistence.managedinterface.TestSimpleManagedInterface.setUp(),5,7
org.apache.openjpa.persistence.managedinterface.TestSimpleManagedInterface.testMetaDataRepository(),19,41
org.apache.openjpa.persistence.managedinterface.TestSimpleManagedInterface.testInterfaceImplGeneration(),22,34
org.apache.openjpa.persistence.managedinterface.TestSimpleManagedInterface.testBasicOperations(),22,53
org.apache.openjpa.persistence.managedinterface.TestSimpleManagedInterface.testJPQL(),15,18
org.apache.openjpa.persistence.kernel.common.apps.AttachB.AttachB(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AttachB.setBstr(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachB.getBstr(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AttachB.setBint(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachB.getBint(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachB.setBdbl(double),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachB.getBdbl(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachB.setDs(Set),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachB.getDs(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AttachB.setStringIntMap(Map),3,10
org.apache.openjpa.persistence.kernel.common.apps.AttachB.getStringIntMap(),2,5
org.apache.openjpa.persistence.kernel.common.apps.SingleIdLong.correctIdClass(Class),2,2
org.apache.openjpa.persistence.kernel.common.apps.SingleIdLong.getPkString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.SingleIdLong.getPk(),0,0
org.apache.openjpa.persistence.kernel.common.apps.SingleIdLong.setPk(long),1,1
org.apache.openjpa.persistence.kernel.common.apps.SingleIdLong.getString(),2,3
org.apache.openjpa.persistence.kernel.common.apps.SingleIdLong.setString(String),3,4
org.apache.openjpa.slice.TestQueryTargetPolicy.getPersistenceUnitName(),4,4
org.apache.openjpa.slice.TestQueryTargetPolicy.setUp(),20,31
org.apache.openjpa.slice.TestQueryTargetPolicy.create(int),27,67
org.apache.openjpa.slice.TestQueryTargetPolicy.testTargetSingleSlice(),25,60
"org.apache.openjpa.slice.TestQueryTargetPolicy.assertArrayEquals(T[],T[])",3,7
org.apache.openjpa.slice.TestQueryTargetPolicy.getTargetSlices(Query),19,34
org.apache.openjpa.persistence.jdbc.sqlcache.Child.Child(),6,7
org.apache.openjpa.persistence.jdbc.sqlcache.Child.getId(),1,1
org.apache.openjpa.persistence.jdbc.sqlcache.Child.getName(),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.Child.setName(String),4,6
org.apache.openjpa.persistence.jdbc.sqlcache.Child.getParent(),1,3
org.apache.openjpa.persistence.jdbc.sqlcache.Child.setParent(Parent),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.VicePresident.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.VicePresident.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.VicePresident.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.VicePresident.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.VicePresident.getCompany(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex4.VicePresident.setCompany(Company),2,3
org.apache.openjpa.persistence.relations.PPerson.getId(),0,0
org.apache.openjpa.persistence.relations.PPerson.getName(),2,3
org.apache.openjpa.persistence.relations.PPerson.setName(String),3,6
org.apache.openjpa.persistence.relations.PPerson.getPhones(),3,4
org.apache.openjpa.persistence.relations.PPerson.setPhones(Collection<PPhone>),4,7
org.apache.openjpa.persistence.relations.PPerson.toString(),3,4
org.apache.openjpa.slice.jdbc.TargetFetchConfiguration.TargetFetchConfiguration(),3,3
"org.apache.openjpa.slice.jdbc.TargetFetchConfiguration.setHint(String,Object)",11,18
"org.apache.openjpa.slice.jdbc.TargetFetchConfiguration.setHint(String,Object,Object)",12,21
org.apache.openjpa.slice.jdbc.TargetFetchConfiguration.setTargets(String[]),8,13
org.apache.openjpa.slice.jdbc.TargetFetchConfiguration.isExplicitTarget(),7,10
"org.apache.openjpa.slice.jdbc.TargetFetchConfiguration.toSliceNames(Object,boolean)",12,24
"org.apache.openjpa.slice.jdbc.TargetFetchConfiguration.assertTargets(String[],boolean)",8,14
org.apache.openjpa.slice.jdbc.TargetFetchConfiguration.newInstance(ConfigurationState),6,12
"org.apache.openjpa.slice.jdbc.TargetFetchConfiguration.TargetFetchConfiguration(ConfigurationState,JDBCConfigurationState)",5,8
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.GBRAddress.getCounty(),6,9
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.GBRAddress.setCounty(String),10,16
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.GBRAddress.getPostcode(),6,9
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.GBRAddress.setPostcode(String),10,16
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.GBRAddress.toString(),5,15
"org.apache.openjpa.slice.policy.UniformDistributionPolicy.distribute(Object,List<String>,Object)",7,14
org.apache.openjpa.slice.PersistenceTestCase.createEMF(Object),33,44
org.apache.openjpa.slice.PersistenceTestCase.getPersistenceUnitName(),6,11
"org.apache.openjpa.slice.PersistenceTestCase.createNamedEMF(String,Object)",62,133
org.apache.openjpa.slice.PersistenceTestCase.run(TestResult),3,12
org.apache.openjpa.slice.PersistenceTestCase.tearDown(),11,15
org.apache.openjpa.slice.PersistenceTestCase.closeEMF(EntityManagerFactory),6,16
org.apache.openjpa.slice.PersistenceTestCase.closeAllOpenEMs(EntityManagerFactory),20,41
"org.apache.openjpa.slice.PersistenceTestCase.clear(EntityManagerFactory,Class)",23,49
org.apache.openjpa.slice.PersistenceTestCase.clear(EntityManagerFactory),24,34
"org.apache.openjpa.slice.PersistenceTestCase.clear(EntityManagerFactory,boolean,ClassMetaData)",38,68
"org.apache.openjpa.slice.PersistenceTestCase.entityName(EntityManagerFactory,Class)",13,23
"org.apache.openjpa.slice.PersistenceTestCase.assertNotEquals(Object,Object)",8,13
org.apache.openjpa.persistence.query.TestQueryTimeout.setUp(),61,194
org.apache.openjpa.persistence.query.TestQueryTimeout.testQueryTimeout1a(),61,124
org.apache.openjpa.persistence.query.TestQueryTimeout.testQueryTimeout1c(),65,133
org.apache.openjpa.persistence.query.TestQueryTimeout.testQueryTimeout21b(),80,214
org.apache.openjpa.persistence.query.TestQueryTimeout.testQueryTimeout22a(),67,154
org.apache.openjpa.persistence.query.TestQueryTimeout.testQueryTimeout23b(),65,189
org.apache.openjpa.persistence.query.TestQueryTimeout.testQueryTimeout31c(),93,254
org.apache.openjpa.persistence.query.TestQueryTimeout.testQueryTimeout32a(),83,273
org.apache.openjpa.persistence.query.TestQueryTimeout.testQueryTimeout33b(),61,190
org.apache.openjpa.persistence.query.TestQueryTimeout.testQueryTimeout33c(),96,341
org.apache.openjpa.persistence.query.TestQueryTimeout.testQueryTimeout4(),63,186
org.apache.openjpa.persistence.query.TestQueryTimeout.testQueryTimeout5(),40,109
org.apache.openjpa.persistence.query.TestQueryTimeout.testQueryTimeout6(),75,169
org.apache.openjpa.persistence.query.TestQueryTimeout.setupCreateEntities(),27,52
org.apache.openjpa.persistence.query.TestQueryTimeout.setupCreateDBFunction(),39,66
org.apache.openjpa.persistence.query.TestQueryTimeout.setupCreateDBTriggers(),71,264
"org.apache.openjpa.persistence.query.TestQueryTimeout.exec(boolean,int,String)",32,70
"org.apache.openjpa.persistence.query.TestQueryTimeout.checkException(String,Exception)",40,76
"org.apache.openjpa.persistence.query.TestQueryTimeout.checkException(String,Exception,Class<>,String)",23,52
"org.apache.openjpa.persistence.query.TestQueryTimeout.matchesExpectedException(Class<>,Exception,String)",24,52
"org.apache.openjpa.persistence.query.TestQueryTimeout.delay(int,int)",21,47
org.apache.openjpa.persistence.query.TestQueryTimeout.main(String[]),3,3
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.DistributedJDBCConfigurationImpl(),35,159
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.DistributedJDBCConfigurationImpl(ConfigurationProvider),11,13
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.setDiagnosticContext(OpenJPAConfiguration),22,37
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getActiveSliceNames(),11,28
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getAvailableSliceNames(),10,22
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getSlices(Slice.Status),14,41
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getSlice(String),3,6
"org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getSlice(String,boolean)",15,33
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getDistributionPolicyInstance(),5,19
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getDistributionPolicy(),5,16
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.setDistributionPolicyInstance(DistributionPolicy),5,12
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.setDistributionPolicy(String),5,11
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getReplicationPolicyInstance(),5,19
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getReplicationPolicy(),5,16
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.setReplicationPolicyInstance(ReplicationPolicy),5,12
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.setReplicationPolicy(String),5,11
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getQueryTargetPolicyInstance(),6,26
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getQueryTargetPolicy(),6,21
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.setQueryTargetPolicyInstance(QueryTargetPolicy),6,15
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.setQueryTargetPolicy(String),6,13
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getFinderTargetPolicyInstance(),6,26
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getFinderTargetPolicy(),6,21
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.setFinderTargetPolicyInstance(FinderTargetPolicy),6,15
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.setFinderTargetPolicy(String),6,13
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getConnectionFactory(),11,28
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.isLenient(),2,3
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.setLenient(boolean),3,7
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.setMaster(String),4,8
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getMasterSlice(),6,17
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.createDistributedDataStore(),29,65
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.createDataSource(Slice),23,70
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getConnectionInfo(OpenJPAConfiguration),12,26
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.isXACompliant(DataSource),6,15
"org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.verifyDataSource(Slice,DataSource,JDBCConfiguration)",21,57
"org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.handleBadConnection(boolean,Slice,Throwable)",23,66
"org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.newSlice(String,Map)",32,89
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.findSlices(Map),39,110
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.scanForSliceNames(Map),33,74
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.getPartCount(String),6,6
"org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.chopHead(String,String)",6,11
"org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.chopTail(String,String)",5,9
"org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.createSliceProperties(Map,String)",41,157
"org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.addSlice(String,Map)",28,74
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.fromProperties(Map),13,26
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.createConnectionFactory(),9,19
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.isReplicated(Class<>),14,22
"org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.ReplicatedTypeRepository.ReplicatedTypeRepository(MetaDataRepository,List<String>)",9,12
org.apache.openjpa.slice.jdbc.DistributedJDBCConfigurationImpl.ReplicatedTypeRepository.contains(Class<>),13,39
org.apache.openjpa.persistence.jpql.entities.INameEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.entities.INameEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.entities.INameEntity.getName(),2,2
org.apache.openjpa.persistence.jpql.entities.INameEntity.setName(String),3,4
org.apache.openjpa.persistence.jpql.entities.INameEntity.toString(),1,2
org.apache.openjpa.persistence.jpql.version.type.PrimativeShortVersionEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.version.type.PrimativeShortVersionEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.version.type.PrimativeShortVersionEntity.getVersion(),1,2
org.apache.openjpa.tools.maven.AbstractOpenJpaEnhancerMojo.execute(),24,34
org.apache.openjpa.tools.maven.AbstractOpenJpaEnhancerMojo.getOptions(),24,43
org.apache.openjpa.tools.maven.AbstractOpenJpaEnhancerMojo.enhance(List<File>),30,51
"org.apache.openjpa.slice.policy.UserDistributionPolicy.distribute(Object,List<String>,Object)",11,20
org.apache.openjpa.slice.policy.UserDistributionPolicy.assertValidSlices(List<String>),11,18
org.apache.openjpa.slice.policy.UserDistributionPolicy.distribute(PObject),6,8
org.apache.openjpa.slice.policy.UserDistributionPolicy.distribute(Person),7,10
org.apache.openjpa.persistence.lockmgr.TestEmLockMode.setUp(),14,20
org.apache.openjpa.persistence.lockmgr.TestEmLockMode.escapeRegex(String),8,18
org.apache.openjpa.persistence.lockmgr.TestEmLockMode.testFindLockModeIsolations(),26,156
"org.apache.openjpa.persistence.lockmgr.TestEmLockMode.commonTestFindLockModeIsolations(EntityManager,LockModeType,int,String,int,String,int,String)",34,133
org.apache.openjpa.persistence.lockmgr.TestEmLockMode.testRefreshLockModeIsolations(),27,166
"org.apache.openjpa.persistence.lockmgr.TestEmLockMode.commonTestRefreshLockModeIsolations(EntityManager,LockModeType,int,String,int,String,int,String)",35,139
org.apache.openjpa.persistence.lockmgr.TestEmLockMode.testLockLockModeIsolations(),26,141
"org.apache.openjpa.persistence.lockmgr.TestEmLockMode.commonTestLockLockModeIsolations(EntityManager,LockModeType,int,String,int,String,int,String)",34,145
org.apache.openjpa.persistence.lockmgr.TestEmLockMode.testGetLockMode(),28,126
org.apache.openjpa.persistence.kernel.TestFetchGroups.TestFetchGroups(String),3,3
org.apache.openjpa.persistence.kernel.TestFetchGroups.TestFetchGroups(),4,6
org.apache.openjpa.persistence.kernel.TestFetchGroups.setUp(),23,116
org.apache.openjpa.persistence.kernel.TestFetchGroups.testFetchGroupsFromConfiguration(),16,28
org.apache.openjpa.persistence.kernel.TestFetchGroups.testFetchGroupsNoConfiguration(),14,36
org.apache.openjpa.persistence.kernel.TestFetchGroups.testRetrieveAll(),17,45
org.apache.openjpa.persistence.kernel.TestFetchGroups.testFetchGroupConfiguration(),14,76
"org.apache.openjpa.persistence.kernel.TestFetchGroups.checkGroups(OpenJPAEntityManager,String[])",15,26
org.apache.openjpa.persistence.kernel.TestFetchGroups.testFetchGroupsChildWithConfiguration(),19,38
org.apache.openjpa.persistence.kernel.TestFetchGroups.testFetchGroupsWithConfiguration(),19,45
org.apache.openjpa.persistence.kernel.TestFetchGroups.testRelationsLoaded(),39,62
"org.apache.openjpa.persistence.kernel.TestFetchGroups.checkObject(OpenJPAEntityManager,FetchGroupTestObject,boolean,boolean,boolean,boolean,boolean,boolean)",18,54
"org.apache.openjpa.persistence.kernel.TestFetchGroups.checkChildObject(OpenJPAEntityManager,FetchGroupTestObjectChild,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean)",19,60
org.apache.openjpa.persistence.kernel.TestFetchGroups.getO1(OpenJPAEntityManager),7,10
org.apache.openjpa.persistence.kernel.TestFetchGroups.getO2(OpenJPAEntityManager),7,10
org.apache.openjpa.persistence.kernel.TestFetchGroups.getC1(OpenJPAEntityManager),8,12
org.apache.openjpa.persistence.kernel.TestFetchGroups.testFetchGroupInstantiated(),28,54
"org.apache.openjpa.slice.FinderTargetPolicy.getTargets(Class<>,Object,List<String>,Object)",34,64
org.apache.openjpa.persistence.relations.BidiChild.getId(),0,0
org.apache.openjpa.persistence.relations.BidiChild.getName(),2,3
org.apache.openjpa.persistence.relations.BidiChild.setName(String),3,6
org.apache.openjpa.persistence.relations.BidiChild.getOneToOneParent(),2,4
org.apache.openjpa.persistence.relations.BidiChild.setOneToOneParent(BidiParent),3,7
org.apache.openjpa.persistence.relations.BidiChild.getOneToManyParent(),2,4
org.apache.openjpa.persistence.relations.BidiChild.setOneToManyParent(BidiParent),3,7
"org.apache.openjpa.slice.jdbc.UniqueResultObjectProvider.UniqueResultObjectProvider(ResultObjectProvider[],StoreQuery,QueryExpressions[])",9,18
org.apache.openjpa.slice.jdbc.UniqueResultObjectProvider.absolute(int),3,3
org.apache.openjpa.slice.jdbc.UniqueResultObjectProvider.close(),7,9
org.apache.openjpa.slice.jdbc.UniqueResultObjectProvider.getResultObject(),6,8
org.apache.openjpa.slice.jdbc.UniqueResultObjectProvider.handleCheckedException(Exception),4,8
org.apache.openjpa.slice.jdbc.UniqueResultObjectProvider.next(),28,73
"org.apache.openjpa.slice.jdbc.UniqueResultObjectProvider.count(Object,Object)",4,10
"org.apache.openjpa.slice.jdbc.UniqueResultObjectProvider.max(Object,Object)",16,46
"org.apache.openjpa.slice.jdbc.UniqueResultObjectProvider.min(Object,Object)",16,46
"org.apache.openjpa.slice.jdbc.UniqueResultObjectProvider.sum(Object,Object)",12,23
org.apache.openjpa.slice.jdbc.UniqueResultObjectProvider.open(),6,7
org.apache.openjpa.slice.jdbc.UniqueResultObjectProvider.reset(),8,10
org.apache.openjpa.slice.jdbc.UniqueResultObjectProvider.size(),2,2
org.apache.openjpa.slice.jdbc.UniqueResultObjectProvider.supportsRandomAccess(),3,3
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.setUp(),45,81
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.createTestData(),47,219
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.tearDown(),7,12
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testCollectionValuedParameterOfEntities(),30,233
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testCollectionValuedParameterOfEntitiesWithEmptyList(),43,92
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testRepeatedParameterInSubqueryInDifferentOrderSubQLast(),35,92
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPreparedQueryCacheIsActiveByDefault(),5,8
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPreparedQueryCacheIsPerUnitSingleton(),6,18
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPreparedQueryIdentifierIsOriginalJPQLQuery(),15,31
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testOriginalJPQLQueryStringIsSetOnPreparedQuery(),15,34
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testOrderByElementsAbsentInProjection(),19,38
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testExclusionPattern(),11,36
"org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.assertLanguage(OpenJPAQuery<>,String)",6,8
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.assertCached(String),8,18
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.assertNotCached(String),5,11
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPreparedQueryIsCachedOnExecution(),21,47
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPreparedQueryIsCachedAcrossExecution(),18,48
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testInvalidatePreparedQueryWithHint(),27,91
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testIgnorePreparedQueryWithHint(),26,96
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryStatistics(),21,65
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testResetQueryStatistics(),22,144
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryWithNoParameter(),9,11
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryWithLiteral(),11,15
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryWithParameter(),14,19
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryWithJoinsAndParameters(),21,38
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testNamedQueryWithNoParameter(),8,16
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testNamedQueryWithLiteral(),8,16
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testNamedQueryWithPositionalParameter(),13,24
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testNamedQueryWithNamedParameter(),13,26
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPersistenceCapableParameter(),16,20
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testProjectionResult(),21,26
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testCollectionValuedParameters(),23,86
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryProjectionNotCandidateClass(),11,13
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryMultipleProjectionClass(),11,13
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryWithOrderByClause(),10,12
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryCount(),11,14
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testProjectRepeatsTerm(),12,14
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testProjectEmbedded(),11,12
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testNeedsTypeConversion(),12,13
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.literal(String),2,3
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPositional(),31,69
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testNamed(),31,72
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testWrongParameterValueTypeThrowException(),28,46
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testNullParameterValueForPrimitiveTypeThrowsException(),28,45
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryWithLazyRelationIsCached(),36,83
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryWithEagerRelationIsNotCached(),36,91
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testQueryWithUserDefinedAndInternalParamtersInSubquery(),32,73
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPreparedQueryIgnoredWhenLockModeIsSet(),35,92
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testEnumParameter(),37,87
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testMultithreadedAccess(),29,56
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testParameterOnExternalizedFieldIsExcluded(),34,60
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testNoParameterOnExternalizedFieldIsIncluded(),32,51
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testSubqueryParameters(),34,91
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testRepeatedParameterInSubqueryInDifferentOrder(),34,91
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testRepeatedParameterInSubqueryInSameOrder(),34,91
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPartiallyRepeatedParameterInSubquery(),35,90
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testPartiallyRepeatedParameterInMainquery(),35,90
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.testRangeIsExcluded(),10,23
"org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.getAllCompaniesPaged(int,int)",15,29
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.getPreparedQueryCache(),7,12
"org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.compare(String,boolean)",17,35
"org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.compare(String,boolean,int)",20,44
"org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.compare(String,boolean,Object)",28,54
"org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.compare(String,boolean,int,Object)",55,135
"org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.compareSQLs(List<String>,List<String>)",5,10
"org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.run(String,boolean,Object[],int,boolean,int)",69,224
"org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.parameterize(Query,Object[])",15,34
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.iterate(List<>),3,6
"org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.getJPQLString(String,boolean)",11,27
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.SQLAuditor.beforeExecuteStatement(JDBCEvent),7,12
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.SQLAuditor.clear(),1,1
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.SQLAuditor.getSQLs(),4,6
"org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.QueryThread.QueryThread(OpenJPAEntityManager,String)",7,9
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.QueryThread.run(),22,25
org.apache.openjpa.persistence.jdbc.sqlcache.TestPreparedQueryCache.QueryThread.isFailed(),1,2
org.apache.openjpa.persistence.relations.LRSEntity.getId(),0,0
org.apache.openjpa.persistence.relations.LRSEntity.getName(),2,3
org.apache.openjpa.persistence.relations.LRSEntity.setName(String),3,6
org.apache.openjpa.persistence.relations.LRSEntity.getLRSList(),6,15
org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.setUp(),2,3
org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.setUp(Object),11,27
"org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.findUserIdentity(EntityManager,int)",4,8
"org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.findDepartment(EntityManager,int)",3,5
org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.createUserIdentity(),3,9
"org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.createAccount(String,IUserIdentity)",7,12
org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.createDepartment(),2,5
org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.createMember(String),4,6
org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.createEmployee(),2,5
org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.createEmployees(),6,7
org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.createProducts(),6,7
org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.createAwards(),6,7
org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.createLocations(),6,7
org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.createCertifications(),6,7
org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.createAccounts(),6,7
"org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.getEmployee(Collection<IEmployee>,int)",5,11
"org.apache.openjpa.persistence.proxy.delayed.pqueue.TestDelayedPriorityQueueProxy.getProduct(Collection<Product>,int)",5,11
org.apache.openjpa.enhance.stats.TestFetchStatistics.TestFetchStatistics(String),7,15
org.apache.openjpa.enhance.stats.TestFetchStatistics.suite(),6,10
org.apache.openjpa.enhance.stats.TestFetchStatistics.setUp(),12,20
org.apache.openjpa.enhance.stats.TestFetchStatistics.tearDown(),1,1
org.apache.openjpa.enhance.stats.TestFetchStatistics.testFieldAccess(),20,60
org.apache.openjpa.enhance.stats.TestFetchStatistics.testEmbeddedEntityFieldAccess(),20,30
org.apache.openjpa.enhance.stats.TestFetchStatistics.testPropertyFieldMixedAccess(),20,64
org.apache.openjpa.enhance.stats.TestFetchStatistics.testMixedAccess(),19,56
org.apache.openjpa.enhance.stats.TestFetchStatistics.testFieldAccessThroughRelationship(),21,29
org.apache.openjpa.enhance.stats.TestFetchStatistics.testPropertyAccessThroughInheritance(),23,92
org.apache.openjpa.enhance.stats.TestFetchStatistics._testOutputInterval(),9,13
org.apache.openjpa.slice.Car.getVin(),2,3
org.apache.openjpa.slice.Car.setVin(String),3,6
org.apache.openjpa.slice.Car.getModel(),2,3
org.apache.openjpa.slice.Car.setModel(String),3,6
org.apache.openjpa.slice.Car.getMaker(),2,3
org.apache.openjpa.slice.Car.setMaker(Manufacturer),3,6
org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.setUp(),25,55
org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.testNormalUni1xmLock(),5,10
org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.testExtendedUni1xmLock(),5,10
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmLock(String,int,boolean)",28,111
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmLock(String,int,boolean).$1.findNoLockDbSQL(EntityManager)",18,37
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmLock(String,int,boolean).$1.findPessimisticForcIncDbSQL(EntityManager)",23,61
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmLock(String,int,boolean).$1.queryPessimisticReadDbSQL(EntityManager)",22,65
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmLock(String,int,boolean).$1.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager)",21,40
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmLock(String,int,boolean).$1.namedQueryPessimisticWriteDbSql(EntityManager)",24,66
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmLock(String,int,boolean).$1.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager)",22,41
org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.testNormalUni1xmEagerLock(),6,13
org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.testExtendedUni1xmEagerLock(),6,13
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmEagerLock(String,int,boolean)",30,129
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmEagerLock(String,int,boolean).$2.findNoLockDbSQL(EntityManager)",23,93
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmEagerLock(String,int,boolean).$2.findPessimisticForcIncDbSQL(EntityManager)",47,225
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmEagerLock(String,int,boolean).$2.queryPessimisticReadDbSQL(EntityManager)",47,298
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmEagerLock(String,int,boolean).$2.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager)",26,96
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmEagerLock(String,int,boolean).$2.namedQueryPessimisticWriteDbSql(EntityManager)",49,299
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmEagerLock(String,int,boolean).$2.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager)",27,97
org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.testNormalUni1xmJTLock(),5,10
org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.testExtendedUni1xmJTLock(),5,10
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmJTLock(String,int,boolean)",28,111
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmJTLock(String,int,boolean).$3.findNoLockDbSQL(EntityManager)",18,37
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmJTLock(String,int,boolean).$3.findPessimisticForcIncDbSQL(EntityManager)",23,61
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmJTLock(String,int,boolean).$3.queryPessimisticReadDbSQL(EntityManager)",22,65
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmJTLock(String,int,boolean).$3.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager)",21,40
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmJTLock(String,int,boolean).$3.namedQueryPessimisticWriteDbSql(EntityManager)",24,66
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmJTLock(String,int,boolean).$3.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager)",22,41
org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.testNormalUni1xmJTEagerLock(),6,13
org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.testExtendedUni1xmJTEagerLock(),6,13
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmJTEagerLock(String,int,boolean)",30,129
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmJTEagerLock(String,int,boolean).$4.findNoLockDbSQL(EntityManager)",23,93
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmJTEagerLock(String,int,boolean).$4.findPessimisticForcIncDbSQL(EntityManager)",47,225
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmJTEagerLock(String,int,boolean).$4.queryPessimisticReadDbSQL(EntityManager)",48,298
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmJTEagerLock(String,int,boolean).$4.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager)",26,96
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmJTEagerLock(String,int,boolean).$4.namedQueryPessimisticWriteDbSql(EntityManager)",49,298
"org.apache.openjpa.persistence.lock.extended.Test1xmLockScope.common1xmJTEagerLock(String,int,boolean).$4.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager)",27,97
org.apache.openjpa.persistence.jdbc.query.domain.Customer.getId(),0,0
org.apache.openjpa.persistence.jdbc.query.domain.Customer.getName(),2,3
org.apache.openjpa.persistence.jdbc.query.domain.Customer.setName(String),3,6
org.apache.openjpa.persistence.jdbc.query.domain.Customer.getOrders(),1,1
org.apache.openjpa.persistence.jdbc.query.domain.Customer.addOrder(Order),5,6
org.apache.openjpa.persistence.relations.TestEagerBidiSQL.setUp(),30,95
org.apache.openjpa.persistence.relations.TestEagerBidiSQL.testEagerOwnerOneToManyFind(),24,61
org.apache.openjpa.persistence.relations.TestEagerBidiSQL.testEagerOwnerOneToOneFind(),23,59
org.apache.openjpa.persistence.relations.TestEagerBidiSQL.testEagerOwnerOneToManyQuery(),31,82
org.apache.openjpa.persistence.relations.TestEagerBidiSQL.testEagerOwnerOneToOneQuery(),29,78
org.apache.openjpa.persistence.relations.TestEagerBidiSQL.testEagerNonOwnerOneToOneQuery(),29,76
org.apache.openjpa.persistence.relations.TestEagerBidiSQL.main(String[]),9,10
org.apache.openjpa.persistence.sequence.hsql.TestHSQLSequence.setUp(),54,99
"org.apache.openjpa.persistence.sequence.hsql.TestHSQLSequence.createHSQLEmployee(String,String)",11,27
"org.apache.openjpa.persistence.sequence.hsql.TestHSQLSequence.createHSQLEmployee2(String,String)",10,22
org.apache.openjpa.persistence.sequence.hsql.TestHSQLSequence.testId(),8,14
org.apache.openjpa.persistence.sequence.hsql.TestHSQLSequence.testId2(),8,14
org.apache.openjpa.persistence.jdbc.query.TestMultipleEntityProjection.setUp(),6,7
org.apache.openjpa.persistence.jdbc.query.TestMultipleEntityProjection.createData(),32,91
org.apache.openjpa.persistence.jdbc.query.TestMultipleEntityProjection.testMultipleEntitiesInProjectionUsingOuterJoin(),35,84
org.apache.openjpa.persistence.jdbc.query.TestMultipleEntityProjection.testMultipleEntitiesInProjectionUsingInnerJoin(),33,83
org.apache.openjpa.persistence.jdbc.query.TestMultipleEntityProjection.testAggregateExpressionInHavingExpression(),27,119
"org.apache.openjpa.persistence.jdbc.query.TestMultipleEntityProjection.getExpecetedResultCount(String,boolean)",19,49
org.apache.openjpa.persistence.meta.TestXMLPersistenceMetaDataSerializer.TestXMLPersistenceMetaDataSerializer(String),7,9
org.apache.openjpa.persistence.meta.TestXMLPersistenceMetaDataSerializer.getRepository(),27,99
"org.apache.openjpa.slice.policy.SampleQueryTargetPolicy.getTargets(String,Map<Object,Object>,String,List<String>,Object)",20,59
org.apache.openjpa.slice.TestReplication.setUp(),4,5
org.apache.openjpa.slice.TestReplication.getPersistenceUnitName(),5,5
org.apache.openjpa.slice.TestReplication.createData(),16,38
org.apache.openjpa.slice.TestReplication.testPersistInReplicatedSlices(),26,109
org.apache.openjpa.slice.TestReplication.testQuery(),25,48
org.apache.openjpa.slice.TestReplication.testAggregateQuery(),17,38
org.apache.openjpa.persistence.kernel.BaseKernelTest.BaseKernelTest(),5,8
org.apache.openjpa.persistence.kernel.BaseKernelTest.BaseKernelTest(String),6,7
org.apache.openjpa.persistence.kernel.BaseKernelTest.getPM(),4,6
"org.apache.openjpa.persistence.kernel.BaseKernelTest.getPM(boolean,boolean)",13,26
org.apache.openjpa.persistence.kernel.BaseKernelTest.persist(Object),15,30
org.apache.openjpa.persistence.kernel.BaseKernelTest.getProperties(),1,3
org.apache.openjpa.persistence.kernel.BaseKernelTest.getProperties(String[]),34,89
org.apache.openjpa.persistence.kernel.common.apps.PCClassPC.getSpecificPC(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCClassPC.setSpecificPC(Object),3,6
org.apache.openjpa.persistence.kernel.common.apps.PCClassPC.getGenericPC(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCClassPC.setGenericPC(Object),3,6
org.apache.openjpa.persistence.kernel.common.apps.PCClassPC.getGenericObject(),2,5
org.apache.openjpa.persistence.kernel.common.apps.PCClassPC.setGenericObject(Object),3,10
org.apache.openjpa.persistence.kernel.common.apps.PCClassPC.getSpecificInterface(),1,2
org.apache.openjpa.persistence.kernel.common.apps.PCClassPC.setSpecificInterface(PCClassInterface),2,5
org.apache.openjpa.persistence.kernel.common.apps.PCClassPC.getDefaultInterface(),0,0
org.apache.openjpa.persistence.kernel.common.apps.PCClassPC.setDefaultInterface(PCClassInterface),1,1
org.apache.openjpa.persistence.kernel.common.apps.PCClassPC.getSerializableInterface(),1,3
org.apache.openjpa.persistence.kernel.common.apps.PCClassPC.setSerializableInterface(Serializable),2,6
org.apache.openjpa.persistence.kernel.common.apps.PCClassPC.getGenericInterface(),1,2
org.apache.openjpa.persistence.kernel.common.apps.PCClassPC.setGenericInterface(PCClassInterface),2,5
org.apache.openjpa.persistence.models.company.joined.LineItem.setQuantity(int),2,5
org.apache.openjpa.persistence.models.company.joined.LineItem.getQuantity(),1,2
org.apache.openjpa.persistence.models.company.joined.LineItem.setProduct(IProduct),2,7
org.apache.openjpa.persistence.models.company.joined.LineItem.getProduct(),1,3
org.apache.openjpa.persistence.models.company.joined.LineItem.setId(long),1,1
org.apache.openjpa.persistence.models.company.joined.LineItem.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.Certification.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.Certification.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.Certification.setLevel(String),3,6
org.apache.openjpa.persistence.proxy.delayed.Certification.getLevel(),2,3
org.apache.openjpa.persistence.proxy.delayed.Certification.setCertDate(Date),3,10
org.apache.openjpa.persistence.proxy.delayed.Certification.getCertDate(),2,5
org.apache.openjpa.persistence.proxy.delayed.Certification.compareTo(Certification),7,25
org.apache.openjpa.persistence.jdbc.schema.TestLazySchemaFactory.TestLazySchemaFactory(),6,10
org.apache.openjpa.persistence.jdbc.schema.TestLazySchemaFactory.TestLazySchemaFactory(String),5,7
org.apache.openjpa.persistence.jdbc.schema.TestLazySchemaFactory.setUp(),30,62
org.apache.openjpa.persistence.jdbc.schema.TestLazySchemaFactory.testLazySchemaFactory(),23,78
org.apache.openjpa.persistence.jdbc.schema.TestLazySchemaFactory.main(String[]),7,8
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.IncompleteRelationshipChildEntityPk.IncompleteRelationshipChildEntityPk(),4,4
"org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.IncompleteRelationshipChildEntityPk.IncompleteRelationshipChildEntityPk(String,String)",7,12
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.IncompleteRelationshipChildEntityPk.getClientId(),2,3
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.IncompleteRelationshipChildEntityPk.setClientId(String),3,6
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.IncompleteRelationshipChildEntityPk.getDiscount(),2,3
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.IncompleteRelationshipChildEntityPk.setDiscount(String),3,6
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.IncompleteRelationshipChildEntityPk.equals(Object),9,24
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.IncompleteRelationshipChildEntityPk.hashCode(),4,16
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.IncompleteRelationshipChildEntityPk.toString(),7,10
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.IncompleteRelationshipChildEntity(),4,4
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.IncompleteRelationshipChildEntity(IncompleteRelationshipChildEntityPk),4,8
"org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.IncompleteRelationshipChildEntity(String,String)",7,14
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.getPk(),4,4
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.setPk(IncompleteRelationshipChildEntityPk),5,5
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.equals(Object),7,15
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.hashCode(),2,4
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipChildEntity.toString(),5,7
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity2.setOne2Melems(List<BaseTestElement2>),6,9
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity2.getOne2Melems(),5,6
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity2.setCollelems(Set<BaseTestElement2>),5,9
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity2.getCollelems(),5,6
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity2.setM2melems(List<BaseTestElement2>),6,9
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity2.getM2melems(),5,6
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity2.setId(int),1,1
org.apache.openjpa.persistence.jdbc.order.BaseTestEntity2.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.Transition.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.Transition.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.Transition.setName(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.Transition.getFromState(),0,0
org.apache.openjpa.persistence.kernel.common.apps.Transition.setFromState(State),1,1
org.apache.openjpa.persistence.kernel.common.apps.Transition.getToState(),0,0
org.apache.openjpa.persistence.kernel.common.apps.Transition.setToState(State),1,1
org.apache.openjpa.persistence.jdbc.sqlcache.TestExternalizedParameter.setUp(),37,52
org.apache.openjpa.persistence.jdbc.sqlcache.TestExternalizedParameter.testNoFalseAlarmOnExternalizedParameterDetection(),22,35
org.apache.openjpa.persistence.jdbc.sqlcache.TestExternalizedParameter.testCanDetectExternalizedSingleParameterValue(),23,36
org.apache.openjpa.persistence.jdbc.sqlcache.TestExternalizedParameter.testCanDetectExternalizedMixedParameterValue(),24,41
org.apache.openjpa.persistence.jdbc.sqlcache.TestExternalizedParameter.getExpressions(List<>),10,37
org.apache.openjpa.persistence.jdbc.sqlcache.TestExternalizedParameter.isUsingExternalizedParameter(QueryExpressions),14,21
"org.apache.openjpa.enhance.stats.FetchStatisticsAuxEnhancer.run(BCClass,ClassMetaData)",7,9
org.apache.openjpa.enhance.stats.FetchStatisticsAuxEnhancer.skipEnhance(BCMethod),4,4
"org.apache.openjpa.enhance.stats.FetchStatisticsAuxEnhancer.addEnhancement(BCClass,ClassMetaData)",32,81
"org.apache.openjpa.enhance.stats.FetchStatisticsAuxEnhancer.needsTracking(FieldMetaData,String,ClassMetaData)",26,52
"org.apache.openjpa.enhance.stats.FetchStatisticsAuxEnhancer.getFieldName(String,ClassMetaData)",27,81
org.apache.openjpa.persistence.jdbc.query.TestNewJavaObjectQuery.setUp(),12,15
org.apache.openjpa.persistence.jdbc.query.TestNewJavaObjectQuery.testNewJavaObjectQueryResultList(),24,36
org.apache.openjpa.persistence.jdbc.query.TestNewJavaObjectQuery.testNewJavaObjectNamedQueryResultList(),17,27
org.apache.openjpa.tools.maven.test.ModifyDatabaseTest.testDatabaseWrite(),23,45
org.apache.openjpa.persistence.query.NamedQueryEntity.NamedQueryEntity(String),5,10
org.apache.openjpa.persistence.query.NamedQueryEntity.NamedQueryEntity(),4,4
org.apache.openjpa.persistence.jdbc.query.domain.IndoorGame.getPlayer(),1,2
org.apache.openjpa.persistence.jdbc.query.domain.IndoorGame.setPlayer(int),2,3
org.apache.openjpa.persistence.test.CombinationGenerator.addDimension(List),9,15
org.apache.openjpa.persistence.test.CombinationGenerator.addDimension(Object[]),12,17
org.apache.openjpa.persistence.test.CombinationGenerator.generate(),22,85
org.apache.openjpa.persistence.test.CombinationGenerator.getSize(),9,14
org.apache.openjpa.persistence.jdbc.schema.TestDynamicSchemaFactory.TestDynamicSchemaFactory(),6,10
org.apache.openjpa.persistence.jdbc.schema.TestDynamicSchemaFactory.TestDynamicSchemaFactory(String),5,7
org.apache.openjpa.persistence.jdbc.schema.TestDynamicSchemaFactory.setUp(),15,28
org.apache.openjpa.persistence.jdbc.schema.TestDynamicSchemaFactory.testClassMapping(),16,31
org.apache.openjpa.persistence.jdbc.schema.TestDynamicSchemaFactory.testIndicators(),17,38
org.apache.openjpa.persistence.jdbc.schema.TestDynamicSchemaFactory.main(String[]),7,8
org.apache.openjpa.persistence.xml.TestXmlOverrideEntity.setUp(),20,29
org.apache.openjpa.persistence.xml.TestXmlOverrideEntity.getPersistenceUnitName(),5,7
org.apache.openjpa.persistence.xml.TestXmlOverrideEntity.testOverrideHappenedDuringEnhancement(),23,33
org.apache.openjpa.persistence.xml.TestXmlOverrideEntity.testOverriddenEntityName(),23,48
org.apache.openjpa.persistence.xml.TestXmlOverrideEntity.testOptionalAttributeOverride(),32,83
org.apache.openjpa.persistence.xml.TestXmlOverrideEntity.testColumnOverride(),17,32
org.apache.openjpa.persistence.managedinterface.NonMappedInterface.getIntField(),1,1
org.apache.openjpa.persistence.managedinterface.NonMappedInterface.setIntField(int),2,2
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.setUp(),15,20
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithPositionalBindingSucceeds(),17,30
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithNamedBindingFails(),12,19
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithInsufficientValuesFails(),14,23
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithExtraValuesFails(),14,29
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithRepeatedValuesSucceeds(),19,30
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithGapSucceeds(),17,29
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithGapFails(),15,31
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testNamedParameterWithNamedBindingSucceeds(),17,30
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testNamedParameterWithPositionalBindingFails(),12,19
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testNamedParameterWithInsufficientValuesFails(),14,23
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testNamedParameterWithExtraValuesFails(),14,29
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testNamedParameterWithRepeatedValuesSucceeds(),19,30
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testNamedParameterWithGapSucceeds(),17,29
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testNamedParameterWithGapFails(),14,30
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testNamedParameterWithWrongType(),14,27
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithWrongType(),13,22
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testNamedParameterWithNullValue(),11,23
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithNullValue(),10,26
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithSingleResult(),15,26
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithNativeQuery(),17,27
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithNativeQueryFails(),14,21
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testPositionalParameterWithNativeQueryFailsWithGap(),15,22
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.testRepeatedNamedParameters(),21,34
"org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.assertSetParameterFails(Query,String,Object)",15,21
"org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.assertSetParameterFails(Query,int,Object)",14,20
org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.fail(Query),2,3
"org.apache.openjpa.persistence.jdbc.query.TestQueryParameterBinding.fail(Query,boolean)",10,16
org.apache.openjpa.persistence.jdbc.strategy.TestStrategyAnnotaion.setUp(),4,5
org.apache.openjpa.persistence.jdbc.strategy.TestStrategyAnnotaion.testStrategy(),29,55
org.apache.openjpa.xmlstore.simple.TestPersistence.testCreateEntityManager(),24,59
org.apache.openjpa.xmlstore.simple.TestPersistence.testQuery(),31,88
org.apache.openjpa.xmlstore.simple.TestPersistence.testNewDeleteNew(),26,63
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.VicePresident.getId(),0,0
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.VicePresident.setId(int),1,1
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.VicePresident.getName(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.VicePresident.setName(String),3,6
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.VicePresident.getCompany(),1,2
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.VicePresident.setCompany(Company),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.VicePresident.getDivision(),2,3
org.apache.openjpa.persistence.jdbc.maps.spec_10_1_27_ex7.VicePresident.setDivision(Division),3,6
org.apache.openjpa.persistence.proxy.delayed.lhset.UserIdentity.setMember(IMember),1,1
org.apache.openjpa.persistence.proxy.delayed.lhset.UserIdentity.getMember(),0,0
org.apache.openjpa.persistence.proxy.delayed.lhset.UserIdentity.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.lhset.UserIdentity.getId(),0,0
org.apache.openjpa.persistence.jpql.entities.XMLOrderedElementEntity.getId(),0,0
org.apache.openjpa.persistence.jpql.entities.XMLOrderedElementEntity.setId(int),1,1
org.apache.openjpa.persistence.jpql.entities.XMLOrderedElementEntity.getListElements(),3,5
org.apache.openjpa.persistence.jpql.entities.XMLOrderedElementEntity.setListElements(List<String>),4,8
org.apache.openjpa.persistence.jpql.entities.XMLOrderedElementEntity.addListElements(String),6,13
org.apache.openjpa.persistence.jpql.entities.XMLOrderedElementEntity.removeListElements(int),7,16
"org.apache.openjpa.persistence.jpql.entities.XMLOrderedElementEntity.insertListElements(int,String)",8,15
org.apache.openjpa.persistence.jpql.entities.XMLOrderedElementEntity.toString(),5,6
org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxyDetachLite.setUp(),8,11
org.apache.openjpa.persistence.proxy.delayed.tset.TestDelayedTreeSetProxyDetachLite.testPostDetach(),51,125
org.apache.openjpa.persistence.models.company.basic.PartTimeEmployee.setWage(float),2,5
org.apache.openjpa.persistence.models.company.basic.PartTimeEmployee.getWage(),1,2
org.apache.openjpa.persistence.models.company.basic.PartTimeEmployee.setWeeklyHours(int),3,9
org.apache.openjpa.persistence.models.company.basic.PartTimeEmployee.getWeeklyHours(),2,4
org.apache.openjpa.persistence.proxy.entities.IPerson.getDateOfBirth(),2,3
org.apache.openjpa.persistence.proxy.entities.IPerson.setDateOfBirth(Date),3,6
org.apache.openjpa.persistence.proxy.entities.IPerson.getFirstName(),2,2
org.apache.openjpa.persistence.proxy.entities.IPerson.setFirstName(String),3,4
org.apache.openjpa.persistence.proxy.entities.IPerson.getGovernmentId(),2,2
org.apache.openjpa.persistence.proxy.entities.IPerson.setGovernmentId(String),3,4
org.apache.openjpa.persistence.proxy.entities.IPerson.getLastName(),2,2
org.apache.openjpa.persistence.proxy.entities.IPerson.setLastName(String),3,4
org.apache.openjpa.persistence.proxy.entities.IPerson.getPicture(),1,1
org.apache.openjpa.persistence.proxy.entities.IPerson.setPicture(Byte[]),2,3
org.apache.openjpa.persistence.proxy.entities.IPerson.getTimeOfBirth(),3,3
org.apache.openjpa.persistence.proxy.entities.IPerson.setTimeOfBirth(Date),4,6
org.apache.openjpa.persistence.proxy.entities.IPerson.getContact(),1,2
org.apache.openjpa.persistence.proxy.entities.IPerson.setContact(IContact),2,4
org.apache.openjpa.persistence.test.SQLListenerTestCase.setUp(Object),13,32
org.apache.openjpa.persistence.test.SQLListenerTestCase.tearDown(),4,5
org.apache.openjpa.persistence.test.SQLListenerTestCase.assertSQL(String),17,33
org.apache.openjpa.persistence.test.SQLListenerTestCase.assertNotSQL(String),15,32
org.apache.openjpa.persistence.test.SQLListenerTestCase.assertContainsSQL(String),17,38
org.apache.openjpa.persistence.test.SQLListenerTestCase.assertAllSQLInOrder(String),14,24
org.apache.openjpa.persistence.test.SQLListenerTestCase.assertAllExactSQLInOrder(String),13,21
"org.apache.openjpa.persistence.test.SQLListenerTestCase.assertSQLInOrder(boolean,String)",15,56
org.apache.openjpa.persistence.test.SQLListenerTestCase.assertAllSQLAnyOrder(String),12,21
org.apache.openjpa.persistence.test.SQLListenerTestCase.assertNoneSQLAnyOrder(String),13,22
org.apache.openjpa.persistence.test.SQLListenerTestCase.assertAnySQLAnyOrder(String),20,39
org.apache.openjpa.persistence.test.SQLListenerTestCase.getSQLCount(),5,7
org.apache.openjpa.persistence.test.SQLListenerTestCase.resetSQL(),7,13
org.apache.openjpa.persistence.test.SQLListenerTestCase.toString(List<String>),5,17
org.apache.openjpa.persistence.test.SQLListenerTestCase.getLastSQL(List<String>),7,18
"org.apache.openjpa.persistence.test.SQLListenerTestCase.SQLAssertions.SQLAssertions(SQLAssertType,String)",5,11
org.apache.openjpa.persistence.test.SQLListenerTestCase.SQLAssertions.validate(),7,32
org.apache.openjpa.persistence.jdbc.query.domain.TimeKeeper.getDate(),1,3
org.apache.openjpa.persistence.jdbc.query.domain.TimeKeeper.setDate(Date),2,6
org.apache.openjpa.persistence.jdbc.query.domain.TimeKeeper.getTime(),1,3
org.apache.openjpa.persistence.jdbc.query.domain.TimeKeeper.setTime(Time),2,6
org.apache.openjpa.persistence.jdbc.query.domain.TimeKeeper.getTstamp(),2,3
org.apache.openjpa.persistence.jdbc.query.domain.TimeKeeper.setTstamp(Timestamp),3,6
org.apache.openjpa.persistence.jdbc.query.domain.TimeKeeper.getId(),0,0
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinExtent.TestSubclassJoinExtent(String),8,13
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinExtent.skipTest(),10,15
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinExtent.setUpTestCase(),24,110
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinExtent.testBaseNoSubs(),18,40
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinExtent.testBaseWithSubs(),24,56
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinExtent.testEmptyNoSubs(),17,30
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinExtent.testEmptyWithSubs(),17,30
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinExtent.testLeafNoSubs(),20,53
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinExtent.testLeafWithSubs(),20,53
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinExtent.testLeafNoSubs2(),20,45
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinExtent.testLeafWithSubs2(),20,45
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinExtent.testMidNoSubs(),20,48
org.apache.openjpa.persistence.jdbc.meta.vertical.TestSubclassJoinExtent.testMidWithSubs(),25,76
org.apache.openjpa.persistence.meta.TestClassMetaData.TestClassMetaData(String),5,7
org.apache.openjpa.persistence.meta.TestClassMetaData.setUp(),7,39
org.apache.openjpa.persistence.meta.TestClassMetaData.getRepository(),14,34
org.apache.openjpa.persistence.meta.TestClassMetaData.testClassDefaults(),14,29
org.apache.openjpa.persistence.meta.TestClassMetaData.testGetProxyFields(),9,30
org.apache.openjpa.persistence.meta.TestClassMetaData.testDefaultNonPersistentFields(),16,57
org.apache.openjpa.persistence.meta.TestClassMetaData.testBasicFields(),25,222
org.apache.openjpa.persistence.meta.TestClassMetaData.testCollectionFields(),21,319
org.apache.openjpa.persistence.meta.TestClassMetaData.testBasicClass(),9,19
org.apache.openjpa.persistence.meta.TestClassMetaData.testApplicationIdentity(),9,44
org.apache.openjpa.persistence.meta.TestClassMetaData.testAbsoluteFieldNumbering(),11,84
org.apache.openjpa.persistence.meta.TestClassMetaData.testGetFields(),10,25
org.apache.openjpa.persistence.meta.TestClassMetaData.testStaticInnerClasses(),8,14
org.apache.openjpa.persistence.meta.TestClassMetaData.testExternalTypes(),26,210
org.apache.openjpa.persistence.util.TestProviderUtil.setUp(),7,16
org.apache.openjpa.persistence.util.TestProviderUtil.testIsLoadedEager(),10,14
org.apache.openjpa.persistence.util.TestProviderUtil.testNotLoadedLazy(),11,14
org.apache.openjpa.persistence.util.TestProviderUtil.testIsLoadedLazy(),10,14
org.apache.openjpa.persistence.util.TestProviderUtil.testNotLoadedEager(),10,14
org.apache.openjpa.persistence.util.TestProviderUtil.verifyIsLoadedEagerState(LoadState),25,103
org.apache.openjpa.persistence.util.TestProviderUtil.verifyIsLoadedLazyState(LoadState),28,124
org.apache.openjpa.persistence.util.TestProviderUtil.testIsApplicationLoaded(),33,76
org.apache.openjpa.persistence.util.TestProviderUtil.testIsLoadedUnknown(),12,28
org.apache.openjpa.persistence.util.TestProviderUtil.createEagerEntity(boolean),14,61
org.apache.openjpa.persistence.util.TestProviderUtil.createEagerEmbedColl(),7,19
org.apache.openjpa.persistence.util.TestProviderUtil.createEagerEmbed(),11,28
org.apache.openjpa.persistence.util.TestProviderUtil.createEagerEmbedRel(boolean),14,55
org.apache.openjpa.persistence.util.TestProviderUtil.createLazyEntity(),9,33
org.apache.openjpa.persistence.util.TestProviderUtil.createLazyEmbed(),11,28
org.apache.openjpa.persistence.util.TestProviderUtil.createLazyEmbedColl(),7,19
"org.apache.openjpa.persistence.util.TestProviderUtil.assertEagerLoadState(ProviderUtil,Object,LoadState)",15,70
org.apache.openjpa.persistence.util.TestProviderUtil.getProviderUtil(),4,13
org.apache.openjpa.persistence.jdbc.order.Player.Player(),1,1
"org.apache.openjpa.persistence.jdbc.order.Player.Player(String,int)",4,7
org.apache.openjpa.persistence.jdbc.order.Player.setPlayerNumber(int),2,3
org.apache.openjpa.persistence.jdbc.order.Player.getPlayerNumber(),1,2
org.apache.openjpa.persistence.jdbc.order.Player.setTrainers(List<Trainer>),4,7
org.apache.openjpa.persistence.jdbc.order.Player.getTrainers(),3,4
org.apache.openjpa.persistence.jdbc.order.Player.equals(Object),4,14
org.apache.openjpa.persistence.jdbc.order.Player.setGamesPlayedIn(List<Game>),5,11
org.apache.openjpa.persistence.jdbc.order.Player.getGamesPlayedIn(),4,6
org.apache.openjpa.persistence.query.Dependent.getCurStatusId(),2,4
org.apache.openjpa.persistence.query.Dependent.setCurStatusId(int),3,9
org.apache.openjpa.persistence.query.Dependent.getId(),1,1
org.apache.openjpa.persistence.query.Dependent.setId(DependentId),2,2
org.apache.openjpa.persistence.query.Dependent.getEmp(),2,3
org.apache.openjpa.persistence.query.Dependent.setEmp(Employee),3,6
org.apache.openjpa.persistence.query.Dependent.getEndDate(),1,3
org.apache.openjpa.persistence.query.Dependent.setEndDate(Date),2,6
org.apache.openjpa.persistence.jdbc.query.cache.PartTimeEmployee.getHourlyWage(),2,4
org.apache.openjpa.persistence.jdbc.query.cache.PartTimeEmployee.setHourlyWage(double),3,9
org.apache.openjpa.persistence.xs.AccountingHierarchyRate.AccountingHierarchyRate(),3,3
"org.apache.openjpa.persistence.xs.AccountingHierarchyRate.AccountingHierarchyRate(String,AccountingHierarchy,BigDecimal,BigDecimal)",7,26
org.apache.openjpa.persistence.xs.AccountingHierarchyRate.getId(),1,1
org.apache.openjpa.persistence.xs.AccountingHierarchyRate.getAccountingHierarchy(),2,6
org.apache.openjpa.persistence.xs.AccountingHierarchyRate.getCurrentRate(),3,5
org.apache.openjpa.persistence.xs.AccountingHierarchyRate.getBudgetRate(),3,5
org.apache.openjpa.persistence.xs.AccountingHierarchyRate.setId(String),2,2
org.apache.openjpa.persistence.xs.AccountingHierarchyRate.setAccountingHierarchy(AccountingHierarchy),3,11
org.apache.openjpa.persistence.xs.AccountingHierarchyRate.setCurrentRate(BigDecimal),4,10
org.apache.openjpa.persistence.xs.AccountingHierarchyRate.setBudgetRate(BigDecimal),4,10
org.apache.openjpa.persistence.xs.AccountingHierarchyRate.hashCode(),6,19
org.apache.openjpa.persistence.xs.AccountingHierarchyRate.equals(Object),6,26
org.apache.openjpa.persistence.query.TestEJBQueryInterface.TestEJBQueryInterface(String),5,6
org.apache.openjpa.persistence.query.TestEJBQueryInterface.setUp(),16,36
org.apache.openjpa.persistence.query.TestEJBQueryInterface.testResultList(),12,20
org.apache.openjpa.persistence.query.TestEJBQueryInterface.testGetSingleList(),14,26
org.apache.openjpa.persistence.query.TestEJBQueryInterface.testExecuteUpdate(),12,27
org.apache.openjpa.persistence.query.TestEJBQueryInterface.testSetMaxResults(),15,22
org.apache.openjpa.persistence.query.TestEJBQueryInterface.testSetFirstResults(),16,30
org.apache.openjpa.persistence.query.TestEJBQueryInterface.testSetParameter1(),23,51
org.apache.openjpa.persistence.query.TestEJBQueryInterface.testOrderBy(),23,29
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.TestIncrementalFlushes(String),5,6
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.TestIncrementalFlushes(),5,8
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.setUp(),8,10
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testBasicJdoPreStore(),17,23
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testNoFlush(),15,19
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testFlushNoChange(),18,23
"org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.basicHelper(boolean,boolean,boolean,boolean)",34,95
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testFlushStorePrimaryDFGChange(),8,14
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testFlushStorePrimaryNonDFGChange(),8,14
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testFlushStorePrimaryNonDFGAndDFGChange(),8,15
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testFlushStorePrimaryNoChanges(),7,13
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testJdoPreStoreWithModificationBeforeFlush(),8,8
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testJdoPreStoreWithModificationAfterFlush(),8,8
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.tjpswmHelper(boolean),40,69
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testOneToOneBefore(),3,9
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testOneToOneAfter(),3,9
"org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.totoHelper(boolean,boolean,boolean)",38,96
"org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.assertState(Object,PCState,OpenJPAEntityManager)",5,6
"org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.commitAndTestDelete(OpenJPAEntityManager,Object)",14,19
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testDeleteNew(),12,16
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testOptimisticLockGivesCorrectError(),24,46
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.XXXtestFlushesAreIsolated(),38,117
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testEmptyFlush(),19,54
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testEmptyRollback(),15,26
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.testEmptyCommit(),14,24
org.apache.openjpa.persistence.kernel.TestIncrementalFlushes.TListener.eventOccurred(TransactionEvent),8,15
org.apache.openjpa.persistence.query.TestQueryPagination.setUp(),14,46
org.apache.openjpa.persistence.query.TestQueryPagination.testFirstThenMax(),3,3
org.apache.openjpa.persistence.query.TestQueryPagination.testMaxThenFirst(),3,3
org.apache.openjpa.persistence.query.TestQueryPagination.testNoResultsFirstFirst(),3,3
org.apache.openjpa.persistence.query.TestQueryPagination.testNoResultsFirstLast(),3,3
org.apache.openjpa.persistence.query.TestQueryPagination.testAllResultsFirstFirst(),3,3
org.apache.openjpa.persistence.query.TestQueryPagination.testAllResultsFirstLast(),3,3
"org.apache.openjpa.persistence.query.TestQueryPagination.helper(boolean,int,int,int)",21,53
org.apache.openjpa.persistence.query.TestQueryPagination.checkSQL(),16,34
org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.setUp(),2,3
org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.setUp(Object),11,27
"org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.findUserIdentity(EntityManager,int)",4,8
"org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.findDepartment(EntityManager,int)",3,5
org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.createUserIdentity(),3,9
"org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.createAccount(String,IUserIdentity)",7,12
org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.createDepartment(),2,5
org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.createMember(String),4,6
org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.createEmployee(),2,5
org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.createEmployees(),5,6
org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.createProducts(),5,6
org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.createAwards(),5,6
org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.createLocations(),5,6
org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.createCertifications(),5,6
org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.createAccounts(),5,6
"org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.getEmployee(Collection<IEmployee>,int)",5,10
"org.apache.openjpa.persistence.proxy.delayed.vec.TestDelayedVectorProxy.getProduct(Collection<Product>,int)",5,10
org.apache.openjpa.persistence.query.common.apps.QueryTest3.QueryTest3(),2,2
org.apache.openjpa.persistence.query.common.apps.QueryTest3.QueryTest3(int),2,2
org.apache.openjpa.persistence.query.common.apps.QueryTest3.setNum2(int),3,5
org.apache.openjpa.persistence.merge.model.Make.setId(long),1,1
org.apache.openjpa.persistence.merge.model.Make.getId(),0,0
org.apache.openjpa.persistence.merge.model.Make.setModels(List<Model>),4,7
org.apache.openjpa.persistence.merge.model.Make.getModels(),3,4
org.apache.openjpa.persistence.proxy.entities.Contact.getAddress(),1,4
org.apache.openjpa.persistence.proxy.entities.Contact.setAddress(IAddress),15,28
org.apache.openjpa.persistence.proxy.entities.Contact.getTheAddress(),1,3
org.apache.openjpa.persistence.proxy.entities.Contact.setTheAddress(Address),2,6
org.apache.openjpa.persistence.proxy.entities.Contact.getEmail(),2,3
org.apache.openjpa.persistence.proxy.entities.Contact.setEmail(String),3,6
org.apache.openjpa.persistence.proxy.entities.Contact.getPhone(),2,3
org.apache.openjpa.persistence.proxy.entities.Contact.setPhone(String),3,6
org.apache.openjpa.persistence.proxy.entities.Contact.getContactType(),2,6
org.apache.openjpa.persistence.proxy.entities.Contact.setContactType(ContactType),3,11
org.apache.openjpa.persistence.relations.ChainEntityC.setChainEntityB(ChainEntityB),3,9
org.apache.openjpa.persistence.relations.ChainEntityC.getName(),2,3
org.apache.openjpa.persistence.relations.ChainEntityC.setName(String),3,6
org.apache.openjpa.persistence.relations.ChainEntityC.getId(),0,0
org.apache.openjpa.persistence.relations.ChainEntityC.setId(long),1,1
org.apache.openjpa.persistence.proxy.entities.Identifiable.getId(),1,1
org.apache.openjpa.persistence.proxy.entities.Identifiable.setId(String),2,2
org.apache.openjpa.persistence.relations.Order.Order(),0,0
"org.apache.openjpa.persistence.relations.Order.Order(double,boolean,Customer)",5,9
org.apache.openjpa.persistence.relations.Order.getAmount(),1,2
org.apache.openjpa.persistence.relations.Order.setAmount(double),2,5
org.apache.openjpa.persistence.relations.Order.getCustomer(),1,3
org.apache.openjpa.persistence.relations.Order.setCustomer(Customer),2,6
org.apache.openjpa.persistence.relations.Order.isDelivered(),1,2
org.apache.openjpa.persistence.relations.Order.setDelivered(boolean),2,5
org.apache.openjpa.persistence.relations.Order.getOid(),1,2
org.apache.openjpa.persistence.relations.Order.toString(),6,11
org.apache.openjpa.persistence.jdbc.version.TestVersionColumn.setUp(),3,6
org.apache.openjpa.persistence.jdbc.version.TestVersionColumn.testNullIntegerVersion(),30,69
org.apache.openjpa.persistence.jdbc.version.TestVersionColumn.testNullTimestampVersion(),30,77
org.apache.openjpa.persistence.jdbc.version.TestVersionColumn.testNullShortVersion(),29,68
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.AttachVersionA(),2,2
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.AttachVersionA(int),2,2
"org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.AttachVersionA(int,String)",4,5
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.setPk(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.getPk(),0,0
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.setVersion(int),2,3
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.getVersion(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.getVersionObject(),3,5
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.setStringField(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.setFetchA(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.getFetchA(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.setFetchB(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.getFetchB(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.setPC(AttachVersionA),3,3
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.getPC(),2,2
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.setMany(Set),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.getMany(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.setEmbedded(AttachVersionC),4,7
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA.getEmbedded(),3,4
org.apache.openjpa.persistence.models.company.IAddress.setStreetAddress(String),4,6
org.apache.openjpa.persistence.models.company.IAddress.getStreetAddress(),3,3
org.apache.openjpa.persistence.models.company.IAddress.setCity(String),3,4
org.apache.openjpa.persistence.models.company.IAddress.getCity(),2,2
org.apache.openjpa.persistence.models.company.IAddress.setState(String),2,2
org.apache.openjpa.persistence.models.company.IAddress.getState(),1,1
org.apache.openjpa.persistence.models.company.IAddress.setPostalCode(String),4,6
org.apache.openjpa.persistence.models.company.IAddress.getPostalCode(),3,3
org.apache.openjpa.persistence.models.company.IAddress.setPhoneNumber(String),3,4
org.apache.openjpa.persistence.models.company.IAddress.getPhoneNumber(),2,2
org.apache.openjpa.persistence.relations.TestMultipleSameTypedEmbeddedWithEagerRelations.setUp(),18,72
org.apache.openjpa.persistence.relations.TestMultipleSameTypedEmbeddedWithEagerRelations.testQuery(),19,54
org.apache.openjpa.persistence.relations.TestMultipleSameTypedEmbeddedWithEagerRelations.main(String[]),11,12
org.apache.openjpa.persistence.query.SimpleEntity2.SimpleEntity2(),2,2
"org.apache.openjpa.persistence.query.SimpleEntity2.SimpleEntity2(String,String)",5,10
org.apache.openjpa.persistence.query.SimpleEntity2.getId(),0,0
org.apache.openjpa.persistence.query.SimpleEntity2.setId(long),1,1
org.apache.openjpa.persistence.query.SimpleEntity2.getName(),2,3
org.apache.openjpa.persistence.query.SimpleEntity2.setName(String),3,6
org.apache.openjpa.persistence.query.SimpleEntity2.getValue(),2,3
org.apache.openjpa.persistence.query.SimpleEntity2.setValue(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.DetachSMPC.setIntField(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.DetachSMPC.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.DetachSMPC.getRelSet(),2,5
org.apache.openjpa.persistence.kernel.common.apps.DetachSMPC.setStringIntMap(Map),3,10
org.apache.openjpa.persistence.kernel.common.apps.DetachSMPC.getStringIntMap(),2,5
org.apache.openjpa.persistence.property.TestCompatible.setUp(),11,12
org.apache.openjpa.persistence.property.TestCompatible.testPrivateEmbbeddable(),28,166
org.apache.openjpa.persistence.kernel.TestEJBNullValues.TestEJBNullValues(String),6,7
org.apache.openjpa.persistence.kernel.TestEJBNullValues.setUp(),3,4
org.apache.openjpa.persistence.kernel.TestEJBNullValues.testException(),13,19
org.apache.openjpa.persistence.meta.common.apps.MetaTest5.MetaTest5Id.MetaTest5Id(),2,2
org.apache.openjpa.persistence.meta.common.apps.MetaTest5.MetaTest5Id.MetaTest5Id(String),5,6
org.apache.openjpa.persistence.meta.common.apps.MetaTest5.MetaTest5Id.toString(),2,4
org.apache.openjpa.persistence.meta.common.apps.MetaTest5.MetaTest5Id.equals(Object),4,6
org.apache.openjpa.persistence.meta.common.apps.MetaTest5.MetaTest5Id.hashCode(),5,5
org.apache.openjpa.persistence.query.TestLocate.setUp(),14,21
org.apache.openjpa.persistence.query.TestLocate.testLocate(),13,54
org.apache.openjpa.persistence.query.TestLocate.testLocateInMemory(),19,51
org.apache.openjpa.persistence.query.common.apps.ComplexC.ComplexC(),1,1
"org.apache.openjpa.persistence.query.common.apps.ComplexC.ComplexC(String,int,Date,ComplexD[],ComplexB)",6,14
org.apache.openjpa.persistence.query.common.apps.ComplexC.setStringC(String),2,6
org.apache.openjpa.persistence.query.common.apps.ComplexC.getStringC(),1,3
org.apache.openjpa.persistence.query.common.apps.ComplexC.setIntC(int),1,1
org.apache.openjpa.persistence.query.common.apps.ComplexC.getIntC(),0,0
org.apache.openjpa.persistence.query.common.apps.ComplexC.setDateC(Date),2,6
org.apache.openjpa.persistence.query.common.apps.ComplexC.getDateC(),1,3
org.apache.openjpa.persistence.query.common.apps.ComplexC.setDs(Set),1,2
org.apache.openjpa.persistence.query.common.apps.ComplexC.getDs(),1,1
org.apache.openjpa.persistence.query.common.apps.ComplexC.setB(ComplexB),2,2
org.apache.openjpa.persistence.query.common.apps.ComplexC.getB(),1,1
org.apache.openjpa.persistence.query.TestQueryResultClassAPI.setUp(),21,39
org.apache.openjpa.persistence.query.TestQueryResultClassAPI.testQueryWithResultClass(),20,83
org.apache.openjpa.persistence.query.TestQueryResultClassAPI.getPreparedQueryCache(),7,12
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwner.getId(),0,0
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwner.setId(long),1,1
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwner.getName(),2,3
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwner.setName(String),3,6
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwner.getOwned(),2,4
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwner.setOwned(BidirectionalOne2OneOwned),3,7
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwner.getVersion(),1,2
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwner.toString(),3,5
org.apache.openjpa.persistence.proxy.entities.FixedAnnuity.getRate(),1,2
org.apache.openjpa.persistence.proxy.entities.FixedAnnuity.setRate(Double),4,13
org.apache.openjpa.persistence.relations.GrandChild.getId(),0,0
org.apache.openjpa.persistence.relations.GrandChild.setId(int),1,1
org.apache.openjpa.persistence.relations.GrandChild.getChild(),1,3
org.apache.openjpa.persistence.relations.GrandChild.setChild(Child),2,6
org.apache.openjpa.persistence.proxy.entities.Payor.getName(),2,3
org.apache.openjpa.persistence.proxy.entities.Payor.setName(String),3,6
org.apache.openjpa.persistence.relations.TestHandlerToHandlerMaps.setUp(),5,7
org.apache.openjpa.persistence.relations.TestHandlerToHandlerMaps.testHandlerToHandlerMaps(),24,51
org.apache.openjpa.persistence.kernel.TestCheckConsistency.TestCheckConsistency(String),7,11
org.apache.openjpa.persistence.kernel.TestCheckConsistency.setUp(),7,15
org.apache.openjpa.persistence.kernel.TestCheckConsistency.testConsistentDatastoreTransaction(),21,52
org.apache.openjpa.persistence.kernel.TestCheckConsistency.testConsistentDatastoreTransactionWithRollback(),29,67
org.apache.openjpa.persistence.kernel.TestCheckConsistency.testConsistentOptimisticTransaction(),23,62
org.apache.openjpa.persistence.kernel.TestCheckConsistency.hasConnection(OpenJPAEntityManager),7,9
org.apache.openjpa.persistence.kernel.TestCheckConsistency.testConsistentOptimisticTransactionWithRollback(),30,71
org.apache.openjpa.persistence.jpql.version.Document.getId(),0,0
org.apache.openjpa.persistence.jpql.version.Document.setId(int),1,1
org.apache.openjpa.persistence.jpql.version.Document.getAuthor(),1,3
org.apache.openjpa.persistence.jpql.version.Document.setAuthor(Author),2,6
org.apache.openjpa.persistence.relations.TestRelationToHandlerMaps.setUp(),8,9
org.apache.openjpa.persistence.relations.TestRelationToHandlerMaps.testRelationToHandlerMaps(),28,52
org.apache.openjpa.persistence.jdbc.xml.TestNonstandardMappingXML.setUp(),1,2
org.apache.openjpa.persistence.jdbc.xml.TestNonstandardMappingXML.getPersistenceUnitName(),7,7
org.apache.openjpa.persistence.models.library.Subject.Subject(),2,2
org.apache.openjpa.persistence.models.library.Subject.Subject(String),13,21
org.apache.openjpa.persistence.models.library.Subject.getName(),2,3
org.apache.openjpa.persistence.models.library.Subject.getBooks(),4,7
org.apache.openjpa.persistence.models.library.Subject.addBook(Book),3,8
org.apache.openjpa.persistence.models.library.Subject.removeBook(Book),3,8
org.apache.openjpa.persistence.models.library.Subject.toString(),4,5
org.apache.openjpa.persistence.models.library.Subject.hashCode(),3,3
org.apache.openjpa.persistence.models.library.Subject.equals(Object),16,24
org.apache.openjpa.persistence.models.company.IFullTimeEmployee.setSalary(float),2,3
org.apache.openjpa.persistence.models.company.IFullTimeEmployee.getSalary(),1,1
org.apache.openjpa.persistence.models.company.idclass.Product.setName(String),3,6
org.apache.openjpa.persistence.models.company.idclass.Product.getName(),2,3
org.apache.openjpa.persistence.models.company.idclass.Product.setImage(byte[]),2,5
org.apache.openjpa.persistence.models.company.idclass.Product.getImage(),1,2
org.apache.openjpa.persistence.models.company.idclass.Product.setPrice(float),2,5
org.apache.openjpa.persistence.models.company.idclass.Product.getPrice(),1,2
org.apache.openjpa.persistence.models.company.idclass.Product.setDistributors(Set<>),3,9
org.apache.openjpa.persistence.models.company.idclass.Product.getDistributors(),3,4
org.apache.openjpa.persistence.kernel.TestMultipleInsertDeleteSameId.setUp(),4,5
org.apache.openjpa.persistence.kernel.TestMultipleInsertDeleteSameId.testMultipleInsertDelete(),21,52
org.apache.openjpa.persistence.kernel.TestSecurityContext.TestSecurityContext(),5,8
org.apache.openjpa.persistence.kernel.TestSecurityContext.TestSecurityContext(String),5,6
org.apache.openjpa.persistence.kernel.TestSecurityContext.setUp(),9,21
org.apache.openjpa.persistence.kernel.TestSecurityContext.tearDown(),6,9
org.apache.openjpa.persistence.kernel.TestSecurityContext.testInSecureClassLoader(),11,12
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.debug(String),4,6
"org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkAccept(String,int)",6,14
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkAccess(Thread),4,8
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkAccess(ThreadGroup),4,8
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkAwtEventQueueAccess(),6,16
"org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkConnect(String,int)",6,14
"org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkConnect(String,int,Object)",8,18
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkCreateClassLoader(),4,10
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkDelete(String),5,11
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkExec(String),5,11
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkExit(int),4,10
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkLink(String),5,11
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkListen(int),4,10
"org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkMemberAccess(Class,int)",4,10
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkMulticast(InetAddress),6,12
"org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkMulticast(InetAddress,byte)",7,15
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkPackageAccess(String),5,11
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkPackageDefinition(String),5,11
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkPermission(Permission),4,11
"org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkPermission(Permission,Object)",6,15
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkPrintJobAccess(),5,13
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkPropertiesAccess(),4,10
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkPropertyAccess(String),6,14
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkRead(FileDescriptor),5,9
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkRead(String),5,11
"org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkRead(String,Object)",7,15
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkSecurityAccess(String),6,14
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkSetFactory(),4,10
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkSystemClipboardAccess(),5,13
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkTopLevelWindow(Object),6,17
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkWrite(FileDescriptor),5,9
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.checkWrite(String),5,11
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.classDepth(String),4,8
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.classLoaderDepth(),3,7
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.currentClassLoader(),3,8
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.currentLoadedClass(),3,7
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.getClassContext(),2,4
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.getInCheck(),2,4
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.getSecurityContext(),4,8
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.getThreadGroup(),2,5
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.inClass(String),3,5
org.apache.openjpa.persistence.kernel.TestSecurityContext.StrictSecurityManager.inClassLoader(),2,4
org.apache.openjpa.persistence.proxy.delayed.lhset.Department.setEmployees(Collection<IEmployee>),6,11
org.apache.openjpa.persistence.proxy.delayed.lhset.Department.getEmployees(),3,4
org.apache.openjpa.persistence.proxy.delayed.lhset.Department.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.lhset.Department.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.lhset.Department.setLocations(Collection<Location>),6,11
org.apache.openjpa.persistence.proxy.delayed.lhset.Department.getLocations(),3,4
org.apache.openjpa.persistence.proxy.delayed.lhset.Department.setProducts(Collection<Product>),6,11
org.apache.openjpa.persistence.proxy.delayed.lhset.Department.getProducts(),3,4
org.apache.openjpa.persistence.proxy.delayed.lhset.Department.setCertifications(Collection<Certification>),6,11
org.apache.openjpa.persistence.proxy.delayed.lhset.Department.getCertifications(),3,4
org.apache.openjpa.persistence.proxy.delayed.lhset.Department.setAwards(Collection<Award>),6,11
org.apache.openjpa.persistence.proxy.delayed.lhset.Department.getAwards(),3,4
org.apache.openjpa.persistence.results.cls.TestResultClsXml.setUp(),8,9
org.apache.openjpa.persistence.results.cls.TestResultClsXml.testIt(),24,45
org.apache.openjpa.persistence.results.cls.TestResultClsXml.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.results.cls.TestResultClsXml.populate(),15,23
org.apache.openjpa.persistence.results.cls.TestResultClsXml.getQuery(EntityManager),16,65
org.apache.openjpa.persistence.strategy.value.ValueStrategyEntity.getId(),1,1
org.apache.openjpa.persistence.strategy.value.ValueStrategyEntity.setId(String),2,2
org.apache.openjpa.persistence.strategy.value.ValueStrategyEntity.getName(),2,3
org.apache.openjpa.persistence.strategy.value.ValueStrategyEntity.setName(String),3,6
org.apache.openjpa.persistence.query.TestSubquery.setUp(),11,15
org.apache.openjpa.persistence.query.TestSubquery.testSubquery2(),20,25
org.apache.openjpa.persistence.query.TestSubquery.testSubquery(),55,107
org.apache.openjpa.persistence.query.TestSubquery.testSubSelectMaxDateRange(),37,71
org.apache.openjpa.persistence.query.TestSubquery.testUpdateWithCorrelatedSubquery(),23,41
org.apache.openjpa.persistence.util.MapValEntity.setId(int),1,1
org.apache.openjpa.persistence.util.MapValEntity.getId(),0,0
org.apache.openjpa.persistence.util.MapValEntity.setIntVal(int),2,5
org.apache.openjpa.persistence.util.MapValEntity.getIntVal(),1,2
org.apache.openjpa.persistence.util.MapValEntity.setMapEntity(MapEntity),3,11
org.apache.openjpa.persistence.util.MapValEntity.getMapEntity(),2,6
org.apache.openjpa.persistence.spring.LibService.findBorrowerByName(String),3,5
org.apache.openjpa.persistence.spring.LibService.findBookByTitle(String),3,5
"org.apache.openjpa.persistence.spring.LibService.borrowBook(Borrower,Book)",3,6
org.apache.openjpa.persistence.spring.LibService.returnBook(Book),1,3
org.apache.openjpa.persistence.spring.LibService.setTransactionalEntityManagerFactory(TransactionalEntityManagerFactory),6,10
org.apache.openjpa.persistence.simple.SubclassPerson.getId(),0,0
org.apache.openjpa.persistence.simple.SubclassPerson.setId(int),1,1
org.apache.openjpa.persistence.simple.SubclassPerson.getForename(),2,3
org.apache.openjpa.persistence.simple.SubclassPerson.setForename(String),3,6
org.apache.openjpa.persistence.simple.SubclassPerson.getSurname(),2,3
org.apache.openjpa.persistence.simple.SubclassPerson.setSurname(String),3,6
org.apache.openjpa.persistence.query.common.apps.Entity1.Entity1(),1,1
"org.apache.openjpa.persistence.query.common.apps.Entity1.Entity1(long,String,int)",3,11
org.apache.openjpa.persistence.query.common.apps.Entity1.getPk(),0,0
org.apache.openjpa.persistence.query.common.apps.Entity1.setStringField(String),4,8
org.apache.openjpa.persistence.query.common.apps.Entity1.getStringField(),2,5
org.apache.openjpa.persistence.query.common.apps.Entity1.setIntField(int),3,5
org.apache.openjpa.persistence.query.common.apps.Entity1.getIntField(),1,2
org.apache.openjpa.persistence.query.common.apps.Entity1.setEntity2Field(Entity2),4,8
org.apache.openjpa.persistence.query.common.apps.Entity1.getEntity2Field(),2,5
org.apache.openjpa.persistence.query.common.apps.Entity1.toString(),2,8
org.apache.openjpa.persistence.xs.TestMergeComplexKey.setUp(),3,4
org.apache.openjpa.persistence.xs.TestMergeComplexKey.test(),25,54
org.apache.openjpa.persistence.xs.TestMergeComplexKey.createDate(),31,81
org.apache.openjpa.persistence.query.common.apps.RuntimeTest5.RuntimeTest5(String),5,6
org.apache.openjpa.persistence.query.common.apps.RuntimeTest5.setName(String),4,6
org.apache.openjpa.persistence.query.common.apps.RuntimeTest5.getName(),2,3
org.apache.openjpa.persistence.query.common.apps.RuntimeTest5.setRuntimeTest4(RuntimeTest4),4,9
org.apache.openjpa.persistence.query.common.apps.RuntimeTest5.getRuntimeTest4(),2,6
org.apache.openjpa.persistence.kernel.TestSavepointEmbeddedPreFlush.TestSavepointEmbeddedPreFlush(String),9,15
org.apache.openjpa.persistence.kernel.TestSavepointEmbeddedPreFlush.getSavepointPlugin(),6,6
org.apache.openjpa.persistence.kernel.TestSavepointEmbeddedPreFlush.expectNewEmbeddedFailure(),3,3
org.apache.openjpa.persistence.kernel.TestStoreBlob.TestStoreBlob(),5,8
org.apache.openjpa.persistence.kernel.TestStoreBlob.TestStoreBlob(String),5,6
org.apache.openjpa.persistence.kernel.TestStoreBlob.setUp(),4,5
org.apache.openjpa.persistence.kernel.TestStoreBlob.testStoreBlob(),18,49
"org.apache.openjpa.persistence.kernel.TestStoreBlob.assertBytesEquals(String,byte[],byte[])",5,7
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.SCOTest(),2,2
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setBigDecimalBigIntegerMap(Map),4,14
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getBigDecimalBigIntegerMap(),3,7
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setStrIntMap(Map),3,10
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getStrIntMap(),2,5
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setIntLongMap(Map),2,6
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getIntLongMap(),1,3
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setLongFloatMap(Map),2,6
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getLongFloatMap(),1,3
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setFloatByteMap(Map),2,6
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getFloatByteMap(),1,3
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setByteDoubleMap(Map),2,6
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getByteDoubleMap(),1,3
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setDoubleCharMap(Map),2,6
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getDoubleCharMap(),1,3
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setCharBooleanMap(Map),2,6
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getCharBooleanMap(),1,3
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setDateStrMap(Map),4,14
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getDateStrMap(),3,7
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setCString(Collection),3,6
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getCString(),2,3
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setCInteger(Collection),3,6
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getCInteger(),2,3
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setCLong(Collection),2,2
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getCLong(),1,1
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setCCharacter(Collection),3,6
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getCCharacter(),2,3
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setCFloat(Collection),2,2
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getCFloat(),1,1
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setCByte(Collection),2,2
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getCByte(),1,1
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setCDouble(Collection),2,2
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getCDouble(),1,1
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setCBoolean(Collection),2,2
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getCBoolean(),1,1
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setCShort(Collection),2,2
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getCShort(),1,1
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setCDate(Collection),3,6
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getCDate(),2,3
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setCBigInteger(Collection),3,6
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getCBigInteger(),2,3
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.setCBigDecimal(Collection),3,6
org.apache.openjpa.persistence.kernel.common.apps.SCOTest.getCBigDecimal(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubC.setPk1c(long),1,1
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubC.getPk1c(),0,0
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubC.setPk2c(String),2,2
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubC.getPk2c(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubC.setStringFieldC(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubC.getStringFieldC(),2,5
org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.setUp(),2,3
org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.setUp(Object),11,27
"org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.findUserIdentity(EntityManager,int)",4,8
"org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.findDepartment(EntityManager,int)",3,5
org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.createUserIdentity(),3,9
"org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.createAccount(String,IUserIdentity)",7,12
org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.createDepartment(),2,5
org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.createMember(String),4,6
org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.createEmployee(),2,5
org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.createEmployees(),6,7
org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.createProducts(),6,7
org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.createAwards(),6,7
org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.createLocations(),6,7
org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.createCertifications(),6,7
org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.createAccounts(),6,7
"org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.getEmployee(Collection<IEmployee>,int)",5,11
"org.apache.openjpa.persistence.proxy.delayed.hset.TestDelayedHashSetProxy.getProduct(Collection<Product>,int)",5,11
org.apache.openjpa.persistence.proxy.delayed.llist.UserIdentity.setMember(IMember),1,1
org.apache.openjpa.persistence.proxy.delayed.llist.UserIdentity.getMember(),0,0
org.apache.openjpa.persistence.proxy.delayed.llist.UserIdentity.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.llist.UserIdentity.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.tset.Account.Account(),1,1
"org.apache.openjpa.persistence.proxy.delayed.tset.Account.Account(String,IUserIdentity)",8,13
org.apache.openjpa.persistence.proxy.delayed.tset.Account.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.tset.Account.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.tset.Account.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.tset.Account.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.tset.Account.setUserIdent(IUserIdentity),4,13
org.apache.openjpa.persistence.proxy.delayed.tset.Account.getUserIdent(),3,6
org.apache.openjpa.persistence.proxy.delayed.tset.Account.compareTo(Account),3,4
org.apache.openjpa.persistence.relations.Customer.CustomerKey.CustomerKey(),2,2
"org.apache.openjpa.persistence.relations.Customer.CustomerKey.CustomerKey(String,int)",5,5
org.apache.openjpa.persistence.relations.Customer.CustomerKey.toString(),3,4
org.apache.openjpa.persistence.relations.Customer.CustomerKey.equals(Object),7,20
org.apache.openjpa.persistence.relations.Customer.CustomerKey.hashCode(),3,6
org.apache.openjpa.persistence.relations.Customer.Customer(),1,1
"org.apache.openjpa.persistence.relations.Customer.Customer(CustomerKey,String,CreditRating)",7,16
org.apache.openjpa.persistence.relations.Customer.getName(),2,3
org.apache.openjpa.persistence.relations.Customer.setName(String),3,6
org.apache.openjpa.persistence.relations.Customer.getRating(),2,5
org.apache.openjpa.persistence.relations.Customer.setRating(CreditRating),3,8
org.apache.openjpa.persistence.relations.Customer.getOrders(),1,1
org.apache.openjpa.persistence.relations.Customer.setOrders(Collection<Order>),2,2
org.apache.openjpa.persistence.relations.Customer.toString(),4,6
org.apache.openjpa.persistence.relations.Customer.getCid(),3,4
org.apache.openjpa.persistence.relations.Customer.setCid(CustomerKey),4,7
org.apache.openjpa.persistence.proxy.delayed.vec.Department.setEmployees(Collection<IEmployee>),5,9
org.apache.openjpa.persistence.proxy.delayed.vec.Department.getEmployees(),3,4
org.apache.openjpa.persistence.proxy.delayed.vec.Department.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.vec.Department.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.vec.Department.setLocations(Collection<Location>),5,9
org.apache.openjpa.persistence.proxy.delayed.vec.Department.getLocations(),3,4
org.apache.openjpa.persistence.proxy.delayed.vec.Department.setProducts(Collection<Product>),5,9
org.apache.openjpa.persistence.proxy.delayed.vec.Department.getProducts(),3,4
org.apache.openjpa.persistence.proxy.delayed.vec.Department.setCertifications(Collection<Certification>),5,9
org.apache.openjpa.persistence.proxy.delayed.vec.Department.getCertifications(),3,4
org.apache.openjpa.persistence.proxy.delayed.vec.Department.setAwards(Collection<Award>),5,9
org.apache.openjpa.persistence.proxy.delayed.vec.Department.getAwards(),3,4
org.apache.openjpa.persistence.lock.extended.LSE1xmLf.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSE1xmLf.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSE1xmLf.getFirstName(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1xmLf.setFirstName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSE1xmLf.getUniRight(),3,4
org.apache.openjpa.persistence.lock.extended.LSE1xmLf.setUnitRight(Collection<LSE1xmRt>),5,7
org.apache.openjpa.persistence.lock.extended.LSE1xmLf.addUnitRight(LSE1xmRt),4,7
org.apache.openjpa.persistence.lock.extended.LSE1xmLf.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSE1xmLf.toString(),12,16
org.apache.openjpa.persistence.lock.extended.LSE1xmLf.readExternal(ObjectInput),12,18
org.apache.openjpa.persistence.lock.extended.LSE1xmLf.writeExternal(ObjectOutput),9,14
org.apache.openjpa.persistence.relations.InheritanceHierarchyAbstract.getId(),0,0
org.apache.openjpa.persistence.relations.InheritanceHierarchyAbstract.getChildren(),4,5
org.apache.openjpa.persistence.relations.InheritanceHierarchyAbstract.setChildren(Set<InheritanceHierarchyAbstract>),4,8
org.apache.openjpa.persistence.relations.InheritanceHierarchyAbstract.getParent(),3,4
org.apache.openjpa.persistence.relations.InheritanceHierarchyAbstract.setParent(InheritanceHierarchyAbstract),4,7
org.apache.openjpa.persistence.lock.extended.LSEJoinAbs.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSEJoinAbs.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSEJoinAbs.getFirstName(),2,3
org.apache.openjpa.persistence.lock.extended.LSEJoinAbs.setFirstName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSEJoinAbs.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSEJoinAbs.toString(),10,13
org.apache.openjpa.persistence.lock.extended.LSEJoinAbs.readExternal(ObjectInput),9,14
org.apache.openjpa.persistence.lock.extended.LSEJoinAbs.writeExternal(ObjectOutput),7,11
org.apache.openjpa.persistence.managedinterface.ManagedIface.getIntField(),1,1
org.apache.openjpa.persistence.managedinterface.ManagedIface.setIntField(int),2,2
org.apache.openjpa.persistence.managedinterface.ManagedIface.getEmbed(),2,3
org.apache.openjpa.persistence.managedinterface.ManagedIface.setEmbed(ManagedInterfaceEmbed),3,5
org.apache.openjpa.persistence.managedinterface.ManagedIface.getSelf(),3,3
org.apache.openjpa.persistence.managedinterface.ManagedIface.setSelf(ManagedIface),4,5
org.apache.openjpa.persistence.managedinterface.ManagedIface.getSetInteger(),2,4
org.apache.openjpa.persistence.managedinterface.ManagedIface.setSetInteger(Set<Integer>),3,6
org.apache.openjpa.persistence.managedinterface.ManagedIface.getSetPC(),3,4
org.apache.openjpa.persistence.managedinterface.ManagedIface.setSetPC(Set<SimpleEntity>),4,6
org.apache.openjpa.persistence.managedinterface.ManagedIface.getSetI(),3,4
org.apache.openjpa.persistence.managedinterface.ManagedIface.setSetI(Set<ManagedIface>),4,6
org.apache.openjpa.persistence.managedinterface.ManagedIface.getPC(),2,2
org.apache.openjpa.persistence.managedinterface.ManagedIface.setPC(SimpleEntity),3,3
org.apache.openjpa.persistence.managedinterface.ManagedIface.unimplemented(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AttachC.setCstr(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.AttachC.getCstr(),2,3
org.apache.openjpa.persistence.kernel.common.apps.AttachC.setCint(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachC.getCint(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachC.setCdbl(double),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachC.getCdbl(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachC.setEs(List),2,2
org.apache.openjpa.persistence.kernel.common.apps.AttachC.getEs(),1,1
org.apache.openjpa.persistence.query.Employee.getStatusId(),1,2
org.apache.openjpa.persistence.query.Employee.setStatusId(int),2,5
org.apache.openjpa.persistence.query.Employee.getEmpId(),1,2
org.apache.openjpa.persistence.query.Employee.setEmpId(long),2,5
org.apache.openjpa.persistence.query.Employee.getName(),2,3
org.apache.openjpa.persistence.query.Employee.setName(String),3,6
org.apache.openjpa.persistence.query.Employee.getSomeLong(),0,0
org.apache.openjpa.persistence.query.Employee.setSomeLong(long),1,1
org.apache.openjpa.persistence.query.Employee.getHireDate(),2,5
org.apache.openjpa.persistence.query.Employee.setHireDate(Date),3,10
org.apache.openjpa.persistence.query.Employee.getHireTime(),3,5
org.apache.openjpa.persistence.query.Employee.setHireTime(Date),4,10
org.apache.openjpa.persistence.query.Employee.getHireTimestamp(),3,5
org.apache.openjpa.persistence.query.Employee.setHireTimestamp(Date),4,10
org.apache.openjpa.persistence.kernel.common.apps.Blobs.Blobs(),1,1
org.apache.openjpa.persistence.kernel.common.apps.Blobs.Blobs(int),2,3
org.apache.openjpa.persistence.kernel.common.apps.Blobs.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.Blobs.setId(int),1,1
org.apache.openjpa.persistence.kernel.common.apps.Blobs.getLobNullable(),2,4
org.apache.openjpa.persistence.kernel.common.apps.Blobs.setLobNullable(byte[]),3,7
org.apache.openjpa.persistence.kernel.common.apps.Blobs.getLobNotNullable(),2,4
org.apache.openjpa.persistence.kernel.common.apps.Blobs.setLobNotNullable(byte[]),3,7
org.apache.openjpa.persistence.kernel.common.apps.Entity2.Entity2(),1,1
"org.apache.openjpa.persistence.kernel.common.apps.Entity2.Entity2(long,String,int)",3,11
org.apache.openjpa.persistence.kernel.common.apps.Entity2.getPk(),0,0
org.apache.openjpa.persistence.kernel.common.apps.Entity2.setStringField(String),4,8
org.apache.openjpa.persistence.kernel.common.apps.Entity2.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.Entity2.setIntField(int),3,5
org.apache.openjpa.persistence.kernel.common.apps.Entity2.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.Entity2.toString(),2,8
org.apache.openjpa.persistence.query.TestQueryExcludingSubclasses.setUp(),15,68
org.apache.openjpa.persistence.query.TestQueryExcludingSubclasses.testQuery(),17,41
org.apache.openjpa.persistence.query.TestQueryExcludingSubclasses.testQueryExcludingSubclasses(),19,41
org.apache.openjpa.persistence.query.TestQueryExcludingSubclasses.main(String[]),9,10
org.apache.openjpa.persistence.query.TestQueryResults.TestQueryResults(String),4,6
org.apache.openjpa.persistence.query.TestQueryResults.setUp(),12,50
org.apache.openjpa.persistence.query.TestQueryResults.testQueryIteratorsReturnFalseForClosedQuery(),18,36
org.apache.openjpa.persistence.query.TestQueryResults.testQueryIteratorsThrowExceptionForClosedQuery(),20,39
org.apache.openjpa.persistence.query.TestQueryResults.testLazyQueryIteratorsReturnFalseForClosedem(),25,45
org.apache.openjpa.persistence.query.TestQueryResults.testEagerQueryIteratorsWorkForClosedem(),25,45
org.apache.openjpa.persistence.query.TestQueryResults.testQueryResultIsList(),16,31
org.apache.openjpa.persistence.query.TestQueryResults.testQueryResultSizeIsCorrect(),19,46
org.apache.openjpa.persistence.query.TestQueryResults.testExtentIteratorsReturnFalseForClosedExtent(),15,34
org.apache.openjpa.persistence.query.TestQueryResults.testExtentIteratorsThrowExceptionForClosedExtent(),17,37
org.apache.openjpa.persistence.query.TestQueryResults.testExtentIteratorsReturnFalseForClosedem(),15,30
org.apache.openjpa.persistence.query.TestQueryResults.testUniqueReturnsSingleResult(),27,64
org.apache.openjpa.persistence.query.TestQueryResults.testUniqueThrowsExceptionIfMultipleResults(),23,38
org.apache.openjpa.persistence.query.TestQueryResults.testImpossibleRangeReturnsEmptyList(),24,41
org.apache.openjpa.persistence.query.TestQueryResults.testImpossibleUniqueRangeReturnsNull(),26,42
org.apache.openjpa.persistence.query.TestQueryResults.testSingleResultUniqueRange(),24,39
org.apache.openjpa.persistence.query.TestQueryResults.testMultiResultUniqueRange(),24,42
org.apache.openjpa.persistence.query.TestQueryResults.testFullRange(),49,129
org.apache.openjpa.persistence.query.TestQueryResults.testFullRangeSubs(),27,53
org.apache.openjpa.persistence.query.TestQueryResults.testBeginRange(),32,71
org.apache.openjpa.persistence.query.TestQueryResults.testBeginRangeSubs(),32,71
org.apache.openjpa.persistence.query.TestQueryResults.testEndRange(),30,69
org.apache.openjpa.persistence.query.TestQueryResults.testEndRangeSubs(),30,68
org.apache.openjpa.persistence.query.TestQueryResults.testMidRange(),28,67
org.apache.openjpa.persistence.query.TestQueryResults.testMidRangeSubs(),28,66
org.apache.openjpa.persistence.query.TestQueryResults.testPessimisticOrderedRange(),36,76
org.apache.openjpa.persistence.query.common.apps.ComplexF.ComplexF(),1,1
"org.apache.openjpa.persistence.query.common.apps.ComplexF.ComplexF(String,int,Date,ComplexG[],ComplexE)",6,14
org.apache.openjpa.persistence.query.common.apps.ComplexF.setStringF(String),2,6
org.apache.openjpa.persistence.query.common.apps.ComplexF.getStringF(),1,3
org.apache.openjpa.persistence.query.common.apps.ComplexF.setIntF(int),1,1
org.apache.openjpa.persistence.query.common.apps.ComplexF.getIntF(),0,0
org.apache.openjpa.persistence.query.common.apps.ComplexF.setDateF(Date),2,6
org.apache.openjpa.persistence.query.common.apps.ComplexF.getDateF(),1,3
org.apache.openjpa.persistence.query.common.apps.ComplexF.setGs(Collection),2,2
org.apache.openjpa.persistence.query.common.apps.ComplexF.getGs(),1,1
org.apache.openjpa.persistence.query.common.apps.ComplexF.setE(ComplexE),2,2
org.apache.openjpa.persistence.query.common.apps.ComplexF.getE(),1,1
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubA.setPka(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubA.getPka(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubA.setStringFieldA(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubA.getStringFieldA(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubA.ID.ID(),0,0
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubA.ID.ID(String),2,4
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubA.ID.hashCode(),6,8
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubA.ID.equals(Object),3,5
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubA.ID.toString(),3,5
org.apache.openjpa.persistence.kernel.common.apps.AppIdSubA.ID.fromString(String),8,18
org.apache.openjpa.persistence.models.company.idclass.Customer.setOrders(Collection<>),3,5
org.apache.openjpa.persistence.models.company.idclass.Customer.getOrders(),2,2
org.apache.openjpa.persistence.models.company.idclass.Customer.setShippingAddress(IAddress),3,11
org.apache.openjpa.persistence.models.company.idclass.Customer.getShippingAddress(),2,5
org.apache.openjpa.persistence.models.company.idclass.Customer.setBillingAddress(IAddress),3,11
org.apache.openjpa.persistence.models.company.idclass.Customer.getBillingAddress(),2,5
org.apache.openjpa.persistence.relations.InheritanceHierarchyConcrete.getValue(),1,2
org.apache.openjpa.persistence.relations.InheritanceHierarchyConcrete.setValue(int),2,5
"org.apache.openjpa.persistence.nullity.AbstractNullityTestCase.assertCommitFails(Object,boolean,Class<>)",20,29
"org.apache.openjpa.persistence.nullity.AbstractNullityTestCase.assertCommitSucceeds(Object,boolean)",11,15
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.TestEJBQLFunction(String),6,7
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.setUp(),48,131
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testConcatSubStringFunc(),31,140
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testConcatFunc2(),54,103
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testTrimFunc3(),22,50
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testLowerFunc(),21,48
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testLowerClobFunc(),35,73
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testUpperFunc(),21,48
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testUpperClobFunc(),35,73
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testLengthFunc(),22,33
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testArithmFunc(),31,134
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testGroupByHavingClause(),21,37
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testOrderByClause(),21,37
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testAVGAggregFunc(),24,35
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testCOUNTAggregFunc(),19,29
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testMAXAggregFunc(),20,30
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testMINAggregFunc(),20,30
org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.testSUMAggregFunc(),19,29
"org.apache.openjpa.persistence.jpql.functions.TestEJBQLFunction.createUser(String,String,Address,int,boolean)",13,67
org.apache.openjpa.persistence.kernel.common.apps.OuterJoinValuePC.OuterJoinValuePC(),3,3
org.apache.openjpa.persistence.kernel.common.apps.OuterJoinValuePC.OuterJoinValuePC(int),3,3
org.apache.openjpa.persistence.kernel.common.apps.OuterJoinValuePC.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.OuterJoinValuePC.setStringField(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.OuterJoinValuePC.getValue1(),1,2
org.apache.openjpa.persistence.kernel.common.apps.OuterJoinValuePC.setValue1(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.OuterJoinValuePC.getValue2(),1,2
org.apache.openjpa.persistence.kernel.common.apps.OuterJoinValuePC.setValue2(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.OuterJoinValuePC.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.OuterJoinValuePC.setId(int),1,1
org.apache.openjpa.persistence.proxy.entities.IAnnuityObject.setLastUpdateDate(Date),3,5
org.apache.openjpa.persistence.proxy.entities.IAnnuityObject.getLastUpdateDate(),2,3
org.apache.openjpa.persistence.property.EntityContact.getAddress(),1,4
org.apache.openjpa.persistence.property.EntityContact.setAddress(IAddress),13,28
org.apache.openjpa.persistence.property.EntityContact.getId(),1,1
org.apache.openjpa.persistence.property.EntityContact.setId(String),2,2
org.apache.openjpa.persistence.property.EntityContact.getEmail(),2,3
org.apache.openjpa.persistence.property.EntityContact.setEmail(String),3,6
org.apache.openjpa.persistence.property.EntityContact.getPhone(),2,3
org.apache.openjpa.persistence.property.EntityContact.setPhone(String),3,6
org.apache.openjpa.persistence.property.EntityContact.getType(),2,3
org.apache.openjpa.persistence.property.EntityContact.setType(String),3,6
org.apache.openjpa.persistence.property.EntityContact.getTheAddress(),2,4
org.apache.openjpa.persistence.property.EntityContact.setTheAddress(EmbeddableAddress),3,7
org.apache.openjpa.persistence.property.EntityContact.toString(),12,17
org.apache.openjpa.persistence.jpql.version.type.TestVersionFieldType.setUp(),11,24
org.apache.openjpa.persistence.jpql.version.type.TestVersionFieldType.testProjectionVersionReturnType(),9,33
"org.apache.openjpa.persistence.jpql.version.type.TestVersionFieldType.verifyType(Class<>,Class<>)",19,47
org.apache.openjpa.persistence.jpql.version.type.TestVersionFieldType.createTestData(),22,76
org.apache.openjpa.persistence.kernel.TestFieldState.TestFieldState(),4,6
org.apache.openjpa.persistence.kernel.TestFieldState.TestFieldState(String),4,5
org.apache.openjpa.persistence.kernel.TestFieldState.setUp(),13,24
org.apache.openjpa.persistence.kernel.TestFieldState.testNotDirtyAfterSameChange(),16,32
org.apache.openjpa.persistence.kernel.common.apps.SingleIdWrapper.correctIdClass(Class),2,2
org.apache.openjpa.persistence.kernel.common.apps.SingleIdWrapper.getPkString(),1,3
org.apache.openjpa.persistence.kernel.common.apps.SingleIdWrapper.getPk(),1,1
org.apache.openjpa.persistence.kernel.common.apps.SingleIdWrapper.setPk(int),2,2
org.apache.openjpa.persistence.kernel.common.apps.SingleIdWrapper.getString(),2,3
org.apache.openjpa.persistence.kernel.common.apps.SingleIdWrapper.setString(String),3,4
org.apache.openjpa.persistence.kernel.common.apps.SingleIdWrapper.main(String[]),6,8
org.apache.openjpa.persistence.kernel.TestEJBIncrementalFlushes.TestEJBIncrementalFlushes(String),7,8
org.apache.openjpa.persistence.kernel.TestEJBIncrementalFlushes.setUp(),8,10
org.apache.openjpa.persistence.kernel.TestEJBIncrementalFlushes.testFlushNoChange(),16,23
org.apache.openjpa.persistence.kernel.TestEJBIncrementalFlushes.testOptimisticLockGivesCorrectError(),23,46
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.getBooleanToShort(),0,0
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.setBooleanToShort(boolean),1,1
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.getByteToDouble(),0,0
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.setByteToDouble(byte),1,1
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.getIntToFloat(),0,0
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.setIntToFloat(int),1,1
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.getLongToChar(),0,0
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.setLongToChar(long),1,1
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.getShortToString(),1,2
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.setShortToString(short),2,3
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.getDoubleToByte(),0,0
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.setDoubleToByte(double),1,1
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.getFloatToBoolean(),0,0
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.setFloatToBoolean(float),1,1
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.getCharToInt(),0,0
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.setCharToInt(char),1,1
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.getStringToLong(),1,3
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.setStringToLong(String),2,4
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.getUuid(),1,3
org.apache.openjpa.persistence.meta.common.apps.ExternalValues.setUuid(UUID),2,6
org.apache.openjpa.persistence.query.common.apps.QueryTest1.QueryTest1(),3,3
org.apache.openjpa.persistence.query.common.apps.QueryTest1.QueryTest1(int),3,3
org.apache.openjpa.persistence.query.common.apps.QueryTest1.getNum(),2,2
org.apache.openjpa.persistence.query.common.apps.QueryTest1.setNum(long),4,5
org.apache.openjpa.persistence.query.common.apps.QueryTest1.getString(),2,3
org.apache.openjpa.persistence.query.common.apps.QueryTest1.setString(String),4,6
org.apache.openjpa.persistence.query.common.apps.QueryTest1.getClob(),3,3
org.apache.openjpa.persistence.query.common.apps.QueryTest1.setClob(String),5,6
org.apache.openjpa.persistence.query.common.apps.QueryTest1.getBool(),2,2
org.apache.openjpa.persistence.query.common.apps.QueryTest1.setBool(boolean),4,5
org.apache.openjpa.persistence.query.common.apps.QueryTest1.getDecimal(),2,2
org.apache.openjpa.persistence.query.common.apps.QueryTest1.setDecimal(float),4,5
org.apache.openjpa.persistence.query.common.apps.QueryTest1.getCharacter(),2,2
org.apache.openjpa.persistence.query.common.apps.QueryTest1.setCharacter(char),4,5
org.apache.openjpa.persistence.query.common.apps.QueryTest1.setDate(Date),4,6
org.apache.openjpa.persistence.query.common.apps.QueryTest1.getDate(),2,3
org.apache.openjpa.persistence.query.common.apps.QueryTest1.getManyToMany(),3,3
org.apache.openjpa.persistence.query.common.apps.QueryTest1.setManyToMany(List<QueryTest4>),5,6
org.apache.openjpa.persistence.query.common.apps.QueryTest1.getId(),0,0
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest3.RuntimeTest3(),2,2
"org.apache.openjpa.persistence.meta.common.apps.RuntimeTest3.RuntimeTest3(String,int)",4,5
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest3.getIntField3(),1,2
org.apache.openjpa.persistence.meta.common.apps.RuntimeTest3.setIntField3(int),2,5
org.apache.openjpa.persistence.relations.Util1xmRt.getId(),0,0
org.apache.openjpa.persistence.relations.Util1xmRt.setId(int),1,1
org.apache.openjpa.persistence.relations.Util1xmRt.getVersion(),1,2
org.apache.openjpa.persistence.relations.Util1xmRt.getLastName(),2,3
org.apache.openjpa.persistence.relations.Util1xmRt.setLastName(String),3,6
org.apache.openjpa.persistence.models.company.basic.LineItem.setQuantity(int),2,5
org.apache.openjpa.persistence.models.company.basic.LineItem.getQuantity(),1,2
org.apache.openjpa.persistence.models.company.basic.LineItem.setProduct(IProduct),2,7
org.apache.openjpa.persistence.models.company.basic.LineItem.getProduct(),1,3
org.apache.openjpa.persistence.models.company.basic.LineItem.setId(long),1,1
org.apache.openjpa.persistence.models.company.basic.LineItem.getId(),0,0
org.apache.openjpa.persistence.querycache.TestQuerySQLCache.setUp(),19,34
org.apache.openjpa.persistence.querycache.TestQuerySQLCache.testNullParamsWithNumericPosition01(),27,121
org.apache.openjpa.persistence.querycache.TestQuerySQLCache.testNullParamsWithNumericPosition02(),27,139
org.apache.openjpa.persistence.querycache.TestQuerySQLCache.testNullParamsWithNamedQuery01(),24,125
org.apache.openjpa.persistence.querycache.TestQuerySQLCache.testNullParamsWithNamedQuery02(),24,143
org.apache.openjpa.persistence.meta.TestSequenceAssigned.TestSequenceAssigned(String),6,9
org.apache.openjpa.persistence.meta.TestSequenceAssigned.setUp(),4,7
org.apache.openjpa.persistence.meta.TestSequenceAssigned.testGetObjectId(),11,23
org.apache.openjpa.persistence.meta.TestSequenceAssigned.testGetValue(),11,18
org.apache.openjpa.persistence.meta.TestSequenceAssigned.testPrimitive(),11,23
org.apache.openjpa.persistence.meta.TestSequenceAssigned.testManualAssign(),16,50
org.apache.openjpa.persistence.meta.TestSequenceAssigned.testInheritance(),11,23
org.apache.openjpa.persistence.meta.TestSequenceAssigned.testWrapper(),13,26
org.apache.openjpa.persistence.meta.TestSequenceAssigned.testGetObjectById(),11,32
org.apache.openjpa.persistence.meta.TestSequenceAssigned.testReachability(),13,28
org.apache.openjpa.persistence.query.TestQueryParameters.setUp(),18,25
org.apache.openjpa.persistence.query.TestQueryParameters.tearDown(),8,11
org.apache.openjpa.persistence.query.TestQueryParameters.testNamedParameterUsingReservedWord(),23,55
org.apache.openjpa.persistence.query.TestQueryParameters.testPositionalParameterInJPQLQuery(),19,46
org.apache.openjpa.persistence.query.TestQueryParameters.testNamedParameterInJPQLQuery(),19,50
org.apache.openjpa.persistence.query.TestQueryParameters.testPositionalParameterMissingInJPQLQuery(),16,25
org.apache.openjpa.persistence.query.TestQueryParameters.testNamedParameterMissingInJPQLQuery(),15,28
org.apache.openjpa.persistence.query.TestQueryParameters.testPositionalParameterWrongValueInJPQLQuery(),15,32
org.apache.openjpa.persistence.query.TestQueryParameters.testNamedParameterWrongValueInJPQLQuery(),15,35
org.apache.openjpa.persistence.query.TestQueryParameters.testPositionalParameterValueTypeInJPQLQuery(),17,42
org.apache.openjpa.persistence.query.TestQueryParameters.testNamedParameterValueTypeInJPQLQuery(),17,45
org.apache.openjpa.persistence.query.TestQueryParameters.testNamedParameterInPreparedQuery(),25,54
org.apache.openjpa.persistence.query.TestQueryParameters.testPositionalParameterInNamedQuery(),20,51
org.apache.openjpa.persistence.query.TestQueryParameters.testNamedParameterInNamedQuery(),18,50
org.apache.openjpa.persistence.query.TestQueryParameters.testPositionalParameterMissingInNamedQuery(),15,26
org.apache.openjpa.persistence.query.TestQueryParameters.testNamedParameterMissingInNamedQuery(),14,28
org.apache.openjpa.persistence.query.TestQueryParameters.testPositionalParameterWrongValueInNamedQuery(),14,33
org.apache.openjpa.persistence.query.TestQueryParameters.testNamedParameterWrongValueInNamedQuery(),14,35
org.apache.openjpa.persistence.query.TestQueryParameters.testPositionalParameterValueTypeInNamedQuery(),17,43
org.apache.openjpa.persistence.query.TestQueryParameters.testNamedParameterValueTypeInNamedQuery(),17,45
org.apache.openjpa.persistence.query.TestQueryParameters.testCriteriaQueryWithNamedParameter(),26,98
org.apache.openjpa.persistence.query.TestQueryParameters.testCriteriaQueryWithUnnamedParameter(),26,94
"org.apache.openjpa.persistence.query.TestQueryParameters.assertSetParameterFails(Query,String,Object)",21,32
"org.apache.openjpa.persistence.query.TestQueryParameters.assertSetParameterFails(Query,int,Object)",21,31
org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.setUp(),34,93
org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.testNormalBasicLock(),5,11
org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.testExtendedBasicLock(),5,11
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonBasicLock(String,int,boolean)",26,76
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonBasicLock(String,int,boolean).$1.findNoLockDbSQL(EntityManager)",19,43
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonBasicLock(String,int,boolean).$1.findPessimisticForcIncDbSQL(EntityManager)",24,64
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonBasicLock(String,int,boolean).$1.queryPessimisticReadDbSQL(EntityManager)",23,69
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonBasicLock(String,int,boolean).$1.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager)",22,46
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonBasicLock(String,int,boolean).$1.namedQueryPessimisticWriteDbSql(EntityManager)",25,67
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonBasicLock(String,int,boolean).$1.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager)",23,46
org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.testNormalSecTableLock(),6,14
org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.testExtendedSecTableLock(),6,14
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonSecTableLock(String,int,boolean)",29,100
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonSecTableLock(String,int,boolean).$2.findNoLockDbSQL(EntityManager)",25,73
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonSecTableLock(String,int,boolean).$2.findPessimisticForcIncDbSQL(EntityManager)",43,149
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonSecTableLock(String,int,boolean).$2.queryPessimisticReadDbSQL(EntityManager)",41,153
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonSecTableLock(String,int,boolean).$2.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager)",28,76
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonSecTableLock(String,int,boolean).$2.namedQueryPessimisticWriteDbSql(EntityManager)",43,154
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonSecTableLock(String,int,boolean).$2.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager)",29,77
org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.testNormalSingleTableLock(),6,14
org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.testExtendedlSingleTableLock(),6,14
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonSingleTableLock(String,int,boolean)",29,93
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonSingleTableLock(String,int,boolean).$3.findNoLockDbSQL(EntityManager)",24,70
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonSingleTableLock(String,int,boolean).$3.findPessimisticForcIncDbSQL(EntityManager)",29,103
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonSingleTableLock(String,int,boolean).$3.queryPessimisticReadDbSQL(EntityManager)",26,89
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonSingleTableLock(String,int,boolean).$3.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager)",27,73
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonSingleTableLock(String,int,boolean).$3.namedQueryPessimisticWriteDbSql(EntityManager)",29,108
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonSingleTableLock(String,int,boolean).$3.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager)",28,74
org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.testNormalJoinedLock(),5,11
org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.testExtendedJoinedLock(),5,11
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonJoinedLock(String,int,boolean)",29,98
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonJoinedLock(String,int,boolean).$4.findNoLockDbSQL(EntityManager)",23,67
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonJoinedLock(String,int,boolean).$4.findPessimisticForcIncDbSQL(EntityManager)",43,143
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonJoinedLock(String,int,boolean).$4.queryPessimisticReadDbSQL(EntityManager)",41,147
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonJoinedLock(String,int,boolean).$4.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager)",26,70
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonJoinedLock(String,int,boolean).$4.namedQueryPessimisticWriteDbSql(EntityManager)",43,148
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonJoinedLock(String,int,boolean).$4.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager)",27,71
org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.testNormalElementCollectionLock(),6,14
org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.testExtendedElementCollectionLock(),6,14
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonElementCollectionLock(String,int,boolean)",30,92
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonElementCollectionLock(String,int,boolean).$5.findNoLockDbSQL(EntityManager)",20,43
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonElementCollectionLock(String,int,boolean).$5.findPessimisticForcIncDbSQL(EntityManager)",25,73
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonElementCollectionLock(String,int,boolean).$5.queryPessimisticReadDbSQL(EntityManager)",24,77
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonElementCollectionLock(String,int,boolean).$5.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager)",23,46
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonElementCollectionLock(String,int,boolean).$5.namedQueryPessimisticWriteDbSql(EntityManager)",26,78
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonElementCollectionLock(String,int,boolean).$5.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager)",24,47
org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.testNormalElementCollectionEagerLock(),7,17
org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.testExtendedElementCollectionEagerLock(),7,17
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonElementCollectionEagerLock(String,int,boolean)",39,131
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonElementCollectionEagerLock(String,int,boolean).$6.findNoLockDbSQL(EntityManager)",26,82
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonElementCollectionEagerLock(String,int,boolean).$6.findPessimisticForcIncDbSQL(EntityManager)",50,170
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonElementCollectionEagerLock(String,int,boolean).$6.queryPessimisticReadDbSQL(EntityManager)",45,213
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonElementCollectionEagerLock(String,int,boolean).$6.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager)",29,85
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonElementCollectionEagerLock(String,int,boolean).$6.namedQueryPessimisticWriteDbSql(EntityManager)",46,213
"org.apache.openjpa.persistence.lock.extended.TestBasicLockScope.commonElementCollectionEagerLock(String,int,boolean).$6.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager)",30,86
org.apache.openjpa.persistence.query.common.apps.QueryTest4.getNum3(),1,2
org.apache.openjpa.persistence.query.common.apps.QueryTest4.setNum3(int),3,5
org.apache.openjpa.persistence.query.common.apps.QueryTest4.setOneToOne2(QueryTest2),3,3
org.apache.openjpa.persistence.query.common.apps.QueryTest4.setOneToOne3(QueryTest2),3,3
org.apache.openjpa.persistence.query.common.apps.QueryTest4.setManyToMany3(Collection<QueryTest2>),5,6
org.apache.openjpa.persistence.relations.Child.getId(),0,0
org.apache.openjpa.persistence.relations.Child.setId(int),1,1
org.apache.openjpa.persistence.relations.Child.getParent(),1,3
org.apache.openjpa.persistence.relations.Child.setParent(Parent),2,6
org.apache.openjpa.persistence.relations.Child.getGrandChilds(),4,7
org.apache.openjpa.persistence.relations.Child.setGrandChilds(Collection<GrandChild>),5,12
org.apache.openjpa.persistence.relations.Child.getName(),2,3
org.apache.openjpa.persistence.relations.Child.setName(String),3,6
org.apache.openjpa.persistence.kernel.TestPersistenceManager.TestPersistenceManager(String),5,6
org.apache.openjpa.persistence.kernel.TestPersistenceManager.TestPersistenceManager(),7,9
org.apache.openjpa.persistence.kernel.TestPersistenceManager.setUp(),12,26
org.apache.openjpa.persistence.kernel.TestPersistenceManager.testSetup(),5,7
org.apache.openjpa.persistence.kernel.TestPersistenceManager.testClosed(),25,52
org.apache.openjpa.persistence.kernel.TestPersistenceManager.testMultipleCloseThreaded(),24,37
org.apache.openjpa.persistence.kernel.TestPersistenceManager.testMultipleCloseThreaded().$1.run(),7,12
org.apache.openjpa.persistence.kernel.TestPersistenceManager.testIllegalState(),25,43
org.apache.openjpa.persistence.kernel.TestPersistenceManager.testOpenJPAEntityManagerFactorySerializable(),25,81
org.apache.openjpa.persistence.kernel.TestPersistenceManager.toBrokerFactory(EntityManagerFactory),11,24
org.apache.openjpa.persistence.kernel.TestPersistenceManager.testGetObjectById(),27,75
org.apache.openjpa.persistence.kernel.TestPersistenceManager.testGetObjectsById(),33,139
org.apache.openjpa.persistence.kernel.TestPersistenceManager.testEvictAll(),15,30
org.apache.openjpa.persistence.kernel.TestPersistenceManager.testEvictAllCollection(),16,31
org.apache.openjpa.persistence.kernel.TestPersistenceManager.testEvictAllClass(),15,32
org.apache.openjpa.persistence.kernel.TestPersistenceManager.testEvictAllClassFailure(),17,42
org.apache.openjpa.persistence.kernel.TestPersistenceManager.testEvictAllExtent(),16,60
org.apache.openjpa.persistence.merge.ChildPK.getParent(),1,3
org.apache.openjpa.persistence.merge.ChildPK.setParent(ParentPK),2,6
org.apache.openjpa.persistence.merge.ChildPK.getChildKey(),3,5
org.apache.openjpa.persistence.merge.ChildPK.setChildKey(Integer),4,10
org.apache.openjpa.persistence.merge.ChildPK.hashCode(),7,21
org.apache.openjpa.persistence.merge.ChildPK.equals(Object),6,23
org.apache.openjpa.persistence.simple.TestMissingMetaData.setUp(),29,44
org.apache.openjpa.persistence.simple.TestMissingMetaData.testMissingMetaData(),29,36
org.apache.openjpa.persistence.simple.TestMissingMetaData.tearDown(),3,4
org.apache.openjpa.persistence.simple.TestMissingMetaData.main(String[]),9,10
org.apache.openjpa.persistence.relations.OneManyEagerParent.getId(),0,0
org.apache.openjpa.persistence.relations.OneManyEagerParent.getLazyChildren(),5,6
org.apache.openjpa.persistence.relations.OneManyEagerParent.addLazyChild(OneManyLazyChild),6,12
org.apache.openjpa.persistence.relations.OneManyEagerParent.getEagerChildren(),5,6
org.apache.openjpa.persistence.relations.OneManyEagerParent.addEagerChild(OneManyEagerChild),6,12
org.apache.openjpa.persistence.relations.OneManyEagerParent.getName(),2,3
org.apache.openjpa.persistence.relations.OneManyEagerParent.setName(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.ComplexEmbeddedPC.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.ComplexEmbeddedPC.setStringField(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.ComplexEmbeddedPC.getOwnerField(),3,6
org.apache.openjpa.persistence.kernel.common.apps.ComplexEmbeddedPC.setOwnerField(EmbeddedOwnerPC),4,11
org.apache.openjpa.persistence.kernel.common.apps.ComplexEmbeddedPC.getStringSet(),2,5
org.apache.openjpa.persistence.kernel.common.apps.ComplexEmbeddedPC.setStringSet(Set),2,10
"org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipSubclass.IncompleteRelationshipSubclass(int,String)",5,6
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipSubclass.IncompleteRelationshipSubclass(IncompleteRelationshipParentEntityPk),5,7
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipSubclass.IncompleteRelationshipSubclass(),3,3
org.apache.openjpa.persistence.relations.TestChainEntities.setUp(),16,32
org.apache.openjpa.persistence.relations.TestChainEntities.testChainEntities(),4,5
org.apache.openjpa.persistence.relations.TestChainEntities.chainUpdate(),36,71
org.apache.openjpa.persistence.relations.TestChainEntities.getA(),10,20
org.apache.openjpa.persistence.relations.TestChainEntities.dump(ChainEntityA),13,43
org.apache.openjpa.persistence.property.TestCompatAccessMods.setUp(),11,12
org.apache.openjpa.persistence.property.TestCompatAccessMods.testAccessMods(),34,92
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.InstanceCallbacksTest(),3,3
"org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.InstanceCallbacksTest(String,int)",5,13
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.setNonNullString(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.getStringField(),2,5
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.setStringField(String),3,10
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.setIntField(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.getNonDFGField(),2,4
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.setNonDFGField(int),3,9
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.getOneOne(),2,2
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.setOneOne(RuntimeTest1),3,3
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.jdoPostLoad(),8,12
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.jdoPreClear(),4,6
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.jdoPreStore(),31,61
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.jdoPreDelete(),11,23
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.getRel(),4,5
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.setRel(InstanceCallbacksTest),5,8
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.getRelId(),2,3
org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest.setRelId(Object),3,6
org.apache.openjpa.persistence.query.common.apps.Osoba.Osoba(),1,1
"org.apache.openjpa.persistence.query.common.apps.Osoba.Osoba(String,int)",4,8
org.apache.openjpa.persistence.query.common.apps.Osoba.getName(),2,3
org.apache.openjpa.persistence.query.common.apps.Osoba.getId(),0,0
org.apache.openjpa.persistence.query.common.apps.Osoba.getProjekty(),3,4
org.apache.openjpa.persistence.query.common.apps.Osoba.addProjekty(Projekt),5,12
org.apache.openjpa.persistence.query.common.apps.Osoba.setName(String),3,6
org.apache.openjpa.persistence.query.common.apps.Osoba.getAge(),1,2
org.apache.openjpa.persistence.query.common.apps.Osoba.setAge(int),2,5
org.apache.openjpa.persistence.query.DependentId.getName(),2,3
org.apache.openjpa.persistence.query.DependentId.setName(String),3,6
org.apache.openjpa.persistence.query.DependentId.getEmpid(),1,2
org.apache.openjpa.persistence.query.DependentId.setEmpid(long),2,5
org.apache.openjpa.persistence.query.DependentId.getEffDate(),2,5
org.apache.openjpa.persistence.query.DependentId.setEffDate(Date),3,10
org.apache.openjpa.persistence.query.DependentId.hashCode(),8,26
org.apache.openjpa.persistence.query.DependentId.equals(Object),8,25
org.apache.openjpa.persistence.merge.Parent.Parent(),1,1
org.apache.openjpa.persistence.merge.Parent.getKey1(),2,3
org.apache.openjpa.persistence.merge.Parent.setKey1(String),3,6
org.apache.openjpa.persistence.merge.Parent.getKey2(),2,3
org.apache.openjpa.persistence.merge.Parent.setKey2(Integer),3,6
org.apache.openjpa.persistence.merge.Parent.getChilds(),3,4
org.apache.openjpa.persistence.merge.Parent.setChilds(Collection<Child>),4,7
org.apache.openjpa.persistence.merge.Parent.hashCode(),6,26
org.apache.openjpa.persistence.merge.Parent.equals(Object),6,24
org.apache.openjpa.persistence.jdbc.update.Child.Child(),6,7
org.apache.openjpa.persistence.jdbc.update.Child.getId(),1,1
org.apache.openjpa.persistence.jdbc.update.Child.getName(),2,3
org.apache.openjpa.persistence.jdbc.update.Child.setName(String),4,6
org.apache.openjpa.persistence.jdbc.update.Child.getParent(),1,3
org.apache.openjpa.persistence.jdbc.update.Child.setParent(Parent),3,6
org.apache.openjpa.persistence.util.TestPersistenceUtil.setUp(),7,16
org.apache.openjpa.persistence.util.TestPersistenceUtil.testIsLoadedEager(),10,12
org.apache.openjpa.persistence.util.TestPersistenceUtil.testNotLoadedLazy(),10,12
org.apache.openjpa.persistence.util.TestPersistenceUtil.testIsLoadedLazy(),9,12
org.apache.openjpa.persistence.util.TestPersistenceUtil.testNotLoadedEager(),9,12
org.apache.openjpa.persistence.util.TestPersistenceUtil.testIsApplicationLoaded(),34,76
org.apache.openjpa.persistence.util.TestPersistenceUtil.testIsDetachLoaded(),24,39
org.apache.openjpa.persistence.util.TestPersistenceUtil.verifyIsLoadedEagerState(boolean),25,69
org.apache.openjpa.persistence.util.TestPersistenceUtil.verifyIsLoadedLazyState(boolean),28,76
org.apache.openjpa.persistence.util.TestPersistenceUtil.createEagerEntity(),8,25
org.apache.openjpa.persistence.util.TestPersistenceUtil.createEagerEmbed(),11,28
org.apache.openjpa.persistence.util.TestPersistenceUtil.createLazyEntity(),20,65
"org.apache.openjpa.persistence.util.TestPersistenceUtil.assertEagerLoadState(PersistenceUtil,Object,boolean)",13,32
org.apache.openjpa.persistence.proxy.entities.IRider.getEffectiveDate(),2,3
org.apache.openjpa.persistence.proxy.entities.IRider.setEffectiveDate(Date),3,5
org.apache.openjpa.persistence.proxy.entities.IRider.getRule(),2,2
org.apache.openjpa.persistence.proxy.entities.IRider.setRule(String),3,4
org.apache.openjpa.persistence.proxy.entities.IRider.getType(),2,3
org.apache.openjpa.persistence.proxy.entities.IRider.setType(RiderType),3,5
org.apache.openjpa.persistence.relations.D.D(),0,0
org.apache.openjpa.persistence.relations.D.getId(),1,1
org.apache.openjpa.persistence.relations.D.setId(String),2,2
org.apache.openjpa.persistence.relations.D.getA(),1,1
org.apache.openjpa.persistence.relations.D.setA(String),2,2
org.apache.openjpa.persistence.relations.D.getC(),0,0
org.apache.openjpa.persistence.relations.D.setC(C),1,1
org.apache.openjpa.persistence.relations.D.getVc(),0,0
org.apache.openjpa.persistence.relations.D.setVc(VC),1,1
org.apache.openjpa.persistence.relations.D.CId.getVc(),0,0
org.apache.openjpa.persistence.relations.D.CId.setVc(VC.VCId),1,1
org.apache.openjpa.persistence.relations.D.CId.getId(),1,1
org.apache.openjpa.persistence.relations.D.CId.setId(String),2,2
org.apache.openjpa.persistence.relations.D.CId.equals(Object),3,9
org.apache.openjpa.persistence.relations.D.CId.hashCode(),2,6
org.apache.openjpa.persistence.xmlmapping.entities.Order.Order(),0,0
"org.apache.openjpa.persistence.xmlmapping.entities.Order.Order(int,double,boolean,Customer)",6,10
org.apache.openjpa.persistence.xmlmapping.entities.Order.getAmount(),1,2
org.apache.openjpa.persistence.xmlmapping.entities.Order.setAmount(double),2,5
org.apache.openjpa.persistence.xmlmapping.entities.Order.getCustomer(),1,3
org.apache.openjpa.persistence.xmlmapping.entities.Order.setCustomer(Customer),2,6
org.apache.openjpa.persistence.xmlmapping.entities.Order.isDelivered(),1,2
org.apache.openjpa.persistence.xmlmapping.entities.Order.setDelivered(boolean),2,5
org.apache.openjpa.persistence.xmlmapping.entities.Order.getOid(),1,2
org.apache.openjpa.persistence.xmlmapping.entities.Order.toString(),6,11
org.apache.openjpa.persistence.xmlmapping.entities.Order.getShipAddress(),2,5
org.apache.openjpa.persistence.xmlmapping.entities.Order.setShipAddress(Address),3,10
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceEmbed.getIntField(),1,1
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceEmbed.setIntField(int),2,2
org.apache.openjpa.persistence.simple.TestEntityManagerFactory.testCloseUnusedEMF(),17,27
org.apache.openjpa.persistence.query.Magazine.getId(),0,0
org.apache.openjpa.persistence.query.Magazine.setId(int),1,1
org.apache.openjpa.persistence.query.Magazine.getName(),2,3
org.apache.openjpa.persistence.query.Magazine.setName(String),3,6
org.apache.openjpa.persistence.query.Magazine.getIdPublisher(),1,3
org.apache.openjpa.persistence.query.Magazine.setIdPublisher(Publisher),2,6
org.apache.openjpa.persistence.query.Magazine.getDatePublished(),2,5
org.apache.openjpa.persistence.query.Magazine.setDatePublished(Date),3,10
org.apache.openjpa.persistence.query.Magazine.toString(),2,3
org.apache.openjpa.persistence.relations.OneManyEagerChild.getId(),0,0
org.apache.openjpa.persistence.relations.OneManyEagerChild.getName(),2,3
org.apache.openjpa.persistence.relations.OneManyEagerChild.setName(String),3,6
org.apache.openjpa.persistence.relations.OneManyEagerChild.getParent(),2,4
org.apache.openjpa.persistence.relations.OneManyEagerChild.setParent(OneManyEagerParent),3,7
org.apache.openjpa.persistence.relations.UnidirectionalManyToOne.setRelated(BasicEntity),4,7
org.apache.openjpa.persistence.relations.UnidirectionalManyToOne.getRelated(),3,4
org.apache.openjpa.persistence.relations.UnidirectionalManyToOne.getId(),0,0
org.apache.openjpa.persistence.relations.UnidirectionalManyToOne.setId(int),1,1
org.apache.openjpa.persistence.kernel.TestConnectionRetainMode.TestConnectionRetainMode(),6,10
org.apache.openjpa.persistence.kernel.TestConnectionRetainMode.TestConnectionRetainMode(String),6,7
org.apache.openjpa.persistence.kernel.TestConnectionRetainMode.testOnDemand(),3,5
org.apache.openjpa.persistence.kernel.TestConnectionRetainMode.testTransaction(),3,5
org.apache.openjpa.persistence.kernel.TestConnectionRetainMode.testPersistenceManager(),4,7
org.apache.openjpa.persistence.kernel.TestConnectionRetainMode.doTest(String),25,82
"org.apache.openjpa.persistence.kernel.TestConnectionRetainMode.checkPM(OpenJPAEntityManager,Object,String)",11,14
"org.apache.openjpa.persistence.kernel.TestConnectionRetainMode.checkTransaction(OpenJPAEntityManager,Object,String)",13,15
org.apache.openjpa.persistence.util.LazyEmbed.setStartDate(Date),3,10
org.apache.openjpa.persistence.util.LazyEmbed.getStartDate(),2,5
org.apache.openjpa.persistence.util.LazyEmbed.setEndDate(Date),2,6
org.apache.openjpa.persistence.util.LazyEmbed.getEndDate(),1,3
org.apache.openjpa.persistence.query.TestAbstractSchemaName.setUp(),12,22
org.apache.openjpa.persistence.query.TestAbstractSchemaName.testQuery(),13,22
org.apache.openjpa.persistence.query.TestAbstractSchemaName.main(String[]),8,9
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest2.RuntimeTest2(),2,2
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest2.RuntimeTest2(int),3,4
"org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest2.RuntimeTest2(String,int)",4,5
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest2.getIntField2(),1,2
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest2.setIntField2(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest2.toString(),2,8
org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC.getName(),2,3
org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC.setName(String),3,6
org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC.getIgnoreUpdate(),2,4
org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC.setIgnoreUpdate(int),3,9
org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC.getRestrictUpdate(),2,4
org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC.setRestrictUpdate(int),3,9
org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC.getUUID(),2,3
org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC.setUUID(String),3,6
org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC.getUUIDHex(),3,5
org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC.setUUIDHex(String),4,10
org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC.getVersion(),1,2
org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC.setVersion(int),2,5
org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC.getSequence(),1,2
org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC.setSequence(int),2,5
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.getStatus(),3,5
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.setStatus(MetaTest7Status),4,8
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.getIntLongStatus(),3,5
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.setIntLongStatus(MetaTest7IntLongStatus),4,8
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.getIntIntegerStatus(),4,8
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.setIntIntegerStatus(MetaTest7IntIntegerStatus),5,11
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.getIntegerIntegerStatus(),4,11
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.setIntegerIntegerStatus(MetaTest7IntegerIntegerStatus),5,14
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.getIntegerIntStatus(),4,8
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.setIntegerIntStatus(MetaTest7IntegerIntStatus),5,11
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.getIntegerLongStatus(),4,8
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.setIntegerLongStatus(MetaTest7IntegerLongStatus),5,11
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntegerIntegerStatus.getName(),2,2
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntegerIntegerStatus.valueOf(Integer),6,8
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntegerIntegerStatus.valueOf(String),7,8
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntegerIntStatus.getName(),2,2
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntegerIntStatus.valueOf(int),6,6
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntegerIntStatus.valueOf(String),7,7
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntegerLongStatus.getName(),2,2
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntegerLongStatus.valueOf(long),6,6
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntegerLongStatus.valueOf(String),7,7
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntIntegerStatus.getName(),1,1
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntIntegerStatus.valueOf(Integer),6,7
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntIntegerStatus.valueOf(String),7,7
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntLongStatus.getName(),1,1
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntLongStatus.valueOf(long),5,5
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7IntLongStatus.valueOf(String),6,6
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7Status.getName(),2,2
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7Status.valueOf(int),5,5
org.apache.openjpa.persistence.meta.common.apps.MetaTest7.MetaTest7Status.valueOf(String),6,6
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwned.getId(),0,0
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwned.setId(long),1,1
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwned.getName(),2,3
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwned.setName(String),3,6
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwned.getOwner(),2,4
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwned.setOwner(BidirectionalOne2OneOwner),3,7
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwned.getVersion(),1,2
org.apache.openjpa.persistence.querycache.common.apps.BidirectionalOne2OneOwned.toString(),3,5
org.apache.openjpa.persistence.relations.CM.CM(),0,0
org.apache.openjpa.persistence.relations.CM.getCmId(),1,1
org.apache.openjpa.persistence.relations.CM.setCmId(String),2,2
org.apache.openjpa.persistence.relations.CM.getCs(),1,1
org.apache.openjpa.persistence.relations.CM.setCs(Set<C>),1,2
org.apache.openjpa.persistence.relations.CM.addC(C),2,3
org.apache.openjpa.persistence.relations.CM.getE(),0,0
org.apache.openjpa.persistence.relations.CM.setE(E),1,1
org.apache.openjpa.persistence.relations.CM.CMId.getCmId(),1,1
org.apache.openjpa.persistence.relations.CM.CMId.setCmId(String),2,2
org.apache.openjpa.persistence.relations.CM.CMId.getE(),1,1
org.apache.openjpa.persistence.relations.CM.CMId.setE(String),2,2
org.apache.openjpa.persistence.relations.CM.CMId.equals(Object),3,9
org.apache.openjpa.persistence.relations.CM.CMId.hashCode(),2,6
org.apache.openjpa.persistence.query.TestJDBCEscapeDate.setUp(),4,5
org.apache.openjpa.persistence.query.TestJDBCEscapeDate.testJDBCEscape(),54,360
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl3.InterfaceTestImpl3(),2,2
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl3.InterfaceTestImpl3(String),4,5
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl3.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl3.setIntField(int),2,3
org.apache.openjpa.persistence.query.TestMathQueries.TestMathQueries(String),5,6
org.apache.openjpa.persistence.query.TestMathQueries.setUp(),18,31
org.apache.openjpa.persistence.query.TestMathQueries.testMultipleQuery(),17,34
org.apache.openjpa.persistence.kernel.TestSavepoints.TestSavepoints(String),6,9
org.apache.openjpa.persistence.kernel.TestSavepoints.getSavepointPlugin(),4,4
org.apache.openjpa.persistence.kernel.TestSavepoints.getProperties(String[]),7,15
org.apache.openjpa.persistence.kernel.TestSavepoints.setUp(),5,13
org.apache.openjpa.persistence.kernel.TestSavepoints.testSimple(),2,14
"org.apache.openjpa.persistence.kernel.TestSavepoints.doSimpleTest(boolean,int,int)",24,133
org.apache.openjpa.persistence.kernel.TestSavepoints.testCleanOrdering(),21,49
org.apache.openjpa.persistence.kernel.TestSavepoints.testLastSavepoint(),23,51
org.apache.openjpa.persistence.kernel.TestSavepoints.testNewRollback(),2,14
"org.apache.openjpa.persistence.kernel.TestSavepoints.doNewRollbackTest(boolean,int,int)",23,55
org.apache.openjpa.persistence.kernel.TestSavepoints.testNewRelation(),2,14
"org.apache.openjpa.persistence.kernel.TestSavepoints.doNewRelationTest(boolean,int,int)",23,100
org.apache.openjpa.persistence.kernel.TestSavepoints.testNullRelation(),2,14
"org.apache.openjpa.persistence.kernel.TestSavepoints.doNullRelationTest(boolean,int,int)",20,83
org.apache.openjpa.persistence.kernel.TestSavepoints.testCollection(),2,14
"org.apache.openjpa.persistence.kernel.TestSavepoints.doCollectionTest(boolean,int,int)",35,147
org.apache.openjpa.persistence.kernel.TestSavepoints.testChangeTracker(),21,64
"org.apache.openjpa.persistence.kernel.TestSavepoints.newElement(ModRuntimeTest1,String,int)",9,20
org.apache.openjpa.persistence.kernel.TestSavepoints.getState(Object),8,13
org.apache.openjpa.persistence.proxy.delayed.tset.Department.setEmployees(Collection<IEmployee>),5,10
org.apache.openjpa.persistence.proxy.delayed.tset.Department.getEmployees(),3,4
org.apache.openjpa.persistence.proxy.delayed.tset.Department.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.tset.Department.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.tset.Department.setLocations(Collection<Location>),5,10
org.apache.openjpa.persistence.proxy.delayed.tset.Department.getLocations(),3,4
org.apache.openjpa.persistence.proxy.delayed.tset.Department.setProducts(Collection<Product>),5,10
org.apache.openjpa.persistence.proxy.delayed.tset.Department.getProducts(),3,4
org.apache.openjpa.persistence.proxy.delayed.tset.Department.setCertifications(Collection<Certification>),5,10
org.apache.openjpa.persistence.proxy.delayed.tset.Department.getCertifications(),3,4
org.apache.openjpa.persistence.proxy.delayed.tset.Department.setAwards(Collection<Award>),5,10
org.apache.openjpa.persistence.proxy.delayed.tset.Department.getAwards(),3,4
org.apache.openjpa.persistence.relations.ChainEntityA.ChainEntityA(),2,2
org.apache.openjpa.persistence.relations.ChainEntityA.addChildEntityB(ChainEntityB),8,22
org.apache.openjpa.persistence.relations.ChainEntityA.getChildren(),7,18
org.apache.openjpa.persistence.relations.ChainEntityA.getName(),2,3
org.apache.openjpa.persistence.relations.ChainEntityA.setName(String),3,6
org.apache.openjpa.persistence.relations.ChainEntityA.getId(),0,0
org.apache.openjpa.persistence.relations.ChainEntityA.setId(long),1,1
org.apache.openjpa.persistence.relations.HandlerCollectionInstance.getCollection(),2,4
org.apache.openjpa.persistence.meta.common.apps.TransactionalClassPC.getIntField(),1,2
org.apache.openjpa.persistence.meta.common.apps.TransactionalClassPC.setIntField(int),2,5
org.apache.openjpa.persistence.relations.OneOneChild.getId(),0,0
org.apache.openjpa.persistence.relations.OneOneChild.getName(),2,3
org.apache.openjpa.persistence.relations.OneOneChild.setName(String),3,6
org.apache.openjpa.persistence.relations.OneOneChild.getParent(),1,3
org.apache.openjpa.persistence.relations.OneOneChild.setParent(OneOneParent),2,6
org.apache.openjpa.persistence.query.TestWildCardCount.setUp(),13,15
org.apache.openjpa.persistence.query.TestWildCardCount.testWildCardForCountInSingleProjectTerm(),12,15
org.apache.openjpa.persistence.query.TestWildCardCount.testWildCardForCountInMultipleProjectTerms(),14,19
org.apache.openjpa.persistence.query.TestWildCardCount.testWildCardForCountInMultipleProjectTermsButCountIsNotFirstTerm(),15,21
org.apache.openjpa.persistence.query.TestWildCardCount.executeAndAssert(String),3,7
"org.apache.openjpa.persistence.query.TestWildCardCount.executeAndAssert(boolean,String)",14,28
org.apache.openjpa.persistence.query.TestWildCardCount.getWildCardForCount(),8,12
org.apache.openjpa.persistence.query.TestWildCardCount.setWildCardForCount(boolean),10,15
org.apache.openjpa.persistence.query.TestWildCardCount.usesWildCardForCount(String),6,8
org.apache.openjpa.persistence.models.company.basic.FullTimeEmployee.setSalary(float),2,5
org.apache.openjpa.persistence.models.company.basic.FullTimeEmployee.getSalary(),1,2
org.apache.openjpa.persistence.proxy.TreeNode.getId(),0,0
org.apache.openjpa.persistence.proxy.TreeNode.getName(),2,3
org.apache.openjpa.persistence.proxy.TreeNode.setName(String),3,6
org.apache.openjpa.persistence.proxy.TreeNode.addNode(TreeNode),9,16
"org.apache.openjpa.persistence.proxy.TreeNode.addNode(TreeNode,int)",13,21
org.apache.openjpa.persistence.proxy.TreeNode.removeNode(TreeNode),4,8
org.apache.openjpa.persistence.proxy.TreeNode.removeNode(int),7,12
org.apache.openjpa.persistence.proxy.TreeNode.getNode(int),6,10
org.apache.openjpa.persistence.proxy.TreeNode.getNodes(),5,5
org.apache.openjpa.persistence.proxy.TreeNode.clearNodes(),2,2
org.apache.openjpa.persistence.proxy.TreeNode.isLeaf(),3,3
org.apache.openjpa.persistence.proxy.TreeNode.checkSequenceRange(int),9,20
org.apache.openjpa.persistence.proxy.TreeNode.getVersion(),1,2
org.apache.openjpa.persistence.proxy.TreeNode.createTree(int[]),23,62
org.apache.openjpa.persistence.proxy.TreeNode.modify(int[]),22,74
org.apache.openjpa.persistence.proxy.TreeNode.getFanOuts(),8,12
org.apache.openjpa.persistence.proxy.TreeNode.getFanOuts(int[]),18,55
org.apache.openjpa.persistence.proxy.TreeNode.print(PrintStream),5,7
"org.apache.openjpa.persistence.proxy.TreeNode.print(int,PrintStream)",9,15
org.apache.openjpa.persistence.models.company.fetchlazy.LineItem.setQuantity(int),2,5
org.apache.openjpa.persistence.models.company.fetchlazy.LineItem.getQuantity(),1,2
org.apache.openjpa.persistence.models.company.fetchlazy.LineItem.setProduct(IProduct),2,7
org.apache.openjpa.persistence.models.company.fetchlazy.LineItem.getProduct(),1,3
org.apache.openjpa.persistence.models.company.fetchlazy.LineItem.setId(long),1,1
org.apache.openjpa.persistence.models.company.fetchlazy.LineItem.getId(),0,0
org.apache.openjpa.persistence.models.company.idclass.Company.setName(String),3,6
org.apache.openjpa.persistence.models.company.idclass.Company.getName(),2,3
org.apache.openjpa.persistence.models.company.idclass.Company.setAddress(IAddress),2,7
org.apache.openjpa.persistence.models.company.idclass.Company.getAddress(),1,3
org.apache.openjpa.persistence.models.company.idclass.Company.setEmployees(Set<>),3,9
org.apache.openjpa.persistence.models.company.idclass.Company.getEmployees(),3,4
org.apache.openjpa.persistence.models.company.idclass.Company.setProducts(Set<>),3,9
org.apache.openjpa.persistence.models.company.idclass.Company.getProducts(),3,4
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObjectChild.setChildA(int),3,5
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObjectChild.getChildA(),1,2
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObjectChild.setChildB(int),3,5
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObjectChild.getChildB(),1,2
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObjectChild.setChildC(int),3,5
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObjectChild.getChildC(),1,2
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObjectChild.setChildD(int),3,5
org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObjectChild.getChildD(),1,2
org.apache.openjpa.persistence.query.Customer.CustomerKey.CustomerKey(),2,2
"org.apache.openjpa.persistence.query.Customer.CustomerKey.CustomerKey(String,int)",4,4
org.apache.openjpa.persistence.query.Customer.CustomerKey.toString(),2,3
org.apache.openjpa.persistence.query.Customer.CustomerKey.equals(Object),6,18
org.apache.openjpa.persistence.query.Customer.CustomerKey.hashCode(),2,5
org.apache.openjpa.persistence.query.Customer.Customer(),1,1
"org.apache.openjpa.persistence.query.Customer.Customer(CustomerKey,String,CreditRating)",7,16
org.apache.openjpa.persistence.query.Customer.getName(),2,3
org.apache.openjpa.persistence.query.Customer.setName(String),3,6
org.apache.openjpa.persistence.query.Customer.getRating(),2,5
org.apache.openjpa.persistence.query.Customer.setRating(CreditRating),3,8
org.apache.openjpa.persistence.query.Customer.getOrders(),1,1
org.apache.openjpa.persistence.query.Customer.setOrders(Collection<Order>),2,2
org.apache.openjpa.persistence.query.Customer.getAccounts(),3,4
org.apache.openjpa.persistence.query.Customer.setAccounts(List<Account>),4,7
org.apache.openjpa.persistence.query.Customer.toString(),4,6
org.apache.openjpa.persistence.query.Customer.getCid(),3,4
org.apache.openjpa.persistence.query.Customer.setCid(CustomerKey),4,7
org.apache.openjpa.persistence.relations.ManyOneIdOwner.getId(),2,2
org.apache.openjpa.persistence.relations.ManyOneIdOwner.setId(BasicEntity),3,3
org.apache.openjpa.persistence.relations.ManyOneIdOwner.getName(),2,3
org.apache.openjpa.persistence.relations.ManyOneIdOwner.setName(String),3,6
org.apache.openjpa.persistence.relations.ManyOneIdOwner.getSelfRel(),3,5
org.apache.openjpa.persistence.relations.ManyOneIdOwner.setSelfRel(ManyOneIdOwner),4,10
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest2.ModRuntimeTest2(),3,3
"org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest2.ModRuntimeTest2(String,int)",5,6
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest2.getIntField2(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest2.setIntField2(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest2.toString(),2,8
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.IncompleteRelationshipParentEntityPk.IncompleteRelationshipParentEntityPk(),4,4
"org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.IncompleteRelationshipParentEntityPk.IncompleteRelationshipParentEntityPk(int,String)",6,8
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.IncompleteRelationshipParentEntityPk.getClientId(),2,3
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.IncompleteRelationshipParentEntityPk.setClientId(String),3,6
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.IncompleteRelationshipParentEntityPk.setId(int),1,1
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.IncompleteRelationshipParentEntityPk.getId(),0,0
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.IncompleteRelationshipParentEntityPk.equals(Object),8,19
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.IncompleteRelationshipParentEntityPk.hashCode(),3,12
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.IncompleteRelationshipParentEntityPk.toString(),6,8
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.IncompleteRelationshipParentEntity(),4,4
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.IncompleteRelationshipParentEntity(IncompleteRelationshipParentEntityPk),4,8
"org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.IncompleteRelationshipParentEntity(int,String)",6,11
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.getChild(),4,6
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.setChild(IncompleteRelationshipChildEntity),5,9
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.getPk(),4,4
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.setPk(IncompleteRelationshipParentEntityPk),5,5
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.equals(Object),7,15
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.hashCode(),2,4
org.apache.openjpa.persistence.relations.entity.IncompleteRelationshipParentEntity.toString(),5,7
org.apache.openjpa.persistence.meta.ImplicitFieldAccessSubclass.getBase(),4,6
org.apache.openjpa.persistence.meta.ImplicitFieldAccessSubclass.setBase(ImplicitFieldAccessBase),5,9
org.apache.openjpa.persistence.meta.ImplicitFieldAccessSubclass.getMapRelationKeyEmbedded(),8,13
"org.apache.openjpa.persistence.meta.ImplicitFieldAccessSubclass.setMapRelationKeyEmbedded(Map<Embed0,ExplicitPropertyAccess>)",9,16
org.apache.openjpa.persistence.simple.Animal.Animal(),1,1
org.apache.openjpa.persistence.kernel.common.apps.PCEmployee.PCEmployee(),1,1
org.apache.openjpa.persistence.kernel.common.apps.PCEmployee.PCEmployee(String),3,4
org.apache.openjpa.persistence.kernel.common.apps.PCEmployee.getDepartment(),1,3
org.apache.openjpa.persistence.kernel.common.apps.PCEmployee.setDepartment(PCDepartment),2,6
"org.apache.openjpa.persistence.kernel.common.apps.PCEmployee.reflect(PCEmployee,String)",10,15
org.apache.openjpa.persistence.relations.DataStoreManyOneIdOwner.getId(),4,4
org.apache.openjpa.persistence.relations.DataStoreManyOneIdOwner.setId(DataStoreBasicEntity),5,5
org.apache.openjpa.persistence.relations.DataStoreManyOneIdOwner.getName(),2,3
org.apache.openjpa.persistence.relations.DataStoreManyOneIdOwner.setName(String),3,6
org.apache.openjpa.persistence.relations.DataStoreManyOneIdOwner.getSelfRel(),5,7
org.apache.openjpa.persistence.relations.DataStoreManyOneIdOwner.setSelfRel(DataStoreManyOneIdOwner),6,12
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned3.SequenceAssigned3(),2,2
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned3.SequenceAssigned3(Long),2,2
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned3.setPK(Long),1,1
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned3.getPK(),0,0
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned3.seq3Id.seq3Id(),1,1
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned3.seq3Id.seq3Id(String),4,5
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned3.seq3Id.hashCode(),5,6
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned3.seq3Id.toString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned3.seq3Id.equals(Object),3,4
org.apache.openjpa.persistence.meta.TestQueryTypeAliasRegistration.setUp(),14,19
org.apache.openjpa.persistence.meta.TestQueryTypeAliasRegistration.testMultiThreadGetMetaDataAlias(),31,60
org.apache.openjpa.persistence.meta.TestQueryTypeAliasRegistration.Worker.Worker(EntityManagerFactory),20,27
org.apache.openjpa.persistence.meta.TestQueryTypeAliasRegistration.Worker.getException(),1,2
org.apache.openjpa.persistence.meta.TestQueryTypeAliasRegistration.Worker.run(),16,17
org.apache.openjpa.persistence.proxy.TestProxyCollection.setUp(),6,8
org.apache.openjpa.persistence.proxy.TestProxyCollection.testCreateTree(),19,36
org.apache.openjpa.persistence.proxy.TestProxyCollection.testModifyTree(),17,45
org.apache.openjpa.persistence.proxy.TestProxyCollection.testPersistTree(),13,18
org.apache.openjpa.persistence.proxy.TestProxyCollection.testAddNodeAtLeaf(),11,14
org.apache.openjpa.persistence.proxy.TestProxyCollection.testAddNewLevel(),9,13
org.apache.openjpa.persistence.proxy.TestProxyCollection.testAddAndRemove(),9,14
org.apache.openjpa.persistence.proxy.TestProxyCollection.testAddAtAllLevel(),8,12
org.apache.openjpa.persistence.proxy.TestProxyCollection.testRemoveAtAllLevel(),8,12
org.apache.openjpa.persistence.proxy.TestProxyCollection.testCreateCorrectType(),21,38
"org.apache.openjpa.persistence.proxy.TestProxyCollection.createModifyAndMerge(int[],int[])",36,72
org.apache.openjpa.persistence.proxy.TestProxyCollection.create(int[]),20,38
"org.apache.openjpa.persistence.proxy.TestProxyCollection.verify(TreeNode,int[])",14,28
"org.apache.openjpa.persistence.proxy.TestProxyCollection.assertArrayEquals(int[],int[])",3,7
"org.apache.openjpa.persistence.proxy.TestProxyCollection.assertProxyCollection(Object,boolean)",8,25
org.apache.openjpa.persistence.proxy.TestProxyCollection.assertNotProxyCollection(Object),4,9
org.apache.openjpa.persistence.meta.common.apps.OrderByPCRel.getId(),0,0
org.apache.openjpa.persistence.meta.common.apps.OrderByPCRel.setId(long),1,1
org.apache.openjpa.persistence.meta.common.apps.OrderByPCRel.getString(),1,3
org.apache.openjpa.persistence.meta.common.apps.OrderByPCRel.setString(String),2,6
org.apache.openjpa.persistence.meta.common.apps.OrderByPCRel.getToOne(),0,0
org.apache.openjpa.persistence.meta.common.apps.OrderByPCRel.setToOne(OrderByPC),1,1
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwner.getLongId(),0,0
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwner.getEntityId(),2,4
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwner.setEntityId(BasicEntity),3,7
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwner.getName(),2,3
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwner.setName(String),3,6
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwner.getSelfRel(),4,6
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwner.setSelfRel(ManyOneCompoundIdOwner),5,11
org.apache.openjpa.persistence.models.company.CompanyModelTest.setUp(),25,65
org.apache.openjpa.persistence.models.company.CompanyModelTest.tearDown(),5,7
org.apache.openjpa.persistence.models.company.CompanyModelTest.localClass(String),6,12
org.apache.openjpa.persistence.models.company.CompanyModelTest.testBasicQueries(),35,60
"org.apache.openjpa.persistence.models.company.CompanyModelTest.getBasicQueries(Set<String>,PropertyDescriptor,String)",52,162
org.apache.openjpa.persistence.models.company.CompanyModelTest.checkModel(),38,68
org.apache.openjpa.persistence.models.company.CompanyModelTest.checkModel().$1.exceptionThrown(Exception),4,5
"org.apache.openjpa.persistence.models.company.CompanyModelTest.queryCount(Class,String,Object)",6,9
org.apache.openjpa.persistence.models.company.CompanyModelTest.queryCount(Class),3,3
org.apache.openjpa.persistence.models.company.CompanyModelTest.impl(Class),2,2
org.apache.openjpa.persistence.models.company.CompanyModelTest.verifyModel(),22,119
org.apache.openjpa.persistence.models.company.CompanyModelTest.create(Class),14,17
org.apache.openjpa.persistence.models.company.basic.Company.setName(String),3,6
org.apache.openjpa.persistence.models.company.basic.Company.getName(),2,3
org.apache.openjpa.persistence.models.company.basic.Company.setAddress(IAddress),2,7
org.apache.openjpa.persistence.models.company.basic.Company.getAddress(),1,3
org.apache.openjpa.persistence.models.company.basic.Company.setEmployees(Set<>),3,9
org.apache.openjpa.persistence.models.company.basic.Company.getEmployees(),3,4
org.apache.openjpa.persistence.models.company.basic.Company.setProducts(Set<>),3,9
org.apache.openjpa.persistence.models.company.basic.Company.getProducts(),3,4
org.apache.openjpa.persistence.models.company.basic.Company.setId(long),1,1
org.apache.openjpa.persistence.models.company.basic.Company.getId(),0,0
org.apache.openjpa.persistence.proxy.entities.AnnuityPersistebleObject.getVersion(),1,2
org.apache.openjpa.persistence.proxy.entities.AnnuityPersistebleObject.setVersion(int),2,5
org.apache.openjpa.persistence.proxy.entities.AnnuityPersistebleObject.getId(),1,1
org.apache.openjpa.persistence.proxy.entities.AnnuityPersistebleObject.setId(String),2,2
org.apache.openjpa.persistence.proxy.entities.AnnuityPersistebleObject.getLastUpdateDate(),2,5
org.apache.openjpa.persistence.proxy.entities.AnnuityPersistebleObject.setLastUpdateDate(Date),3,10
org.apache.openjpa.persistence.proxy.entities.AnnuityPersistebleObject.getConfiguration(),4,5
"org.apache.openjpa.persistence.proxy.entities.AnnuityPersistebleObject.setConfiguration(Parameterizable<String,String>)",5,8
org.apache.openjpa.persistence.proxy.entities.AnnuityPersistebleObject.fixLastUpdateDate(),4,7
org.apache.openjpa.persistence.query.TestJPQLWithoutIdentificationVariable.setUp(),3,5
org.apache.openjpa.persistence.query.TestJPQLWithoutIdentificationVariable.testJPQLWithoutIdentificationVariable(),18,19
org.apache.openjpa.persistence.test.PersistenceTestCase.createEMF(Object),33,44
org.apache.openjpa.persistence.test.PersistenceTestCase.getPersistenceUnitName(),6,11
"org.apache.openjpa.persistence.test.PersistenceTestCase.createNamedEMF(String,Object)",45,103
org.apache.openjpa.persistence.test.PersistenceTestCase.getPropertiesMap(Object),42,125
org.apache.openjpa.persistence.test.PersistenceTestCase.run(TestResult),3,12
org.apache.openjpa.persistence.test.PersistenceTestCase.tearDown(),11,15
org.apache.openjpa.persistence.test.PersistenceTestCase.closeEMF(EntityManagerFactory),6,16
org.apache.openjpa.persistence.test.PersistenceTestCase.closeAllOpenEMs(EntityManagerFactory),20,41
"org.apache.openjpa.persistence.test.PersistenceTestCase.clear(EntityManagerFactory,Class)",23,49
org.apache.openjpa.persistence.test.PersistenceTestCase.clear(EntityManagerFactory),24,34
"org.apache.openjpa.persistence.test.PersistenceTestCase.clear(EntityManagerFactory,boolean,ClassMetaData)",42,75
"org.apache.openjpa.persistence.test.PersistenceTestCase.entityName(EntityManagerFactory,Class)",13,23
"org.apache.openjpa.persistence.test.PersistenceTestCase.isBaseManagedInterface(ClassMetaData,ClassMetaData)",20,38
"org.apache.openjpa.persistence.test.PersistenceTestCase.isExtendedManagedInterface(ClassMetaData,ClassMetaData)",23,51
"org.apache.openjpa.persistence.test.PersistenceTestCase.assertNotEquals(Object,Object)",8,13
org.apache.openjpa.persistence.test.PersistenceTestCase.roundtrip(T),15,39
"org.apache.openjpa.persistence.test.PersistenceTestCase.assertException(Throwable,Class)",7,15
"org.apache.openjpa.persistence.test.PersistenceTestCase.assertException(Throwable,Class,Class)",22,111
"org.apache.openjpa.persistence.test.PersistenceTestCase.assertExceptionMessage(Throwable,Class,String)",13,28
"org.apache.openjpa.persistence.test.PersistenceTestCase.assertMessage(Throwable,String)",7,22
org.apache.openjpa.persistence.test.PersistenceTestCase.printException(Throwable),3,5
"org.apache.openjpa.persistence.test.PersistenceTestCase.printException(Throwable,int)",11,25
org.apache.openjpa.persistence.test.PersistenceTestCase.runBare(),8,10
org.apache.openjpa.persistence.test.PersistenceTestCase.runBare(AllowFailure),24,65
org.apache.openjpa.persistence.test.PersistenceTestCase.getAllowFailure(),15,41
org.apache.openjpa.persistence.test.PersistenceTestCase.isRunsOnCurrentPlatform(),25,46
org.apache.openjpa.persistence.test.PersistenceTestCase.isTargetPlatform(String),16,30
org.apache.openjpa.persistence.test.PersistenceTestCase.getPlatform(),9,12
"org.apache.openjpa.persistence.test.PersistenceTestCase.FixedMap.removeEldestEntry(Map.Entry<EMFKey,OpenJPAEntityManagerFactorySPI>)",12,14
"org.apache.openjpa.persistence.test.PersistenceTestCase.EMFKey.EMFKey(String,Map)",6,10
org.apache.openjpa.persistence.test.PersistenceTestCase.EMFKey.hashCode(),4,9
org.apache.openjpa.persistence.test.PersistenceTestCase.EMFKey.equals(Object),6,14
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1.ModRuntimeTest1(),3,3
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1.ModRuntimeTest1(int),5,6
"org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1.ModRuntimeTest1(String,int)",6,9
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1.getIntField(),1,2
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1.setIntField(int),2,5
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1.getStringField(),2,5
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1.setStringField(String),3,10
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1.getSelfOneOne(),4,5
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1.setSelfOneOne(ModRuntimeTest1),5,8
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1.getSelfOneMany(),2,3
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1.setSelfOneMany(Set),2,6
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1.toString(),2,8
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1.getLocaleField(),2,5
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1.setLocaleField(Locale),3,10
org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.setUp(),25,55
org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.testNormalUni1x1Lock(),5,10
org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.testExtendedUni1x1Lock(),5,10
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1Lock(String,int,boolean)",27,92
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1Lock(String,int,boolean).$1.findNoLockDbSQL(EntityManager)",23,63
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1Lock(String,int,boolean).$1.findPessimisticForcIncDbSQL(EntityManager)",46,193
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1Lock(String,int,boolean).$1.queryPessimisticReadDbSQL(EntityManager)",44,192
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1Lock(String,int,boolean).$1.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager)",26,66
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1Lock(String,int,boolean).$1.namedQueryPessimisticWriteDbSql(EntityManager)",46,193
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1Lock(String,int,boolean).$1.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager)",27,67
org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.testNormalUni1x1LazyLock(),6,13
org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.testExtendedUni1x1LazyLock(),6,13
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1LazyLock(String,int,boolean)",27,94
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1LazyLock(String,int,boolean).$2.findNoLockDbSQL(EntityManager)",19,40
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1LazyLock(String,int,boolean).$2.findPessimisticForcIncDbSQL(EntityManager)",24,67
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1LazyLock(String,int,boolean).$2.queryPessimisticReadDbSQL(EntityManager)",23,71
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1LazyLock(String,int,boolean).$2.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager)",22,43
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1LazyLock(String,int,boolean).$2.namedQueryPessimisticWriteDbSql(EntityManager)",25,72
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1LazyLock(String,int,boolean).$2.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager)",23,44
org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.testNormalUni1x1JTLock(),5,10
org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.testExtendedUni1x1JTLock(),5,10
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1JTLock(String,int,boolean)",27,100
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1JTLock(String,int,boolean).$3.findNoLockDbSQL(EntityManager)",26,81
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1JTLock(String,int,boolean).$3.findPessimisticForcIncDbSQL(EntityManager)",52,219
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1JTLock(String,int,boolean).$3.queryPessimisticReadDbSQL(EntityManager)",50,218
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1JTLock(String,int,boolean).$3.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager)",29,84
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1JTLock(String,int,boolean).$3.namedQueryPessimisticWriteDbSql(EntityManager)",51,218
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1JTLock(String,int,boolean).$3.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager)",30,85
org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.testNormalUni1x1JTLazyLock(),6,13
org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.testExtendedUni1x1JTLazyLock(),6,13
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1JTLazyLock(String,int,boolean)",28,95
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1JTLazyLock(String,int,boolean).$4.findNoLockDbSQL(EntityManager)",18,39
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1JTLazyLock(String,int,boolean).$4.findPessimisticForcIncDbSQL(EntityManager)",24,67
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1JTLazyLock(String,int,boolean).$4.queryPessimisticReadDbSQL(EntityManager)",23,71
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1JTLazyLock(String,int,boolean).$4.findNoLockAfterQueryPessimisticReadDbSQL(EntityManager)",22,43
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1JTLazyLock(String,int,boolean).$4.namedQueryPessimisticWriteDbSql(EntityManager)",25,72
"org.apache.openjpa.persistence.lock.extended.Test1x1LockScope.common1x1JTLazyLock(String,int,boolean).$4.findNoLockAfterNamedQueryPessimisticWriteDbSql(EntityManager)",23,44
org.apache.openjpa.persistence.simple.Place.getLocation(),2,3
org.apache.openjpa.persistence.simple.Place.setLocation(String),3,6
org.apache.openjpa.persistence.relations.BidiParent.getId(),0,0
org.apache.openjpa.persistence.relations.BidiParent.getName(),2,3
org.apache.openjpa.persistence.relations.BidiParent.setName(String),3,6
org.apache.openjpa.persistence.relations.BidiParent.getOneToOneChild(),2,4
org.apache.openjpa.persistence.relations.BidiParent.setOneToOneChild(BidiChild),3,7
org.apache.openjpa.persistence.relations.BidiParent.getOneToManyChildren(),4,5
org.apache.openjpa.persistence.proxy.entities.IFixedAnnuity.getRate(),1,1
org.apache.openjpa.persistence.proxy.entities.IFixedAnnuity.setRate(Double),2,3
org.apache.openjpa.persistence.models.company.joined.FullTimeEmployee.setSalary(float),2,5
org.apache.openjpa.persistence.models.company.joined.FullTimeEmployee.getSalary(),1,2
org.apache.openjpa.persistence.xs.AccountingHierarchy.AccountingHierarchy(),2,2
org.apache.openjpa.persistence.xs.AccountingHierarchy.AccountingHierarchy(String),4,6
"org.apache.openjpa.persistence.xs.AccountingHierarchy.AccountingHierarchy(String,String)",5,10
"org.apache.openjpa.persistence.xs.AccountingHierarchy.AccountingHierarchy(String,String,String)",6,13
org.apache.openjpa.persistence.xs.AccountingHierarchy.getCode(),2,3
org.apache.openjpa.persistence.xs.AccountingHierarchy.getShortDesc(),2,3
org.apache.openjpa.persistence.xs.AccountingHierarchy.getAccRateList(),5,10
org.apache.openjpa.persistence.xs.AccountingHierarchy.setCode(String),3,6
org.apache.openjpa.persistence.xs.AccountingHierarchy.setShortDesc(String),3,6
org.apache.openjpa.persistence.xs.AccountingHierarchy.setAccRateList(List<AccountingHierarchyRate>),6,17
org.apache.openjpa.persistence.xs.AccountingHierarchy.hashCode(),4,12
org.apache.openjpa.persistence.xs.AccountingHierarchy.equals(Object),6,18
org.apache.openjpa.persistence.xs.AccountingHierarchy.getVersion(),1,2
org.apache.openjpa.persistence.xs.AccountingHierarchy.setVersion(Long),2,5
org.apache.openjpa.persistence.xs.AccountingHierarchy.toString(),5,8
org.apache.openjpa.persistence.query.ScheduledAssignment.ScheduledAssignment(),2,2
org.apache.openjpa.persistence.query.ScheduledAssignment.getId(),1,1
org.apache.openjpa.persistence.query.ScheduledAssignment.setId(Integer),2,2
org.apache.openjpa.persistence.query.ScheduledAssignment.getParentScheduledAssignment(),3,8
org.apache.openjpa.persistence.query.ScheduledAssignment.setParentScheduledAssignment(ScheduledAssignment),5,11
org.apache.openjpa.persistence.query.ScheduledAssignment.getScheduleDay(),2,6
org.apache.openjpa.persistence.query.ScheduledAssignment.setScheduleDay(ScheduleDay),3,11
org.apache.openjpa.persistence.query.ScheduledAssignment.getCase(),1,1
org.apache.openjpa.persistence.query.ScheduledAssignment.setCase(Case),2,4
org.apache.openjpa.persistence.query.ScheduledAssignment.getRole(),1,3
org.apache.openjpa.persistence.query.ScheduledAssignment.setRole(Role),3,6
org.apache.openjpa.persistence.query.ScheduledAssignment.getBrokenRuleLookup(),3,7
org.apache.openjpa.persistence.query.ScheduledAssignment.setBrokenRuleLookup(Lookup),4,14
org.apache.openjpa.persistence.query.ScheduledAssignment.getCaze(),1,2
org.apache.openjpa.persistence.query.ScheduledAssignment.setCaze(Case),2,5
org.apache.openjpa.persistence.query.ScheduledAssignment.getBrokenCustomRuleExplanation(),5,9
org.apache.openjpa.persistence.query.ScheduledAssignment.setBrokenCustomRuleExplanation(String),6,18
org.apache.openjpa.persistence.relations.TestTargetedIFaceRelations.setUp(),4,5
org.apache.openjpa.persistence.relations.TestTargetedIFaceRelations.testPersist(),17,69
org.apache.openjpa.persistence.relations.TestTargetedIFaceRelations.main(String[]),8,9
org.apache.openjpa.persistence.query.TestQueryIdOfRelationDoesNotJoin.setUp(),17,43
org.apache.openjpa.persistence.query.TestQueryIdOfRelationDoesNotJoin.testQuery(),17,30
org.apache.openjpa.persistence.query.TestQueryIdOfRelationDoesNotJoin.main(String[]),9,10
org.apache.openjpa.persistence.nullity.TimestampedEntity.TimestampedEntity(),6,7
org.apache.openjpa.persistence.nullity.TimestampedEntity.getId(),0,0
org.apache.openjpa.persistence.nullity.TimestampedEntity.setId(int),1,1
org.apache.openjpa.persistence.nullity.TimestampedEntity.getVersion(),1,2
org.apache.openjpa.persistence.nullity.TimestampedEntity.setVersion(int),2,5
org.apache.openjpa.persistence.nullity.TimestampedEntity.getNonInsertableNonNullableDate(),3,7
org.apache.openjpa.persistence.nullity.TimestampedEntity.setNonInsertableNonNullableDate(Date),4,14
org.apache.openjpa.persistence.nullity.TimestampedEntity.getNonUpdatableNonNullableDate(),3,7
org.apache.openjpa.persistence.nullity.TimestampedEntity.setNonUpdatableNonNullableDate(Date),4,14
org.apache.openjpa.persistence.kernel.common.apps.RecursivelyEmbeddedPC.getEmbedded(),1,3
org.apache.openjpa.persistence.kernel.common.apps.RecursivelyEmbeddedPC.setEmbedded(EmbeddedPC),2,6
org.apache.openjpa.persistence.util.LazyEntity.setId(int),1,1
org.apache.openjpa.persistence.util.LazyEntity.getId(),0,0
org.apache.openjpa.persistence.util.LazyEntity.setName(String),3,6
org.apache.openjpa.persistence.util.LazyEntity.getName(),2,3
org.apache.openjpa.persistence.util.LazyEntity.setLazyEmbed(LazyEmbed),3,11
org.apache.openjpa.persistence.util.LazyEntity.getLazyEmbed(),2,6
org.apache.openjpa.persistence.util.LazyEntity.setTransField(String),4,10
org.apache.openjpa.persistence.util.LazyEntity.getTransField(),3,5
org.apache.openjpa.persistence.util.LazyEntity.setLazyEmbedColl(List<LazyEmbed>),5,16
org.apache.openjpa.persistence.util.LazyEntity.getLazyEmbedColl(),4,9
org.apache.openjpa.persistence.util.LazyEntity.setRelEntities(List<RelEntity>),5,12
org.apache.openjpa.persistence.util.LazyEntity.getRelEntities(),4,7
org.apache.openjpa.persistence.util.LazyEntity.setRelEntity(RelEntity),3,11
org.apache.openjpa.persistence.util.LazyEntity.getRelEntity(),2,6
org.apache.openjpa.persistence.query.common.apps.CircularFKPC.getStringField(),2,5
org.apache.openjpa.persistence.query.common.apps.CircularFKPC.setStringField(String),3,10
org.apache.openjpa.persistence.query.common.apps.CircularFKPC.getFKField(),3,4
org.apache.openjpa.persistence.query.common.apps.CircularFKPC.setFKField(CircularFKPC2),4,7
org.apache.openjpa.persistence.simple.TestRefresh.setUp(),12,16
org.apache.openjpa.persistence.simple.TestRefresh.testFlushRefreshNewInstance(),12,28
org.apache.openjpa.persistence.simple.TestRefresh.testRefreshBypassL2Cache(),40,130
org.apache.openjpa.persistence.simple.TestRefresh.testCacheRetrieveModeSetting(),25,61
org.apache.openjpa.persistence.simple.TestRefresh.testCacheStoreModeSetting(),25,61
org.apache.openjpa.persistence.simple.TestRefresh.testRefreshAfterRemove(),18,37
org.apache.openjpa.persistence.simple.TestRefresh.testFindWithCacheRetrieveProperty(),37,175
org.apache.openjpa.persistence.simple.TestRefresh.testRefreshWithCacheRetrieveProperty(),39,212
"org.apache.openjpa.persistence.simple.TestRefresh.assertCached(Class<>,Object)",7,12
"org.apache.openjpa.persistence.simple.TestRefresh.assertNotCached(Class<>,Object)",7,12
org.apache.openjpa.persistence.xml.TestSchemaVersionValidation.test2_0PersistenceXml(),17,30
org.apache.openjpa.persistence.xml.TestSchemaVersionValidation.testBad2_0PersistenceXml(),35,54
org.apache.openjpa.persistence.xml.TestSchemaVersionValidation.test2_0Persistence1_0OrmXml(),20,45
org.apache.openjpa.persistence.xml.TestSchemaVersionValidation.test2_0Persistence2_0OrmXml(),20,45
org.apache.openjpa.persistence.xml.TestSchemaVersionValidation.test1_0Persistence2_0OrmXml(),17,41
org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.setUp(),2,3
org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.setUp(Object),11,27
"org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.findUserIdentity(EntityManager,int)",4,8
"org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.findDepartment(EntityManager,int)",3,5
org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.createUserIdentity(),3,9
"org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.createAccount(String,IUserIdentity)",7,12
org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.createDepartment(),2,5
org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.createMember(String),4,6
org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.createEmployee(),2,5
org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.createEmployees(),7,8
org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.createProducts(),7,8
org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.createAwards(),7,8
org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.createLocations(),7,8
org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.createCertifications(),7,8
org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.createAccounts(),7,8
"org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.getEmployee(Collection<IEmployee>,int)",5,11
"org.apache.openjpa.persistence.proxy.delayed.lhset.TestDelayedLinkedHashSetProxy.getProduct(Collection<Product>,int)",5,11
org.apache.openjpa.persistence.merge.TestMergeNew.setUp(),7,9
org.apache.openjpa.persistence.merge.TestMergeNew.testMergeNewParent(),25,154
org.apache.openjpa.persistence.merge.TestMergeNew.testMergeParentRoundTrip(),35,176
org.apache.openjpa.persistence.merge.TestMergeNew.populate(),13,19
org.apache.openjpa.persistence.simple.NamedEntity.getId(),0,0
org.apache.openjpa.persistence.simple.NamedEntity.getName(),2,3
org.apache.openjpa.persistence.simple.NamedEntity.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.llist.Member.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.llist.Member.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.llist.Member.setAccounts(Collection<IAccount>),5,9
org.apache.openjpa.persistence.proxy.delayed.llist.Member.getAccounts(),3,4
org.apache.openjpa.persistence.lock.extended.LSEEleColEgr.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSEEleColEgr.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSEEleColEgr.getFirstName(),2,3
org.apache.openjpa.persistence.lock.extended.LSEEleColEgr.setFirstName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSEEleColEgr.getCollection(),3,4
org.apache.openjpa.persistence.lock.extended.LSEEleColEgr.setCollection(Set<String>),3,7
org.apache.openjpa.persistence.lock.extended.LSEEleColEgr.addCollection(String),4,7
org.apache.openjpa.persistence.lock.extended.LSEEleColEgr.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSEEleColEgr.toString(),11,15
org.apache.openjpa.persistence.lock.extended.LSEEleColEgr.readExternal(ObjectInput),12,18
org.apache.openjpa.persistence.lock.extended.LSEEleColEgr.writeExternal(ObjectOutput),9,14
org.apache.openjpa.persistence.query.common.apps.RuntimeTest3.RuntimeTest3(),2,2
"org.apache.openjpa.persistence.query.common.apps.RuntimeTest3.RuntimeTest3(String,int)",4,5
org.apache.openjpa.persistence.query.common.apps.RuntimeTest3.getIntField3(),1,2
org.apache.openjpa.persistence.query.common.apps.RuntimeTest3.setIntField3(int),2,5
org.apache.openjpa.persistence.relations.DataStoreBasicEntity.getName(),2,3
org.apache.openjpa.persistence.relations.DataStoreBasicEntity.setName(String),3,6
org.apache.openjpa.persistence.relations.DataStoreBasicEntity.getRel(),3,4
org.apache.openjpa.persistence.relations.DataStoreBasicEntity.setRel(BasicEntity),4,7
org.apache.openjpa.persistence.kernel.TestStateManagerImplData.TestStateManagerImplData(),6,10
org.apache.openjpa.persistence.kernel.TestStateManagerImplData.TestStateManagerImplData(String),5,7
org.apache.openjpa.persistence.kernel.TestStateManagerImplData.setUp(),5,9
org.apache.openjpa.persistence.kernel.TestStateManagerImplData.setUpMetaData(ClassMetaData),5,26
org.apache.openjpa.persistence.kernel.TestStateManagerImplData.tearDownMetaData(),6,13
org.apache.openjpa.persistence.kernel.TestStateManagerImplData.testImplData(),20,116
org.apache.openjpa.persistence.kernel.TestStateManagerImplData.testNotClearedIfRetainValues(),4,12
org.apache.openjpa.persistence.kernel.TestStateManagerImplData.notClearedIfRetainValuesTest(boolean),32,133
org.apache.openjpa.persistence.proxy.delayed.llist.Department.setEmployees(Collection<IEmployee>),5,9
org.apache.openjpa.persistence.proxy.delayed.llist.Department.getEmployees(),3,4
org.apache.openjpa.persistence.proxy.delayed.llist.Department.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.llist.Department.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.llist.Department.setLocations(Collection<Location>),6,10
org.apache.openjpa.persistence.proxy.delayed.llist.Department.getLocations(),3,4
org.apache.openjpa.persistence.proxy.delayed.llist.Department.setProducts(Collection<Product>),5,9
org.apache.openjpa.persistence.proxy.delayed.llist.Department.getProducts(),3,4
org.apache.openjpa.persistence.proxy.delayed.llist.Department.setCertifications(Collection<Certification>),5,9
org.apache.openjpa.persistence.proxy.delayed.llist.Department.getCertifications(),3,4
org.apache.openjpa.persistence.proxy.delayed.llist.Department.setAwards(Collection<Award>),6,10
org.apache.openjpa.persistence.proxy.delayed.llist.Department.getAwards(),3,4
org.apache.openjpa.persistence.relations.MapKeyChild.getId(),0,0
org.apache.openjpa.persistence.relations.MapKeyChild.getParent(),3,5
org.apache.openjpa.persistence.relations.MapKeyChild.setParent(MapKeyParent),4,8
org.apache.openjpa.persistence.relations.MapKeyChild.getMapKey(),3,5
org.apache.openjpa.persistence.relations.MapKeyChild.setMapKey(String),4,10
org.apache.openjpa.persistence.managedinterface.ManagedInterfaceSup.getId(),0,0
org.apache.openjpa.persistence.managedinterface.ManagedInterfaceSup.setId(int),1,1
org.apache.openjpa.persistence.managedinterface.ManagedInterfaceSup.getIntFieldSup(),2,2
org.apache.openjpa.persistence.managedinterface.ManagedInterfaceSup.setIntFieldSup(int),3,3
org.apache.openjpa.persistence.merge.Child.getParent(),1,3
org.apache.openjpa.persistence.merge.Child.setParent(Parent),2,6
org.apache.openjpa.persistence.merge.Child.getChildKey(),3,5
org.apache.openjpa.persistence.merge.Child.setChildKey(Integer),4,10
org.apache.openjpa.persistence.merge.Child.getGrandChilds(),4,7
org.apache.openjpa.persistence.merge.Child.setGrandChilds(Collection<GrandChild>),5,12
org.apache.openjpa.persistence.merge.Child.hashCode(),9,30
org.apache.openjpa.persistence.merge.Child.equals(Object),8,32
org.apache.openjpa.persistence.models.company.basic.Employee.setManager(IFullTimeEmployee),4,9
org.apache.openjpa.persistence.models.company.basic.Employee.getManager(),3,4
org.apache.openjpa.persistence.models.company.basic.Employee.setCompany(ICompany),2,7
org.apache.openjpa.persistence.models.company.basic.Employee.getCompany(),1,3
org.apache.openjpa.persistence.models.company.basic.Employee.setTitle(String),3,6
org.apache.openjpa.persistence.models.company.basic.Employee.getTitle(),2,3
org.apache.openjpa.persistence.models.company.basic.Employee.setHireDate(Date),3,10
org.apache.openjpa.persistence.models.company.basic.Employee.getHireDate(),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionC.setIntField(int),2,5
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionC.getIntField(),1,2
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionC.setPc(AttachVersionA),3,3
org.apache.openjpa.persistence.kernel.common.apps.AttachVersionC.getPc(),2,2
org.apache.openjpa.persistence.query.results.TestResultSetMapping.setUp(),4,5
org.apache.openjpa.persistence.query.results.TestResultSetMapping.testQuery(),29,63
org.apache.openjpa.persistence.proxy.delayed.hset.UserIdentity.setMember(IMember),1,1
org.apache.openjpa.persistence.proxy.delayed.hset.UserIdentity.getMember(),0,0
org.apache.openjpa.persistence.proxy.delayed.hset.UserIdentity.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.hset.UserIdentity.getId(),0,0
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.getIntField(),1,1
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.setIntField(int),2,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.getEmbed(),2,3
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.setEmbed(ManagedInterfaceEmbed),3,5
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.getSelf(),2,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.setSelf(ManagedInterface),4,4
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.getSetInteger(),2,3
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.setSetInteger(Set),3,5
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.getSetPC(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.setSetPC(Set),2,4
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.getSetI(),1,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.setSetI(Set),2,4
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.getPC(),2,2
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.setPC(RuntimeTest1),3,3
org.apache.openjpa.persistence.kernel.common.apps.ManagedInterface.unimplemented(),1,1
org.apache.openjpa.persistence.models.company.fetchlazy.Company.setName(String),3,6
org.apache.openjpa.persistence.models.company.fetchlazy.Company.getName(),2,3
org.apache.openjpa.persistence.models.company.fetchlazy.Company.setAddress(IAddress),2,7
org.apache.openjpa.persistence.models.company.fetchlazy.Company.getAddress(),1,3
org.apache.openjpa.persistence.models.company.fetchlazy.Company.setEmployees(Set<>),3,9
org.apache.openjpa.persistence.models.company.fetchlazy.Company.getEmployees(),3,4
org.apache.openjpa.persistence.models.company.fetchlazy.Company.setProducts(Set<>),3,9
org.apache.openjpa.persistence.models.company.fetchlazy.Company.getProducts(),3,4
org.apache.openjpa.persistence.models.company.fetchlazy.Company.setId(long),1,1
org.apache.openjpa.persistence.models.company.fetchlazy.Company.getId(),0,0
org.apache.openjpa.persistence.relations.GrandChildClass.getSomeUnloadedString(),3,5
org.apache.openjpa.persistence.relations.GrandChildClass.toString(),3,7
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.USAAddress.getState(),5,6
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.USAAddress.setState(String),9,13
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.USAAddress.getZIP(),3,5
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.USAAddress.setZIP(int),5,9
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.USAAddress.toString(),4,14
org.apache.openjpa.persistence.xml.TestPersistenceUnitWithoutXSD.testPersistenceUnitWithoutXSD(),16,31
org.apache.openjpa.persistence.xml.TestPersistenceUnitWithoutXSD.testEnhancer(),13,17
org.apache.openjpa.persistence.proxy.delayed.vec.Employee.setEmpName(String),4,10
org.apache.openjpa.persistence.proxy.delayed.vec.Employee.getEmpName(),3,5
org.apache.openjpa.persistence.proxy.delayed.vec.Employee.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.vec.Employee.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.vec.Employee.setDept(IDepartment),3,6
org.apache.openjpa.persistence.proxy.delayed.vec.Employee.getDept(),2,3
org.apache.openjpa.persistence.proxy.delayed.vec.Employee.hashCode(),2,2
org.apache.openjpa.persistence.proxy.delayed.vec.Employee.equals(Object),6,13
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.Address.getName(),6,9
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.Address.setName(String),10,16
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.Address.getStreet(),27,41
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.Address.setStreet(List<String>),9,16
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.Address.getCity(),6,9
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.Address.setCity(String),10,16
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.Address.toString(),7,15
org.apache.openjpa.persistence.proxy.delayed.tset.Member.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.tset.Member.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.tset.Member.setAccounts(Collection<IAccount>),6,10
org.apache.openjpa.persistence.proxy.delayed.tset.Member.getAccounts(),3,4
"org.apache.openjpa.persistence.proxy.entities.StringParameterizable.addParameter(String,String)",6,9
org.apache.openjpa.persistence.proxy.entities.StringParameterizable.getParameters(),4,5
org.apache.openjpa.persistence.proxy.entities.StringParameterizable.removeParameter(String),5,7
org.apache.openjpa.persistence.proxy.entities.StringParameterizable.clearAllParameters(),2,2
org.apache.openjpa.persistence.proxy.entities.StringParameterizable.getParameterValue(String),5,7
"org.apache.openjpa.persistence.proxy.entities.StringParameterizable.addAllParams(Map<String,String>)",4,9
org.apache.openjpa.persistence.puconf.TestPersistenceUnitConfig.TestPersistenceUnitConfig(),10,13
org.apache.openjpa.persistence.puconf.TestPersistenceUnitConfig.createEmf(String),12,19
org.apache.openjpa.persistence.puconf.TestPersistenceUnitConfig.testCreateEMFWithGoodPU(),12,21
org.apache.openjpa.persistence.puconf.TestPersistenceUnitConfig.testCreateEMFWithBadJarFileElement(),15,24
org.apache.openjpa.persistence.puconf.TestPersistenceUnitConfig.testCreateEMFWithNonOpenJPAProvider(),22,42
org.apache.openjpa.persistence.puconf.TestPersistenceUnitConfig.testCreateEMFWithBadJarFileElementAndNonOpenJPAProvider(),26,49
org.apache.openjpa.persistence.proxy.entities.EquityAnnuity.getFundNames(),3,5
org.apache.openjpa.persistence.proxy.entities.EquityAnnuity.setFundNames(String),4,10
org.apache.openjpa.persistence.proxy.entities.EquityAnnuity.getIndexRate(),2,4
org.apache.openjpa.persistence.proxy.entities.EquityAnnuity.setIndexRate(Double),14,31
org.apache.openjpa.persistence.query.TestDoubleQuotedStringLiteralInJPQL.setUp(),18,54
org.apache.openjpa.persistence.query.TestDoubleQuotedStringLiteralInJPQL.testdDoubleQuotedStringLiteralInJPQL(),21,69
org.apache.openjpa.persistence.query.TestEscapedSingleQuotesInJPQL.setUp(),16,28
org.apache.openjpa.persistence.query.TestEscapedSingleQuotesInJPQL.testEscapedSingleQuotesInJPQL(),24,42
org.apache.openjpa.persistence.query.ManyOneEntity.getId(),0,0
org.apache.openjpa.persistence.query.ManyOneEntity.getRel(),2,3
org.apache.openjpa.persistence.query.ManyOneEntity.setRel(ManyOneEntity),3,6
org.apache.openjpa.persistence.query.ManyOneEntity.getName(),2,3
org.apache.openjpa.persistence.query.ManyOneEntity.setName(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.NonMappedInterfaceImpl.getIntField(),2,2
org.apache.openjpa.persistence.kernel.common.apps.NonMappedInterfaceImpl.setIntField(int),3,3
org.apache.openjpa.persistence.models.company.fetchlazy.Customer.setOrders(Collection<>),3,5
org.apache.openjpa.persistence.models.company.fetchlazy.Customer.getOrders(),2,2
org.apache.openjpa.persistence.models.company.fetchlazy.Customer.setShippingAddress(IAddress),3,11
org.apache.openjpa.persistence.models.company.fetchlazy.Customer.getShippingAddress(),2,5
org.apache.openjpa.persistence.models.company.fetchlazy.Customer.setBillingAddress(IAddress),3,11
org.apache.openjpa.persistence.models.company.fetchlazy.Customer.getBillingAddress(),2,5
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned.SequenceAssigned(),2,2
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned.SequenceAssigned(long),2,2
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned.setPK(long),1,1
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned.getPK(),0,0
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned.setOther(SequenceAssigned),3,3
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned.getOther(),2,2
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned.SeqId.SeqId(),1,1
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned.SeqId.SeqId(String),4,5
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned.SeqId.hashCode(),5,5
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned.SeqId.toString(),1,2
org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned.SeqId.equals(Object),3,4
org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.setUp(),7,8
org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.createData(),16,48
org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.tearDown(),2,3
org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.testQueryWithTransientInstanceAsParameter(),9,22
org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.testQueryWithUnmanagedPersistentInstanceAsParameter(),12,28
org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.testQueryWithManagedPersistentInstanceAsParameter(),12,28
"org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.queryWithParameter(EntityManager,Projekt,Projekt)",22,54
"org.apache.openjpa.persistence.query.TestNewEntityAsQueryParameter.link(Osoba,Projekt)",5,7
org.apache.openjpa.persistence.models.company.joined.Customer.setOrders(Collection<>),3,5
org.apache.openjpa.persistence.models.company.joined.Customer.getOrders(),2,2
org.apache.openjpa.persistence.models.company.joined.Customer.setShippingAddress(IAddress),3,11
org.apache.openjpa.persistence.models.company.joined.Customer.getShippingAddress(),2,5
org.apache.openjpa.persistence.models.company.joined.Customer.setBillingAddress(IAddress),3,11
org.apache.openjpa.persistence.models.company.joined.Customer.getBillingAddress(),2,5
org.apache.openjpa.persistence.query.common.apps.ComplexG.ComplexG(),1,1
"org.apache.openjpa.persistence.query.common.apps.ComplexG.ComplexG(String,int,Date,ComplexF)",3,10
org.apache.openjpa.persistence.query.common.apps.ComplexG.setStringG(String),2,6
org.apache.openjpa.persistence.query.common.apps.ComplexG.getStringG(),1,3
org.apache.openjpa.persistence.query.common.apps.ComplexG.setIntG(int),1,1
org.apache.openjpa.persistence.query.common.apps.ComplexG.getIntG(),0,0
org.apache.openjpa.persistence.query.common.apps.ComplexG.setDateG(Date),2,6
org.apache.openjpa.persistence.query.common.apps.ComplexG.getDateG(),1,3
org.apache.openjpa.persistence.query.common.apps.ComplexG.setF(ComplexF),2,2
org.apache.openjpa.persistence.query.common.apps.ComplexG.getF(),1,1
org.apache.openjpa.persistence.relations.ParentClass.ParentClass(),1,1
org.apache.openjpa.persistence.relations.ParentClass.getItems(),3,4
org.apache.openjpa.persistence.relations.ParentClass.setItems(Collection<String>),5,8
org.apache.openjpa.persistence.kernel.common.apps.PCDepartment.PCDepartment(),1,1
org.apache.openjpa.persistence.kernel.common.apps.PCDepartment.PCDepartment(String),4,6
org.apache.openjpa.persistence.kernel.common.apps.PCDepartment.getCompany(),1,3
org.apache.openjpa.persistence.kernel.common.apps.PCDepartment.setCompany(PCCompany),2,6
org.apache.openjpa.persistence.kernel.common.apps.PCDepartment.getName(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCDepartment.setName(String),3,6
org.apache.openjpa.persistence.kernel.common.apps.PCDepartment.getEmployees(),2,3
org.apache.openjpa.persistence.kernel.common.apps.PCDepartment.setEmployees(Set),2,6
org.apache.openjpa.persistence.kernel.common.apps.PCDepartment.addEmployee(PCEmployee),7,14
org.apache.openjpa.persistence.kernel.common.apps.PCDepartment.contains(PCEmployee),4,7
"org.apache.openjpa.persistence.kernel.common.apps.PCDepartment.reflect(PCDepartment,String)",10,15
org.apache.openjpa.persistence.merge.model.ShipPackage.setId(long),2,3
org.apache.openjpa.persistence.merge.model.ShipPackage.getId(),0,0
org.apache.openjpa.persistence.merge.model.ShipPackage.setLabel(Label),2,4
org.apache.openjpa.persistence.merge.model.ShipPackage.getLabel(),1,3
org.apache.openjpa.persistence.relations.TestJoinedInheritanceHierarchy.setUp(),5,8
org.apache.openjpa.persistence.relations.TestJoinedInheritanceHierarchy.testInverseRelationNotNull(),28,84
org.apache.openjpa.persistence.lifecycle.TestMergeAndPersistWithManagedRelation.setUp(),15,31
org.apache.openjpa.persistence.lifecycle.TestMergeAndPersistWithManagedRelation.testPersistWithManagedRelation(),16,35
org.apache.openjpa.persistence.lifecycle.TestMergeAndPersistWithManagedRelation.testMergeWithManagedRelation(),16,36
org.apache.openjpa.persistence.querycache.QCEntity.QCEntity(),1,1
"org.apache.openjpa.persistence.querycache.QCEntity.QCEntity(String,String,Long)",4,9
org.apache.openjpa.persistence.querycache.QCEntity.getPk(),1,1
org.apache.openjpa.persistence.querycache.QCEntity.setPk(String),2,2
org.apache.openjpa.persistence.querycache.QCEntity.getDescription(),2,3
org.apache.openjpa.persistence.querycache.QCEntity.setDescription(String),3,6
org.apache.openjpa.persistence.querycache.QCEntity.getAmount(),1,2
org.apache.openjpa.persistence.querycache.QCEntity.setAmount(Long),2,5
org.apache.openjpa.persistence.merge.GrandChild.getChild(),1,3
org.apache.openjpa.persistence.merge.GrandChild.setChild(Child),2,6
org.apache.openjpa.persistence.merge.GrandChild.hashCode(),5,12
org.apache.openjpa.persistence.merge.GrandChild.equals(Object),5,16
org.apache.openjpa.persistence.merge.GrandChild.getGrandChildKey(),4,7
org.apache.openjpa.persistence.merge.GrandChild.setGrandChildKey(Integer),5,14
org.apache.openjpa.persistence.relations.TestOneToManyWithEagerLazyFetch.setUp(),21,92
org.apache.openjpa.persistence.relations.TestOneToManyWithEagerLazyFetch.testLoadedOneToManyCount(),31,84
org.apache.openjpa.persistence.relations.TestOneToManyWithEagerLazyFetch.main(String[]),9,10
org.apache.openjpa.persistence.meta.Embed1.getF1(),1,1
org.apache.openjpa.persistence.meta.Embed1.setF1(String),2,2
org.apache.openjpa.persistence.meta.Embed1.getEntity0(),5,6
org.apache.openjpa.persistence.meta.Embed1.setEntity0(ImplicitFieldAccessBase),6,9
org.apache.openjpa.persistence.relations.EntityAInverseEager.EntityAInverseEager(),3,3
org.apache.openjpa.persistence.relations.EntityAInverseEager.EntityAInverseEager(String),5,7
org.apache.openjpa.persistence.relations.EntityAInverseEager.getListB(),4,6
org.apache.openjpa.persistence.relations.EntityAInverseEager.addB(EntityBInverseEager),5,10
org.apache.openjpa.persistence.relations.EntityAInverseEager.getId(),0,0
org.apache.openjpa.persistence.relations.EntityAInverseEager.getName(),2,3
org.apache.openjpa.persistence.relations.EntityAInverseEager.setName(String),3,6
org.apache.openjpa.persistence.relations.entity.LrsEntityB.LrsEntityB(),5,5
org.apache.openjpa.persistence.relations.entity.LrsEntityB.LrsEntityB(String),6,7
"org.apache.openjpa.persistence.relations.entity.LrsEntityB.LrsEntityB(String,LrsEntityA)",8,15
org.apache.openjpa.persistence.relations.entity.LrsEntityB.getEntitya(),3,4
org.apache.openjpa.persistence.relations.entity.LrsEntityB.setEntitya(LrsEntityA),6,11
org.apache.openjpa.persistence.relations.entity.LrsEntityB.getId(),1,1
org.apache.openjpa.persistence.relations.entity.LrsEntityB.getName(),2,3
org.apache.openjpa.persistence.relations.entity.LrsEntityB.setName(String),3,6
org.apache.openjpa.persistence.query.common.apps.Projekt.Projekt(),1,1
org.apache.openjpa.persistence.query.common.apps.Projekt.Projekt(String),3,5
org.apache.openjpa.persistence.query.common.apps.Projekt.getName(),2,3
org.apache.openjpa.persistence.query.common.apps.Projekt.setName(String),3,6
org.apache.openjpa.persistence.query.common.apps.Projekt.getOsoby(),3,4
org.apache.openjpa.persistence.query.common.apps.Projekt.addOsoba(Osoba),5,12
org.apache.openjpa.persistence.proxy.delayed.IUserIdentity.setMember(IMember),1,1
org.apache.openjpa.persistence.proxy.delayed.IUserIdentity.getMember(),0,0
org.apache.openjpa.persistence.proxy.delayed.IUserIdentity.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.IUserIdentity.getId(),0,0
org.apache.openjpa.persistence.relations.CascadingOneManyChild.getId(),0,0
org.apache.openjpa.persistence.relations.CascadingOneManyChild.getName(),2,3
org.apache.openjpa.persistence.relations.CascadingOneManyChild.setName(String),3,6
org.apache.openjpa.persistence.relations.CascadingOneManyChild.getParent(),2,4
org.apache.openjpa.persistence.relations.CascadingOneManyChild.setParent(CascadingOneManyParent),3,7
org.apache.openjpa.persistence.simple.TestEntityManagerMerge.setUp(),6,7
org.apache.openjpa.persistence.simple.TestEntityManagerMerge.testMerge(),26,129
org.apache.openjpa.persistence.simple.TestEntityManagerMerge.testMergeExistingEntity(),27,58
org.apache.openjpa.persistence.simple.TestEntityManagerMerge.main(String[]),9,10
org.apache.openjpa.persistence.proxy.delayed.llist.Account.Account(),1,1
"org.apache.openjpa.persistence.proxy.delayed.llist.Account.Account(String,IUserIdentity)",8,13
org.apache.openjpa.persistence.proxy.delayed.llist.Account.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.llist.Account.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.llist.Account.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.llist.Account.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.llist.Account.setUserIdent(IUserIdentity),4,13
org.apache.openjpa.persistence.proxy.delayed.llist.Account.getUserIdent(),3,6
org.apache.openjpa.persistence.models.company.ILineItem.setQuantity(int),2,3
org.apache.openjpa.persistence.models.company.ILineItem.getQuantity(),1,1
org.apache.openjpa.persistence.models.company.ILineItem.setProduct(IProduct),2,4
org.apache.openjpa.persistence.models.company.ILineItem.getProduct(),1,2
org.apache.openjpa.persistence.temporal.TestTemporalTimestamp.setUp(),20,31
org.apache.openjpa.persistence.temporal.TestTemporalTimestamp.testNoRounding(),16,61
org.apache.openjpa.persistence.temporal.TestTemporalTimestamp.testRounding(),27,79
org.apache.openjpa.persistence.temporal.TestTemporalTimestamp.findAll(EntityManager),11,35
org.apache.openjpa.persistence.temporal.TestTemporalTimestamp.loadDB(),19,35
org.apache.openjpa.persistence.proxy.entities.Address.getCity(),2,3
org.apache.openjpa.persistence.proxy.entities.Address.setCity(String),3,6
org.apache.openjpa.persistence.proxy.entities.Address.getCountry(),2,3
org.apache.openjpa.persistence.proxy.entities.Address.setCountry(String),3,6
org.apache.openjpa.persistence.proxy.entities.Address.getLine1(),2,3
org.apache.openjpa.persistence.proxy.entities.Address.setLine1(String),3,6
org.apache.openjpa.persistence.proxy.entities.Address.getLine2(),2,3
org.apache.openjpa.persistence.proxy.entities.Address.setLine2(String),3,6
org.apache.openjpa.persistence.proxy.entities.Address.getState(),1,1
org.apache.openjpa.persistence.proxy.entities.Address.setState(String),2,2
org.apache.openjpa.persistence.proxy.entities.Address.getZipCode(),3,5
org.apache.openjpa.persistence.proxy.entities.Address.setZipCode(String),4,10
org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxyDetachLite.setUp(),8,11
org.apache.openjpa.persistence.proxy.delayed.alist.TestDelayedArrayListProxyDetachLite.testPostDetach(),52,125
"org.apache.openjpa.slice.SliceThread.SliceThread(String,Thread,Runnable)",6,10
"org.apache.openjpa.slice.SliceThread.SliceThread(Thread,Runnable)",4,7
org.apache.openjpa.slice.SliceThread.getParent(),3,6
org.apache.openjpa.slice.SliceThread.getPool(),8,13
org.apache.openjpa.slice.SliceThread.SliceThreadFactory.newThread(Runnable),6,14
org.apache.openjpa.persistence.xml.SimpleXmlEntity.getId(),1,1
org.apache.openjpa.persistence.xml.SimpleXmlEntity.getStringField(),2,5
org.apache.openjpa.persistence.xml.SimpleXmlEntity.setStringField(String),3,10
org.apache.openjpa.persistence.query.TestQueryExpressionSplit.TestQueryExpressionSplit(String),5,7
org.apache.openjpa.persistence.query.TestQueryExpressionSplit.testSimple(),12,30
org.apache.openjpa.persistence.query.TestQueryExpressionSplit.testCommaInString(),11,27
org.apache.openjpa.persistence.query.TestQueryExpressionSplit.testCommaInFunction(),15,24
org.apache.openjpa.persistence.query.TestQueryExpressionSplit.testEscapedString(),12,18
"org.apache.openjpa.persistence.query.TestQueryExpressionSplit.assertEquals(String[],List)",6,12
org.apache.openjpa.persistence.test.SingleEMTestCase.setUp(),2,3
org.apache.openjpa.persistence.test.SingleEMTestCase.setUp(Object),7,9
org.apache.openjpa.persistence.test.SingleEMTestCase.reset(),8,10
org.apache.openjpa.persistence.test.SingleEMTestCase.tearDown(),3,4
org.apache.openjpa.persistence.test.SingleEMTestCase.begin(),9,14
org.apache.openjpa.persistence.test.SingleEMTestCase.commit(),6,12
org.apache.openjpa.persistence.test.SingleEMTestCase.rollback(),6,12
org.apache.openjpa.persistence.test.SingleEMTestCase.close(),7,10
org.apache.openjpa.persistence.test.SingleEMTestCase.remove(Object),14,18
org.apache.openjpa.persistence.test.SingleEMTestCase.persist(Object),13,18
org.apache.openjpa.persistence.test.SingleEMTestCase.query(String),10,15
"org.apache.openjpa.persistence.test.SingleEMTestCase.query(Class,String,Object)",22,50
"org.apache.openjpa.persistence.test.SingleEMTestCase.find(Class<E>,String,Object)",19,33
org.apache.openjpa.persistence.test.SingleEMTestCase.find(Class<E>),5,6
org.apache.openjpa.persistence.proxy.entities.IEquityAnnuity.getFundNames(),3,3
org.apache.openjpa.persistence.proxy.entities.IEquityAnnuity.setFundNames(String),4,6
org.apache.openjpa.persistence.proxy.entities.IEquityAnnuity.getIndexRate(),2,2
org.apache.openjpa.persistence.proxy.entities.IEquityAnnuity.setIndexRate(Double),3,5
org.apache.openjpa.persistence.models.company.fetchlazy.PartTimeEmployee.setWage(float),2,5
org.apache.openjpa.persistence.models.company.fetchlazy.PartTimeEmployee.getWage(),1,2
org.apache.openjpa.persistence.models.company.fetchlazy.PartTimeEmployee.setWeeklyHours(int),3,9
org.apache.openjpa.persistence.models.company.fetchlazy.PartTimeEmployee.getWeeklyHours(),2,4
org.apache.openjpa.persistence.query.Publisher.getId(),0,0
org.apache.openjpa.persistence.query.Publisher.setId(int),1,1
org.apache.openjpa.persistence.query.Publisher.getName(),2,3
org.apache.openjpa.persistence.query.Publisher.setName(String),3,6
org.apache.openjpa.persistence.query.Publisher.getMagazineCollection(),3,6
org.apache.openjpa.persistence.query.Publisher.setMagazineCollection(Set<Magazine>),3,11
org.apache.openjpa.persistence.query.Publisher.toString(),2,3
org.apache.openjpa.persistence.simple.Item.getItemData(),3,5
org.apache.openjpa.persistence.simple.Item.setItemData(String),4,10
org.apache.openjpa.persistence.simple.Item.getItemId(),1,2
org.apache.openjpa.persistence.simple.Item.setItemId(int),2,5
org.apache.openjpa.persistence.simple.Item.getItemName(),3,5
org.apache.openjpa.persistence.simple.Item.setItemName(String),4,10
org.apache.openjpa.persistence.simple.Item.getItemPrice(),5,7
org.apache.openjpa.persistence.simple.Item.setItemPrice(java.math.BigDecimal),6,12
org.apache.openjpa.persistence.models.company.joined.PartTimeEmployee.setWage(float),2,5
org.apache.openjpa.persistence.models.company.joined.PartTimeEmployee.getWage(),1,2
org.apache.openjpa.persistence.models.company.joined.PartTimeEmployee.setWeeklyHours(int),3,9
org.apache.openjpa.persistence.models.company.joined.PartTimeEmployee.getWeeklyHours(),2,4
org.apache.openjpa.persistence.util.EagerEmbed.setStartDate(Date),3,10
org.apache.openjpa.persistence.util.EagerEmbed.getStartDate(),2,5
org.apache.openjpa.persistence.util.EagerEmbed.setEndDate(Date),2,6
org.apache.openjpa.persistence.util.EagerEmbed.getEndDate(),1,3
org.apache.openjpa.persistence.models.company.basic.ProductOrder.setItems(List<>),5,11
org.apache.openjpa.persistence.models.company.basic.ProductOrder.getItems(),4,5
org.apache.openjpa.persistence.models.company.basic.ProductOrder.setOrderDate(Date),2,6
org.apache.openjpa.persistence.models.company.basic.ProductOrder.getOrderDate(),1,3
org.apache.openjpa.persistence.models.company.basic.ProductOrder.setShippedDate(Date),3,10
org.apache.openjpa.persistence.models.company.basic.ProductOrder.getShippedDate(),2,5
org.apache.openjpa.persistence.models.company.basic.ProductOrder.setCustomer(ICustomer),2,7
org.apache.openjpa.persistence.models.company.basic.ProductOrder.getCustomer(),1,3
org.apache.openjpa.persistence.models.company.basic.ProductOrder.setId(long),1,1
org.apache.openjpa.persistence.models.company.basic.ProductOrder.getId(),0,0
org.apache.openjpa.persistence.lockmgr.Employee.getId(),0,0
org.apache.openjpa.persistence.lockmgr.Employee.setId(int),1,1
org.apache.openjpa.persistence.lockmgr.Employee.getFirstName(),2,3
org.apache.openjpa.persistence.lockmgr.Employee.setFirstName(String),3,6
org.apache.openjpa.persistence.lockmgr.Employee.getLastName(),2,3
org.apache.openjpa.persistence.lockmgr.Employee.setLastName(String),3,6
org.apache.openjpa.persistence.lockmgr.Employee.getDepartment(),1,3
org.apache.openjpa.persistence.lockmgr.Employee.setDepartment(Department),2,6
org.apache.openjpa.persistence.lockmgr.Employee.toString(),8,12
org.apache.openjpa.persistence.lockmgr.Employee.readExternal(ObjectInput),8,16
org.apache.openjpa.persistence.lockmgr.Employee.writeExternal(ObjectOutput),6,12
org.apache.openjpa.persistence.querycache.common.apps.Entity1.Entity1(),1,1
"org.apache.openjpa.persistence.querycache.common.apps.Entity1.Entity1(long,String,int)",3,11
org.apache.openjpa.persistence.querycache.common.apps.Entity1.getPk(),0,0
org.apache.openjpa.persistence.querycache.common.apps.Entity1.setStringField(String),4,8
org.apache.openjpa.persistence.querycache.common.apps.Entity1.getStringField(),2,5
org.apache.openjpa.persistence.querycache.common.apps.Entity1.setIntField(int),3,5
org.apache.openjpa.persistence.querycache.common.apps.Entity1.getIntField(),1,2
org.apache.openjpa.persistence.querycache.common.apps.Entity1.setEntity2Field(Entity2),4,8
org.apache.openjpa.persistence.querycache.common.apps.Entity1.getEntity2Field(),2,5
org.apache.openjpa.persistence.querycache.common.apps.Entity1.toString(),2,8
org.apache.openjpa.persistence.simple.TestFlushBeforeDetach.setUp(),10,12
org.apache.openjpa.persistence.simple.TestFlushBeforeDetach.persistSampleEntity(),12,19
org.apache.openjpa.persistence.simple.TestFlushBeforeDetach.testClear(),15,21
org.apache.openjpa.persistence.simple.TestFlushBeforeDetach.testDetach(),19,27
org.apache.openjpa.persistence.simple.TestFlushBeforeDetach.testDetachAll(),19,27
org.apache.openjpa.persistence.simple.TestFlushBeforeDetach.testDetachAllCollection(),23,34
org.apache.openjpa.persistence.simple.TestFlushBeforeDetach.testSerialize(),18,26
org.apache.openjpa.persistence.simple.TestFlushBeforeDetach.serializeObject(Object),17,58
org.apache.openjpa.persistence.util.MapKeyEmbed.setFirstName(String),3,6
org.apache.openjpa.persistence.util.MapKeyEmbed.getFirstName(),2,3
org.apache.openjpa.persistence.util.MapKeyEmbed.setLastName(String),3,6
org.apache.openjpa.persistence.util.MapKeyEmbed.getLastName(),2,3
org.apache.openjpa.persistence.simple.TestTableNamesDefaultToEntityNames.setUp(),3,4
org.apache.openjpa.persistence.simple.TestTableNamesDefaultToEntityNames.testEntityNames(),14,17
org.apache.openjpa.persistence.relations.TestJoinedInheritanceHierarchyWithCache.setUp(),17,25
org.apache.openjpa.persistence.relations.TestJoinedInheritanceHierarchyWithCache.testCacheSqlGeneration(),34,134
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.setUp(),11,13
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testNullOnOptionalFieldIsAllowed(),8,10
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testNullOnNonOptionalFieldIsDisallowed(),10,12
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testNotNullOnOptionalFieldIsAllowed(),7,8
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testNotNullOnNonOptionalFieldIsAllowed(),7,8
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testNullOnNullableColumnAllowed(),8,10
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testNullOnNonNullableColumnIsDisallowed(),10,12
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testNotNullOnNullableColumnIsAllowed(),7,8
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testNotNullOnNonNullableColumnIsAllowed(),7,8
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testNullOnOptionalBlobFieldIsAllowed(),9,12
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testNullOnNonOptionalBlobFieldIsDisallowed(),11,14
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testNullOnNullableBlobColumnAllowed(),9,12
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testNullOnNonNullableBlobColumnIsDisallowed(),11,14
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testX(),15,17
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testUniqueStringColumnCanBeNull(),9,14
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testUniqueStringColumnAsNull(),20,43
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.testUniqueStringColumnAsEmpty(),27,81
org.apache.openjpa.persistence.nullity.TestBasicFieldNullity.isUniqueColumnNullable(),9,12
org.apache.openjpa.persistence.sequence.EntityPerson.EntityPerson(),2,2
"org.apache.openjpa.persistence.sequence.EntityPerson.EntityPerson(String,String)",4,10
org.apache.openjpa.persistence.sequence.EntityPerson.getId(),0,0
org.apache.openjpa.persistence.sequence.EntityPerson.setId(int),1,1
org.apache.openjpa.persistence.sequence.EntityPerson.getFirstName(),2,3
org.apache.openjpa.persistence.sequence.EntityPerson.setFirstName(String),3,6
org.apache.openjpa.persistence.sequence.EntityPerson.getLastName(),2,3
org.apache.openjpa.persistence.sequence.EntityPerson.setLastName(String),3,6
org.apache.openjpa.persistence.sequence.EntityPerson.toString(),4,9
org.apache.openjpa.persistence.sequence.EntityPerson.hashCode(),5,22
org.apache.openjpa.persistence.sequence.EntityPerson.equals(Object),6,21
org.apache.openjpa.persistence.relations.TestBulkUpdatesAndEmbeddedFields.setUp(),14,27
org.apache.openjpa.persistence.relations.TestBulkUpdatesAndEmbeddedFields.testBulkUpdateOfEmbeddedField(),18,22
org.apache.openjpa.persistence.simple.TestPersistence.setUp(),3,4
org.apache.openjpa.persistence.simple.TestPersistence.testCreateEntityManager(),19,45
org.apache.openjpa.persistence.simple.TestPersistence.testPersist(),12,16
org.apache.openjpa.persistence.simple.TestPersistence.testQuery(),24,71
org.apache.openjpa.persistence.simple.TestPersistence.testNewDeleteNew(),19,48
org.apache.openjpa.persistence.simple.TestPersistence.main(String[]),7,8
org.apache.openjpa.persistence.proxy.AbstractEntity.getId(),0,0
org.apache.openjpa.persistence.proxy.AbstractEntity.getItems(),4,5
org.apache.openjpa.persistence.proxy.AbstractEntity.addItem(ConcreteEntity),8,13
org.apache.openjpa.persistence.spring.TestLibService.getTransactionalEntityManager(),15,26
org.apache.openjpa.persistence.spring.TestLibService.setUp(),26,55
org.apache.openjpa.persistence.spring.TestLibService.tearDown(),3,4
org.apache.openjpa.persistence.spring.TestLibService.testFindBookByTitle(),32,100
org.apache.openjpa.persistence.spring.TestLibService.testFindBorrowerByName(),18,37
org.apache.openjpa.persistence.spring.TestLibService.testBorrowBook(),32,119
org.apache.openjpa.persistence.spring.TestLibService.testReturnBook(),25,70
org.apache.openjpa.persistence.relations.Util1xmLf.getId(),0,0
org.apache.openjpa.persistence.relations.Util1xmLf.getVersion(),1,2
org.apache.openjpa.persistence.relations.Util1xmLf.setId(int),1,1
org.apache.openjpa.persistence.relations.Util1xmLf.getFirstName(),2,3
org.apache.openjpa.persistence.relations.Util1xmLf.setFirstName(String),3,6
org.apache.openjpa.persistence.relations.Util1xmLf.getUniRightLzy(),4,6
org.apache.openjpa.persistence.relations.Util1xmLf.setUniRightLzy(Collection<Util1xmRt>),5,11
org.apache.openjpa.persistence.relations.Util1xmLf.addUniRightLzy(Util1xmRt),4,11
org.apache.openjpa.persistence.relations.Util1xmLf.getUniRightEgr(),4,6
org.apache.openjpa.persistence.relations.Util1xmLf.setUniRightEgr(Collection<Util1xmRt>),5,11
org.apache.openjpa.persistence.relations.Util1xmLf.addUniRightEgr(Util1xmRt),4,11
org.apache.openjpa.persistence.models.company.joined.Address.setStreetAddress(String),4,10
org.apache.openjpa.persistence.models.company.joined.Address.getStreetAddress(),3,5
org.apache.openjpa.persistence.models.company.joined.Address.setCity(String),3,6
org.apache.openjpa.persistence.models.company.joined.Address.getCity(),2,3
org.apache.openjpa.persistence.models.company.joined.Address.setState(String),2,2
org.apache.openjpa.persistence.models.company.joined.Address.getState(),1,1
org.apache.openjpa.persistence.models.company.joined.Address.setPostalCode(String),4,10
org.apache.openjpa.persistence.models.company.joined.Address.getPostalCode(),3,5
org.apache.openjpa.persistence.models.company.joined.Address.setPhoneNumber(String),3,6
org.apache.openjpa.persistence.models.company.joined.Address.getPhoneNumber(),2,3
org.apache.openjpa.persistence.models.company.joined.Address.setId(long),1,1
org.apache.openjpa.persistence.models.company.joined.Address.getId(),0,0
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.DistributedJDBCStoreManager(DistributedJDBCConfiguration),32,73
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.getConfiguration(),4,5
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.getSlice(int),4,5
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.addSlice(Slice),10,27
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.findSliceNames(OpenJPAStateManager,Object)",40,85
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.assignSlice(OpenJPAStateManager,String)",19,24
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.estimateSlice(OpenJPAStateManager,Object)",19,47
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.selectStore(OpenJPAStateManager,Object)",21,37
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.assignField(OpenJPAStateManager,int,boolean)",8,14
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.assignObjectId(OpenJPAStateManager,boolean)",7,11
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.beforeStateChange(OpenJPAStateManager,PCState,PCState)",4,5
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.beginOptimistic(),6,10
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.cancelAll(),6,12
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.compareVersion(OpenJPAStateManager,Object,Object)",7,10
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.copyDataStoreId(Object,ClassMetaData)",7,15
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.executeExtent(ClassMetaData,boolean,FetchConfiguration)",18,45
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.exists(OpenJPAStateManager,Object)",12,23
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.flush(Collection),48,114
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.collectException(Collection,Collection)",7,12
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.commit(),5,8
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.rollback(),5,8
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.cacheVersion(List<OpenJPAStateManager>),14,30
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.rollbackVersion(List<OpenJPAStateManager>,Map<OpenJPAStateManager,Object>,Collection<StateManagerSet>)",21,36
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.occurs(OpenJPAStateManager,Collection<StateManagerSet>)",7,13
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.bin(Collection,Object)",26,59
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.getClientConnection(),4,6
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.getDataStoreIdSequence(ClassMetaData),6,10
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.getDataStoreIdType(ClassMetaData),5,11
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.getManagedType(Object),5,8
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.getValueSequence(FieldMetaData),7,11
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.initialize(OpenJPAStateManager,PCState,FetchConfiguration,Object)",26,52
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.load(OpenJPAStateManager,BitSet,FetchConfiguration,int,Object)",14,22
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.loadAll(Collection,PCState,int,FetchConfiguration,Object)",24,50
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.newDataStoreId(Object,ClassMetaData)",7,15
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.newQuery(String),22,70
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.newFetchConfiguration(),3,7
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.setContext(StoreContext),12,27
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.lookup(String),8,16
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.syncVersion(OpenJPAStateManager,Object)",14,28
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.connectInternal(),16,32
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.getTargets(FetchConfiguration),25,89
"org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.Flusher.Flusher(SliceStoreManager,StateManagerSet)",6,12
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.Flusher.call(),5,6
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.StateManagerSet.StateManagerSet(DistributedConfiguration),5,7
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.StateManagerSet.add(OpenJPAStateManager),11,20
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.StateManagerSet.remove(Object),5,5
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.StateManagerSet.containsReplicated(),3,5
org.apache.openjpa.slice.jdbc.DistributedJDBCStoreManager.StateManagerSet.getReplicated(),4,5
org.apache.openjpa.persistence.util.ToManyLazy.ToManyLazy(),1,1
org.apache.openjpa.persistence.util.ToManyLazy.ToManyLazy(String),4,4
org.apache.openjpa.persistence.util.ToManyLazy.setId(int),1,1
org.apache.openjpa.persistence.util.ToManyLazy.getId(),0,0
org.apache.openjpa.persistence.util.ToManyLazy.setName(String),3,6
org.apache.openjpa.persistence.util.ToManyLazy.getName(),2,3
org.apache.openjpa.persistence.relations.VCS.VCS(),1,1
org.apache.openjpa.persistence.relations.VCS.getName(),2,3
org.apache.openjpa.persistence.relations.VCS.setName(String),3,6
org.apache.openjpa.persistence.relations.VCS.getVcsId(),2,3
org.apache.openjpa.persistence.relations.VCS.setVcsId(String),3,6
org.apache.openjpa.persistence.relations.VCS.getE(),0,0
org.apache.openjpa.persistence.relations.VCS.setE(E),1,1
org.apache.openjpa.persistence.relations.VCS.getVcs(),2,3
org.apache.openjpa.persistence.relations.VCS.setVcs(Set<VC>),2,6
org.apache.openjpa.persistence.relations.VCS.addVC(VC),3,5
org.apache.openjpa.persistence.relations.VCS.VCSId.getE(),1,1
org.apache.openjpa.persistence.relations.VCS.VCSId.setE(String),2,2
org.apache.openjpa.persistence.relations.VCS.VCSId.getVcsId(),2,3
org.apache.openjpa.persistence.relations.VCS.VCSId.setVcsId(String),3,6
org.apache.openjpa.persistence.relations.VCS.VCSId.equals(Object),4,17
org.apache.openjpa.persistence.relations.VCS.VCSId.hashCode(),3,8
"org.apache.openjpa.persistence.test.AbstractCachedEMFTestCase.createNamedEMF(String,Object)",17,46
"org.apache.openjpa.persistence.test.AbstractCachedEMFTestCase.createNamedOpenJPAEMF(String,String,Map<String,Object>)",18,44
"org.apache.openjpa.persistence.test.AbstractCachedEMFTestCase.FixedMap<K,V>.removeEldestEntry(Map.Entry<K,V>)",27,56
"org.apache.openjpa.persistence.test.AbstractCachedEMFTestCase.EMFKey.EMFKey(String,Map<String,Object>)",7,12
org.apache.openjpa.persistence.test.AbstractCachedEMFTestCase.EMFKey.hashCode(),4,9
org.apache.openjpa.persistence.test.AbstractCachedEMFTestCase.EMFKey.equals(Object),6,14
org.apache.openjpa.persistence.test.ClassSelector.main(String[]),54,144
"org.apache.openjpa.persistence.test.ClassSelector.list(File,boolean)",13,35
"org.apache.openjpa.persistence.test.ClassSelector.list(File,boolean,List<String>)",14,50
"org.apache.openjpa.persistence.test.ClassSelector.list(File,boolean,List<String>).$1.accept(File,String)",5,6
"org.apache.openjpa.persistence.test.ClassSelector.list(File,boolean,List<String>).$2.accept(File,String)",6,9
org.apache.openjpa.persistence.test.ClassSelector.addSuper(String),8,9
org.apache.openjpa.persistence.test.ClassSelector.addInterface(String),8,9
org.apache.openjpa.persistence.test.ClassSelector.addAnnotation(String),9,11
org.apache.openjpa.persistence.test.ClassSelector.select(File),19,30
org.apache.openjpa.persistence.test.ClassSelector.applyInheritanceFilter(BCClass),17,24
org.apache.openjpa.persistence.test.ClassSelector.applyInterfaceFilter(BCClass),17,29
org.apache.openjpa.persistence.test.ClassSelector.applyAnnotationFilter(BCClass),19,41
org.apache.openjpa.persistence.test.ClassSelector.hasAnnotation(Annotations),5,10
org.apache.openjpa.persistence.test.ClassSelector.getSpecification(),18,54
org.apache.openjpa.persistence.temporal.TemporalEntity.TemporalEntity(int),2,2
org.apache.openjpa.persistence.temporal.TemporalEntity.getId(),0,0
org.apache.openjpa.persistence.temporal.TemporalEntity.setId(int),1,1
org.apache.openjpa.persistence.temporal.TemporalEntity.getTestDate(),2,5
org.apache.openjpa.persistence.temporal.TemporalEntity.setTestDate(Date),3,10
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJT.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJT.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJT.getFirstName(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJT.setFirstName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJT.getUniRight(),3,4
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJT.setUnitRight(Collection<LSE1xmRt>),5,7
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJT.addUnitRight(LSE1xmRt),4,7
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJT.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJT.toString(),12,16
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJT.readExternal(ObjectInput),12,18
org.apache.openjpa.persistence.lock.extended.LSE1xmLfJT.writeExternal(ObjectOutput),9,14
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.ObjectFactory(),8,11
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createAddress(),4,8
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createShortAddress(),4,8
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createUSAAddress(),5,12
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createGBRAddress(),5,12
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createCANAddress(),4,8
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createAddrUSA(USAAddress),8,20
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createAddrCAN(CANAddress),7,14
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createMailAddress(Address),7,16
org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.ObjectFactory.createAddrGBR(GBRAddress),8,20
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.setUp(),7,10
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindReadRead(),12,47
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindReadWrite(),12,44
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindReadPessimisticRead(),12,49
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindReadPessimisticWrite(),13,49
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindReadPessimisticForceInc(),15,54
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindWriteRead(),13,47
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindWriteWrite(),11,44
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindWritePessimisticRead(),13,49
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindWritePessimisticWrite(),12,49
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindWritePessimisticForceInc(),15,54
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimisticReadRead(),13,53
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimisticReadWrite(),13,49
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimisticReadPessimisticRead(),10,51
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimisticReadPessimisticWrite(),11,51
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimisticReadPessimisticForceInc(),13,56
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimsiticWriteRead(),15,53
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimsiticWriteWrite(),13,49
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimsiticWritePessimisticRead(),12,51
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimsiticWritePessimisticWrite(),11,51
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimsiticWritePessimisticForceInc(),14,56
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimsiticForceIncRead(),17,59
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimsiticForceIncWrite(),16,54
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimsiticForceIncPessimisticRead(),14,56
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimsiticForceIncPessimisticWrite(),14,56
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.testFindPessimsiticForceIncPessimisticForceInc(),13,61
"org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerFindPermutation.commonFindTest(String,LockModeType,Act,int,Class<>[],LockModeType,Act,int,Class<>[])",37,166
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.setUp(),7,10
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockReadRead(),12,52
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockReadWrite(),12,49
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockReadPessimisticRead(),12,54
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockReadPessimisticWrite(),13,54
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockReadPessimisticForceInc(),15,59
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockWriteRead(),13,52
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockWriteWrite(),11,49
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockWritePessimisticRead(),13,54
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockWritePessimisticWrite(),12,54
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockWritePessimisticForceInc(),15,59
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimisticReadRead(),13,58
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimisticReadWrite(),13,54
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimisticReadPessimisticRead(),12,65
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimisticReadPessimisticWrite(),13,65
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimisticReadPessimisticForceInc(),15,70
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimsiticWriteRead(),15,58
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimsiticWriteWrite(),13,54
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimsiticWritePessimisticRead(),14,65
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimsiticWritePessimisticWrite(),13,65
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimsiticWritePessimisticForceInc(),16,70
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimsiticForceIncRead(),17,64
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimsiticForceIncWrite(),16,59
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimsiticForceIncPessimisticRead(),16,70
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimsiticForceIncPessimisticWrite(),16,70
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.testLockPessimsiticForceIncPessimisticForceInc(),15,75
"org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockPermutation.commonLockTest(String,LockModeType,Act,int,Class<>[],LockModeType,Act,int,Class<>[],Class<>[])",37,171
org.apache.openjpa.persistence.proxy.entities.IAddress.getCity(),2,2
org.apache.openjpa.persistence.proxy.entities.IAddress.setCity(String),3,4
org.apache.openjpa.persistence.proxy.entities.IAddress.getCountry(),2,2
org.apache.openjpa.persistence.proxy.entities.IAddress.setCountry(String),3,4
org.apache.openjpa.persistence.proxy.entities.IAddress.getLine1(),2,2
org.apache.openjpa.persistence.proxy.entities.IAddress.setLine1(String),3,4
org.apache.openjpa.persistence.proxy.entities.IAddress.getLine2(),2,2
org.apache.openjpa.persistence.proxy.entities.IAddress.setLine2(String),3,4
org.apache.openjpa.persistence.proxy.entities.IAddress.getState(),1,1
org.apache.openjpa.persistence.proxy.entities.IAddress.setState(String),2,2
org.apache.openjpa.persistence.proxy.entities.IAddress.getZipCode(),3,3
org.apache.openjpa.persistence.proxy.entities.IAddress.setZipCode(String),4,6
org.apache.openjpa.persistence.proxy.delayed.Award.setAwdName(String),4,10
org.apache.openjpa.persistence.proxy.delayed.Award.getAwdName(),3,5
org.apache.openjpa.persistence.proxy.delayed.Award.setAwdType(String),4,10
org.apache.openjpa.persistence.proxy.delayed.Award.getAwdType(),3,5
org.apache.openjpa.persistence.proxy.delayed.Award.compareTo(Award),6,21
org.apache.openjpa.persistence.relations.TestCascadingOneManyWithForeignKey.setUp(),4,6
org.apache.openjpa.persistence.relations.TestCascadingOneManyWithForeignKey.testPersist(),19,79
org.apache.openjpa.persistence.relations.TestCascadingOneManyWithForeignKey.testDelete(),22,64
"org.apache.openjpa.persistence.relations.TestCascadingOneManyWithForeignKey.assertRemoved(EntityManager,long)",14,17
org.apache.openjpa.persistence.relations.TestCascadingOneManyWithForeignKey.testForeignKey(),39,109
org.apache.openjpa.persistence.relations.TestCascadingOneManyWithForeignKey.main(String[]),9,10
org.apache.openjpa.persistence.proxy.entities.Rider.getEffectiveDate(),2,5
org.apache.openjpa.persistence.proxy.entities.Rider.setEffectiveDate(Date),3,10
org.apache.openjpa.persistence.proxy.entities.Rider.getRule(),2,3
org.apache.openjpa.persistence.proxy.entities.Rider.setRule(String),3,6
org.apache.openjpa.persistence.proxy.entities.Rider.getType(),2,4
org.apache.openjpa.persistence.proxy.entities.Rider.setType(RiderType),3,7
org.apache.openjpa.persistence.lockmgr.TestEmLockTimeout.setUp(),9,12
org.apache.openjpa.persistence.lockmgr.TestEmLockTimeout.testSetJavaxLockTimeoutAtProviderCreateEmf(),25,62
org.apache.openjpa.persistence.lockmgr.TestEmLockTimeout.testSetLockTimeoutsAtProviderCreateEmf(),24,56
org.apache.openjpa.persistence.lockmgr.TestEmLockTimeout.testSetJavaxLockTimeoutAtFind(),31,79
org.apache.openjpa.persistence.query.TestInMemoryQueryMatchEscapes.setUp(),3,4
org.apache.openjpa.persistence.query.TestInMemoryQueryMatchEscapes.testDatabaseEscape(),24,34
org.apache.openjpa.persistence.query.TestInMemoryQueryMatchEscapes.testInMemoryEscape(),21,26
org.apache.openjpa.persistence.query.TestInMemoryQueryMatchEscapes.escapeHelper(boolean),22,48
org.apache.openjpa.persistence.query.common.apps.ComplexE.ComplexE(),1,1
"org.apache.openjpa.persistence.query.common.apps.ComplexE.ComplexE(String,int,Date,ComplexF[],ComplexD)",6,14
org.apache.openjpa.persistence.query.common.apps.ComplexE.setStringE(String),2,6
org.apache.openjpa.persistence.query.common.apps.ComplexE.getStringE(),1,3
org.apache.openjpa.persistence.query.common.apps.ComplexE.setIntE(int),1,1
org.apache.openjpa.persistence.query.common.apps.ComplexE.getIntE(),0,0
org.apache.openjpa.persistence.query.common.apps.ComplexE.setDateE(Date),2,6
org.apache.openjpa.persistence.query.common.apps.ComplexE.getDateE(),1,3
org.apache.openjpa.persistence.query.common.apps.ComplexE.setFs(Collection),2,2
org.apache.openjpa.persistence.query.common.apps.ComplexE.getFs(),1,1
org.apache.openjpa.persistence.query.common.apps.ComplexE.setD(ComplexD),2,2
org.apache.openjpa.persistence.query.common.apps.ComplexE.getD(),1,1
org.apache.openjpa.persistence.test.SingleEMFTestCase.setUp(),12,19
org.apache.openjpa.persistence.test.SingleEMFTestCase.setUp(Object),35,43
org.apache.openjpa.persistence.test.SingleEMFTestCase.tearDown(),17,25
org.apache.openjpa.persistence.test.SingleEMFTestCase.getMapping(String),16,27
org.apache.openjpa.persistence.test.SingleEMFTestCase.getMapping(Class<>),13,25
org.apache.openjpa.persistence.test.SingleEMFTestCase.count(String),14,19
org.apache.openjpa.persistence.test.SingleEMFTestCase.count(Class<>),6,9
org.apache.openjpa.persistence.test.SingleEMFTestCase.getAll(Class<T>),9,12
"org.apache.openjpa.persistence.test.SingleEMFTestCase.getAll(EntityManager,Class<T>)",8,10
org.apache.openjpa.persistence.test.SingleEMFTestCase.getAlias(Class<>),9,12
org.apache.openjpa.persistence.test.SingleEMFTestCase.getMappings(),9,11
org.apache.openjpa.persistence.test.SingleEMFTestCase.setUnsupportedDatabases(Class<>),24,43
org.apache.openjpa.persistence.test.SingleEMFTestCase.setSupportedDatabases(Class<>),24,46
org.apache.openjpa.persistence.test.SingleEMFTestCase.getLog(),4,6
org.apache.openjpa.persistence.test.SingleEMFTestCase.getForUpdateClause(),6,20
org.apache.openjpa.persistence.test.SingleEMFTestCase.getDBDictionary(),5,8
org.apache.openjpa.persistence.querycache.common.apps.Entity2.Entity2(),1,1
"org.apache.openjpa.persistence.querycache.common.apps.Entity2.Entity2(long,String,int)",3,11
org.apache.openjpa.persistence.querycache.common.apps.Entity2.getPk(),0,0
org.apache.openjpa.persistence.querycache.common.apps.Entity2.setStringField(String),4,8
org.apache.openjpa.persistence.querycache.common.apps.Entity2.getStringField(),2,5
org.apache.openjpa.persistence.querycache.common.apps.Entity2.setIntField(int),3,5
org.apache.openjpa.persistence.querycache.common.apps.Entity2.getIntField(),1,2
org.apache.openjpa.persistence.querycache.common.apps.Entity2.toString(),2,8
org.apache.openjpa.persistence.relations.ConcurrentEntityLeft.ConcurrentEntityLeft(),3,3
org.apache.openjpa.persistence.relations.ConcurrentEntityLeft.getId(),0,0
org.apache.openjpa.persistence.relations.ConcurrentEntityLeft.setId(int),1,1
org.apache.openjpa.persistence.relations.ConcurrentEntityLeft.getStrData(),3,5
org.apache.openjpa.persistence.relations.ConcurrentEntityLeft.setStrData(String),4,10
org.apache.openjpa.persistence.relations.ConcurrentEntityLeft.getRightEntity(),2,4
org.apache.openjpa.persistence.relations.ConcurrentEntityLeft.setRightEntity(ConcurrentEntityRight),3,7
org.apache.openjpa.persistence.relations.MultipleSameTypedEmbedded.getId(),0,0
org.apache.openjpa.persistence.relations.MultipleSameTypedEmbedded.getEmbed1(),3,4
org.apache.openjpa.persistence.relations.MultipleSameTypedEmbedded.setEmbed1(EmbeddableWithRelation),4,7
org.apache.openjpa.persistence.relations.MultipleSameTypedEmbedded.getEmbed2(),3,4
org.apache.openjpa.persistence.relations.MultipleSameTypedEmbedded.setEmbed2(EmbeddableWithRelation),4,7
org.apache.openjpa.persistence.relations.MultipleSameTypedEmbedded.getName(),2,3
org.apache.openjpa.persistence.relations.MultipleSameTypedEmbedded.setName(String),3,6
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshException.setUp(),7,10
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshException.testRefreshNoTxReqExceptions(),30,114
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshException.testRefreshTxReqExceptions(),30,143
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshException.testRefreshIllegalArgrumentExceptions(),46,745
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.setUp(),7,10
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshReadRead(),13,52
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshReadWrite(),13,49
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshReadPessimisticRead(),13,53
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshReadPessimisticWrite(),12,51
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshReadPessimisticForceInc(),16,59
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshWriteRead(),14,52
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshWriteWrite(),12,49
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshWritePessimisticRead(),12,51
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshWritePessimisticWrite(),11,51
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshWritePessimisticForceInc(),16,59
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimisticReadRead(),14,58
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimisticReadWrite(),14,54
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimisticReadPessimisticRead(),11,56
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimisticReadPessimisticWrite(),12,56
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimisticReadPessimisticForceInc(),14,61
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimsiticWriteRead(),16,58
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimsiticWriteWrite(),14,54
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimsiticWritePessimisticRead(),13,56
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimsiticWritePessimisticWrite(),12,56
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimsiticWritePessimisticForceInc(),15,61
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimsiticForceIncRead(),18,64
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimsiticForceIncWrite(),17,59
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimsiticForceIncPessimisticRead(),15,61
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimsiticForceIncPessimisticWrite(),15,61
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.testRefreshPessimsiticForceIncPessimisticForceInc(),14,66
"org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshPermutation.commonRefreshTest(String,LockModeType,Act,int,Class<>[],LockModeType,Act,int,Class<>[])",33,207
org.apache.openjpa.slice.ReplicatedParent.getName(),2,3
org.apache.openjpa.slice.ReplicatedParent.setName(String),3,6
org.apache.openjpa.slice.ReplicatedParent.getChildren(),4,5
org.apache.openjpa.slice.ReplicatedParent.addChild(ReplicatedChild),7,17
org.apache.openjpa.persistence.proxy.delayed.lhset.Account.Account(),1,1
"org.apache.openjpa.persistence.proxy.delayed.lhset.Account.Account(String,IUserIdentity)",8,13
org.apache.openjpa.persistence.proxy.delayed.lhset.Account.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.lhset.Account.getId(),0,0
org.apache.openjpa.persistence.proxy.delayed.lhset.Account.setName(String),3,6
org.apache.openjpa.persistence.proxy.delayed.lhset.Account.getName(),2,3
org.apache.openjpa.persistence.proxy.delayed.lhset.Account.setUserIdent(IUserIdentity),4,13
org.apache.openjpa.persistence.proxy.delayed.lhset.Account.getUserIdent(),3,6
org.apache.openjpa.persistence.lockmgr.PhoneNumber.PhoneNumber(),1,1
org.apache.openjpa.persistence.lockmgr.PhoneNumber.PhoneNumber(String),2,2
org.apache.openjpa.persistence.lockmgr.PhoneNumber.setOwners(List<Person>),4,5
org.apache.openjpa.persistence.lockmgr.PhoneNumber.toString(),1,2
org.apache.openjpa.persistence.proxy.delayed.vec.UserIdentity.setMember(IMember),1,1
org.apache.openjpa.persistence.proxy.delayed.vec.UserIdentity.getMember(),0,0
org.apache.openjpa.persistence.proxy.delayed.vec.UserIdentity.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.vec.UserIdentity.getId(),0,0
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.setUp(),35,66
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.testXMLFieldProjection(),23,51
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.testXMLFieldInEntity(),21,48
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.testXMLStringToXMLStringComparison(),21,38
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.testXMLStringToEmbeddedStringComparison(),21,30
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.testXMLStringToConstantStringComparison(),22,29
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.testXMLStringToParameterStringComparison(),23,37
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.testParameterStringToXMLStringComparison(),23,37
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.testUpdate(),19,50
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.testNullify(),14,32
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.testXMLStringToConstantIntComparison(),22,30
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.testXMLListToConstantStringComparison(),23,32
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.testSubclassPropertyInXMLFieldComparison(),23,31
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.main(String[]),8,9
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.persistEntities(EntityManager),25,70
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.dictionarySupportsXMLColumn(),26,57
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.createUSAAddress(String),24,45
org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.createCANAddress(String),16,32
"org.apache.openjpa.persistence.xmlmapping.query.TestXMLCustomerOrder.assertOrdersEqual(Order,Order)",5,10
org.apache.openjpa.persistence.relations.TestManyEagerSQL.setUp(),21,93
org.apache.openjpa.persistence.relations.TestManyEagerSQL.testManyToOneEagerQuery(),29,113
org.apache.openjpa.persistence.relations.TestManyEagerSQL.testManyToOneLazyQuery(),30,132
org.apache.openjpa.persistence.relations.TestManyEagerSQL.testOneToManyEagerQuery(),29,138
org.apache.openjpa.persistence.relations.TestManyEagerSQL.testOneToOneParentQuery(),24,56
org.apache.openjpa.persistence.relations.TestManyEagerSQL.testOneToOneChildQuery(),24,56
org.apache.openjpa.persistence.relations.TestManyEagerSQL.main(String[]),8,9
org.apache.openjpa.persistence.simple.EntityWithTimestampPK.getIdTsp(),2,3
org.apache.openjpa.persistence.simple.EntityWithTimestampPK.EntityWithTimestampPK(String),8,10
org.apache.openjpa.persistence.simple.EntityWithTimestampPK.EntityWithTimestampPK(),2,2
org.apache.openjpa.persistence.simple.EntityWithTimestampPK.setIdTsp(Timestamp),3,6
org.apache.openjpa.persistence.simple.EntityWithTimestampPK.getDesc(),3,3
org.apache.openjpa.persistence.simple.EntityWithTimestampPK.setDesc(String),4,6
org.apache.openjpa.persistence.relations.TestOneOneNulls.setUp(),20,61
org.apache.openjpa.persistence.relations.TestOneOneNulls.testFindOneToOneNullDefaults(),22,54
org.apache.openjpa.persistence.relations.TestOneOneNulls.testFindOneToOneNullExplicit(),21,54
org.apache.openjpa.persistence.relations.TestOneOneNulls.testQueryOneToOneNullChild(),23,54
org.apache.openjpa.persistence.relations.TestOneOneNulls.testQueryOneToOneNullParent(),23,54
org.apache.openjpa.persistence.relations.TestOneOneNulls.main(String[]),7,8
org.apache.openjpa.persistence.simple.TemporalFieldTypes.setDateDefaultField(Date),3,8
org.apache.openjpa.persistence.simple.TemporalFieldTypes.getDateDefaultField(),2,5
org.apache.openjpa.persistence.simple.TemporalFieldTypes.setDateDateField(Date),3,10
org.apache.openjpa.persistence.simple.TemporalFieldTypes.getDateDateField(),2,7
org.apache.openjpa.persistence.simple.TemporalFieldTypes.setDateTimeField(Date),4,10
org.apache.openjpa.persistence.simple.TemporalFieldTypes.getDateTimeField(),3,7
org.apache.openjpa.persistence.simple.TemporalFieldTypes.setDateTimeStampField(Date),6,11
org.apache.openjpa.persistence.simple.TemporalFieldTypes.getDateTimeStampField(),5,8
org.apache.openjpa.persistence.simple.TemporalFieldTypes.setCalendarDefaultField(Calendar),3,8
org.apache.openjpa.persistence.simple.TemporalFieldTypes.getCalendarDefaultField(),2,5
org.apache.openjpa.persistence.simple.TemporalFieldTypes.setCalendarDateField(Calendar),4,10
org.apache.openjpa.persistence.simple.TemporalFieldTypes.getCalendarDateField(),3,7
org.apache.openjpa.persistence.simple.TemporalFieldTypes.setCalendarTimeField(Calendar),4,10
org.apache.openjpa.persistence.simple.TemporalFieldTypes.getCalendarTimeField(),3,7
org.apache.openjpa.persistence.simple.TemporalFieldTypes.setCalendarTimeStampField(Calendar),6,11
org.apache.openjpa.persistence.simple.TemporalFieldTypes.getCalendarTimeStampField(),5,8
org.apache.openjpa.persistence.simple.TemporalFieldTypes.setCalendarTimeZoneField(Calendar),5,18
org.apache.openjpa.persistence.simple.TemporalFieldTypes.getCalendarTimeZoneField(),4,9
org.apache.openjpa.persistence.lockmgr.LockEmployee.getId(),0,0
org.apache.openjpa.persistence.lockmgr.LockEmployee.setId(int),1,1
org.apache.openjpa.persistence.lockmgr.LockEmployee.getFirstName(),2,3
org.apache.openjpa.persistence.lockmgr.LockEmployee.setFirstName(String),3,6
org.apache.openjpa.persistence.lockmgr.LockEmployee.getLastName(),2,3
org.apache.openjpa.persistence.lockmgr.LockEmployee.setLastName(String),3,6
org.apache.openjpa.persistence.lockmgr.LockEmployee.getVersion(),1,2
org.apache.openjpa.persistence.lockmgr.LockEmployee.toString(),10,14
org.apache.openjpa.persistence.lockmgr.LockEmployee.readExternal(ObjectInput),9,18
org.apache.openjpa.persistence.lockmgr.LockEmployee.writeExternal(ObjectOutput),7,14
org.apache.openjpa.persistence.proxy.delayed.pqueue.UserIdentity.setMember(IMember),1,1
org.apache.openjpa.persistence.proxy.delayed.pqueue.UserIdentity.getMember(),0,0
org.apache.openjpa.persistence.proxy.delayed.pqueue.UserIdentity.setId(int),1,1
org.apache.openjpa.persistence.proxy.delayed.pqueue.UserIdentity.getId(),0,0
org.apache.openjpa.persistence.validation.TestValidationMode.setUp(),4,5
org.apache.openjpa.persistence.validation.TestValidationMode.testValidationMode1(),28,65
org.apache.openjpa.persistence.validation.TestValidationMode.testValidationMode2(),29,71
org.apache.openjpa.persistence.validation.TestValidationMode.testValidationMode3(),29,71
org.apache.openjpa.persistence.validation.TestValidationMode.testValidationMode4(),37,93
org.apache.openjpa.persistence.validation.TestValidationMode.testValidationMode5(),33,95
org.apache.openjpa.persistence.validation.TestValidationMode.testValidationMode6(),35,100
org.apache.openjpa.persistence.validation.TestValidationMode.testValidationMode7(),36,99
org.apache.openjpa.persistence.validation.TestValidationMode.testUniqueLifecycleManager(),48,140
org.apache.openjpa.persistence.validation.TestValidationMode.UniqueLifecycleListener.beforePersist(LifecycleEvent),4,6
org.apache.openjpa.persistence.validation.TestValidationMode.UniqueLifecycleListener.afterPersist(LifecycleEvent),4,6
org.apache.openjpa.persistence.validation.TestValidationMode.UniqueLifecycleListener.beforeStore(LifecycleEvent),4,6
org.apache.openjpa.persistence.validation.TestValidationMode.UniqueLifecycleListener.afterStore(LifecycleEvent),4,6
"org.apache.openjpa.persistence.validation.TestValidationMode.UniqueLifecycleListener.assertCounts(int,int,int,int)",5,21
org.apache.openjpa.persistence.validation.TestValidationMode.cleanup(OpenJPAEntityManagerFactorySPI),14,20
org.apache.openjpa.persistence.proxy.entities.IPayout.setTaxableAmount(BigDecimal),4,6
org.apache.openjpa.persistence.proxy.entities.IPayout.getTaxableAmount(),3,3
org.apache.openjpa.persistence.proxy.entities.IPayout.setStartDate(Calendar),4,6
org.apache.openjpa.persistence.proxy.entities.IPayout.getStartDate(),3,3
org.apache.openjpa.persistence.proxy.entities.IPayout.setEndDate(Calendar),4,5
org.apache.openjpa.persistence.proxy.entities.IPayout.getEndDate(),2,2
org.apache.openjpa.persistence.proxy.entities.IPayout.getAnnuity(),1,2
org.apache.openjpa.persistence.proxy.entities.IPayout.setAnnuity(IAnnuity),2,4
org.apache.openjpa.persistence.query.TestDataStoreActions.setUp(),3,4
org.apache.openjpa.persistence.query.TestDataStoreActions.testDataStoreActions(),15,22
org.apache.openjpa.persistence.query.TestResultSetMapping.setUp(),13,20
org.apache.openjpa.persistence.query.TestResultSetMapping.testSimpleQuery(),15,32
org.apache.openjpa.persistence.query.TestResultSetMapping.main(String[]),9,10
org.apache.openjpa.persistence.query.Lookup.Lookup(),1,1
org.apache.openjpa.persistence.query.Lookup.getId(),1,1
org.apache.openjpa.persistence.query.Lookup.setId(Integer),2,2
org.apache.openjpa.persistence.query.Lookup.getName(),2,3
org.apache.openjpa.persistence.query.Lookup.setName(String),3,6
org.apache.openjpa.persistence.query.results.TestListResultSerialization.setUp(),3,4
org.apache.openjpa.persistence.query.results.TestListResultSerialization.testRoundtrip(),29,67
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.setUp(),10,27
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.testIsLoadedEager(),10,12
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.testNotLoadedLazy(),10,12
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.testIsLoadedLazy(),9,12
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.testNotLoadedEager(),9,12
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.testMultiplePUs(),21,135
"org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.verifyPULoadState(EntityManager,PersistenceUnitUtil)",16,54
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.verifyIsLoadedEagerState(boolean),25,71
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.verifyIsLoadedLazyState(boolean),28,77
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.testIsApplicationLoaded(),35,80
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.testPCMapEager(),31,121
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.testSetNullLazyRelationship(),35,148
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.testSetNullEagerRelationship(),34,148
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.testBasicTypeNotLoaded(),30,60
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.createEagerEntity(),8,25
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.createEagerEmbed(),11,28
org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.createLazyEntity(),19,61
"org.apache.openjpa.persistence.util.TestPersistenceUnitUtil.assertEagerLoadState(PersistenceUnitUtil,Object,boolean)",13,27
org.apache.openjpa.persistence.query.TestOutOfBoundsEx.setUp(),16,17
org.apache.openjpa.persistence.query.TestOutOfBoundsEx.testOutOfBounds(),41,78
org.apache.openjpa.persistence.query.TestOutOfBoundsEx.insertLookups(),7,12
org.apache.openjpa.persistence.query.TestOutOfBoundsEx.save(Object),7,9
org.apache.openjpa.persistence.query.TestOutOfBoundsEx.insertJob(),6,13
org.apache.openjpa.persistence.query.TestOutOfBoundsEx.insertCase(ScheduleDay),7,12
"org.apache.openjpa.persistence.query.TestOutOfBoundsEx.insertScheduledAssignmentInCase(Role,Case)",10,22
org.apache.openjpa.persistence.query.TestOutOfBoundsEx.insertScheduleDay(Date),6,15
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest2.ModRuntimeTest2(int),4,5
"org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest2.ModRuntimeTest2(String,int)",5,6
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest2.getIntField2(),1,2
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest2.setIntField2(int),2,5
org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest2.toString(),2,8
org.apache.openjpa.persistence.relations.ChildChildClass.ChildChildClass(),1,2
org.apache.openjpa.persistence.relations.ChildChildClass.getName2(),2,3
org.apache.openjpa.persistence.relations.ChildChildClass.setName2(String),3,6
org.apache.openjpa.persistence.relations.ChildChildClass.toString(),2,5
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.EAddress(),1,1
"org.apache.openjpa.persistence.xmlmapping.entities.EAddress.EAddress(String,String,String,String)",5,14
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.getCity(),2,3
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.setCity(String),3,6
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.getState(),1,1
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.setState(String),2,2
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.getStreet(),2,3
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.setStreet(String),3,6
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.getZip(),2,3
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.setZip(String),3,6
org.apache.openjpa.persistence.xmlmapping.entities.EAddress.modifyCity(String),4,6
org.apache.openjpa.persistence.relations.C.C(),0,0
org.apache.openjpa.persistence.relations.C.getCId(),1,1
org.apache.openjpa.persistence.relations.C.setCId(String),2,2
org.apache.openjpa.persistence.relations.C.getCm(),0,0
org.apache.openjpa.persistence.relations.C.setCm(CM),1,1
org.apache.openjpa.persistence.relations.C.getDs(),1,1
org.apache.openjpa.persistence.relations.C.setDs(Set<D>),1,2
org.apache.openjpa.persistence.relations.C.CId.getCId(),1,1
org.apache.openjpa.persistence.relations.C.CId.setCId(String),2,2
org.apache.openjpa.persistence.relations.C.CId.getCm(),0,0
org.apache.openjpa.persistence.relations.C.CId.setCm(CM.CMId),1,1
org.apache.openjpa.persistence.relations.C.CId.equals(Object),3,9
org.apache.openjpa.persistence.relations.C.CId.hashCode(),2,6
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwnerId.ManyOneCompoundIdOwnerId(),2,2
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwnerId.ManyOneCompoundIdOwnerId(String),4,6
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwnerId.toString(),3,7
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwnerId.hashCode(),3,4
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwnerId.equals(Object),6,13
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwnerId.fromString(String),7,18
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwnerId.Tokenizer.Tokenizer(String),3,5
org.apache.openjpa.persistence.relations.ManyOneCompoundIdOwnerId.Tokenizer.nextToken(),6,11
org.apache.openjpa.persistence.relations.EntityCInverseEager.EntityCInverseEager(),3,3
"org.apache.openjpa.persistence.relations.EntityCInverseEager.EntityCInverseEager(String,int,int)",7,13
org.apache.openjpa.persistence.relations.EntityCInverseEager.getD(),3,4
org.apache.openjpa.persistence.relations.EntityCInverseEager.setD(EntityDInverseEager),4,7
org.apache.openjpa.persistence.relations.EntityCInverseEager.getId(),0,0
org.apache.openjpa.persistence.relations.EntityCInverseEager.getName(),2,3
org.apache.openjpa.persistence.relations.EntityCInverseEager.setName(String),3,6
org.apache.openjpa.persistence.relations.EntityCInverseEager.getAge(),1,2
org.apache.openjpa.persistence.relations.EntityCInverseEager.setAge(int),2,5
org.apache.openjpa.persistence.relations.EntityCInverseEager.getBalance(),1,2
org.apache.openjpa.persistence.relations.EntityCInverseEager.setBalance(int),2,5
org.apache.openjpa.persistence.relations.TestIdOrderedOneMany.setUp(),17,69
org.apache.openjpa.persistence.relations.TestIdOrderedOneMany.testExplicitOrdering(),12,32
org.apache.openjpa.persistence.relations.TestIdOrderedOneMany.testImplicitOrdering(),13,32
org.apache.openjpa.persistence.relations.TestIdOrderedOneMany.main(String[]),6,7
org.apache.openjpa.persistence.relations.RelationToRelationMapInstance.getMap(),3,7
org.apache.openjpa.persistence.results.cls.ResultClsXml.ResultClsXml(),3,3
org.apache.openjpa.persistence.results.cls.ResultClsXml.getId(),1,1
org.apache.openjpa.persistence.results.cls.ResultClsXml.setId(String),2,2
org.apache.openjpa.persistence.results.cls.ResultClsXml.getDescription(),2,3
org.apache.openjpa.persistence.results.cls.ResultClsXml.setDescription(String),3,6
org.apache.openjpa.persistence.simple.TestPropertiesMethods.setUp(),53,87
org.apache.openjpa.persistence.simple.TestPropertiesMethods.tearDown(),3,6
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testConfigurationPrefixes(),13,18
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testEMNumericPropertyValueForEnumTypeIsReturnedAsString(),16,24
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testEMPluginPropertyParameterIsPreserved(),18,30
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testFactoryPropertiesContainDefaultValue(),18,29
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testFactoryPropertiesContainUserSpecifiedValue(),18,20
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testFactoryPropertiesAddPlatformOrVendor(),14,21
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testFactorySupportedProperties(),15,22
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testEMGetSupportedProperties(),22,59
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testEMFPropertyValueTypeIsPreserved(),30,61
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testEMFPluginPropertyParameterIsPreserved(),18,31
org.apache.openjpa.persistence.simple.TestPropertiesMethods.xtestLoadKeyWithEquivalentPropertyKey(),24,35
org.apache.openjpa.persistence.simple.TestPropertiesMethods.xtestLoadKeyWithPrimaryPropertyKey(),25,36
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testPropertyValueTypeIsPreserved(),27,42
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testPluginPropertyParameterIsPreserved(),16,18
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testChangePropertyValue(),18,35
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testConfiguredPropertyValue(),23,49
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testEquivalentKeysArePresentInSupportedProperties(),14,21
org.apache.openjpa.persistence.simple.TestPropertiesMethods.testPasswordValuesAreInvisible(),13,16
"org.apache.openjpa.persistence.simple.TestPropertiesMethods.assertProperty(String,Map)",5,8
"org.apache.openjpa.persistence.simple.TestPropertiesMethods.assertProperty(String,Map,Object)",14,32
"org.apache.openjpa.persistence.simple.TestPropertiesMethods.print(String,Map<String,Object>)",15,27
"org.apache.openjpa.persistence.simple.TestPropertiesMethods.print(String,Set<String>)",8,15
org.apache.openjpa.persistence.relations.TestRelationFieldAsPrimaryKeyAndForeignKey.setUp(),22,67
org.apache.openjpa.persistence.relations.TestRelationFieldAsPrimaryKeyAndForeignKey.testUnboundEntities(),26,95
org.apache.openjpa.persistence.relations.TestRelationFieldAsPrimaryKeyAndForeignKey.testQuery(),23,58
org.apache.openjpa.persistence.relations.TestRelationFieldAsPrimaryKeyAndForeignKey.testDeletes(),26,57
org.apache.openjpa.persistence.relations.TestRelationFieldAsPrimaryKeyAndForeignKey.tearDown(),15,22
org.apache.openjpa.persistence.lockmgr.VersionEntity.setId(int),1,1
org.apache.openjpa.persistence.lockmgr.VersionEntity.getId(),0,0
org.apache.openjpa.persistence.lockmgr.VersionEntity.setName(String),3,6
org.apache.openjpa.persistence.lockmgr.VersionEntity.getName(),2,3
org.apache.openjpa.persistence.lockmgr.VersionEntity.setVersion(int),2,5
org.apache.openjpa.persistence.lockmgr.VersionEntity.getVersion(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setShortField(short),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getShortField(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setIntField(int),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getIntField(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setBooleanField(boolean),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getBooleanField(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setLongField(long),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getLongField(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setFloatField(float),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getFloatField(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setCharField(char),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getCharField(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setDoubleField(double),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getDoubleField(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setByteField(byte),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getByteField(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setStringField(String),3,10
org.apache.openjpa.persistence.simple.AllFieldTypes.getStringField(),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.setDateField(Date),3,10
org.apache.openjpa.persistence.simple.AllFieldTypes.getDateField(),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.setSetOfStrings(Set<String>),3,11
org.apache.openjpa.persistence.simple.AllFieldTypes.getSetOfStrings(),3,6
org.apache.openjpa.persistence.simple.AllFieldTypes.setArrayOfStrings(String[]),4,10
org.apache.openjpa.persistence.simple.AllFieldTypes.getArrayOfStrings(),3,5
org.apache.openjpa.persistence.simple.AllFieldTypes.setArrayOfInts(int[]),3,9
org.apache.openjpa.persistence.simple.AllFieldTypes.getArrayOfInts(),2,4
org.apache.openjpa.persistence.simple.AllFieldTypes.getBigDecimalField(),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.setBigDecimalField(BigDecimal),3,10
org.apache.openjpa.persistence.simple.AllFieldTypes.getBigIntegerField(),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.setBigIntegerField(BigInteger),3,10
org.apache.openjpa.persistence.simple.AllFieldTypes.getByteLob(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setByteLob(byte[]),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getCalendarField(),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.setCalendarField(Calendar),3,10
org.apache.openjpa.persistence.simple.AllFieldTypes.getCharLob(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setCharLob(char[]),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getEnumField(),2,3
org.apache.openjpa.persistence.simple.AllFieldTypes.setEnumField(EnumType),3,6
org.apache.openjpa.persistence.simple.AllFieldTypes.getSerializableField(),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.setSerializableField(Serializable),3,10
org.apache.openjpa.persistence.simple.AllFieldTypes.getSqlDateField(),4,9
org.apache.openjpa.persistence.simple.AllFieldTypes.setSqlDateField(java.sql.Date),5,16
org.apache.openjpa.persistence.simple.AllFieldTypes.getSqlTimeField(),4,9
org.apache.openjpa.persistence.simple.AllFieldTypes.setSqlTimeField(java.sql.Time),5,16
org.apache.openjpa.persistence.simple.AllFieldTypes.getSqlTimestampField(),4,9
org.apache.openjpa.persistence.simple.AllFieldTypes.setSqlTimestampField(java.sql.Timestamp),5,16
org.apache.openjpa.persistence.simple.AllFieldTypes.getWBooleanField(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setWBooleanField(Boolean),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getWByteField(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setWByteField(Byte),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getWByteLob(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setWByteLob(Byte[]),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getWCharacterField(),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.setWCharacterField(Character),3,10
org.apache.openjpa.persistence.simple.AllFieldTypes.getWCharacterLob(),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.setWCharacterLob(Character[]),3,10
org.apache.openjpa.persistence.simple.AllFieldTypes.getWDoubleField(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setWDoubleField(Double),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getWFloatField(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setWFloatField(Float),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getWIntegerField(),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.setWIntegerField(Integer),3,10
org.apache.openjpa.persistence.simple.AllFieldTypes.getWLongField(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setWLongField(Long),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getWShortField(),1,2
org.apache.openjpa.persistence.simple.AllFieldTypes.setWShortField(Short),2,5
org.apache.openjpa.persistence.simple.AllFieldTypes.getSelfOneOne(),3,4
org.apache.openjpa.persistence.simple.AllFieldTypes.setSelfOneOne(AllFieldTypes),4,7
org.apache.openjpa.persistence.simple.AllFieldTypes.getSelfOneMany(),4,5
org.apache.openjpa.persistence.simple.AllFieldTypes.setSelfOneMany(List<AllFieldTypes>),5,8
org.apache.openjpa.persistence.xml.XmlOverrideToOneEntity.getId(),0,0
org.apache.openjpa.persistence.xml.XmlOverrideToOneEntity.getOtherO2O(),3,3
org.apache.openjpa.persistence.xml.XmlOverrideToOneEntity.setOtherO2O(XmlOverrideToOneEntity),4,4
org.apache.openjpa.persistence.xml.XmlOverrideToOneEntity.getOtherM2O(),3,3
org.apache.openjpa.persistence.xml.XmlOverrideToOneEntity.setOtherM2O(XmlOverrideToOneEntity),4,4
org.apache.openjpa.persistence.simple.TestCaseInsensitiveKeywordsInJPQL.setUp(),8,9
org.apache.openjpa.persistence.simple.TestCaseInsensitiveKeywordsInJPQL.testCaseInsensitiveBooleans(),24,56
org.apache.openjpa.persistence.test.JPAEntityClassEnum.getEntityClassName(),3,3
org.apache.openjpa.persistence.test.JPAEntityClassEnum.getEntityName(),3,3
org.apache.openjpa.persistence.simple.TestJoin.setUp(),2,3
org.apache.openjpa.persistence.simple.TestJoin.testSelfJoin(),18,24
org.apache.openjpa.persistence.test.FilteringJDBCListener.FilteringJDBCListener(List<String>),16,29
org.apache.openjpa.persistence.test.FilteringJDBCListener.beforeExecuteStatement(JDBCEvent),10,20
org.apache.openjpa.persistence.test.FilteringJDBCListener.clear(),2,2
org.apache.openjpa.persistence.test.FilteringJDBCListener.getCopy(),6,8
"org.apache.openjpa.slice.DistributedQueryImpl.DistributedQueryImpl(Broker,String,StoreQuery)",12,24
org.apache.openjpa.slice.DistributedQueryImpl.execute(Map),22,48
org.apache.openjpa.slice.DistributedQueryImpl.lock(),1,3
org.apache.openjpa.slice.DistributedQueryImpl.unlock(),2,3
org.apache.openjpa.persistence.util.ToManyEager.ToManyEager(),1,1
org.apache.openjpa.persistence.util.ToManyEager.ToManyEager(String),4,4
org.apache.openjpa.persistence.util.ToManyEager.setId(int),1,1
org.apache.openjpa.persistence.util.ToManyEager.getId(),0,0
org.apache.openjpa.persistence.util.ToManyEager.setName(String),3,6
org.apache.openjpa.persistence.util.ToManyEager.getName(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1x1LfLzy.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSE1x1LfLzy.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSE1x1LfLzy.getFirstName(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1x1LfLzy.setFirstName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSE1x1LfLzy.getUniRight(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1x1LfLzy.setUniRight(LSE1x1Rt),3,6
org.apache.openjpa.persistence.lock.extended.LSE1x1LfLzy.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSE1x1LfLzy.toString(),11,16
org.apache.openjpa.persistence.lock.extended.LSE1x1LfLzy.readExternal(ObjectInput),11,17
org.apache.openjpa.persistence.lock.extended.LSE1x1LfLzy.writeExternal(ObjectOutput),9,14
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJT.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJT.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJT.getFirstName(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJT.setFirstName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJT.getUniRightJT(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJT.setUniRightJT(LSE1x1Rt),3,6
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJT.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJT.toString(),11,16
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJT.readExternal(ObjectInput),11,17
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJT.writeExternal(ObjectOutput),9,14
org.apache.openjpa.persistence.lock.extended.LSEJoinCon.getLastName(),2,3
org.apache.openjpa.persistence.lock.extended.LSEJoinCon.setLastName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSEJoinCon.toString(),8,12
org.apache.openjpa.persistence.lock.extended.LSEJoinCon.readExternal(ObjectInput),8,13
org.apache.openjpa.persistence.lock.extended.LSEJoinCon.writeExternal(ObjectOutput),6,10
org.apache.openjpa.persistence.lockmgr.MixedLockManagerGenericTest.setUp(),7,10
org.apache.openjpa.persistence.lockmgr.MixedLockManagerGenericTest.testRefreshRead(),7,12
org.apache.openjpa.persistence.lockmgr.MixedLockManagerGenericTest.testRefreshWrite(),7,12
org.apache.openjpa.persistence.lockmgr.MixedLockManagerGenericTest.testRefreshOptimistic(),7,12
org.apache.openjpa.persistence.lockmgr.MixedLockManagerGenericTest.testRefreshOptimisticForceInc(),10,18
org.apache.openjpa.persistence.lockmgr.MixedLockManagerGenericTest.testRefreshPessimisticRead(),8,15
org.apache.openjpa.persistence.lockmgr.MixedLockManagerGenericTest.testRefreshPessimisticWrite(),8,15
org.apache.openjpa.persistence.lockmgr.MixedLockManagerGenericTest.testRefreshPessimisticForceInc(),10,18
"org.apache.openjpa.persistence.lockmgr.MixedLockManagerGenericTest.testCommon(String,LockModeType,int,int)",19,37
org.apache.openjpa.persistence.lock.extended.LSESngTblCon.getLastName(),2,3
org.apache.openjpa.persistence.lock.extended.LSESngTblCon.setLastName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSESngTblCon.toString(),8,12
org.apache.openjpa.persistence.lock.extended.LSESngTblCon.readExternal(ObjectInput),8,13
org.apache.openjpa.persistence.lock.extended.LSESngTblCon.writeExternal(ObjectOutput),6,10
"org.apache.openjpa.xmlstore.ObjectData.ObjectData(Object,ClassMetaData)",12,25
org.apache.openjpa.xmlstore.ObjectData.getId(),3,4
org.apache.openjpa.xmlstore.ObjectData.getField(int),5,8
"org.apache.openjpa.xmlstore.ObjectData.setField(int,Object)",7,12
org.apache.openjpa.xmlstore.ObjectData.setVersion(Long),3,8
org.apache.openjpa.xmlstore.ObjectData.getVersion(),2,4
org.apache.openjpa.xmlstore.ObjectData.getMetaData(),8,12
"org.apache.openjpa.xmlstore.ObjectData.load(OpenJPAStateManager,FetchConfiguration)",20,42
"org.apache.openjpa.xmlstore.ObjectData.load(OpenJPAStateManager,BitSet,FetchConfiguration)",19,37
"org.apache.openjpa.xmlstore.ObjectData.toLoadable(OpenJPAStateManager,FieldMetaData,Object,FetchConfiguration)",52,196
"org.apache.openjpa.xmlstore.ObjectData.toNestedLoadable(OpenJPAStateManager,ValueMetaData,Object,FetchConfiguration)",40,85
org.apache.openjpa.xmlstore.ObjectData.store(OpenJPAStateManager),22,46
"org.apache.openjpa.xmlstore.ObjectData.toStorable(FieldMetaData,Object,StoreContext)",42,130
"org.apache.openjpa.xmlstore.ObjectData.toNestedStorable(ValueMetaData,Object,StoreContext)",43,87
org.apache.openjpa.xmlstore.ObjectData.clone(),22,63
org.apache.openjpa.xmlstore.ObjectData.toString(),17,43
org.apache.openjpa.persistence.util.EagerEntity.setId(int),1,1
org.apache.openjpa.persistence.util.EagerEntity.getId(),0,0
org.apache.openjpa.persistence.util.EagerEntity.setName(String),3,6
org.apache.openjpa.persistence.util.EagerEntity.getName(),2,3
org.apache.openjpa.persistence.util.EagerEntity.setEagerEmbed(EagerEmbed),3,11
org.apache.openjpa.persistence.util.EagerEntity.getEagerEmbed(),2,6
org.apache.openjpa.persistence.util.EagerEntity.setTransField(String),4,10
org.apache.openjpa.persistence.util.EagerEntity.getTransField(),3,5
org.apache.openjpa.persistence.util.EagerEntity.setEagerEmbedColl(List<EagerEmbed>),5,16
org.apache.openjpa.persistence.util.EagerEntity.getEagerEmbedColl(),4,9
org.apache.openjpa.persistence.util.EagerEntity.setEagerEmbedRel(EagerEmbedRel),4,16
org.apache.openjpa.persistence.util.EagerEntity.getEagerEmbedRel(),3,9
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.setUp(),34,97
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.testFindAfterQueryWithPessimisticLocks(),58,254
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.testFindAfterQueryOrderByWithPessimisticLocks(),58,239
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.testQueryAfterFindWithPessimisticLocks(),49,212
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.testQueryOrderByAfterFindWithPessimisticLocks(),49,203
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.testRepeatedQueryWithPessimisticLocks(),36,86
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.getLog(),4,6
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.testRefreshLockTimeout(),97,239
"org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.assertError(Throwable,Class<>)",29,66
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.getFailedObject(Throwable),10,31
"org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.RefreshWithLock.RefreshWithLock(int,Object)",4,6
org.apache.openjpa.persistence.lockmgr.TestPessimisticLocks.RefreshWithLock.call(),37,83
org.apache.openjpa.slice.DistributedBrokerImpl.DistributedBrokerImpl(),6,7
org.apache.openjpa.slice.DistributedBrokerImpl.getConfiguration(),3,9
org.apache.openjpa.slice.DistributedBrokerImpl.getDistributedStoreManager(),5,13
org.apache.openjpa.slice.DistributedBrokerImpl.getFetchConfiguration(),3,10
"org.apache.openjpa.slice.DistributedBrokerImpl.persist(Object,Object,boolean,OpCallbacks)",20,66
"org.apache.openjpa.slice.DistributedBrokerImpl.setStateManager(Object,StateManagerImpl,int)",8,14
org.apache.openjpa.slice.DistributedBrokerImpl.endOperation(),2,3
"org.apache.openjpa.slice.DistributedBrokerImpl.newQueryImpl(String,StoreQuery)",7,14
org.apache.openjpa.slice.DistributedBrokerImpl.lock(),1,3
org.apache.openjpa.slice.DistributedBrokerImpl.unlock(),2,3
org.apache.openjpa.slice.DistributedBrokerImpl.beginStore(),2,2
org.apache.openjpa.slice.DistributedBrokerImpl.flush(int),5,7
org.apache.openjpa.slice.DistributedBrokerImpl.processArgument(Object),20,47
org.apache.openjpa.persistence.lockmgr.TestNamedQueryLockMode.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.lockmgr.TestNamedQueryLockMode.setUp(),8,11
org.apache.openjpa.persistence.lockmgr.TestNamedQueryLockMode.testForUpdateClausePresentInNamedQueryWithLockMode(),18,62
org.apache.openjpa.persistence.lockmgr.TestNamedQueryLockMode.testNamedQueryWithLockModeMustExecuteInTransaction(),21,34
org.apache.openjpa.persistence.lockmgr.TestNamedQueryLockMode.testForUpdateClausePresentInQueryWithDefault(),33,83
org.apache.openjpa.persistence.lockmgr.TestNamedQueryLockMode.testForUpdateClauseAbsentInQueryWithFetchPlanNoneLockMode(),26,73
org.apache.openjpa.persistence.lockmgr.TestNamedQueryLockMode.testForUpdateClauseAbsentInQueryWithExplictNoLock(),19,45
org.apache.openjpa.persistence.lockmgr.TestNamedQueryLockMode.getLastSQL(),4,8
"org.apache.openjpa.persistence.lockmgr.TestNamedQueryLockMode.assertClausePresentInSQL(String,Query)",8,13
"org.apache.openjpa.persistence.lockmgr.TestNamedQueryLockMode.assertClauseAbsentInSQL(String,Query)",9,15
"org.apache.openjpa.slice.policy.EvenOddDistributionPolicy.distribute(Object,List<String>,Object)",14,27
org.apache.openjpa.slice.policy.EvenOddDistributionPolicy.distribute(Car),3,4
org.apache.openjpa.slice.policy.EvenOddDistributionPolicy.distribute(Manufacturer),5,5
org.apache.openjpa.slice.Address.getVersion(),1,2
org.apache.openjpa.slice.Address.Address(),1,1
"org.apache.openjpa.slice.Address.Address(String,int)",5,10
org.apache.openjpa.slice.Address.getCity(),2,3
org.apache.openjpa.slice.Address.setCity(String),3,6
org.apache.openjpa.slice.Address.getZip(),1,2
org.apache.openjpa.slice.Address.setZip(int),2,5
org.apache.openjpa.slice.Address.getOwner(),2,3
org.apache.openjpa.slice.Address.setOwner(Person),3,6
org.apache.openjpa.slice.Address.getId(),0,0
org.apache.openjpa.slice.Address.toString(),2,3
org.apache.openjpa.slice.Address.getCountry(),1,3
org.apache.openjpa.slice.Address.setCountry(Country),2,6
org.apache.openjpa.persistence.simple.TestEntityManagerClear.setUp(),5,6
org.apache.openjpa.persistence.simple.TestEntityManagerClear.testDetach(),19,73
org.apache.openjpa.persistence.simple.TestEntityManagerClear.testClear(),29,90
org.apache.openjpa.persistence.simple.TestEntityManagerClear.testNewClearMerge(),30,71
org.apache.openjpa.persistence.simple.TestEntityManagerClear.testUpdateClearMerge(),31,66
org.apache.openjpa.persistence.simple.TestEntityManagerClear.testUpdateClearUpdateMerge(),42,94
org.apache.openjpa.persistence.simple.TestEntityManagerClear.testUpdateFlushClearUpdateMerge(),34,82
org.apache.openjpa.persistence.simple.TestEntityManagerClear.main(String[]),8,9
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerDeadlock.setUp(),36,109
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerDeadlock.testFindDeadLockException(),13,46
"org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerDeadlock.commonFindTest(String,LockModeType,Class<>[])",27,83
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerDeadlock.testNamedQueryDeadLockException(),17,63
"org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerDeadlock.commonNamedQueryTest(String,LockModeType,Class<>[])",35,118
org.apache.openjpa.persistence.lock.extended.LSE1xmLfEgr.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSE1xmLfEgr.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSE1xmLfEgr.getFirstName(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1xmLfEgr.setFirstName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSE1xmLfEgr.getUniRight(),3,4
org.apache.openjpa.persistence.lock.extended.LSE1xmLfEgr.setUnitRight(Collection<LSE1xmRt>),5,7
org.apache.openjpa.persistence.lock.extended.LSE1xmLfEgr.addUnitRight(LSE1xmRt),4,7
org.apache.openjpa.persistence.lock.extended.LSE1xmLfEgr.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSE1xmLfEgr.toString(),12,16
org.apache.openjpa.persistence.lock.extended.LSE1xmLfEgr.readExternal(ObjectInput),12,18
org.apache.openjpa.persistence.lock.extended.LSE1xmLfEgr.writeExternal(ObjectOutput),9,14
org.apache.openjpa.persistence.lockmgr.Person.getId(),0,0
org.apache.openjpa.persistence.lockmgr.Person.setId(int),1,1
org.apache.openjpa.persistence.lockmgr.Person.getFirstName(),2,3
org.apache.openjpa.persistence.lockmgr.Person.setFirstName(String),3,6
org.apache.openjpa.persistence.lockmgr.Person.getLastName(),2,3
org.apache.openjpa.persistence.lockmgr.Person.setLastName(String),3,6
org.apache.openjpa.persistence.lockmgr.Person.getPhoneNumbers(),2,4
org.apache.openjpa.persistence.lockmgr.Person.setPhoneNumbers(List<PhoneNumber>),3,5
org.apache.openjpa.persistence.lockmgr.Person.toString(),9,15
org.apache.openjpa.persistence.lockmgr.Person.readExternal(ObjectInput),10,21
org.apache.openjpa.persistence.lockmgr.Person.writeExternal(ObjectOutput),7,15
org.apache.openjpa.slice.SliceTestCase.setUp(Object),13,20
org.apache.openjpa.slice.SliceTestCase.count(Class<>),14,21
org.apache.openjpa.persistence.strategy.value.ValueStrategyHandler.getInstance(),4,5
"org.apache.openjpa.persistence.strategy.value.ValueStrategyHandler.map(ValueMapping,String,ColumnIO,boolean)",12,26
"org.apache.openjpa.persistence.strategy.value.ValueStrategyHandler.toDataStoreValue(ValueMapping,Object,JDBCStore)",8,14
"org.apache.openjpa.persistence.strategy.value.ValueStrategyHandler.toObjectValue(ValueMapping,Object)",5,10
org.apache.openjpa.persistence.lockmgr.TestLocking.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.lockmgr.TestLocking.setUp(),9,10
org.apache.openjpa.persistence.lockmgr.TestLocking.testExtendedLockScope(),77,148
org.apache.openjpa.persistence.lockmgr.TestLocking.CommitterThread.CommitterThread(OpenJPAEntityManagerSPI),6,6
org.apache.openjpa.persistence.lockmgr.TestLocking.CommitterThread.run(),14,22
org.apache.openjpa.persistence.lockmgr.TestLocking.populate(),18,40
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerNonVersion.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerNonVersion.setUp(),9,13
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerNonVersion.testFindNonVersionWithLock(),16,70
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerNonVersion.commonFindNonVerWithLock(LockModeType),20,69
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerNonVersion.testLockNonVersionWithLock(),16,80
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerNonVersion.commonLockNonVerWithLock(LockModeType),20,74
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerNonVersion.testRefreshNonVersionWithLock(),17,80
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerNonVersion.commonRefreshNonVerWithLock(LockModeType),21,78
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerNonVersion.commonSetUp(),22,39
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerNonVersion.cleanupDB(),20,24
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerNonVersion.newEmployee(int),4,11
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerNonVersion.getLog(),4,6
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerNonVersion.getDumpStackLog(),5,9
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerNonVersion.logStack(Throwable),9,24
org.apache.openjpa.slice.DistributedStoreManager.addSlice(Slice),23,44
org.apache.openjpa.slice.PObject.PObject(),3,3
org.apache.openjpa.slice.PObject.getId(),0,0
org.apache.openjpa.slice.PObject.getValue(),1,2
org.apache.openjpa.slice.PObject.setValue(int),2,3
org.apache.openjpa.tools.maven.AbstractOpenJpaMojo.AbstractOpenJpaMojo(),2,2
org.apache.openjpa.tools.maven.AbstractOpenJpaMojo.getEntityClasses(),10,15
org.apache.openjpa.tools.maven.AbstractOpenJpaMojo.getClasspathElements(),11,19
org.apache.openjpa.tools.maven.AbstractOpenJpaMojo.getOptions(),8,11
org.apache.openjpa.tools.maven.AbstractOpenJpaMojo.skipMojo(),18,50
org.apache.openjpa.tools.maven.AbstractOpenJpaMojo.createOptions(),36,104
org.apache.openjpa.tools.maven.AbstractOpenJpaMojo.fixPersistenceXmlIfNeeded(ClassLoader),14,34
org.apache.openjpa.tools.maven.AbstractOpenJpaMojo.findPersistenceXmlFromLoader(ClassLoader),26,81
org.apache.openjpa.tools.maven.AbstractOpenJpaMojo.findPersistenceXmlInArtifacts(List<Artifact>),19,40
org.apache.openjpa.tools.maven.AbstractOpenJpaMojo.extendRealmClasspath(),40,90
org.apache.openjpa.tools.maven.AbstractOpenJpaMojo.findEntityClassFiles(),22,51
org.apache.openjpa.tools.maven.AbstractOpenJpaMojo.getFilePaths(List<File>),10,28
org.apache.openjpa.slice.jdbc.DistributedConnection.DistributedConnection(List<Connection>),9,14
org.apache.openjpa.slice.jdbc.DistributedConnection.contains(Connection),3,4
org.apache.openjpa.slice.jdbc.DistributedConnection.clearWarnings(),5,6
org.apache.openjpa.slice.jdbc.DistributedConnection.close(),5,6
org.apache.openjpa.slice.jdbc.DistributedConnection.commit(),5,6
org.apache.openjpa.slice.jdbc.DistributedConnection.createStatement(),9,17
"org.apache.openjpa.slice.jdbc.DistributedConnection.createStatement(int,int)",10,21
"org.apache.openjpa.slice.jdbc.DistributedConnection.createStatement(int,int,int)",10,23
org.apache.openjpa.slice.jdbc.DistributedConnection.getAutoCommit(),5,7
org.apache.openjpa.slice.jdbc.DistributedConnection.getCatalog(),5,6
org.apache.openjpa.slice.jdbc.DistributedConnection.getHoldability(),4,5
org.apache.openjpa.slice.jdbc.DistributedConnection.getMetaData(),6,10
org.apache.openjpa.slice.jdbc.DistributedConnection.getTransactionIsolation(),5,7
org.apache.openjpa.slice.jdbc.DistributedConnection.getTypeMap(),6,9
org.apache.openjpa.slice.jdbc.DistributedConnection.getWarnings(),5,7
org.apache.openjpa.slice.jdbc.DistributedConnection.isClosed(),6,9
org.apache.openjpa.slice.jdbc.DistributedConnection.isReadOnly(),6,9
org.apache.openjpa.slice.jdbc.DistributedConnection.nativeSQL(String),5,9
org.apache.openjpa.slice.jdbc.DistributedConnection.prepareCall(String),10,11
"org.apache.openjpa.slice.jdbc.DistributedConnection.prepareCall(String,int,int)",10,13
"org.apache.openjpa.slice.jdbc.DistributedConnection.prepareCall(String,int,int,int)",10,14
org.apache.openjpa.slice.jdbc.DistributedConnection.prepareStatement(String),19,34
"org.apache.openjpa.slice.jdbc.DistributedConnection.prepareStatement(String,int)",12,25
"org.apache.openjpa.slice.jdbc.DistributedConnection.prepareStatement(String,int[])",12,25
"org.apache.openjpa.slice.jdbc.DistributedConnection.prepareStatement(String,String[])",12,26
"org.apache.openjpa.slice.jdbc.DistributedConnection.prepareStatement(String,int,int)",12,27
"org.apache.openjpa.slice.jdbc.DistributedConnection.prepareStatement(String,int,int,int)",12,28
org.apache.openjpa.slice.jdbc.DistributedConnection.releaseSavepoint(Savepoint),7,11
org.apache.openjpa.slice.jdbc.DistributedConnection.rollback(),5,6
org.apache.openjpa.slice.jdbc.DistributedConnection.rollback(Savepoint),7,9
org.apache.openjpa.slice.jdbc.DistributedConnection.setAutoCommit(boolean),8,12
org.apache.openjpa.slice.jdbc.DistributedConnection.setCatalog(String),8,11
org.apache.openjpa.slice.jdbc.DistributedConnection.setHoldability(int),7,10
org.apache.openjpa.slice.jdbc.DistributedConnection.setReadOnly(boolean),7,10
org.apache.openjpa.slice.jdbc.DistributedConnection.setSavepoint(),6,8
org.apache.openjpa.slice.jdbc.DistributedConnection.setSavepoint(String),8,10
org.apache.openjpa.slice.jdbc.DistributedConnection.setTransactionIsolation(int),8,12
org.apache.openjpa.slice.jdbc.DistributedConnection.setTypeMap(Map<Class<String>>),9,14
org.apache.openjpa.slice.jdbc.DistributedConnection.isWrapperFor(Class<>),6,7
org.apache.openjpa.slice.jdbc.DistributedConnection.unwrap(Class<T>),6,7
"org.apache.openjpa.slice.jdbc.DistributedConnection.createArrayOf(String,Object[])",9,12
org.apache.openjpa.slice.jdbc.DistributedConnection.createBlob(),6,8
org.apache.openjpa.slice.jdbc.DistributedConnection.createClob(),6,8
org.apache.openjpa.slice.jdbc.DistributedConnection.createNClob(),6,8
org.apache.openjpa.slice.jdbc.DistributedConnection.createSQLXML(),6,8
"org.apache.openjpa.slice.jdbc.DistributedConnection.createStruct(String,Object[])",9,12
org.apache.openjpa.slice.jdbc.DistributedConnection.getClientInfo(),7,8
org.apache.openjpa.slice.jdbc.DistributedConnection.getClientInfo(String),8,10
org.apache.openjpa.slice.jdbc.DistributedConnection.isValid(int),6,7
org.apache.openjpa.slice.jdbc.DistributedConnection.setClientInfo(Properties),9,12
"org.apache.openjpa.slice.jdbc.DistributedConnection.setClientInfo(String,String)",9,14
org.apache.openjpa.slice.jdbc.DistributedConnection.abort(Executor),6,8
org.apache.openjpa.slice.jdbc.DistributedConnection.getNetworkTimeout(),6,7
"org.apache.openjpa.slice.jdbc.DistributedConnection.setNetworkTimeout(Executor,int)",9,11
org.apache.openjpa.slice.jdbc.DistributedConnection.getSchema(),6,7
org.apache.openjpa.slice.jdbc.DistributedConnection.setSchema(String),7,9
org.apache.openjpa.persistence.lock.extended.LSEBase.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSEBase.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSEBase.getFirstName(),2,3
org.apache.openjpa.persistence.lock.extended.LSEBase.setFirstName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSEBase.getLastName(),2,3
org.apache.openjpa.persistence.lock.extended.LSEBase.setLastName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSEBase.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSEBase.toString(),10,14
org.apache.openjpa.persistence.lock.extended.LSEBase.readExternal(ObjectInput),9,18
org.apache.openjpa.persistence.lock.extended.LSEBase.writeExternal(ObjectOutput),7,14
org.apache.openjpa.persistence.lockmgr.LockEmployeeNonVersion.getId(),0,0
org.apache.openjpa.persistence.lockmgr.LockEmployeeNonVersion.setId(int),1,1
org.apache.openjpa.persistence.lockmgr.LockEmployeeNonVersion.getFirstName(),2,3
org.apache.openjpa.persistence.lockmgr.LockEmployeeNonVersion.setFirstName(String),3,6
org.apache.openjpa.persistence.lockmgr.LockEmployeeNonVersion.getLastName(),2,3
org.apache.openjpa.persistence.lockmgr.LockEmployeeNonVersion.setLastName(String),3,6
org.apache.openjpa.persistence.lockmgr.LockEmployeeNonVersion.toString(),8,12
org.apache.openjpa.persistence.lockmgr.LockEmployeeNonVersion.readExternal(ObjectInput),8,16
org.apache.openjpa.persistence.lockmgr.LockEmployeeNonVersion.writeExternal(ObjectOutput),6,12
"org.apache.openjpa.slice.Slice.Slice(String,OpenJPAConfiguration)",10,17
org.apache.openjpa.slice.Slice.getName(),4,6
org.apache.openjpa.slice.Slice.getConfiguration(),3,4
org.apache.openjpa.slice.Slice.getStatus(),1,3
org.apache.openjpa.slice.Slice.setStatus(Status),2,6
org.apache.openjpa.slice.Slice.isActive(),2,4
org.apache.openjpa.slice.Slice.toString(),2,3
org.apache.openjpa.slice.Slice.compareTo(Slice),3,5
org.apache.openjpa.slice.Slice.equals(Object),4,7
org.apache.openjpa.slice.Slice.hashCode(),3,5
org.apache.openjpa.persistence.xml.TestToOneLazyXmlOverride.setUp(),6,7
org.apache.openjpa.persistence.xml.TestToOneLazyXmlOverride.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.xml.TestToOneLazyXmlOverride.testToManyLazyOverride(),29,61
org.apache.openjpa.slice.jdbc.SliceStoreManager.SliceStoreManager(Slice),7,12
org.apache.openjpa.slice.jdbc.SliceStoreManager.getSlice(),2,5
org.apache.openjpa.slice.jdbc.SliceStoreManager.getName(),3,4
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJTLzy.getId(),0,0
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJTLzy.setId(int),1,1
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJTLzy.getFirstName(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJTLzy.setFirstName(String),3,6
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJTLzy.getUniRightJT(),2,3
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJTLzy.setUniRightJT(LSE1x1Rt),3,6
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJTLzy.getVersion(),1,2
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJTLzy.toString(),11,16
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJTLzy.readExternal(ObjectInput),11,17
org.apache.openjpa.persistence.lock.extended.LSE1x1LfJTLzy.writeExternal(ObjectOutput),9,14
org.apache.openjpa.enhance.stats.FetchStatsCollector.setlogger(Log),9,20
org.apache.openjpa.enhance.stats.FetchStatsCollector.$1.run(),8,18
org.apache.openjpa.enhance.stats.FetchStatsCollector.$1.run().$1.run(),2,2
org.apache.openjpa.enhance.stats.FetchStatsCollector.registerEntity(ClassMetaData),10,11
org.apache.openjpa.enhance.stats.FetchStatsCollector.registerField(String),7,12
org.apache.openjpa.enhance.stats.FetchStatsCollector.hit(String),7,10
org.apache.openjpa.enhance.stats.FetchStatsCollector.Shutdown.run(),4,4
org.apache.openjpa.enhance.stats.FetchStatsCollector.getStatistics(),13,29
org.apache.openjpa.enhance.stats.FetchStatsCollector.dump(),19,39
org.apache.openjpa.enhance.stats.FetchStatsCollector.clear(),7,13
"org.apache.openjpa.enhance.stats.FetchStatsCollector.Container.Container(String,int)",4,8
org.apache.openjpa.enhance.stats.FetchStatsCollector.Container.getName(),2,3
org.apache.openjpa.enhance.stats.FetchStatsCollector.Container.getValue(),2,3
org.apache.openjpa.enhance.stats.FetchStatsCollector.Container.toString(),2,3
org.apache.openjpa.slice.TestBasic.getPersistenceUnitName(),11,21
org.apache.openjpa.slice.TestBasic.setUp(),7,8
org.apache.openjpa.slice.TestBasic.createIndependentObjects(int),17,32
org.apache.openjpa.slice.TestBasic.createIndependentObject(),5,10
org.apache.openjpa.slice.TestBasic.testDelete(),21,35
org.apache.openjpa.slice.TestBasic.testBulkDelete(),16,28
org.apache.openjpa.slice.TestBasic.testFind(),12,24
org.apache.openjpa.slice.TestBasic.testReference(),18,44
org.apache.openjpa.slice.TestBasic.testPersistIndependentObjects(),14,21
org.apache.openjpa.slice.TestBasic.testPersistConnectedObjectGraph(),32,89
org.apache.openjpa.slice.TestBasic.testMerge(),22,36
org.apache.openjpa.slice.TestBasic.testPersistReplicatedObjects(),25,61
org.apache.openjpa.slice.TestBasic.testUpdateReplicatedObjects(),45,122
org.apache.openjpa.slice.TestBasic.testQuerySingleObject(),20,38
org.apache.openjpa.slice.TestBasic.testGetConnection(),9,14
org.apache.openjpa.slice.TestBasic.testDynamicSlice(),24,47
"org.apache.openjpa.slice.TestBasic.testDynamicSlice().$1.distribute(Object,List<String>,Object)",31,62
org.apache.openjpa.slice.DistributedBroker.getDistributedStoreManager(),4,10
org.apache.openjpa.slice.DistributedBroker.getFetchConfiguration(),6,10
org.apache.openjpa.slice.jdbc.DistributedDataSource.DistributedDataSource(List<DataSource>),7,16
org.apache.openjpa.slice.jdbc.DistributedDataSource.addDataSource(DataSource),4,7
org.apache.openjpa.slice.jdbc.DistributedDataSource.getConnection(DataSource),8,22
"org.apache.openjpa.slice.jdbc.DistributedDataSource.getConnection(DataSource,String,String)",11,32
org.apache.openjpa.slice.jdbc.DistributedDataSource.iterator(),4,6
org.apache.openjpa.slice.jdbc.DistributedDataSource.getConnection(),10,16
"org.apache.openjpa.slice.jdbc.DistributedDataSource.getConnection(String,String)",13,22
org.apache.openjpa.slice.jdbc.DistributedDataSource.getLogWriter(),6,9
org.apache.openjpa.slice.jdbc.DistributedDataSource.getLoginTimeout(),5,7
org.apache.openjpa.slice.jdbc.DistributedDataSource.setLogWriter(PrintWriter),9,13
org.apache.openjpa.slice.jdbc.DistributedDataSource.setLoginTimeout(int),8,11
org.apache.openjpa.slice.jdbc.DistributedDataSource.getParentLogger(),6,11
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockBasic.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockBasic.setUp(),7,10
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockBasic.testLockRead(),6,12
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockBasic.testLockWrite(),6,12
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockBasic.testLockOptimistic(),6,12
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockBasic.testLockOptimisticForceInc(),9,18
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockBasic.testLockPessimisticRead(),7,15
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockBasic.testLockPessimisticWrite(),7,15
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockBasic.testLockPessimisticForceInc(),9,18
"org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerLockBasic.testCommon(String,LockModeType,int,int)",25,141
org.apache.openjpa.slice.jdbc.DistributedJDBCBrokerFactory.newInstance(ConfigurationProvider),16,33
org.apache.openjpa.slice.jdbc.DistributedJDBCBrokerFactory.getInstance(ConfigurationProvider),20,49
org.apache.openjpa.slice.jdbc.DistributedJDBCBrokerFactory.getInstance(DistributedJDBCConfiguration),16,49
org.apache.openjpa.slice.jdbc.DistributedJDBCBrokerFactory.DistributedJDBCBrokerFactory(DistributedJDBCConfiguration),6,9
org.apache.openjpa.slice.jdbc.DistributedJDBCBrokerFactory.getConfiguration(),3,8
"org.apache.openjpa.slice.jdbc.DistributedJDBCBrokerFactory.addSlice(String,Map)",25,52
org.apache.openjpa.slice.jdbc.DistributedJDBCBrokerFactory.newStoreManager(),5,11
org.apache.openjpa.slice.jdbc.DistributedJDBCBrokerFactory.newBroker(),3,6
org.apache.openjpa.slice.jdbc.DistributedJDBCBrokerFactory.synchronizeMappings(ClassLoader),10,22
org.apache.openjpa.slice.jdbc.DistributedJDBCBrokerFactory.getFactoryInitializationBanner(),8,10
org.apache.openjpa.slice.TestQuery.getPersistenceUnitName(),4,4
org.apache.openjpa.slice.TestQuery.setUp(),12,17
org.apache.openjpa.slice.TestQuery.create(int),27,67
org.apache.openjpa.slice.TestQuery.testOrderedQueryResultWhenOrderableItemSelected(),24,56
org.apache.openjpa.slice.TestQuery.testOrderedQueryResultWhenOrderableItemNotSelected(),21,43
org.apache.openjpa.slice.TestQuery.testOrderedQueryResultWhenNavigatedOrderableItemNotSelected(),29,64
org.apache.openjpa.slice.TestQuery.testAggregateQuery(),22,102
org.apache.openjpa.slice.TestQuery.testAggregateQueryWithMissingValueFromSlice(),20,33
org.apache.openjpa.slice.TestQuery.testSetMaxResult(),24,47
org.apache.openjpa.slice.TestQuery.testHint(),25,53
org.apache.openjpa.slice.TestQuery.testQueryTargetPolicy(),24,50
org.apache.openjpa.slice.TestQuery.testInMemoryOrderBy(),15,24
org.apache.openjpa.slice.TestQuery.testQueryParameter(),16,27
org.apache.openjpa.slice.TestQuery.testQueryParameterEntity(),24,62
org.apache.openjpa.slice.TestQuery.testCollocationConstraintViolation(),62,146
org.apache.openjpa.slice.TestQuery.assertValidResult(List),5,9
org.apache.openjpa.persistence.lockmgr.Department.getEmployees(),3,4
org.apache.openjpa.persistence.lockmgr.Department.getId(),0,0
org.apache.openjpa.persistence.lockmgr.Department.setId(int),1,1
org.apache.openjpa.persistence.lockmgr.Department.getName(),2,3
org.apache.openjpa.persistence.lockmgr.Department.setName(String),3,6
org.apache.openjpa.persistence.lockmgr.Department.toString(),8,11
org.apache.openjpa.persistence.lockmgr.Department.readExternal(ObjectInput),8,12
org.apache.openjpa.persistence.lockmgr.Department.writeExternal(ObjectOutput),6,9
org.apache.openjpa.slice.Country.getName(),2,3
org.apache.openjpa.slice.Country.setName(String),3,6
org.apache.openjpa.slice.Country.getPopulation(),1,2
org.apache.openjpa.slice.Country.setPopulation(long),2,5
org.apache.openjpa.slice.Country.getVersion(),1,2
org.apache.openjpa.tools.maven.OpenJpaTestEnhancerMojo.getClasspathElements(),11,22
org.apache.openjpa.tools.maven.OpenJpaTestEnhancerMojo.getEntityClasses(),11,18
org.apache.openjpa.tools.maven.OpenJpaTestEnhancerMojo.skipMojo(),8,16
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.DistributedTemplate(DistributedConnection),4,5
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.iterator(),2,4
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.add(T),14,18
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.addBatch(String),5,9
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.cancel(),3,4
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.clearBatch(),3,4
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.clearWarnings(),3,4
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.close(),3,4
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.execute(String),6,11
"org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.execute(String,int)",6,13
"org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.execute(String,int[])",6,13
"org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.execute(String,String[])",6,14
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.executeBatch(),10,25
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.executeQuery(),8,15
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.executeQuery(String),10,18
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.executeUpdate(String),7,12
"org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.executeUpdate(String,int)",7,14
"org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.executeUpdate(String,int[])",7,14
"org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.executeUpdate(String,String[])",7,15
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getConnection(),4,5
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getFetchDirection(),5,7
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getFetchSize(),5,7
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getGeneratedKeys(),8,15
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getMaxFieldSize(),6,9
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getMaxRows(),5,7
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getMoreResults(),3,4
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getMoreResults(int),4,6
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getQueryTimeout(),5,7
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getResultSet(),6,15
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getResultSetConcurrency(),6,9
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getResultSetHoldability(),6,9
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getResultSetType(),6,9
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getUpdateCount(),5,7
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.getWarnings(),5,7
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.setCursorName(String),6,11
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.setEscapeProcessing(boolean),6,10
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.setFetchDirection(int),6,10
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.setFetchSize(int),5,10
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.setMaxFieldSize(int),6,12
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.setMaxRows(int),5,8
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.setQueryTimeout(int),5,8
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.isWrapperFor(Class<>),6,7
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.unwrap(Class<T>),6,7
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.isClosed(),5,6
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.isPoolable(),5,6
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.setPoolable(boolean),7,8
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.isCloseOnCompletion(),6,7
org.apache.openjpa.slice.jdbc.DistributedTemplate<T>.closeOnCompletion(),6,7
"org.apache.openjpa.slice.DistributedBrokerFactory.addSlice(String,Map)",28,51
org.apache.openjpa.slice.TestXA.setUp(),6,7
org.apache.openjpa.slice.TestXA.testEmptyCommit(),9,13
org.apache.openjpa.slice.TestXA.testEmptyRollback(),9,13
org.apache.openjpa.slice.TestXA.testPersistIndependentObjects(),14,21
org.apache.openjpa.slice.TestXA.getPersistenceUnitName(),4,4
org.apache.openjpa.xmlstore.XMLStore.XMLStore(XMLConfiguration),6,10
"org.apache.openjpa.xmlstore.XMLStore.getData(ClassMetaData,Object)",7,19
org.apache.openjpa.xmlstore.XMLStore.getData(ClassMetaData),13,25
org.apache.openjpa.xmlstore.XMLStore.getMap(ClassMetaData),21,50
org.apache.openjpa.xmlstore.XMLStore.getLeastDerived(ClassMetaData),8,26
org.apache.openjpa.xmlstore.XMLStore.beginTransaction(),12,17
"org.apache.openjpa.xmlstore.XMLStore.endTransaction(Collection,Collection)",38,116
org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.DistributedPreparedStatement(DistributedConnection),4,5
org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.clearParameters(),5,6
org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.execute(),6,10
org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.executeQuery(),10,17
org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.executeUpdate(),7,11
org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.getMetaData(),7,11
org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.getParameterMetaData(),7,11
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setArray(int,Array)",6,9
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setAsciiStream(int,InputStream,int)",9,18
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setBigDecimal(int,BigDecimal)",7,13
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setBinaryStream(int,InputStream,int)",9,18
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setBlob(int,Blob)",7,13
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setBoolean(int,boolean)",6,10
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setByte(int,byte)",6,10
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setBytes(int,byte[])",7,12
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setCharacterStream(int,Reader,int)",9,17
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setClob(int,Clob)",7,13
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setDate(int,Date)",7,13
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setDate(int,Date,Calendar)",8,16
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setDouble(int,double)",6,10
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setFloat(int,float)",6,10
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setInt(int,int)",6,10
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setLong(int,long)",6,10
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setNull(int,int)",6,10
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setNull(int,int,String)",7,13
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setObject(int,Object)",7,13
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setObject(int,Object,int)",7,15
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setObject(int,Object,int,int)",7,17
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setRef(int,Ref)",7,13
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setShort(int,short)",6,10
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setString(int,String)",7,13
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setTime(int,Time)",7,13
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setTime(int,Time,Calendar)",8,16
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setTimestamp(int,Timestamp)",7,13
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setTimestamp(int,Timestamp,Calendar)",8,16
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setURL(int,URL)",7,13
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setUnicodeStream(int,InputStream,int)",9,18
org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.addBatch(),6,8
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setAsciiStream(int,InputStream)",9,12
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setAsciiStream(int,InputStream,long)",9,13
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setBinaryStream(int,InputStream)",9,12
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setBinaryStream(int,InputStream,long)",9,13
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setBlob(int,InputStream)",9,11
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setBlob(int,InputStream,long)",9,12
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setCharacterStream(int,Reader)",9,11
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setCharacterStream(int,Reader,long)",9,12
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setClob(int,Reader)",8,10
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setClob(int,Reader,long)",8,11
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setNCharacterStream(int,Reader)",9,11
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setNCharacterStream(int,Reader,long)",9,12
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setNClob(int,NClob)",7,10
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setNClob(int,Reader)",8,10
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setNClob(int,Reader,long)",8,11
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setNString(int,String)",7,10
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setRowId(int,RowId)",7,10
"org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.setSQLXML(int,SQLXML)",7,10
org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.isCloseOnCompletion(),6,7
org.apache.openjpa.slice.jdbc.DistributedPreparedStatement.closeOnCompletion(),6,7
"org.apache.openjpa.enhance.stats.AEntity.AEntity(int,String,String,BEntity)",7,19
org.apache.openjpa.enhance.stats.AEntity.getFullInfo(),4,4
org.apache.openjpa.enhance.stats.AEntity.isChecked(),1,2
org.apache.openjpa.enhance.stats.AEntity.getReferredBEntityName(),4,7
org.apache.openjpa.enhance.stats.AEntity.getExtraInfo(),4,7
org.apache.openjpa.tools.maven.test.it.dependingartifact.MyEntityInterface.getMessageChannel(),2,4
org.apache.openjpa.tools.maven.test.it.dependingartifact.MyEntityInterface.setMessageChannel(MessageChannel),3,7
org.apache.openjpa.persistence.lockmgr.TestOptimisticNamedQueryLockMode.getPersistenceUnitName(),6,6
org.apache.openjpa.persistence.lockmgr.TestOptimisticNamedQueryLockMode.setUp(),7,9
org.apache.openjpa.persistence.lockmgr.TestOptimisticNamedQueryLockMode.testForUpdateClausePresentInNamedQueryWithLockMode(),22,69
org.apache.openjpa.persistence.lockmgr.TestOptimisticNamedQueryLockMode.testForUpdateClausePresentInQueryWithDefault(),30,75
org.apache.openjpa.persistence.lockmgr.TestOptimisticNamedQueryLockMode.testForUpdateClauseAbsentInQueryWithFetchPlanNoneLockMode(),29,82
org.apache.openjpa.persistence.lockmgr.TestOptimisticNamedQueryLockMode.testForUpdateClauseAbsentInQueryWithExplictNoLock(),23,51
org.apache.openjpa.persistence.lockmgr.TestOptimisticNamedQueryLockMode.getLastSQL(),4,8
"org.apache.openjpa.persistence.lockmgr.TestOptimisticNamedQueryLockMode.assertClausePresentInSQL(String,Query)",8,13
"org.apache.openjpa.persistence.lockmgr.TestOptimisticNamedQueryLockMode.assertClauseAbsentInSQL(String,Query)",9,15
"org.apache.openjpa.slice.ReplicationPolicy.replicate(Object,List<String>,Object)",32,59
"org.apache.openjpa.slice.ReplicationPolicy.Default.replicate(Object,List<String>,Object)",8,13
org.apache.openjpa.tools.maven.AbstractOpenJpaMappingToolMojo.execute(),25,35
org.apache.openjpa.tools.maven.AbstractOpenJpaMappingToolMojo.mappingTool(List<File>),34,61
org.apache.openjpa.tools.maven.AbstractOpenJpaMappingToolMojo.mappingTool(List<File>).$1.run(Options),13,20
"org.apache.openjpa.tools.maven.AbstractOpenJpaMappingToolMojo.filterPersistenceCapable(List<File>,Options)",47,113
org.apache.openjpa.tools.maven.AbstractOpenJpaMappingToolMojo.implementsPersistenceCapable(Class<>),11,29
org.apache.openjpa.slice.jdbc.DistributedStatement.DistributedStatement(DistributedConnection),3,4
"org.apache.openjpa.slice.DistributionPolicy.distribute(Object,List<String>,Object)",44,81
"org.apache.openjpa.slice.DistributionPolicy.Default.distribute(Object,List<String>,Object)",8,12
org.apache.openjpa.tools.maven.OpenJpaSchemaMojo.getOptions(),16,36
org.apache.openjpa.enhance.stats.BEntity.getId(),0,0
org.apache.openjpa.enhance.stats.BEntity.setId(int),1,1
org.apache.openjpa.enhance.stats.BEntity.setName(String),3,6
org.apache.openjpa.enhance.stats.BEntity.setDesc(String),3,6
org.apache.openjpa.enhance.stats.BEntity.getName(),2,3
org.apache.openjpa.enhance.stats.BEntity.getCustomDesc(),3,4
"org.apache.openjpa.enhance.stats.BEntity.BEntity(int,String,String)",5,12
org.apache.openjpa.enhance.stats.BEntity.BEntity(),1,1
org.apache.openjpa.enhance.stats.BEntity.setBool(boolean),2,3
org.apache.openjpa.enhance.stats.BEntity.isBool(),1,2
"org.apache.openjpa.slice.policy.SampleFinderPolicy.getTargets(Class<>,Object,List<String>,Object)",21,47
"org.apache.openjpa.slice.SliceImplHelper.getSlicesByPolicy(Object,DistributedConfiguration,Object)",55,156
"org.apache.openjpa.slice.SliceImplHelper.assertSlices(String[],Object,List<String>,Object)",16,38
"org.apache.openjpa.slice.SliceImplHelper.getSlicesByPolicy(OpenJPAStateManager,DistributedConfiguration,Object)",14,20
"org.apache.openjpa.slice.SliceImplHelper.isReplicated(Object,DistributedConfiguration)",5,7
org.apache.openjpa.slice.SliceImplHelper.isSliceAssigned(OpenJPAStateManager),8,14
org.apache.openjpa.slice.SliceImplHelper.getSliceInfo(OpenJPAStateManager),8,16
org.apache.openjpa.slice.Person.Person(),1,1
org.apache.openjpa.slice.Person.Person(String),4,6
org.apache.openjpa.slice.Person.getName(),2,3
org.apache.openjpa.slice.Person.setName(String),3,6
org.apache.openjpa.slice.Person.getAddress(),1,3
org.apache.openjpa.slice.Person.setAddress(Address),3,9
org.apache.openjpa.slice.Person.getId(),0,0
org.apache.openjpa.slice.Person.toString(),2,3
org.apache.openjpa.slice.Person.getVersion(),1,2
org.apache.openjpa.enhance.stats.ChildEntity.getChildId(),1,2
org.apache.openjpa.enhance.stats.ChildEntity.setChildId(int),2,5
org.apache.openjpa.enhance.stats.ChildEntity.setChildDesc(String),4,10
org.apache.openjpa.enhance.stats.ChildEntity.getChildDesc(),3,5
org.apache.openjpa.enhance.stats.ChildEntity.getChildName(),3,5
org.apache.openjpa.enhance.stats.ChildEntity.setChildName(String),4,10
"org.apache.openjpa.enhance.stats.ChildEntity.ChildEntity(int,String,String,String)",7,22
org.apache.openjpa.slice.jdbc.DistributedJDBCConfiguration.getMasterSlice(),2,5
org.apache.openjpa.tools.maven.OpenJpaEnhancerMojoTest.setUp(),2,3
org.apache.openjpa.tools.maven.OpenJpaEnhancerMojoTest.testExecution(),28,54
org.apache.openjpa.slice.TestTransaction.getPersistenceUnitName(),7,8
org.apache.openjpa.slice.TestTransaction.setUp(),21,34
org.apache.openjpa.slice.TestTransaction.testCommitsAreAtomic(),12,31
"org.apache.openjpa.slice.TestTransaction.getManufacturer(EntityManager,Slice)",7,16
org.apache.openjpa.slice.TestTransaction.persistManufacturers(List<Slice>),15,31
org.apache.openjpa.slice.TestTransaction.persistCars(boolean),27,63
org.apache.openjpa.slice.TestTransaction.newCar(Manufacturer),8,19
org.apache.openjpa.slice.TestTransaction.randomString(int),5,10
"org.apache.openjpa.slice.TestTransaction.CarDistributorPolicy.distribute(Object,List<String>,Object)",13,26
org.apache.openjpa.slice.TestConfiguration.getPersistenceUnitName(),5,5
org.apache.openjpa.slice.TestConfiguration.testConfig(),26,73
org.apache.openjpa.slice.TestConfiguration.testDynamicConfiguration(),37,77
"org.apache.openjpa.slice.SliceInfo.SliceInfo(boolean,String[])",14,22
"org.apache.openjpa.slice.SliceInfo.SliceInfo(boolean,List<String>)",17,27
org.apache.openjpa.slice.SliceInfo.SliceInfo(String),3,6
org.apache.openjpa.slice.SliceInfo.SliceInfo(String[]),8,10
org.apache.openjpa.slice.SliceInfo.SliceInfo(List<String>),5,6
org.apache.openjpa.slice.SliceInfo.isReplicated(),1,2
org.apache.openjpa.slice.SliceInfo.getSlices(),6,7
org.apache.openjpa.slice.SliceInfo.setInto(OpenJPAStateManager),25,47
org.apache.openjpa.slice.TestQueryMultiThreaded.getPersistenceUnitName(),4,4
org.apache.openjpa.slice.TestQueryMultiThreaded.setUp(),24,32
org.apache.openjpa.slice.TestQueryMultiThreaded.setUp().$1.newThread(Runnable),2,4
org.apache.openjpa.slice.TestQueryMultiThreaded.tearDown(),3,4
org.apache.openjpa.slice.TestQueryMultiThreaded.create(int),27,67
org.apache.openjpa.slice.TestQueryMultiThreaded.testQueryResultIsOrderedAcrossSlice(),21,30
org.apache.openjpa.slice.TestQueryMultiThreaded.testQueryResultIsOrderedAcrossSlice().$2.call(),11,30
org.apache.openjpa.slice.TestQueryMultiThreaded.testAggregateQuery(),24,61
org.apache.openjpa.slice.TestQueryMultiThreaded.testAggregateQuery().$3.call(),12,65
org.apache.openjpa.slice.TestQueryMultiThreaded.testAggregateQueryWithMissingValueFromSlice(),23,33
org.apache.openjpa.slice.TestQueryMultiThreaded.testAggregateQueryWithMissingValueFromSlice().$4.call(),7,12
org.apache.openjpa.slice.TestQueryMultiThreaded.testSetMaxResult(),23,30
org.apache.openjpa.slice.TestQueryMultiThreaded.testSetMaxResult().$5.call(),14,28
org.apache.openjpa.slice.TestQueryMultiThreaded.testHeavyLoad(),14,21
org.apache.openjpa.slice.TestQueryMultiThreaded.testHeavyLoad().$6.run(),16,20
org.apache.openjpa.slice.TestQueryMultiThreaded.testHint(),23,33
org.apache.openjpa.slice.TestQueryMultiThreaded.testHint().$7.call(),13,24
org.apache.openjpa.slice.TestQueryMultiThreaded.testInMemoryOrderBy(),19,26
org.apache.openjpa.slice.TestQueryMultiThreaded.testInMemoryOrderBy().$8.call(),5,7
org.apache.openjpa.slice.TestQueryMultiThreaded.testQueryParameter(),19,27
org.apache.openjpa.slice.TestQueryMultiThreaded.testQueryParameter().$9.call(),7,10
org.apache.openjpa.slice.TestQueryMultiThreaded.testQueryParameterEntity(),22,42
org.apache.openjpa.slice.TestQueryMultiThreaded.testQueryParameterEntity().$10.call(),16,37
org.apache.openjpa.slice.TestQueryMultiThreaded.waitForTermination(),16,23
org.apache.openjpa.slice.TestQueryMultiThreaded.getStackDump(Throwable),7,17
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setShortField(short),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getShortField(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setIntField(int),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getIntField(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setBooleanField(boolean),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getBooleanField(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setLongField(long),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getLongField(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setFloatField(float),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getFloatField(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setCharField(char),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getCharField(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setDoubleField(double),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getDoubleField(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setByteField(byte),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getByteField(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setStringField(String),3,10
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getStringField(),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setDateField(Date),3,10
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getDateField(),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setSetOfStrings(Set<String>),3,11
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getSetOfStrings(),3,6
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setArrayOfStrings(String[]),4,10
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getArrayOfStrings(),3,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setArrayOfInts(int[]),3,9
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getArrayOfInts(),2,4
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getBigDecimalField(),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setBigDecimalField(BigDecimal),3,10
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getBigIntegerField(),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setBigIntegerField(BigInteger),3,10
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getByteLob(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setByteLob(byte[]),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getCalendarField(),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setCalendarField(Calendar),3,10
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getCharLob(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setCharLob(char[]),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getEnumField(),2,3
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setEnumField(EnumType),3,6
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getSerializableField(),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setSerializableField(Serializable),3,10
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getSqlDateField(),4,9
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setSqlDateField(java.sql.Date),5,16
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getSqlTimeField(),4,9
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setSqlTimeField(java.sql.Time),5,16
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getSqlTimestampField(),4,9
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setSqlTimestampField(java.sql.Timestamp),5,16
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getWBooleanField(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setWBooleanField(Boolean),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getWByteField(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setWByteField(Byte),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getWByteLob(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setWByteLob(Byte[]),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getWCharacterField(),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setWCharacterField(Character),3,10
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getWCharacterLob(),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setWCharacterLob(Character[]),3,10
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getWDoubleField(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setWDoubleField(Double),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getWFloatField(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setWFloatField(Float),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getWIntegerField(),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setWIntegerField(Integer),3,10
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getWLongField(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setWLongField(Long),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getWShortField(),1,2
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setWShortField(Short),2,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getSelfOneOne(),3,4
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setSelfOneOne(AllFieldTypes),4,7
org.apache.openjpa.xmlstore.simple.AllFieldTypes.getSelfOneMany(),4,5
org.apache.openjpa.xmlstore.simple.AllFieldTypes.setSelfOneMany(List<AllFieldTypes>),5,8
org.apache.openjpa.tools.maven.test.ItNonDefaultXmlTest.testEnhancement(),21,39
org.apache.openjpa.tools.maven.test.ItNonDefaultXmlTest.testSqlGeneration(),18,34
org.apache.openjpa.tools.maven.test.ItNonDefaultXmlTest.testSchemaGeneration(),30,79
org.apache.openjpa.xmlstore.XMLFileHandler.XMLFileHandler(XMLConfiguration),7,11
org.apache.openjpa.xmlstore.XMLFileHandler.load(ClassMetaData),31,48
org.apache.openjpa.xmlstore.XMLFileHandler.read(File),18,35
org.apache.openjpa.xmlstore.XMLFileHandler.getFile(ClassMetaData),26,59
"org.apache.openjpa.xmlstore.XMLFileHandler.store(ClassMetaData,Collection)",36,76
"org.apache.openjpa.xmlstore.XMLFileHandler.write(Collection,FileWriter)",53,204
"org.apache.openjpa.xmlstore.XMLFileHandler.writeDataValue(Writer,int,Object)",53,152
org.apache.openjpa.xmlstore.XMLFileHandler.ObjectDataHandler.ObjectDataHandler(XMLConfiguration),8,11
org.apache.openjpa.xmlstore.XMLFileHandler.ObjectDataHandler.getExtent(),4,5
"org.apache.openjpa.xmlstore.XMLFileHandler.ObjectDataHandler.startElement(String,String,String,Attributes)",11,24
"org.apache.openjpa.xmlstore.XMLFileHandler.ObjectDataHandler.startElement(String,Attributes)",45,124
"org.apache.openjpa.xmlstore.XMLFileHandler.ObjectDataHandler.endElement(String,String,String)",8,19
org.apache.openjpa.xmlstore.XMLFileHandler.ObjectDataHandler.endElement(String),35,137
"org.apache.openjpa.xmlstore.XMLFileHandler.ObjectDataHandler.characters(char[],int,int)",5,8
"org.apache.openjpa.xmlstore.XMLFileHandler.ObjectDataHandler.fromXMLString(int,ClassMetaData,String)",58,225
org.apache.openjpa.xmlstore.XMLFileHandler.ObjectDataHandler.classForName(String),8,15
org.apache.openjpa.xmlstore.XMLFileHandler.XMLEncoder.encode(String),10,36
org.apache.openjpa.xmlstore.XMLFileHandler.XMLEncoder.decode(String),9,27
"org.apache.openjpa.xmlstore.XMLFileHandler.XMLEncoder.initializeBuffer(StringBuffer,String,int)",9,22
org.apache.openjpa.tools.maven.testentity.TestEntity.TestEntity(),2,2
"org.apache.openjpa.tools.maven.testentity.TestEntity.TestEntity(int,String)",4,7
org.apache.openjpa.tools.maven.testentity.TestEntity.getInt1(),1,1
org.apache.openjpa.tools.maven.testentity.TestEntity.setInt1(int),2,2
org.apache.openjpa.tools.maven.testentity.TestEntity.getString1(),1,3
org.apache.openjpa.tools.maven.testentity.TestEntity.setString1(String),2,6
org.apache.openjpa.tools.maven.testentity.TestEntity.toString(),2,4
org.apache.openjpa.tools.maven.testentity.TestEntity.getMyEnum(),1,1
org.apache.openjpa.tools.maven.testentity.TestEntity.setMyEnum(SampleEnum),2,2
org.apache.openjpa.tools.maven.OpenJpaSqlMojo.getOptions(),24,45
org.apache.openjpa.tools.maven.test.it.dependingartifact.entities.MyEntityImpl.getId(),0,0
org.apache.openjpa.tools.maven.test.it.dependingartifact.entities.MyEntityImpl.setId(int),1,1
org.apache.openjpa.tools.maven.test.it.dependingartifact.entities.MyEntityImpl.getMessageChannel(),2,6
org.apache.openjpa.tools.maven.test.it.dependingartifact.entities.MyEntityImpl.setMessageChannel(MessageChannel),3,11
org.apache.openjpa.slice.DistributedConfiguration.getActiveSliceNames(),23,49
org.apache.openjpa.slice.DistributedConfiguration.getAvailableSliceNames(),5,5
org.apache.openjpa.slice.DistributedConfiguration.getSlices(Slice.Status),9,17
org.apache.openjpa.slice.DistributedConfiguration.getSlice(String),6,11
org.apache.openjpa.slice.DistributedConfiguration.getDistributionPolicyInstance(),8,11
org.apache.openjpa.slice.DistributedConfiguration.setDistributionPolicyInstance(DistributionPolicy),10,14
org.apache.openjpa.slice.DistributedConfiguration.getDistributionPolicy(),9,11
org.apache.openjpa.slice.DistributedConfiguration.setDistributionPolicy(String),11,14
org.apache.openjpa.slice.DistributedConfiguration.getReplicationPolicyInstance(),8,12
org.apache.openjpa.slice.DistributedConfiguration.getReplicationPolicy(),9,12
org.apache.openjpa.slice.DistributedConfiguration.setReplicationPolicyInstance(ReplicationPolicy),10,15
org.apache.openjpa.slice.DistributedConfiguration.setReplicationPolicy(String),11,15
org.apache.openjpa.slice.DistributedConfiguration.isReplicated(Class<>),3,5
org.apache.openjpa.slice.DistributedConfiguration.getQueryTargetPolicyInstance(),7,12
org.apache.openjpa.slice.DistributedConfiguration.getQueryTargetPolicy(),8,11
org.apache.openjpa.slice.DistributedConfiguration.setQueryTargetPolicyInstance(QueryTargetPolicy),9,15
org.apache.openjpa.slice.DistributedConfiguration.setQueryTargetPolicy(String),10,14
org.apache.openjpa.slice.DistributedConfiguration.getFinderTargetPolicyInstance(),7,12
org.apache.openjpa.slice.DistributedConfiguration.getFinderTargetPolicy(),8,11
org.apache.openjpa.slice.DistributedConfiguration.setFinderTargetPolicyInstance(FinderTargetPolicy),9,15
org.apache.openjpa.slice.DistributedConfiguration.setFinderTargetPolicy(String),10,14
org.apache.openjpa.tools.maven.testentity.Person.Person(),1,1
org.apache.openjpa.tools.maven.testentity.Person.getId(),0,0
org.apache.openjpa.tools.maven.testentity.Person.setId(long),1,1
"org.apache.openjpa.tools.maven.testentity.Person.Person(String,int)",4,8
org.apache.openjpa.tools.maven.testentity.Person.getName(),2,3
org.apache.openjpa.tools.maven.testentity.Person.setName(String),3,6
org.apache.openjpa.tools.maven.testentity.Person.getAge(),1,2
org.apache.openjpa.tools.maven.testentity.Person.setAge(int),2,5
org.apache.openjpa.xmlstore.simple.Place.getLocation(),2,3
org.apache.openjpa.xmlstore.simple.Place.setLocation(String),3,6
"org.apache.openjpa.slice.jdbc.DistributedStoreQuery.DistributedStoreQuery(JDBCStore,ExpressionParser)",6,13
org.apache.openjpa.slice.jdbc.DistributedStoreQuery.add(StoreQuery),4,5
org.apache.openjpa.slice.jdbc.DistributedStoreQuery.getDistributedStore(),4,11
"org.apache.openjpa.slice.jdbc.DistributedStoreQuery.newDataStoreExecutor(ClassMetaData,boolean)",15,34
org.apache.openjpa.slice.jdbc.DistributedStoreQuery.setContext(QueryContext),6,14
"org.apache.openjpa.slice.jdbc.DistributedStoreQuery.ParallelExecutor.ParallelExecutor(DistributedStoreQuery,ClassMetaData,boolean,ExpressionParser,Object,boolean)",14,23
org.apache.openjpa.slice.jdbc.DistributedStoreQuery.ParallelExecutor.addExecutor(Executor),3,5
"org.apache.openjpa.slice.jdbc.DistributedStoreQuery.ParallelExecutor.executeQuery(StoreQuery,Object[],Range)",51,201
org.apache.openjpa.slice.jdbc.DistributedStoreQuery.ParallelExecutor.containsReplicated(QueryContext),20,46
"org.apache.openjpa.slice.jdbc.DistributedStoreQuery.ParallelExecutor.executeDelete(StoreQuery,Object[])",33,74
"org.apache.openjpa.slice.jdbc.DistributedStoreQuery.ParallelExecutor.executeUpdate(StoreQuery,Object[])",29,64
org.apache.openjpa.slice.jdbc.DistributedStoreQuery.ParallelExecutor.findTargets(),10,17
org.apache.openjpa.slice.jdbc.DistributedStoreQuery.QueryExecutor.call(),10,11
org.apache.openjpa.slice.jdbc.DistributedStoreQuery.DeleteExecutor.call(),7,7
org.apache.openjpa.slice.jdbc.DistributedStoreQuery.UpdateExecutor.call(),7,7
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshBasic.setUp(),7,10
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshBasic.testRefreshRead(),7,12
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshBasic.testRefreshWrite(),7,12
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshBasic.testRefreshOptimistic(),7,12
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshBasic.testRefreshOptimisticForceInc(),10,18
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshBasic.testRefreshPessimisticRead(),8,15
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshBasic.testRefreshPessimisticWrite(),8,15
org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshBasic.testRefreshPessimisticForceInc(),10,18
"org.apache.openjpa.persistence.lockmgr.TestMixedLockManagerRefreshBasic.testCommon(String,LockModeType,int,int)",26,177
org.apache.openjpa.slice.ReplicatedChild.getName(),2,3
org.apache.openjpa.slice.ReplicatedChild.setName(String),3,6
org.apache.openjpa.slice.ReplicatedChild.getParent(),2,4
org.apache.openjpa.slice.ReplicatedChild.setParent(ReplicatedParent),3,7
org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.DistributedSQLStoreQuery(JDBCStore),5,8
org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.add(StoreQuery),4,5
org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.getDistributedStore(),4,11
"org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.newDataStoreExecutor(ClassMetaData,boolean)",12,30
org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.setContext(QueryContext),6,14
"org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.ParallelExecutor.ParallelExecutor(DistributedSQLStoreQuery,ClassMetaData,boolean)",10,14
org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.ParallelExecutor.addExecutor(Executor),3,5
"org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.ParallelExecutor.executeQuery(StoreQuery,Object[],Range)",51,209
org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.ParallelExecutor.containsReplicated(QueryContext),20,46
"org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.ParallelExecutor.executeDelete(StoreQuery,Object[])",29,64
"org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.ParallelExecutor.executeUpdate(StoreQuery,Object[])",29,64
org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.ParallelExecutor.findTargets(),10,17
org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.QueryExecutor.call(),10,11
org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.DeleteExecutor.call(),7,7
org.apache.openjpa.slice.jdbc.DistributedSQLStoreQuery.UpdateExecutor.call(),7,7
org.apache.openjpa.slice.SingleEMFTestCase.setUp(),11,17
org.apache.openjpa.slice.SingleEMFTestCase.setUp(Object),29,35
org.apache.openjpa.slice.SingleEMFTestCase.tearDown(),17,24
org.apache.openjpa.slice.SingleEMFTestCase.getMapping(String),10,15
org.apache.openjpa.enhance.stats.EEntity.getExtraDesc(),3,5
org.apache.openjpa.enhance.stats.EEntity.getCode(),2,3
"org.apache.openjpa.enhance.stats.EEntity.EEntity(String,String)",5,10
org.apache.openjpa.xmlstore.XMLStoreManager.getUnsupportedOptions(),17,45
org.apache.openjpa.xmlstore.XMLStoreManager.newConfiguration(),5,8
org.apache.openjpa.xmlstore.XMLStoreManager.open(),7,10
"org.apache.openjpa.xmlstore.XMLStoreManager.exists(OpenJPAStateManager,Object)",8,13
org.apache.openjpa.xmlstore.XMLStoreManager.incrementVersion(OpenJPAStateManager),7,16
"org.apache.openjpa.xmlstore.XMLStoreManager.initialize(OpenJPAStateManager,PCState,FetchConfiguration,Object)",31,66
"org.apache.openjpa.xmlstore.XMLStoreManager.load(OpenJPAStateManager,BitSet,FetchConfiguration,int,Object)",30,61
"org.apache.openjpa.xmlstore.XMLStoreManager.syncVersion(OpenJPAStateManager,Object)",26,60
org.apache.openjpa.xmlstore.XMLStoreManager.begin(),3,4
org.apache.openjpa.xmlstore.XMLStoreManager.commit(),5,7
org.apache.openjpa.xmlstore.XMLStoreManager.rollback(),5,5
"org.apache.openjpa.xmlstore.XMLStoreManager.flush(Collection,Collection,Collection,Collection,Collection)",56,176
"org.apache.openjpa.xmlstore.XMLStoreManager.executeExtent(ClassMetaData,boolean,FetchConfiguration)",52,97
"org.apache.openjpa.xmlstore.XMLStoreManager.isCached(List<Object>,BitSet)",11,12
org.apache.openjpa.tools.maven.test.ItDefaultSettingsTest.testEnhancement(),21,39
org.apache.openjpa.tools.maven.test.ItDefaultSettingsTest.testSqlGeneration(),18,34
org.apache.openjpa.tools.maven.test.ItDefaultSettingsTest.testSchemaGeneration(),30,79
org.apache.openjpa.tools.maven.test.ItDefaultSettingsTest.testPersistence(),19,39
org.apache.openjpa.xmlstore.XMLConfiguration.XMLConfiguration(),19,31
org.apache.openjpa.xmlstore.XMLConfiguration.getFileHandler(),6,17
org.apache.openjpa.xmlstore.XMLConfiguration.getStore(),5,13
