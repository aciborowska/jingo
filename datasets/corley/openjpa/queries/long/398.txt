Hello.


I'm trying to use OpenJPA in my project. I use Liferay based on Toncat as front-end.

I use OpenJPA 1.0.0

Today I have got strange exception - 

10:35:55,785 ERROR ConcurrentModificationException at java.util.HashMap$HashIterator.nextEntry(HashMap.java:787)  at java.util.HashMap$KeyIterator.next(HashMap.java:823) at org.apache.openjpa.kernel.BrokerImpl$ManagedCache.dirtyCheck(BrokerImpl.java:4612)

        at org.apache.openjpa.kernel.BrokerImpl$ManagedCache.access$000(BrokerImpl.java:4352) at org.apache.openjpa.kernel.BrokerImpl.hasTransactionalObjects(BrokerImpl.java:3731)

        at org.apache.openjpa.kernel.BrokerImpl.setDirty(BrokerImpl.java:3848) at org.apache.openjpa.kernel.StateManagerImpl.setPCState(StateManagerImpl.java:207)

        at org.apache.openjpa.kernel.StateManagerImpl.dirty(StateManagerImpl.java:1532) at org.apache.openjpa.kernel.StateManagerImpl.dirty(StateManagerImpl.java:1471)

        at org.apache.openjpa.kernel.StateManagerImpl.dirtyCheck(StateManagerImpl.java:808) at org.apache.openjpa.kernel.BrokerImpl$ManagedCache.dirtyCheck(BrokerImpl.java:4612)

        at org.apache.openjpa.kernel.BrokerImpl$ManagedCache.access$000(BrokerImpl.java:4352) at org.apache.openjpa.kernel.BrokerImpl.hasTransactionalObjects(BrokerImpl.java:3731)

        at org.apache.openjpa.kernel.BrokerImpl.setDirty(BrokerImpl.java:3848) at org.apache.openjpa.kernel.StateManagerImpl.setPCState(StateManagerImpl.java:207)

        at org.apache.openjpa.kernel.StateManagerImpl.dirty(StateManagerImpl.java:1532) at org.apache.openjpa.kernel.StateManagerImpl.dirty(StateManagerImpl.java:1471)

        at org.apache.openjpa.kernel.StateManagerImpl.dirtyCheck(StateManagerImpl.java:808) at org.apache.openjpa.kernel.BrokerImpl$ManagedCache.dirtyCheck(BrokerImpl.java:4612)

        at org.apache.openjpa.kernel.BrokerImpl$ManagedCache.access$000(BrokerImpl.java:4352)


It happens only, when I deploy application on portal, and only when service is first-time accessed.

All tests work fine.



Exception throws in get method
Transactions are managed by Spring and i use Spring agent.