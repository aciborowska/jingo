If I have a simple entity as such

@Entity
public class MyClass {
   @Id
   Long id;

   @Column(name="xyz", nullable=false)
   Long field;
}

And I have a JPQL delete query: "delete from MyClass e where e.field=?1"
this gets translated into the following sql: DELETE from MyClass where id in (select distinct t0.id from MyClass t0 where (to.xyz = ?))

The extra select with distinct (rather than just having DELETE from MyClass where xyz=?) causes a big performance slowdown; on the order of 5-10x (with Derby 10.5.3).

I didn't bother testing for different annotations, but I would imaging it's the same for all of them.

Please fix this; it is very basic functionality and the SQL generated should be the straightforward, high performing version.