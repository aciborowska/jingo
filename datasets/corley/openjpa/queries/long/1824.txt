OpenBooks is using an app managed persistence context and it isn't cleaning up properly. openbook.server.ServiceFactory.getService(...) creates an EMF, but it is never closed.
OpenBooks application is using an app managed persistence context which is NOT cleaned up correctly when deployed in a JEE server.
This results in the JEE container JPA Runtime does NOT calling DataCacheManager.close() on the DataCacheManager plugin.

The container JPA Runtime does NOT call openjpa.DataCacheManager.close() when the application is stopped.
This does not give a chance to any OpenJPA L2 cache provider to cleanup their resources and remove cache instances from static hashmaps. utlimately resulting in a memory leak.