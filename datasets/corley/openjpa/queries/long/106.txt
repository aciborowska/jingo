Hi,
the problem i'm going to describe here probably only exists when using openjpa together with mysql. Maybe this is even a bug in the mysql-jdbc-connector.

The MappingTool (and MappingToolTask) does not notice that a table exists when the name of the table also contains the name of the database (for example <class name="my.company.MyClass" table="my_database.MYCLASS" />)

Everything else is working satisfyingly with this prefix-thingy. As a work around i'm removing the prefixes from my metadata before using mappingtool and put it back in afterwards. (I need this prefix after all because i'm using multiple databases at once).

Maybe when the mappingtool asks the database for the table "my_database.MYCLASS", the jdbc-connector tells openjpa that no such table exists. If so, can't mappingtool ask the database differently?

Thank you for listening and keep up the good work,
Markus