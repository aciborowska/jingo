As part of migration from KODO3.x to KODO4.x, I am facing a kodo related issue.

We are gettting a classnotfoundexception warning with the below settings,  but if we remove the kodo-DataCache tag from   pmf-config.xml  it doesnt throw an classnotfoundexception warning


pmf-config.xml
============
<kodo-DataCache value="true(CacheSize=2000, SoftReferenceSize=0)"/> //if we remove this line we dont get 													  //classnotfound exception warning
package.jdo
============
<class name="DemSummary" objectid-class="DemSummaryId">
  <extension vendor-name="kodo" key="data-cache" value="false"/>
  <field name="demSummaryId" primary-key="true"/>
</class>


Could any one please suggest why I am getting this KODO warning with above setting and why it doesnt throw this warning when I remove kodo-DataCache tag from pmf-config.xml.

Below is the excerpt from the log which shows the warning of classnotfoundexception:

log (Log4j)
========
[18/05/09 13:37:17] [] [WARN ][Log4JLogFactory$LogAdapter] java.lang.ClassNotFoundException: com.db.dcf.docs.dem.jdo.beans.DemSummary 
java.lang.ClassNotFoundException: com.db.dcf.docs.dem.jdo.beans.DemSummary
		 at java.lang.Class.forName0(Native Method)
		 at java.lang.Class.forName(Class.java:219)
		 at kodo.datacache.Caches.addTypesByName(Caches.java:33)
		 at kodo.datacache.AbstractQueryCache.afterCommit(AbstractQueryCache.java:211)
		 at kodo.event.RemoteCommitEventManager.fireEvent(RemoteCommitEventManager.java:120)
		 at com.solarmetric.util.AbstractEventManager.fireEvent(AbstractEventManager.java:109)
		 at kodo.event.AbstractRemoteCommitProvider.fireEvent(AbstractRemoteCommitProvider.java:56)
		 at kodo.event.SingleJVMRemoteCommitProvider.broadcast(SingleJVMRemoteCommitProvider.java:48)
		 at kodo.event.RemoteCommitEventManager.afterCommit(RemoteCommitEventManager.java:135)
		 at kodo.event.TransactionEventManager.fireEvent(TransactionEventManager.java:104)
		 at com.solarmetric.util.AbstractEventManager.fireEvent(AbstractEventManager.java:109)
		 at kodo.kernel.BrokerImpl.endTransaction(BrokerImpl.java:2560)
		 at kodo.kernel.BrokerImpl.afterCompletion(BrokerImpl.java:2182)
		 at weblogic.transaction.internal.ServerSCInfo.callAfterCompletions(ServerSCInfo.java:887)
		 at weblogic.transaction.internal.ServerTransactionImpl.callAfterCompletions(ServerTransactionImpl.java:2765)
		 at weblogic.transaction.internal.ServerTransactionImpl.afterCommittedStateHousekeeping(ServerTransactionImpl.java:2670)
		 at weblogic.transaction.internal.ServerTransactionImpl.setCommitted(ServerTransactionImpl.java:2702)
		 at weblogic.transaction.internal.ServerTransactionImpl.globalRetryCommit(ServerTransactionImpl.java:2500)
		 at weblogic.transaction.internal.ServerTransactionImpl.globalCommit(ServerTransactionImpl.java:2429)
		 at weblogic.transaction.internal.ServerTransactionImpl.internalCommit(ServerTransactionImpl.java:262)
		 at weblogic.transaction.internal.ServerTransactionImpl.commit(ServerTransactionImpl.java:228)
		 at weblogic.ejb20.internal.MDListener.execute(MDListener.java:430)
		 at weblogic.ejb20.internal.MDListener.transactionalOnMessage(MDListener.java:333)
		 at weblogic.ejb20.internal.MDListener.onMessage(MDListener.java:298)
		 at weblogic.jms.client.JMSSession.onMessage(JMSSession.java:2698)
		 at weblogic.jms.client.JMSSession.execute(JMSSession.java:2610)
		 at weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:224)
		 at weblogic.kernel.ExecuteThread.run(ExecuteThread.java:183)

