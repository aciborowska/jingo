Adding a transformer is unnecessary if classes are enhanced at build time. As far as I can tell, you specify this by adding the <exclude-unlisted-classes> property to persistence.xml. This could probably be made more clear by calling the property something like "build-time-enhancement-only" or "disable-runtime-enhancement". Additionally, this causes a Spring configured JPA to fail with and IllegalStateException if no LoadTimeWeaver is specified in the LocalContainerEntityManagerFactory. The relevent code is on line 93 of PersistenceProviderImpl

    public EntityManagerFactory createContainerEntityManagerFactory(
        PersistenceUnitInfo pui, Map m) {
        PersistenceProductDerivation pd = new PersistenceProductDerivation();
        try 
{
            ConfigurationProvider cp = pd.load(pui, m);
            if (cp == null)
                return null;

            // add enhancer
            String ctOpts = (String) Configurations.getProperty
                (CLASS_TRANSFORMER_OPTIONS, pui.getProperties());
            pui.addTransformer(new ClassTransformerImpl(cp, ctOpts, 
                pui.getNewTempClassLoader()));

            BrokerFactory factory = Bootstrap.newBrokerFactory(cp, 
                pui.getClassLoader());
            return OpenJPAPersistence.toEntityManagerFactory(factory);
        }
 catch (Exception e) 
{
            throw PersistenceExceptions.toPersistenceException(e);
        }
    }