As illustrated by the email exchange on http://openjpa.markmail.org/search/?q=#query:list%3Aorg.apache.openjpa.users+page:1+mid:vkmobafvjqojgtxg+state:results, it does not seem to obvious (enough) for end-users that 

     fetchPlan.removeFetchGroup(FetchGroup.NAME_DEFAULT);

is required to configure FetchGroups "from scratch" (i.e. taking control of fetch groups completely, e.g. in a framework built to exploit FetchGroups) in order to "override" any FetchType.EAGER / FetchType.LAZY annotation on the respective @Entity.

It would be nice if the OpenJPA doc, e.g. in http://openjpa.apache.org/builds/latest/docs/manual/ref_guide_fetch.html, would more explicitly explain this with a few lines of blub, and a simple example code snippet (see e.g. email exchange). 