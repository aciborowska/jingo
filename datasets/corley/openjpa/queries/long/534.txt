I have a superclass with several properties, including 'modified', a datetime field which a prepersistlistener should update.

All my entities inherit this superclass. 

The superclass is mapped with the appropriate prepersist listener identifying the callback method to call.


  <mapped-superclass class="org.permacode.atomic.domain.AtomicEntity"
    access="FIELD">
    <pre-persist method-name="prePersistCallBack" />
    <attributes>
      <basic name="ownerId">
        <column name="OWNER_ID" />
      </basic>
      <basic name="created">
        <column name="CREATED" />
        <temporal>DATE</temporal>
      </basic>
      <basic name="modified">
        <column name="MODIFIED" />
        <temporal>DATE</temporal>
      </basic>
      <version name="version">
        <column name="VERSION" />
      </version>
    </attributes>
  </mapped-superclass>


The method prePersistCallBack() is on the superclass:

    public void prePersistCallBack()
    {
        this.setModified(new Date());
        logger.info("doing prePersistCallBack()");
    }

I see no logging and I see the SQL statement contains the untouched modified value.
