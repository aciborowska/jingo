Consider the following mapping, which uses a Map of a PC class to another PC class:

@OneToMany(targetEntity = CatalogProductPriceImpl.class, cascade = 
{ CascadeType.ALL }
)
@MapKey(name = "catalog")
public Map<Catalog, CatalogPrice> getCatalogPrices() {
  return catalogPrices;
}

With the DataCache on, when a product is retrieved for the first time, this map will be correct. However, the next time it is retrieved (i.e. from the cache), what is returned is a Map<LongId, CatalogPrice> not the expected Map<Catalog, CatalogPrice>.

The attached patch resolves this issue.