Current MetaDataInheritanceComparator/InheritanceComparator has 2 problems:
1. the support of interfaces seems incorrect.
    when calculating the level value of an interface, the logic is
        if (to.isInterface())
            return to.getInterfaces().length;
    we should calculate the level value also based on the inheritance of the interfaces.
2. when comparing 2 objects (o1 and o2) with MetaDataInheritanceComparator, if o1 has a primary key field p1, then we should compare p1 and o2 first, and then compare o1 relative to the result.
    current logic seems incomplete:
        for (int i = 0; i < fmds.length; i++) 
{
            if (fmds[i].isPrimaryKey() && m2.getDescribedType().
                isAssignableFrom(fmds[i].getDeclaredType()))
                return 1;
        }