For the following polymorphic class definitions:
Person.java
@Entity
@Table(name="persons")
@Inheritance(strategy=InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(name="discriminator", discriminatorType=DiscriminatorType.CHAR)
@DiscriminatorValue("P")
public abstract class Person {
     @Id
     public long id;

     @Basic
     public java.sql.Date birth;
}


Male.java
@Entity
@DiscriminatorValue("M")
public class Male extends Person {
}


Female.java
@Entity
@DiscriminatorValue("F")
public class Female extends Person {
}


Adds some data:
Test.java
Male male = new Male();
male.setId(1);
male.setBirth(new java.sql.Date(System.currentTimeMillis()));
em.persist(male);
Female female = new Female();
female.setId(2);
female.setBirth(new java.sql.Date(System.currentTimeMillis()));
em.persist(female);


The following JPQL query can be executed correctly:

em.createQuery("select p from Person as p order by p.birth desc").getResultList();



but if I add an additional order by column:

em.createQuery("select p, case when p.birth is null then 1 else 0 end as b from Person as p order by b asc, p.birth desc").getResultList();



The query failed with error:

Exception occurred during processing request: Cannot instantiate abstract class of type "com.test.Person" with object id "2"; this may indicate that the inheritance discriminator for the class is not configured correctly.


What's wrong?