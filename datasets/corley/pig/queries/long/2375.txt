When overloading a UDF with getArgToFuncMapping() the parent/root UDF outputSchema() is being called. 


  @Override
    public List<FuncSpec> getArgToFuncMapping() throws FrontendException {
        List<FuncSpec> funcList = new ArrayList<FuncSpec>();
        Schema s = new Schema();
        s.add(new Schema.FieldSchema(null, DataType.TUPLE));
        s.add(new Schema.FieldSchema(null, DataType.CHARARRAY));
        funcList.add(new FuncSpec(this.getClass().getName(), s));

        Schema s1 = new Schema();
        s1.add(new Schema.FieldSchema(null, DataType.TUPLE));
        s1.add(new Schema.FieldSchema(null, DataType.TUPLE));
        funcList.add(new FuncSpec(LogFieldValues.class.getName(), s1));

        return funcList;
    }



In the above function, "LogFieldValues" is used when the input is (tuple, tuple) but the outputSchema() is invoked from the root UDF.