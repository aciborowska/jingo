Bx 	Method org.apache.pig.backend.hadoop.datastorage.HDataStorage.getStatistics() invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.backend.hadoop.datastorage.HDataStorage.init() invokes inefficient new Short(short) constructor; use Short.valueOf(short) instead
Bx 	Method org.apache.pig.backend.hadoop.datastorage.HPath.getConfiguration() invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.backend.hadoop.datastorage.HPath.getConfiguration() invokes inefficient new Short(short) constructor; use Short.valueOf(short) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.MultiQueryOptimizer.addShiftedKeyInfoIndex(int, POPackage) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.plans.POPackageAnnotator$LoRearrangeDiscoverer.visitLocalRearrange(POLocalRearrange) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.getNext(Integer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Add.getNext(Long) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.getNext(Integer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Divide.getNext(Long) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Mod.getNext(Integer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Mod.getNext(Long) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.getNext(Integer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Multiply.getNext(Long) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNext(Integer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.POCast.getNext(Long) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.getNext(Integer) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.physicalLayer.expressionOperators.Subtract.getNext(Long) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrange.setIndex(int, boolean) invokes inefficient new Byte(byte) constructor; use Byte.valueOf(byte) instead
Bx 	Method org.apache.pig.backend.hadoop.executionengine.physicalLayer.relationalOperators.POLocalRearrangeForIllustrate.constructLROutput(List, Tuple) invokes inefficient new Byte(byte) constructor; use Byte.valueOf(byte) instead
Bx 	Method org.apache.pig.builtin.ARITY.exec(Tuple) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.builtin.AVG.combine(DataBag) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.BagSize.exec(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.BinStorage.bytesToInteger(byte[]) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.builtin.BinStorage.bytesToLong(byte[]) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.ConstantSize.exec(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.COUNT$Initial.exec(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.DoubleAvg.combine(DataBag) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.FloatAvg.combine(DataBag) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.IntAvg.combine(DataBag) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.IntAvg.sum(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.IntAvg$Initial.exec(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.IntMax.max(Tuple) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.builtin.IntMin.min(Tuple) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.builtin.IntSum.sum(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.IntSum.sumLongs(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.IntSum$Initial.exec(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.LongAvg.combine(DataBag) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.LongAvg.sum(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.LongMax.max(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.LongMin.min(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.LongSum.sum(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.MapSize.exec(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.SIZE.exec(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.StringSize.exec(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.TupleSize.exec(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method new org.apache.pig.builtin.Utf8StorageConverter() invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method new org.apache.pig.builtin.Utf8StorageConverter() invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.builtin.Utf8StorageConverter.bytesToInteger(byte[]) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.builtin.Utf8StorageConverter.bytesToLong(byte[]) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.data.DataReaderWriter.readDatum(DataInput, byte) invokes inefficient new Byte(byte) constructor; use Byte.valueOf(byte) instead
Bx 	Method org.apache.pig.data.DataReaderWriter.readDatum(DataInput, byte) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.data.DataReaderWriter.readDatum(DataInput, byte) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.data.DataType.toInteger(Object, byte) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.data.DataType.toLong(Object, byte) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Primitive value is boxed then unboxed to perform primative coercion in org.apache.pig.impl.builtin.FindQuantiles.exec(Tuple)
Bx 	Method org.apache.pig.impl.builtin.FindQuantiles.exec(Tuple) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.impl.builtin.GFReplicate.exec(Tuple) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.impl.logicalLayer.LOProject.clone() invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.Main.main(String[]) invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead
Bx 	Method org.apache.pig.pen.AugmentBaseDataVisitor.GetLargerValue(Object) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.pen.AugmentBaseDataVisitor.GetLargerValue(Object) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.pen.AugmentBaseDataVisitor.GetSmallerValue(Object) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
At AugmentBaseDataVisitor.java:[line 847]
Bx 	Method org.apache.pig.pen.AugmentBaseDataVisitor.GetSmallerValue(Object) invokes inefficient new Long(long) constructor; use Long.valueOf(long) instead
Bx 	Method org.apache.pig.shock.SSHSocketImpl.getOption(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Bx 	Method org.apache.pig.tools.cmdline.CmdLineParser.getNextOpt() invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead
Bx 	Method org.apache.pig.tools.cmdline.CmdLineParser.getNextOpt() invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead
Another occurrence at CmdLineParser.java:[line 126]
Bx 	Method org.apache.pig.tools.cmdline.CmdLineParser.registerOpt(char, String, CmdLineParser$ValueExpected) invokes inefficient new Character(char) constructor; use Character.valueOf(char) instead