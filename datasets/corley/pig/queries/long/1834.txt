Pig allows relation alias to be re-used , ie refer to different relations(/statements) . I have not seen this in documentation, but I have seen people writing such queries.

For example -

l = load 'x' as (a,b);
l = filter l by a > 1;
l = foreach ...
store l into  'y'



At any part of the query, the alias "l' always represents the relation it last associated with the portion of pig-query above it.

But in case of relation-as-scalar feature the association is happening with the last relation associated with the alias in entire script.

For example -

 l = load 'x' as (a,b);
 A = load 'x' as (a,b); 
 B = foreach A generate a, l.a as la;
 l = foreach l generate a+1 as a;
store B into 'b';



The alias l in relation with alias B should refer to the load, but it refers to the foreach statement -


#--------------------------------------------------
# Map Reduce Plan
#--------------------------------------------------
MapReduce node scope-16
Map Plan
l: Store(file:/tmp/temp-953430379/tmp2006282146:org.apache.pig.impl.io.InterStorage) - scope-8
|
|---l: New For Each(false)[bag] - scope-7
    |   |
    |   Add[int] - scope-5
    |   |
    |   |---Cast[int] - scope-3
    |   |   |  
    |   |   |---Project[bytearray][0] - scope-2
    |   |
    |   |---Constant(1) - scope-4
    |
    |---l: Load(file:///Users/tejas/pig_type/trunk/x:org.apache.pig.builtin.PigStorage) - scope-1--------
Global sort: false
----------------

MapReduce node scope-17
Map Plan
B: Store(file:///Users/tejas/pig_type/trunk/b:org.apache.pig.builtin.PigStorage) - scope-15
|
|---B: New For Each(false,false)[bag] - scope-14
    |   |
    |   Project[bytearray][0] - scope-9
    |   |
    |   POUserFunc(org.apache.pig.impl.builtin.ReadScalars)[int] - scope-13
    |   |
    |   |---Constant(0) - scope-11
    |   |
    |   |---Constant(file:/tmp/temp-953430379/tmp2006282146) - scope-12
    |
    |---A: Load(file:///Users/tejas/pig_type/trunk/x:org.apache.pig.builtin.PigStorage) - scope-0--------
Global sort: false
----------------


