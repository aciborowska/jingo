Currently PigStorage (actually Tuple.toDelimitedString) only handles the simple case of straight DataAtoms as fields and borks if it has any other Datum as a field. It would be nice to enhance it to handle the more complicated cases too. Currently users have to use a flatten to convert these to simpler Tuples which can be then handled by PigStorage.



On a related note, there is an interesting caveat with GROUP/COGROUP operators... they result in tuples with the first field which has the name 'group', whose value on which the grouping has been performed. 

E.g.

Input:
 <A, 1>
 <A, 2>

Pig script:
 INPUT = load 'input';
 A = group INPUT by $0;
 B = stream A through `script`;

Results in A being: 
(A, 
{(A, 1), (A, 2)}
)

Now, if PigStorage auto-flattens A it results in:
 (A, A, 1)
 (A, A, 2)

However, user expectation is probably the straight-forward:
 (A, 1)
 (A, 2)

—

Alan suggested that we could use the LOVisitor infrastructure to visit nodes in the tree, save up information (i.e. that a GROUP/COGROUP occured) and then use that information to get PigStorage to 'skip' the group field while auto-flattening. However it might have to done if, and only if, PigStorage is auto-flattening tuples directly coming from a GROUP/COGROUP operator i.e. doesn't have other EvalSpecs working on those tuples ...

—

Thoughts?