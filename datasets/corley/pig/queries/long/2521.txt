I set this to minor because this test works with client side tables and with old style references.

::::::::::::::
/grid/2/dev/pigqa/out/pigtest/hadoopqa/hadoopqa.1327441396/dotNext_baseline_15.pig
::::::::::::::
THIS TEST FAILS. It uses an explicit reference to namenode1 (hdfs://namenode1.domain.com:8020)

define CMD `perl PigStreamingDepend.pl` input(stdin) ship('/homes/araceli/pigtest/pigtest_next/pigharness/dist/pig_harness/libexec/PigTest/PigStreamingDepend.pl', '/homes/araceli/pigtest/pigtest_next/pigharness/dist/pig_harness/libexec/PigTest/PigStreamingModule.pm');
A = load 'hdfs://namdenode1.domain.com:8020/user/hadoopqa/pig/tests/data';
B = stream A through `perl PigStreaming.pl`;
C = stream B through CMD as (name, age, gpa);
D = foreach C generate name, age;
store D into 'hdfs://namenode1.domain.com:8020/user/hadoopqa/pig/out1/user/hadoopqa/pig/out/hadoopqa.1327441396/dotNext_baseline_15.out';
fs -cp hdfs://namenode1.domain.com:8020/user/hadoopqa/pig/out1/user/hadoopqa/pig/out/hadoopqa.1327441396/dotNext_baseline_15.out /user/hadoopqa/pig/out/hadoopqa.1327441396/dotNext_baseline_15.out



::::::::::::::
/grid/2/dev/pigqa/out/pigtest/hadoopqa/hadoopqa.1327441396/dotNext_baseline_1.pig
::::::::::::::

This test PASSES. It uses an explicit reference to NN1(hdfs://namenode1.domain.com:8020) for load and store

a = load 'hdfs://namenode1.domain.com:8020/user/hadoopqa/pig/tests/data/singlefile/studenttab10k' as (name, age, gpa);
store a into 'hdfs://namenode1.domain.com:8020/user/hadoopqa/pig/out1/user/hadoopqa/pig/out/hadoopqa.1327441396/dotNext_baseline_1.out' ;
fs -cp hdfs://namenode1.domain.com:8020/user/hadoopqa/pig/out1/user/hadoopqa/pig/out/hadoopqa.1327441396/dotNext_baseline_1.out /user/hadoopqa/pig/out/hadoopqa.1327441396/dotNext_baseline_1.out


THE REMAINING TESTS ARE IDENTICAL EXCEPT FOR THE FILE REFERNCE: explicit vs mount point

::::::::::::::
 /grid/2/dev/pigqa/out/pigtest/hadoopqa/hadoopqa.1327433551/dotNext_baseline_15.pig
::::::::::::::

This test PASSES. Its the baseline for the test, it uses old style references.

define CMD `perl PigStreamingDepend.pl` input(stdin) ship('/homes/araceli/pigtest/pigtest_next/pigharness/dist/pig_harness/libexec/PigTest/PigStreamingDepend.pl', '/homes/araceli/pigtest/pigtest_next/pigharness/dist/pig_harness/libexec/PigTest/PigStreamingModule.pm');
A = load '/user/hadoopqa/pig/tests/data';
B = stream A through `perl PigStreaming.pl`;
C = stream B through CMD as (name, age, gpa);
D = foreach C generate name, age;
store D into '/user/hadoopqa/pig/out/hadoopqa.1327433551/dotNext_baseline_15.out';

::::::::::::::
grid/2/dev/pigqa/out/pigtest/hadoopqa/hadoopqa.1327431567/dotNext_baseline_15.pig
::::::::::::::
This test PASSES. It uses a mount point to namenode 1( /data1 is a mount point for hdfs://namenode1.domain.com:8020/user/hadoopqa/pig/tests/data).

define CMD `perl PigStreamingDepend.pl` input(stdin) ship('/homes/araceli/pigtest/pigtest_next/pigharness/dist/pig_harness/libexec/PigTest/PigStreamingDepend.pl', '/homes/araceli/pigtest/pigtest_next/pigharness/dist/pig_harness/libexec/PigTest/PigStreamingModule.pm');
A = load '/data1';
B = stream A through `perl PigStreaming.pl`;
C = stream B through CMD as (name, age, gpa);
D = foreach C generate name, age;
store D into '/out1/user/hadoopqa/pig/out/hadoopqa.1327431567/dotNext_baseline_15.out';
fs -cp /out1/user/hadoopqa/pig/out/hadoopqa.1327431567/dotNext_baseline_15.out /user/hadoopqa/pig/out/hadoopqa.1327431567/dotNext_baseline_15.out

