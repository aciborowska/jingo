In SQL, a user would think nothing of doing something like:


select
    COUNT(DISTINCT(user)) as user_count,
    COUNT(DISTINCT(country)) as country_count,
    COUNT(DISTINCT(url) as url_count
from
    server_logs;



But in Pig, we'd need to do something like the following.  And this is about the most
compact version I could come up with.


Logs = load 'log' using PigStorage()
        as ( user: chararray, country: chararray, url: chararray);

DistinctUsers = distinct (foreach Logs generate user);
DistinctCountries = distinct (foreach Logs generate country);
DistinctUrls = distinct (foreach Logs generate url);

DistinctUsersCount = foreach (group DistinctUsers all) generate
        group, COUNT(DistinctUsers) as user_count;
DistinctCountriesCount = foreach (group DistinctCountries all) generate
        group, COUNT(DistinctCountries) as country_count;
DistinctUrlCount = foreach (group DistinctUrls all) generate
        group, COUNT(DistinctUrls) as url_count;

AllDistinctCounts = cross
        DistinctUsersCount, DistinctCountriesCount, DistinctUrlCount;

Report = foreach AllDistinctCounts generate
        DistinctUsersCount::user_count,
        DistinctCountriesCount::country_count,
        DistinctUrlCount::url_count;

store Report into 'log_report' using PigStorage();



It would be good if there was a higher level version of Pig that permitted code to be written as:


Logs = load 'log' using PigStorage()
        as ( user: chararray, country: chararray, url: chararray);

Report = overall Logs generate
        COUNT(DISTINCT(user)) as user_count,
        COUNT(DISTINCT(country)) as country_count,
        COUNT(DISTINCT(url)) as url_count;

store Report into 'log_report' using PigStorage();



I do want this in Pig and not as SQL.  I'd expect High Level Pig to generate Lower Level Pig.