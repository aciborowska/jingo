I systematically reproduce this behaviour on the linux boxes I tested with.

The test gets stuck acquiring permits from a semaphore, normally used for throttling:

"main" prio=10 tid=0x08058c00 nid=0x588d waiting on condition [0xf723c000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)

	parking to wait for  <0xb5619728> (a java.util.concurrent.Semaphore$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)
	at java.util.concurrent.Semaphore.acquire(Semaphore.java:286)
	at org.apache.bookkeeper.client.LedgerHandle.asyncAddEntry(LedgerHandle.java:394)
	at org.apache.bookkeeper.client.LedgerHandle.asyncAddEntry(LedgerHandle.java:366)
	at org.apache.bookkeeper.test.BookieReadWriteTest.testShutdown(BookieReadWriteTest.java:815)




The issue might come from the synchronization mechanism used in the test itself. 