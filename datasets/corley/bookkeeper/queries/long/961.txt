When entries for the same ledger are processed by the bookie we should avoid
the reordering of the request. Currently, if multiple read/write threads are
configured, the requests will be passed to the executor and writes for same
ledger will be spread across multiple threads.

This poses 2 issues:

	Mutex contention to access the LedgerDescriptor
	If the client receives add-entry acks out of order it has anyway to wait
      for the acks of previous entries before acknowledging the whole sequence
      to the application. In practice, the reordering is increasing the latency
      experienced by the application.

