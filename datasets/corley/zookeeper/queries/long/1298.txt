configure creates a working config.h.

On Snow leopard, after running configure:

  ls -l config.h
  rw-rr-  1 jim  jim  4437 Nov 12 12:16 config.h

which looks reasomnable.

Running make replaces config.h:

  make
  (CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh /Users/jim/s/zookeeper-3.3.3/src/c/missing --run autoheader)
  /opt/local/bin/gm4: cannot open `configure.in': No such file or directory
  rm -f stamp-h1
  touch config.h.in
  cd . && /bin/sh ./config.status config.h
  config.status: creating config.h
  make  all-am
  /bin/sh ./libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I.  -I./include -I./tests -I./generated  -Wall -Werror  -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c -o zookeeper.lo `test -f 'src/zookeeper.c' || echo './'`src/zookeeper.c
  libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I./include -I./tests -I./generated -Wall -Werror -g -O2 -D_GNU_SOURCE -MT zookeeper.lo -MD -MP -MF .deps/zookeeper.Tpo -c src/zookeeper.c  -fno-common -DPIC -o .libs/zookeeper.o
  src/zookeeper.c: In function 'log_env':
  src/zookeeper.c:658: error: 'PACKAGE_STRING' undeclared (first use in this function)
  src/zookeeper.c:658: error: (Each undeclared identifier is reported only once
  src/zookeeper.c:658: error: for each function it appears in.)
  cc1: warnings being treated as errors
  src/zookeeper.c:647: warning: unused variable 'buf'
  make[1]: *** [zookeeper.lo] Error 1
  make: *** [all] Error 2


  ls -l config.h
  rw-rr-  1 jim  jim  137 Nov 12 12:17 config.h

config.h is empty, except for a comment.

If I make a copy of config.h after configure and restore it after
running the failed make, then I can run make again and the make
succeeds.

On a centos 5 vm, I can build just fine, but I suspect that has
something to do with it not being happy with autoconf:

  (CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh /home/jim/s/zookeeper-3.3.3/src/c/missing --run autoheader)
  aclocal.m4:20: warning: this file was generated for autoconf 2.67.
  You have another version of autoconf.  It may work, but is not guaranteed to.
  If you have problems, you may need to regenerate the build system entirely.
  To do so, use the procedure documented by the package, typically `autoreconf'.
  configure.ac:21: error: Autoconf version 2.62 or higher is required
  aclocal.m4:8577: AM_INIT_AUTOMAKE is expanded from...
  configure.ac:21: the top level
  autom4te: /usr/bin/m4 failed with exit status: 63
  autoheader: /usr/bin/autom4te failed with exit status: 63
  WARNING: `autoheader' is probably too old.  You should only need it if
           you modified `acconfig.h' or `configure.ac'.  You might want
           to install the `Autoconf' and `GNU m4' packages.  Grab them
           from any GNU archive site.
  rm -f stamp-h1
  touch config.h.in
  cd . && /bin/sh ./config.status config.h
  config.status: creating config.h
  config.status: config.h is unchanged
  ...

I'm pretty clueless wrt autoconf.

I can work around this by touching config.h.in before running
configure. That seems to lead to a clean make, presumably by bypassing
the autoconf step.  I don't know if that matters. 

My goal is to automate building on at least unix-like systems as part
of building a self-contained source distribution of the Python
extension that builds by just running it's setup script.