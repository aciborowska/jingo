With local sessions enabled, the premise is that as soon as you try to create an ephemeral znode your session will be upgraded to global. The problem is that the session upgrade logic doesn't intercept transactions. So creating an ephemeral znode from within a transaction fails with SessionExpired.

A small example with Kazoo:


from kazoo.client import KazooClient

k = KazooClient("localhost:2181")
k.start()

t = k.transaction()
t.create("/hello_", "", ephemeral=True)
t.commit()
[kazoo.exceptions.SessionExpiredError((), {})]



A workaround, for now, is to create an ephemeral before your transaction which forces your session to be upgraded.

Possible solutions could be:


	extending zookeeper_init() so that you can request global=True
	and/or, providing an upgradeSession() API



Thoughts?

cc: Thawan Kooburat, Patrick Hunt, Flavio Junqueira

