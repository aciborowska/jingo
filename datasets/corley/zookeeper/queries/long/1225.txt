Presently there is no state validation for the start() api, so one can invoke multiple times consecutively. The second or further invocation will makes the client node to become 'READY' state transition. Because there is an offer already got created during the first invocation of the start() api, the second invocation again makeOffer() and after determination will be chosen as READY state transitions. 

This makes the situation with no 'ELECTED' nodes present and the client (or the user of the election recipe) will be indefinitely waiting for the 'ELECTED' node.

Similarly, stop() api can be invoked and there is no state validation and this can dispatch unnecessary FAILED transition events.


IMO, LES recipe can have validation logic to avoid the successive start() and stop() invocations.