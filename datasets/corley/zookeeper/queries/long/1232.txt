The class is not used and it rather harms to suggest to people that this would be the right way to do micro-benchmarks on the JVM. It even harms to suggest that micro-benchmarks are the right way to approach Java performance issues.

Quote from http://code.google.com/p/caliper/wiki/JavaMicrobenchmarks
"Why would I ever write a microbenchmark then?

Most of the time, you shouldn't! Instead, slavishly follow a principle of simple, clear coding that avoids clever optimizations. This is the type of code that JITs of the present and future are most likely to know how to optimize themselves. And that's a job which truly should be theirs, not yours. "

Tools to do microbenchmarks:
http://code.google.com/p/caliper/ (from the team that also does Guava, the Google Java library, recommended by Joshua Bloch himself)
http://hype-free.blogspot.com/2010/01/choosing-java-profiler.html
http://www.infoq.com/articles/java-profiling-with-open-source
http://java.net/projects/japex


Joshua Bloch on Performance Anxiety:
http://java.dzone.com/articles/joshua-bloch-performance (follow link to parleys)

