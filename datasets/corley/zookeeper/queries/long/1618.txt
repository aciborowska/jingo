Running a three node ZK cluster I stop/kill the leader node.
Immediately all connected clients will receive a Disconnected event, a second or so later an event with SyncConnected is received.
Killing a follower will not produce the same issue/event.

The application/clients have been implemented to manage Disconnected events so they survive.
I however expected the ZK client to manage the hickup during the election process. 
This produces quite a lot of logging in large clusters that have many services relying on ZK.
In some cases we may loose a few requests as we need a working ZK cluster to execute those requests.

IMHO it's not really full high availability if the ZK cluster momentarily takes a dive due to that the leader goes away.
No matter how much redundancy one uses in form of ZK instances one still may get processing errors during leader election.

I've verified this behavior in both 3.4.4 and 3.4.5