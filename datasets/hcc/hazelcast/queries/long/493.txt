Created from issue #267, [comment-18685919](https://github.com/hazelcast/hazelcast/issues/267#issuecomment-18685919) by @drithdx 

---

Debian Wheezy 2.6.32-5-amd64
JDK 1.6.0_32
Hazelcast 2.5

The steps to reproduce:
1)Run two instances of server.sh to form a cluster.
2)Run this simple code and press enter a few times if you like but should block before unlock method.
3)Hit Ctrl+C on one of the nodes consoles.
4)Hit enter and there you go:java.lang.RuntimeException: Current thread is not owner of the lock!
WARNING: [192.168.100.90]:5702 [dev] exception during handling LOCK_UNLOCK: Current thread is not owner of the lock!
java.lang.IllegalMonitorStateException: Current thread is not owner of the lock!
at com.hazelcast.impl.MProxyImpl$MProxyReal.unlock(MProxyImpl.java:731)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

The code to reproduce it:

``` java
public static void main(String[] args) {
    ClientConfig clientConfig = new ClientConfig();
    clientConfig.addAddress("Your IP here:5701");

    HazelcastInstance client = HazelcastClient.newHazelcastClient(clientConfig);
    final ILock lock = client.getLock("lock");
    Scanner s = new Scanner(System.in);

    while (true) {
        lock.lock();
        try {
            System.out.println("Locked now:");
            s.nextLine();
        } catch (Exception e) {

        } finally {
            try {
                lock.unlock();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
}
```
