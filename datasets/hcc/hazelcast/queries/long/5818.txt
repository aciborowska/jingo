The MapLoader.load(key) method seems to be executed by the partition thread, which means that all other operations on the partition will be blocked until loading is done. A very common use case for the MapLoader is to load data from a DB, which arguable could take some time. Should really access to all other entries in that partition be blocked just because one single entry is being loaded from the DB?

From the documentation in chapter 6.1.5 Map Persistence I read:
"
NOTE: Loading process is performed on a thread different than the partition threads using ExecutorService.
"
This seems to be contrary to the actual behavior.

Reproducer: https://github.com/torkeld/hazelcast-issue-reproducer/blob/master/src/test/java/test/MapLoadTest.java

Note, although the test uses get(), the behavior is the same for executing entry processors too.

Reproduced with Hazelcast 3.2.2 and 3.4.4.
