Looks like @asimarslan forgot to fix variable assignments in [this](https://github.com/hazelcast/hazelcast/commit/2b274e6521ea45ba3f56fc50cbbe51d807794e3c#diff-da4f4c8466d2549f67ffb738b98cf597R97) commit. This prevents JCache declarative initialization given a configuration XML containing entries for `cache-writer-factory` or `expiry-policy-factory`:

```
java.lang.ClassCastException: javax.cache.expiry.AccessedExpiryPolicy cannot be cast to javax.cache.integration.CacheLoader
    at com.hazelcast.cache.impl.AbstractCacheProxyBase.<init>(AbstractCacheProxyBase.java:82)
    at com.hazelcast.cache.impl.AbstractInternalCacheProxy.<init>(AbstractInternalCacheProxy.java:76)
    at com.hazelcast.cache.impl.AbstractCacheProxy.<init>(AbstractCacheProxy.java:61)
    at com.hazelcast.cache.impl.CacheProxy.<init>(CacheProxy.java:79)
    at com.hazelcast.cache.impl.HazelcastServerCacheManager.createCacheProxy(HazelcastServerCacheManager.java:130)
    at com.hazelcast.cache.impl.AbstractHazelcastCacheManager.getCacheUnchecked(AbstractHazelcastCacheManager.java:202)
    at com.hazelcast.cache.impl.AbstractHazelcastCacheManager.getCache(AbstractHazelcastCacheManager.java:152)
    at com.hazelcast.cache.impl.AbstractHazelcastCacheManager.getCache(AbstractHazelcastCacheManager.java:44)
```

Here's the broken code in question:

``` java
    public CacheConfig(CacheSimpleConfig simpleConfig) throws Exception {
        ...
        if (simpleConfig.getCacheLoaderFactory() != null) {
            this.cacheLoaderFactory = ClassLoaderUtil.newInstance(null, simpleConfig.getCacheLoaderFactory());
        }
        if (simpleConfig.getCacheWriterFactory() != null) {
            this.cacheLoaderFactory = ClassLoaderUtil.newInstance(null, simpleConfig.getCacheWriterFactory());
        }
        if (simpleConfig.getExpiryPolicyFactory() != null) {
            this.cacheLoaderFactory = ClassLoaderUtil.newInstance(null, simpleConfig.getExpiryPolicyFactory());
        }
        ...
    }
```
