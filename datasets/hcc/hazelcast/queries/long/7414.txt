Hello,

If you consider the following code:

`
public class CacheTest {
    public static void main(String[] args) {
        HazelcastInstance hazelcast = Hazelcast.newHazelcastInstance();

```
    IMap map = hazelcast.getMap("test");
    map.addInterceptor(new MyInterceptor());
    map.addEntryListener(new MyListener(), true);
    map.put(1, "wsad");
    map.put(1, "qwerty");
}

static class MyListener implements EntryAddedListener, EntryUpdatedListener {
    @Override
    public void entryAdded(EntryEvent event) {
        System.out.println("Got event add");
    }

    @Override
    public void entryUpdated(EntryEvent event) {
        System.out.println("Got event update");
    }
}

static class MyInterceptor implements MapInterceptor {
    @Override
    public Object interceptGet(Object value) {
        return null;
    }

    @Override
    public void afterGet(Object value) {
    }

    @Override
    public Object interceptPut(Object oldValue, Object newValue) {
        return newValue.toString().toUpperCase();
    }

    @Override
    public void afterPut(Object value) {

    }

    @Override
    public Object interceptRemove(Object removedValue) {
        return null;
    }

    @Override
    public void afterRemove(Object value) {

    }
}
```

}

`

You will notice, that the interceptor right before put is changing strings to upper-case version of those values. The listener however receives an "old" value (lowercase version).
Is that to be expected or is it a bug in Hazelcast, or maybe a misconfiguration?
