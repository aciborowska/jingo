Hello.
We use hazelcast 3.12.3 in our application and recently we have encountered OutOfMemoryExcpetion related to hazelcast. After further studying I have found out that map eviction doesn't work as its expected to work.

First, let me tell the use case of hazelcast map in our application. We have a map <String, byte[]> which stores raw bytes of documents by their ids, and we can't clear it by timeout (time to live) for the sake of fault tolerance, so it was decided to evict entries only in case when application is running out of memory. We implemented our own MapEvictionPolicy which compares entries by creation time.

We though that everything worked fine since we saw log messages that eviction policy has been executed but later our application started falling with OutOfMemoryException.
After some research I found out that when eviction policy is executed only one entry is evicted from map, the problem is that documents have different sizes. And I think that hazelcast assumes that they have same size so for hazelcast removing one entry means freeing space for another entry, which isn't true in our case.

So if, for example, we fill our map with many small documents until MaxSizeConfig capacity is reached, and then start adding larger documents, used heap size will keep increasing until we hit OutOfMemoryException.

Additional information:
Hazelcast version: 3.12.3
Cluster size: same problem as for single member as for many
Number of the clients: same as above
Version of Java: 1.8
Operating system: tested on Linux and Windows 10

I have a simple test application for recreation of that test case https://github.com/Pinkolik/HazelcastOOME . 
Thank you for your attention