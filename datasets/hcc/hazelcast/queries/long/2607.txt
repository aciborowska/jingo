Are there meant to be any guarantees around the ordering of EntryProcessors invoked by the submitToKey method? It seems that if you have a single thread submitting EntryProcessors with submitToKey, processors for the same key can execute out of order.

If order is not maintained, the submitToKey method isn't as useful, since you could achieve the same outcome by calling executeOnKey with a thread pool.

I haven't looked at the internals, but my current understanding is that each partition has some kind of work queue for EntryProcessors. I was hoping that submitToKey would synchronously put the processor on the work queue, but not wait for the result. This would allow asynchronous calls while still maintaining order.
