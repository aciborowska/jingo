I use hazelcast to sync http session from two nodes. After a week run time, I found the tomcat process use memory grow to the max of system have.

my pom.xml

```
<dependency>
                <groupId>com.hazelcast</groupId>
                <artifactId>hazelcast-all</artifactId>
                <version>3.6.2</version>
            </dependency>
```

I use eclipse memory analyzer to get :
![image](https://cloud.githubusercontent.com/assets/11990434/19408524/016d03da-92f2-11e6-9fa6-020d1d198eb0.png)

i found error log :

> Oct 14, 2016 6:11:08 AM com.hazelcast.nio.tcp.nonblocking.iobalancer.IOBalancer
> SEVERE: [10.253.53.20]:5701 [dev] [3.6.2] IOBalancer failed
> java.lang.OutOfMemoryError: Java heap space
> 
> java.lang.OutOfMemoryError: Java heap space
> java.lang.OutOfMemoryError: Java heap space
> Oct 14, 2016 6:23:21 AM com.hazelcast.cluster.impl.ClusterHeartbeatManager
> INFO: [10.253.53.20]:5701 [dev] [3.6.2] System clock apparently jumped from 2016-10-14T06:23:00.588 to 2016-10-14T06:23:21.618 since last heartbeat (+16030 ms)
> 2016-10-14 12:17:59
> Full thread dump OpenJDK (Alibaba) 64-Bit Server VM (24.65-b04-internal mixed mode):
> 
> "cached11" prio=10 tid=0x00007fd7a5434000 nid=0x1f635 waiting on condition [0x00007fd7939f8000]
>    java.lang.Thread.State: WAITING (parking)
>         at sun.misc.Unsafe.park(Native Method)
>         - parking to wait for  <0x00000000bcd98f18> (a java.util.concurrent.SynchronousQueue$TransferStack)
>         at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
>         at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:458)
>         at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:359)
>         at java.util.concurrent.SynchronousQueue.take(SynchronousQueue.java:925)
>         at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)
>         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
>         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>         at java.lang.Thread.run(Thread.java:756)
>         at com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:76)
>         at com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:92)
> 
> "cached7" prio=10 tid=0x00007fd7a5431000 nid=0x1f0ee waiting on condition [0x00007fd798ff2000]
>    java.lang.Thread.State: WAITING (parking)
>         at sun.misc.Unsafe.park(Native Method)
>         - parking to wait for  <0x00000000bcd98f18> (a java.util.concurrent.SynchronousQueue$TransferStack)
>         at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
>         at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:458)
>         at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:359)
>         at java.util.concurrent.SynchronousQueue.take(SynchronousQueue.java:925)
>         at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)
>         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
>         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>         at java.lang.Thread.run(Thread.java:756)
>         at com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:76)
>         at com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:92)
> 
> "cached8" prio=10 tid=0x00007fd7a542e800 nid=0x1dce5 waiting on condition [0x00007fd7966c9000]
>    java.lang.Thread.State: WAITING (parking)
>         at sun.misc.Unsafe.park(Native Method)
>         - parking to wait for  <0x00000000bcd98f18> (a java.util.concurrent.SynchronousQueue$TransferStack)
>         at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
>         at java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:458)
>         at java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:359)
>         at java.util.concurrent.SynchronousQueue.take(SynchronousQueue.java:925)
>         at java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1068)
>         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
>         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
>         at java.lang.Thread.run(Thread.java:756)
>         at com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:76)
>         at com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:92)
> 
> "http-bio-18080-exec-272" daemon prio=10 tid=0x00007fd79a298000 nid=0x162f3 waiting on condition [0x00007fd793dfc000]
>    java.lang.Thread.State: WAITING (parking)
>         at sun.misc.Unsafe.park(Native Method)
>         - parking to wait for  <0x00000000c3602868> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
>         at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
>         at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2166)

Does anyone can help me?
