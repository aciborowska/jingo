Hi, I'm using version 3.8.1 and noticed that calling replace(K, old, new) keeps the expiry time as creation time + duration. But hazelcast doesn't seem to honor this expiry even after calling get().

This test will fail: 
```java
@Test
public void testExpirationTimeOfReplace() throws Exception {
  IMap<Integer, Integer> map = hazelcastInstance.getMap("TEST_MAP");

  map.put(1, 1, 5, TimeUnit.SECONDS);

  sleepMillis(4000);
  boolean success = map.replace(1, 1, 2);
  assertEquals(success, true); //PASS

  sleepMillis(4000);
  success = map.replace(1, 2, 3);
  assertEquals(success, true); //PASS

  EntryView<Integer, Integer> entryView = map.getEntryView(1);
  long expectedExpirationTime = entryView.getCreationTime() + TimeUnit.SECONDS.toMillis(5);

  assertEquals(expectedExpirationTime, entryView.getExpirationTime()); // PASS

  assertTrue(map.get(1) == null); // FAIL
}

public static void sleepMillis(int millis) {
  try {
    TimeUnit.MILLISECONDS.sleep(millis);
  } catch (InterruptedException e) {
    Thread.currentThread().interrupt();
  }
}
```
