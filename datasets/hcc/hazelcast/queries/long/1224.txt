I'm using hazelcast 3.1 updating from hazelcast 2.6.
I found a problem using map store.
Here an example I made after meeting the problem:

with the following configuration:

<hazelcast xsi:schemaLocation="http://www.hazelcast.com/schema/config hazelcast-basic.xsd"
    xmlns="http://www.hazelcast.com/schema/config" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

```
<group>
    <name>TEST-Env</name>
    <password>jem_password</password>
</group>

    <network>
    <port auto-increment="true">5710</port>
    <join>
        <multicast enabled="true">
            <multicast-group>233.0.0.1</multicast-group>
            <multicast-port>54327</multicast-port>
        </multicast>    
        <tcp-ip enabled="false">
            <interface>127.0.0.1</interface>
        </tcp-ip>
    </join>
    <interfaces enabled="false">
        <interface>10.10.1.*</interface>
    </interfaces>
</network>

<map name="MAP-TEST">
    <map-store enabled="true">
        <!-- Name of the class implementing MapLoader and/or MapStore. The class 
            should implement at least of these interfaces and contain no-argument constructor. 
            Note that the inner classes are not supported. -->
        <class-name>com.hazelcast.examples.DummyStore</class-name>
        <!-- Number of seconds to delay to call the MapStore.store(key, value). 
            If the value is zero then it is write-through so MapStore.store(key, value) 
            will be called as soon as the entry is updated. Otherwise it is write-behind 
            so updates will be stored after write-delay-seconds value by calling Hazelcast.storeAll(map). 
            Default value is 0. -->
        <write-delay-seconds>0</write-delay-seconds>
    </map-store>
</map>
```

</hazelcast>

If you try to launch this you will see that the code will not be able to pass the outputQueue.size() code line 

```
    HazelcastInstance hazelcastInstance = Hazelcast
            .newHazelcastInstance();
    IMap outputQueue = hazelcastInstance.getMap("MAP-TEST");
    outputQueue.size();
    System.out.println("Done!");
```
