Cluster member-list update operations are not ordered, new member addition and removal operations can get reordered on receiving/processing side. Also periodic member-list publish operation has no order with other member adding/removing operations. That can cause having different member lists on different members. 

For example assume cluster has [A, B, C] members;  
- B shuts down
- A publishes [A, B, C] with a periodic member-list publish operation
- B is removed from both A and C. Member-list seen by;
   * A -> [A, C]
   * C -> [A, C]
- Periodic member-list publish operation is processed by C.  Member-list seen by;
   * A -> [A, C]
   * C -> [A, B, C]

After that point all membership updates will be rejected by C with following error (see `ClusterServiceImpl.shouldProcessMemberUpdate()`);
```
Received an inconsistent member update which contains new members 
and removes some of the current members! Ignoring and requesting a new member update...
```

This issue can be fixed by adding an incremental sequence in form `(master-uuid, sequence)` to all member update operations. 