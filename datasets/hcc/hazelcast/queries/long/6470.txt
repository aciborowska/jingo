HZ does not honor the <network><connection-attempt-timeout> setting.  Instead, it overrides it with "1".

With HZ 3.5.2, we have a Hazelcast client initialized with the usual com.hazelcast.web.WebFilter.  The <network> section of the hazelcast-client.properties file looks like:

```
<network>
    <cluster-members>
        <address>127.0.0.1</address>
    </cluster-members>
    <smart-routing>true</smart-routing>
    <redo-operation>true</redo-operation>

      <connection-attempt-period>20000</connection-attempt-period>
      <connection-timeout>30000</connection-timeout>
      <connection-attempt-limit>60</connection-attempt-limit>
</network>
```

When it runs, what I found is that internally HZ is setting connection-attempt-limit to 1.  I debugged and found that it happens in HazelcastClientLoader.createClientInstance():

```
  clientConfig.getNetworkConfig().setConnectionAttemptLimit(1);
```

Why is it doing this?  It is overriding a value that is set in the config file with "1" -- Why?

I have been trying to configure it for an effective retry policy and I noticed messages like this;

[2015-10-14 06:54:54,131] - WARN  - impl.ClusterListenerSupport  - Unable to get alive cluster connection, try in 18590 ms later, attempt 1 of 1.

again and again if it couldn't connect.  I could have expected the messages to be "...atempt 1 of 60", "...attempt 2 of 60", etc

I noticed that the set to 1 was only added in the last commit: "Web filter enhancements and bug fixes" 760e9933002a69b43a578f92eabf2c017079e414

For the original thread, please see https://groups.google.com/forum/#!topic/hazelcast/5fPeBLuNi-w
