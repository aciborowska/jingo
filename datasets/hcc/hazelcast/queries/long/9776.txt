I have a simple test:
- the server adds, for example, 100 records into the map; value length is about 800K
- the client gets all values one by one

As a result, I see that sometimes (few times per 100 invocations) it takes about 5 seconds to do IMap.get. With increasing value length number of 'slow' invocations increases as well.

Increasing buffer size helps, but since I can't predict the value size, I assume that I may still face the same problem.

I use:
java 1.8.0_102
hazelcast 3.7.4
mac os el capitan

Reproducer can be found [here](https://github.com/olessio/HazelcastTest/blob/master/src/main/java/ServerAndClient.java)

In the attachment you can find:
1) jfr files
2) thread dump at the moment, when the application 'stuck'

[threaddump_and_jfr.zip](https://github.com/hazelcast/hazelcast/files/738608/threaddump_and_jfr.zip)
