using Stabilizer MapStoreTest,  with different xml map configurations uncovered this issue.

if we config a map using:

```
 <map name="MapStore*">

    <map-store enabled="true">
        <class-name>com.hazelcast.stabilizer.tests.map.helpers.MapStoreWithCounter</class-name>
        <write-delay-seconds>5</write-delay-seconds>
    </map-store>

</map>
```

then the the map store behaves as expected 

But using the following config,  with a wild card, and extra config: 
then the map store instance is created, but never used. 

```
  <map name="MaxSizeDanny*">

    <in-memory-format>BINARY</in-memory-format>
    <backup-count>1</backup-count>
    <async-backup-count>0</async-backup-count>
    <max-idle-seconds>0</max-idle-seconds>
    <eviction-policy>LRU</eviction-policy>
    <max-size policy="PER_NODE">10</max-size>
    <eviction-percentage>50</eviction-percentage>

    <merge-policy>com.hazelcast.map.merge.PassThroughMergePolicy</merge-policy>

    <map-store enabled="true">
        <class-name>com.hazelcast.stabilizer.tests.map.helpers.MapStoreWithCounter</class-name>
        <write-delay-seconds>5</write-delay-seconds>
    </map-store>

</map>
```

However using the same xml config without the wildcard,  and the MapStore instance works at normal.

```
<map name="MapExactName">

    <in-memory-format>BINARY</in-memory-format>
    <backup-count>1</backup-count>
    <async-backup-count>0</async-backup-count>
    <max-idle-seconds>0</max-idle-seconds>
    <eviction-policy>LRU</eviction-policy>
    <max-size policy="PER_NODE">10</max-size>
    <eviction-percentage>50</eviction-percentage>

    <merge-policy>com.hazelcast.map.merge.PassThroughMergePolicy</merge-policy>

    <map-store enabled="true">
        <class-name>com.hazelcast.stabilizer.tests.map.helpers.MapStoreWithCounter</class-name>
        <write-delay-seconds>5</write-delay-seconds>
    </map-store>

</map>
```
