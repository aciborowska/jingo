updating the value of "key1" is not completely done but lifecycle listener countdown merge is over latch
test for this issue:

```
@Test
public void testLatestUpdateMapMergePolicy() {
    String mapName = randomMapName();
    Config config = newConfig(LatestUpdateMapMergePolicy.class.getName(), mapName);
    HazelcastInstance h1 = Hazelcast.newHazelcastInstance(config);
    HazelcastInstance h2 = Hazelcast.newHazelcastInstance(config);

    TestMemberShipListener memberShipListener = new TestMemberShipListener(1);
    h2.getCluster().addMembershipListener(memberShipListener);
    TestLifeCycleListener lifeCycleListener = new TestLifeCycleListener(1);
    h2.getLifecycleService().addLifecycleListener(lifeCycleListener);

    closeConnectionBetween(h1, h2);

    assertOpenEventually(memberShipListener.latch);
    assertClusterSizeEventually(1, h1);
    assertClusterSizeEventually(1, h2);

    IMap<Object, Object> map1 = h1.getMap(mapName);
    map1.put("key1", "value");
    IMap<Object, Object> map2 = h2.getMap(mapName);
    map2.put("key1", "LatestUpdatedValue");

    assertOpenEventually(lifeCycleListener.latch);// check the "MERGED" state
    assertClusterSizeEventually(2, h1);
    assertClusterSizeEventually(2, h2);

    IMap<Object, Object> mapTest = h1.getMap(mapName);
    assertEquals("LatestUpdatedValue", mapTest.get("key1")); //get("key1") return "value"

}
```
