Last time access time is not updates when a record is accessed using predicate. No indexes are defined. For instance, the following test is failing is an index is not defined.

```
private void testMaxIdle_readNoIndex() {
        String mapName = randomMapName();

        Config config = getConfig();
        // make the cleaner task as aggressive as possible
        config.setProperty(PROP_TASK_PERIOD_SECONDS, "1");

        HazelcastInstance node = createHazelcastInstance(config);
        IMap<Integer, Employee> map = node.getMap(mapName);

        for (int i = 0; i < 5; ++i) {
            String cityName = i % 2 == 0 ? "cityname" : null;

            Employee emp = new Employee(i, "name" + i, cityName, 0, true, i);
            map.put(i, emp, 0L, SECONDS, 2L, SECONDS);
        }

        EntryObject entryObject = new PredicateBuilder().getEntryObject();
        Predicate predicateCityNull = entryObject.get("city").isNull();
        // Touch the map entry though the index to make sure expiration cleaning task
        // doesn't evict it.
        assertTrueAllTheTime(() -> {
            assertTrue(map.containsKey(0));
            Collection<Employee> valuesNullCity = map.values(predicateCityNull);
            assertEquals(2, valuesNullCity.size());

            Collection<Employee> valuesNotNullCity = map.values(Predicates.equal("city", "cityname"));
            assertEquals(3, valuesNotNullCity.size());
        }, 5);
    }
```
