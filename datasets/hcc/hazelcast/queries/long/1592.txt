we have this strange (wrong) behavior with write-behind scenario

we run an high performance test where we make a lot of put for the same range of entries, with key from 1 to 100.000, incrementing one attribute on each put.
HZ execute a lot of storeAll() to persist the changes with approximately 7000 entries each. 
As the db is slow,  each storeAll() takes more than 30 secs to make all the 7000 updates.
From the logging we can see that the storeAll() are executed in parallels by different threads.
It happen that the write to db are not in sequence and sometime the final value for an entry in the db is not last value in memory as the last update belong to a storeAll() executed previously.
StoreAll() with new value for the same key should not be executed until any previous StoreAll() with the same key are not end execution.
