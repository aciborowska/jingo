We are using hz version 3.5.4 in client / server mode and in some rare cases seeing the below behavior in which a IMap.tryLock fails with TargetDisconnectedException but the server lock was actually acquired. This leaves our flow in a deadlock situation as the client have no way of knowing that the server lock was actually acquired.

Seems like a bug, as the server lock should have been released when the client disconnects from the server.

We are working on creating a reproducible test.

```
class com.hazelcast.spi.exception.TargetDisconnectedException-null
com.hazelcast.spi.exception.TargetDisconnectedException
at com.hazelcast.client.spi.impl.ClientInvocationFuture.get(ClientInvocationFuture.java:121)
at com.hazelcast.client.spi.impl.ClientInvocationFuture.get(ClientInvocationFuture.java:102)
at com.hazelcast.client.spi.ClientProxy.invoke(ClientProxy.java:130)
at com.hazelcast.client.proxy.ClientMapProxy.tryLock(ClientMapProxy.java:478)
at com.company.core.model.system.DistributedMap.tryLock(DistributedMap.java:128)
at com.company.landingzone.service.message.MainLzQueueMessageListener$MainLzQueueWorker.process(MainLzQueueMessageListener.java:35)
at com.company.core.service.message.AbstractQueueListener$AbstractQueueRunnable.run(AbstractQueueListener.java:139)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
at ------ End remote and begin local stack-trace ------.(Unknown Source)
at com.hazelcast.client.spi.impl.ClientInvocationFuture.resolveException(ClientInvocationFuture.java:175)
at com.hazelcast.client.spi.impl.ClientInvocationFuture.resolveResponse(ClientInvocationFuture.java:160)
at com.hazelcast.client.spi.impl.ClientInvocationFuture.get(ClientInvocationFuture.java:127)
at com.hazelcast.client.spi.impl.ClientInvocationFuture.get(ClientInvocationFuture.java:102)
at com.hazelcast.client.spi.ClientProxy.invoke(ClientProxy.java:130)
at com.hazelcast.client.proxy.ClientMapProxy.tryLock(ClientMapProxy.java:478)
at com.company.core.model.system.DistributedMap.tryLock(DistributedMap.java:128)
at com.company.landingzone.service.message.MainLzQueueMessageListener$MainLzQueueWorker.process(MainLzQueueMessageListener.java:35)
at com.company.core.service.message.AbstractQueueListener$AbstractQueueRunnable.run(AbstractQueueListener.java:139)
at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
```
