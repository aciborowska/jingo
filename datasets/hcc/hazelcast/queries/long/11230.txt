Despite comments in #7634, this is definitely NOT fixed for the LRU and LFU eviction strategies in 3.8.2. Newly added items are still being evicted straight away (while really-really old entries are kept intact) when Map is working at almost-full size (so it reached max-size count).

I discovered this  during load testing when several independent client are writing c.a. 3000 entries each, and then read exact these entries. With any of the eviction strategies enabled, I have a lot of null reads for these freshly added entries despite the fact that there are 1500000+ better candidates for eviction.

This is the first bad experience I had with Hazelcast. It would be a shame as this is pretty much very important, basic functionality that should work without any issues.

I could somehow understood it for LFU strategy in case of read-only-once data, but this should never-ever happen for LRU strategy.

Map configuration:
```xml
                <in-memory-format>BINARY</in-memory-format>
		
		<backup-count>1</backup-count>
		<async-backup-count>0</async-backup-count>
		<read-backup-data>false</read-backup-data>
			
		<time-to-live-seconds>43200</time-to-live-seconds>
		<max-idle-seconds>0</max-idle-seconds>
		<eviction-policy>LRU</eviction-policy>
		<max-size policy="PER_NODE">2000000</max-size>
		<eviction-percentage>25</eviction-percentage>
```

I'm observing this incorrect behavior when maps are populated with ~2000000, so close to the max-size above.