Currently `client.getDistributedObjects()` can cause destroyed objects to be re-created. This is because it attemps to create proxies it doesn't know about after getting a list from a member, however member might have destroyed the proxy meanwhile.

Reproducer:

```
HazelcastInstance instance = Hazelcast.newHazelcastInstance();
HazelcastInstance client = HazelcastClient.newHazelcastClient();
new Thread(() -> {
    while (true) {
        System.out.println(client.getDistributedObjects());
        try {
            Thread.sleep(250);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}).start();
for (int i = 0; i < 100_000; i++) {
    IMap<Object, Object> map = instance.getMap("map-" +i);
    map.put(1,1);
    map.destroy();
}
System.out.println("done");
```