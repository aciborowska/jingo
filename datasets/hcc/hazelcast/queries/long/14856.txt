this type of admin function should be given priority over other operations.
as it is not often used / called, and when a user wants to see it the cluster is in a safe state
then we are not expecting to be thrown an HazelcastOverloadException

`hzInstance.getPartitionService().isClusterSafe()` throws `HazelcastOverloadException`

`
com.hazelcast.core.HazelcastOverloadException: Failed to start invocation due to overload: Invocation{op=com.hazelcast.internal.partition.operation.SafeStateCheckOperation{serviceName='hz:core:partitionService', identityHash=1735006696, partitionId=-1, replicaIndex=0, callId=0, invocationTime=1554901527416 (2019-04-10 13:05:27.416), waitTimeout=-1, callTimeout=60000}, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeoutMillis=60000, firstInvocationTimeMs=1554901527416, firstInvocationTime='2019-04-10 13:05:27.416', lastHeartbeatMillis=0, lastHeartbeatTime='1970-01-01 00:00:00.000', target=[10.0.0.18]:5701, pendingResponse={VOID}, backupsAcksExpected=0, backupsAcksReceived=0, connection=null} 
`

async operation are being used in the test so a back pressure is enabled
which means operations like map put get with thow HazelcastOverloadException

however admin operation should get through.


http://jenkins.hazelcast.com/view/stable/job/stable-inc/2/console


http://54.147.27.51/~jenkins/workspace/stable-inc/3.12/2019_04_10-11_35_36/stable/async/sync-bak/put-hd

