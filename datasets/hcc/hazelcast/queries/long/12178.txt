
durable executor service and "regular" executor service print an overly verbose stack trace 

we note the Scheduled executor service or any of the other structures that are configured to run with split brain protection/quorum, do not produce such overvley verbose logging.

the test is https://hazelcast-l337.ci.cloudbees.com/view/split/job/split-quorum/31/console
and the logs from the "NO" quorum side of the cluster very quickly grow to multi GB
due to the following verbose stack trace printed 

```
java.util.concurrent.ExecutionException: com.hazelcast.quorum.QuorumException: Split brain protection exception: There is not enough members in the cluster. Required size: 3, current size: 2
	at com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolveAndThrowIfException(InvocationFuture.java:92)
	at com.hazelcast.spi.impl.AbstractInvocationFuture.get(AbstractInvocationFuture.java:155)
	at com.hazelcast.durableexecutor.impl.DurableExecutorServiceProxy.submitToPartition(DurableExecutorServiceProxy.java:257)
	at com.hazelcast.durableexecutor.impl.DurableExecutorServiceProxy.submit(DurableExecutorServiceProxy.java:154)
	at hzcmd.executor.durable.SubmitAndUse.timeStep(SubmitAndUse.java:16)
	at remote.bench.marker.MetricsMarker.flatOut(MetricsMarker.java:53)
	at remote.bench.marker.MetricsMarker.bench(MetricsMarker.java:40)
	at remote.bench.BenchThread.call(BenchThread.java:38)
	at remote.bench.BenchThread.call(BenchThread.java:12)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:473)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1152)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:622)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.hazelcast.quorum.QuorumException: Split brain protection exception: There is not enough members in the cluster. Required size: 3, current size: 2
	at com.hazelcast.quorum.impl.QuorumImpl.newQuorumException(QuorumImpl.java:175)
	at com.hazelcast.quorum.impl.QuorumImpl.ensureQuorumPresent(QuorumImpl.java:166)
	at com.hazelcast.quorum.impl.QuorumImpl.ensureQuorumPresent(QuorumImpl.java:161)
	at com.hazelcast.quorum.impl.QuorumServiceImpl.ensureQuorumPresent(QuorumServiceImpl.java:138)
	at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.ensureQuorumPresent(OperationRunnerImpl.java:277)
	at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:187)
	at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:406)
	at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:115)
	at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:100)
	at ------ submitted from ------.(Unknown Source)
	at com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:127)
	at com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolveAndThrowIfException(InvocationFuture.java:79)
	... 14 more
```


```
java.util.concurrent.ExecutionException: com.hazelcast.quorum.QuorumException: Split brain protection exception: There is not enough members in the cluster. Required size: 3, current size: 2
	at com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolveAndThrowIfException(InvocationFuture.java:92)
	at com.hazelcast.spi.impl.AbstractInvocationFuture.get(AbstractInvocationFuture.java:155)
	at com.hazelcast.util.executor.DelegatingFuture.get(DelegatingFuture.java:83)
	at hzcmd.executor.regular.SubmitToAllAndUse.timeStep(SubmitToAllAndUse.java:23)
	at remote.bench.marker.MetricsMarker.flatOut(MetricsMarker.java:53)
	at remote.bench.marker.MetricsMarker.bench(MetricsMarker.java:40)
	at remote.bench.BenchThread.call(BenchThread.java:38)
	at remote.bench.BenchThread.call(BenchThread.java:12)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:473)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1152)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:622)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.hazelcast.quorum.QuorumException: Split brain protection exception: There is not enough members in the cluster. Required size: 3, current size: 2
	at com.hazelcast.quorum.impl.QuorumImpl.newQuorumException(QuorumImpl.java:175)
	at com.hazelcast.quorum.impl.QuorumImpl.ensureQuorumPresent(QuorumImpl.java:166)
	at com.hazelcast.quorum.impl.QuorumImpl.ensureQuorumPresent(QuorumImpl.java:161)
	at com.hazelcast.quorum.impl.QuorumServiceImpl.ensureQuorumPresent(QuorumServiceImpl.java:138)
	at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.ensureQuorumPresent(OperationRunnerImpl.java:277)
	at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:187)
	at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:406)
	at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:115)
	at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:100)
	at ------ submitted from ------.(Unknown Source)
	at com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:127)
	at com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolveAndThrowIfException(InvocationFuture.java:79)
	... 13 more
```