Entries seem to be considered idle, even when they are being touched.

Say, for 'default' map config, max-idle-seconds parameter is set to 30 seconds.

Then you do 
map.put(v, value, 30, TimeUnit.SECONDS);

If I understand Hazelcast API correctly, this operation must 'refresh' entry idle counter.
So that  entry 'v' must stick there for at least another 30 seconds. 
However the put() operation doesn't seem to have any effect on entry idleness, and it gets evicted exactly after N seconds +/- polling interval.

The code to reproduce the issue is here
https://gist.github.com/3873408

When I run it, it prints

ADDED: key0
ADDED: key1
ADDED: key2
ADDED: key3
ADDED: key4
ADDED: key5
ADDED: key6
ADDED: key7
ADDED: key8
ADDED: key9
TOUCH ROUND 0
TOUCHED: key0
TOUCHED: key1
TOUCHED: key2
TOUCHED: key3
TOUCHED: key4
TOUCHED: key5
TOUCHED: key6
TOUCHED: key7
TOUCHED: key8
TOUCHED: key9
TOUCH ROUND 1
TOUCHED: key0
TOUCHED: key1
TOUCHED: key2
TOUCHED: key3
TOUCHED: key4
TOUCHED: key5
TOUCHED: key6
TOUCHED: key7
TOUCHED: key8
TOUCHED: key9
TOUCH ROUND 2
TOUCHED: key0
EVICTED: key0: age 10009 ms
TOUCHED: key1
EVICTED: key1: age 10009 ms
TOUCHED: key2
EVICTED: key2: age 10009 ms
TOUCHED: key3
EVICTED: key3: age 10009 ms
TOUCHED: key4
EVICTED: key4: age 10010 ms

which means that entries much 'younger' than TTL are being mercilessly evicted.

I would expect IMap eviction machinery to behave in such a way that it respects put() operations.
The test must not show EVICTED messages when touch rounds are still running, however it does.

Tried with 2.2 and 2.3.1
