`SELECT * FROM (SELECT * FROM map WHERE 0 = 0) WHERE 1 = 1` fails, while
`SELECT * FROM (SELECT * FROM map WHERE 1 = 1) WHERE 1 = 1` works perfectly fine

```
com.hazelcast.sql.HazelcastSqlException
	at com.hazelcast.sql.impl.QueryUtils.toPublicException(QueryUtils.java:79)
	at com.hazelcast.sql.impl.SqlServiceImpl.execute(SqlServiceImpl.java:203)
	at com.hazelcast.jet.impl.JetSqlServiceImpl.execute(JetSqlServiceImpl.java:36)
	at com.hazelcast.sql.SqlService.execute(SqlService.java:144)
	at com.hazelcast.jet.sql.JetSqlTestSupport.lambda$assertRowsEventuallyInAnyOrder$1(JetSqlTestSupport.java:78)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException
	at org.apache.calcite.plan.RelOptUtil.findAllTables(RelOptUtil.java:215)
	at org.apache.calcite.plan.RelOptUtil.findTables(RelOptUtil.java:205)
	at org.apache.calcite.plan.RelOptMaterializations.getApplicableMaterializations(RelOptMaterializations.java:171)
	at org.apache.calcite.plan.RelOptMaterializations.useMaterializedViews(RelOptMaterializations.java:77)
	at org.apache.calcite.plan.volcano.VolcanoPlanner.registerMaterializations(VolcanoPlanner.java:305)
	at org.apache.calcite.plan.volcano.VolcanoPlanner.findBestExp(VolcanoPlanner.java:514)
	at org.apache.calcite.tools.Programs$RuleSetProgram.run(Programs.java:327)
	at com.hazelcast.sql.impl.calcite.opt.QueryPlanner.optimize(QueryPlanner.java:41)
	at com.hazelcast.sql.impl.calcite.OptimizerContext.optimize(OptimizerContext.java:161)
	at com.hazelcast.sql.impl.calcite.HazelcastSqlBackend.optimize(HazelcastSqlBackend.java:156)
	at com.hazelcast.sql.impl.calcite.HazelcastSqlBackend.createPlan(HazelcastSqlBackend.java:112)
	at com.hazelcast.sql.impl.calcite.CalciteSqlOptimizer.prepare(CalciteSqlOptimizer.java:129)
	at com.hazelcast.sql.impl.SqlServiceImpl.prepare(SqlServiceImpl.java:244)
	at com.hazelcast.sql.impl.SqlServiceImpl.query0(SqlServiceImpl.java:229)
	at com.hazelcast.sql.impl.SqlServiceImpl.execute(SqlServiceImpl.java:201)
	... 4 more
```