I am currently evaluating hazelcast and its jcache api, i am trying to get a feature that was previously working with infinispan working with hazelcast, i have used hazelcast a couple of years ago and was very happy with the results, but with this problem i am drawing a blank so any any advice would be very much appreciated. 

I am currently just testing 2 hazelcast instances running within a  .war file on 2 seperate jboss instances that are running locally on my machine and i am seeing the following strange stack trace under very light load 3 requests per second:

I have also turned off cache backup operations by setting the <backup-count> in hazelcast.xml to 0 but this exception still is thrown (strange).

```
14:02:05,450 SEVERE [com.hazelcast.cache.impl.operation.CachePutBackupOperation] (hz.JCacheSharedInstance.partition-operation.thread-6) [127.0.0.1]:7702 [exposure] [3.4.1] null: java.lang.NullPointerException
    at com.hazelcast.util.ConcurrentReferenceHashMap.put(ConcurrentReferenceHashMap.java:1278) [hazelcast-3.4.1.jar:3.4.1]
    at com.hazelcast.cache.impl.AbstractCacheRecordStore.putRecord(AbstractCacheRecordStore.java:730) [hazelcast-3.4.1.jar:3.4.1]
    at com.hazelcast.cache.impl.operation.CachePutBackupOperation.run(CachePutBackupOperation.java:57) [hazelcast-3.4.1.jar:3.4.1]
    at com.hazelcast.spi.impl.Backup.run(Backup.java:92) [hazelcast-3.4.1.jar:3.4.1]
    at com.hazelcast.spi.impl.BasicOperationService$OperationHandler.handle(BasicOperationService.java:733) [hazelcast-3.4.1.jar:3.4.1]
    at com.hazelcast.spi.impl.BasicOperationService$OperationHandler.access$500(BasicOperationService.java:709) [hazelcast-3.4.1.jar:3.4.1]
    at com.hazelcast.spi.impl.BasicOperationService$OperationPacketHandler.handle(BasicOperationService.java:683) [hazelcast-3.4.1.jar:3.4.1]
    at com.hazelcast.spi.impl.BasicOperationService$OperationPacketHandler.handle(BasicOperationService.java:627) [hazelcast-3.4.1.jar:3.4.1]
    at com.hazelcast.spi.impl.BasicOperationService$OperationPacketHandler.access$1500(BasicOperationService.java:614) [hazelcast-3.4.1.jar:3.4.1]
    at com.hazelcast.spi.impl.BasicOperationService$BasicDispatcherImpl.dispatch(BasicOperationService.java:566) [hazelcast-3.4.1.jar:3.4.1]
    at com.hazelcast.spi.impl.BasicOperationScheduler$OperationThread.process(BasicOperationScheduler.java:466) [hazelcast-3.4.1.jar:3.4.1]
    at com.hazelcast.spi.impl.BasicOperationScheduler$OperationThread.doRun(BasicOperationScheduler.java:458) [hazelcast-3.4.1.jar:3.4.1]
    at com.hazelcast.spi.impl.BasicOperationScheduler$OperationThread.run(BasicOperationScheduler.java:432) [hazelcast-3.4.1.jar:3.4.1]
```

Having looked at the online source code for the ConcurrentReferenceHashMap I can see that the nullpointer is caused by a value being null, . 

```
/**
     * Maps the specified key to the specified value in this table.
     * Neither the key nor the value can be null.
     * <p/>
     * <p> The value can be retrieved by calling the <tt>get</tt> method
     * with a key that is equal to the original key.
     *
     * @param key   key with which the specified value is to be associated
     * @param value value to be associated with the specified key
     * @return the previous value associated with <tt>key</tt>, or
     * <tt>null</tt> if there was no mapping for <tt>key</tt>
     * @throws NullPointerException if the specified key or value is null
     */
    public V put(K key, V value) {
        if (value == null)
            throw new NullPointerException();
        int hash = hashOf(key);
        return segmentFor(hash).put(key, hash, value, false);
    }
```

This problem does not occur very often maybe once in ever 20 requests and as far as i can see this problem occurs with various different put operations, so (although i probably will be wrong) I think that it may be a problem with the new hazelcast version.
