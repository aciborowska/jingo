https://github.com/hazelcast/hazelcast/pull/15136 introduced eviction support on index level. As a result, API calls such as `IMap.values(predicate)` update the TTL metadata (`lastAccessTime`, ...) of the returned records if an index is used. However, if the predicate doesn't use an index, the TTL metadata is not updated.

Reproducer:

```
@Test
public void reproducer() {
    String mapName = randomMapName();
    Config config = getConfig();
    HazelcastInstance node = createHazelcastInstance(config);
    IMap<Integer, String> map = node.getMap(mapName);
    map.put(0, "foo", 0L, SECONDS, 60L, SECONDS);
    assertEquals(1, map.values(Predicates.alwaysTrue()).size());
    assertTrue(map.getEntryView(0).getLastAccessTime() > 0);
}
```

This affects also `map.values()` which is implemented as `map.values(Predicates.alwaysTrue())` internally.