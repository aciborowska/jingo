If a server side config is supplied to the client xml config builder using:

``` java
        ClientConfig config = new XmlClientConfigBuilder( "client1.xml" ).build();
        client = HazelcastClient.newHazelcastClient( config );
```

Where the client config is:

```
<?xml version="1.0" encoding="UTF-8"?>
<hazelcast xsi:schemaLocation="http://www.hazelcast.com/schema/config hazelcast-config-3.6.xsd"
           xmlns="http://www.hazelcast.com/schema/config"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <network>
        <port auto-increment="true">5705</port>

        <join>
            <multicast enabled="false"/>
            <tcp-ip enabled="true">
                <member-list>
                    <member>127.0.0.1:5705</member>
                    <member>127.0.0.1:5706</member>
                </member-list>
            </tcp-ip>
        </join>

        <interfaces enabled="true">
            <interface>127.0.0.1</interface>
        </interfaces>

    </network>

</hazelcast>
```

this silently passes without error, but the cluster member list is not processed (because the XML is incorrect for the client).

Perhaps the client side XML config builder should fail if it does not find a `<hazelcast-client>` root node.  It would also be nice if the client warned about the usage of the server side element `<member-list>` when the `<cluster-members>` element should be used (perhaps it should warn about all server-side only elements encountered).

Or make the client side XML process the same XML elements as the server side XML and drop the client specific XML.
