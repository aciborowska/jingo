Hi, 
 
 I'm experiencing troubles with dynamic IMaps creation, as they are left in the system after being destroyed. After some time server using Hazelcast client becomes unresponsive as it keeps too many DistributedObjects. 
 Code that shows my problem: 

 
    @Test
    public void testHC() throws InterruptedException {
        final String name = "testMap";
        Config config = new Config();
        config.getNetworkConfig().getJoin().getTcpIpConfig().addMember("localhost").setEnabled(true);
        config.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(false);
        HazelcastInstance instance1 = Hazelcast.newHazelcastInstance(config);

        ClientConfig clientConfig = new ClientConfig();
        clientConfig.getNetworkConfig().setSmartRouting(true);
        HazelcastInstance client1 = HazelcastClient.newHazelcastClient(clientConfig);
        HazelcastInstance client2 = HazelcastClient.newHazelcastClient(clientConfig);

        client1.getMap(name);
        print(instance1, client1, client2);

        System.out.println("Removing map " + name);
        client1.getMap(name).destroy();
        print(instance1, client1, client2);
    }

    private void print(HazelcastInstance instance1, HazelcastInstance client1, HazelcastInstance client2) {
        System.out.println("Objects visible for Client one: " + client1.getDistributedObjects().size() +
                ", Client two: " + client2.getDistributedObjects().size() +
                ", Node: " + instance1.getDistributedObjects().size()
        );
    }

 This code results the output: 
`Objects visible for Client one: 1, Client two: 1, Node: 1`
`Removing map testMap`
`Objects visible for Client one: 0, Client two: 1, Node: 0`

As you can see, second client still thinks "testMap" exists.
If we try to remove IMap from 'instance1' both clients will see it. 
