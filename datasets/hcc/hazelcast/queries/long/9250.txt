In case of retrying a BlockingOperation, the waitTimeout is made smaller so that
a timed blocking operation eventually times out.

However there are 2 bugs:

 * it can happen that a positive timeout, becomes negative due to subtraction. A negative
    timeout is considered to be an infinite timeout. So this can cause problems since the bound waiting transforms into an infinite wait.

  * it can happen that a blocking call doesn't wait as long as specified because instead of subtracting
    the elapsed time (good), the call timeout is subtracted (bad). This is a problem if the elapsed time is
    smaller than the call timeout. This can happen because the OperationParker periodically sweeps
    through all operations to expire them. This could happen 1 second after the operation
    get executed, but it will still get a 60 second (default timeout) being deducted from the
    remaining timeout. So it could be that you call lock.tryLock(60,seconds), but instead of waiting 60 seconds for the lock to come available, after 0 seconds the lock.tryLock could return false.
