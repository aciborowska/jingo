I am trying to reproduce problem I have with HZ 3.2.1-SNAPSHOT in 3 nodes cluster. After some work cluster hangs: each node waits for same lock, but no one holds it (happens after node shutdown).

To easier reproduce the problem run code with "-Xcomp" JVM argument.

I find way to reproduce another problem (not exactly my problem, happens not in 100% of cases, but often).

To reproduce start 3 nodes with such code:

```
    HazelcastInstance instance = Hazelcast.newHazelcastInstance();
    ILock lock1 = instance.getLock("lock1");
    ILock lock2 = instance.getLock("lock2");


    while (true) {
        try {
            lock1.lock();

            TransactionContext ctx = instance.newTransactionContext();
            ctx.beginTransaction();

            TransactionalQueue<Integer> queue = ctx.getQueue("queue");
            queue.offer(1);                

            Uninterruptibles.sleepUninterruptibly(1, TimeUnit.SECONDS);
            try {
                lock2.lock();
                System.out.println(System.currentTimeMillis());
                Uninterruptibles.sleepUninterruptibly(1, TimeUnit.SECONDS);
            } finally {
                lock2.unlock();
            }
            ctx.commitTransaction();
        } finally {
            lock1.unlock();
        }
        Uninterruptibles.sleepUninterruptibly(1, TimeUnit.SECONDS);
    }
```

after kill one node (last) and restart it (do it fast) (sometimes it is require to repeate)

**\* Node 1 exception:

```
апр 14, 2014 8:32:11 PM com.hazelcast.queue.tx.TxnPrepareOperation
SEVERE: [192.168.1.5]:5702 [header-test] [3.2.1-SNAPSHOT] No reserve for itemId: 35
com.hazelcast.transaction.TransactionException: No reserve for itemId: 35
    at com.hazelcast.queue.QueueContainer.txnEnsureReserve(QueueContainer.java:102)
    at com.hazelcast.queue.tx.TxnPrepareOperation.run(TxnPrepareOperation.java:49)
    at com.hazelcast.spi.impl.BasicOperationService.processOperation(BasicOperationService.java:363)
    at com.hazelcast.spi.impl.BasicOperationService.processPacket(BasicOperationService.java:309)
    at com.hazelcast.spi.impl.BasicOperationService.access$400(BasicOperationService.java:102)
    at com.hazelcast.spi.impl.BasicOperationService$BasicOperationProcessorImpl.process(BasicOperationService.java:756)
    at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.process(BasicOperationScheduler.java:276)
    at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.doRun(BasicOperationScheduler.java:270)
    at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.run(BasicOperationScheduler.java:245)
```

**\* Node 2 exception:

```
Exception in thread "main" com.hazelcast.transaction.TransactionException: No reserve for itemId: 35
    at com.hazelcast.queue.QueueContainer.txnEnsureReserve(QueueContainer.java:102)
    at com.hazelcast.queue.tx.TxnPrepareOperation.run(TxnPrepareOperation.java:49)
    at com.hazelcast.spi.impl.BasicOperationService.processOperation(BasicOperationService.java:363)
    at com.hazelcast.spi.impl.BasicOperationService.processPacket(BasicOperationService.java:309)
    at com.hazelcast.spi.impl.BasicOperationService.access$400(BasicOperationService.java:102)
    at com.hazelcast.spi.impl.BasicOperationService$BasicOperationProcessorImpl.process(BasicOperationService.java:756)
    at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.process(BasicOperationScheduler.java:276)
    at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.doRun(BasicOperationScheduler.java:270)
    at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.run(BasicOperationScheduler.java:245)
    at ------ End remote and begin local stack-trace ------.(Unknown Source)
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.resolveResponse(BasicInvocation.java:862)
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.resolveResponseOrThrowException(BasicInvocation.java:795)
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.get(BasicInvocation.java:698)
    at com.hazelcast.transaction.impl.TransactionImpl.prepare(TransactionImpl.java:209)
    at com.hazelcast.transaction.impl.TransactionContextImpl.commitTransaction(TransactionContextImpl.java:71)
    at by.test.nkey.hazelcast.test.HazelcastTest.main(HazelcastTest.java:51)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:483)
    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
апр 14, 2014 8:32:16 PM com.hazelcast.cluster.ClusterService
INFO: [192.168.1.5]:5701 [header-test] [3.2.1-SNAPSHOT] 
```

After start one new node (4th).
Restul: Sometimes all nodes waits to same lock forever.(remember -Xcomp argument to simulate hot JVM (looks like some race condition happens))
