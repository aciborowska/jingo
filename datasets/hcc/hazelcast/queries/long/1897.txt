In an application using a distributed map with encryption enabled:

```
    <hz:hazelcast id="hazelcast">
            <hz:config>
                    <hz:properties>
                            <hz:property name="hazelcast.logging.type">slf4j</hz:property>
                    </hz:properties>
                    <hz:network port="5701" port-auto-increment="false">
                            <hz:join>
                                    <hz:multicast enabled="false"/>
                                    <hz:tcp-ip enabled="true">
                                            <hz:members>__HOSTNAME__, __CAS_PEER1__</hz:members>
                                    </hz:tcp-ip>
                            </hz:join>
                            <hz:symmetric-encryption enabled="true"
                                    algorithm="PBEWithSHA1AndDESede"
                                    salt="thesalt"
                                    password="thepass"
                                    iteration-count="20"/>
                    <!--    <hz:ssl enabled="true"/> -->
                    </hz:network>
                    <hz:map name="tickets"
                            max-idle-seconds="${tgt.timeToKillInSeconds}"
                            max-size-policy="USED_HEAP_PERCENTAGE"
                            max-size="85"
                            eviction-policy="LRU"
                            eviction-percentage="10"/>
            </hz:config>
    </hz:hazelcast>
```

When placed under load, after a couple hundred requests, the application hangs, with errors such as:

2014-02-28 16:25:01,165 WARN [com.hazelcast.spi.Invocation] - [biggle]:5701 [dev] No response for 120000 ms. I
nvocationFuture{invocation=InvocationImpl{ serviceName='hz:impl:mapService', op=RemoveOperation{tickets}, part
itionId=256, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Addres
s[ned]:5701}, done=false}
2014-02-28 16:25:01,169 WARN [com.hazelcast.spi.Invocation] - [biggle]:5701 [dev] Asking if operation executio
n has been started: InvocationImpl{ serviceName='hz:impl:mapService', op=GetOperation{}, partitionId=156, repl
icaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Address[ned]:5701}
2014-02-28 16:25:01,169 WARN [com.hazelcast.spi.Invocation] - [biggle]:5701 [dev] No response for 120001 ms. I
nvocationFuture{invocation=InvocationImpl{ serviceName='hz:impl:mapService', op=SetOperation{tickets}, partiti
onId=268, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Address[n
ed]:5701}, done=false}
2014-02-28 16:25:06,180 WARN [com.hazelcast.spi.Invocation] - [biggle]:5701 [dev] While asking 'is-executing':
 InvocationImpl{ serviceName='hz:impl:mapService', op=GetOperation{}, partitionId=258, replicaIndex=0, tryCoun
t=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Address[ned]:5701}
java.util.concurrent.TimeoutException
2014-02-28 16:27:39,695 WARN [com.hazelcast.spi.Invocation] - [biggle]:5701 [dev] No response for 120000 ms. I
nvocationFuture{invocation=InvocationImpl{ serviceName='hz:impl:mapService', op=GetOperation{}, partitionId=25
1, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Address[ned]:570
1}, done=false}

and on the other node:
2014-02-28 16:25:01,166 WARN [com.hazelcast.spi.Invocation] - [ned]:5701 [dev] No response for 120000 ms. Invo
cationFuture{invocation=InvocationImpl{ serviceName='hz:impl:mapService', op=RemoveOperation{tickets}, partiti
onId=49, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Address[bi
ggle]:5701}, done=false}
2014-02-28 16:25:01,167 WARN [com.hazelcast.spi.Invocation] - [ned]:5701 [dev] Asking if operation execution h
as been started: InvocationImpl{ serviceName='hz:impl:mapService', op=RemoveOperation{tickets}, partitionId=49
, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Address[biggle]:5
701}
2014-02-28 16:25:06,180 WARN [com.hazelcast.spi.Invocation] - [ned]:5701 [dev] While asking 'is-executing': In
vocationImpl{ serviceName='hz:impl:mapService', op=RemoveOperation{tickets}, partitionId=49, replicaIndex=0, t
ryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Address[biggle]:5701}
java.util.concurrent.TimeoutException

While one node seems mostly idle, the other node is using 100% CPU time in the java process.

After the load is removed, everything comes back to life and works again.

The exact same app/load, without encryption enabled, works perfectly.
