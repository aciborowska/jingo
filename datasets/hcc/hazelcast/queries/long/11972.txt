`set.add()` can return false, even if the item added is not a duplicate


For example, the operation was retried because the first one timed out, but was successful on target, but the caller didn't know? Then the retrial would return that key was already present...
add is idempotent in the way it affects the target set, but not in its return value

this scenario possible? Two members, A, B.

A sends CollectionAddOperation to B (the partition owner)
B sends sync backup back to A
now split occurs, A doesn't receive response from B
CollectionAddOperation timeouts and is retried, now A is partition owner.
operation succeeds, but it already contained the key, so the set.add call returns true -> this causes duplicate ID error

yes, hazelcast provides at-least-once guarantees: http://docs.hazelcast.org/docs/latest/manual/html-single/#exactly-once-at-least-once-or-at-most-once-execution

failing Test for ISet add under split
https://hazelcast-l337.ci.cloudbees.com/view/split/job/split-x1/2/console
https://github.com/hazelcast/hzCmd-bench/tree/zeta/lab/hz/split/set/add
https://github.com/hazelcast/hzCmd-bench/blob/zeta/src/main/java/hzcmd/set/FillIUnique.java



related to this issue
https://github.com/hazelcast/hazelcast/issues/11967