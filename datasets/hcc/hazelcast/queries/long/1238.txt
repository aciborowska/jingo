A new Test for the java client map intorceptor gives Exceptions,  it is also effecting the other client implementations / tests

The new Test in hazelcast-client tests java
com.hazelcast.client.SimpleClientMapIntorceptorTest
using helpers
com.hazelcast.client.helpers.PortableHelpersFactory
com.hazelcast.client.helpers.SimpleClientInterceptor

gives this Exception when run with 2 node cluster

1st error

com.hazelcast.nio.serialization.HazelcastSerializationException: There is no suitable serializer for class com.hazelcast.nio.serialization.ByteArrayObjectDataOutput
    at com.hazelcast.nio.serialization.SerializationServiceImpl.writeObject(SerializationServiceImpl.java:239)
    at com.hazelcast.nio.serialization.ByteArrayObjectDataOutput.writeObject(ByteArrayObjectDataOutput.java:260)
    at com.hazelcast.map.client.MapAddInterceptorRequest.writePortable(MapAddInterceptorRequest.java:94)
...
... 

from my initial testing / debug / research.  
possible cause / solution in
MapAddInterceptorRequest.java 

writePortable(PortableWriter writer){
  ....
  out.writeObject(out);    // should be ? -->> out.writeObject(mapInterceptor);  
}

/////////////////////////////////////////////////////////

2nd error

java.lang.NullPointerException
    at java.util.concurrent.ConcurrentHashMap.put(ConcurrentHashMap.java:881)
    at com.hazelcast.client.MultiTargetClientRequest$MultiTargetCallback.notify(MultiTargetClientRequest.java:62)
    at com.hazelcast.client.MultiTargetClientRequest$SingleTargetCallback.notify(MultiTargetClientRequest.java:87)
    at com.hazelcast.spi.impl.InvocationImpl$CallbackResponseProcessor.process(InvocationImpl.java:265)
    at com.hazelcast.spi.impl.InvocationImpl.notify(InvocationImpl.java:226)
    at com.hazelcast.spi.impl.TargetInvocationImpl.notify(TargetInvocationImpl.java:25)
    at com.hazelcast.spi.impl.RemoteCall.offerResponse(RemoteCall.java:42)
    at com.hazelcast.spi.impl.OperationServiceImpl.notifyRemoteCall(OperationServiceImpl.java:610)
    at com.hazelcast.spi.impl.ResponseOperation.run(ResponseOperation.java:56)
    at com.hazelcast.spi.impl.OperationServiceImpl$RemoteOperationProcessor.processResponse(OperationServiceImpl.java:755)
    at com.hazelcast.spi.impl.OperationServiceImpl$RemoteOperationProcessor.run(OperationServiceImpl.java:736)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
    at java.lang.Thread.run(Thread.java:680)
    at com.hazelcast.util.executor.SingleExecutorThreadFactory$ManagedThread.run(SingleExecutorThreadFactory.java:45)

From my intial research
/com/hazelcast/map/operation/AddInterceptorOperation.java
//should override default behavior stops null pointer exception on inter node coms ?
 @Override
    public Object getResponse() {  
        return "someResponse?";
    }
