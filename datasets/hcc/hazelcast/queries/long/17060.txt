As discussed with @blazember in private messages, we should not try to process metrics if
- the blob itself is zero-length
- the dictionary is zero-length
- the metrics blob is zero-length

by adding length checks.

The reasoning is that, if we want to use old statistics system for the non-java clients until they can implement new metrics system, the clients need to send some kind of empty metric blob. Trying the process these metrics results in exceptions like below.

```plain
Jun 05, 2020 3:16:21 PM com.hazelcast.internal.metrics.impl.MetricsCollectionCycle
WARNING: Collecting metrics from source com.hazelcast.client.impl.ClientEndpointManagerImpl failed
java.lang.RuntimeException: Incorrect format, expected version 1, got -257
        at com.hazelcast.internal.metrics.impl.MetricsCompressor.extractMetrics(MetricsCompressor.java:357)
        at com.hazelcast.internal.metrics.impl.MetricsCompressor.extractMetrics(MetricsCompressor.java:349)
        at com.hazelcast.client.impl.ClientEndpointImpl.provideDynamicMetrics(ClientEndpointImpl.java:303)
        at com.hazelcast.client.impl.ClientEndpointManagerImpl.lambda$provideDynamicMetrics$0(ClientEndpointManagerImpl.java:153)
        at java.util.concurrent.ConcurrentHashMap.forEach(ConcurrentHashMap.java:1597)
        at com.hazelcast.client.impl.ClientEndpointManagerImpl.provideDynamicMetrics(ClientEndpointManagerImpl.java:153)
        at com.hazelcast.internal.metrics.impl.MetricsCollectionCycle.collectDynamicMetrics(MetricsCollectionCycle.java:88)
        at com.hazelcast.internal.metrics.impl.MetricsRegistryImpl.collect(MetricsRegistryImpl.java:316)
        at com.hazelcast.internal.metrics.impl.MetricsService.collectMetrics(MetricsService.java:160)
        at com.hazelcast.internal.metrics.impl.MetricsService.collectMetrics(MetricsService.java:154)
        at com.hazelcast.spi.impl.executionservice.impl.DelegateAndSkipOnConcurrentExecutionDecorator$DelegateDecorator.run(DelegateAndSkipOnConcurrentExecutionDecorator.java:77)
        at com.hazelcast.internal.util.executor.CachedExecutorServiceDelegate$Worker.run(CachedExecutorServiceDelegate.java:217)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)
```
