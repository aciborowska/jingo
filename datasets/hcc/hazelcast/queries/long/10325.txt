Hi,  
we have Hazelcast v3.8 cluster with around 80 nodes distributed over 4 servers (2x24,2x16)
Usually the cluster breaks down during server-by-server apps redeployment and recovers after a while.

When we analyzed our last heap dump (~97% full), we found ~66k messages of `com.hazelcast.internal.cluster.impl.SplitBrainJoinMessage` allocated in 616MB. That's a lot.

Each message occupied 9kB and most of the message (8KB) consists of `memberAddresses ArrayList<com.hazelcast.nio.Address>` of 80 items (=number of nodes).

Those messages cannot even be GarbageCollected because of a reference from thread `com.hazelcast.internal.partition.impl.MigrationThread`.

We also noticed this behavior without server restart. After 26h server uptime there were 18k SplitBrainJoinMessages taking 167MB on heap. No restart was done, only some heavy tests and there are no Hazelcast errors in logs other than "MonitorInvocationsTask/BroadcastOperationControlTask delayed" right before heap dump creation.

What can we do to somehow debug this, or cleanup those messages from heap?
If you need more information please let me know.

Thanks in advance.
Regards

Stanislav

Environment:
Hazelcast 3.8
Cluster of 80 members
0 clients, each web application acts as a cluster member.
JDK7u75
hazelcast JVM related params: -Djava.net.preferIPv4Stack=true -DscMulticastAddress=231.12.21.132 -DscMulticastPort=50000 -DscIpTtl=1
OS: Oracle Linux 6.1