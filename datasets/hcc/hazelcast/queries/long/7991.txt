If you setup an interceptor to change the data being inserted the entry listeners are still firing with the old value. 

Test case:

In the program below one would expect that the listener will print "foo" instead of "bar"

```
package playground;

import com.hazelcast.config.Config;
import com.hazelcast.config.EntryListenerConfig;
import com.hazelcast.config.MapConfig;
import com.hazelcast.core.*;
import com.hazelcast.map.MapInterceptor;

public class InterceptorBug {

    public static final String MAP = "map";

    public static void main(String[] args) {
        Config config = new Config();
        MapConfig mapConfig = config.getMapConfig(MAP);
        mapConfig.addEntryListenerConfig(new EntryListenerConfig("playground.InterceptorBug$Listener", true, true));
        HazelcastInstance hazelcastInstance = Hazelcast.newHazelcastInstance(config);
        IMap<String, String> map = hazelcastInstance.getMap(MAP);
        map.addInterceptor(new Interceptor());
        map.put("1", "bar");
    }

    public static class Listener extends EntryAdapter<String, String> {
        @Override
        public void entryAdded(EntryEvent<String, String> event) {
            String value = event.getValue();
            System.out.println(value);
        }
    }

    public static class Interceptor implements MapInterceptor {
        public Object interceptGet(Object value) {
            return value;
        }

        public void afterGet(Object value) {

        }

        public Object interceptPut(Object oldValue, Object newValue) {
            return "foo";
        }

        public void afterPut(Object value) {

        }

        public Object interceptRemove(Object removedValue) {
            return null;
        }

        public void afterRemove(Object value) {

        }
    }


}

```
