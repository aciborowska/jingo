## **I am facing an issue during integration Hazelcast with weblogic 12c. Do i have to change any configuration?**

com.hazelcast.instance.NodeExtension
com.hazelcast.instance.DefaultNodeExtension

**## Step 1: [setDomainEnv.cmd] i have added the path for**

SET CLASSPATH=%CLASSPATH%E:lib\hazelcast-all-3.7.1.jar;

**## Step 2:  I have written a sample start-up class for weblogic server** 
public class HCServer {
	public HCServer() {
		HazelcastInstance hz = Hazelcast.newHazelcastInstance();
	}
	public static void main(String[] args) {
		try {
			Class.forName("server.HCServer").newInstance();
			Set<HazelcastInstance> set = Hazelcast.getAllHazelcastInstances();
			for (HazelcastInstance hcInstance : set) {
				IMap<String, HCTask> iMap = hcInstance.getMap("data");
				for (int i = 0; i < 5000; i++) {
					iMap.put(String.valueOf(i), new HCTask(i));
				}
			}
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}
}

**## Following error occurs on starting the server**

<Nov 22, 2016, 4:07:44,922 PM PKT> <Notice> <Log Management> <BEA-170027> <The server has successfully established a connection with the Domain level Diagnostic Service.>
Nov 22, 2016 4:07:45 PM com.hazelcast.config.XmlConfigLocator
INFO: Loading 'hazelcast-default.xml' from classpath.
Nov 22, 2016 4:07:46 PM com.hazelcast.instance.DefaultAddressPicker
INFO: [LOCAL] [dev] [3.7.1] Prefer IPv4 stack is true.
Nov 22, 2016 4:07:46 PM com.hazelcast.instance.DefaultAddressPicker
INFO: [LOCAL] [dev] [3.7.1] Picked [192.168.0.37]:5701, using socket ServerSocket[addr=/0:0:0:0:0:0:0:0,localport=5701], bind any local is true
Nov 22, 2016 4:07:47 PM com.hazelcast.instance.NodeExtensionFactory
WARNING: DefaultNodeExtension class has been loaded by two different class-loaders. Are you running Hazelcast in an OSGi environment? If so, set the bundle class-loader in the Config using the setClassloader() method
<Nov 22, 2016, 4:07:47,256 PM PKT> <Warning> <com.hazelcast.instance.NodeExtensionFactory> <BEA-000000> <DefaultNodeExtension class has been loaded by two different class-loaders. Are you running Hazelcast in an OSGi environment? If so, set the bundl
e class-loader in the Config using the setClassloader() method>
**com.hazelcast.core.HazelcastException: java.lang.NoSuchMethodException: com.hazelcast.instance.DefaultNodeExtension.<init>(com.hazelcast.instance.Node)**
        at com.hazelcast.util.ExceptionUtil.peel(ExceptionUtil.java:73)
        at com.hazelcast.util.ExceptionUtil.peel(ExceptionUtil.java:52)
        at com.hazelcast.util.ExceptionUtil.rethrow(ExceptionUtil.java:83)
        at com.hazelcast.instance.NodeExtensionFactory.create(NodeExtensionFactory.java:54)
        at com.hazelcast.instance.DefaultNodeContext.createNodeExtension(DefaultNodeContext.java:35)
        at com.hazelcast.instance.Node.createNodeExtension(Node.java:290)
        at com.hazelcast.instance.Node.<init>(Node.java:177)
        at com.hazelcast.instance.HazelcastInstanceImpl.createNode(HazelcastInstanceImpl.java:155)
        at com.hazelcast.instance.HazelcastInstanceImpl.<init>(HazelcastInstanceImpl.java:126)
        at com.hazelcast.instance.HazelcastInstanceFactory.constructHazelcastInstance
(HazelcastInstanceFactory.java:218)
        at com.hazelcast.instance.HazelcastInstanceFactory.newHazelcastInstance
(HazelcastInstanceFactory.java:176)
        at com.hazelcast.instance.HazelcastInstanceFactory.newHazelcastInstance
(HazelcastInstanceFactory.java:126)
        at com.hazelcast.core.Hazelcast.newHazelcastInstance(Hazelcast.java:87)
        at server.HCServer.<init>(HCServer.java:13)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance
(DelegatingConstructorAccessorImpl.java:45)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:422)
        at java.lang.Class.newInstance(Class.java:442)
        at server.HCServer.main(HCServer.java:18)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:497)