Our stabilizer Final profile, XLarge cluster size, test suite, for Hz 3.2.5, Failed 
after Aprox: Running 00d 10h 25m 

```
WARN  08:31:02 Failure #1  client:10.63.151.203 Worker exception[com.hazelcast.core.OperationTimeoutException: No response for 120000 ms. Aborting invocation! InvocationFuture{invocation=BasicInvocation{ serviceName='hz:impl:mapService', op=TxnLockAndGetOperation{timeout=120000, thread=76}, partitionId=215, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Address[10.237.180.39]:5701}, done=false} No response has been send  backups-expected: 0 backups-completed: 0 reinvocations: 0]
```

```
Failure[
   message='Worked ran into an unhandled exception'
   type='Worker exception'
   agentAddress=10.63.151.203
   time=Thu Aug 07 08:31:02 UTC 2014
   workerAddress=client:10.63.151.203
   workerId=worker-10.63.151.203-3-client
   test=TestCase{
          id=MapTransactionTest
        , class=com.hazelcast.stabilizer.tests.map.MapTransactionTest
        , basename=MapTransactionTest
        , keyCount=1000
        , threadCount=3
    }
   cause=com.hazelcast.core.OperationTimeoutException: No response for 120000 ms. Aborting invocation! InvocationFuture{invocation=BasicInvocation{ serviceName='hz:impl:mapService', op=TxnLockAndGetOper
ation{timeout=120000, thread=76}, partitionId=215, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Address[10.237.180.39]:5701}, done=false} No response has be
en send  backups-expected: 0 backups-completed: 0 reinvocations: 0
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.newOperationTimeoutException(BasicInvocation.java:782)
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.waitForResponse(BasicInvocation.java:760)
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.get(BasicInvocation.java:697)
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.get(BasicInvocation.java:676)
    at com.hazelcast.map.tx.TransactionalMapProxySupport.lockAndGet(TransactionalMapProxySupport.java:207)
    at com.hazelcast.map.tx.TransactionalMapProxySupport.getForUpdateInternal(TransactionalMapProxySupport.java:106)
    at com.hazelcast.map.tx.TransactionalMapProxy.getForUpdate(TransactionalMapProxy.java:90)
    at com.hazelcast.map.client.AbstractTxnMapRequest.innerCall(AbstractTxnMapRequest.java:96)
    at com.hazelcast.client.txn.BaseTransactionRequest.call(BaseTransactionRequest.java:40)
    at com.hazelcast.client.CallableClientRequest.process(CallableClientRequest.java:27)
    at com.hazelcast.client.ClientEngineImpl$ClientPacketProcessor.processRequest(ClientEngineImpl.java:499)
    at com.hazelcast.client.ClientEngineImpl$ClientPacketProcessor.run(ClientEngineImpl.java:446)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
    at com.hazelcast.util.executor.PoolExecutorThreadFactory$ManagedThread.run(PoolExecutorThreadFactory.java:59)
    at ------ End remote and begin local stack-trace ------.(Unknown Source)
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.resolveResponse(BasicInvocation.java:862)
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.resolveResponseOrThrowException(BasicInvocation.java:795)
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.get(BasicInvocation.java:698)
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.get(BasicInvocation.java:676)
    at com.hazelcast.map.tx.TransactionalMapProxySupport.lockAndGet(TransactionalMapProxySupport.java:207)
    at com.hazelcast.map.tx.TransactionalMapProxySupport.getForUpdateInternal(TransactionalMapProxySupport.java:106)
    at com.hazelcast.map.tx.TransactionalMapProxy.getForUpdate(TransactionalMapProxy.java:90)
    at com.hazelcast.map.client.AbstractTxnMapRequest.innerCall(AbstractTxnMapRequest.java:96)
    at com.hazelcast.client.txn.BaseTransactionRequest.call(BaseTransactionRequest.java:40)
    at com.hazelcast.client.CallableClientRequest.process(CallableClientRequest.java:27)
    at com.hazelcast.client.ClientEngineImpl$ClientPacketProcessor.processRequest(ClientEngineImpl.java:499)
    at com.hazelcast.client.ClientEngineImpl$ClientPacketProcessor.run(ClientEngineImpl.java:446)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
    at com.hazelcast.util.executor.PoolExecutorThreadFactory$ManagedThread.run(PoolExecutorThreadFactory.java:59)
    at ------ End remote and begin local stack-trace ------.(Unknown Source)
    at com.hazelcast.client.spi.impl.ClientCallFuture.resolveResponse(ClientCallFuture.java:160)
    at com.hazelcast.client.spi.impl.ClientCallFuture.get(ClientCallFuture.java:109)
    at com.hazelcast.client.spi.impl.ClientCallFuture.get(ClientCallFuture.java:90)
    at com.hazelcast.client.txn.proxy.ClientTxnProxy.invoke(ClientTxnProxy.java:54)
    at com.hazelcast.client.txn.proxy.ClientTxnMapProxy.getForUpdate(ClientTxnMapProxy.java:55)
    at com.hazelcast.stabilizer.tests.map.MapTransactionTest$Worker$1.execute(MapTransactionTest.java:124)
    at com.hazelcast.client.txn.ClientTransactionManager.executeTransaction(ClientTransactionManager.java:80)
    at com.hazelcast.client.txn.ClientTransactionManager.executeTransaction(ClientTransactionManager.java:73)
    at com.hazelcast.client.HazelcastClient.executeTransaction(HazelcastClient.java:299)
    at com.hazelcast.client.HazelcastClientProxy.executeTransaction(HazelcastClientProxy.java:135)
    at com.hazelcast.stabilizer.tests.map.MapTransactionTest$Worker.run(MapTransactionTest.java:120)
    at java.lang.Thread.run(Thread.java:745)
    at com.hazelcast.stabilizer.tests.utils.ThreadSpawner$DefaultThread.run(ThreadSpawner.java:88)

]
```

Interesting it was the  MapTransactionTest,  that hit the OperationTimeoutException, in this run and
https://github.com/hazelcast/hazelcast/issues/3206 run.

could MapTransactionTest be use full in tracking down the OperationTimeoutException ?

other verification AssertionErrors are found,  but are not the root cause, and can be ignored
same arguments apply, see https://github.com/hazelcast/hazelcast/issues/3206
