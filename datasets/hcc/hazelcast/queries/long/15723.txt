See the JSON object at the bottom. It is the value object of an IMap entry. 

The following query works as expected on this JSON object: 

```java
jsonMap.values(entryObject.get("list[any].secondLevelItem.thirdLevelItem").equal("123"));
```

123 is the value of the first item in the list. So, it finds it correctly. 
However the following query does not return anything: 

```
jsonMap.values(entryObject.get("list[any].secondLevelItem.thirdLevelItem").equal("125"));
```

The query works only for the first item and the rest is skipped. 
The root cause seems to be this line: [parser.skipChildren();](https://github.com/hazelcast/hazelcast/blob/7815ff8a52642ac38b2e75aeaa6c77827f38085c/hazelcast/src/main/java/com/hazelcast/query/impl/getters/AbstractJsonGetter.java#L227)
 
This method ([findAttribute](https://github.com/hazelcast/hazelcast/blob/7815ff8a52642ac38b2e75aeaa6c77827f38085c/hazelcast/src/main/java/com/hazelcast/query/impl/getters/AbstractJsonGetter.java#L212)) is called from two different places: 

* [getValue](https://github.com/hazelcast/hazelcast/blob/7815ff8a52642ac38b2e75aeaa6c77827f38085c/hazelcast/src/main/java/com/hazelcast/query/impl/getters/AbstractJsonGetter.java#L107)

* [getMultiValue](https://github.com/hazelcast/hazelcast/blob/7815ff8a52642ac38b2e75aeaa6c77827f38085c/hazelcast/src/main/java/com/hazelcast/query/impl/getters/AbstractJsonGetter.java#L248)

When calling from getMultiValue, it should not execute the line [parser.skipChildren();](https://github.com/hazelcast/hazelcast/blob/7815ff8a52642ac38b2e75aeaa6c77827f38085c/hazelcast/src/main/java/com/hazelcast/query/impl/getters/AbstractJsonGetter.java#L227)

Otherwise, only the first item can be queried and the rest of the items are skipped. 

Example JSON: 

```json
{
  "list": [
    {
      "secondLevelItem": {
        "thirdLevelItem": "123"
      }
    },
    {
      "secondLevelItem": {
        "thirdLevelItem": "124"
      }
    },
    {
      "secondLevelItem": {
        "thirdLevelItem": "125"
      }
    }
  ]
}
```