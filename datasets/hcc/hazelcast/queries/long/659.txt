We upgraded from Hazelcast 2.6 to 3.0 this week and I discovered that the ManagedContext is not being applied to the Local member when submitting a task to all members.

It would appear that previous behaviour was to serialize the task and then upon deserialization it would be passed to the ManagedContext and the Spring dependencies would be auto-wired?
Now it appears that an optimisation has been put in place that avoids this serialization for the local node?

The end result is that the task is autowired on remote members and works as expected, but the local node failed because the autowired dependencies are not processed.

Therefore it appears that the example provided in the documentation will no longer work because the Task is not being serialized / deserialized on the local member.

See below the new SomeTask() would have worked under Hazelcast 2.6, but appears to no longer work as expected in 3.0.

We have a lot of cluster wide tasks that we just want to fire off a simple Task object, its a lot more work to mess around with Spring Context to get an Autowired bean just so it can work on the local member.

Please refer to:
https://groups.google.com/forum/#!topic/hazelcast/j55NivbOc5I
