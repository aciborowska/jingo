We're running in a 2 node client-server configuration running 3.2.5

After one of the nodes got disconnected and reconnected, during the merge operation we are getting thousands of the following severe exceptions:

```
» 17:00:50.703 SEVERE: [SERVER1]:5701 [dev] [3.2.5] java.lang.ClassNotFoundException: com.our.class.name
» 17:00:50.703 com.hazelcast.nio.serialization.HazelcastSerializationException: java.lang.ClassNotFoundException: com.datorama.core.model.admin.UiJob
» 17:00:50.703 at com.hazelcast.nio.serialization.DefaultSerializers$ObjectSerializer.read(DefaultSerializers.java:190)
» 17:00:50.703 at com.hazelcast.nio.serialization.StreamSerializerAdapter.read(StreamSerializerAdapter.java:59)
» 17:00:50.703 at com.hazelcast.nio.serialization.SerializationServiceImpl.toObject(SerializationServiceImpl.java:221)
» 17:00:50.703 at com.hazelcast.spi.impl.NodeEngineImpl.toObject(NodeEngineImpl.java:156)
» 17:00:50.703 at com.hazelcast.map.MapService.toObject(MapService.java:867)
» 17:00:50.703 at com.hazelcast.map.operation.MergeOperation.run(MergeOperation.java:49)
» 17:00:50.703 at com.hazelcast.spi.impl.BasicOperationService.processOperation(BasicOperationService.java:363)
» 17:00:50.703 at com.hazelcast.spi.impl.BasicOperationService.access$300(BasicOperationService.java:102)
» 17:00:50.703 at com.hazelcast.spi.impl.BasicOperationService$BasicOperationProcessorImpl.process(BasicOperationService.java:764)
» 17:00:50.703 at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.process(BasicOperationScheduler.java:288)
» 17:00:50.703 at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.doRun(BasicOperationScheduler.java:282)
» 17:00:50.703 at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.run(BasicOperationScheduler.java:257)
» 17:00:50.703 Caused by: java.lang.ClassNotFoundException: com.our.class.name
» 17:00:50.703 at java.net.URLClassLoader$1.run(URLClassLoader.java:366)
» 17:00:50.703 at java.net.URLClassLoader$1.run(URLClassLoader.java:355)
» 17:00:50.703 at java.security.AccessController.doPrivileged(Native Method)
» 17:00:50.703 at java.net.URLClassLoader.findClass(URLClassLoader.java:354)
» 17:00:50.703 at java.lang.ClassLoader.loadClass(ClassLoader.java:425)
» 17:00:50.703 at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:308)
» 17:00:50.703 at java.lang.ClassLoader.loadClass(ClassLoader.java:358)
» 17:00:50.703 at com.hazelcast.nio.ClassLoaderUtil.tryLoadClass(ClassLoaderUtil.java:123)
» 17:00:50.703 at com.hazelcast.nio.ClassLoaderUtil.loadClass(ClassLoaderUtil.java:112)
» 17:00:50.703 at com.hazelcast.nio.IOUtil$1.resolveClass(IOUtil.java:89)
» 17:00:50.703 at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1612)
» 17:00:50.703 at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1517)
» 17:00:50.703 at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1771)
» 17:00:50.703 at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1350)
» 17:00:50.703 at java.io.ObjectInputStream.readObject(ObjectInputStream.java:370)
» 17:00:50.703 at com.hazelcast.nio.serialization.DefaultSerializers$ObjectSerializer.read(DefaultSerializers.java:185)
» 17:00:50.703 ... 11 more
» 17:00:50.703 Sep 30, 2014 2:00:57 PM com.hazelcast.map.operation.MergeOperation
```

We're not sure why the merge operation would need to serialize/deserialize our objects.
