We have a 3 node cluster running 3.2.4 that gets into a bad state daily for several minutes, and then is able to recover and run ok. When this occurs, we see Node 2 and 3 report repeated timeouts trying to invoke LockOperations on Node 1. So many timeouts that it fills up our logs. The call that is hung up is a tryLock(key, 15, TimeUnit.SECONDS) on a Map entry. Specifically: 

```
tryLock(Object, long, TimeUnit)
    tryLock(NodeEngine, Data, long, TimeUnit)
        get()
            get(long, TimeUnit)
                waitForResponse(long, TimeUnit)
                    wait(long)
```

So far I have been unable to reproduce it out side of that environment. I set up a test where a thread gets a lock on Node 1 and holds it for 15 minutes, and then another thread attempts a tryLock(key, 5, TimeUnit.MINUTES) on Node 2. In my test, I see the request properly aborted after 5 minutes and the hazelcast logs show Call timeout messages spaced 1 minute apart:

```
09-22 12:49:28,518 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.52]:5706 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@7a31430a, partitionId=140, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Address[XXX.XXX.XXX.54]:5706} 
09-22 12:50:28,524 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.52]:5706 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@7a31430a, partitionId=140, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Address[XXX.XXX.XXX.54]:5706} 
09-22 12:51:28,532 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.52]:5706 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@7a31430a, partitionId=140, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Address[XXX.XXX.XXX.54]:5706}
09-22 12:52:28,540 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.52]:5706 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@7a31430a, partitionId=140, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Address[XXX.XXX.XXX.54]:5706}            
```

This looks good, as it coincides with the config property "hazelcast.operation.call.timeout.millis" which is set to the default of 60000.

In the cluster with the issue, we have threads processing  user requests by obtaining a lock, doing some work and then releasing the lock. The user may an additional request while the first request is still processing, so the second request calls tryLock(key, 15, TimeUnit.SECONDS)). When the second request comes in, we see our logs fill up with repeated timeouts only about 70ms apart:

```
09-21 11:47:48,091 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:48,159 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:48,228 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:49,270 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:49,347 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:49,426 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:49,510 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:49,581 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:49,651 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:49,721 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:49,799 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:50,337 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:50,419 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:50,491 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:50,563 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:50,634 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:50,710 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:50,793 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:50,872 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
09-21 11:47:50,998 DEBUG [com.hazelcast.spi.impl.BasicInvocation] - [XXX.XXX.XXX.166]:5711 [ec-cluster] [3.2.4] Call timed-out during wait-notify phase, retrying call: BasicInvocation{ serviceName='hz:impl:lockService', op=com.hazelcast.concurrent.lock.operations.LockOperation@5d036d50, partitionId=221, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=15000, target=Address[XXX.XXX.XXX.165]:5711}
... and on and on....
```

I wouldn't expect to see any timeouts since the tryLock timeout is set to a number less than what is configured for hazelcast.operation.call.timeout.millis (60000ms).  

It seems like there is some issue with the fact that Hazelcast is not waiting long enough for the result of the LockOperation to complete. 
