3.3-RC4-SNAPSHOT git log -1 --format="%H" 8c8fc7ec51a485a1b6a208b87065f60da652d48c

2 ec2 instances
2 members
2 clients
3m duration

txnCon.class=com.hazelcast.stabilizer.tests.map.MapTransactionContextTest
txnCon.basename=txnCon
txnCon.threadCount=3
txnCon.keyCount=1000

Same test as for https://github.com/hazelcast/hazelcast/issues/3195,  just Diffrent exceptions

3 worker client instances Hit this Serialization Exception

```
Failure[
   message='Worked ran into an unhandled exception'
   type='Worker exception'
   agentAddress=10.183.40.66
   time=Thu Aug 07 14:04:53 UTC 2014
   workerAddress=client:10.183.40.66
   workerId=worker-10.183.40.66-2-client
   test=TestCase{
          id=txnCon
        , class=com.hazelcast.stabilizer.tests.map.MapTransactionContextTest
        , basename=txnCon
        , keyCount=1000
        , threadCount=3
    }
   cause=com.hazelcast.nio.serialization.HazelcastSerializationException: java.io.NotSerializableException: com.hazelcast.instance.MemberImpl
    at com.hazelcast.nio.serialization.SerializationServiceImpl.handleException(SerializationServiceImpl.java:354)
    at com.hazelcast.nio.serialization.SerializationServiceImpl.toData(SerializationServiceImpl.java:228)
    at com.hazelcast.nio.serialization.SerializationServiceImpl.toData(SerializationServiceImpl.java:200)
    at com.hazelcast.client.ClientEngineImpl.sendResponse(ClientEngineImpl.java:153)
    at com.hazelcast.client.ClientEndpoint.sendResponse(ClientEndpoint.java:254)
    at com.hazelcast.client.CallableClientRequest.process(CallableClientRequest.java:31)
    at com.hazelcast.client.ClientEngineImpl$ClientPacketProcessor.processRequest(ClientEngineImpl.java:391)
    at com.hazelcast.client.ClientEngineImpl$ClientPacketProcessor.run(ClientEngineImpl.java:334)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
    at com.hazelcast.util.executor.PoolExecutorThreadFactory$ManagedThread.run(PoolExecutorThreadFactory.java:59)
    at ------ End remote and begin local stack-trace ------.(Unknown Source)
    at com.hazelcast.client.spi.impl.ClientCallFuture.resolveResponse(ClientCallFuture.java:194)
    at com.hazelcast.client.spi.impl.ClientCallFuture.get(ClientCallFuture.java:136)
    at com.hazelcast.client.spi.impl.ClientCallFuture.get(ClientCallFuture.java:113)
    at com.hazelcast.client.txn.TransactionProxy.invoke(TransactionProxy.java:200)
    at com.hazelcast.client.txn.TransactionProxy.commit(TransactionProxy.java:131)
    at com.hazelcast.client.txn.TransactionContextProxy.commitTransaction(TransactionContextProxy.java:84)
    at com.hazelcast.stabilizer.tests.map.MapTransactionContextTest$Worker.run(MapTransactionContextTest.java:77)
    at java.lang.Thread.run(Thread.java:745)
    at com.hazelcast.stabilizer.tests.utils.ThreadSpawner$DefaultThread.run(ThreadSpawner.java:88)
Caused by: java.io.NotSerializableException: com.hazelcast.instance.MemberImpl
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1183)
    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1547)
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1508)
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1431)
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1177)
    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1547)
    at java.io.ObjectOutputStream.defaultWriteObject(ObjectOutputStream.java:440)
    at java.lang.Throwable.writeObject(Throwable.java:985)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:988)
    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1495)
    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1431)
    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1177)
    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:347)
    at com.hazelcast.nio.serialization.DefaultSerializers$ObjectSerializer.write(DefaultSerializers.java:216)
    at com.hazelcast.nio.serialization.StreamSerializerAdapter.write(StreamSerializerAdapter.java:52)
    at com.hazelcast.nio.serialization.SerializationServiceImpl.toData(SerializationServiceImpl.java:219)
    at com.hazelcast.nio.serialization.SerializationServiceImpl.toData(SerializationServiceImpl.java:200)
    at com.hazelcast.client.ClientEngineImpl.sendResponse(ClientEngineImpl.java:153)
    at com.hazelcast.client.ClientEndpoint.sendResponse(ClientEndpoint.java:254)
    at com.hazelcast.client.CallableClientRequest.process(CallableClientRequest.java:31)
    at com.hazelcast.client.ClientEngineImpl$ClientPacketProcessor.processRequest(ClientEngineImpl.java:391)
    at com.hazelcast.client.ClientEngineImpl$ClientPacketProcessor.run(ClientEngineImpl.java:334)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
    at com.hazelcast.util.executor.PoolExecutorThreadFactory$ManagedThread.run(PoolExecutorThreadFactory.java:59)
]
```

1 client worker thread hit, the Nested transactions are not allowed

```
Failure[
   message='Worked ran into an unhandled exception'
   type='Worker exception'
   agentAddress=10.237.178.186
   time=Thu Aug 07 14:04:49 UTC 2014
   workerAddress=client:10.237.178.186
   workerId=worker-10.237.178.186-2-client
   test=TestCase{
          id=txnCon
        , class=com.hazelcast.stabilizer.tests.map.MapTransactionContextTest
        , basename=txnCon
        , keyCount=1000
        , threadCount=3
    }
   cause=java.lang.IllegalStateException: Nested transactions are not allowed!
    at com.hazelcast.client.txn.TransactionProxy.begin(TransactionProxy.java:93)
    at com.hazelcast.client.txn.TransactionContextProxy.beginTransaction(TransactionContextProxy.java:80)
    at com.hazelcast.stabilizer.tests.map.MapTransactionContextTest$Worker.run(MapTransactionContextTest.java:68)
    at java.lang.Thread.run(Thread.java:745)
    at com.hazelcast.stabilizer.tests.utils.ThreadSpawner$DefaultThread.run(ThreadSpawner.java:88)
]
```

worker standard out,  we can see 2 client worker thread did not hit exceptions,
"TxnCounter{committed=11381, rolled=0} from 2 workers"

```
find . -name "out.log" | xargs -I % sh -c 'echo %; cat %; echo"" '
./workers/1407420188737/worker-10.183.40.66-3-server/out.log

./workers/1407420188737/worker-10.183.40.66-2-client/out.log
txnCon: com.hazelcast.spi.exception.TargetDisconnectedException: Target[Address[10.237.178.186]:5701] disconnected.
txnCon: com.hazelcast.spi.exception.TargetDisconnectedException: Target[Address[10.237.178.186]:5701] disconnected.

./workers/1407420188737/worker-10.237.178.186-2-client/out.log
txnCon: com.hazelcast.core.HazelcastInstanceNotActiveException: Hazelcast instance is not active!

./workers/1407420188737/worker-10.183.40.66-1-server/out.log
txnCon: TxnCounter{committed=11381, rolled=0} from 2 workers
txnCon: received increments from 2 workers

./workers/1407420188737/worker-10.237.178.186-1-server/out.log
```
