If more then one threads invoke getLocalMapStats() on the same IMap, then we have a concurrent modification of some fields of one instance of LocalMapStatsImpl object.

call sequence pseudo code is:

``` java
IMapProxyImpl(MapProxySupport).getLocalMapStats();
LocalMapStatsProvider.createLocalMapStats(String mapName) {

    final LocalMapStatsImpl localMapStats = getLocalMapStatsImpl(mapName) {
        return ConcurrencyUtil.getOrPutIfAbsent(statsMap, name, constructorFunction);
    }

    localMapStats.init() {
        ownedEntryCount = 0;
        backupEntryCount = 0;
        ownedEntryMemoryCost = 0;
        backupEntryMemoryCost = 0;
        heapCost = 0;
        lockedEntryCount = 0;
        dirtyEntryCount = 0;
        backupCount = 0;
        hits = 0;
    }    

    addOwnerPartitionStats(localMapStats, mapName, partitionId) {
        localMapStats.incrementOwnedEntryMemoryCost(ownedEntryMemoryCost);
        localMapStats.incrementLockedEntryCount(lockedEntryCount);
        localMapStats.incrementHits(hits);
        localMapStats.incrementDirtyEntryCount(recordStore.getMapDataStore().notFinishedOperationsCount());
        localMapStats.incrementHeapCost(recordStore.getHeapCost());
        localMapStats.incrementOwnedEntryCount(recordStore.size());
    }
}
```
