Environment:
hazelcast v2.3.1 (hazelcast-all-2.3.1.jar)
groboutils v5 (groboutils-5-core.jar)

When multiple threads access an IMap (through a single client), the map behaves erroneously when configured with a map-store.

Without the map-store, tryLockAndGet are synchronized so that only one thread is given the lock on a given key at any time. But with a map-store enabled, tryLockAndGet gives the lock on a given key to multiple threads simultaneously.

Earlier documentations (http://www.hazelcast.com/docs/1.9.4/manual/multi_html/ch15.html#InternalsThreads) stated that there is no need to synchronize  access to maps, queues, etc. But this paragraph is taken out in the later documentation versions. Is the 1.9.4 documentation on synchronized access still valid?

I'll attach a test-case that shows the map-store problem.
