Hi,

We're seeing an increasing amount of stuck hazelcast threads in weblogic; in a clustered environment,
but also when running single instance. We see about 3 stuck threads per hour in a low load scenario. 

Wev'e recently upgraded to hazelcast 2.0.1. We have never seen this problem in 1.9.3.
Baseline:
weblogic: 10.3.3.0
hazelcast: 2.0.1

See below: example of one stuck thread stacktrace (12 hour thread dump available).

br,
/Sander.
# 

"[STUCK] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'" id=21 idx=0x7c tid=6839 prio=1 alive, parked, native_blocked, daemon
at jrockit/vm/Locks.park0(J)V(Native Method)
at jrockit/vm/Locks.park(Locks.java:2230)[optimized]
at jrockit/proxy/sun/misc/Unsafe.park(Unsafe.java:616)[inlined]
at java/util/concurrent/locks/LockSupport.parkNanos(LockSupport.java:196)[inlined]
at java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2116)[optimized]
at com/hazelcast/util/ResponseQueueFactory$LockBasedResponseQueue.poll(ResponseQueueFactory.java:63)[optimized]
at com/hazelcast/impl/BaseManager$ResponseQueueCall.waitAndGetResult(BaseManager.java:543)[inlined]
at com/hazelcast/impl/BaseManager$ResponseQueueCall.getRedoAwareResult(BaseManager.java:572)[optimized]
at com/hazelcast/impl/BaseManager$ResponseQueueCall.getResult(BaseManager.java:567)[inlined]
at com/hazelcast/impl/BaseManager$RequestBasedCall.getResultAsBoolean(BaseManager.java:399)[inlined]
at com/hazelcast/impl/BaseManager$ResponseQueueCall.getResultAsBoolean(BaseManager.java:503)[inlined]
at com/hazelcast/impl/BaseManager$RequestBasedCall.booleanCall(BaseManager.java:384)[inlined]
at com/hazelcast/impl/BaseManager$ResponseQueueCall.booleanCall(BaseManager.java:503)[inlined]
at com/hazelcast/impl/ConcurrentMapManager$MRemoveMulti.remove(ConcurrentMapManager.java:1801)[inlined]
at com/hazelcast/impl/MProxyImpl$MProxyReal.removeMulti(MProxyImpl.java:805)[optimized]
at sun/reflect/GeneratedMethodAccessor366.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(Unknown Source)[optimized]
at sun/reflect/DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)[optimized]
at java/lang/reflect/Method.invoke(Method.java:597)[inlined]
at com/hazelcast/impl/MProxyImpl$DynamicInvoker.invoke(MProxyImpl.java:65)[optimized]
at $Proxy69.removeMulti(Ljava/lang/Object;Ljava/lang/Object;)Z(Unknown Source)
at com/hazelcast/impl/MProxyImpl.removeMulti(MProxyImpl.java:458)
at com/hazelcast/impl/MultiMapProxyImpl$MultiMapReal.remove(MultiMapProxyImpl.java:263)
at com/hazelcast/impl/MultiMapProxyImpl.remove(MultiMapProxyImpl.java:109)[optimized]
at com/ericsson/ngin/session/ra/hazelcast/HazelcastSessionProvider.removeRoute(HazelcastSessionProvider.java:576)[optimized]
at com/ericsson/ngin/session/ra/hazelcast/HazelcastSessionProvider.removeSubscription(HazelcastSessionProvider.java:198)
at com/ericsson/ngin/session/ra/local/SessionImpl.unsubscribeMonologue(SessionImpl.java:127)[inlined]
at com/ericsson/ngin/session/ra/local/LocalSessionProvider.dispatchEvent(LocalSessionProvider.java:760)[optimized]
at com/ericsson/ngin/session/ra/local/LocalSessionProvider.dispatchEvent(LocalSessionProvider.java:554)[inlined]
at com/ericsson/ngin/session/ra/local/LocalSessionProvider$EventHandler.run(LocalSessionProvider.java:1034)[optimized]
at com/ericsson/ngin/session/ra/boilerplate/ResourceAdapterImpl$WorkAdapter.run(ResourceAdapterImpl.java:624)[optimized]
at weblogic/connector/security/layer/WorkImpl.runIt(WorkImpl.java:108)[inlined]
at weblogic/connector/security/layer/WorkImpl.run(WorkImpl.java:44)[optimized]
at weblogic/connector/work/WorkRequest.run(WorkRequest.java:95)[optimized]
at weblogic/work/SelfTuningWorkManagerImpl$WorkAdapterImpl.run(SelfTuningWorkManagerImpl.java:528)[optimized]
at weblogic/work/ExecuteThread.execute(ExecuteThread.java:201)[optimized]
at weblogic/work/ExecuteThread.run(ExecuteThread.java:173)
at jrockit/vm/RNI.c2java(JJJJJ)V(Native Method)
-- end of trace=======
