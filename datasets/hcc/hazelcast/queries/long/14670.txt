#### Configuration:
```
MapConfig mapConfig= ...;
mapConfig.setPartitioningStrategyConfig(new PartitioningStrategyConfig(new MyPartitioningStrategy()));
MapStoreConfig mapStoreConfig = mapConfig.getMapStoreConfig();
mapStoreConfig.setEnabled(true);
mapStoreConfig.setImplementation(...);
```

#### Action
```
IMap<K,V> map = ...
K key = ...; V value = ...;
map.put(key, value);
map.get(key);
```

#### Exception:
> java.lang.IllegalStateException: MapLoader loaded an item belongs to a different partition
> 	at com.hazelcast.map.impl.recordstore.DefaultRecordStore.isKeyAndValueLoadable(DefaultRecordStore.java:968)
> 	at com.hazelcast.map.impl.recordstore.DefaultRecordStore.putFromLoadInternal(DefaultRecordStore.java:898)
> 	at com.hazelcast.map.impl.recordstore.DefaultRecordStore.putFromLoad(DefaultRecordStore.java:889)
> 	at com.hazelcast.map.impl.operation.PutFromLoadAllOperation.run(PutFromLoadAllOperation.java:71)
> 	at com.hazelcast.spi.Operation.call(Operation.java:170)
> 	at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:208)
> 	at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:197)
> 	at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:147)
> 	at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:125)
> 	at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:110)

#### Workaround:
```
System.getProperties().setProperty("hazelcast.partitioning.strategy.class", "my.package.MyPartitioningStrategy")
```

#### Proposed solution:
BasicRecordStoreLoader should use Map's partition strategy, not global.