We started using Hazelcast a couple of months ago. We recently began testing it in our production environments and are now seeing this exception about once a week:

```
2020-02-11 12:10:00,084 com.hazelcast.partition.NoDataMemberInClusterException: Target of invocation cannot be found! Partition owner is null but partitions can't be assigned since all nodes in the cluster are lite members. 
at com.hazelcast.spi.impl.operationservice.impl.PartitionInvocation.newTargetNullException(PartitionInvocation.java:90) 
at com.hazelcast.spi.impl.operationservice.impl.Invocation.initInvocationTarget(Invocation.java:269) 
at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:556) 
at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:534) 
at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:236) 
at com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:59) 
at com.hazelcast.map.impl.proxy.MapProxySupport.invokeOperation(MapProxySupport.java:467) 
at com.hazelcast.map.impl.proxy.MapProxySupport.putInternal(MapProxySupport.java:406) 
at com.hazelcast.map.impl.proxy.MapProxyImpl.put(MapProxyImpl.java:121) 
at com.hazelcast.map.impl.proxy.MapProxyImpl.put(MapProxyImpl.java:111)
```

This is from Hazelcast 4.0 GA released 2/4/20. This also happened to us running 3.12.x versions. We were hoping the exception would go away each time we upgraded to newer versions.

Our setup is very simple. Hazelcast is running on a single server with tons of free memory and Java 8. All we are doing is putting a true/false value into a map that only has a single integer key with a value of zero. Really, this is like the smallest map possible! The server runs fine for many days, but eventually this exception gets thrown from the map.put(0, bool).

Other portions of our code are heavily using Hazelcast's executors. We have had no trouble with that so far.

We configure Hazelcast like so:

```java
config.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(false);
config.getNetworkConfig().getJoin().getAwsConfig().setEnabled(false);
config.getNetworkConfig().getJoin().getTcpIpConfig().setEnabled(true);
config.getNetworkConfig().setPortAutoIncrement(true);
config.getNetworkConfig().setPort(5701);
config.getNetworkConfig().getJoin().getTcpIpConfig().addMember(AppConfig.getConfigSetting("/config/server/ip_address"));

hazelcastInstance = Hazelcast.newHazelcastInstance(config);
```

I can't find any information about this exception other than this: https://docs.hazelcast.org/docs/latest/javadoc/com/hazelcast/partition/NoDataMemberInClusterException.html

It seems that hazelcast is somehow crashing.  We have hazelcast configured to use Log4J at the ERROR level, but only the above exception is logged.