<!--
Thanks for reporting your issue. Please share with us the following information, to help us resolve your issue quickly and efficiently.
-->
  
**Describe the bug**
While trying to compile hazelcast with graalvm native image, we get the [following error](https://github.com/oracle/graal/issues/1508#issuecomment-559941197):

```
Class com.hazelcast.instance.DefaultNodeExtension cannot be instantiated reflectively . It does not have a nullary constructor.
```

The graalvm devs have [narrowed it down to an issue with `DefaultNodeExtension`](https://github.com/oracle/graal/issues/1508#issuecomment-562259645):

> The underlying problem is that com.hazelcast.instance.DefaultNodeExtension *should* provide a nullary constructor because it is registered as a service provider for com.hazelcast.instance.impl.NodeExtension. According to the ServiceLoader documentation The only requirement enforced by this facility is that provider classes must have a zero-argument constructor so that they can be instantiated during loading.

**Expected behavior**

I expect compilation to succeed without resorting to disable `ServiceLoaderFeature`.

**To Reproduce**

Steps to reproduce the behavior: see Dockerfile provided in https://github.com/oracle/graal/issues/1508#issue-470182861
