
I have a test run that results in a OOME hprof,  using 'exceptionProb=0.01'
https://hazelcast-l337.ci.cloudbees.com/view/stable/job/stable-x3/12/console

the GC shows a leak pattern http://54.82.84.143/~jenkins/workspace/stable-x3/3.9-SNAPSHOT/2017_09_18-07_35_38/map-store/gc.html

http://54.82.84.143/~jenkins/workspace/stable-x3/3.9-SNAPSHOT/2017_09_18-07_35_38/map-store/output/HZ/HzClient3HZ/exception.txt

zipped hprof http://54.82.84.143/~jenkins/workspace/stable-x3/3.9-SNAPSHOT/2017_09_18-07_35_38/map-store/output/HZ/HzMember2HZ/

I have MapStore enabled for the above failing test,
If i disable mapStore for the above test, it passes

the config for the map store is http://54.82.84.143/~jenkins/workspace/stable-x3/3.9-SNAPSHOT/2017_09_18-07_35_38/map-store/config-hz/hazelcast.xml  with the name `mapBak1HDStore*` and `mapBak1HDStoreThrough*`

both `mapBak1HDStore*` and `mapBak1HDStoreThrough*` use <class-name>hzcmd.map.store.PersonMapStore</class-name>


looks like the write behind stores are holding up to 882MB of heap
for the `mapBak1HDStore-store`


I see that if we do not throw any exceptions for the MapStore imple,  we do not get this issue.
exceptionProb=0.0
https://github.com/hazelcast/hzCmd-bench/blob/zeta/src/main/java/hzcmd/map/store/PersonMapStore.java#L18


