Javadoc for replicated map says:

```
ReplicatedMap is a map-like data structure with weak consistency and values locally 
stored on every node of the cluster. 

Whenever a value is written asynchronously, the new value will be internally distributed 
to all existing cluster members, and eventually every node will have the new value. 

When a new node joins the cluster, the new node initially will request existing values
from older nodes and replicate them locally.
```

I see several issues with this javadoc:

1. How is this data structure map-like, what makes it not like a map? What exactly is meant by "weak consistency"? It's not specific and very general. Anything that's not strongly consistent could be considered "weak". Instead, it should document exactly what consistency guarantees are provided (for example: monotonic reads, eventual consistency) with a brief explanation.
2. The text "Whenever a value is written asynchronously, the new value will be internally distributed" implies that the put operations are async, but I think what's meant is that the distribution is async.
3. How new values get distributed is implementation detail, we should focus on documenting the contract and also document clearly the consistency guarantees and possibly how it compares to IMap.

Compared to IMap, javadoc is very lacking.