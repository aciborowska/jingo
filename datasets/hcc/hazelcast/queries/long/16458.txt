ZD5849
 
Running a simple application performing sustained `containsKey()` calls against a map shows a performance degradation when at least two members are defined, despite having `near-cache` defined for the map. We suspect the root cause is that `containsKey()` does not honour near cache contents, and reads remotely even if the key is already in the near cache. 

**Expected behavior**
Near cache contents should be honoured. This is the behaviour seen when replacing `containsKey()` with `get()`. 

**To Reproduce**
Start a two member cluster. Preload a map with some values (or keep empty)
Run a tight loop performing `containsKey(key1)` against the same key. Observe performance degradation once second member is started

**Additional context**
This was reproduced with Java 1.8 and Hazelcast 3.12.4 (edited). The call was done from a member. 

Thank you.

