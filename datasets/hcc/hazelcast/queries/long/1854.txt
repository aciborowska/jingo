This is similar to issue 1687.
When executing with executeOnKeys, an entry processor that deletes the entry, the entry is not removed from the backup store, instead it stays but with a null value. Further if the map has indices configured that causes an NPE when trying to update the index (see stack trace below).
Found in 3.2 RC2.

Reproducer available at https://github.com/torkeld/hazelcast-issue-reproducer, tests testExecuteOnKeys and testExecuteOnKeysIndexed in DeleteEntryTest.

SEVERE: [172.16.32.9]:5702 [dev] [3.2-RC2-SNAPSHOT] value cannot be null
java.lang.IllegalArgumentException: value cannot be null
    at com.hazelcast.query.impl.QueryEntry.<init>(QueryEntry.java:41)
    at com.hazelcast.map.DefaultRecordStore.saveIndex(DefaultRecordStore.java:879)
    at com.hazelcast.map.DefaultRecordStore.put(DefaultRecordStore.java:626)
    at com.hazelcast.map.operation.MultipleEntryBackupOperation.run(MultipleEntryBackupOperation.java:51)
    at com.hazelcast.spi.impl.BasicOperationService.processOperation(BasicOperationService.java:364)
    at com.hazelcast.spi.impl.BasicOperationService.runOperation(BasicOperationService.java:231)
    at com.hazelcast.spi.impl.Backup.run(Backup.java:90)
    at com.hazelcast.spi.impl.BasicOperationService.processOperation(BasicOperationService.java:364)
    at com.hazelcast.spi.impl.BasicOperationService.processPacket(BasicOperationService.java:310)
    at com.hazelcast.spi.impl.BasicOperationService.access$900(BasicOperationService.java:107)
    at com.hazelcast.spi.impl.BasicOperationService$BasicOperationProcessorImpl.process(BasicOperationService.java:771)
    at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.process(BasicOperationScheduler.java:266)
    at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.doRun(BasicOperationScheduler.java:260)
    at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.run(BasicOperationScheduler.java:235)
