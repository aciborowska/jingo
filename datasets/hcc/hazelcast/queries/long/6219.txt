I have noticed that you don't restore the interrupted status of the thread in some cases. This is recommended (See http://stackoverflow.com/questions/3976344/handling-interruptedexception-in-java).

One example (from PartitionIterationOperation):

```
 public void run() throws Exception {
        results = new HashMap<Integer, Object>(partitions.size());
        try {
            Map<Integer, ResponseQueue> responses = executeOperations();
            getResults(responses);
        } catch (Exception e) {
            getLogger(getNodeEngine()).severe(e);
        }
    }
```

The `getResults` method throws an InterruptedException, so it should be modified to:

```
 public void run() throws Exception {
        results = new HashMap<Integer, Object>(partitions.size());
        try {
            Map<Integer, ResponseQueue> responses = executeOperations();
            getResults(responses);
        } catch (InterruptedException e) {
             Thread.currentThread().interrupt();
             getLogger(getNodeEngine()).severe(e);
        } catch (Exception e) {
            getLogger(getNodeEngine()).severe(e);
        }
    }
```
