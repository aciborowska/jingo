```
public void testMultipleEntryBackupOperationForNullValue(){
    final HazelcastInstance instance1 = Hazelcast.newHazelcastInstance();
    final HazelcastInstance instance2 = Hazelcast.newHazelcastInstance();

    final IMap<Object, Object> map = instance2.getMap("map");
    Set<Object> keys = new HashSet<Object>();

    for(int i =0 ; i < 4; i++){
        String key = generateKeyOwnedBy(instance1);
        keys.add(key);
    }

    map.executeOnKeys(keys, new EntryCreate());

    for(Object key : keys){
        assertEquals(6, map.get(key));
    }

    instance1.shutdown();

    for(Object key : keys){
        assertEquals(6, map.get(key));
    }

}


public static class EntryCreate extends AbstractEntryProcessor<String, Integer> {

    @Override
    public Object process(final Map.Entry<String, Integer> entry) {
        entry.setValue(6);
        return null;
    }
}
```
