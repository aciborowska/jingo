The issue is on line 103 of WriteBehindMapStore.java (Hazelcast 3.5.4):

```
    // we will be in this `if` only in case of an entry modification via entry-processor.
    // otherwise this extra serialization of value should not be happen.
    if (InMemoryFormat.OBJECT.equals(inMemoryFormat)) {
        value = toData(value);
    }
```

This causes _all_ EntryProcessor runs that call entry.setValue() to serialize the object, leading to lower performance, similar to that of BINARY in-memory format.

Any particular reason for this serialization? This renders OBJECT in-memory format not viable when using write-behind with Hazelcast.
