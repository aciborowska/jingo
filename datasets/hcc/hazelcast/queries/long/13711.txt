Hi,

I am working on Hazelcast 3.9 and as per the requirement I am loading the data in IMap using Maploader at application startup and that's the business requirement cant load it when needed(Lazily). This works fine until one instances run at one time. If i make 2 instances running at same time, both the maps will start loading the data in the IMap and that is what we are not looking. To prevent this scenario, I tried to lock the map but this makes both the node in dead loop, where both ends up waiting for each other and end up throwing Map is loading data from external resources.

I use Spring `@PostConstruct` to load the data at startup in the Map as below:
```java
//1. In this approach both the nodes will load the data.
@PostConstruct
public void init(){
 Imap   map = hanzelcastInstance.getMap("mapName");
map.loadAll(true);

}
```

```java
//2. In this approach both the nodes ends up throwing exception, Assuming one of the node has already started pusing the data in the Map.
@PostConstruct
public void init(){
 Imap   map = hanzelcastInstance.getMap("mapName");
if(map.size()<=0){
     map.loadAll(true);
}
}
```

```java
//3. Tried Locking as well, but no help
@PostConstruct
public void init(){
 Imap   map = hanzelcastInstance.getMap("mapName");
map.lock("mapName")
if(map.size()<=0){
     map.loadAll(true);
}
map.unlock("mapName");
}
```

Can you please help me with correct implementation.

@mmedenjak - I tried your last approach you gave me in the Issue #13671
 