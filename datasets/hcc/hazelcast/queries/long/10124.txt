Given the implementation of  `findHighestReachableClassLoader` in `ServiceLoader` it is not possible to use a different version of Hazelcast in a app-server environment where an application either uses a child-first policy or explicitly configures that `com.hazelcast` should be loaded from the application classpath.

While shading might be a good way around this in some circumstances, it shouldn't really be required.

The resulting exception is:
```
Root Exception stack trace:
java.lang.ClassCastException: Cannot cast com.hazelcast.collection.impl.queue.QueuePortableHook to com.hazelcast.internal.serialization.PortableHook
	at java.lang.Class.cast(Class.java:3369)
	at com.hazelcast.util.ServiceLoader$NewInstanceIterator.next(ServiceLoader.java:336)
	at com.hazelcast.internal.serialization.impl.PortableHookLoader.load(PortableHookLoader.java:51)
	at com.hazelcast.internal.serialization.impl.PortableHookLoader.<init>(PortableHookLoader.java:44)
	at com.hazelcast.internal.serialization.impl.SerializationServiceV1.<init>(SerializationServiceV1.java:88)
	at com.hazelcast.internal.serialization.impl.DefaultSerializationServiceBuilder.createSerializationService(DefaultSerializationServiceBuilder.java:264)
	at com.hazelcast.internal.serialization.impl.DefaultSerializationServiceBuilder.build(DefaultSerializationServiceBuilder.java:218)
	at com.hazelcast.client.impl.DefaultClientExtension.createSerializationService(DefaultClientExtension.java:77)
	at com.hazelcast.client.impl.HazelcastClientInstanceImpl.<init>(HazelcastClientInstanceImpl.java:164)
	at com.hazelcast.client.HazelcastClient.newHazelcastClient(HazelcastClient.java:84)
```

See: 
https://github.com/hazelcast/hazelcast/issues/2395
https://github.com/hazelcast/hazelcast/issues/9353