I am testing the latest build (3.5-EA2-SNAPSHOT) in a JBoss EAP 6.4.0 environment using the JCA-RA and Container-Managed Transactions and the example given by the reference documentation (section 11.3.5 Sample JBoss AS 7 / EAP 6 Web Application Configuration)  is broken. 

``` java
package com.hazelcast.examples.rar;

import com.hazelcast.core.TransactionalMap;
import com.hazelcast.jca.HazelcastConnection;

import javax.annotation.Resource;
import javax.resource.ResourceException;
import javax.resource.cci.ConnectionFactory;
import java.util.logging.Level;
import java.util.logging.Logger;

@javax.ejb.Stateless
public class ExampleBean implements ExampleInterface {
    private final static Logger log = Logger.getLogger(ExampleBean.class.getName());

    @Resource(mappedName = "java:/HazelcastCF")
    protected ConnectionFactory connectionFactory;

    public void insert(String key, String value) {
        HazelcastConnection hzConn = null;
        try {
            hzConn = getConnection();
            TransactionalMap<String,String> txmap = hzConn.getTransactionalMap("txmap");
            txmap.put(key, value);
        } finally {
            closeConnection(hzConn);
        }
    }

    private HazelcastConnection getConnection() {
        try {
            return (HazelcastConnection) connectionFactory.getConnection();
        } catch (ResourceException e) {
            throw new RuntimeException("Error while getting Hazelcast connection", e);
        }
    }

    private void closeConnection(HazelcastConnection hzConn) {
        if (hzConn != null) {
            try {
                hzConn.close();
            } catch (ResourceException e) {
                log.log(Level.WARNING, "Error while closing Hazelcast connection.", e);
            }
        }
    }
}
```

It seems the ManagedConnectionImpl.getTx() is returning the Tx from the instance itself which is not the same the as the Tx instance from the xaResource instance variable and therefore it fails with "Transaction is not Active" coming from HazelcastConnectionImpl's getTransactionalMap.

``` java
    @Override
    public <K, V> TransactionalMap<K, V> getTransactionalMap(String name) {
        final TransactionContext txContext = this.managedConnection.getTx().getTxContext();
        if (txContext == null) {
            throw new IllegalStateException("Transaction is not active");
        }
        return txContext.getMap(name);
    }
```

 I think with the redesign the TxContext should come from the XAResource within the ManagedConnectionImpl and not its own Tx, which leads to question if that Tx instance variable is still necessary.

``` java
    public ManagedConnectionImpl(ConnectionRequestInfo cxRequestInfo, ManagedConnectionFactoryImpl factory) {
        this.setLogWriter(factory.getLogWriter());
        log(Level.FINEST, "ManagedConnectionImpl");

        this.factory = factory;
        this.cxRequestInfo = cxRequestInfo;

        this.id = ID_GEN.incrementAndGet();
        this.tx = new HazelcastTransactionImpl(factory, this);
        HazelcastInstance instance = factory.getResourceAdapter().getHazelcast();
        this.xaResource = instance.getXAResource();

        factory.logHzConnectionEvent(this, HzConnectionEvent.CREATE);
    }
```
