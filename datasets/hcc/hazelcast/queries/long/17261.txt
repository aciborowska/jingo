<!--
Thanks for reporting your issue. Please share with us the following information, to help us resolve your issue quickly and efficiently.
-->
  
**Describe the bug**
After a split-brain scenario, if the cache is not created / exists on both nodes, merging doesn't happen properly.
Instead, I get the exception below.

**Expected behavior**
After split-brain, cache merge should happen properly with no exceptions

**To Reproduce**
two nodes. one is stopped with a debugger to induce a split-brain.
other node is shut down and brought back up with no caches created
when debugger lets go of the fist node, it tries to merge into the second node,
but since there is no cache config on the second node, it fails with below exception
```
2020-07-22T12:00:26.800-0500] [Payara 5.2020.4-SNAPSHOT] [WARNING] [] [com.hazelcast.spi.impl.operationservice.impl.OutboundResponseHandler] [tid: _ThreadID=38 _ThreadName=hz.tender_curie.partition-operation.thread-3] [timeMillis: 1595437
226800] [levelValue: 900] [[
  [10.0.1.10]:4900 [development] [4.1-SNAPSHOT] Cannot send response: com.hazelcast.cache.CacheNotExistsException: Cache /hz/comments is already destroyed or not created yet, on Member [10.0.1.10]:4900 - 62dad61a-a952-40e6-9a2b-8628684b824c this to [10.0.1.10]:6900. com.hazelcast.cache.impl.operation.CacheFetchKeysOperation{serviceName='hz:impl:cacheService', identityHash=290618031, partitionId=135, replicaIndex=0, callId=7133, invocationTime=1595436723544 (2020-07-22 11:52:03.544), waitTimeout=-1, callTimeout=60000, tenantControl=fish.payara.nucleus.hazelcast.PayaraHazelcastTenant@34c99bc6, name=/hz/comments}]]
```
**Additional context**
JDK 8, 2 nodes, Hazelcast 4.1-SNAPSHOT