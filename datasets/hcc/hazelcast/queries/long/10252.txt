If invocation future for the client has completed, and the user calls 'andThen' then the callable is executed on the calling thread. The whole point of the andThen is to not obstruct the calling thread.

I can imagine that under load we would start to run the callback on the calling thread to provide some form of back pressure, but even if there is no load, the task will still be executed on the calling thread. Meaning that the andThen becomes very unreliable for latency sensitive calls that do not want their thread to be obstructed if there is no high load.