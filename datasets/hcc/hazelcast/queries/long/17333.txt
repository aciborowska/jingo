t seems we've introduced a bug here https://github.com/hazelcast/hazelcast/pull/15854#discussion_r468580177. In this PR we've refactored the index updates into observes and do the index update BEFORE updating the storage. The update removes the old entry and inserts new one which is exactly the same because it takes it from the record that is not updated. After that, we do the storage update and remove the old value. The result is a dangling pointer from the index causing inconsistent results on-heap and JVM crashes off-heap.

It seems we have to fix it in all affected versions. I'm wondering, do we have a proper split-brain test for this?

CC @ahmetmircik , @mmedenjak @taburet @Holmistr 