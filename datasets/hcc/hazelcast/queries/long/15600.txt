Hazelcast version: I tried 3.10.4 and 3.12.2
Cluster size: 3-4
Version of Java: 8
Operating system: Windows, Linux

Description:
In production, we use a cluster with 6-7 instances/machines. There are two queues, two instances send messages to the queues (producers) and 4-5 instances process messages from the queues (consumers). The consumers process messages in transactions. If we shutdown and restart the consumers, the transactions for messages that are in progress are not rolled-back and they are lost.

I have a simple Java project to reproduce the problem. It uses one producer and 2-3 consumers. 
With Hazelcast 3.10.4, it needs to 2 consumers to reproduce the problem. 
With Hazelcast 3.12.2, it needs 3 consumers to reproduce it.
Note: The problem is not reproduced 100% of the times (matching what we see in production). Very seldomly, a transaction is rolled-back as expected.
The number of consumers is controlled by the `consumerCount` variable in `TestHazelcast` class in the attached zip file.


[test-hazelcast.zip](https://github.com/hazelcast/hazelcast/files/3643409/test-hazelcast.zip)
