**Describe the bug**
Hazelcast client is acting like overriding map configuration dynamically. but actually it's not overriding the map configuration dynamically. The client didn't throw any exception.

**Expected behavior**
Client has to throw com.hazelcast.config.InvalidConfigurationException: Cannot add a new dynamic configuration which is the current member side behavior

**To Reproduce**
Hazelcast 3.11.1 and upper

hazelcast.xml

```
<map name="mymap">
        <in-memory-format>BINARY</in-memory-format>
        <statistics-enabled>true</statistics-enabled>
        <optimize-queries>false</optimize-queries>
        <cache-deserialized-values>INDEX-ONLY</cache-deserialized-values>
        <backup-count>1</backup-count>
        <async-backup-count>0</async-backup-count>
        <time-to-live-seconds>1800</time-to-live-seconds>
        <max-idle-seconds>0</max-idle-seconds>
        <eviction-policy>LRU</eviction-policy>
        <map-eviction-policy-class-name>com.hazelcast.map.eviction.LRUEvictionPolicy</map-eviction-policy-class-name>
        <max-size policy="PER_NODE">5000</max-size>
        <eviction-percentage>25</eviction-percentage>
        <min-eviction-check-millis>100</min-eviction-check-millis>
        <merge-policy batch-size="100">PutIfAbsentMergePolicy</merge-policy>
        <read-backup-data>false</read-backup-data>
        <metadata-policy>CREATE_ON_UPDATE</metadata-policy>
        <hot-restart enabled="false">
            <fsync>false</fsync>
        </hot-restart>
        <map-store enabled="false" initial-mode="LAZY">
            <write-delay-seconds>0</write-delay-seconds>
            <write-batch-size>1</write-batch-size>
        </map-store>
</map>
```

Client-side code:

```
public static void main(String[] args) {
        HazelcastInstance hz = HazelcastClient.newHazelcastClient();

        MapConfig mapConfig = new MapConfig();
        mapConfig.setName("mymap");
        mapConfig.setMaxIdleSeconds(1900);
        mapConfig.setEvictionPolicy(EvictionPolicy.LFU);
        hz.getConfig().addMapConfig(mapConfig);
}
```
