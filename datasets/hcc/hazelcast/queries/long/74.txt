Under load, it can happen that some threads waiting on a lock obtained using IMap.tryLockAndGet are not notified when the lock becomes available resulting in the server being stalled for the duration of the timeout.

I've worked around the problem by introducing a retry strategy, it solved my problem but the real problem remains:

```
public static &lt;K, V&gt; V tryLockAndGetRetry(IMap&lt;K, V&gt; map, K dep, long time, TimeUnit timeunit) throws TimeoutException {
    V res = null;
    boolean got = false;
    long start = System.currentTimeMillis();
    long timeout = timeunit.toMillis(time);
    long subtimeout = min(100, timeout);
    while((System.currentTimeMillis() - start) &lt; timeout &amp;&amp; !got) {
        try {
            res = map.tryLockAndGet(dep, subtimeout, TimeUnit.MILLISECONDS);
            got = true;
        } catch (TimeoutException e) {
        }
    }
    if(!got) {
        throw new TimeoutException(&quot;Failed getting key &quot; + dep + &quot; in map &quot; + map.getName());
    }
    return res;
}
```

<p>Migrated from http://code.google.com/p/hazelcast/issues/detail?id=771</p>
