Hi,

There seems to be some inconsistency in behaviour when adding a null element depending on if the queue was retrieved using a client vs member instance. The expectation is for a NPE to be thrown when adding a null element but this doesn't seem to be the case for a IQueue retrieved using a client instance.

Hazelcast version under test is 3.5.3.

Test case to reproduce this.

```
public class InconsistentQueueTest
{
    private static HazelcastInstance member;
    private static HazelcastInstance client;

    @BeforeClass
    public static void startup()
    {
        member = Hazelcast.newHazelcastInstance();
        client = HazelcastClient.newHazelcastClient();        
    }

    @Test(expected = NullPointerException.class)
    public void addNullFromMemberInstance()
    {
        IQueue<String> testQueue = member.getQueue("addNullFromMemberInstance");
        testQueue.add(null);
        fail();
    }

    @Test(expected = NullPointerException.class)
    public void addNullFromClientInstance()
    {
       IQueue<String> testQueue = client.getQueue("addNullFromClientInstance");
       testQueue.add(null);

       // to show inconsisten behavior
       assertEquals(1, testQueue.size());
       assertEquals(false, testQueue.isEmpty());
       System.out.println("Queue size " +testQueue.size()+ " Queue isEmpty " +testQueue.isEmpty());

       // java.util.NoSuchElementException: Queue is empty! thrown
       testQueue.remove(); 
    }
}
```

The client proxy code doesn't seem to do a checkNotNull call. Is this the wrong behavior?

Thanks
