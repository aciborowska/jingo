I run several Hazelcast nodes, each one is accompanied by a client. The clients use an ILock to "elect" active instance: a client which holds the lock is considered active, there should be one and only one active client at a time. When I restart node+client which hold the lock, Hazelcast could lost the lock forever.

Here is a simple test case. Please find source code in https://github.com/hazelcast/hazelcast/files/3455614/source.zip .
1. Run Node1
2. Run Client1, it acquires the lock
3. Run Node2
4. Run Client2, it repeatedly trying to acquire the lock but fails
5. Stop Node1, Client1 terminates, Client2 still fails to get the lock for a certain time (*)
6. Start Node1
7. Start Client1, after that none of the clients can ever acquire the lock.

(*) Steps 5-7 need to be performed within a short time which is ~10 seconds for Hazelcast 3.6 and ~60 seconds for Hazelcast 3.11.

