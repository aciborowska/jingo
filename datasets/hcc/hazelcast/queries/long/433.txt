Hi,

We are using HazelCast 1.9.4-SNAPSHOT under AIX 5.3 with Websphere 6.1.0.13  and IBM JDK 1.5.0.

The version of HC we have was built on 06/21/2011 according to the hazelcast-runtime.properties within the jar we are using itself.

We have a web application that uses a super client HC in order to access to a HC cluster.

At some point (but I am not able to reproduce the problem at this time), web container threads in the application server got hung. We see in the application server log that 1 thread then 2 threads then etc... are hung until the point where the web container has no more threads to handle request from clients....

In fact this application allow clients to request the HC cluster via a REST interface of our own. So that application contains almost nothing but a http servlet (dealing with the REST protocol we have implement) and a Hazelcast Super Client object which is part of a cluster...

As the web application is only a super client to the HC cluster, i am wondering why some get locked...

When we have killed the application server process, all the webcontainer threads pool were hunged (40 over 40) ; so in the javacore we have found 40 times that exact following exception:

3XMTHREADINFO      "WebContainer : 0" (TID:0x346D1F00, sys_thread_t:0x3296DB80, state:P, native ID:0x0022109B) prio=5
4XESTACKTRACE          at sun/misc/Unsafe.park(Native Method)
4XESTACKTRACE          at java/util/concurrent/locks/LockSupport.parkNanos(LockSupport.java:197(Compiled Code))
4XESTACKTRACE          at java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1901(Compiled Code))
4XESTACKTRACE          at com/hazelcast/util/ResponseQueueFactory$LockBasedResponseQueue.poll(ResponseQueueFactory.java:63(Compiled Code))
4XESTACKTRACE          at com/hazelcast/impl/BaseManager$ResponseQueueCall.waitAndGetResult(BaseManager.java:480(Compiled Code))
4XESTACKTRACE          at com/hazelcast/impl/BaseManager$ResponseQueueCall.getRedoAwareResult(BaseManager.java:510(Compiled Code))
4XESTACKTRACE          at com/hazelcast/impl/BaseManager$ResponseQueueCall.getResult(BaseManager.java:505(Compiled Code))
4XESTACKTRACE          at com/hazelcast/impl/ExecutorManager$MemberCall.doGetResult(ExecutorManager.java:531(Compiled Code))
4XESTACKTRACE          at com/hazelcast/impl/ExecutorManager$MemberCall.get(ExecutorManager.java:508(Compiled Code))
4XESTACKTRACE          at com/hazelcast/impl/ExecutorManager$MemberCall.get(ExecutorManager.java:501(Compiled Code))
4XESTACKTRACE          at com/hazelcast/impl/ExecutorManager$MembersCall.doGet(ExecutorManager.java:408(Compiled Code))
4XESTACKTRACE          at com/hazelcast/impl/ExecutorManager$MembersCall.get(ExecutorManager.java:397)
4XESTACKTRACE          at com/hazelcast/core/DistributedTask$Inner.get(DistributedTask.java:223)
4XESTACKTRACE          at com/hazelcast/core/DistributedTask.get(DistributedTask.java:114)
4XESTACKTRACE          at com/hazelcast/core/MultiTask.get(MultiTask.java:38)

More logs may be available by me if you require them....

*\* Question 1:**
Do you know if the last version of HC (aka 1.9.4.8) may solve my problem?

*\* Question 2:**
Can you give me some hints according the previous extract of the javacore we have done after doing a kill of the application server process?

Best regards,
Vincent
