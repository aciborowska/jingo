I am updating our codebase from hazelcast 2.5 to 3.3.

We use a lot of EntryListener in our cluster.
I noticed that EntryEvent in 3.3 always has the value= null

```
        Config cfg = new Config();
        HazelcastInstance instance = Hazelcast.newHazelcastInstance(cfg);
        IMap<Integer, String> mapCustomers = instance.getMap("customers");
        mapCustomers.addEntryListener(new EntryListener<Integer, String>() {
                    @Override               
            public void mapEvicted(MapEvent event) {
                System.out.println("Map Evicted : "+event.toString());
            }

            @Override
            public void mapCleared(MapEvent event) {
                System.out.println("Map Cleared : "+event.toString());

            }

            @Override
            public void entryUpdated(EntryEvent<Integer, String> event) {
                System.out.println("Entry Updated : "+event.toString());

            }

            @Override
            public void entryRemoved(EntryEvent<Integer, String> event) {
                System.out.println("Entry Removed : "+event.toString());

            }

            @Override
            public void entryEvicted(EntryEvent<Integer, String> event) {
                System.out.println("Entry Evicted : "+event.toString());

            }

            @Override
            public void entryAdded(EntryEvent<Integer, String> event) {
                System.out.println("Entry Added : "+event.toString());

            }
        }, true); //true to receive value in EntryEvent
        mapCustomers.put(1, "Joe");
        mapCustomers.put(2, "Ali");
        mapCustomers.put(3, "Avi");

        mapCustomers.remove(1);
```

Running this with hazelcast 3.3 , I get the following output 

```
Entry Added : EntryEvent{entryEventType=ADDED, member=Member [192.168.123.5]:5701 this, name='customers', key=null, oldValue=null, value=null}
Entry Added : EntryEvent{entryEventType=ADDED, member=Member [192.168.123.5]:5701 this, name='customers', key=null, oldValue=null, value=null}
Entry Added : EntryEvent{entryEventType=ADDED, member=Member [192.168.123.5]:5701 this, name='customers', key=null, oldValue=null, value=null}
Entry Removed : EntryEvent{entryEventType=REMOVED, member=Member [192.168.123.5]:5701 this, name='customers', key=null, oldValue=null, value=null}
```

Whereas running this code in 2.5, gives values in entryRemoved

```
Entry Added : EntryEvent {c:customers} key=1, oldValue=null, value=Joe, event=ADDED, by Member [192.168.123.5]:5701 this
Entry Added : EntryEvent {c:customers} key=2, oldValue=null, value=Ali, event=ADDED, by Member [192.168.123.5]:5701 this
Entry Added : EntryEvent {c:customers} key=3, oldValue=null, value=Avi, event=ADDED, by Member [192.168.123.5]:5701 this
Entry Removed : EntryEvent {c:customers} key=1, oldValue=null, value=Joe, event=REMOVED, by Member [192.168.123.5]:5701 this
```

Is this expected ? Are we supposed to do something else to receive value in entryRemoved hook?
