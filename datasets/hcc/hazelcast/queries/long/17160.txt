This scenario is possible: In thread0, `RootExec.advance()` is called, which calls `QueryFragmentContext.checkCancelled()`. Moments later, thread1 handles a close request by the user and `BlockingRootResultConsumer.onError()` is called. It sets `done` to `true` on the consumer. After this, in thread0, the consumer's `consume()` method is called from `RootExec.advance0` and it will `assert !done`, which will fail...

devozerov:
> Most likely it should just re-throw an exception from the `consume()` method