**Describe the bug**
After split-brain healing, lock gives exceptions and/or freeze indefinitely:
```
[2020-07-22T14:46:48.420-0500] [Payara 5.2020.4-SNAPSHOT] [SEVERE] [] [com.hazelcast.cp.internal.operation.unsafe.UnsafeRaftBackupOp] [tid: _ThreadID=35 _ThreadName=hz.priceless_chatelet.partition-operation.thread-0] [timeMillis: 159544720
8420] [levelValue: 1000] [[
  [10.0.1.10]:4900 [development] [4.1-SNAPSHOT] active session: 1 does not exist in CPGroupId{name='Payara/ejb/singleton/StockTicker-1.0-SNAPSHOT_/StockTicker-1.0-SNAPSHOT/StockTicker/lock', seed=0, groupId=48}
com.hazelcast.cp.internal.session.SessionExpiredException: active session: 1 does not exist in CPGroupId{name='Payara/ejb/singleton/StockTicker-1.0-SNAPSHOT_/StockTicker-1.0-SNAPSHOT/StockTicker/lock', seed=0, groupId=48}
        at com.hazelcast.cp.internal.datastructures.spi.blocking.AbstractBlockingService.heartbeatSession(AbstractBlockingService.java:300)
        at com.hazelcast.cp.internal.datastructures.lock.LockService.acquire(LockService.java:62)
        at com.hazelcast.cp.internal.datastructures.lock.operation.LockOp.run(LockOp.java:59)
        at com.hazelcast.cp.internal.operation.unsafe.AbstractUnsafeRaftOp.call(AbstractUnsafeRaftOp.java:65)
        at com.hazelcast.spi.impl.operationexecutor.OperationRunner.runDirect(OperationRunner.java:152)
        at com.hazelcast.spi.impl.operationservice.impl.operations.Backup.run(Backup.java:174)
        at com.hazelcast.spi.impl.operationservice.Operation.call(Operation.java:189)
        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:233)
        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:217)
        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:429)
        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:176)
        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:137)
        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.executeRun(OperationThread.java:123)
        at com.hazelcast.internal.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:102)
]]
```
**Expected behavior**
Locks should work normally after split-brain

**To Reproduce**
Unfortunately I don't have a reproducer.
What I did is run a locking app on two nodes,
and then "froze" one of them with debugger to get it
to split-brain, and then I waited for a merge, and then it stopped working
with an exception above, or just completely froze indefinitely waiting for a lock.


**Additional context**
Java 8, 2 nodes, Hazelcast 4.1-SNAPSHOT