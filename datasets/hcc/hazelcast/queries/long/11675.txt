We have a dataset of 600K rows, around 500 bytes per entry.  Start server, start client.  Access CQCache on client.  Server starts loading the data from the MapStore (loading from Cassandra but I dont believe its Cassandra specific).  On the client, the IMap can be retrieved from the `HazelcastInstance` and then a CQCache can be retrieved (which was configured via XML), but it's `null`.    This seems to be a problem with larger datasets (perhaps some sort of timeout between client-server while the server is loading data, and then streaming the data back to the CQ Cache.  Our CQ cache is using `TruePredicate.INSTANCE` - basically caching everything on the client, with an eviction size of `Integer.MAX`).  If we remove most or all of the data in the Cassandra table and rerun the test, then everything works as expected, and the `QueryCache` reference obtained on the client is non null, thus no NPEs.

We expect the `QueryCache` object to be non-null on the client, and the method to obtain the cache should block waiting for the results of the query to execute.  The method should wait for the server to load all the data through the MapStore.  If that takes a few seconds or minutes it doesnt matter.

HZ 3.8.1