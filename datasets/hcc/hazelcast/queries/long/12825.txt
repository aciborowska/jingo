Declarative configuration of a query cache listener does not properly register the listener, eg the following configuration never invokes the listener:

```
        MapConfig mapConfig = new MapConfig("test");
        QueryCacheConfig queryCacheConfig = new QueryCacheConfig("theqc");
        queryCacheConfig.setPredicateConfig(new PredicateConfig(
                new NotEqualPredicate("age", 42)
        )).addEntryListenerConfig(
                new EntryListenerConfig(new QCListener(), true, true)
        );
        mapConfig.addQueryCacheConfig(queryCacheConfig);
        Config config = new Config().addMapConfig(mapConfig);
        HazelcastInstance hz = Hazelcast.newHazelcastInstance(config);
```

While adding the same listener at runtime (via `hz.getMap("test").getQueryCache("theqc").addEntryListener(new QCListener(), true)`) works fine.

The issue seems to be misinterpretation of `String` as `cacheId` even though it is a `cacheName` in [`NodeQueryCacheConfigurator.getOrCreateConfiguration`](https://github.com/vbekiaris/hazelcast/blob/00ee8406b7945b601fc6c2e3783b7c53a5dd582d/hazelcast/src/main/java/com/hazelcast/map/impl/querycache/subscriber/NodeQueryCacheConfigurator.java#L54). Most probably the same applies on client-side query cache configurator. Also, declaratively configuring a listener seems like a missing test case: `AbstractQueryCacheConfigurator` has just 56% coverage and `setEntryListener` is not tested at all (which is in the problematic code path).