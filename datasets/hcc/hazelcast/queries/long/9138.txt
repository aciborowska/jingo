```
public void rollbackTransaction(String transactionId) {
       final Iterator<TxQueueItem> iterator = txMap.values().iterator();

       while (iterator.hasNext()) {
           final TxQueueItem item = iterator.next();
           if (transactionId.equals(item.getTransactionId())) {
               iterator.remove();
               if (item.isPollOperation()) {
                   getItemQueue().offerFirst(item);
                   cancelEvictionIfExists();
               }
           }
       }
   }
```

The items that were taken from the queue, are being pushed back in a random order on the queue. The txMap.values doesn't provide any sensible ordering; so the 'offerFirst' will put back items in a random order.

So you could start out with a queue [1,2,3,4]. And after a transaction, that took items rolled back, the queue could look like [4,1,3,2].
