We are using Distributed Maps and are experiencing sporadic pauses that are consistently taking about 30 seconds.  When there is no pause, the entire transaction, including the use of IMap is less than 1 second.  Below are a three examples from 3 different thread dumps.  Could there be some kind of TTL or timeout that might explain the 30 second pause we see?

Thanks for your help!

Alp

```
"http-0.0.0.0-8080-13" daemon prio=10 tid=0x00002aaabcd45800 nid=0x790b waiting on condition [0x0000000044704000]
   java.lang.Thread.State: TIMED_WAITING (parking)
      at sun.misc.Unsafe.park(Native Method)
      - parking to wait for  <0x0000000706d748c0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
      at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
      at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2116)
      at com.hazelcast.util.ResponseQueueFactory$LockBasedResponseQueue.poll(ResponseQueueFactory.java:63)
      at com.hazelcast.client.Call.getResponse(Call.java:83)
      at com.hazelcast.client.ProxyHelper.doCall(ProxyHelper.java:84)
      at com.hazelcast.client.ProxyHelper.callAndGetResult(ProxyHelper.java:64)
      at com.hazelcast.client.ProxyHelper.doOp(ProxyHelper.java:159)
      at com.hazelcast.client.ProxyHelper.doOp(ProxyHelper.java:154)
      at com.hazelcast.client.MapClientProxy.remove(MapClientProxy.java:314)
      at com.asurion.parasol.wingsong.service.impl.HazelcastAutoReleaseMutexService.release(HazelcastAutoReleaseMutexService.java:143)
      at com.asurion.parasol.flitter.jabber.servlet.JabberServlet._service(JabberServlet.java:1256)
      at com.asurion.parasol.flitter.servlet.FlitterServlet.doService(FlitterServlet.java:134

"http-0.0.0.0-8080-10" daemon prio=10 tid=0x000000006ab2f800 nid=0x68bd waiting on condition [0x0000000045fee000]
   java.lang.Thread.State: TIMED_WAITING (parking)
      at sun.misc.Unsafe.park(Native Method)
      - parking to wait for  <0x00000007d45d3700> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
      at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
      at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2116)
      at com.hazelcast.util.ResponseQueueFactory$LockBasedResponseQueue.poll(ResponseQueueFactory.java:63)
      at com.hazelcast.client.Call.getResponse(Call.java:83)
      at com.hazelcast.client.ProxyHelper.doCall(ProxyHelper.java:84)
      at com.hazelcast.client.ProxyHelper.callAndGetResult(ProxyHelper.java:64)
      at com.hazelcast.client.ProxyHelper.doOp(ProxyHelper.java:159)
      at com.hazelcast.client.ProxyHelper.doOp(ProxyHelper.java:154)
      at com.hazelcast.client.MapClientProxy.remove(MapClientProxy.java:314)
      at com.asurion.parasol.wingsong.service.impl.HazelcastAutoReleaseMutexService.release(HazelcastAutoReleaseMutexService.java:143)

"http-0.0.0.0-8080-10" daemon prio=10 tid=0x000000006ab2f800 nid=0x68bd waiting on condition [0x0000000045fee000]
   java.lang.Thread.State: TIMED_WAITING (parking)
      at sun.misc.Unsafe.park(Native Method)
      - parking to wait for  <0x0000000728719548> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
      at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
      at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2116)
      at com.hazelcast.util.ResponseQueueFactory$LockBasedResponseQueue.poll(ResponseQueueFactory.java:63)
      at com.hazelcast.client.Call.getResponse(Call.java:83)
      at com.hazelcast.client.ProxyHelper.doCall(ProxyHelper.java:84)
      at com.hazelcast.client.ProxyHelper.callAndGetResult(ProxyHelper.java:64)
      at com.hazelcast.client.ProxyHelper.doOp(ProxyHelper.java:159)
      at com.hazelcast.client.MapClientProxy.putIfAbsent(MapClientProxy.java:173)
      at com.asurion.parasol.wingsong.service.impl.HazelcastAutoReleaseMutexService.tryAcquireAutoRelease(HazelcastAutoReleaseMutexService.java:94)
```
