```
SEVERE: [172.30.204.231]:5701 [dev] Lock is not owned by the transaction! -> Owner: 1da080f8-38da-41f7-8183-04c0b06a968b, thread-id: 1
com.hazelcast.transaction.TransactionException: Lock is not owned by the transaction! -> Owner: 1da080f8-38da-41f7-8183-04c0b06a968b, thread-id: 1
    at com.hazelcast.multimap.txn.TxnPrepareBackupOperation.run(TxnPrepareBackupOperation.java:51)
    at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:274)
    at com.hazelcast.spi.impl.OperationServiceImpl.runOperation(OperationServiceImpl.java:184)
    at com.hazelcast.spi.impl.Backup.run(Backup.java:87)
    at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:274)
    at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
    at com.hazelcast.spi.impl.OperationServiceImpl$RemoteOperationProcessor.run(OperationServiceImpl.java:744)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:724)
    at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:791)
```

Here is code to reproduce the problem:

```
public class HazelcastErrorTest {

    @Test
    public void testError() throws InterruptedException {
        String mapName = "map";
        long key = 1L;
        String value = "value";

        HazelcastInstance instance1 = Hazelcast.newHazelcastInstance();
        HazelcastInstance instance2 = Hazelcast.newHazelcastInstance();


        TransactionContext ctx1 = instance1.newTransactionContext();
        ctx1.beginTransaction();
        BaseMultiMap<Long, String> txProfileTasks1 = ctx1.getMultiMap(mapName);
        txProfileTasks1.put(key, value);
        ctx1.commitTransaction();

        TransactionContext ctx2 = instance2.newTransactionContext();
        ctx2.beginTransaction();
        BaseMultiMap<Long, String> txProfileTasks2 = ctx2.getMultiMap(mapName);
        txProfileTasks2.remove(key, value);
        ctx2.commitTransaction();
    }
}
```

It looks pretty much the same with the problem described here https://groups.google.com/forum/#!msg/hazelcast/zMtBSK8FxUA/fkk55nJ8hWcJ

The only difference I use multimap instead of map in my code.

Hope for quick resolution.
Thank you!
