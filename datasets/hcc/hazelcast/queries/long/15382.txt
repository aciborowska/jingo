`MapConfig` options `readBackupData` and `statisticsEnabled` are not respected when a new `MapConfig` is dynamically added from a client to a running Hazelcast cluster.

---- original issue description follows
DynamicConfigBouncingTest failures

- Fails on `Hazelcast-3.x-IbmJDK8-fips-nightly`, `Hazelcast-3.x-nightly`, `Hazelcast-3.x-sonar`
- Failing [job](http://jenkins.hazelcast.com/view/Official%20Builds/job/Hazelcast-3.x-IbmJDK8-fips-nightly/58/)

- Unable to extract commit id. Possible https://github.com/hazelcast/hazelcast/commit/97ed63b9d6d7ae7d7fadd314e330ceeabf290e49

- Sample Stack Trace
```
java.lang.AssertionError: expected:<MapConfig{name='8a8a218d-2817-44f7-a961-534688a8b210', inMemoryFormat=OBJECT', metadataPolicy=CREATE_ON_UPDATE, backupCount=3, asyncBackupCount=0, timeToLiveSeconds=12, maxIdleSeconds=20, evictionPolicy='NONE', mapEvictionPolicy='com.hazelcast.map.eviction.LFUEvictionPolicy@a5788462', maxSizeConfig=MaxSizeConfig{maxSizePolicy='FREE_HEAP_SIZE', size=1000}, readBackupData=true, merkleTree=MerkleTreeConfig{enabled=false, depth=10}, eventJournal=EventJournalConfig{enabled=false, capacity=10000, timeToLiveSeconds=0}, hotRestart=HotRestartConfig{enabled=true, fsync=true}, nearCacheConfig=NearCacheConfig{name=default, inMemoryFormat=NATIVE, invalidateOnChange=true, timeToLiveSeconds=0, maxIdleSeconds=0, evictionConfig=EvictionConfig{size=10000, maxSizePolicy=ENTRY_COUNT, evictionPolicy=LRU, comparatorClassName=null, comparator=null}, cacheLocalEntries=true, localUpdatePolicy=CACHE_ON_UPDATE, preloaderConfig=NearCachePreloaderConfig{enabled=true, directory=, storeInitialDelaySeconds=600, storeIntervalSeconds=600}}, mapStoreConfig=MapStoreConfig{enabled=true, className='foo.bar.MapStoreDoesNotExist', factoryClassName='null', writeDelaySeconds=0, writeBatchSize=1, implementation=null, factoryImplementation=null, properties={}, initialLoadMode=LAZY, writeCoalescing=true}, mergePolicyConfig=MergePolicyConfig{policy='com.hazelcast.spi.merge.PutIfAbsentMergePolicy', batchSize=100}, wanReplicationRef=WanReplicationRef{name='name', mergePolicy='foo.bar.PolicyClass', filters='[]', republishingEnabled='true'}, entryListenerConfigs=[EntryListenerConfig{local=true, includeValue=true}, EntryListenerConfig{local=true, includeValue=true}, EntryListenerConfig{local=true, includeValue=true}], mapIndexConfigs=[MapIndexConfig{attribute='orderAttribute', ordered=true}, MapIndexConfig{attribute='unorderedAttribute', ordered=false}], mapAttributeConfigs=[MapAttributeConfig{name='attribute'extractor='foo.bar.ExtractorClass'}], quorumName=quorum, queryCacheConfigs=[QueryCacheConfig{batchSize=100, bufferSize=16, delaySeconds=0, includeValue=true, populate=true, coalesce=false, inMemoryFormat=OBJECT, name='queryCacheName', predicateConfig=PredicateConfig{className='null', sql='null', implementation=null}, evictionConfig=EvictionConfig{size=10000, maxSizePolicy=ENTRY_COUNT, evictionPolicy=LRU, comparatorClassName=null, comparator=null}, entryListenerConfigs=[EntryListenerConfig{local=false, includeValue=true}], indexConfigs=[MapIndexConfig{attribute='attribute', ordered=false}]}], cacheDeserializedValues=ALWAYS}> but was:<MapConfig{name='8a8a218d-2817-44f7-a961-534688a8b210', inMemoryFormat=OBJECT', metadataPolicy=CREATE_ON_UPDATE, backupCount=3, asyncBackupCount=0, timeToLiveSeconds=12, maxIdleSeconds=20, evictionPolicy='NONE', mapEvictionPolicy='com.hazelcast.map.eviction.LFUEvictionPolicy@a5788462', maxSizeConfig=MaxSizeConfig{maxSizePolicy='FREE_HEAP_SIZE', size=1000}, readBackupData=false, merkleTree=MerkleTreeConfig{enabled=false, depth=10}, eventJournal=EventJournalConfig{enabled=false, capacity=10000, timeToLiveSeconds=0}, hotRestart=HotRestartConfig{enabled=true, fsync=true}, nearCacheConfig=NearCacheConfig{name=default, inMemoryFormat=NATIVE, invalidateOnChange=true, timeToLiveSeconds=0, maxIdleSeconds=0, evictionConfig=EvictionConfig{size=10000, maxSizePolicy=ENTRY_COUNT, evictionPolicy=LRU, comparatorClassName=null, comparator=null}, cacheLocalEntries=true, localUpdatePolicy=CACHE_ON_UPDATE, preloaderConfig=NearCachePreloaderConfig{enabled=true, directory=, storeInitialDelaySeconds=600, storeIntervalSeconds=600}}, mapStoreConfig=MapStoreConfig{enabled=true, className='foo.bar.MapStoreDoesNotExist', factoryClassName='null', writeDelaySeconds=0, writeBatchSize=1, implementation=null, factoryImplementation=null, properties={}, initialLoadMode=LAZY, writeCoalescing=true}, mergePolicyConfig=MergePolicyConfig{policy='com.hazelcast.spi.merge.PutIfAbsentMergePolicy', batchSize=100}, wanReplicationRef=WanReplicationRef{name='name', mergePolicy='foo.bar.PolicyClass', filters='[]', republishingEnabled='true'}, entryListenerConfigs=[EntryListenerConfig{local=true, includeValue=true}, EntryListenerConfig{local=true, includeValue=true}, EntryListenerConfig{local=true, includeValue=true}], mapIndexConfigs=[MapIndexConfig{attribute='orderAttribute', ordered=true}, MapIndexConfig{attribute='unorderedAttribute', ordered=false}], mapAttributeConfigs=[MapAttributeConfig{name='attribute'extractor='foo.bar.ExtractorClass'}], quorumName=quorum, queryCacheConfigs=[QueryCacheConfig{batchSize=100, bufferSize=16, delaySeconds=0, includeValue=true, populate=true, coalesce=false, inMemoryFormat=OBJECT, name='queryCacheName', predicateConfig=PredicateConfig{className='null', sql='null', implementation=null}, evictionConfig=EvictionConfig{size=10000, maxSizePolicy=ENTRY_COUNT, evictionPolicy=LRU, comparatorClassName=null, comparator=null}, entryListenerConfigs=[EntryListenerConfig{local=false, includeValue=true}], indexConfigs=[MapIndexConfig{attribute='attribute', ordered=false}]}], cacheDeserializedValues=ALWAYS}>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:834)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:144)
	at com.hazelcast.internal.dynamicconfig.DynamicConfigBouncingTest.doNotThrowExceptionWhenMemberIsGone(DynamicConfigBouncingTest.java:80)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:90)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55)
	at java.lang.reflect.Method.invoke(Method.java:508)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at com.hazelcast.test.FailOnTimeoutStatement$CallableStatement.call(FailOnTimeoutStatement.java:114)
	at com.hazelcast.test.FailOnTimeoutStatement$CallableStatement.call(FailOnTimeoutStatement.java:106)
	at java.util.concurrent.FutureTask.run(FutureTask.java:277)
	at java.lang.Thread.run(Thread.java:811)
```
