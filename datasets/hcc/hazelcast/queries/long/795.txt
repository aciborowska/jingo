in the migration process from hz 2.6 to hz 3.0 run into following inconsistency, 
in case if I run an IMap.get("uknown key") - for which my MapLoad will retun null, the distributed map caches the key with a null vlaue,  (IMap.size - increases by 1 each time i issue an map.get(new-non-existent-key))

That basically breaks the case when underlying DB gets updated and MapLoader will never get executed, 

is this some new optimization feature - to avoid invoking underlying MapLoad.load()  if prev lockup didn't return anything ?

version 3.0
