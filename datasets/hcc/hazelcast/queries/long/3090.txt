Cluster profile: Medium
Stabilizer test: com.hazelcast.stabilizer.tests.map.MapIndexTest,  
version: 3.3-RC3

These types of error are appearing on every run very early into the test,  this problem is easy to reproduce.

```
Failure[
   message='Worked ran into an unhandled exception'
   type='Worker exception'
   agentAddress=10.65.11.168
   time=Sat Jul 26 09:14:01 UTC 2014
   workerAddress=client:10.65.11.168
   workerId=worker-10.65.11.168-4-client
   test=TestCase{
          id=MapIdx
        , class=com.hazelcast.stabilizer.tests.map.MapIndexTest
        , basename=MapIdx
        , destroyProb=0.1
        , keyCount=1000
        , pagePred=0
        , predicateBuilder=0.3
        , sqlString=0.3
        , threadCount=3
        , updateEmploye=0.3
    }
   cause=junit.framework.AssertionFailedError: Employee{id=875, name='fff', age=16, active=true, salary=216.87164909577962} not matching predicate active=true AND age >17
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at com.hazelcast.stabilizer.tests.map.MapIndexTest$Worker.run(MapIndexTest.java:128)
    at java.lang.Thread.run(Thread.java:745)
    at com.hazelcast.stabilizer.tests.utils.ThreadSpawner$DefaultThread.run(ThreadSpawner.java:88)

]
Failure[
   message='Worked ran into an unhandled exception'
   type='Worker exception'
   agentAddress=10.65.143.133
   time=Sat Jul 26 09:14:13 UTC 2014
   workerAddress=client:10.65.143.133
   workerId=worker-10.65.143.133-5-client
   test=TestCase{
          id=MapIdx
        , class=com.hazelcast.stabilizer.tests.map.MapIndexTest
        , basename=MapIdx
        , destroyProb=0.1
        , keyCount=1000
        , pagePred=0
        , predicateBuilder=0.3
        , sqlString=0.3
        , threadCount=3
        , updateEmploye=0.3
    }
   cause=junit.framework.AssertionFailedError: Employee{id=776, name='ccc', age=55, active=false, salary=254.32119652945684} not matching predicate PredicateBuilder{
(age<52 AND name=ccc)
}
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at com.hazelcast.stabilizer.tests.map.MapIndexTest$Worker.run(MapIndexTest.java:115)
    at java.lang.Thread.run(Thread.java:745)
    at com.hazelcast.stabilizer.tests.utils.ThreadSpawner$DefaultThread.run(ThreadSpawner.java:88)

]
Failure[
   message='Worked ran into an unhandled exception'
   type='Worker exception'
   agentAddress=10.169.57.251
   time=Sat Jul 26 09:14:16 UTC 2014
   workerAddress=client:10.169.57.251
   workerId=worker-10.169.57.251-3-client
   test=TestCase{
          id=MapIdx
        , class=com.hazelcast.stabilizer.tests.map.MapIndexTest
        , basename=MapIdx
        , destroyProb=0.1
        , keyCount=1000
        , pagePred=0
        , predicateBuilder=0.3
        , sqlString=0.3
        , threadCount=3
        , updateEmploye=0.3
    }
   cause=java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String
    at java.lang.String.compareTo(String.java:108)
    at java.util.concurrent.ConcurrentSkipListMap.findNear(ConcurrentSkipListMap.java:1346)
    at java.util.concurrent.ConcurrentSkipListMap$SubMap.loNode(ConcurrentSkipListMap.java:2573)
    at java.util.concurrent.ConcurrentSkipListMap$SubMap.access$300(ConcurrentSkipListMap.java:2474)
    at java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapIter.<init>(ConcurrentSkipListMap.java:3010)
    at java.util.concurrent.ConcurrentSkipListMap$SubMap$SubMapKeyIterator.<init>(ConcurrentSkipListMap.java:3088)
    at java.util.concurrent.ConcurrentSkipListMap$SubMap.keyIterator(ConcurrentSkipListMap.java:2986)
    at java.util.concurrent.ConcurrentSkipListMap$KeySet.iterator(ConcurrentSkipListMap.java:2333)
    at java.util.concurrent.ConcurrentSkipListSet.iterator(ConcurrentSkipListSet.java:266)
    at com.hazelcast.query.impl.SortedIndexStore.getSubRecords(SortedIndexStore.java:78)
    at com.hazelcast.query.impl.IndexImpl.getSubRecords(IndexImpl.java:122)
    at com.hazelcast.query.Predicates$GreaterLessPredicate.filter(Predicates.java:691)
    at com.hazelcast.query.Predicates$AndPredicate.filter(Predicates.java:477)
    at com.hazelcast.query.SqlPredicate.filter(SqlPredicate.java:80)
    at com.hazelcast.query.impl.IndexService.query(IndexService.java:88)
    at com.hazelcast.map.operation.QueryOperation.run(QueryOperation.java:74)
    at com.hazelcast.spi.impl.BasicOperationService$OperationHandler.handle(BasicOperationService.java:673)
    at com.hazelcast.spi.impl.BasicOperationService$OperationHandler.access$400(BasicOperationService.java:649)
    at com.hazelcast.spi.impl.BasicOperationService$OperationPacketHandler.handle(BasicOperationService.java:623)
    at com.hazelcast.spi.impl.BasicOperationService$OperationPacketHandler.handle(BasicOperationService.java:591)
    at com.hazelcast.spi.impl.BasicOperationService$OperationPacketHandler.access$1400(BasicOperationService.java:578)
    at com.hazelcast.spi.impl.BasicOperationService$BasicDispatcherImpl.dispatch(BasicOperationService.java:533)
    at com.hazelcast.spi.impl.BasicOperationScheduler$OperationThread.process(BasicOperationScheduler.java:439)
    at com.hazelcast.spi.impl.BasicOperationScheduler$OperationThread.doRun(BasicOperationScheduler.java:433)
    at com.hazelcast.spi.impl.BasicOperationScheduler$OperationThread.run(BasicOperationScheduler.java:408)
    at ------ End remote and begin local stack-trace ------.(Unknown Source)
    at com.hazelcast.spi.impl.BasicInvocationFuture.resolveApplicationResponse(BasicInvocationFuture.java:349)
    at com.hazelcast.spi.impl.BasicInvocationFuture.resolveApplicationResponseOrThrowException(BasicInvocationFuture.java:282)
    at com.hazelcast.spi.impl.BasicInvocationFuture.get(BasicInvocationFuture.java:181)
    at com.hazelcast.spi.impl.BasicInvocationFuture.get(BasicInvocationFuture.java:160)
    at com.hazelcast.map.client.AbstractMapQueryRequest.collectResults(AbstractMapQueryRequest.java:126)
    at com.hazelcast.map.client.AbstractMapQueryRequest.invoke(AbstractMapQueryRequest.java:74)
    at com.hazelcast.client.InvocationClientRequest.process(InvocationClientRequest.java:27)
    at com.hazelcast.client.ClientEngineImpl$ClientPacketProcessor.processRequest(ClientEngineImpl.java:391)
    at com.hazelcast.client.ClientEngineImpl$ClientPacketProcessor.run(ClientEngineImpl.java:334)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
    at com.hazelcast.util.executor.PoolExecutorThreadFactory$ManagedThread.run(PoolExecutorThreadFactory.java:59)
    at ------ End remote and begin local stack-trace ------.(Unknown Source)
    at com.hazelcast.client.spi.impl.ClientCallFuture.resolveResponse(ClientCallFuture.java:194)
    at com.hazelcast.client.spi.impl.ClientCallFuture.get(ClientCallFuture.java:136)
    at com.hazelcast.client.spi.impl.ClientCallFuture.get(ClientCallFuture.java:113)
    at com.hazelcast.client.spi.ClientProxy.invoke(ClientProxy.java:136)
    at com.hazelcast.client.proxy.ClientMapProxy.values(ClientMapProxy.java:743)
    at com.hazelcast.stabilizer.tests.map.MapIndexTest$Worker.run(MapIndexTest.java:123)
    at java.lang.Thread.run(Thread.java:745)
    at com.hazelcast.stabilizer.tests.utils.ThreadSpawner$DefaultThread.run(ThreadSpawner.java:88)

]
Failure[
   message='Worked ran into an unhandled exception'
   type='Worker exception'
   agentAddress=10.153.160.182
   time=Sat Jul 26 09:14:15 UTC 2014
   workerAddress=client:10.153.160.182
   workerId=worker-10.153.160.182-5-client
   test=TestCase{
          id=MapIdx
        , class=com.hazelcast.stabilizer.tests.map.MapIndexTest
        , basename=MapIdx
        , destroyProb=0.1
        , keyCount=1000
        , pagePred=0
        , predicateBuilder=0.3
        , sqlString=0.3
        , threadCount=3
        , updateEmploye=0.3
    }
   cause=junit.framework.AssertionFailedError: Employee{id=81, name='fff', age=12, active=true, salary=337.2374346335586} not matching predicate active=true AND age >26
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at com.hazelcast.stabilizer.tests.map.MapIndexTest$Worker.run(MapIndexTest.java:128)
    at java.lang.Thread.run(Thread.java:745)
    at com.hazelcast.stabilizer.tests.utils.ThreadSpawner$DefaultThread.run(ThreadSpawner.java:88)
]



from a diffrent run

Failure[
   message='Worked ran into an unhandled exception'
   type='Worker exception'
   agentAddress=10.182.50.123
   time=Sat Jul 26 01:00:23 UTC 2014
   workerAddress=client:10.182.50.123
   workerId=worker-10.182.50.123-4-client
   test=TestCase{
          id=MapIdx
        , class=com.hazelcast.stabilizer.tests.map.MapIndexTest
        , basename=MapIdx
        , destroyProb=0.1
        , keyCount=1000
        , pagePred=0
        , predicateBuilder=0.3
        , sqlString=0.3
        , threadCount=3
        , updateEmploye=0.3
    }
   cause=junit.framework.AssertionFailedError: Employee{id=96, name='ccc', age=72, active=false, salary=325.2389166668367} not matching predicate active=true AND age >52
    at junit.framework.Assert.fail(Assert.java:57)
    at junit.framework.Assert.assertTrue(Assert.java:22)
    at com.hazelcast.stabilizer.tests.map.MapIndexTest$Worker.run(MapIndexTest.java:128)
    at java.lang.Thread.run(Thread.java:745)
    at com.hazelcast.stabilizer.tests.utils.ThreadSpawner$DefaultThread.run(ThreadSpawner.java:88)

]
```
