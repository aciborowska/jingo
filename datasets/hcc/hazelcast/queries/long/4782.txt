I'm using Hazelcast 3.4.1 on an equinox OSGi runtime. My target environment (PDE) contains the hazelcast-3.4.1.jar bundle and its concomitant fragment hazelcast-client-3.4.1.jar. My personal bundle manifest looks as follows:

```
Import-Package: com.hazelcast.client;version="3.4.1",
 com.hazelcast.client.config;version="3.4.1",
 com.hazelcast.config;version="3.4.1",
 com.hazelcast.core;version="3.4.1",
 ...
```

Within a class inside my personal bundle I'm importing as follows:

```
import com.hazelcast.client.HazelcastClient;
import com.hazelcast.client.config.ClientConfig;
```

The PDE will not recognize the classes HazelcastClient or ClientConfig within the com.hazelcast.client or com.hazlecast.client.config packages, respectively. The hazelcast jar MANIFEST's make extensive use of the "uses" directive so I'm wondering if there's collisions occurring during resolution.

When I launch the OSGi runtime, the Hazelcast bundle and the client fragment will load:

```
9   ACTIVE      com.hazelcast_3.4.1
            Fragments=10
10  RESOLVED    com.hazelcast.client_3.4.1
            Master=9
```

If I run the headers command on bundle 9 I get:

```
osgi> headers 9
  ...  
  Export-Package = com.hazelcast.client;uses:="c...
  ...
```

If I run the packages command on bundle 9 I get:

```
osgi> packages 9
No exported packages
```

So it is clearly exported but not recognized as an export.  I'm using Eclipse Luna SR2.
Any suggestions that might help me resolve this would be greatly appreciated.
