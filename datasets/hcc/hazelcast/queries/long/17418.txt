See [Stack Overflow question 63607692](https://stackoverflow.com/questions/63607692/why-hazelcast-not-query-incorrect-result-with-imap-and-hazelcastjsonvalue-includ)

**Describe the bug**
A query on a field in a JSON value does not find that value if there is an index on another field in that JSON, where that field contains UTF-16.

**Expected behavior**
What is in one field should not affect a query on another field

**To Reproduce**

```
HazelcastInstance instance = Hazelcast.newHazelcastInstance(new Config());
IMap<String, HazelcastJsonValue> map = instance.getMap("so63607692");

String json1 = "{\"a\":\"1\",\"b\":\"13国债15\",\"c\":\"1\"}";
String json2 = "{\"a\":\"2\",\"c\":\"1\"}";

map.put("1", new HazelcastJsonValue(json1));
map.put("2", new HazelcastJsonValue(json2));

Predicate predicate = Predicates.sql("c='1'");

System.out.println(map.entrySet(predicate));
map.addIndex(new IndexConfig(IndexType.HASH,"a"));
System.out.println(map.entrySet(predicate));

instance.shutdown();
```

First and second run of the query should print the same results, but don't.

**Additional context**

Output I get
```
[2={"a":"2","c":"1"}, 1={"a":"1","b":"13国债15","c":"1"}]
[2={"a":"2","c":"1"}]
```

Tried on 4.0.2 and 4.1-SNAPSHOT