Given an object that looks like this:

``` java
public class TestObjectPortable implements VersionedPortable {
    private TestObjectMetadataPortable objectMetadataPortable;

    public TestObjectPortable(TestObjectMetadataPortable objectMetadata) {
        this.objectMetadataPortable = objectMetadata;
    }

    public int getClassVersion() {
        return 3;
    }
    ...
```

and the metadata object: 

``` java
public class TestObjectMetadataPortable implements VersionedPortable {
    String metaData;
    String reference;

    public TestObjectMetadataPortable(String metaData, String reference) {
        this.metaData = metaData;
        this.reference = reference;
    }

    public int getClassVersion() { return 1; }
    ...
```

If I try to do the following query: 

``` java
map.values(Predicates.equal("objectMetadataPortable.reference", "ref2"));
```

Hazelcast would throw an IllegalArgumentException: Not a registered Portable field.

However if I change the class version of TestObjectMetadataPortable to 3 as well everything works as expected.

Project to proof the issue: 
[HazelCastBug.zip](https://github.com/hazelcast/hazelcast/files/455251/HazelCastBug.zip)
