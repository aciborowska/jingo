I added it in a comment to https://github.com/hazelcast/hazelcast/issues/4525 but it was ignored so I am opening a new issue.

Since Hazelcast 3.4.3 (or .4) you changed how nulls are treated by equal/notEqual (and probably other) predicates.
Previously if I had three entries with property say "field" being null, "value" and "other" respectively, then searching for Predicates.notEqual("field", "value") would return me the "other" and null one. Starting with 3.4.3 it will only return "other".

You say it is to make it more like SQL. However not(equal()) will still return me null value both and it is NOT what SQL would do.

```
mysql> select * from test1;
+------+
| id   |
+------+
|    2 |
| NULL |
|    1 |
+------+
3 rows in set (0.00 sec)

mysql> select * from test1 where not id=2;
+------+
| id   |
+------+
|    1 |
+------+
1 row in set (0.00 sec)

mysql> 

```

PS: I am not sure what is the correct way here. To me personally, you should not change the original behaviour - after all we are in Java world and null is NOT equal to "value" so this is what people expect...
