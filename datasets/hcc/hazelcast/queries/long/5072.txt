**With one member running, when starting a second member it takes 5 minutes before it joins the cluster.**
- Hazelcast version 3.4.2, java version 1.8
- Using 2 members (one Windows 7, one Oracle Linux 7 running in VM)
- Not using multicast
- Members manually configured with IP addresses
- **Host names not registered in DNS (nor in /etc/hosts)**

When TcpIpConnectionManager calls InetAddress.getHostName() from assignSocketChannel(), then a reverse name lookup is initiated (since the host names are not registered in DNS, nor in /etc/hosts). getHostName blocks for ~5 seconds (before it falls back to returning the IP address as host name). This causes socket connection timeout in the main thread (TcpIpJoiner gives up connecting after 5 seconds by default). Merging with the other node happens after split brain recovery is done (default after 300 seconds). See log A.

When the host name is registered in DNS or /etc/hosts, then getHostName() returns immediately, so that no timeout occurs for the socket connection in the main thread. See log B.

Is it possible to avoid calling getHostName if IP addresses are configured, or at least increase the default socket connection timeout value to >5 seconds?

Log A (host names NOT registered in DNS): http://pastebin.com/StGfVL8q
Log B (host names registered in DNS): http://pastebin.com/VzExp9NF
