Scenario:
0) Hazelcast version 3.2
1) a map is backed by a map store which contains 250K entries (initial mode is set to EAGER)
2) hazelcast node starts up
3) hazelcast client connects to the node and requests all items from the map
4) another node starts up and joins the other node
5) 2nd client connect to the cluster (formed of these 2 nodes) and requests all items from the map as well
6) after a while the client throws an exception
See the source code of the test which replicates this issue in the comment below.

```
Exception in thread "Thread-5" com.hazelcast.spi.exception.RetryableHazelcastException: Map is not ready!!!
    at com.hazelcast.map.DefaultRecordStore.checkIfLoaded(DefaultRecordStore.java:134)
    at com.hazelcast.map.DefaultRecordStore.entrySetData(DefaultRecordStore.java:341)
    at com.hazelcast.map.operation.MapEntrySetOperation.run(MapEntrySetOperation.java:40)
    at com.hazelcast.spi.impl.BasicOperationService.processOperation(BasicOperationService.java:363)
    at com.hazelcast.spi.impl.BasicOperationService.processPacket(BasicOperationService.java:309)
    at com.hazelcast.spi.impl.BasicOperationService.access$400(BasicOperationService.java:102)
    at com.hazelcast.spi.impl.BasicOperationService$BasicOperationProcessorImpl.process(BasicOperationService.java:756)
    at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.process(BasicOperationScheduler.java:276)
    at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.doRun(BasicOperationScheduler.java:270)
    at com.hazelcast.spi.impl.BasicOperationScheduler$PartitionThread.run(BasicOperationScheduler.java:245)
    at ------ End remote and begin local stack-trace ------.(Unknown Source)
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.resolveResponse(BasicInvocation.java:836)
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.resolveResponseOrThrowException(BasicInvocation.java:769)
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.get(BasicInvocation.java:696)
    at com.hazelcast.spi.impl.BasicInvocation$InvocationFuture.get(BasicInvocation.java:674)
    at com.hazelcast.spi.impl.BasicOperationService.invokeOnPartitions(BasicOperationService.java:613)
    at com.hazelcast.spi.impl.BasicOperationService.invokeOnAllPartitions(BasicOperationService.java:549)
    at com.hazelcast.client.ClientEngineImpl.invokeOnAllPartitions(ClientEngineImpl.java:175)
    at com.hazelcast.client.AllPartitionsClientRequest.process(AllPartitionsClientRequest.java:29)
    at com.hazelcast.client.ClientEngineImpl$ClientPacketProcessor.processRequest(ClientEngineImpl.java:499)
    at com.hazelcast.client.ClientEngineImpl$ClientPacketProcessor.run(ClientEngineImpl.java:446)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:724)
    at com.hazelcast.util.executor.PoolExecutorThreadFactory$ManagedThread.run(PoolExecutorThreadFactory.java:59)
```