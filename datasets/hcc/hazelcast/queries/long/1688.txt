I'm testing Hazelcast to prove I can use it for following scenario:
- 2 nodes with Near Cache Enabled.
- One node goes down.
- Second node is trying to call containsKey on the map but the call hangs:
  Map<String, Integer> myMap=hz.getHazelcastInstance().getMap("MyMap");
  boolean contKey=myMap.containsKey("someKey");
  and after some time it throws exception:

Jan 31, 2014 9:59:22 PM com.hazelcast.spi.Invocation
WARNING: [10.128.33.190]:5700 [4c3yrb0xdv7k3c11c47aguom] While asking 'is-executing': InvocationImpl{ serviceName='hz:impl:mapService', op=ContainsKeyOperation{}, partitionId=65, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=60000, target=Address[10.128.33.122]:5700}
java.util.concurrent.TimeoutException
 at com.hazelcast.spi.impl.InvocationImpl$InvocationFuture.resolveResponse(InvocationImpl.java:450)
 at com.hazelcast.spi.impl.InvocationImpl$InvocationFuture.get(InvocationImpl.java:298)
 at com.hazelcast.spi.impl.InvocationImpl.isOperationExecuting(InvocationImpl.java:494)
 at com.hazelcast.spi.impl.InvocationImpl.access$1300(InvocationImpl.java:36)
 at com.hazelcast.spi.impl.InvocationImpl$InvocationFuture.waitForResponse(InvocationImpl.java:394)
 at com.hazelcast.spi.impl.InvocationImpl$InvocationFuture.get(InvocationImpl.java:297)
 at com.hazelcast.spi.impl.InvocationImpl$InvocationFuture.get(InvocationImpl.java:288)
 at com.hazelcast.map.proxy.MapProxySupport.containsKeyInternal(MapProxySupport.java:293)
 at com.hazelcast.map.proxy.MapProxyImpl.containsKey(MapProxyImpl.java:204)
 at ccio.img.MyServlet.proxyRequest(MyServlet.java:216)
and continue hanging for several minutes throwing the same exception.

My expectation was, if a node goes down, and the data is cached on all nodes, the command would just check a local node, and returns a true/false if the key is found or not, and it wouldn't wait for connection to the dead node.

What am I doing wrong? How can I achieve my goal?

Thank you,

Eugene
