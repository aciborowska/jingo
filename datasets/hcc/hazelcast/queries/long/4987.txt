`createCachingProvider` method creates new `TestHazelcastInstanceFactory` at each call and this causes this error:

```
Exception in thread "pool-2-thread-3" java.lang.IllegalStateException: Node factory is already created!
    at com.hazelcast.test.HazelcastTestSupport.createHazelcastInstanceFactory(HazelcastTestSupport.java:85)
    at com.hazelcast.test.HazelcastTestSupport.createHazelcastInstance(HazelcastTestSupport.java:80)
    at com.hazelcast.cache.CacheCreationTest.createCachingProvider(CacheCreationTest.java:106)
    at com.hazelcast.cache.CacheCreationTest.access$000(CacheCreationTest.java:39)
    at com.hazelcast.cache.CacheCreationTest$2.run(CacheCreationTest.java:94)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
Exception in thread "pool-2-thread-5" java.lang.IllegalStateException: Node factory is already created!
    at com.hazelcast.test.HazelcastTestSupport.createHazelcastInstanceFactory(HazelcastTestSupport.java:85)
    at com.hazelcast.test.HazelcastTestSupport.createHazelcastInstance(HazelcastTestSupport.java:80)
    at com.hazelcast.cache.CacheCreationTest.createCachingProvider(CacheCreationTest.java:106)
    at com.hazelcast.cache.CacheCreationTest.access$000(CacheCreationTest.java:39)
    at com.hazelcast.cache.CacheCreationTest$2.run(CacheCreationTest.java:94)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
```

Since this test is tagged with `@SlowTest`, it fails at nightly builds.
