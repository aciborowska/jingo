This issue was first raised in the mailing list here: https://groups.google.com/forum/#!topic/hazelcast/5Xv4-a5FuGs

In summary, attempting to remove/delete a nonexistent key multiple times from TransactionalMap under concurrent transactions causes Hazelcast to give the following error:

```
Oct 25, 2013 1:43:59 PM com.hazelcast.map.tx.TxnPrepareBackupOperation
SEVERE: [10.0.2.15]:5701 [dev] Lock is not owned by the transaction! Caller: 9d8ee543-b2da-4b84-87a6-01df3eb2cc8f, Owner: Owner: 9d8ee543-b2da-4b84-87a6-01df3eb2cc8f, thread-id: 55
com.hazelcast.transaction.TransactionException: Lock is not owned by the transaction! Caller: 9d8ee543-b2da-4b84-87a6-01df3eb2cc8f, Owner: Owner: 9d8ee543-b2da-4b84-87a6-01df3eb2cc8f, thread-id: 55
    at com.hazelcast.map.tx.TxnPrepareBackupOperation.run(TxnPrepareBackupOperation.java:45)
    at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:274)
    at com.hazelcast.spi.impl.OperationServiceImpl.runOperation(OperationServiceImpl.java:184)
    at com.hazelcast.spi.impl.Backup.run(Backup.java:87)
    at com.hazelcast.spi.impl.OperationServiceImpl.doRunOperation(OperationServiceImpl.java:274)
    at com.hazelcast.spi.impl.OperationServiceImpl.access$800(OperationServiceImpl.java:52)
    at com.hazelcast.spi.impl.OperationServiceImpl$RemoteOperationProcessor.run(OperationServiceImpl.java:744)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:724)
    at com.hazelcast.spi.impl.OperationServiceImpl$OperationThread.run(OperationServiceImpl.java:791)
```

Here is the code (as a TestNG test) that reproduces the error:

```
    @Test
    public void test() throws InterruptedException {
        HazelcastInstance instance = Hazelcast.newHazelcastInstance();
        final HazelcastInstance instance2 = Hazelcast.newHazelcastInstance();

        Thread t = new Thread() {
            @Override
            public void run() {
                for (int i = 0; i < 100; ++i) {
                    TransactionContext ctx = instance2.newTransactionContext();
                    ctx.beginTransaction();
                    TransactionalMap<Integer, Integer> txnMap = ctx.getMap("test");
                    txnMap.delete(1);
                    ctx.commitTransaction();
                }
            }
        };

        t.start();

        for (int i = 0; i < 100; ++i) {
            TransactionContext ctx = instance2.newTransactionContext();
            ctx.beginTransaction();
            TransactionalMap<Integer, Integer> txnMap = ctx.getMap("test");
            txnMap.delete(1);
            ctx.commitTransaction();
        }

        t.join();
    }
```

The error only occurs when there is >1 node in the cluster.  If the instantiation of `instance` is commented out so there is only 1 node, there is no error given.

The code causes Hazelcast to give the error for versions 3.0.1, 3.0.2, and 3.1.

Thanks
