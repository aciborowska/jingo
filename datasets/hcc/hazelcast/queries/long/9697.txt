Hi,
We are using Hazelcast 3.7.4 in embedded version in our application which is deployed on 8 JVM,s across 4 physical servers(2 instances on each server). When the application was deployed everything was fine and we did not see any problem. On app start up the logic will cache the values to the Hazelcast IMAP. After this there is no write to the cache again and all the other operations only read from this cache. 
Last time when we had to back out there were hung threads as we had updated the cache and we could see that when this was being replicated in the cluster there were hung threads. But that was the last time. 
This time there was no write operation on the cache after the onetime load on app start up. 
This is the 3rd version of Hazelcast (3.6.1, 3.6.3, 3.7.4) that we had to back out from production.
We need support on this issue as it is impacting production.

We started receiving the below exception in production continuously and then the CPU usage shooted to 100% up after this exceptions started showing up. The server CPU was being utilized at 100% for quite sometime which does not happen usually. We had to revert back Hazelcast implementation again.

```
com.hazelcast.core.OperationTimeoutException: MapSizeOperation invocation failed to complete due to operation-heartbeat-timeout. Current time:
 2017-01-18 15:02:56.396. Total elapsed time: 121000 ms. Last operation heartbeat: never. Last operation heartbeat from member: 2017-01-18 15:
02:43.810. Invocation{op=com.hazelcast.map.impl.operation.MapSizeOperation{serviceName='hz:impl:mapService', identityHash=1386528744, partitio
nId=9, replicaIndex=0, callId=0, invocationTime=1484773255395 (2017-01-18 15:00:55.395), waitTimeout=-1, callTimeout=60000, name=VALUE_M
AP}, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeoutMillis=60000, firstInvocationTimeMs=1484773255396, firstInvocationTime='2017-
01-18 15:00:55.396', lastHeartbeatMillis=0, lastHeartbeatTime='1969-12-31 18:00:00.000', target=[SERVER2]:5701, pendingResponse=
{VOID}, backupsAcksExpected=0, backupsAcksReceived=0, connection=Connection[id=12, /111.111.111.111:5700->/111.111.111.112:34519, endpoint=[SERVER2]
:5701, alive=true, type=MEMBER]}
        at com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.newOperationTimeoutException(InvocationFuture.java:150)
        at com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:98)
        at com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolveAndThrow(InvocationFuture.java:74)
        at com.hazelcast.spi.impl.AbstractInvocationFuture.get(AbstractInvocationFuture.java:158)
        at com.hazelcast.spi.impl.operationservice.impl.InvokeOnPartitions.retryFailedPartitions(InvokeOnPartitions.java:139)
        at com.hazelcast.spi.impl.operationservice.impl.InvokeOnPartitions.invoke(InvokeOnPartitions.java:70)
        at com.hazelcast.spi.impl.operationservice.impl.OperationServiceImpl.invokeOnAllPartitions(OperationServiceImpl.java:359)
        at com.hazelcast.map.impl.proxy.MapProxySupport.size(MapProxySupport.java:630)
        at com.hazelcast.map.impl.proxy.MapProxyImpl.size(MapProxyImpl.java:82)
```