Hi, 

When I configure a ttl of 0 (according to documentations means eternal cache), my cache is fully evcited all the time. I added  a test method to LocalRegionCacheTest class to make it reproducible: 

```
/**
 * According to documentation (http://docs.hazelcast.org/docs/3.3/manual/html-single/hazelcast-documentation.html)
 * 0 means eternal cache but instead we get evict everything all the time cache 
 *
 * time-to-live: Maximum time in seconds for each entry to stay in the map.
 * If it is not 0, entries that are older than and not updated for this time
 * are evicted automatically. Valid values are integers between 0 and Integer.MAX VALUE.
 * Default value is 0 and it means infinite. Moreover, if it is not 0, entries are
 * evicted regardless of the set eviction-policy.
 *
 *
 */
@Test
public void testCleanup() {
    HazelcastInstance instance = mock(HazelcastInstance.class);
    Config config = mock(Config.class);
    MapConfig mapConfig = mock(MapConfig.class);
    MaxSizeConfig maxSizeConfig = mock(MaxSizeConfig.class);

    when(config.findMapConfig(eq(CACHE_NAME))).thenReturn(mapConfig);
    when(mapConfig.getMaxSizeConfig()).thenReturn(maxSizeConfig);
    when(instance.getConfig()).thenReturn(config);

    when(maxSizeConfig.getSize()).thenReturn(10);
    when(mapConfig.getTimeToLiveSeconds()).thenReturn(0); // <- eternal cache

    LocalRegionCache localRegionCache = new LocalRegionCache(CACHE_NAME, instance, null, false);

    for (int i=1; i<=5; i++) {
        String key = "key" + i;
        String value = "value" + i;
        localRegionCache.put(key, value, value);
    }
    assertEquals(5, localRegionCache.size());
    localRegionCache.cleanup();
    assertEquals(5, localRegionCache.size());

    verify(instance).getConfig();
    verify(config).findMapConfig(eq(CACHE_NAME));
    verify(mapConfig).getMaxSizeConfig();
    verify(mapConfig).getTimeToLiveSeconds();
    verify(maxSizeConfig).getSize();
    verifyNoMoreInteractions(instance, config, mapConfig, maxSizeConfig);
}
```
