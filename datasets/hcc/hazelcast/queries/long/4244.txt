The problem seems to be in loadAll method in  "com.hazelcast.queue.impl.QueueStoreWrapper"

```
@Override
    public Map<Long, Data> loadAll(Collection<Long> keys) {
        if (enabled) {
            final Map<Long, ?> map = store.loadAll(keys);
            if (map == null) {
                return Collections.emptyMap();
            }
            final Map<Long, Data> dataMap = new HashMap&lt;Long, Data>(map.size());
            if (binary) {
                for (Map.Entry&lt;Long, ?> entry : map.entrySet()) {
                    byte[] dataBuffer = (byte[]) entry.getValue();
                    ObjectDataInput in = serializationService.createObjectDataInput(dataBuffer);
                    Data data = new Data();
                    try {
                        data.readData(in);
                    } catch (IOException e) {
                        throw new HazelcastException(e);
                    }
                    dataMap.put(entry.getKey(), data);
                }
                return (Map<Long, Data>) map; //#### THIS STATEMENT SHOULD BE REMOVED  ###
            } else {
                for (Map.Entry&lt;Long, ?> entry : map.entrySet()) {
                    dataMap.put(entry.getKey(), serializationService.toData(entry.getValue()));
                }
            }
            return dataMap;
        }
        return null;
    }
```
