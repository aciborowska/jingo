Hi Dev Team,

HC 3.1.7 appears to be leaking memory in SecondsBasedEntryTaskScheduler when idle timeout is enabled on a map. The issue is found in methods that cancel a scheduled entry. If no keys have left for the specific second, they [try to] cancel  scheduled execution, but forget to also remove an entry for that second from the scheduledEntries map. Since scheduledEntries is a ConcurrentMap of ConcurrentMapS, on a busy system the memory leak is dramatic.

At a glance, the following methods seem to have the issue:
<i>
public ScheduledEntry<K, V> cancel(K key);
public ScheduledEntry<K, V> cancelComparingTimeKey(K key);
private void removeKeyFromSecond(Object key, Integer existingSecond)
</i>

Additional (although more theoretical) leak can occur in method 
<i>private void schedule(final Integer second, final int delaySeconds)</i>
if the schedule() call fails, because an entry have already been allocated in the scheduledEntries map, but will never be deleted.

![ff1](https://cloud.githubusercontent.com/assets/7394649/2789269/9baa4118-cbaa-11e3-8f62-87da86441d8a.png)
![ff2](https://cloud.githubusercontent.com/assets/7394649/2789271/a2c73942-cbaa-11e3-93b8-4d295f845751.png)
