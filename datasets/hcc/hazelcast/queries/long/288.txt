The 2.3 documentation mentions this for map:

``` xml
        <!--
            Maximum number of seconds for each entry to stay idle in the map. Entries that are
            idle(not touched) for more than <max-idle-seconds> will get
            automatically evicted from the map.
            Entry is touched if get, put or containsKey is called.
            Any integer between 0 and Integer.MAX_VALUE.
            0 means infinite. Default is 0.
        -->
        <max-idle-seconds>0</max-idle-seconds>
```

Though it says that "Entry is touched if containsKey is called", this doesn't seem to happen. In my usage scenario I need to store the entry if it doesn't exist and reset the idle time counter if it exists. Currently I am doing:

``` java
if (map.get(key) == null) {
  map.set(key, value, 0L, TimeUnit.SECONDS);
}
```

Since I am not making use of the value returned by map.get() in this case map.containsKey() would possibly give me better throughput:

``` java
if (!map.containsKey(key)) {
  map.set(key, value, 0L, TimeUnit.SECONDS);
}
```

If this is a code issue then am I correct in saying that this is a small fix inside CMap.java?

``` java
    public boolean containsKey(Request req) {
        Record record = getRecord(req);
        if (record == null) {
            return false;
        } else {
            if (record.isActive() && record.isValid()) {
+               record.setLastAccessed();
                return record.valueCount() > 0;
            }
        }
        return false;
    }
```

Thanks,
-Ajit
