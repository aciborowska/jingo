This is an issue raised on the Spring Boot tracker for which I think there's nothing we can do. Spring Boot auto-configures hazelcast since it's not specific to caching. It turns you might use hazelcast for that as well.

If you chose to use JCache, then we bootstrap via the standard `JCache` API (obviously) and doing so leads to Hazelcast starting again. I think there should be a way for Hazelcast to figure out that an `HazelcastInstance` has already been started on this `ClassLoader` and that configuration URI and reuse that rather than creating a fresh one. As a user of the `JCache` API there's not much we can do.

We already have a [hazelcast specific hack](https://github.com/spring-projects/spring-boot/blob/master/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/cache/JCacheCacheConfiguration.java#L126) because Hazelcast' doesn't honour the URI parameter of the `CacheProvider#getCacheManager` properly.

You can easily reproduce using [this sample](https://github.com/snicoll-scratches/test-hazelcast-jcache): uncomment the `spring.cache.type` property in `application.properties` and you'll see two members starting in the cluster.