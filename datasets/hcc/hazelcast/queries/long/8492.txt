An `IllegalThreadStateException` may be thrown sometimes on a member of a cluster with 2 or more members when a hazelcast client creates a new map with configured indexes. This exception is not thrown when indexes are created programmatically.
Thanks @noctarius for reporting this with the following reproducer:

```
import com.hazelcast.client.HazelcastClient;
import com.hazelcast.config.Config;
import com.hazelcast.config.MapConfig;
import com.hazelcast.config.MapIndexConfig;
import com.hazelcast.config.XmlConfigBuilder;
import com.hazelcast.core.Hazelcast;
import com.hazelcast.core.HazelcastInstance;
import com.hazelcast.core.IMap;
import java.util.List;

public class Test {
    public static void main(String[] args) {
        Config config = new XmlConfigBuilder().build();

        MapConfig mapConfig = config.getMapConfig("test");
        List<MapIndexConfig> mapIndexConfigs = mapConfig.getMapIndexConfigs();

        MapIndexConfig mapIndexConfig = new MapIndexConfig();
        mapIndexConfig.setAttribute("foo");
        mapIndexConfig.setOrdered(true);
        mapIndexConfigs.add(mapIndexConfig);

        Hazelcast.newHazelcastInstance(config);
        Hazelcast.newHazelcastInstance(config);
        HazelcastInstance hazelcastInstance = HazelcastClient.newHazelcastClient();
        IMap<String, String> test = hazelcastInstance.getMap("test");

        test.put("foo", "bar");
    }
}
```
