Hi,

I am using version 3.5.1

Even when the app is not doing anything, cpu consumption is very high. After profiling with Yourkit, most of the cpu (upto 70%) is consumed by thread named ".hazelcast-wm.esnureInstance"
This method seems to be using maximum cpu.

``` java
com.hazelcast.web.ClusteredSessionService$1.run() ClusteredSessionService.java
```

Any clues on how to reduce the cpu usage?

Thanks,
Krishna

The instance is configured using the following code.

``` java
    @Bean
    public HazelcastInstance hazelcastInstance() {
        log.debug("Configuring Hazelcast");
        Config config = new Config();
        config.setInstanceName("instanceName");
        config.getNetworkConfig().setPort(5701);
        config.getNetworkConfig().setPortAutoIncrement(true);

        if (env.acceptsProfiles(Constants.SPRING_PROFILE_DEVELOPMENT)) {
            System.setProperty("hazelcast.local.localAddress", "127.0.0.1");

            config.getNetworkConfig().getJoin().getAwsConfig().setEnabled(false);
            config.getNetworkConfig().getJoin().getMulticastConfig().setEnabled(false);
            config.getNetworkConfig().getJoin().getTcpIpConfig().setEnabled(false);
        }

        config.getMapConfigs().put("default", initializeDefaultMapConfig());
        config.getMapConfigs().put("com.company.app.domain.*", initializeDomainMapConfig());
        config.getMapConfigs().put("my-sessions", initializeClusteredSession());

        hazelcastInstance = HazelcastInstanceFactory.newHazelcastInstance(config);

        return hazelcastInstance;
    }

    private MapConfig initializeDefaultMapConfig() {
        MapConfig mapConfig = new MapConfig();
        mapConfig.setBackupCount(0);
        mapConfig.setEvictionPolicy(EvictionPolicy.LRU);
        mapConfig.setMaxSizeConfig(new MaxSizeConfig(0, MaxSizeConfig.MaxSizePolicy.USED_HEAP_SIZE));
        mapConfig.setEvictionPercentage(25);
        return mapConfig;
    }
```
