For v3.5:
When an executeOnKey() operation reaches `hazelcast.operation.call.timeout.millis`value (an example operation is sleeping inside a simple entryProcessor() ) :
Node side, it is asked if operation is still executing:

```
Jun 22, 2015 3:55:51 PM com.hazelcast.spi.impl.operationservice.impl.Invocation
WARNING: [192.168.2.37]:5701 [sertug] [3.5] No response for 4002 ms. InvocationFuture{invocation=Invocation{ serviceName='hz:impl:mapService', op=GetOperation{numbers}, partitionId=31, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=2000, target=Address[192.168.2.37]:5701, backupsExpected=0, backupsCompleted=0}, response=null, done=false}
Jun 22, 2015 3:55:51 PM com.hazelcast.spi.impl.operationservice.impl.Invocation
WARNING: [192.168.2.37]:5701 [sertug] [3.5] Asking if operation execution has been started: Invocation{ serviceName='hz:impl:mapService', op=GetOperation{numbers}, partitionId=31, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=2000, target=Address[192.168.2.37]:5701, backupsExpected=0, backupsCompleted=0}
Jun 22, 2015 3:55:51 PM com.hazelcast.spi.impl.operationservice.impl.Invocation
WARNING: [192.168.2.37]:5701 [sertug] [3.5] 'is-executing': true -> Invocation{ serviceName='hz:impl:mapService', op=GetOperation{numbers}, partitionId=31, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=2000, target=Address[192.168.2.37]:5701, backupsExpected=0, backupsCompleted=0}
```

But on the client side, operationTimeoutException is thrown:

```
Exception in thread "main" com.hazelcast.core.OperationTimeoutException: No response for 4000 ms. Aborting invocation! Invocation{ serviceName='hz:impl:mapService', op=EntryOperation{}, partitionId=31, replicaIndex=0, tryCount=250, tryPauseMillis=500, invokeCount=1, callTimeout=2000, target=Address[192.168.2.37]:5701, backupsExpected=0, backupsCompleted=0} No response has been received!  backups-expected:0 backups-completed: 0
    at com.hazelcast.spi.impl.operationservice.impl.Invocation.newOperationTimeoutException(Invocation.java:491)
    at com.hazelcast.spi.impl.operationservice.impl.IsStillRunningService$IsOperationStillRunningCallback.setOperationTimeout(IsStillRunningService.java:224)
    at com.hazelcast.spi.impl.operationservice.impl.IsStillRunningService$IsOperationStillRunningCallback.onResponse(IsStillRunningService.java:212)
    at com.hazelcast.spi.impl.operationservice.impl.InvocationFuture$1.run(InvocationFuture.java:135)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:745)
    at com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:76)
    at com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:92)
    at ------ End remote and begin local stack-trace ------.(Unknown Source)
    at com.hazelcast.client.spi.impl.ClientInvocationFuture.resolveResponse(ClientInvocationFuture.java:147)
    at com.hazelcast.client.spi.impl.ClientInvocationFuture.get(ClientInvocationFuture.java:114)
    at com.hazelcast.client.spi.impl.ClientInvocationFuture.get(ClientInvocationFuture.java:89)
    at com.hazelcast.client.spi.ClientProxy.invoke(ClientProxy.java:130)
    at com.hazelcast.client.proxy.ClientMapProxy.executeOnKey(ClientMapProxy.java:939)
    at TimeoutClient.main(TimeoutClient.java:22)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)
```
