Hi,

This issue emanates from a [discussion on the mailing list](https://groups.google.com/d/topic/hazelcast/LGeczYEr-Jo/discussion).

Basically, my initial problem, which looks like a bug to me, is that if I have a Hazelcast member node with a ClientListener and a HazelcastClient node that connects to it, if things happen, in this order:
- client disconnects
- client listener removed from member node
- member shutdown

Then I would expect that if the member receive the disconnection event before shutdown, then it will execute the client listener code before shutdown is actually done.

What happens in my use case, is that the client listener is actually executed during the shutdown and finishes after the shutdown has happened, and since it relies on the member node to be up, exceptions are thrown like this one:

```
sample-0 2016/05/25 09:32:08,638 GMT+0200 SEVERE [com.hazelcast.spi.impl.eventservice.impl.EventServiceImpl] : [127.0.0.1]:7900 [default-sample] [3.6.2] hz._hzInstance_1_default-sample.event-5 caught an exception while processing task:com.hazelcast.spi.impl.eventservice.impl.LocalEventDispatcher@1d172ac0
com.hazelcast.core.HazelcastInstanceNotActiveException: Hazelcast instance is not active!
    at com.hazelcast.spi.AbstractDistributedObject.throwNotActiveException(AbstractDistributedObject.java:85)
    at com.hazelcast.spi.AbstractDistributedObject.lifecycleCheck(AbstractDistributedObject.java:80)
    at com.hazelcast.spi.AbstractDistributedObject.getNodeEngine(AbstractDistributedObject.java:74)
    at com.hazelcast.concurrent.lock.LockProxy.unlock(LockProxy.java:106)
    at org.ow2.petals.registry_overlay.core.ClientListener.clientDisconnected(ClientListener.java:89)
    at com.hazelcast.client.impl.ClientEngineImpl.dispatchEvent(ClientEngineImpl.java:293)
    at com.hazelcast.client.impl.ClientEngineImpl.dispatchEvent(ClientEngineImpl.java:99)
    at com.hazelcast.spi.impl.eventservice.impl.LocalEventDispatcher.run(LocalEventDispatcher.java:56)
    at com.hazelcast.util.executor.StripedExecutor$Worker.process(StripedExecutor.java:187)
    at com.hazelcast.util.executor.StripedExecutor$Worker.run(StripedExecutor.java:171)
```

So, in the same way that shutdown (contrary to terminate) waits for partition operation to finish, IÂ don't see why the node wouldn't wait for event to be processed. It could, for example, stop accepting new event to process, but finish processing the previous ones, or something like that.

Thanks for your help :)
