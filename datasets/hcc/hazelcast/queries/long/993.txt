Test to reproduce the problem

```
    @Test
    public void testError2() throws InterruptedException {
        String mapName = "map";
        long key = 1L;
        String value = "value";

        HazelcastInstance instance1 = Hazelcast.newHazelcastInstance();
        HazelcastInstance instance2 = Hazelcast.newHazelcastInstance();

        CountingEntryListener<Object, Object> listener = new CountingEntryListener<Object, Object>();

        MultiMap<Object, Object> map = instance1.getMultiMap(mapName);
        map.addEntryListener(listener, true);

        TransactionContext ctx1 = instance2.newTransactionContext();
        ctx1.beginTransaction();
        ctx1.getMultiMap(mapName).put(key, value);
        ctx1.commitTransaction();


        TransactionContext ctx2 = instance2.newTransactionContext();
        ctx2.beginTransaction();
        ctx2.getMultiMap(mapName).remove(key, value);
        ctx2.commitTransaction();

        Thread.sleep(100);

        assertEquals(1, listener.addedCount);
        assertEquals(1, listener.removedCount);
    }

    private class CountingEntryListener<K,V> extends EntryAdapter<K,V> {
        int addedCount = 0;
        int removedCount = 0;

        @Override
        public void entryAdded(EntryEvent<K, V> event) {
            addedCount++;
        }

        @Override
        public void entryRemoved(EntryEvent<K, V> event) {
            removedCount++;
        }
    }
```
