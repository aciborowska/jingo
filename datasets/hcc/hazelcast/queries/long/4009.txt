See test:

``` java
@Before
public void before() {
    Config config = getConfig();
    Hazelcast.newHazelcastInstance(config);
}

@After
public void after() {
    HazelcastClient.shutdownAll();
    Hazelcast.shutdownAll();
}

@org.junit.Test
public void testServer() {
    Config config = getConfig();

    for (int i = 0; i < 3; i++) {
        HazelcastInstance instance = Hazelcast.newHazelcastInstance(config);
        CachingProvider provider = HazelcastServerCachingProvider.createCachingProvider(instance);
        CacheManager cacheManager = provider.getCacheManager();

        Cache<Object, Object> cache = cacheManager.getCache("test");
        Assert.assertNotNull("Cache cannot be retrieved on instance: " + (i + 1), cache);
    }
}

@org.junit.Test
public void testClient() {
    for (int i = 0; i < 3; i++) {
        HazelcastInstance client = HazelcastClient.newHazelcastClient();
        CachingProvider provider = HazelcastClientCachingProvider.createCachingProvider(client);
        CacheManager cacheManager = provider.getCacheManager();

        Cache<Object, Object> cache = cacheManager.getCache("test");
        Assert.assertNotNull("Cache cannot be retrieved on client: " + (i + 1), cache);
    }
}

private Config getConfig() {
    Config config = new Config();
    JoinConfig join = config.getNetworkConfig().getJoin();
    join.getMulticastConfig().setEnabled(false);
    join.getTcpIpConfig().setEnabled(true).addMember("127.0.0.1");

    config.addCacheConfig(new CacheSimpleConfig().setName("test"));
    return config;
}
```
