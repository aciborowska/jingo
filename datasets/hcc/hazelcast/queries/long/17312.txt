When trying to use JCache, users need to provide a `CachingProvider` implementation of their choice and it turns out it's one of the below internal classes residing in the `com.hazelcast.cache.impl` package:
- `com.hazelcast.cache.impl.HazelcastServerCachingProvider`
-  `com.hazelcast.cache.impl.HazelcastClientCachingProvider`

And we should not be encouraging users to use internal classes.

What's more, it looks like it's standard practice - check [this link](https://github.com/search?q=spring.cache.jcache.provider%3Dcom.hazelcast.cache.impl.HazelcastServerCachingProvider+extension%3Aproperties&type=Code&ref=advsearch&l=&l=).

Some more details:

> Starting with 4.x, when you call Caching.getCachingProvider("com.hazelcast.cache.HazelcastCachingProvider"), it returns the client provider by default since now the client classes are included within the Hazelcast package.
> 
> I guess that is why we need to specify com.hazelcast.cache.impl.HazelcastServerCachingProvider as the provider explicitly.

[source](https://github.com/hazelcast-guides/caching-springboot-jcache/issues/4#issuecomment-667885350)

----

Related: https://github.com/hazelcast-guides/caching-springboot-jcache/issues/4#issuecomment-668061838