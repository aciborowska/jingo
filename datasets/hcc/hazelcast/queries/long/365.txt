I am attempting to get Hazelcast instances to find eachother in a tomcat deployment with 2 servers.
- hazelcast-2.3.1.jar is in the WEB-INF/lib folder of my class path.
- tomcat 6.0.35

I am using TCP/IP configuration - programmatically configuring the config:

```
private static void setupNetworkConfig( Config c ) {
    NetworkConfig nc = c.getNetworkConfig();

    nc.getJoin().getMulticastConfig().setEnabled(false);
    TcpIpConfig tc = nc.getJoin().getTcpIpConfig();
    tc.setEnabled(true);
    tc.addMember("192.168.25.105");
    tc.addMember("192.168.25.107");
    Interfaces intf = nc.getInterfaces();
    intf.setEnabled(true);
    try {
        String hostAddr = InetAddress.getLocalHost().getHostAddress();
        intf.addInterface( hostAddr);
    } catch (UnknownHostException e) {
        // TODO Auto-generated catch block
        e.printStackTrace();
    }

}
```

Hazelcast finds the local address (192.168.25.105:5701) but not the peer instance on the other tomcat server. Log as follows:

26-Nov-2012 1:17:10 PM com.hazelcast.nio.SocketConnector
INFO: [192.168.25.105]:5701 [dev] Could not connect to: /192.168.25.107:5701. Reason: ConnectException[Connection timed out: connect]

However, if I start Hazelcast on 192.168.25.107 with a Java standalone program, there are no issues.

Furthermore, using a simple program,  from 192.168.25.105, I can open a socket to 192.168.25.107:5701 IF hazelcast is running on a standalone program. But, if hazelcast is started as part of a Tomcat web app, there is a socket timeout. 

Is there some documentation I am missing to configure Tomcat (or perhaps Hazelcraft) so that there are no socket timeouts? 

Thanks! 
