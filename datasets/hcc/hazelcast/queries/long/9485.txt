Hi,
We are using Hazelcast 3.7.3 (Embedded) in one of the implementations. These is deployed on 8 JVM's across 4 physical servers (2 JVM on each server). We had implemetned 3.6.1 in the same environment with multicast disabled and TcpIp enabled but had to back out due to hung threads on hazelcast operations. we are now in process of implementing the 3.7.3 as suggested in the open forums by hazelcast team. 
When we are trying to implement 3.7.3 with same configuration in our staging environment, we are getting the below exception on server start up. (the hazelcast reference is used to cache certain values on server start up.)

Below are the exception details and configuration details for Hazlecast. Please help us understand what is causing this class not found exception even though the class is available in the jar and other classes from the jar are laoded.

```
2016-12-15 00:35:56 ERROR OperationRunnerImpl:50 - [ts115001.mycom.com]:5700 [Project1] [3.7.3] Problem while reading DataSerializable, namespace: 0, id: 0, class: '
com.hazelcast.cluster.impl.operations.JoinCheckOperation', exception: com.hazelcast.cluster.impl.operations.JoinCheckOperation
com.hazelcast.nio.serialization.HazelcastSerializationException: Problem while reading DataSerializable, namespace: 0, id: 0, class: 'com.hazelcast.cluster.impl.operati
ons.JoinCheckOperation', exception: com.hazelcast.cluster.impl.operations.JoinCheckOperation
        at com.hazelcast.internal.serialization.impl.DataSerializableSerializer.rethrowReadException(DataSerializableSerializer.java:165)
        at com.hazelcast.internal.serialization.impl.DataSerializableSerializer.readInternal(DataSerializableSerializer.java:154)
        at com.hazelcast.internal.serialization.impl.DataSerializableSerializer.read(DataSerializableSerializer.java:104)
        at com.hazelcast.internal.serialization.impl.DataSerializableSerializer.read(DataSerializableSerializer.java:54)
        at com.hazelcast.internal.serialization.impl.StreamSerializerAdapter.read(StreamSerializerAdapter.java:48)
        at com.hazelcast.internal.serialization.impl.AbstractSerializationService.toObject(AbstractSerializationService.java:172)
        at com.hazelcast.spi.impl.NodeEngineImpl.toObject(NodeEngineImpl.java:307)
        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:381)
        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:117)
        at com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:102)
Caused by: java.lang.ClassNotFoundException: com.hazelcast.cluster.impl.operations.JoinCheckOperation
        at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1858)
        at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1701)
        at com.hazelcast.nio.ClassLoaderUtil.tryLoadClass(ClassLoaderUtil.java:151)
        at com.hazelcast.nio.ClassLoaderUtil.loadClass(ClassLoaderUtil.java:120)
        at com.hazelcast.nio.ClassLoaderUtil.newInstance(ClassLoaderUtil.java:73)
        at com.hazelcast.internal.serialization.impl.DataSerializableSerializer.readInternal(DataSerializableSerializer.java:148)
```

Configuration details 
```
`//new config object
		Config cfg = new Config();

		//setting the cache cluster name
		GroupConfig grpCfg = new GroupConfig();
		grpCfg.setName(config.getCacheClusterName());
		cfg.setGroupConfig(grpCfg);		

		MapConfig mapConfig = cfg.getMapConfig("*");
		mapConfig.setMaxIdleSeconds(0);
		mapConfig.setTimeToLiveSeconds(0);
		mapConfig.setEvictionPolicy(EvictionPolicy.LFU);
		mapConfig.getMaxSizeConfig().setMaxSizePolicy(MaxSizePolicy.PER_NODE).setSize(Constants.INT_10000);
		//setting the percentage for eviction
		mapConfig.setEvictionPercentage(Constants.INT_10);
		
		
		//setting the network configuration
		NetworkConfig netCfg = cfg.getNetworkConfig();
		netCfg.setPort(5700).setPortAutoIncrement(true);
		netCfg.setReuseAddress(true);
		netCfg.setPortCount(4);
		
		JoinConfig joinCfg = netCfg.getJoin();
		
		joinCfg.getMulticastConfig().setEnabled(false);
		joinCfg.getTcpIpConfig().setEnabled(true);
		
		if(cacheHostMembers!= null && cacheHostMembers.length()>0){
			StringTokenizer tokens = new StringTokenizer(cacheHostMembers, Constants.STR_COMMA);
			while(tokens.hasMoreTokens()){
				joinCfg.getTcpIpConfig().addMember((String) tokens.nextElement());
			}
		}`
```