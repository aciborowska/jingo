I'm having problem with corrupted numeric value after increment operation over memcached protocol. 

Client-side is PHP code and it looks like, that internal Hazelcast numeric data type is incompatibile with this generated by PHP or there is some error in memcached interface in Hazelcast.

Example code:
```php
<?php
$m = new Memcached();
$m->addServer('192.168.0.11', 5701);
$m->set('counter', 0);
echo "resultCode: "  . $m->getResultCode() . "\n";
echo "value after set is: " . var_dump($m->get('counter')) . "\n";
for ($x = 0; $x < 20; $x++) {
   $m->increment('counter');
   echo "value after increment is: " . var_dump($m->get('counter')) . "\n";
}
?>
```
And the result:
```
resultCode: 0
int(0)
value after set is:
int(1)
value after increment is:
int(2)
value after increment is:
int(3)
value after increment is:
int(4)
value after increment is:
int(5)
value after increment is:
int(6)
value after increment is:
int(7)
value after increment is:
int(8)
value after increment is:
int(9)
value after increment is:
int(0)
value after increment is:
int(0)
value after increment is:
int(0)
value after increment is:
int(0)
value after increment is:
int(0)
value after increment is:
int(0)
value after increment is:
int(0)
value after increment is:
int(0)
value after increment is:
int(0)
value after increment is:
int(0)
value after increment is:
int(0)
```
As you can see in 10th iteration it returns 0 instead of 10;

I've tried to change counter value to string, played trying to use pack() function to binary-encode data on first set, but with no success.

Example output after changing counter value in first set to '1000000':
```
resultCode: 0
string(7) "1000000"
value after set is:
string(3158065) "0001"
value after increment is:
string(1) ""
value after increment is:
string(1) ""
value after increment is:
string(1) ""
value after increment is:
string(1) ""
value after increment is:
string(1) ""
value after increment is:
string(1) ""
value after increment is:
string(1) ""
value after increment is:
string(1) ""
value after increment is:
string(1) "
value after increment is:
string(1) "     "
value after increment is:
string(1) "
"
value after increment is:
string(1) "
           "
value after increment is:
string(1) ""
value after increment is:
"tring(1) "
value after increment is:
string(1) ""
â´âââ¤â âÂ°âââź ââźââźââââźâ ââ˝:
â˝ââźââźÂą(1) ""
value after increment is:
string(1) ""
value after increment is:
string(1) ""
value after increment is:
string(1) ""
value after increment is:
```

In this case data is corrupted immediately after first increment operation 

Any advices how to solve this problem or how to change data encoding to match that used internally by hazelcast?
