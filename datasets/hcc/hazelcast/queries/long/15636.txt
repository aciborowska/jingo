Start a single member with this configuration:

```
Config config = new Config();
config.getManagementCenterConfig().setEnabled(true).setUrl("http://localhost:8083/hazelcast-mancenter");
config.getAdvancedNetworkConfig()
        .setEnabled(true)
        .setMemberEndpointConfig(new ServerSocketEndpointConfig().setPort(5701))
        .setClientEndpointConfig(new ServerSocketEndpointConfig().setPort(5703))
        .setRestEndpointConfig(new RestServerEndpointConfig()
                .setPort(5702)
                .enableAllGroups());
```

Send this request to the member:

```
curl -v  http://localhost:5702/hazelcast/rest/cluster
```

Result is:

```
*   Trying ::1...
* TCP_NODELAY set
* Connected to localhost (::1) port 5702 (#0)
> GET /hazelcast/rest/cluster HTTP/1.1
> Host: localhost:5702
> User-Agent: curl/7.54.0
> Accept: */*
> 
< HTTP/1.1 200 OK
< Content-Length: 144
< 


Members {size:1, ver:1} [
        Member [192.168.1.21]:5701 - 926c9885-3a55-4569-88d4-5fe1c72ebf18 this
]

ConnectionCount: 0
AllConnectionCount: 1
* Connection #0 to host localhost left intact
```

So, we should expect at least `144` bytes to be transferred as outbound traffic from the member. But, when we query for it on MC by executing this:

```
curl -v http://localhost:8083/hazelcast-mancenter/rest/clusters/dev/state > output.json
```

We get the following output:

```
"inboundNetworkStats": {
  "bytesTransceived": {
    "MEMCACHE": 0,
    "REST": 100,
    "WAN": 0,
    "CLIENT": 0,
    "MEMBER": 0
  }
},
"outboundNetworkStats": {
  "bytesTransceived": {
    "MEMCACHE": 0,
    "REST": 100,
    "WAN": 0,
    "CLIENT": 0,
    "MEMBER": 0
  }
}
```

And, when I continue to send the same request, both values keep increasing by `100` each time I send a new request. This might be an issue on Management Center side, but as the logic in MC side is much simpler, I suspect it's on IMDG side.