Hi, Developers of hazelcast/hazelcast,

I am writing to report a race issue on use of ConcurrentHashMap. The issue is reported by our tool in an automatic way. Although manually confirmed, it would be a false positive, given we do not know the specification of the program. We would very appreciate if you could check below for details and confirm with us whether it is a real problem. For more information, please refer to our website: http://sav.sutd.edu.sg/?page_id=2845

File: hazelcast/hazelcast/hazelcast/src/main/java/com/hazelcast/cache/impl/AbstractCacheService.java
Location: Line (453/450, 461)
Description: 
The get-put operations (in line 450, 453) are guarded by the lock "resources". If the intention is to guarantee atomicity of the get-put operation, then the remove operation in line 461 may break this atomicity. Relying on the ConcurrentHashMap to ensure exclusive access is dangerous since ConcurrentHashMap has no guarantee of exclusive access.
