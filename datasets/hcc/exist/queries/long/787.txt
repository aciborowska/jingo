The new range index appears to work without problems with high-range characters.

The ngram index chops up such characters in two, but due to the way ngram matches occur, this does not lead to problems with ordinary searches, only to searches using wildcards, for then two dots will represent one character.

The lucene index drops certain high-range characters, but it is not clear to me what the pattern is. The SMP characters

```
𐀀    &#x10000;
𐌑    &#x10311;
𐐥    &#x10425;
𐩨    &#x10a68;
𐰀    &#x10c00;
```

work fine, but the following do not:

```
𐄉    &#x10109;
𐆊    &#x1018a;
🕐    &#x1f550;
😀    &#x1f600;
𝌆    &#x1d306;
🔋    &#x1f50b;
```

Number 1 and 2 in the second list occur between number 1 and 2 in the first list.

With SIP characters, there is the same situation: 

```
𠀀    &#x20000;
𠄩    &#x20129;
𣜕    &#x23715;
𩨻    &#x29a3b;
𫚤    &#x2b6a4;
```

are indexed, but 

```
𬵂    &#x2cd42;
𫠷    &#x2b837;
𬹩    &#x2b9ef;
𬹩    &#x2ce69;
```

are not.

The new range index shows that this can be done. The ngram index is old, which probably explains the situation. Whether lucene-internal reasons are behind the dropping of characters is unclear to me.
