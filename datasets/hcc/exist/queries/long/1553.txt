### What is the problem

Another arrow operator expression is failing, whereas the non-arrow operator version works. For example, the following expression throws an error:

```xquery
xquery version "3.1";

(1, 2, 3) => string-join("-")
```

The error from eXist:

> err:XPTY0004 xs:integer(1) is not a sub-type of xs:string

When expressing the query without the arrow operator, eXist does not throw an error:

```xquery
xquery version "3.1";

string-join((1, 2, 3), "-")
```

I'm not sure if the underlying problem is some kind of type promotion failure when using the arrow operator? 

Also, on a possibly related point (?), in version 3.1 of XQuery F&O spec appears changed the function signature for the first parameter of `fn:string-join()`, relaxing it from `xs:string*` to  `xs:anyAtomicType*`. eXist still restricts this parameter to `xs:string*`. See https://www.w3.org/TR/xpath-functions-31/#func-string-join vs. https://www.w3.org/TR/xpath-functions-30/#func-string-join vs. https://www.w3.org/TR/xpath-functions/#func-string-join vs. https://github.com/eXist-db/exist/blob/develop/src/org/exist/xquery/functions/fn/FunStringJoin.java#L58-L60. 

### What did you expect

The expected result, as produced correctly by BaseX and Saxon (and by eXist when using the variant of the query without the arrow operator), is "1-2-3".

### Describe how to reproduce or add a test

See the sample code above.

### Context information

- eXist-db version + Git Revision hash: eXist-db 3.5.0-SNAPSHOT+0875a60cc
- Java version: jdk1.8.0_144
- Operating system: macOS 10.12.6
- 32 or 64 bit: 64 bit
- Any custom changes in e.g. conf.xml: none
