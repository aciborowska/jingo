eXist-db 4.4.0 (build Sept 21)

Code:
```xquery
let $myXml      := doc(xmldb:store('/db/apps', 'ttt.xml', <x><y k1="a" k2="1"/><y k1="a" k2="2"/></x>))/x
let $myMap      := map:new((map:entry('a', '1'), map:entry('b', '2')))

return
    $myXml//y[@k1][@k2 = map:get($myMap, @k1)]
```

Yields: 

_err:XPTY0004 checking function parameter 2 in call map:get($myMap, untyped-value-check[xs:anyAtomicType, attribute::{}k1]): XPTY0004: The actual cardinality for parameter 2 does not match the cardinality declared in the function's signature: map:get($map as map(*), $key as xs:anyAtomicType) item()*. Expected cardinality: exactly one, got 2. [at line 6, column 42)_

Expected: `<y k1="a" k2="1"/>`

There are two ways to work around this:

Change order of `@k2` and `map:get()` like so:
`    $myXml//y[@k1][map:get($myMap, @k1) = @k2]`

or work from an in memory xml fragment.

So there seems to be a context problem with database nodes and the map function. The down side of both workarounds is that they skip using the index if you have any on `@k2`.