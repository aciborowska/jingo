### What is the problem

A query which returns expected results with in-memory node returns incorrect results when stored to the database. The problem is manifest when performing a node test using the following-sibling axis against the on-disk data.

My test query creates an in-memory node, stores it on-disk, then performs a series of queries against the data in-memory and on-disk. The queries select a node, traverse the *-sibling XPath axes, and apply node tests. The results become inconsistent when the query performs a node test with a named namespace on the following-sibling axis.

### What did you expect

I expected queries on in-memory and on-disk data to perform identically, and for queries involving namespaces and the following-sibling axis to return expected results. 

### Describe how to reproduce or add a test

My test query is as follows:

```xquery
xquery version "3.1";

declare namespace tei="http://www.tei-c.org/ns/1.0";

let $in-mem := 
    <TEI xmlns="http://www.tei-c.org/ns/1.0">
        <div>
            <div xml:id="d1"/>
            <div xml:id="d2"/>
            <div xml:id="d3"/>
        </div>
    </TEI>
let $store := xmldb:store("/db", "test.xml", $in-mem)
let $stored := doc($store)
return
    (
        exists($in-mem//tei:div[@xml:id eq "d2"]),
        exists($stored//tei:div[@xml:id eq "d2"]),
        exists($in-mem//tei:div[@xml:id eq "d2"]/preceding-sibling::*:div),
        exists($stored//tei:div[@xml:id eq "d2"]/preceding-sibling::*:div),
        exists($in-mem//tei:div[@xml:id eq "d2"]/preceding-sibling::tei:div),
        exists($stored//tei:div[@xml:id eq "d2"]/preceding-sibling::tei:div),
        exists($in-mem//tei:div[@xml:id eq "d2"]/following-sibling::*:div),
        exists($stored//tei:div[@xml:id eq "d2"]/following-sibling::*:div),
        exists($in-mem//tei:div[@xml:id eq "d2"]/following-sibling::tei:div),
        exists($stored//tei:div[@xml:id eq "d2"]/following-sibling::tei:div)
    )
```

The queries all return `true()` except the final one, which returns `false()`.

**Update:** My original test query used retrieved the source document via HTTP request, but in the interests of simplifying the test, I trimmed the test document to the bare minimum needed to reproduce the result.

### Context information

- eXist-db version + Git Revision hash: eXist 3.5.0-SNAPSHOT+0875a60cc (build 201709221341)
- Java version: jdk1.8.0_144.jdk
- Operating system: macOS 10.12.6
- 32 or 64 bit: 64 bit
- Any custom changes in e.g. conf.xml: none