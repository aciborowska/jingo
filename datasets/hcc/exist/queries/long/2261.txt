### What is the problem

- Currently the xquery functions exposed by the image module are not tested. 
- Support for imageIO varies between different Java engines, in particular openJDK has some nasty bugs, which are unlikely to get fixed any time soon. s.b. 
- Transformation functions inadvertently  strip alpha channels in both jpg and png and convert them to black (or whatever default background color is defined elsewhere).
- Crop and scale use `heightxwidth` in their function signature for dimensions, this is against the widely adopted standard which is `widthxheight`

### What did you expect

- unit tests for the various functions
- working with JPEG images either results in (for non RGB color profiles)
```
02 Nov 2018 17:38:42,773 [qtp443401609-49] ERROR (CropFunction.java [eval]:154) - Unable to read image data! 
```
or when running in openJDK (with supported jpeg) 
```
<error type="java:java.lang.NoClassDefFoundError" message="Could not initialize class com.sun.imageio.plugins.jpeg.JPEGImageReader"/>
```
this means we can't process JPEG within our docker images

- The colors in the following two images to look identical 

| original | transformed |
|---|---|
|![image](https://user-images.githubusercontent.com/6205362/47936107-f6d31480-dedc-11e8-9b17-45cab348f811.png)|![scaledpng](https://user-images.githubusercontent.com/6205362/47936202-3d287380-dedd-11e8-92dd-ce877ad1d2ae.png) | 

- image dimensions to follow common practice of walking down the hall to get to the elevator (`Width x Height`)
 
### Describe how to reproduce or add a test
- xqsuite test PR is wip
- see #2242 
- run:
```Xquery
xquery version "3.1";

import module namespace image="http://exist-db.org/xquery/image";

declare variable $testCol := '/db/GH/2242';
declare variable $png := 'https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png';
let $store := xmldb:store(
        $testCol, 
        'image.png',
        hc:send-request(<hc:request href="{$png}" method="get"/>)[2]
let $somePNG := util:binary-doc($testCol || '/image.png')

return
  xmldb:store('/db/GH/2242', 'scaled.png', image:scale($somePNG, (),'image/png'))
```

- see [L118-9](https://github.com/eXist-db/exist/blob/e583a539849be35481fb59383b0283b0bfe4e200/extensions/modules/src/org/exist/xquery/modules/image/CropFunction.java#L118)

### Context information
Please always add the following information
- eXist-db 4.4.0 
- Java version (e.g. Java8u181 Java8u191) openJDK / oracleJDK
- Operating system ( Linux, MacOs)
- 64 bit
- How is eXist-db installed? ( DMG, clone from GitHub, docker)
- Any custom changes in e.g. conf.xml. n.a.