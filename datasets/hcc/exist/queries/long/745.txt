A try/catch expression that does not catch the particular error type raised in the try's body changes the error in a way that makes it impossible to catch the error in an outer try/catch.

For example:

``` xquery
try {
    try {
        error(xs:QName('test'))
    } catch foo {
        'inner catch'
    }
} catch test {
    'outer catch'
}
```

The expected result is 'outer catch', but instead the query raises an "exerr:ERROR Error." error.  This error cannot be caught with `catch exerr:ERROR` (even if the "exerr" namespace is explicitly bound to "http://www.w3.org/2005/xqt-errors), but can be caught with `catch *`.

This example above obviously contrived, but there are cases where a function might choose to handle some exceptions while passing on others to the caller.  If there several different such errors that might be passed, the caller is left with no means of differentiating them.
