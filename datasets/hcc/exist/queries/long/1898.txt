### What is the problem
> Queries that include a filter clause involving string comparison on EMPTY text nodes which are not indexed fail with the following exception only when a collation is in effect either as a default collation, or explicitly passed to the string comparison function:

```
java.lang.IllegalArgumentException: Illegal argument target.  Argument can not be null or of length 0
	at com.ibm.icu.text.SearchIterator.<init>(SearchIterator.java:636)
	at com.ibm.icu.text.StringSearch.<init>(StringSearch.java:181)
	at com.ibm.icu.text.StringSearch.<init>(StringSearch.java:234)
	at org.exist.util.Collations.contains(Collations.java:338)
	at org.exist.xquery.value.StringValue.contains(StringValue.java:673)
	at org.exist.xquery.GeneralComparison.compareAtomic(GeneralComparison.java:1089)
	at org.exist.xquery.GeneralComparison.nodeSetCompare(GeneralComparison.java:648)
	at org.exist.xquery.GeneralComparison.quickNodeSetCompare(GeneralComparison.java:923)
	at org.exist.xquery.GeneralComparison.eval(GeneralComparison.java:469)
	at org.exist.xquery.modules.range.Lookup.eval(Lookup.java:317)
	at org.exist.xquery.InternalFunctionCall.eval(InternalFunctionCall.java:41)
	at org.exist.xquery.AbstractExpression.eval(AbstractExpression.java:71)
	at org.exist.xquery.PathExpr.eval(PathExpr.java:276)
	at org.exist.xquery.Predicate.selectByNodeSet(Predicate.java:450)
	at org.exist.xquery.Predicate.evalPredicate(Predicate.java:326)
	at org.exist.xquery.LocationStep.processPredicate(LocationStep.java:256)
	at org.exist.xquery.LocationStep.applyPredicate(LocationStep.java:243)
	at org.exist.xquery.LocationStep.eval(LocationStep.java:474)
        ...
```

### What did you expect
> I expected string comparison to work on unindexed empty text nodes with a collation specified

### Describe how to reproduce or add a test
> create a document with the following content, in a non-indexed collection
`<entry>
    <a>xxx</a>
    <b></b>
</entry>`

run these queries:

```
collection("/db/data/testqueries")//a[contains(.,'x',"?lang=en-US")]
collection("/db/data/testqueries")//b[contains(.,'x',"?lang=en-US")]
```

The second query will fail with the exception quoted above.

Having a range index defined on `<b>`, or omitting the collation argument results in no exception being thrown.

### Context information
- eXist-db version 4.1
- Java version Java8u171
- Operating system (Windows 10)
- 64 bit
- No custom changes
