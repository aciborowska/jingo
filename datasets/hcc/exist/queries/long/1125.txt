The following query looses the value of `$avg-overall` in the return clause when constructing XML:

``` xquery
for $product in collection("/db/products")/Product
let $avg-overall := avg($product/Reviews/Review/Overall)
order by $avg-overall descending
return
    <x>{$avg-overall}</x>
```

returns the **incorrect** result:

``` xml
<x/>
<x/>
```

However, the following query demonstrates that `$avg-overall` does have a value:

``` xquery
for $product in collection("/db/products")/Product
let $avg-overall := avg($product/Reviews/Review/Overall)
order by $avg-overall descending
return
    $avg-overall
```

which returns the result:

``` xml
5
5
```

An example input document looks like:

``` xml
<Product>
  <Reviews>
    <Review>
       <Overall>5</Overall>
   </Review>
  </Reviews>
</Product>
```

The index configuration looks like:

``` xml
<collection xmlns="http://exist-db.org/collection-config/1.0">
   <index>
        <range>
            <create qname="Overall" type="xs:float"/>
        </range>
   </index>
</collection>
```
