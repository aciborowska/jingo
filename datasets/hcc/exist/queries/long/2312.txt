### Problem

For the following collection configuration

```xml
<collection xmlns="http://exist-db.org/collection-config/1.0">
    <index xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <lucene>
            <text qname="foo"/>
        </lucene>
    </index>
</collection>
```

After creating index upon storing the document retrieval of named index field is not returning expected results but only if the document stored contains one of the elements for which lucene index has been configured (`<foo>` in the example)

```xquery
declare function local:index($path) {
    let $index :=  <doc><field name="foo-field" store="yes">Foobar index data</field></doc>
    return
       ft:index($path, $index)
};

let $collection := '/db/apps/indextest'
let $doc-name := 'foobar.xml'

let $data := 
    <text>
        <body>
           <foo/>
        </body>
    </text>

let $c := console:log($data)

(: remove resource if exists :)
let $remove := if (doc-available($collection || '/' || $doc-name)) then xmldb:remove($collection, $doc-name) else ()
  
let $store := xmldb:store($collection, $doc-name, $data)
let $index := local:index($store)

return
    (ft:search($store, 'foo-field:foobar'), ft:get-field($store, 'foo-field'))
```

### Actual result

Only ft:search returns a match

```xml
<results>
    <search uri="/db/apps/indextest/foobar.xml" score="6.5257874">
        <field name="foo-field"><exist:match xmlns:exist="http://exist.sourceforge.net/NS/exist">Foobar</exist:match> index data</field>
    </search>
</results>
```

### Expected result

```xml
1
<results>
    <search uri="/db/apps/indextest/foobar.xml" score="6.5257864">
        <field name="foo-field"><exist:match xmlns:exist="http://exist.sourceforge.net/NS/exist">Foobar</exist:match> index data</field>
    </search>
</results>
2
Foobar index data
```

### Test and reproduce

One can reproduce as described above, I will prepare a PR with extension for Lucene Tests in a mo.