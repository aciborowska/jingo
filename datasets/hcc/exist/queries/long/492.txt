When working with Contentextraction- and image-module I encountered some weird behaviour of an base64Binary variable: If processed with one of these modules, the binary itself is empty aftwards. I first thought, that this modules just swallow the binary somehow (which would not be a good thing at all), but I made some further investigations which revealed that the value of a base64Binary variable gets lost as well If you cast this variable $a  into a hexBinary $b.

I posted an example at pastebin:
http://pastebin.com/fr4mXpEC

There are six almost identical snippets, the last two drop this error:

"exerr:ERROR Unable to encode string value: The underlying InputStream
has been closed"

In the above example the problemous scripts had some further processing (static cast to hexBinary) of the same base64Binary. Without wrapping it into an additional node, the script results in the above error. wrapping it, works as it should. Also this error does not occur with unwrapped
_and_ unprocessed binary data.

Here a smaller sample (fist one works, last one drops that error):

```
xquery version "3.0";
let $url := xs:anyURI("http://mirrors.creativecommons.org/presskit/logos/cc.logo.large.png")
return
        <div>
            {
                let $response := http:send-request(<http:request method="GET" href="{$url}"/>)
                let $binary-data := data($response[2])
                let $hex := xs:hexBinary($binary-data)
                return
                    <value>{$binary-data}</value>
            }
        </div>
        <div>
            {
                let $response := http:send-request(<http:request method="GET" href="{$url}"/>)
                let $binary-data := data($response[2])
                let $hex := xs:hexBinary($binary-data)
                return
                    $binary-data
            }
        </div>
```

Imo it could be some kind of a variable validity issue or a time related thing (race condition)... but I'm not really into Java so this is only a guess. This makes contentextraction- and image module unuseable if you ie. want to get the mime type of a base64binary containing an image and afterwards try to use binary-stream().
