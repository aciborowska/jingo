### What is the problem

After using XQuery Update to insert an element (a) in the empty namespace and (b) with an `xml:id` attribute into a document with a non-empty namespace, the empty namespace of the inserted element is not shown when reading the resulting document over WebDAV or XML-RPC. However, when reading the document via the REST interface, the `doc()` function, or eXide (via its load.xql module), the inserted empty namespace is preserved. 

This phenomenon is only evident when (a) and (b) are in place. In other words, the problem is not evident if you insert an element in a non-empty namespace, or if you insert an element without the `xml:id` attribute. Also, the phenomenon is not evident if you store a document with the same structure directly and without the use of XQuery update.

### What did you expect

I expected nodeÂ identity to be preserved regardless of the interface through which the node is serialized or method with which it was stored into the database.

### Describe how to reproduce or add a test

Run the following query in eXide or Java admin client:

```xquery

xquery version "3.1";

declare namespace foo="foo";

let $in-memory := 
    <root xmlns="foo">
        <x/>
    </root> 
let $store := xmldb:store("/db", "test.xml", $in-memory)
let $on-disk := doc("/db/test.xml")
let $new-node := <x xml:id="aargh"/>
let $update := update insert $new-node into $on-disk/foo:root
return
    (
        $in-memory,
        $on-disk
    )
```

The 2nd item returned is as follows:

```xml
<root xmlns="foo">
    <x/>
    <x xmlns="" xml:id="aargh"/>
</root>
```

Then retrieve the file via REST interface, at <http://localhost:8080/exist/rest/db/test.xml>, and the result should be identical.

Then retrieve the file via XML-RPC interface (e.g., Java admin client or oXygen data source explorer) or WebDAV (e.g., Transmit or oXygen WebDAV data source), and the inserted element has lost its empty namespace:

```xml
<root xmlns="foo">
    <x/>
    <x xml:id="aargh"/>
</root>
```

This phenomenon is not evident if the `@xml:id` attribute is removed from the inserted element, if the inserted element is in a non-empty namespace, or if the document is stored whole via the following query:

```xquery
let $new-node := <x a="b"/>
```

```xquery
let $new-node := <x xmlns="bar"/>
```

```xquery
xmldb:store(
    '/db', 
    'test.xml', 
    <root xmlns="foo">
        <x/>
        <x xmlns="" xml:id="aargh"/>
    </root>
)
```

### Context information

- eXist-db version + Git Revision hash: eXist 3.7.0-SNAPSHOT + 45c3aa506
- Java version: 1.8.0_152
- Operating system: macOS 10.13.3
- 32 or 64 bit: 64 bit
- Any custom changes in e.g. conf.xml: none
