### What is the problem

registering restxq functions fails (at least for me)  
the old registry persists

### What did you expect

shouldn't happen

### Describe how to reproduce or add a test

don't know how, but
- showed up after rebuilding with the latest merge (develop) from Apr 5 (Apr 3 was ok, AFAIR)
- it happens after storing the restxq functions module from eXide and also with exrest:register-module()

here is restxq.log:
```
2018-04-07 10:10:56,250 [qtp1144499207-21] INFO  (RestXqServiceRegistryLogger.java [registered]:44) - Registered RESTXQ Resource Function: /db/apps/nabu/FHIR/EpisodeOfCare/episodeofcare-routes.xqm,{http://enahar.org/exist/restxq/nabu/eocs}putEpisodeOfCareXML#4
2018-04-07 10:10:56,250 [qtp1144499207-21] INFO  (RestXqServiceRegistryPersistence.java [updateRegistryOnDisk]:149) - Preparing new RESTXQ registry on disk: /tmp/_mmtfm_2f19f08e-1ae9-42a4-aa5e-5a3a62eaddb62175345958671903924/mmtf_1523088656250481289648461230759.tmp
2018-04-07 10:10:56,254 [qtp1144499207-21] ERROR (RestXqServiceRegistryPersistence.java [updateRegistryOnDisk]:191) - /tmp/_mmtfm_2f19f08e-1ae9-42a4-aa5e-5a3a62eaddb62175345958671903924/mmtf_1523088656250481289648461230759.tmp -> /media/peter/TrekStor/existdb-4.0/webapp/WEB-INF/data/restxq.registry: Invalid cross-device link
java.nio.file.AtomicMoveNotSupportedException: /tmp/_mmtfm_2f19f08e-1ae9-42a4-aa5e-5a3a62eaddb62175345958671903924/mmtf_1523088656250481289648461230759.tmp -> /media/peter/TrekStor/existdb-4.0/webapp/WEB-INF/data/restxq.registry: Invalid cross-device link
        at sun.nio.fs.UnixCopyFile.move(UnixCopyFile.java:394) ~[?:1.8.0_161]
        at sun.nio.fs.UnixFileSystemProvider.move(UnixFileSystemProvider.java:262) ~[?:1.8.0_161]
        at java.nio.file.Files.move(Files.java:1395) ~[?:1.8.0_161]
        at org.exist.extensions.exquery.restxq.impl.RestXqServiceRegistryPersistence.updateRegistryOnDisk(RestXqServiceRegistryPersistence.java:184) ~[exist-restxq.jar:4.1.0-SNAPSHOT]
        at org.exist.extensions.exquery.restxq.impl.RestXqServiceRegistryPersistence.registered(RestXqServiceRegistryPersistence.java:129) ~[exist-restxq.jar:4.1.0-SNAPSHOT]
        at org.exquery.restxq.impl.RestXqServiceRegistryImpl.register(RestXqServiceRegistryImpl.java:69) ~[exquery-restxq-1.0-SNAPSHOT.jar:0.1.32-SNAPSHOT]
        at org.exquery.restxq.impl.RestXqServiceRegistryImpl.register(RestXqServiceRegistryImpl.java:78) ~[exquery-restxq-1.0-SNAPSHOT.jar:0.1.32-SNAPSHOT]
        at org.exist.extensions.exquery.restxq.impl.ExistXqueryRegistry.registerServices(ExistXqueryRegistry.java:126) ~[exist-restxq.jar:4.1.0-SNAPSHOT]
        at org.exist.extensions.exquery.restxq.impl.RestXqTrigger.after(RestXqTrigger.java:114) ~[exist-restxq.jar:4.1.0-SNAPSHOT]
        at org.exist.extensions.exquery.restxq.impl.RestXqTrigger.afterUpdateDocument(RestXqTrigger.java:61) ~[exist-restxq.jar:4.1.0-SNAPSHOT]
        at org.exist.collections.triggers.DocumentTriggers.afterUpdateDocument(DocumentTriggers.java:254) ~[exist.jar:4.1.0-SNAPSHOT]
        at org.exist.collections.MutableCollection.addBinaryResource(MutableCollection.java:1715) ~[exist.jar:4.1.0-SNAPSHOT]
        at org.exist.collections.MutableCollection.addBinaryResource(MutableCollection.java:1647) ~[exist.jar:4.1.0-SNAPSHOT]
        at org.exist.xmldb.LocalCollection.lambda$storeBinaryResource$12(LocalCollection.java:532) ~[exist.jar:4.1.0-SNAPSHOT]
        at org.exist.xmldb.function.LocalXmldbCollectionFunction.apply(LocalXmldbCollectionFunction.java:48) ~[exist.jar:4.1.0-SNAPSHOT]
        at org.exist.xmldb.LocalCollection.lambda$null$22(LocalCollection.java:729) ~[exist.jar:4.1.0-SNAPSHOT]
        at org.exist.xmldb.function.LocalXmldbCollectionFunction.apply(LocalXmldbCollectionFunction.java:48) ~[exist.jar:4.1.0-SNAPSHOT]
        at org.exist.xmldb.AbstractLocal.lambda$with$6(AbstractLocal.java:172) ~[exist.jar:4.1.0-SNAPSHOT]
        at org.exist.xmldb.AbstractLocal.lambda$null$4(AbstractLocal.java:118) ~[exist.jar:4.1.0-SNAPSHOT]
        at org.exist.xmldb.function.LocalXmldbFunction.apply(LocalXmldbFunction.java:46) ~[exist.jar:4.1.0-SNAPSHOT]
        at org.exist.xmldb.AbstractLocal.withDb(AbstractLocal.java:196) ~[exist.jar:4.1.0-SNAPSHOT]
        at org.exist.xmldb.AbstractLocal.lambda$modify$5(AbstractLocal.java:118) ~[exist.jar:4.1.0-SNAPSHOT]
        at org.exist.xmldb.LocalCollection.lambda$modify$23(LocalCollection.java:727) ~[exist.jar:4.1.0-SNAPSHOT]
        at org.exist.xmldb.LocalCollection.storeBinaryResource(LocalCollection.java:527) [exist.jar:4.1.0-SNAPSHOT]
        at org.exist.xmldb.LocalCollection.storeResource(LocalCollection.java:510) [exist.jar:4.1.0-SNAPSHOT]
```

exist.log: no error:
```
2018-04-07 10:04:12,279 [qtp1144499207-24] INFO  (Descriptor.java [<init>]:99) - Reading Descriptor from file /media/peter/TrekStor/existdb-4.0/descriptor.xml
2018-04-07 10:04:18,465 [qtp1144499207-24] INFO  (MimeTable.java [load]:244) - Loading mime table from file /media/peter/TrekStor/existdb-4.0/mime-types.xml
2018-04-07 10:04:18,483 [qtp1144499207-24] INFO  (TemporaryFileManager.java [<init>]:82) - Temporary folder is: /tmp/_mmtfm_2f19f08e-1ae9-42a4-aa5e-5a3a62eaddb62175345958671903924
```

### Context information

2018-04-06 10:38:05,245 [main] INFO  (JettyStart.java [run]:137) - Running with Java 1.8.0_161 [Oracle Corporation (Java HotSpot(TM) 64-Bit Server VM) in /usr/lib/jvm/java-8-oracle/jre]
2018-04-06 10:38:05,245 [main] INFO  (JettyStart.java [run]:144) - Running as user 'peter'
2018-04-06 10:38:05,246 [main] INFO  (JettyStart.java [run]:145) - [eXist Home : /media/peter/TrekStor/existdb-4.0]
2018-04-06 10:38:05,248 [main] INFO  (JettyStart.java [run]:146) - [eXist Version : 4.1.0-SNAPSHOT]
2018-04-06 10:38:05,248 [main] INFO  (JettyStart.java [run]:147) - [eXist Build : 201804051740]
2018-04-06 10:38:05,248 [main] INFO  (JettyStart.java [run]:148) - [Git commit : ec3f8e5]
2018-04-06 10:38:05,249 [main] INFO  (JettyStart.java [run]:150) - [Operating System : Linux 4.4.0-119-generic amd64]

