### What is the problem

It is possible to declare variables, whose values will be (lazily?) evaluated at runtime.
Using a function or arrow expression leads to an NPE.

### What did you expect

one of the three:

1. the value to be evaluated correctly
2. the xquery parser to raise an error
3. the xquery runtime to raise an error

The xquery 3.1 spec states:

> [Definition: If a variable declaration includes an expression (VarValue or VarDefaultValue), the expression is called an initializing expression. The static context for an initializing expression includes all functions, variables, and namespaces that are declared or imported anywhere in the Prolog, other than the variable being declared.]

and includes following example

```xquery
declare variable $a := local:f(); 
declare variable $b := 1;
declare function local:f() { $b }; 
```

### Describe how to reproduce or add a test

Run the following test suite:

```xquery
xquery version "3.1";

module namespace devar="http://exist-db.org/xquery/test/declared-variables";
declare namespace test="http://exist-db.org/xquery/xqsuite";

declare variable $devar:static := 'I am static.';
declare variable $devar:dynamic := replace($devar:static, 'static', 'dynamic');
declare variable $devar:function := (function ($a) {
    replace($a, 'static', 'the return of a function expression')
})($devar:static);

declare variable $devar:arrow := $devar:static 
    => replace('static', 'the return of an arrow expression')
;

declare
    %test:assertEquals('I am static.')
function devar:read-static () {
    $devar:static
};

declare
    %test:assertEquals('I am dynamic.')
function devar:read-dynamic () {
    $devar:dynamic
};

declare
    %test:assertEquals('I am the return of a function expression.')
function devar:read-function () {
    $devar:function
};

declare
    %test:assertEquals('I am the return of a arrow expression.')
function devar:read-arrow () {
    $devar:arrow
};
```

### Context information
Please always add the following information

- eXist-db version 5.0.0 / 3d8272ad5fb706cb6291cabf8d1e3cef31566453 
- Java(TM) SE Runtime Environment (build 1.8.0_152-b16)
- Operating system MacOs Mojave
- How is eXist-db installed? GitHub
- Any custom changes in e.g. conf.xml none
