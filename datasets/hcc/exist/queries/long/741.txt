Comparing an xs:QName to another atomic type results in a type error, even when explicit casts allow the comparison.

For example `'test' eq xs:QName('test')` results in `err:XPTY0004 cannot compare xs:string('test') with xs:QName('test')`, but `'test' eq xs:QName('test') cast as xs:string` results in `true()`.

This affects both value and general comparisons.  General comparisons are a particular problem, since `xs:QName` can not be compared to an empty sequence (which ends up being `xs:anyAtomicType`)!

Furthermore, a different error is reported by eXide depending on which side of the comparison the `xs:QName` appears on. If it is the left-hand operand, `exerr:ERROR" is raised, otherwise "err:XPT0004` is raised.  This has repercussions on try/catch clauses that attempt to mitigate the error.
