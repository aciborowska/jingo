Some time ago we have been struggling with encoding in our collection-names. For example: `xmldb:create-collection()` allows creating collections with unencoded `@`  like `a@b` which then indeed is created and accessible by XQuery functions. Using that function with `xmldb:encode-uri("a@b")` also works, resulting two different collections: `a@b` and `a%40b`. 

This leads to some issues using WebDAV and JAC: "a@b" is not accessible by JAC, "a%40b" not accessible by WebDAV (tried with Konqueror). 

Referring to RFC3986 (Uniform Resource Identifier: Generic Syntax) there are reserved characters for controlling, seperating etc. and i.e. the "@" char is reserverd as well:

http://tools.ietf.org/html/rfc3986#section-2.2
http://en.wikipedia.org/wiki/Percent-encoding

Since the function call looks like this

```xquery
xmldb:create-collection($target-collection-uri as xs:string, $new-collection as 
xs:string) as xs:string?
```
unencoded strings are indeed accepted. Shouldn't this be avoided?

To avoid creating of non-RFC-compliant URIs, changing the function call to only accept `xs:anyURI` as `$new-collection` would solve this IMHO. But this would probably mean incompatibilities to existing apps, maybe an inner-function encoding of the submitted string would be a more compatible solution? Of course only if you see this as an issue at all :)
