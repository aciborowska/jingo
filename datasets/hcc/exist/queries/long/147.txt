With a "boundary-space preserve" declaration, white-space between elements is supposed to be maintained. However, when I feed the function below with the exact same contents from an in-memory variable and from a document stored in the database, the result of the in-memory fragment is returned with white-space preserved, whereas the result of the stored document is returned as if the declaration had told the function to strip white-space, if the text node is white-space-only.
# 

```
xquery version "3.0";

declare namespace tei="http://www.tei-c.org/ns/1.0";

declare boundary-space preserve;

declare function local:get-text($input as node()*) as item()* {
   for $node in $input/node()
       return
           typeswitch($node)
               case text() return 
                   $node
                       default return local:get-text($node)
};

let $in-memory := 
<TEI xmlns="http://www.tei-c.org/ns/1.0">
<p>Government of new Territory of Nevada—Governor <name>Nye</name> <lb/>and the practical jokers—<name>Mr. Clemens</name> begins journalistic life <lb/>on <name>Virginia City</name> <name>Enterprise</name>.</p>
</TEI>

let $stored := doc('/db/test/stored.xml')

return
   <result>
       <inline>{string-join(local:get-text($in-memory))}</inline>
       <stored>{string-join(local:get-text($stored))}</stored>
   </result>
```
# 

The result I get is:

```
<result>
    <inline>Government of new Territory of Nevada—Governor Nye and the practical jokers—Mr. Clemens begins journalistic life on Virginia City Enterprise. </inline>
    <stored>Government of new Territory of Nevada—Governor Nyeand the practical jokers—Mr. Clemens begins journalistic life on Virginia CityEnterprise.</stored>
</result>
```

where "Nye" and "and" and "City" and "Enterprise" are run together in the "stored" output, because the space between <name> and <lb> and between <name> and <name> is stripped.

Setting preserve-whitespace-mixed-content="yes" in conf.xml works as a workaround, but is not ideal.
