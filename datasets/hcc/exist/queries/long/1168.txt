According to the 3.1 spec, a positional predicate with more than one item should raise err:FORG0006. eXist (current develop branch) raises this error in some cases, but allows the following examples through instead of raising err:FORG0006:

```xquery
(15 to 25)[5, 6, 7]
(15 to 25)[(5, 6, 7)]
```

Both return a sequence of two items: `(19, 20, 21)` instead of raising err:FORG0006. 

eXist does raise the correct error when the predicate is expressed as `[5 to 7]` or `[(5 to 7)]`: 

> exerr:ERROR err:FORG0006: effectiveBooleanValue: first item of '(5, 6, 7)' is not a node, and sequence length > 1

Similarly:

```xquery
<node><x/><y/><z/></node>/*[2, 3]
```

Returns `(<y/>, <z/>)`.

The error eXist raises in the case `[2 to 3]` should also perhaps be FORG0006 (?) but instead is this:

> err:XPTY0004 The first operand must have at most one item

If any change is made here, let me also suggest a clearer error message - e.g.,

> [FORG0006] Effective boolean value not defined for (5, 6, 7)

This would be much clearer than `first item of ... is not a node, and sequence length > 1`. The error message seems to point to definitions in the spec but doesn't tell the user what the problem is. The problem is that (5, 6, 7) can't be cast into an effective boolean value. This error has confused me, until I realized what the real issue. 