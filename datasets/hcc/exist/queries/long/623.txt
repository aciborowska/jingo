I can confirm the issue reported at http://stackoverflow.com/questions/30086095/select-comments-before-root-node with a fresh build of eXist from the [current develop branch](https://github.com/eXist-db/exist/commit/fa949a73fad7d9c62ab2e78e9676b3cf07425d30). 

Reproducible test:

Store the following document as `/db/test.xml`

```
<!-- DOCUMENT REVIEWED -->
<doc id="test">
  <figure>
    <figcaption>caption</figcaption>
  </figure>
  <p>blah blah blah</p>
</doc>
```

The following query will fail:

``` xquery
doc('/db/test.xml')/node()[2]/preceding-sibling::comment()
```

Expected result: 

```
<!-- DOCUMENT REVIEWED -->
```

Actual result, as reported in exist.log:

```
2015-05-06 20:28:36,739 [eXistThread-50] WARN  (SanityCheck.java [showTrace]:94) - Stacktrace:
org.exist.util.sanity.AssertFailure: TRACE: Node 891:null not found.
    at org.exist.util.sanity.SanityCheck.TRACE(SanityCheck.java:73)
    at org.exist.storage.dom.DOMFile.findValue(DOMFile.java:1265)
    at org.exist.storage.dom.RawNodeIterator.seek(RawNodeIterator.java:84)
    at org.exist.storage.dom.RawNodeIterator.<init>(RawNodeIterator.java:71)
    at org.exist.storage.NativeBroker.getXMLStreamReader(NativeBroker.java:545)
    at org.exist.xquery.LocationStep.getSiblings(LocationStep.java:899)
    at org.exist.xquery.LocationStep.eval(LocationStep.java:449)
    at org.exist.xquery.AbstractExpression.eval(AbstractExpression.java:71)
    at org.exist.xquery.PathExpr.eval(PathExpr.java:265)
    at org.exist.xquery.AbstractExpression.eval(AbstractExpression.java:71)
    at org.exist.xquery.XQuery.execute(XQuery.java:298)
    at org.exist.xquery.XQuery.execute(XQuery.java:218)
    at org.exist.http.servlets.XQueryServlet.process(XQueryServlet.java:492)
    at org.exist.http.servlets.XQueryServlet.doPost(XQueryServlet.java:198)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:755)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:457)
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:575)
    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
    at org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:229)
    at org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:103)
    at org.exist.http.urlrewrite.Forward.doRewrite(Forward.java:50)
    at org.exist.http.urlrewrite.XQueryURLRewrite.doRewrite(XQueryURLRewrite.java:557)
    at org.exist.http.urlrewrite.XQueryURLRewrite.service(XQueryURLRewrite.java:357)
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)
    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)
    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1448)
    at de.betterform.agent.web.filter.XFormsFilter.doFilter(XFormsFilter.java:171)
    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1419)
    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)
    at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:533)
    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)
    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)
    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)
    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)
    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)
    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)
    at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)
    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)
    at org.eclipse.jetty.server.Server.handle(Server.java:368)
    at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:488)
    at org.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:943)
    at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:1004)
    at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:861)
    at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)
    at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)
    at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)
    at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)
    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
    at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
    at java.lang.Thread.run(Thread.java:745)
```

On the other hand, the in-memory version of this query returns the expected result:

``` xquery
let $doc := 
    document { 
        <!-- DOCUMENT REVIEWED -->,
        <doc id="test">
          <figure>
            <figcaption>caption</figcaption>
          </figure>
          <p>blah blah blah</p>
        </doc>
    }
return 
    $doc/node()[2]/preceding-sibling::comment()
```

Result:

```
<!-- DOCUMENT REVIEWED -->
```

On a perhaps related note, eXide returns unexpected results when displaying the in-database version of this document - seemingly because of the presence of the comment:

```
doc('/db/test.xml')
```

eXide reports that this returns one node, but only displays:

```
<!-- DOCUMENT REVIEWED -->
```

I would expect to see the entire document, but only the comment displays.

This variant returns expected results - 2 items, the comment node and the <doc> node:

```
doc('/db/test.xml')/node()
```

So all in all, eXist seems to have some issues handling comments outside the root element of the document.
