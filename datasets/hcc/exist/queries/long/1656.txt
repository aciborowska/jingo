### What is the problem

eXist's implementation of `map:remove` allows only a single key:

> `map:remove($map as map, $key as xs:string)`

### What did you expect

The XQuery 3.1 F&O spec says that `map:remove` can take 0 or more keys:

> `map:remove($map as map(*), $keys as xs:anyAtomicType*)`

See https://www.w3.org/TR/xpath-functions-31/#func-map-remove.

Besides the cardinality difference, note that keys can be of `xs:anyAtomicType`, not just `xs:string`.

### Describe how to reproduce or add a test

This example is taken from the spec at the link above:

```xquery
xquery version "3.1";

let $week := map{0:"Sonntag", 1:"Montag", 2:"Dienstag",
       3:"Mittwoch", 4:"Donnerstag", 5:"Freitag", 6:"Samstag"}
return
    map:remove($week, (0, 6 to 7)) 
```

BaseX and Saxon return the expected result: 

```xquery
map{1:"Montag",2:"Dienstag",3:"Mittwoch",4:"Donnerstag",5:"Freitag"}
```

eXist returns the following error:

> err:XPTY0004 checking function parameter 2 in call map:remove($week, untyped-value-check[xs:string, ( 0, 6 to 7 )]): XPTY0004: The actual cardinality for parameter 2 does not match the cardinality declared in the function's signature: map:remove($map as map, $key as xs:string) map. Expected cardinality: exactly one, got 3. 

### Context information

- eXist-db version + Git Revision hash: eXist 3.7.0-SNAPSHOT+9091c3032
- Java version: Oracle JDK 1.8.0_152
- Operating system: macOS 10.13.1
- 32 or 64 bit: 64 bit
- Any custom changes in e.g. conf.xml: none
