**Describe the bug**

The current handling of the argument placeholder `?` in function calls after the arrow operator `=>` is not working according to the spec.

Saxon 9 and 10 handle this correctly.
This is likely broken since this feature was implemented but tested on exist versions 4.7.0 and the latest SNAPSHOT.

**Expected behavior**

`EXPR => FUNC(?)` should evaluate to `FUNC(EXPR, ?)` which evaluates to a function with arity 1.

In the current implementation it seems that the question mark is substituted with EXPR instead.
**To Reproduce**

```Xquery
xquery version "3.1";

module namespace aq="http://exist-db.org/xquery/arrow-question";

declare namespace test="http://exist-db.org/xquery/xqsuite";

declare
    %test:assertEquals(1)
function aq:fail() {
    () => sum(?) => function-arity()
};

declare
    %test:assertEquals(1)
function aq:works() {
    function-arity(sum((), ?))
};
```

**Context (please always complete the following information):**
 - OS: macOS 10.15.4
 - eXist-db version: 5.3.0-SNAPSHOT (build from 093c4c0726e02868acadbce9583ec5809f462b33)
 - Java Version 1.8.0_152-b16

**Additional context**
- How is eXist-db installed? built from source
- Any custom changes in e.g. `conf.xml`? none
