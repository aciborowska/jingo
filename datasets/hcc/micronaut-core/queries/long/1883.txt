Given a client definition:

```kotlin
@Client("price")
interface PriceClient {
    @Get("/prices{?skuId*,locale,currency}")
    fun getPricesBySkuId(
            skuId: List<String>?,
            locale: String?,
            currency: String?): Single<List<PriceServicePrice>>
}
```

When I call `getPriceBySkuId(listOf("1", "2"), null, "USD")`
then I am seeing the request to the service end point is incorrect.

The controller on the service side is seeing a skuId list of ("1", "2currency=USD"), and currency/locale both null.

When all 3 parameters are not-null, all 3 values are received on the service correctly.

It looks like there's a bug interpreting null values in the middle of the Form-Style Query Expansion of "{?skuId*,locale,currency}" when locale (in this case the middle value) is null.

I have been able to verify that changing the expansion by swapping the final 2 params "{?skuId*,currency,locale}" works correctly (because the null is now at the end, and the currency field is pre-pended with an `&`), but this is not a workable solution as either parameters could be null.

My current work around is to remove the expansion, and tag each field with `@QueryValue("name-here")`, but this sends lists as a single comma separated string inside a list (ie. listOf("1,2") instead of listOf("1", "2")), which I can work around on the service side by inspecting the value, looking for commas and splitting the string manually, but I would like to have a consistent working Expansion working instead to honour lists correctly.

### Steps to Reproduce

See above

### Expected Behaviour

The parameters should be passed to the service from the client correctly

### Actual Behaviour

There is a missing `&` character after the null parameter, which means the final parameter is broken, and attached to the first value breaking that too.

### Environment Information

- **Operating System**: Linux/Mac
- **Micronaut Version:** 1.1.4
- **JDK Version:** JDK 8+

### Example Application

Not supplied