Let's look at a scenario where you have a base `Controller` class, and then you have another controller class extending the base's functionality. There may be a use case where the Child Controller wants to override some of the functionality of the Parent Controller.

### Task List

- [x] Steps to reproduce provided
- [ ] Stacktrace (if present) provided
- [x] Example that reproduces the problem uploaded to Github
- [x] Full description of the issue provided (see below)

### Steps to Reproduce

I created a controller class `GenericController`

```java
@RequiredArgsConstructor
public abstract class GenericController<T, ID extends Serializable> {
    private final StatusService<T> service;
    public abstract String getPath();
    @Post
    public Mono<HttpResponse<T>> save(@Valid @Body T entity) {
        return service.save(entity).map(savedEntity -> {
            var location = UriBuilder.of(getPath()) //
                            .path("1").build();
            return created(savedEntity, location);
        });
    }
}
```

and another controller extending this one:

```java
@Validated
@Controller(StatusController.PATH)
public class StatusController extends GenericController<Status, UUID> {
    static final String PATH = "/statuses";
    public StatusController(StatusService<Status> service) {
        super(service);
    }
    @Override
    public String getPath() {
        return PATH;
    }

    @Override
    public Mono<HttpResponse<Status>> save(@Valid Status entity) {
        return super.save(entity);
    }

}
```

Now when I make a request via Postman (or any other REST Client)

```posh
POST http://localhost:8080/statuses
{
  "name": "Demo"
}
```

### Expected Behaviour

The API route `/statuses` should respond without error

### Actual Behaviour

I get the following output

```json
Status: 400 Bad Request
{
    "_links": {
        "self": {
            "href": "/statuses",
            "templated": false
        }
    },
    "message": "More than 1 route matched the incoming request. The following routes matched /statuses: POST - /statuses, POST - /statuses"
}
```

### Environment Information

- **Operating System**: Windows 10
- **Micronaut Version:** 1.1.3
- **JDK Version:** 11

