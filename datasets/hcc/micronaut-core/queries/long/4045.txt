#4020 # Steps to Reproduce

1. Create micronaut application with a Controller and a test stream endpoint
```
 @ExecuteOn(TaskExecutors.IO)
    @Get("test/stream", produces = [MediaType.TEXT_EVENT_STREAM])
    fun testStream(): Publisher<Event<Counter>> {
        logger.debug { "New test stream connected" }
        return Flowable.intervalRange(
            0,
            11,
            5,
            5,
            TimeUnit.SECONDS
        ).map {
            logger.debug { "New test stream event $it" }
            createCounterEvent(it, Counter(it))
        }
    }
```
2. Create bean with a configuration property
```
@Singleton
class ServiceImpl(
    @Value("\${propertyt}")
    val property: String
) : Service {
```
3. Fail to provide property in configuration

### Stracktrace
```
{"time":"2020-09-08T10:56:28.401+01:00","@version":"1","message":"Found matching exception handler for exception [Failed to inject value for parameter [property] of class: com.example.ServiceImpl\n\nMessage: Error resolving property value [${property}]. Property doesn't exist\nPath Taken: new Controller(EventConsumer eventConsumer,[Service service]) --> new ServiceImpl(ServiceStub serviceStub,[String property])]:  Throwable -> Controller#HttpResponse error(HttpRequest request,Throwable e)","logger_name":"io.micronaut.http.server.netty.RoutingInBoundHandler","thread_name":"nioEventLoopGroup-1-2","level":"DEBUG","level_value":10000}
```
### Expected Behaviour
Http call returns a 500 error and stops trying to initialise bean.

### Actual Behaviour
Http call hangs trying to initialise bean in an infinite loop leading to CPU usage.

### Environment Information

- **Operating System**: adoptopenjdk:11-jre
- **Micronaut Version:** 2.0.1
- **JDK Version:** 11

