### Task List

- [X] Steps to reproduce provided
- [X] Stacktrace (if present) provided
- [X] Example that reproduces the problem uploaded to Github
- [X] Full description of the issue provided (see below)

Introspecting a class with a primitive multidimensional array field causes an "Already an array" exception in an annotation processor during compile time with no stack trace

### Steps to Reproduce

 1. Create a project with `mn`.
 2. Create a class with a multidimensional array and attempt to introspect it.
 3. Observe you get an `Already an array` error.

```
git clone https://github.com/doctorpangloss/arrayintrospection-error-repro.git
cd arrayintrospection-error-repro
./gradlew compileJava
```

results in

```
FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':compileJava'.
> java.lang.IllegalStateException: Already an array
```

### Expected Behaviour

Should introspect objects with multidimensional primitive arrays. Here's the class.

```
package micronaut.tests;

import io.micronaut.core.annotation.Introspected;

@Introspected
public class IntrospectedFailingClass {
	private int[][] failingField;

	public IntrospectedFailingClass() {
	}

	public int[][] getFailingField() {
		return failingField;
	}

	public IntrospectedFailingClass setFailingField(int[][] failingField) {
		this.failingField = failingField;
		return this;
	}
}
```

### Actual Behaviour

Compile errors.

### Environment Information

- **Operating System**: macOS (native-image run in docker)
- **Micronaut Version:** 1.3.0.M2
- **JDK Version:** OpenJDK 64-Bit Server VM GraalVM CE 19.3.0.2 (build 11.0.5+10-jvmci-19.3-b06, mixed mode, sharing)

### Example Application

https://github.com/doctorpangloss/arrayintrospection-error-repro.git