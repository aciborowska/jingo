The reason is class names are not unique enough for overloaded methods. The generated class names are something like `my.package.$EventConsumer$ApplicationEventListener$receive$InterceptedDefinition`


### Steps to Reproduce

Example:

```java
    @EventListener
        void receive(ServerStartupEvent startup) {
            this.startup = startup
        }

        @EventListener
        void receive(ServerShutdownEvent shutdown) {
            this.shutdown = shutdown
        }

        @EventListener
        void receive(ServiceStartedEvent serviceStarted) {
            this.serviceStarted = serviceStarted
        }

        @EventListener
        void receive(ServiceShutdownEvent serviceShutdownEvent) {
            this.serviceShutdownEvent = serviceShutdownEvent
        }
```

### Expected Behaviour

All event listeners should be called

### Actual Behaviour

Only the last one works



