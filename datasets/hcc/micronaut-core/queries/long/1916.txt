May be related to https://github.com/micronaut-projects/micronaut-core/issues/621

@QueryValue binding does not appear to occur if the parameter is an Optional LocalDate
Optional String is fine
so is mandatory LocalDate

*Steps To Reproduce*

Create a controller a follows:

    package example.micronaut
    
    import io.micronaut.core.convert.format.Format
    import io.micronaut.http.annotation.Controller
    import io.micronaut.http.annotation.Get
    import io.micronaut.http.annotation.QueryValue
    
    import java.text.SimpleDateFormat
    
    @Controller("/hello")
    class HelloController {
    
       @Get
       String index(
               @QueryValue @Format("yyyy-MM-dd") Date aDate,
               @QueryValue @Format("yyyy-MM-dd") Optional<Date> anOptionalDate,
               @QueryValue  Optional<String> anOptionalString
       ) {
          SimpleDateFormat sdf = new SimpleDateFormat('yyyy-MM-dd')
          String aDateString = sdf.format(aDate)
          String anOptionalDateString = anOptionalDate.isPresent() ? sdf.format(anOptionalDate) : 'Null'
          String anOptionalStringValue = anOptionalString.isPresent() ? anOptionalString.get() : 'Null'
    
          return "aDate: ${aDateString}, anOptionalDate: ${anOptionalDateString}, anOptionalString: ${anOptionalStringValue}"
       }
    }

And a client as follows:

    package example.micronaut
    
    import io.micronaut.core.convert.format.Format
    import io.micronaut.http.annotation.Get
    import io.micronaut.http.annotation.QueryValue
    import io.micronaut.http.client.annotation.Client
    import io.reactivex.Single
    
    @Client("/hello")
    interface HelloClient {
    
       @Get
       Single<String> hello(
               @QueryValue @Format("yyyy-MM-dd") Date aDate,
               @QueryValue @Format("yyyy-MM-dd") Date anOptionalDate,
               @QueryValue  String anOptionalString
               );
    }

And a test as follows:

    package example.micronaut
    
    import io.micronaut.context.ApplicationContext
    import io.micronaut.runtime.server.EmbeddedServer
    import spock.lang.AutoCleanup
    import spock.lang.Shared
    import spock.lang.Specification
    
    class HelloClientSpec extends Specification {
    
       @Shared
       @AutoCleanup
       EmbeddedServer embeddedServer =
               ApplicationContext.run(EmbeddedServer)
    
       @Shared
       HelloClient client = embeddedServer
               .applicationContext
               .getBean(HelloClient)
    
    
       void "test hello world response"() {
          given:
          def cal = Calendar.getInstance()
          cal.set(Calendar.YEAR, 2018)
          cal.set(Calendar.MONTH, Calendar.SEPTEMBER)
          cal.set(Calendar.DAY_OF_MONTH, 25)
    
          expect:
          client.hello(cal.time, cal.time, 'hello').blockingGet() == "aDate: 2018-09-25, anOptionalDate: 2018-09-25, anOptionalString: hello"
       }
    }

Note these are groovy files

*Expected Result*
Test passes.  The value returned by the controller is;
`aDate: 2018-09-25, anOptionalDate: 2018-09-25, anOptionalString: hello`

*Actual Result*
Test fails.  The optional date parameter is not bound, but both the mandatory date and and the optional string are.  The value returned by the controller is;
`aDate: 2018-09-25, anOptionalDate: Null, anOptionalString: hello`

*Environment Information*

- **Operating System**:Windows
- **Micronaut Version:** 1.2.0.RC2
- **JDK Version:** AdoptIOPenJdk 8.0.212.04
