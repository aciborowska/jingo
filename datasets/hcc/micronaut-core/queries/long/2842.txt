### Summary Description

Passing a `GString` to Micronaut Websocket implementation `broadcast()` or `send()` message functions results in garbled output (as in the data passed to the wire is not a string). 

In my brief investigation it seems like [io.micronaut.http.netty.websocket.encodeMessage()](https://github.com/micronaut-projects/micronaut-core/blob/1.3.x/http-netty/src/main/java/io/micronaut/http/netty/websocket/WebSocketMessageEncoder.java) does not recognize the passed object type but ends up encoding the byte representation of the object instead of the String it is intended to represent.

### Task List

- [ ] Stacktrace (if present) provided
- [ ] Example that reproduces the problem uploaded to Github
- [ ] Steps to reproduce provided
- [ ] Full description of the issue provided (see below)

### Steps to Reproduce

1. Take the [Micronaut Websocket Chat example](https://github.com/micronaut-projects/micronaut-examples/tree/master/websocket-chat) and change the [ChatWebSocket](https://github.com/micronaut-projects/micronaut-examples/blob/master/websocket-chat/src/main/java/websocket/chat/ChatWebSocket.java) to a Groovy file.
2. Change the pieces of code that create the message to format using `GStrings`, for example:
```
        String msg = "[" + username + "] Joined!";
        return broadcaster.broadcast(msg, isValid(topic));
```
becomes
```
        String msg = "[${username}] Joined!";
        return broadcaster.broadcast(msg, isValid(topic));
```

3. Run the example. On the client (browser) end access the app with http://localhost:8080/#/mytopic/bob
4. Observe the app prints `[bob] Joined!`
5. Change the msg defition above to `def msg = "[${username}] Joined!";`
6. Run the example. On the client (browser) end access the app with http://localhost:8080/#/mytopic/bob
7. Observe the app prints something like this:
```
{"values":["bob"],"strings":["[","] Joined!"],"bytes":"W2JvYl0gSm9pbmVkIQ==","valueCount":1}
```
8. I also tried with `WebSocketSession.sendAsync()` and `WebSocketSession.sendSync()` and the behaviour is identical.

### Expected Behaviour

I would expect passing a `GString` to be printed as `[Bob] Joined!`. Or whatever the String representation is. Changing the `def msg` to `String msg` always works, because I guess then the passed object type is recognized.

### Actual Behaviour

It prints what seems like a binary representation of the `GString`. This also happens if you directly pass the `GString` such as `broadcast("[${username}] Joined!", isValid(topic))`

So instead of:

`[Bob] Joined!`

It prints

```
{"values":["bob"],"strings":["[","] Joined!"],"bytes":"W2JvYl0gSm9pbmVkIQ==","valueCount":1}
```

### Environment Information

- **Operating System**: MacOS 10.15
- **Micronaut Version:** 1.3.0
- **JDK Version:** 11

### Example Application

- The Micronaut Chat when converted to Groovy as outlined above works

