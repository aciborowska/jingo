Looks like Netty leak detector is reporting a potential LEAK at line 213 in `io.micronaut.http.server.netty.NettyHttpRequest.buildBody`,  `CompositeByteBuf byteBufs = channelHandlerContext.alloc().compositeBuffer(size);` 

```Java
        } else if (!receivedContent.isEmpty()) {
            int size = receivedContent.size();
            CompositeByteBuf byteBufs = channelHandlerContext.alloc().compositeBuffer(size);
            for (ByteBufHolder holder : receivedContent) {
                ByteBuf content = holder.content();
                if (content != null) {
                    byteBufs.addComponent(true, content);
                }
            }
            return byteBufs;
        } else {

```

### Steps to Reproduce

1.  Create a simple micronaut application 
2. Add a controller class contains below method: 
```Java
  @Post(consumes = { MediaType.TEXT_PLAIN, MediaType.APPLICATION_JSON })
  public HttpResponse<?> leak(@Body String message) {
    return HttpResponse.ok(message.getBytes().length);
  }

```
3. Run a class which keeps sending requests to the controller, and keep monitoring the output of the application 
```Java
package hello.mn4;

import java.io.IOException;

import org.apache.http.HttpResponse;
import org.apache.http.client.fluent.Request;
import org.apache.http.entity.ContentType;

public class NettyLeakTest {

  static String content = "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\n"
    + "rAVNsruoaSW20BkjNJqplqREY2nMnAs=\n"
    + "=Grt8\n";

  public static void main(String[] args) throws IOException {
    // Execute a GET with timeout settings and return response content as String.
    for (int i = 0; i < 1500; i++) {
      HttpResponse response = Request.Post("http://localhost:8080/test")
        .connectTimeout(2000)
        .socketTimeout(2000)
        .bodyString(content, ContentType.TEXT_PLAIN)
        .execute().returnResponse();
      int statusCode = response.getStatusLine().getStatusCode();
      System.out.println(i + ":" + statusCode);
      try {
        Thread.sleep(30);
      }
      catch (InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
}

```

### Expected Behaviour

No errors should be reported

### Actual Behaviour

We got this error stack trace 
```
/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/bin/java "-javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=61917:/Applications/IntelliJ IDEA CE.app/Contents/bin" -Dfile.encoding=UTF-8 -classpath /Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_181.jdk/Contents/Home/lib/tools.jar:/Users/alex/my/micronaut-examples/hello-mn4/out/production/classes:/Users/alex/my/micronaut-examples/hello-mn4/out/production/resources:/Users/alex/.gradle/caches/modules-2/files-2.1/io.micronaut/micronaut-validation/1.0.4/8773574fa34292fc7b77bdddde590b28d6bac050/micronaut-validation-1.0.4.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/io.micronaut/micronaut-http-client/1.0.4/9020aab6425e8c22b98e8c9cc9dde51071a68e62/micronaut-http-client-1.0.4.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/io.micronaut/micronaut-http-server-netty/1.0.4/ce3319a7d8553c522ff4abf22f1e65a5683fa400/micronaut-http-server-netty-1.0.4.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/io.micronaut/micronaut-http-server/1.0.4/6c0e7a40fc4570f30d6ad57fa1ea127d8cef5733/micronaut-http-server-1.0.4.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/io.micronaut/micronaut-runtime/1.0.4/6cff3b971ee77f0152498411d841c27cf6fb96b0/micronaut-runtime-1.0.4.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/io.micronaut/micronaut-http-netty/1.0.4/e855554a58de2da9fe61e5e5e6af63639cc47d8e/micronaut-http-netty-1.0.4.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/io.micronaut/micronaut-websocket/1.0.4/9c2ca2b44a3131f797c9a38563d8f10c1fd86521/micronaut-websocket-1.0.4.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/io.micronaut/micronaut-router/1.0.4/a6c71b594d3a09bdb6a274bb1aadb196641fb12c/micronaut-router-1.0.4.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/io.micronaut/micronaut-http/1.0.4/21da9b8d30dcfbd421e6a97724f6f30646e5d03f/micronaut-http-1.0.4.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/io.micronaut/micronaut-aop/1.0.4/c96e77568b290fdf34b173fc9741c0464c7f0020/micronaut-aop-1.0.4.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/io.micronaut/micronaut-inject/1.0.4/c36db6668703ad0f117cfa9514255c2edcdfbcf7/micronaut-inject-1.0.4.jar:/Users/alex/.m2/repository/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/fluent-hc/4.5.7/b7638c48c30b3cf76bdc2200a5d4208b2be6fedf/fluent-hc-4.5.7.jar:/Users/alex/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/io.micronaut/micronaut-buffer-netty/1.0.4/c8eb61c0d1646409d25730d671645c42959e231/micronaut-buffer-netty-1.0.4.jar:/Users/alex/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/io.micronaut/micronaut-core/1.0.4/8485d33f68e7faba8e6f999c44b69b88073dee1d/micronaut-core-1.0.4.jar:/Users/alex/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23.jar:/Users/alex/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/Users/alex/.m2/repository/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jdk8/2.9.8/bcd02aa9195390e23747ed40bf76be869ad3a2fb/jackson-datatype-jdk8-2.9.8.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.datatype/jackson-datatype-jsr310/2.9.8/28ad1bced632ba338e51c825a652f6e11a8e6eac/jackson-datatype-jsr310-2.9.8.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-databind/2.9.8/11283f21cc480aa86c4df7a0a3243ec508372ed2/jackson-databind-2.9.8.jar:/Users/alex/.m2/repository/io/reactivex/rxjava2/rxjava/2.2.2/rxjava-2.2.2.jar:/Users/alex/.m2/repository/io/netty/netty-handler-proxy/4.1.30.Final/netty-handler-proxy-4.1.30.Final.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpclient/4.5.7/dda059f4908e1b548b7ba68d81a3b05897f27cb0/httpclient-4.5.7.jar:/Users/alex/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/alex/.m2/repository/org/reactivestreams/reactive-streams/1.0.2/reactive-streams-1.0.2.jar:/Users/alex/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/Users/alex/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-annotations/2.9.8/ba7f0e6f8f1b28d251eeff2a5604bed34c53ff35/jackson-annotations-2.9.8.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.9.8/f5a654e4675769c716e5b387830d19b501ca191/jackson-core-2.9.8.jar:/Users/alex/.m2/repository/io/netty/netty-codec-http/4.1.30.Final/netty-codec-http-4.1.30.Final.jar:/Users/alex/.m2/repository/io/netty/netty-handler/4.1.30.Final/netty-handler-4.1.30.Final.jar:/Users/alex/.m2/repository/io/netty/netty-codec-socks/4.1.30.Final/netty-codec-socks-4.1.30.Final.jar:/Users/alex/.m2/repository/io/netty/netty-codec/4.1.30.Final/netty-codec-4.1.30.Final.jar:/Users/alex/.m2/repository/io/netty/netty-transport/4.1.30.Final/netty-transport-4.1.30.Final.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/org.apache.httpcomponents/httpcore/4.4.11/de748cf874e4e193b42eceea9fe5574fabb9d4df/httpcore-4.4.11.jar:/Users/alex/.gradle/caches/modules-2/files-2.1/commons-codec/commons-codec/1.11/3acb4705652e16236558f0f4f2192cc33c3bd189/commons-codec-1.11.jar:/Users/alex/.m2/repository/io/netty/netty-buffer/4.1.30.Final/netty-buffer-4.1.30.Final.jar:/Users/alex/.m2/repository/io/netty/netty-resolver/4.1.30.Final/netty-resolver-4.1.30.Final.jar:/Users/alex/.m2/repository/io/netty/netty-common/4.1.30.Final/netty-common-4.1.30.Final.jar hello.mn4.Application
11:34:02.233 [main] INFO  io.micronaut.runtime.Micronaut - Startup completed in 999ms. Server Running: http://localhost:8080
11:34:29.402 [nioEventLoopGroup-1-2] ERROR io.netty.util.ResourceLeakDetector - LEAK: ByteBuf.release() was not called before it's garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.
Recent access records: 
Created at:
	io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:331)
	io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:185)
	io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:176)
	io.netty.buffer.AbstractByteBufAllocator.ioBuffer(AbstractByteBufAllocator.java:137)
	io.netty.channel.DefaultMaxMessagesRecvByteBufAllocator$MaxMessageHandle.allocate(DefaultMaxMessagesRecvByteBufAllocator.java:114)
	io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:147)
	io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:644)
	io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:579)
	io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:496)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:458)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	java.lang.Thread.run(Thread.java:748)
11:34:29.402 [nioEventLoopGroup-1-2] ERROR io.netty.util.ResourceLeakDetector - LEAK: ByteBuf.release() was not called before it's garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.
Recent access records: 
Created at:
	io.netty.buffer.AbstractByteBufAllocator.compositeDirectBuffer(AbstractByteBufAllocator.java:221)
	io.netty.buffer.AbstractByteBufAllocator.compositeBuffer(AbstractByteBufAllocator.java:199)
	io.micronaut.http.server.netty.NettyHttpRequest.buildBody(NettyHttpRequest.java:213)
	io.micronaut.http.server.netty.NettyHttpRequest.getBody(NettyHttpRequest.java:177)
	io.micronaut.http.server.netty.RoutingInBoundHandler$1.doOnNext(RoutingInBoundHandler.java:792)
	io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onNext(CompletionAwareSubscriber.java:53)
	io.micronaut.http.server.netty.DefaultHttpContentProcessor.lambda$publishVerifiedContent$1(DefaultHttpContentProcessor.java:114)
	java.util.Optional.ifPresent(Optional.java:159)
	io.micronaut.http.server.netty.DefaultHttpContentProcessor.publishVerifiedContent(DefaultHttpContentProcessor.java:114)
	io.micronaut.http.server.netty.DefaultHttpContentProcessor.onUpstreamMessage(DefaultHttpContentProcessor.java:84)
	io.micronaut.http.server.netty.DefaultHttpContentProcessor.onUpstreamMessage(DefaultHttpContentProcessor.java:39)
	io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnNext(SingleThreadedBufferingProcessor.java:57)
	io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onNext(SingleThreadedBufferingSubscriber.java:92)
	io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:461)
	io.micronaut.http.netty.reactive.HandlerPublisher.channelRead(HandlerPublisher.java:417)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:245)
	io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:223)
	io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:122)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)
	io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:187)
	io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:129)
	io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:693)
	io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:673)
	io.netty.channel.ChannelDuplexHandler.read(ChannelDuplexHandler.java:95)
	io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:693)
	io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:673)
	io.netty.channel.ChannelDuplexHandler.read(ChannelDuplexHandler.java:95)
	io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:693)
	io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:673)
	io.netty.channel.ChannelDuplexHandler.read(ChannelDuplexHandler.java:95)
	io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:693)
	io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:673)
	io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:164)
	io.micronaut.http.netty.stream.HttpStreamsHandler$1.requestDemand(HttpStreamsHandler.java:215)
	io.micronaut.http.netty.reactive.HandlerPublisher.receivedDemand(HandlerPublisher.java:326)
	io.micronaut.http.netty.reactive.HandlerPublisher.access$300(HandlerPublisher.java:67)
	io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:548)
	io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462)
	io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	java.lang.Thread.run(Thread.java:748)
```

### Environment Information

- **Operating System**: MacOS
- **Micronaut Version:** 1.0.4 
- **JDK Version:** Java 10

### Example Application

- TODO: link to github repository with example that reproduces the issue

