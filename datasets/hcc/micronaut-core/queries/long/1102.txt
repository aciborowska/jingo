### Task List

- [x] Steps to reproduce provided
- [x] Stacktrace (if present) provided
- [ ] Example that reproduces the problem uploaded to Github
- [x] Full description of the issue provided (see below)

### Steps to Reproduce

1. Enable JWT Encryption in a sample app using SecretEncyptionConfiguration (e.g. it could be added easily enough to this sample app: https://github.com/micronaut-guides/micronaut-security-jwt)
2. Set valid configuration options, such as jwe-algorithm=dir, encryption-method=A128CBC-HS256. A secret also needs to be provided.
3. Run the app

### Expected Behaviour

If the JWEAlgorithm and the EncryptionMethod given in the configuration are supported and mutually compatible, no ConfigurationException should be thrown from the SecretEncryption constructor. The exception should be thrown if they are incompatible and/or unsupported.

### Actual Behaviour

The constructor fails with a ConfigurationException if the JWEAlgorithm and the EncyptionMethod ARE supported and mutually compatible.

### Suggested Fix

It looks to me like the logic on line 52 of `micronaut-core/security-jwt/src/main/java/io/micronaut/security/token/jwt/encryption/secret/SecretEncryption.java` is the wrong way around - the if statement should read `if(!supported(...))` rather than `if(supported(...)`).

### Environment Information

- **Operating System**: MacOS 10.13.6
- **Micronaut Version:** 1.0.2
- **JDK Version:** 11.0.1

### Stack Trace

```
18:00:37.797 [nioEventLoopGroup-1-2] ERROR i.m.h.s.netty.RoutingInBoundHandler - Unexpected error occurred: Error instantiating bean of type  [io.micronaut.security.token.jwt.validator.JwtTokenValidator]

Message: Encryption Method: A128CBC-HS256JWE Algorithm: dir not supported for Secret encryption
Path Taken: new SecurityFilter(Collection securityRules,[Collection authenticationFetchers],RejectionHandler rejectionHandler,SecurityFilterOrderProvider securityFilterOrderProvider) --> new TokenAuthenticationFetcher([Collection tokenValidators],Collection tokenReaders,ApplicationEventPublisher eventPublisher) --> new JwtTokenValidator(Collection signatureConfigurations,[Collection encryptionConfigurations])
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [io.micronaut.security.token.jwt.validator.JwtTokenValidator]

Message: Encryption Method: A128CBC-HS256JWE Algorithm: dir not supported for Secret encryption
Path Taken: new SecurityFilter(Collection securityRules,[Collection authenticationFetchers],RejectionHandler rejectionHandler,SecurityFilterOrderProvider securityFilterOrderProvider) --> new TokenAuthenticationFetcher([Collection tokenValidators],Collection tokenReaders,ApplicationEventPublisher eventPublisher) --> new JwtTokenValidator(Collection signatureConfigurations,[Collection encryptionConfigurations])
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:1343)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:2237)
	at io.micronaut.context.DefaultBeanContext.getBeansOfTypeInternal(DefaultBeanContext.java:2165)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:765)
	at io.micronaut.context.AbstractBeanDefinition.lambda$getBeansOfTypeForConstructorArgument$10(AbstractBeanDefinition.java:1079)
	at io.micronaut.context.AbstractBeanDefinition.resolveBeanWithGenericsFromConstructorArgument(AbstractBeanDefinition.java:1674)
	at io.micronaut.context.AbstractBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractBeanDefinition.java:1074)
	at io.micronaut.context.AbstractBeanDefinition.getBeanForConstructorArgument(AbstractBeanDefinition.java:953)
	at io.micronaut.security.token.jwt.validator.$JwtTokenValidatorDefinition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:1329)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:2237)
	at io.micronaut.context.DefaultBeanContext.getBeansOfTypeInternal(DefaultBeanContext.java:2165)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:765)
	at io.micronaut.context.AbstractBeanDefinition.lambda$getBeansOfTypeForConstructorArgument$10(AbstractBeanDefinition.java:1079)
	at io.micronaut.context.AbstractBeanDefinition.resolveBeanWithGenericsFromConstructorArgument(AbstractBeanDefinition.java:1674)
	at io.micronaut.context.AbstractBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractBeanDefinition.java:1074)
	at io.micronaut.context.AbstractBeanDefinition.getBeanForConstructorArgument(AbstractBeanDefinition.java:953)
	at io.micronaut.security.token.$TokenAuthenticationFetcherDefinition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:1329)
	at io.micronaut.context.DefaultBeanContext.addCandidateToList(DefaultBeanContext.java:2237)
	at io.micronaut.context.DefaultBeanContext.getBeansOfTypeInternal(DefaultBeanContext.java:2165)
	at io.micronaut.context.DefaultBeanContext.getBeansOfType(DefaultBeanContext.java:765)
	at io.micronaut.context.AbstractBeanDefinition.lambda$getBeansOfTypeForConstructorArgument$10(AbstractBeanDefinition.java:1079)
	at io.micronaut.context.AbstractBeanDefinition.resolveBeanWithGenericsFromConstructorArgument(AbstractBeanDefinition.java:1674)
	at io.micronaut.context.AbstractBeanDefinition.getBeansOfTypeForConstructorArgument(AbstractBeanDefinition.java:1074)
	at io.micronaut.context.AbstractBeanDefinition.getBeanForConstructorArgument(AbstractBeanDefinition.java:953)
	at io.micronaut.security.filters.$SecurityFilterDefinition.build(Unknown Source)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:1329)
	at io.micronaut.context.DefaultBeanContext.createAndRegisterSingleton(DefaultBeanContext.java:1902)
	at io.micronaut.context.DefaultBeanContext.getBeanForDefinition(DefaultBeanContext.java:1623)
	at io.micronaut.context.DefaultBeanContext.getBeanInternal(DefaultBeanContext.java:1603)
	at io.micronaut.context.DefaultBeanContext.getBean(DefaultBeanContext.java:512)
	at io.micronaut.web.router.AnnotatedFilterRouteBuilder.lambda$process$0(AnnotatedFilterRouteBuilder.java:77)
	at io.micronaut.web.router.DefaultFilterRoute.getFilter(DefaultFilterRoute.java:67)
	at io.micronaut.web.router.DefaultFilterRoute.match(DefaultFilterRoute.java:83)
	at io.micronaut.web.router.DefaultRouter.findFilters(DefaultRouter.java:237)
	at io.micronaut.http.server.netty.RoutingInBoundHandler.filterPublisher(RoutingInBoundHandler.java:1321)
	at io.micronaut.http.server.netty.RoutingInBoundHandler.lambda$prepareRouteForExecution$8(RoutingInBoundHandler.java:911)
	at io.micronaut.web.router.DefaultUriRouteMatch$1.execute(DefaultUriRouteMatch.java:82)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:123)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$1.executeRoute(RoutingInBoundHandler.java:811)
	at io.micronaut.http.server.netty.RoutingInBoundHandler$1.doOnComplete(RoutingInBoundHandler.java:804)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:72)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor$1.doOnComplete(JsonContentProcessor.java:128)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:72)
	at java.base/java.util.Optional.ifPresent(Optional.java:183)
	at io.micronaut.core.async.processor.SingleThreadedBufferingProcessor.doOnComplete(SingleThreadedBufferingProcessor.java:49)
	at io.micronaut.jackson.parser.JacksonProcessor.doOnComplete(JacksonProcessor.java:97)
	at io.micronaut.core.async.subscriber.SingleThreadedBufferingSubscriber.onComplete(SingleThreadedBufferingSubscriber.java:71)
	at io.micronaut.http.server.netty.jackson.JsonContentProcessor.doOnComplete(JsonContentProcessor.java:153)
	at io.micronaut.core.async.subscriber.CompletionAwareSubscriber.onComplete(CompletionAwareSubscriber.java:72)
	at io.micronaut.http.netty.reactive.HandlerPublisher.complete(HandlerPublisher.java:499)
	at io.micronaut.http.netty.reactive.HandlerPublisher.handlerRemoved(HandlerPublisher.java:486)
	at io.netty.channel.DefaultChannelPipeline.callHandlerRemoved0(DefaultChannelPipeline.java:670)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:505)
	at io.netty.channel.DefaultChannelPipeline.remove(DefaultChannelPipeline.java:451)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.removeHandlerIfActive(HttpStreamsHandler.java:388)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:253)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:226)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:122)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:187)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:129)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:693)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:673)
	at io.netty.channel.ChannelDuplexHandler.read(ChannelDuplexHandler.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:693)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:673)
	at io.netty.channel.ChannelDuplexHandler.read(ChannelDuplexHandler.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:693)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:673)
	at io.netty.channel.ChannelDuplexHandler.read(ChannelDuplexHandler.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:693)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:673)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:164)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$1.requestDemand(HttpStreamsHandler.java:218)
	at io.micronaut.http.netty.reactive.HandlerPublisher.publishMessage(HandlerPublisher.java:471)
	at io.micronaut.http.netty.reactive.HandlerPublisher.channelRead(HandlerPublisher.java:417)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.handleReadHttpContent(HttpStreamsHandler.java:258)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:226)
	at io.micronaut.http.netty.stream.HttpStreamsServerHandler.channelRead(HttpStreamsServerHandler.java:122)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)
	at io.netty.handler.codec.http.HttpServerKeepAliveHandler.channelRead(HttpServerKeepAliveHandler.java:64)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.flow.FlowControlHandler.dequeue(FlowControlHandler.java:187)
	at io.netty.handler.flow.FlowControlHandler.read(FlowControlHandler.java:129)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:693)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:673)
	at io.netty.channel.ChannelDuplexHandler.read(ChannelDuplexHandler.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:693)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:673)
	at io.netty.channel.ChannelDuplexHandler.read(ChannelDuplexHandler.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:693)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:673)
	at io.netty.channel.ChannelDuplexHandler.read(ChannelDuplexHandler.java:95)
	at io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:693)
	at io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:673)
	at io.micronaut.http.netty.reactive.HandlerPublisher.requestDemand(HandlerPublisher.java:164)
	at io.micronaut.http.netty.stream.HttpStreamsHandler$1.requestDemand(HttpStreamsHandler.java:218)
	at io.micronaut.http.netty.reactive.HandlerPublisher.receivedDemand(HandlerPublisher.java:326)
	at io.micronaut.http.netty.reactive.HandlerPublisher.access$300(HandlerPublisher.java:67)
	at io.micronaut.http.netty.reactive.HandlerPublisher$ChannelSubscription.lambda$request$0(HandlerPublisher.java:548)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: io.micronaut.context.exceptions.ConfigurationException: Encryption Method: A128CBC-HS256JWE Algorithm: dir not supported for Secret encryption
	at io.micronaut.security.token.jwt.encryption.secret.SecretEncryption.<init>(SecretEncryption.java:59)
	at io.micronaut.security.token.jwt.encryption.secret.SecretEncryptionFactory.encryptionConfiguration(SecretEncryptionFactory.java:38)
	at io.micronaut.security.token.jwt.encryption.secret.$SecretEncryptionFactory$EncryptionConfigurationDefinition.build(Unknown Source)
	at io.micronaut.context.BeanDefinitionDelegate.build(BeanDefinitionDelegate.java:197)
	at io.micronaut.context.DefaultBeanContext.doCreateBean(DefaultBeanContext.java:1329)
	... 132 common frames omitted


```