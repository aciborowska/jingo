From [this issue](https://github.com/micronaut-projects/micronaut-core/issues/1517), I understood that I could configure my service so uses has a contextPath.

### Steps to Reproduce

1. Create the following client:

```
@io.micronaut.http.client.annotation.Client(id = "MyClient")
public interface MyClient {
	@io.micronaut.http.annotation.Get("/values{?valueIds}")
	@io.micronaut.http.annotation.Produces({ "application/json" })
	java.util.List<MyValue> getValues(
			@javax.validation.constraints.NotNull
			@io.micronaut.http.annotation.QueryValue
					java.util.List<String> valueIds
	);
}
```

2. Configure the following service in your application.yml
```
micronaut:
  http:
    client:
      read-timeout: 500s
    services:
      MyClient:
        urls:
          - http://localhost:8090
        path: /myBasePath
```
3. Get it injected with this code
```
public MyService(MyClient myClient) {
	this.myClient = myClient;
}
```

4. call the method

`myClient.getValues(myList)`

### Expected Behaviour
The client calls the endpoint in the format <server>/path/<method>
In this case `http://localhost:8090/myBasePath/values....`

### Actual Behaviour

The base path is ignored, and the following endpoint is called
`http://localhost:8090/values....`

I can debug and verify that the value is being stored in a `ServiceHttpClientConfiguration` object, but it is never read. even `io.micronaut.http.client.interceptor.HttpClientIntroductionAdvice#getClient` does not invoke retrieve this configuration.

### Environment Information

- **Operating System**: TODO
- **Micronaut Version:** TODO
- **JDK Version:** TODO

### Example Application

- TODO: link to github repository with example that reproduces the issue

