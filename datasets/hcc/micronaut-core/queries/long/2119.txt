### Task List

- [X] Steps to reproduce provided
- [ ] Stacktrace (if present) provided
- [ ] Example that reproduces the problem uploaded to Github
- [X] Full description of the issue provided (see below)

### Steps to Reproduce


	import javax.inject.Inject;
	import javax.inject.Singleton;
	import java.util.Collections;
	
	import io.micronaut.context.annotation.Requires;
	import io.micronaut.core.io.Writable;
	import io.micronaut.http.HttpRequest;
	import io.micronaut.http.MediaType;
	import io.micronaut.http.annotation.Produces;
	import io.micronaut.http.server.exceptions.ExceptionHandler;
	import io.micronaut.views.ViewsRenderer;

	@Produces(value = MediaType.TEXT_HTML)
	@Singleton
	@Requires(classes = {ExceptionHandler.class, ViewsRenderer.class})
	public class PluginLoaderExceptionHandler implements ExceptionHandler<Exception, Writable> {

		@Inject
		private ViewsRenderer viewsRenderer;

		@Override
		public Writable handle(HttpRequest request, Exception e) {
			return viewsRenderer.render("error", Collections.singletonMap("exception", e), request);
		}
	}

### Expected Behaviour

`text/html` as as content type

### Actual Behaviour

`application/json` as as content type

### Environment Information

- **Operating System**: Ubuntu
- **Micronaut Version:** 1.2.1
- **JDK Version:** Open JDK 1.8.0_212

### Example Application

- TODO: link to github repository with example that reproduces the issue

