### Task List

- [x] Steps to reproduce provided
- [x] Stacktrace (if present) provided
- [x] Example that reproduces the problem uploaded to Github
- [x] Full description of the issue provided (see below)

### Steps to Reproduce

1. Create a new Micronaut Java project by running:
 ```
mn create-app example.hello-java -l java --features spock
```
2. Create an interface `TestApi` as:
```
public interface TestApi {
    Single<HttpResponse<String>> greeting(String name);
}
```
3. Create a new service `TestService` and inject the `testApi` using constructor injection as:
```
@Singleton
public class TestService {

    private final TestApi testApi;

    public TestService(TestApi testApi) {
        this.testApi = testApi;
    }

    String greeting(String name) {
        return testApi.greeting(name).blockingGet().body();
    }
}
```
4. Create a test for the service as:
```
@MicronautTest
class TestApiMockSpec extends Specification {

    @Inject TestService testService
    @Inject TestApi testApi

    void "testOne"() {
        when:
        String result = testService.greeting("john")

        then:
        "Hello, John!" == result
        1 * testApi.greeting("john") >> Single.just(HttpResponse.ok("Hello, John!"))
    }

    void "testTwo"() {
        when:
        String result = testService.greeting("jady")

        then:
        "Hello, Jady!" == result
        1 * testApi.greeting("jady") >> Single.just(HttpResponse.ok("Hello, Jady!"))
    }

    @MockBean(TestApi.class)
    TestApi testApi() {
        Mock(TestApi.class)
    }
}
```

### Expected Behaviour

The tests should pass.

### Actual Behaviour

```
java.lang.NullPointerException
	at example.TestService.greeting(TestService.java:15)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at example.TestApiMockSpec.testTwo(TestApiMockSpec.groovy:28)
```

### Environment Information

- **Operating System**: macOS Mojave (Version 10.14.5)
- **Micronaut Version:** 1.1.3
- **JDK Version:** 8u152-zulu

### Example Application

[hello-java.zip](https://github.com/micronaut-projects/micronaut-test/files/3285625/hello-java.zip)

#### Please Note
The application works fine if I replace `@MockBean(TestApi.class)` with `@MockBean(TestClient.class)` where test client is as follows:
```
@Client
public interface TestClient extends TestApi {

    @Get("/greeting")
    @Override
    Single<HttpResponse<String>> greeting(String name);
}

```


