When using consul in combination with kubernetes the application is always unhealthy due to an exception in `CompositeDiscoveryClient`. Kubernetes is not used to discover services.

### Steps to Reproduce

1. Have a consul running `docker run -p 8500:8500 consul:1.2.4`
3. Enable `discovery-client` and `management` and configure consul registration. Run `mn create-app bug --features management,discovery-consul`
4. Enable `k8s` environment using `-Dmicronaut.environments=k8s`. Don't need to actually run it in kubernetes 
5. Enable health checks. Add 
```
endpoints:
  health:
    enabled: true
    sensitive: false
    details-visible: ANONYMOUS
```
to `application.yaml`
5. Set log level to debug to see the exception.
6. Start application.
7. Call the health endpoint http://localhost:8080/health. Check logs for exception.

### Expected Behaviour

There should be no exception and service discovery should work for consul. Especially the application should not become unhealthy.

### Actual Behaviour

The following exception is thrown and the application enters unhealthy state.

```
14:03:50.253 [nioEventLoopGroup-1-3] ERROR i.m.m.health.indicator.HealthResult - Health indicator [compositeDiscoveryClient(kubernetes,consul)] reported exception: 
java.lang.UnsupportedOperationException: null
	at java.util.AbstractList.add(AbstractList.java:148)
	at java.util.AbstractList.add(AbstractList.java:108)
	at java.util.AbstractCollection.addAll(AbstractCollection.java:344)
	at io.micronaut.discovery.CompositeDiscoveryClient.lambda$getInstances$1(CompositeDiscoveryClient.java:71)
	at io.reactivex.internal.operators.flowable.FlowableReduceMaybe$ReduceSubscriber.onNext(FlowableReduceMaybe.java:108)
	at io.micronaut.reactive.rxjava2.InstrumentedSubscriber.lambda$onNext$0(InstrumentedSubscriber.java:80)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:52)
	at io.micronaut.http.context.ServerRequestContext.lambda$instrument$0(ServerRequestContext.java:68)
	at io.micronaut.reactive.rxjava2.InstrumentedSubscriber.onNext(InstrumentedSubscriber.java:84)
	at io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber.tryEmit(FlowableFlatMap.java:282)
	at io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber.onNext(FlowableFlatMap.java:663)
	at io.micronaut.reactive.rxjava2.InstrumentedSubscriber.lambda$onNext$0(InstrumentedSubscriber.java:80)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:52)
	at io.micronaut.http.context.ServerRequestContext.lambda$instrument$0(ServerRequestContext.java:68)
	at io.micronaut.reactive.rxjava2.InstrumentedSubscriber.onNext(InstrumentedSubscriber.java:84)
	at io.micronaut.core.async.publisher.Publishers$JustPublisher$1.request(Publishers.java:340)
	at io.reactivex.internal.operators.flowable.FlowableFlatMap$InnerSubscriber.onSubscribe(FlowableFlatMap.java:656)
	at io.micronaut.reactive.rxjava2.InstrumentedSubscriber.onSubscribe(InstrumentedSubscriber.java:75)
	at io.micronaut.core.async.publisher.Publishers$JustPublisher.subscribe(Publishers.java:330)
	at io.reactivex.internal.operators.flowable.FlowableFromPublisher.subscribeActual(FlowableFromPublisher.java:29)
	at io.reactivex.Flowable.subscribe(Flowable.java:14805)
	at io.reactivex.Flowable.subscribe(Flowable.java:14752)
	at io.micronaut.reactive.rxjava2.RxInstrumentedFlowable.subscribeActual(RxInstrumentedFlowable.java:68)
	at io.reactivex.Flowable.subscribe(Flowable.java:14805)
	at io.reactivex.Flowable.subscribe(Flowable.java:14752)
	at io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber.onNext(FlowableFlatMap.java:163)
	at io.micronaut.reactive.rxjava2.InstrumentedSubscriber.lambda$onNext$0(InstrumentedSubscriber.java:80)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:52)
	at io.micronaut.http.context.ServerRequestContext.lambda$instrument$0(ServerRequestContext.java:68)
	at io.micronaut.reactive.rxjava2.InstrumentedSubscriber.onNext(InstrumentedSubscriber.java:84)
	at io.reactivex.internal.operators.flowable.FlowableFromIterable$IteratorSubscription.slowPath(FlowableFromIterable.java:236)
	at io.reactivex.internal.operators.flowable.FlowableFromIterable$BaseRangeSubscription.request(FlowableFromIterable.java:124)
	at io.reactivex.internal.operators.flowable.FlowableFlatMap$MergeSubscriber.onSubscribe(FlowableFlatMap.java:117)
	at io.micronaut.reactive.rxjava2.InstrumentedSubscriber.onSubscribe(InstrumentedSubscriber.java:75)
    ....
```

### Environment Information

- **Operating System**: Linux (Ubuntu 18.04)
- **Micronaut Version:** 1.1.1
- **JDK Version:** OpenJDK 1.8_191

### Example Application

https://github.com/hanbei/micronaut-bug



