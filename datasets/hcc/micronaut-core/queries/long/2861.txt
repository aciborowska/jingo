Thanks for reporting an issue for Micronaut, please review the task list below before submitting the
issue. Your issue report will be closed if the issue is incomplete and the below tasks not completed.

NOTE: If you are unsure about something and the issue is more of a question a better place to ask questions is on Stack Overflow (http://stackoverflow.com/tags/micronaut) or Gitter (https://gitter.im/micronautfw/). DO NOT use the issue tracker to ask questions.

### Task List

- [x] Steps to reproduce provided
- [x] Stacktrace (if present) provided
- [x] Example that reproduces the problem uploaded to Github
- [x] Full description of the issue provided (see below)



### Steps to Reproduce

1. Deploy any lambda to AWS, you can use AnyLambda from sample project
2. Use FunctionClient to call your lambda(Hit endpoint POST /test/function from sample project)
3. In logs you will see:
```
11:18:58.017 [pool-1-thread-2] DEBUG i.m.context.condition.Condition - Bean [Definition: io.micronaut.function.client.aws.AWSLambdaFunctionExecutor] will not be loaded due to failing conditions:
11:18:58.017 [pool-1-thread-2] DEBUG i.m.context.condition.Condition - * No bean of type [interface com.amazonaws.services.lambda.AWSLambdaAsync] present within context
```
4. Lack of AWSLambdaFunctionExecutor will result in exception:
```
11:18:58.221 [pool-1-thread-2] ERROR i.m.r.intercept.RecoveryInterceptor - Type [example.micronaut.ExampleFunctionClient$Intercepted] executed with error: No function found for name: presense-services-schemata
io.micronaut.function.client.exceptions.FunctionNotFoundException: No function found for name: presense-services-schemata
	at io.micronaut.function.client.aop.FunctionClientAdvice.lambda$intercept$3(FunctionClientAdvice.java:96)
	at java.base/java.util.Optional.orElseThrow(Optional.java:408)
	at io.micronaut.function.client.aop.FunctionClientAdvice.intercept(FunctionClientAdvice.java:96)
	at io.micronaut.aop.chain.MethodInterceptorChain.proceed(MethodInterceptorChain.java:69)
	at io.micronaut.retry.intercept.RecoveryInterceptor.intercept(RecoveryInterceptor.java:73)
	at io.micronaut.aop.chain.MethodInterceptorChain.proceed(MethodInterceptorChain.java:69)
	at example.micronaut.ExampleFunctionClient$Intercepted.call(Unknown Source)
	at example.micronaut.TestController.callFunction(TestController.java:22)
	at example.micronaut.$TestControllerDefinition$$exec1.invokeInternal(Unknown Source)
	at io.micronaut.context.AbstractExecutableMethod.invoke(AbstractExecutableMethod.java:146)
	at io.micronaut.context.DefaultBeanContext$BeanExecutionHandle.invoke(DefaultBeanContext.java:2980)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:236)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:122)
	at io.micronaut.http.server.netty.RoutingInBoundHandler.lambda$buildResultEmitter$15(RoutingInBoundHandler.java:1469)
	at io.reactivex.internal.operators.flowable.FlowableCreate.subscribeActual(FlowableCreate.java:71)
	at io.reactivex.Flowable.subscribe(Flowable.java:14918)
	at io.reactivex.internal.operators.flowable.FlowableMap.subscribeActual(FlowableMap.java:37)
	at io.reactivex.Flowable.subscribe(Flowable.java:14918)
	at io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty.subscribeActual(FlowableSwitchIfEmpty.java:32)
	at io.reactivex.Flowable.subscribe(Flowable.java:14918)
	at io.reactivex.Flowable.subscribe(Flowable.java:14868)
	at io.micronaut.http.context.ServerRequestTracingPublisher.lambda$subscribe$0(ServerRequestTracingPublisher.java:52)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:68)
	at io.micronaut.http.context.ServerRequestTracingPublisher.subscribe(ServerRequestTracingPublisher.java:52)
	at io.reactivex.internal.operators.flowable.FlowableFromPublisher.subscribeActual(FlowableFromPublisher.java:29)
	at io.reactivex.Flowable.subscribe(Flowable.java:14918)
	at io.reactivex.Flowable.subscribe(Flowable.java:14865)
	at io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber.run(FlowableSubscribeOn.java:82)
	at io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable.run(ExecutorScheduler.java:288)
	at io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.run(ExecutorScheduler.java:253)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
```

### Expected Behaviour

Beans: 
- io.micronaut.function.client.aws.AWSLambdaFunctionExecutor
- com.amazonaws.services.lambda.AWSLambdaAsync

Should be created to avoid FunctionNotFoundException

### Actual Behaviour

Beans AWSLambdaFunctionExecutor and AWSLambdaAsync are not created, which results in FunctionNotFoundException. Problem occurs since version 1.3.0.  

### Environment Information

- **Operating System**: macOS Catalina 10.15.3
- **Micronaut Version:** 1.3.0+
- **JDK Version:** 11

### Example Application

https://github.com/rafal-kosinski/micronaut-lambda-error
