Given this Controller:

```java
@Controller("/hello")
public class AController {

	@Get("/{name}")
	@Produces(MediaType.TEXT_PLAIN)
	public String sayHello(String name) {
		return "Hello " + name;
	}

	@Get("/Tom")
	@Produces(MediaType.TEXT_PLAIN)
	public String sayHelloToTom() {
		return "Hey Tom!  It's been a long time.  How have you been?";
	}
}
```

In Micronaut 1.3.4, a GET to `/hello/world` responds with `Hello world` and a GET to `/hello/Tom` returns `Hey Tom!  It's been a long time.  How have you been?`

In Micronaut 2.0.0.M2, a GET to `/hello/world` behaves appropriately, but a GET to `/hello/Tom` returns a 405:
```
HTTP/1.1 405 Method Not Allowed
Allow: HEAD
Content-Type: application/json
connection: close
content-length: 142

{
    "_links": {
        "self": {
            "href": "/hello/Tom",
            "templated": false
        }
    },
    "message": "Method [GET] not allowed for URI [/hello/Tom]. Allowed methods: [HEAD]"
}
```

### Task List

- [x] Steps to reproduce provided
- [ ] Stacktrace (if present) provided
- [x] Example that reproduces the problem uploaded to Github
- [x] Full description of the issue provided (see below)

### Steps to Reproduce

1. Clone https://github.com/JasonTypesCodes/mn2-route-split
2. Start the app `./gradlew run`
3. Issue a GET request to `localhost:8080/hello/Tom`

### Expected Behaviour

If the expectation is that this functionality will continue to work the way it did in Micronaut 1, then the request should return the special message for Tom.  Otherwise, I would expect a `Hello Tom`.

### Actual Behaviour

A 405 is returned

### Environment Information

- **Operating System**: Fedora Linux 30
- **Micronaut Version:** 2.0.0.M2
- **JDK Version:** openjdk version "1.8.0_242"


### Example Application

- https://github.com/JasonTypesCodes/mn2-route-split

