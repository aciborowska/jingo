Suspend functions in controllers are being called twice.

When you request this sample suspend function:

```kotlin
@Controller("/sample")
class SampleController {
    @Get
    suspend fun test() = println("REQUEST")
}
```

The message `REQUEST` will be printed twice.

Seems the offending code is in RoutingInBoundHandler.java, which is calling `routeMatch.execute()` again for suspend functions here:

https://github.com/micronaut-projects/micronaut-core/blob/e3aa44e96b43b8a524152b0c9dc8d1cd3b294573/http-server-netty/src/main/java/io/micronaut/http/server/netty/RoutingInBoundHandler.java#L1374

### Task List

- [x] Steps to reproduce provided
- [x] Stacktrace (if present) provided
- [x] Example that reproduces the problem uploaded to Github
- [x] Full description of the issue provided (see below)

### Steps to Reproduce

1. `git clone https://github.com/mliberato/mn2-request-executed-twice.git`
2. `./gradlew run`
3. `curl http://localhost:8080/sample`

### Expected Behaviour

It should print `REQUEST` to the stdout once per request.

### Actual Behaviour

It is printing `REQUEST` to the stdout twice per request, meaning the request is being executed twice.

### Environment Information

- **Operating System**: macOS 10.15.3
- **Micronaut Version:** 2.0.0.M2
- **JDK Version:** java version "1.8.0_152"

### Example Application

- https://github.com/mliberato/mn2-request-executed-twice

