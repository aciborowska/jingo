### Task List

- [X] Steps to reproduce provided
- [X] Stacktrace (if present) provided
- [X] Example that reproduces the problem uploaded to Github
- [X] Full description of the issue provided (see below)

### Steps to Reproduce

1. Create new "Messaging application" using micronaut.io/launch (all default settings)
2. Setup eager singleton initialization either by modifying Application.main or create TestApplicationContextBuilder and reference it from @MicronautTest 
3. Run the application or execute the unit test

### Expected Behaviour

Application context should start successfully

### Actual Behaviour

Application context fails to start with BeanInstantiationException

### Stacktrace
```
io.micronaut.context.exceptions.BeanInstantiationException: Bean definition [org.apache.kafka.clients.producer.KafkaProducer] could not be loaded: Error instantiating bean of type  [org.apache.kafka.clients.producer.KafkaProducer]

Message: Missing bean argument [AbstractKafkaProducerConfiguration producerConfiguration] for type: org.apache.kafka.clients.producer.KafkaProducer. Required arguments: AbstractKafkaProducerConfiguration producerConfiguration

	at io.micronaut.context.DefaultBeanContext.initializeContext(DefaultBeanContext.java:1540)
	at io.micronaut.context.DefaultApplicationContext.initializeContext(DefaultApplicationContext.java:220)
	at io.micronaut.context.DefaultBeanContext.readAllBeanDefinitionClasses(DefaultBeanContext.java:2771)
	at io.micronaut.context.DefaultBeanContext.start(DefaultBeanContext.java:228)
	at io.micronaut.context.DefaultApplicationContext.start(DefaultApplicationContext.java:166)
```

### Environment Information

- **Operating System**: Windows 10
- **Micronaut Version:** 2.0.2 (but also older versions)
- **JDK Version:** 11

### Example Application

https://github.com/jpragma/mntests/tree/master/kafka-eager-init-demo
