Created a Micronaut application to work with our existing SpringBoot and Grails services. When running the application locally, inside or out of Docker, the new application connects to Eureka and completes health checking without any problems. When deployed to AWS alongside our existing applications, the new app will register with Eureka and reports as up until Health Checking starts about a minute after the app starts up. 

When checking health results for compositeDiscoveryClient(eureka) I am seeing this message in healthResult.getDetails()

```
{error=io.micronaut.http.codec.CodecException: Error decoding JSON stream for type [T]: 
Could not resolve type id 'com.netflix.appinfo.AmazonInfo' as a subtype of [simple type, class io.micronaut.discovery.eureka.client.v2.DataCenterInfo]: 
no such class found at [Source: UNKNOWN; line: -1, column: -1] 
(through reference chain: io.micronaut.discovery.eureka.client.v2.AbstractEurekaClient$ApplicationInfos["application"]-
>java.util.ArrayList[0]->io.micronaut.discovery.eureka.client.v2.ApplicationInfo["instance"]-
>java.util.ArrayList[0]->io.micronaut.discovery.eureka.client.v2.InstanceInfo["dataCenterInfo"])}
```

Micronaut has an AmazonInfo class in package: io.micronaut.discovery.eureka.client.v2 

I created a MyHealthMonitorTask to replace the existing HealthMonitorTask so I could add logging and determine what is failing health checks. MyHealthMonitorTask should be identical to the existing HealMonitorTask with the only changes being the logging statements.

I am not seeing any CodecException or stack traces in our logs other than what I am logging with healthResult.getDetails()
 
The code is at https://github.com/TeachForward/eureka-example

We compile and create the docker image with:
```
 ./gradlew clean buildDocker -Pdocker.tag.version=true
```

### Steps to Reproduce

1. Clone the repository and build
2. Deploy to docker in AWS (I can provide more details on our setup if needed)
3. Wait for app to startup, register with Eureka, and begin health checking

### Expected Behaviour

Health Checking Eureka in AWS should pass when Eureka is fine and responding.

### Actual Behaviour

Health checking fails and reports back to Eureka that the application is down because the JSON AmazonInfo class returned from the health check doesn't match the package structure of what the health checker is expecting. This creates a io.micronaut.http.codec.CodecException, which doesn't show up as a stack trace, that is embedded in the healthResult.getDetails().  

### Environment Information

- **Operating System**: Ubuntu on AWS
- **Micronaut Version:** 1.0.2
- **JDK Version:** 8

### Example Application

- https://github.com/TeachForward/eureka-example

