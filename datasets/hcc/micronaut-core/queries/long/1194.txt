When the declarative Client is used it seems like it can't handle path params and body at the same time for PUT requests.
I'm trying to http PUT a User DTO to couchdb.
```java
@Client("${database.endpoint}")
@Validated
@Requires(notEnv = "test")
public interface DatabaseClient {

    @Put("/_users/org.couchdb.user:{username}")
    public Single<Object> register(@NotNull @Body User user, @PathVariable("username") String name); // this fails
    // public Single<Object> register(@NotNull @PathVariable("name") String name); // this works
    // public Single<Object> register(@NotNull @Body User user); // this works too
}

/**
 * User Model
 */
public class User {

    @JsonProperty
    public final String type = "user";

    @NotBlank
    @JsonProperty
    public final String name;

    @NotBlank
    @JsonProperty
    public final String password;

    @JsonProperty
    public final Collection<String> roles;

    public User(@JsonProperty("name") final String name, @JsonProperty("password") final String password,
            @JsonProperty("roles") final Collection<String> roles) {
        this.name = name;
        this.password = password;
        this.roles = roles;
    }

}
````

### Steps to Reproduce
* Define a client like above.
* Inject it and call the method

### Expected Behaviour

PUT request should be sent

### Actual Behaviour

Server errors with cryptic error message

### Environment Information

- **Operating System**: Arch Linux
- **Micronaut Version:**  1.0.3
- **JDK Version:**  11

### Stacktrace
This is the full stack after executing ``curl -H Content-Type:application/json http://localhost:3002/register -d '{"name":"meredricaa", "password":"password"}' -vvv``
````
17:02:31.970 [pool-1-thread-15] DEBUG io.micronaut.context.DefaultBeanContext - Resolved existing bean [io.micronaut.health.HeartbeatTask@32e54a9d] for type [class io.micronaut.health.HeartbeatTask] and qualifier [null]
17:02:31.970 [pool-1-thread-15] DEBUG io.micronaut.context.event.ApplicationEventPublisher - Publishing event: io.micronaut.health.HeartbeatEvent[source=io.micronaut.http.server.netty.NettyEmbeddedServerInstance@44536de4]
17:02:31.971 [pool-1-thread-15] DEBUG io.micronaut.context.DefaultBeanContext - Resolving beans for type: <HeartbeatEvent> io.micronaut.context.event.ApplicationEventListener 
17:02:35.315 [nioEventLoopGroup-1-3] DEBUG io.micronaut.http.server.netty.NettyHttpServer - Server localhost:3002 Received Request: POST /register
17:02:35.315 [nioEventLoopGroup-1-3] DEBUG io.micronaut.http.server.netty.RoutingInBoundHandler - Matching route POST - /register
17:02:35.315 [nioEventLoopGroup-1-3] DEBUG io.micronaut.http.server.netty.RoutingInBoundHandler - Matched route POST - /register to controller class backend.register.$RegisterControllerDefinition$Intercepted
17:02:35.315 [nioEventLoopGroup-1-3] DEBUG io.micronaut.context.DefaultBeanContext - Resolved existing bean [io.micronaut.http.server.netty.jackson.JsonHttpContentSubscriberFactory@389bf783] for type [interface io.micronaut.http.server.netty.HttpContentSubscriberFactory] and qualifier [Content-Type: application/json]
17:02:35.318 [nioEventLoopGroup-1-3] ERROR io.micronaut.retry.intercept.RecoveryInterceptor - Type [backend.register.database.DatabaseClient$Intercepted] executed with error: null
java.lang.NullPointerException: null
	at io.micronaut.core.beans.SimpleBeanInfo.<init>(SimpleBeanInfo.java:66)
	at io.micronaut.core.beans.Introspector.getBeanInfo(Introspector.java:80)
	at io.micronaut.core.beans.ReflectionBeanMap.<init>(ReflectionBeanMap.java:52)
	at io.micronaut.core.beans.BeanMap.of(BeanMap.java:42)
	at io.micronaut.http.client.interceptor.HttpClientIntroductionAdvice.intercept(HttpClientIntroductionAdvice.java:302)
	at io.micronaut.aop.MethodInterceptor.intercept(MethodInterceptor.java:41)
	at io.micronaut.aop.chain.InterceptorChain.proceed(InterceptorChain.java:147)
	at io.micronaut.retry.intercept.RecoveryInterceptor.intercept(RecoveryInterceptor.java:74)
	at io.micronaut.aop.MethodInterceptor.intercept(MethodInterceptor.java:41)
	at io.micronaut.aop.chain.InterceptorChain.proceed(InterceptorChain.java:147)
	at io.micronaut.validation.ValidatingInterceptor.intercept(ValidatingInterceptor.java:89)
	at io.micronaut.aop.MethodInterceptor.intercept(MethodInterceptor.java:41)
	at io.micronaut.aop.chain.InterceptorChain.proceed(InterceptorChain.java:147)
	at backend.register.database.DatabaseClient$Intercepted.register(Unknown Source)
	at backend.register.RegisterController.register(RegisterController.java:28)
	at backend.register.$RegisterControllerDefinition$Intercepted.$$access0(Unknown Source)
	at backend.register.$RegisterControllerDefinition$Intercepted$$proxy0.invokeInternal(Unknown Source)
	at io.micronaut.context.AbstractExecutableMethod.invoke(AbstractExecutableMethod.java:145)
	at io.micronaut.aop.chain.InterceptorChain.lambda$new$1(InterceptorChain.java:90)
	at io.micronaut.aop.chain.InterceptorChain.proceed(InterceptorChain.java:147)
	at backend.register.$RegisterControllerDefinition$Intercepted.register(Unknown Source)
	at backend.register.$$RegisterControllerDefinition$InterceptedDefinition$$exec1.invokeInternal(Unknown Source)
	at io.micronaut.context.AbstractExecutableMethod.invoke(AbstractExecutableMethod.java:145)
	at io.micronaut.context.DefaultBeanContext$BeanExecutionHandle.invoke(DefaultBeanContext.java:2413)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:296)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:123)
	at io.micronaut.http.server.netty.RoutingInBoundHandler.lambda$buildResultEmitter$14(RoutingInBoundHandler.java:1254)
	at io.reactivex.internal.operators.flowable.FlowableDefer.subscribeActual(FlowableDefer.java:35)
	at io.reactivex.Flowable.subscribe(Flowable.java:14479)
	at io.reactivex.internal.operators.flowable.FlowableMap.subscribeActual(FlowableMap.java:37)
	at io.reactivex.Flowable.subscribe(Flowable.java:14479)
	at io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty.subscribeActual(FlowableSwitchIfEmpty.java:32)
	at io.reactivex.Flowable.subscribe(Flowable.java:14479)
	at io.reactivex.Flowable.subscribe(Flowable.java:14429)
	at io.micronaut.http.context.ServerRequestTracingPublisher.lambda$subscribe$0(ServerRequestTracingPublisher.java:53)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:53)
	at io.micronaut.http.context.ServerRequestTracingPublisher.subscribe(ServerRequestTracingPublisher.java:53)
	at io.reactivex.internal.operators.flowable.FlowableFromPublisher.subscribeActual(FlowableFromPublisher.java:29)
	at io.reactivex.Flowable.subscribe(Flowable.java:14479)
	at io.reactivex.Flowable.subscribe(Flowable.java:14426)
	at io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber.run(FlowableSubscribeOn.java:82)
	at io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable.run(ExecutorScheduler.java:260)
	at io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.run(ExecutorScheduler.java:225)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
17:02:35.318 [nioEventLoopGroup-1-3] DEBUG io.micronaut.context.DefaultBeanContext - Finding candidate beans for type: interface io.micronaut.http.server.exceptions.ExceptionHandler
17:02:35.318 [nioEventLoopGroup-1-3] DEBUG io.micronaut.context.DefaultBeanContext - Resolved bean candidates [Definition: io.micronaut.validation.exceptions.ConstraintExceptionHandler, Definition: io.micronaut.http.server.netty.converters.UnsatisfiedRouteHandler, Definition: io.micronaut.http.server.netty.converters.DuplicateRouteHandler, Definition: io.micronaut.http.server.exceptions.ContentLengthExceededHandler, Definition: io.micronaut.http.server.exceptions.JsonExceptionHandler, Definition: io.micronaut.http.server.exceptions.UnsatisfiedArgumentHandler, Definition: io.micronaut.http.server.exceptions.HttpStatusHandler, Definition: io.micronaut.http.server.exceptions.ConversionErrorHandler] for type: interface io.micronaut.http.server.exceptions.ExceptionHandler
17:02:35.318 [nioEventLoopGroup-1-3] DEBUG io.micronaut.context.DefaultBeanContext - Finalized bean definitions candidates: [Definition: io.micronaut.validation.exceptions.ConstraintExceptionHandler, Definition: io.micronaut.http.server.netty.converters.UnsatisfiedRouteHandler, Definition: io.micronaut.http.server.netty.converters.DuplicateRouteHandler, Definition: io.micronaut.http.server.exceptions.ContentLengthExceededHandler, Definition: io.micronaut.http.server.exceptions.JsonExceptionHandler, Definition: io.micronaut.http.server.exceptions.UnsatisfiedArgumentHandler, Definition: io.micronaut.http.server.exceptions.HttpStatusHandler, Definition: io.micronaut.http.server.exceptions.ConversionErrorHandler]
17:02:35.319 [nioEventLoopGroup-1-3] DEBUG io.micronaut.context.DefaultBeanContext - Qualifying bean [io.micronaut.http.server.exceptions.ExceptionHandler] for qualifier: <NullPointerException,Object> 
17:02:35.319 [nioEventLoopGroup-1-3] DEBUG io.micronaut.context.DefaultBeanContext - No qualifying beans of type [io.micronaut.http.server.exceptions.ExceptionHandler] found for qualifier: <NullPointerException,Object> 
17:02:35.319 [nioEventLoopGroup-1-3] ERROR io.micronaut.http.server.netty.RoutingInBoundHandler - Unexpected error occurred: null
java.lang.NullPointerException: null
	at io.micronaut.core.beans.SimpleBeanInfo.<init>(SimpleBeanInfo.java:66)
	at io.micronaut.core.beans.Introspector.getBeanInfo(Introspector.java:80)
	at io.micronaut.core.beans.ReflectionBeanMap.<init>(ReflectionBeanMap.java:52)
	at io.micronaut.core.beans.BeanMap.of(BeanMap.java:42)
	at io.micronaut.http.client.interceptor.HttpClientIntroductionAdvice.intercept(HttpClientIntroductionAdvice.java:302)
	at io.micronaut.aop.MethodInterceptor.intercept(MethodInterceptor.java:41)
	at io.micronaut.aop.chain.InterceptorChain.proceed(InterceptorChain.java:147)
	at io.micronaut.retry.intercept.RecoveryInterceptor.intercept(RecoveryInterceptor.java:74)
	at io.micronaut.aop.MethodInterceptor.intercept(MethodInterceptor.java:41)
	at io.micronaut.aop.chain.InterceptorChain.proceed(InterceptorChain.java:147)
	at io.micronaut.validation.ValidatingInterceptor.intercept(ValidatingInterceptor.java:89)
	at io.micronaut.aop.MethodInterceptor.intercept(MethodInterceptor.java:41)
	at io.micronaut.aop.chain.InterceptorChain.proceed(InterceptorChain.java:147)
	at backend.register.database.DatabaseClient$Intercepted.register(Unknown Source)
	at backend.register.RegisterController.register(RegisterController.java:28)
	at backend.register.$RegisterControllerDefinition$Intercepted.$$access0(Unknown Source)
	at backend.register.$RegisterControllerDefinition$Intercepted$$proxy0.invokeInternal(Unknown Source)
	at io.micronaut.context.AbstractExecutableMethod.invoke(AbstractExecutableMethod.java:145)
	at io.micronaut.aop.chain.InterceptorChain.lambda$new$1(InterceptorChain.java:90)
	at io.micronaut.aop.chain.InterceptorChain.proceed(InterceptorChain.java:147)
	at backend.register.$RegisterControllerDefinition$Intercepted.register(Unknown Source)
	at backend.register.$$RegisterControllerDefinition$InterceptedDefinition$$exec1.invokeInternal(Unknown Source)
	at io.micronaut.context.AbstractExecutableMethod.invoke(AbstractExecutableMethod.java:145)
	at io.micronaut.context.DefaultBeanContext$BeanExecutionHandle.invoke(DefaultBeanContext.java:2413)
	at io.micronaut.web.router.AbstractRouteMatch.execute(AbstractRouteMatch.java:296)
	at io.micronaut.web.router.RouteMatch.execute(RouteMatch.java:123)
	at io.micronaut.http.server.netty.RoutingInBoundHandler.lambda$buildResultEmitter$14(RoutingInBoundHandler.java:1254)
	at io.reactivex.internal.operators.flowable.FlowableDefer.subscribeActual(FlowableDefer.java:35)
	at io.reactivex.Flowable.subscribe(Flowable.java:14479)
	at io.reactivex.internal.operators.flowable.FlowableMap.subscribeActual(FlowableMap.java:37)
	at io.reactivex.Flowable.subscribe(Flowable.java:14479)
	at io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty.subscribeActual(FlowableSwitchIfEmpty.java:32)
	at io.reactivex.Flowable.subscribe(Flowable.java:14479)
	at io.reactivex.Flowable.subscribe(Flowable.java:14429)
	at io.micronaut.http.context.ServerRequestTracingPublisher.lambda$subscribe$0(ServerRequestTracingPublisher.java:53)
	at io.micronaut.http.context.ServerRequestContext.with(ServerRequestContext.java:53)
	at io.micronaut.http.context.ServerRequestTracingPublisher.subscribe(ServerRequestTracingPublisher.java:53)
	at io.reactivex.internal.operators.flowable.FlowableFromPublisher.subscribeActual(FlowableFromPublisher.java:29)
	at io.reactivex.Flowable.subscribe(Flowable.java:14479)
	at io.reactivex.Flowable.subscribe(Flowable.java:14426)
	at io.reactivex.internal.operators.flowable.FlowableSubscribeOn$SubscribeOnSubscriber.run(FlowableSubscribeOn.java:82)
	at io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker$BooleanRunnable.run(ExecutorScheduler.java:260)
	at io.reactivex.internal.schedulers.ExecutorScheduler$ExecutorWorker.run(ExecutorScheduler.java:225)
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.base/java.lang.Thread.run(Thread.java:834)
17:02:35.319 [nioEventLoopGroup-1-3] DEBUG io.micronaut.http.server.netty.RoutingInBoundHandler - Encoding emitted response object [Internal Server Error: null] using codec: io.micronaut.jackson.codec.JsonMediaTypeCodec@25a5c7db
17:02:41.983 [pool-1-thread-3] DEBUG io.micronaut.context.DefaultBeanContext - Resolved existing bean [io.micronaut.management.health.monitor.HealthMonitorTask@1be1503d] for type [class io.micronaut.management.health.monitor.HealthMonitorTask] and qualifier [null]
17:02:41.983 [pool-1-thread-3] DEBUG io.micronaut.management.health.monitor.HealthMonitorTask - Starting health monitor check
17:02:41.984 [pool-1-thread-3] DEBUG io.micronaut.management.health.monitor.HealthMonitorTask - Health monitor check passed.
17:02:46.971 [pool-1-thread-5] DEBUG io.micronaut.context.DefaultBeanContext - Resolved existing bean [io.micronaut.health.HeartbeatTask@32e54a9d] for type [class io.micronaut.health.HeartbeatTask] and qualifier [null]
17:02:46.971 [pool-1-thread-5] DEBUG io.micronaut.context.event.ApplicationEventPublisher - Publishing event: io.micronaut.health.HeartbeatEvent[source=io.micronaut.http.server.netty.NettyEmbeddedServerInstance@44536de4]
17:02:46.971 [pool-1-thread-5] DEBUG io.micronaut.context.DefaultBeanContext - Resolving beans for type: <HeartbeatEvent> io.micronaut.context.event.ApplicationEventListener 
````
