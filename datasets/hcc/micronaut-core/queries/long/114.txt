I am writing a Micronaut guide which illustrates a 3 microservices federation with an API gateway pattern.

In the gateway microservice, I have a controller which delegates to the security service. 

e.g.
```
@Controller("/") 
public class LoginController {
    protected final SecurityClient securityClient;

    public LoginController(SecurityClient securityClient) { 
        this.securityClient = securityClient;
    }

    @Post("/login") 
    public Single<HttpResponse<BearerAccessRefreshToken>> login(@Body UsernamePasswordCredentials usernamePassword) {  
        return securityClient.login(usernamePassword);
    }
}

@Client(id = "security")
public interface SecurityClient {

    @Post("/login")
    Single<HttpResponse<BearerAccessRefreshToken>> login(@Body UsernamePasswordCredentials usernamePasswordCredentials); 
}
```

However when invoke it I get: 

```
10:10:29.399 [nioEventLoopGroup-1-38] ERROR i.m.h.s.netty.RoutingInBoundHandler - Unexpected error occurred: Error occurred reading HTTP response: Error decoding JSON stream for type [interface io.micronaut.http.HttpResponse]: Cannot construct instance of `io.micronaut.http.HttpResponse` (no Creators, like default construct, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (byte[])"{"accessToken":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJldWxlciIsIm5iZiI6MTUyNTc2NzAyOSwicm9sZXMiOlsiUk9MRV9HUkFJTFMiXSwiaXNzIjoic2VjdXJpdHkiLCJleHAiOjE1MjU3NzA2MjksImlhdCI6MTUyNTc2NzAyOX0.uf172XFFusV5ikJ0KamLtapx8DcKA_Ko8vDfSBVaZ9w","refreshToken":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJldWxlciIsIm5iZiI6MTUyNTc2NzAyOSwicm9sZXMiOlsiUk9MRV9HUkFJTFMiXSwiaXNzIjoic2VjdXJpdHkiLCJpYXQiOjE1MjU3NjcwMjl9.Dl0GiJz4WY30BPGakvAb4wcmY2p7BCayt8DaLo3hLGA","username":"euler","roles":["ROLE_GRAILS"],"expires_in":3600,"token_typ"[truncated 12 bytes]; line: 1, column: 1]
io.micronaut.http.client.exceptions.HttpClientException: Error occurred reading HTTP response: Error decoding JSON stream for type [interface io.micronaut.http.HttpResponse]: Cannot construct instance of `io.micronaut.http.HttpResponse` (no Creators, like default construct, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (byte[])"{"accessToken":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJldWxlciIsIm5iZiI6MTUyNTc2NzAyOSwicm9sZXMiOlsiUk9MRV9HUkFJTFMiXSwiaXNzIjoic2VjdXJpdHkiLCJleHAiOjE1MjU3NzA2MjksImlhdCI6MTUyNTc2NzAyOX0.uf172XFFusV5ikJ0KamLtapx8DcKA_Ko8vDfSBVaZ9w","refreshToken":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJldWxlciIsIm5iZiI6MTUyNTc2NzAyOSwicm9sZXMiOlsiUk9MRV9HUkFJTFMiXSwiaXNzIjoic2VjdXJpdHkiLCJpYXQiOjE1MjU3NjcwMjl9.Dl0GiJz4WY30BPGakvAb4wcmY2p7BCayt8DaLo3hLGA","username":"euler","roles":["ROLE_GRAILS"],"expires_in":3600,"token_typ"[truncated 12 bytes]; line: 1, column: 1]
	at io.micronaut.http.client.DefaultHttpClient$5.exceptionCaught(DefaultHttpClient.java:1029)
	at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:285)
	at io.netty.channel.AbstractChannelHandlerContext.notifyHandlerException(AbstractChannelHandlerContext.java:850)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:364)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.micronaut.http.netty.stream.HttpStreamsHandler.channelRead(HttpStreamsHandler.java:123)
	at io.micronaut.http.netty.stream.HttpStreamsClientHandler.channelRead(HttpStreamsClientHandler.java:148)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:138)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)
	at java.lang.Thread.run(Thread.java:748)
Caused by: io.micronaut.http.codec.CodecException: Error decoding JSON stream for type [interface io.micronaut.http.HttpResponse]: Cannot construct instance of `io.micronaut.http.HttpResponse` (no Creators, like default construct, exist): abstract types either need to be mapped to concrete types, have custom deserializer, or contain additional type information
 at [Source: (byte[])"{"accessToken":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJldWxlciIsIm5iZiI6MTUyNTc2NzAyOSwicm9sZXMiOlsiUk9MRV9HUkFJTFMiXSwiaXNzIjoic2VjdXJpdHkiLCJleHAiOjE1MjU3NzA2MjksImlhdCI6MTUyNTc2NzAyOX0.uf172XFFusV5ikJ0KamLtapx8DcKA_Ko8vDfSBVaZ9w","refreshToken":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJldWxlciIsIm5iZiI6MTUyNTc2NzAyOSwicm9sZXMiOlsiUk9MRV9HUkFJTFMiXSwiaXNzIjoic2VjdXJpdHkiLCJpYXQiOjE1MjU3NjcwMjl9.Dl0GiJz4WY30BPGakvAb4wcmY2p7BCayt8DaLo3hLGA","username":"euler","roles":["ROLE_GRAILS"],"expires_in":3600,"token_typ"[truncated 12 bytes]; line: 1, column: 1]
	at io.micronaut.jackson.codec.JsonMediaTypeCodec.decode(JsonMediaTypeCodec.java:122)
	at io.micronaut.http.client.FullNettyClientHttpResponse.convertByteBuf(FullNettyClientHttpResponse.java:182)
	at io.micronaut.http.client.FullNettyClientHttpResponse.lambda$getBody$1(FullNettyClientHttpResponse.java:146)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1127)
	at io.micronaut.http.client.FullNettyClientHttpResponse.getBody(FullNettyClientHttpResponse.java:129)
	at io.micronaut.http.client.FullNettyClientHttpResponse.<init>(FullNettyClientHttpResponse.java:79)
	at io.micronaut.http.client.DefaultHttpClient$5.channelRead0(DefaultHttpClient.java:998)
	at io.micronaut.http.client.DefaultHttpClient$5.channelRead0(DefaultHttpClient.java:944)
	at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)
	... 38 common frames omitted

```
How to reproduce: 

- Clone https://github.com/sdelamo/micronaut-jwt-federation
- Start Consult at Port 8500
- Start `security` microservice `./gradlew complete/security:run`
- Start `gateway` microservice `./gradlew complete/security:run`
- Do a Post request to the gateway login controller:

```
curl -X "POST" "http://localhost:8080/login" \
     -H 'Content-Type: application/json; charset=utf-8' \
     -d $'{
  "username": "euler",
  "password": "password"
}'
```

