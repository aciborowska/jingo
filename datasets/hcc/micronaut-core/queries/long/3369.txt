### Task List

- [x] Steps to reproduce provided
- [x] Stacktrace (if present) provided
- [x] Example that reproduces the problem uploaded to Github
- [x] Full description of the issue provided (see below)

### Steps to Reproduce

1. application.yml
```
application.yml
  server:
    cors:
      enabled: true
      configurations:
        web:
          allowedOrigins:
            - http://localhost:3000
```
2. Create a new API returning a not found HttpResponse
3. Query this API from browser to see
```
from origin 'http://localhost:3000' has been blocked by CORS policy: The 'Access-Control-Allow-Origin' header contains multiple values 'http://localhost:3000, http://localhost:3000', but only one is allowed.
xhr.js:155 POST http://localhost:8080/conferences/test_post net::ERR_FAILED
```

### Expected Behaviour

CORS headers should be correct and not contain multiple values, as it does with 'ok responses'

### Actual Behaviour

CORS headers contain multiple values, and browser fail to execute the request.
However, if I return an OK response, it works well.

### Environment Information

- **Operating System**: macOS Catalina 10.15.4
- **Micronaut Version:** 2.0.0.M3
- **JDK Version:** 14

### Example Application

```
    @Post("/test_post")
    public HttpResponse test_post() {
        return HttpResponse.notFound();
```
