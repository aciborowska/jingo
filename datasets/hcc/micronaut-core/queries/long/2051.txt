### Task List

- [ ] Steps to reproduce provided
- [ ] Stacktrace (if present) provided
- [ ] Example that reproduces the problem uploaded to Github
- [x] Full description of the issue provided (see below)

### Steps to Reproduce

We just tried to upgrade our application (it is a graphql app, but that doesn't play any role here) from micronaut 1.1.4 to 1.2.0 and observed problem with tracing - span for new server request is referencing span of previous request. This behavior is observed, when both server requests are processed by the same thread.

Reason for that most likely is the change made in [this commit](https://github.com/micronaut-projects/micronaut-core/commit/ac26d9d1b271420358efa66a4489c9107264dffc#diff-8b07cb5e9e8bd19db2b4b5c32dec375d) > method onNext, where Scope is closed only when closedAfterNext is true. Previously it was *always* closed.

While debugging this problem we found out that tracer.activeSpan() returns span of previous request, which was processed by the same thread. As we know this span is used as a parent span for new span (unless ignoreActiveSpan() is used, when building new span). Therefore we get such behavior.

### Expected Behaviour

All scopes have to be closed after processing request.

### Actual Behaviour

Scope created in onNext method is not always closed.

### Environment Information

- **Operating System**: any
- **Micronaut Version:** 1.2.0
- **JDK Version:** 1.8

### Example Application

N/A

