When using Micronaut 1.0.3 with a get method in a Groovy Trait, the compile fails with an error about missing argument for a method in the Trait.

BTW, Excellent framework :).

### Task List

- [X] Steps to reproduce provided
- [X] Example that reproduces the problem uploaded to Github
- [X] Full description of the issue provided (see below)

### Steps to Reproduce

1. Create the app with -l groovy option
2. Create a groovy Trait that provides a method with a router on @GET
3. Create Controller that implements that trait.
4. Compile and Run

### Expected Behaviour

The program will compile and execute the method from the trait.

### Actual Behaviour

When using Micronaut 1.0.3 with a get method in a Groovy Trait, the compile fails with the error:

    ....\HelloController.groovy: -1: The route declares a uri variable named [x], but no corresponding method argument is present

### Environment Information

- **Operating System**: Windows 7
- **Micronaut Version:** 1.0.3
- **JDK Version:** 1.8_181

### Example Application

See https://github.com/mphouston/mn-issues/tree/master/route-trait-issue for a bare-bones application that reproduces the problem.  Use this command to run the app:

    gradlew run

Quick summary of the code:

    HelloController.groovy
      @CompileStatic
      @Controller("/hello")
      class HelloController implements ControllerTrait {
          @Get("/{x}")
          @Produces(MediaType.TEXT_PLAIN)
          String index(String x) {
              "Hello World ${x}"
          }
      }

    ControllerTrait.groovy
      trait ControllerTrait {
          @Get("/trait/{x}")
          @Produces(MediaType.TEXT_PLAIN)
          String indexT(String x) {
              "Hello World Trait ${x}"
          }
      }

I have not tried this with Java interfaces with default parameters.  I would prefer to stay with Groovy.


The app was created with this micronaut command (1.0.0):

    mn create-app example.route-trait-issue -l groovy

Except for the two classes above and a change to build.gradle to micronaut 1.0.3, the application is the default from the micronaut command.

This seems similar to https://github.com/micronaut-projects/micronaut-core/issues/936 but the symptoms are different.

