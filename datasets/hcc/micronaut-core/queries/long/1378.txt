micronaut : 1.1.0-M2

```
11:20:39.895 [main] DEBUG i.m.context.DefaultBeanContext - Resolved bean candidates [] for type: class io.micronaut.discovery.consul.ConsulConfiguration$ConsulRegistrationConfiguration$CheckConfiguration
11:20:39.903 [main] ERROR io.micronaut.runtime.Micronaut - Error starting Micronaut server: Error instantiating bean of type  [io.micronaut.discovery.consul.ConsulConfiguration]

Message: No bean of type [io.micronaut.discovery.consul.ConsulConfiguration$ConsulRegistrationConfiguration$CheckConfiguration] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.
Path Taken: new DistributedPropertySourceLocator([ConfigurationClient configurationClient],Duration readTimeout) --> new DefaultCompositeConfigurationClient([ConfigurationClient[] configurationClients]) --> new ConsulConfigurationClient([ConsulClient consulClient],ConsulConfiguration consulConfiguration,Environment environment) --> new AbstractConsulClient$Intercepted(BeanContext beanContext,[Interceptor[] interceptors]) --> new HttpClientIntroductionAdvice(BeanContext beanContext,JsonMediaTypeCodec jsonMediaTypeCodec,[LoadBalancerResolver loadBalancerResolver],List transformers) --> new DefaultLoadBalancerResolver(BeanContext beanContext,[List serviceInstanceLists]) --> new ConsulServiceInstanceList([ConsulConfiguration configuration],InstanceConfiguration instanceConfiguration) --> ConsulConfiguration.setRegistration([ConsulRegistrationConfiguration registration])
io.micronaut.context.exceptions.BeanInstantiationException: Error instantiating bean of type  [io.micronaut.discovery.consul.ConsulConfiguration]

Message: No bean of type [io.micronaut.discovery.consul.ConsulConfiguration$ConsulRegistrationConfiguration$CheckConfiguration] exists. Ensure the class is declared a bean and if you are using Java or Kotlin make sure you have enabled annotation processing.
Path Taken: new DistributedPropertySourceLocator([ConfigurationClient configurationClient],Duration readTimeout) --> new DefaultCompositeConfigurationClient([ConfigurationClient[] configurationClients]) --> new ConsulConfigurationClient([ConsulClient consulClient],ConsulConfiguration consulConfiguration,Environment environment) --> new AbstractConsulClient$Intercepted(BeanContext beanContext,[Interceptor[] interceptors]) --> new HttpClientIntroductionAdvice(BeanContext beanContext,JsonMediaTypeCodec jsonMediaTypeCodec,[LoadBalancerResolver loadBalancerResolver],List transformers) --> new DefaultLoadBalancerResolver(BeanContext beanContext,[List serviceInstanceLists]) --> new ConsulServiceInstanceList([ConsulConfiguration configuration],InstanceConfiguration instanceConfiguration) --> ConsulConfiguration.setRegistration([ConsulRegistrationConfiguration registration])
```
