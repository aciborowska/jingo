Getting IllegalAccessError if my function, annotated with `@FunctionBean`, is not in package `io.micronaut.function.executor`

# Steps to Reproduce

1. With following code :
```kotlin
// MyFunction.kt
package com.company

@Introspected
@FunctionBean("my-function")
class MyFunction : MicronautRequestStreamHandler(), Function<String, Unit> {
    override fun apply(input: String) {
        println(input)
    }

    override fun resolveFunctionName(env: Environment): String? {
        return env.getProperty(LocalFunctionRegistry.FUNCTION_NAME, String::class.java, null as String?)
    }
}

fun main(args: Array<String>) {
    val handler = MyFunction()

    handler.execute(if (args.isEmpty()) System.`in` else File(args.first()).inputStream(), System.out)
}
```

```yml
# application.yml
---
micronaut: {
  function: {
    name: "my-function"
  }
}
```

2. Execute `echo hello | java -jar ./build/libs/my-project.jar`

### Expected Behaviour

```console
[main]  INFO  DefaultEnvironment:128 - Established active environments: [function, lambda]
hello
```

### Actual Behaviour

```console
[main]  INFO  DefaultEnvironment:128 - Established active environments: [function, lambda]
Exception in thread "main" io.micronaut.context.exceptions.BeanInstantiationException: Bean definition [com.company.MyFunction ] could not be loaded: Class com.company/$MyFunctionDefinition$$exec1 illegally accessing "package private" member of class io/micronaut/function/executor/AbstractExecutor
        at io.micronaut.context.DefaultBeanContext.initializeContext(DefaultBeanContext.java:1523)
        at io.micronaut.context.DefaultApplicationContext.initializeContext(DefaultApplicationContext.java:220)
        at io.micronaut.context.DefaultBeanContext.readAllBeanDefinitionClasses(DefaultBeanContext.java:2763)
        at io.micronaut.context.DefaultBeanContext.start(DefaultBeanContext.java:227)
        at io.micronaut.context.DefaultApplicationContext.start(DefaultApplicationContext.java:166)
        at io.micronaut.function.executor.AbstractExecutor.startEnvironment(AbstractExecutor.java:125)
        at io.micronaut.function.executor.StreamFunctionExecutor.execute(StreamFunctionExecutor.java:80)
        at io.micronaut.function.executor.StreamFunctionExecutor.execute(StreamFunctionExecutor.java:63)
        at com.company.MyFunctionKt.main(MyFunction.kt:)
Caused by: java.lang.IllegalAccessError: Class com/company/$MyFunctionDefinition$$exec1 illegally accessing "package private" member of class io/micronaut/function/executor/AbstractExecutor
        at com.company.$MyFunctionDefinition$$exec1.<init>(Unknown Source)
        at com.company.$MyFunctionDefinition.<init>(Unknown Source)
        at com.company.$MyFunctionDefinition.<init>(Unknown Source)
        at com.company.$MyFunctionDefinitionClass.load(Unknown Source)
        at io.micronaut.context.AbstractBeanDefinitionReference.load(AbstractBeanDefinitionReference.java:62)
        at io.micronaut.context.DefaultBeanContext.loadContextScopeBean(DefaultBeanContext.java:2152)
        at io.micronaut.context.DefaultBeanContext.initializeContext(DefaultBeanContext.java:1521)
        ... 8 more

```

It works fine if I put the class MyFunction in package `io.micronaut.function.executor`, which is not really what I want.

### Environment Information

- **Operating System**: Ubuntu 20.04
- **Micronaut Version:** 2.0.0
- **JDK Version:** openjdk 11.0.7 2020-04-14

