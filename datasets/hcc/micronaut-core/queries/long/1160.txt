### Steps to Reproduce

1. Download [Micronaut JWT Authentication Guide](http://guides.micronaut.io/micronaut-security-jwt/guide/index.html)
2. Update micronaut version to 1.0.3
3. set `micronaut.security.token.basic-auth.enabled=false` (also tried `basicAuth`) in `application.yml` to disable BasicAuth Validation
4. Set log level of `io.micronaut.context` to `TRACE`
5. Run application 
6. Login

### Expected Behaviour

bean `BasicAuthTokenValidator` not loaded

### Actual Behaviour

bean `BasicAuthTokenValidator` is loaded. Check log for 
```log
DEBUG i.m.context.DefaultBeanContext - Resolved bean candidates [Definition: io.micronaut.security.token.jwt.validator.JwtTokenValidator, Definition: io.micronaut.security.token.basicauth.BasicAuthTokenValidator] for type: interface io.micronaut.security.token.validator.TokenValidator
```
### Environment Information

- **Operating System**: Linux
- **Micronaut Version:** 1.0.3
- **JDK Version:** 1.8.0_181

### Example Application

https://github.com/sascha-frinken/micronaut-issue-1160

Just run the app and check the output:
```log
Property micronaut.security.token.basic-auth.enabled is false
Context contains bean BasicAuthTokenValidator: true
```
**Application.class:**
```java
public class Application {
    public static void main(String[] args) {
        ApplicationContext ctx = Micronaut.run(Application.class);
        String propName = "micronaut.security.token.basic-auth.enabled";
        Optional<Boolean> property = ctx.getProperty(propName, Boolean.class);
        System.out.print("Property " + propName + " is ");
        if (property.isPresent()) {
            System.out.println(property.get());
        } else {
            System.out.println("not set");
        }
        System.out.println("Context contains bean BasicAuthTokenValidator: " + ctx.containsBean(BasicAuthTokenValidator.class));
    }
}
```

