### Task List

- [x] Steps to reproduce provided
- [x] Stacktrace (if present) provided
- [x] Example that reproduces the problem uploaded to Github
- [x] Full description of the issue provided (see below)

### Steps to Reproduce

1. Create a context class with `implements ApplicationEventListener<YourEventHere>`
2. Add `@Async` to the `onApplicationEvent` method
3. Create another class which publishes to an instance of `ApplicationEventPublisher`

### Expected Behavior

Event listener is called once on an async thread

### Actual Behavior

Called twice, one for the normal bean, one for the intercepted bean
I set a breakpoint in the inject event code and saw it list the same bean twice (once was a generated injected wrapper)
![image](https://user-images.githubusercontent.com/245911/54079961-107dd180-42ac-11e9-82aa-509d4255df1d.png)
_This screenshot is from another project, a minimal project is listed below._


### Environment Information

- **Operating System**: Mac OS X 10.14.3
- **Micronaut Version:** 1.0.4
- **JDK Version:** 10.0.2

### Example Application
https://github.com/LeviSchuck/doubleevent

If I add `new Throwable().printStackTrace()` on my event listener in the above example, the following is printed.

```
java.lang.Throwable
	at com.levischuck.EventListener.onApplicationEvent(EventListener.java:17)
	at com.levischuck.$EventListenerDefinition$Intercepted.$$access0(Unknown Source)
	at com.levischuck.$EventListenerDefinition$Intercepted$$proxy0.invokeInternal(Unknown Source)
	at io.micronaut.context.AbstractExecutableMethod.invoke(AbstractExecutableMethod.java:145)
	at io.micronaut.aop.chain.InterceptorChain.lambda$new$1(InterceptorChain.java:90)
	at io.micronaut.aop.chain.InterceptorChain.proceed(InterceptorChain.java:147)
	at io.micronaut.scheduling.async.AsyncInterceptor.lambda$intercept$3(AsyncInterceptor.java:88)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)
	at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:264)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:844)
java.lang.Throwable
	at com.levischuck.EventListener.onApplicationEvent(EventListener.java:17)
	at com.levischuck.EventListener.onApplicationEvent(EventListener.java:7)
	at io.micronaut.context.DefaultBeanContext.lambda$publishEvent$16(DefaultBeanContext.java:933)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
	at io.micronaut.context.DefaultBeanContext.publishEvent(DefaultBeanContext.java:927)
	at com.levischuck.EventMaker.sayHello(EventMaker.java:20)
	at com.levischuck.$EventMakerDefinition$$exec1.invokeInternal(Unknown Source)
	at io.micronaut.context.AbstractExecutableMethod.invoke(AbstractExecutableMethod.java:145)
	at io.micronaut.inject.DelegatingExecutableMethod.invoke(DelegatingExecutableMethod.java:77)
	at io.micronaut.scheduling.processor.ScheduledMethodProcessor.lambda$process$5(ScheduledMethodProcessor.java:111)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:514)
	at java.base/java.util.concurrent.FutureTask.runAndReset$$$capture(FutureTask.java:305)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:844)
```
