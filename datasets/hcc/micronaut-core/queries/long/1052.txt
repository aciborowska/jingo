I'm getting `More than 1 route matched the incoming request.` when having a controller with different methods.

For example:

```
@Post(produces = APPLICATION_JSON_UTF8)
public HttpResponse post(
            @QueryValue("query") String query,
            @Nullable @QueryValue("operationName") String operationName,
            @Nullable @QueryValue("variables") String variables) { .. }

@Post(consumes = APPLICATION_JSON, produces = APPLICATION_JSON_UTF8)
public HttpResponse post(@Body GraphQLRequestBody body) { .. }

@Post(consumes = APPLICATION_GRAPHQL, produces = APPLICATION_JSON_UTF8)
public HttpResponse post(@Body String query) { .. }
```

When having a client like:

```
    @Client("/graphql")
    static interface GraphQLClient {

        @Post(consumes = APPLICATION_JSON)
        HttpResponse<Map> post(@Body GraphQLRequestBody body)
    }
```

When invoking the `post` method I get the following error:

io.micronaut.http.client.exceptions.HttpClientResponseException: More than 1 route matched the incoming request. The following routes matched /graphql: POST - /graphql, POST - /graphql

Based on the `consumes` and e.g. required query values Micronaut would be able to differentiate the requests to the appropriate controller method.

For now I think I will have to create a single `post` method supporting the 3 variants I have to implement.
