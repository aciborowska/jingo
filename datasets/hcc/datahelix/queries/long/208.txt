## Bug Report
A set that includes comma separated numbers "1,000,000" cause errors as the cucumber framework assumes that the commas within a string are denoting the next item in the set.

> Scenario: Running an 'inSet' request that includes roman numeric strings that include comma separated numbers should be successful
>      Given there is a field foo
>        And foo is in set [ "55,5", "10,000", "1,000,000.00" ]
>      Then the following data should be generated:
>        | foo            |
>        | "55,5"         |
>        | "10,000"       |
>        | "1,000,000.00" |

### Steps to Reproduce:
1. Run feature file inSet.feature
2. See failed Tests include **Scenario: Running an 'inSet' request that includes roman numeric strings that include comma separated numbers**
3. Open error report for failing scenario to see that the actual values are parts of the string within the set, broken by the commas within the string (e.g. 1,000,000 has become "1", "000" and "000").

### Expected Result:
Commas in strings should be escaped and included as a part of the string (e.g "1,000,000").

### Actual Result:
The error message shows that the strings get broken where there's a comma:

> java.lang.AssertionError: 
> Expected: [55,5], [10,000], [1,000,000.00]
>      but: [0], ["10], ["55], [000"], [000.00"], [5"], ["1]
>  missing: [55,5], [10,000], [1,000,000.00]
>   counts: expected 3, but got 7
> 	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
> 	at org.junit.Assert.assertThat(Assert.java:956)
> 	at org.junit.Assert.assertThat(Assert.java:923)
> 	at com.scottlogic.deg.generator.cucumber.steps.GeneralTestStep.theFollowingDataShouldBeGenerated(GeneralTestStep.java:93)
> 	at âœ½.the following data should be generated:(C:/DataGenerator/data-engineering-generator/generator/src/test/java/com/scottlogic/deg/generator/cucumber/InSet.feature:167)

### Environment:
inSet branch running from IntelliJ in full generation mode.

### Additional Context:
This is probably a cucumber framework issue rather than an issue with the generator proper.

![image](https://user-images.githubusercontent.com/43746958/48702921-22970f80-ebea-11e8-9b7c-4acb9d485fc5.png)

