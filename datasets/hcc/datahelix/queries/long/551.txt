## Bug Report
When running a profile in interesting mode the numeric outputs differ on whether the numeric value is decimal or integer. However if the numeric value is a decimal (e.g. 1.1, 10.0 200.0) then the interesting values we expect to emit are: 
- 1.797693134862315699E+308 
- 1.797693134862315700E+308
Which are not decimal values... just very large integers, which also happen to be larger than the largest interesting integer we emit (2147483646)

### Steps to Reproduce:
Run the following profile (also attached) with the following arguments
 `{
"schemaVersion" : "v3",
"fields" : [
{"name" : "foo"}
],
"rules" : [ {
	"rule" : "foo rule",
	"constraints" : [ {
		"field": "foo",
		"is": "ofType",
		"value": "numeric"
		}, {
		"field" : "foo",
		"is" : "greaterThan",
		"value" : 10.0
		}]
	}]	
}`

` generate C:\<file path>\InterestingDecimal.json C:\<file path>\IntrestingDecimalOutput --t=INTERESTING

[InterestingDecimal.txt](https://github.com/ScottLogic/datahelix/files/2836559/InterestingDecimal.txt)

### Expected Result:
Would expect to see some decimal output as interesting data, maybe 10.1 and a long decimal but also integers (?maybe these would be violating) 

### Actual Result:
The following data is produced: 
` foo`
`20`
`30`
`179769313486231569999999999999999999999999999999999999999...(309 digits long) `
`179769313486231570000000000000000000000000000000000000000...(309 digits long) `
### Environment:
Run in interesting mode V3. 

### Additional Context:
Please note that in the results we may neither expect to see 20 and 30... there seems to be an issue with the step size when calculating it for numbers which are an integer multiple of 10. This is an issue being looked into by @sl-slaing. 

Also note that the actual produced values are not 1.797693134862315699E+308 and 1.797693134862315700E+308 where we would expect to see 1.79769313486231569900000000000000000000000... (etc) instead the 9's recur 
 