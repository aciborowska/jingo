## Bug Report

### Steps to Reproduce:
 1. Try to generate data from the profile provided below _OR_
 1. Run the scenario `Running a 'lessThan' request that specifies null should be unsuccessful` in `LessThan.feature` (scenario created in #314)

#### Example profile
```javascript
{
  "schemaVersion": "v3",
  "fields": [
    {
      "name": "age"
    }
  ],
  "rules": [
    {
      "rule": "less than null rule",
      "constraints": [
        {
          "field": "age",
          "is": "lessThan",
          "value": null
        }
      ]
    }
  ]
}
```

#### Example of cucumber scenario
```gherkin
Scenario: Running a 'lessThan' request that specifies null should be unsuccessful
    Given foo is less than null
    Then the profile is invalid
      And no data is created
```

### Expected Result:
An `InvalidProfile` exception should be throw and generation should be aborted.

### Actual Result:
A `NullPointer` exception is throw, indicating that the scenario isn't correctly handled.

- Scenarios tagged with `@ignore #594...` should be unignored and confirmed to pass
  - [x] LessThan.feature
  - [x] GreaterThan.feature

### Additional Context:
The change described in #35 would define a schema that would describe how operators cannot have the value `null` specified. Until this is the case, or if schema-validation is disabled (if this is a feature of #35), the generator should not permit these cases. The correct error should be thrown also.

The above statement is demonstrated with the `lessThan` operator but would be value for _ALL_ operators. There are no operators that accept `null` as their operand (value). Therefore a general rule could be applied (when reading a profile?) to ensure all operands (values) are non-`null`.