## Bug Report

### Steps to Reproduce:
1. Run the following profile through the "generate" command. It will output nulls.
2. Run the following profile through the "violate" command. It will output nulls.
```
{
  "schemaVersion": "0.1",
  "fields": [
    {
      "name": "Column 1"
    }
  ],
  "rules": [
    {
      "rule": "Rule 1",
      "constraints": [
        {
          "field": "Column 1",
          "is": "equalTo",
          "value": 0
        }
      ]
    }
  ]
}
```

### Expected Result:
The violation generation should not produce nulls.

### Actual Result:
The violation generation produces nulls.

### In More Detail
If generating with a profile contains null, then generating violating data should not (and vice versa).

For this profile, given that null is an allowed value from "equalTo" (see the [FAQ](https://github.com/ScottLogic/datahelix/blob/master/docs/FrequentlyAskedQuestions.md#do-inset-or-equalto-permit-or-deny-the-empty-set-)), the normal generation should produce nulls, so this is expected. Therefore, this means that the violation generation should not produce nulls.