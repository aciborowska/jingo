## Bug Report
A scenario was created to run a matching regex constraint against an after, the data generated did not contain null. Is not null was not specified for the scenario so this is unexpected.

> Scenario: Running a 'matchingRegex' request alongside a after constraint should be successful
>      Given foo is matching regex /[a-e]{2}/
>        And foo is after 2018-10-10T00:00:00.000
>        And the generator can generate at most 5 rows
>      Then the following data should be generated:
>         | foo  |
>         | null |
>         | "aa" |
>         | "ab" |
>         | "ac" |
>         | "ad" |
>         | "ae" |

### Steps to Reproduce:
1. Run the above scenario (or feature MatchingRegex.feature) in cucumber
2. See that scenario **Scenario: Running a 'matchingRegex' request alongside a after constraint should be successful** fails
3. Check the error for the failed scenario

### Expected Result:
Null data should be created unless the constraint "is not null" is used, foo should be populated as per the test:
>         | foo  |
>         | null |
>         | "aa" |
>         | "ab" |
>         | "ac" |
>         | "ad" |
>         | "ae" |

### Actual Result:
The test fails as null data is not created, the error message shows that this data has not been created:

> java.lang.AssertionError: 
> Expected: [null], [aa], [ab], [ac], [ad]
>      but: [aa], [ab], [ac], [ad], [ae]
>  missing: [null]
>   counts: expected 5, but got 5
> 	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
> 	at org.junit.Assert.assertThat(Assert.java:956)
> 	at org.junit.Assert.assertThat(Assert.java:923)
> 	at com.scottlogic.deg.generator.cucumber.steps.GeneralTestStep.theFollowingDataShouldBeGenerated(GeneralTestStep.java:160)
> 	at âœ½.the following data should be generated:(C:/DataGenerator/data-engineering-generator/generator/src/test/java/com/scottlogic/deg/generator/cucumber/MatchingRegex.feature:485)


### Environment:
Run in IntelliJ with the background:

> Background:
>      Given the generation strategy is full
>       And there is a field foo
>       And foo is of type "string"

### Additional Context:
![image](https://user-images.githubusercontent.com/43746958/53232970-296b6d80-3684-11e9-8541-2362ced37f96.png)

