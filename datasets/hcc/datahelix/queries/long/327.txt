## Bug Report

### Steps to Reproduce:
 1. Create a profile with contradictory string length conditions.
{
  "schemaVersion" : "v3",
  "fields" : [
  {
  "name": "Upfront Payment Amount"},
  {
  "name": "age"}
  
  ],
  "rules" : [ 
	{
      "field": "Upfront Payment Amount",
      "is": "shorterThan",
      "value": 3
    },
	{
      "field": "Upfront Payment Amount",
      "is": "longerThan",
      "value": 2
    }
	
     ]
  } ]
}
2. Run the generator with this profile.

### Expected Result:
No results or Results with empty value for Upfront Payment Amount.

### Actual Result:
Exception in thread "main" picocli.CommandLine$ExecutionException: Error while running command (com.scottlogic.deg.generator.Generate@b9afc07): java.lang.ArrayIndexOutOfBoundsException: 0
	at picocli.CommandLine.execute(CommandLine.java:1051)
	at picocli.CommandLine.access$900(CommandLine.java:142)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:1246)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:1214)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:1122)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:1405)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:1344)
	at com.scottlogic.deg.generator.App.main(App.java:17)
Caused by: java.lang.ArrayIndexOutOfBoundsException: 0
	at java.util.Arrays$ArrayList.get(Arrays.java:3841)
	at com.scottlogic.deg.generator.generation.AutomationUtils.getLongestExample(AutomationUtils.java:24)
	at com.scottlogic.deg.generator.generation.RegexStringGenerator.generateInterestingValues(RegexStringGenerator.java:107)
	at com.scottlogic.deg.generator.generation.IStringGenerator$StringGeneratorAsFieldValueSource.lambda$generateInterestingValues$0(IStringGenerator.java:46)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
	at com.scottlogic.deg.generator.utils.ConcatenatingIterable.iterator(ConcatenatingIterable.java:22)
	at java.lang.Iterable.spliterator(Iterable.java:101)
	at com.scottlogic.deg.generator.generation.FieldSpecFulfiller.generate(FieldSpecFulfiller.java:35)
	at com.scottlogic.deg.generator.generation.databags.MultiplexingDataBagSource.lambda$generate$0(MultiplexingDataBagSource.java:19)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.scottlogic.deg.generator.generation.combination_strategies.PinningCombinationStrategy$InternalIterable.iterator(PinningCombinationStrategy.java:34)
	at java.lang.Iterable.spliterator(Iterable.java:101)
	at com.scottlogic.deg.generator.generation.combination_strategies.PinningCombinationStrategy.permute(PinningCombinationStrategy.java:20)
	at com.scottlogic.deg.generator.generation.databags.MultiplexingDataBagSource.generate(MultiplexingDataBagSource.java:17)
	at com.scottlogic.deg.generator.generation.databags.ConcatenatingDataBagSource.lambda$generate$0(ConcatenatingDataBagSource.java:18)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.stream.Streams$StreamBuilderImpl.tryAdvance(Streams.java:405)
	at java.util.stream.StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0(StreamSpliterators.java:294)
	at java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.fillBuffer(StreamSpliterators.java:206)
	at java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.doAdvance(StreamSpliterators.java:161)
	at java.util.stream.StreamSpliterators$WrappingSpliterator.tryAdvance(StreamSpliterators.java:300)
	at java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681)
	at com.scottlogic.deg.generator.generation.combination_strategies.PinningCombinationStrategy$SequenceAndBaselineTuple.<init>(PinningCombinationStrategy.java:49)
	at com.scottlogic.deg.generator.generation.combination_strategies.PinningCombinationStrategy$InternalIterable.lambda$iterator$0(PinningCombinationStrategy.java:33)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.scottlogic.deg.generator.generation.combination_strategies.PinningCombinationStrategy$InternalIterable.iterator(PinningCombinationStrategy.java:34)
	at java.lang.Iterable.spliterator(Iterable.java:101)
	at com.scottlogic.deg.generator.generation.combination_strategies.PinningCombinationStrategy.permute(PinningCombinationStrategy.java:20)
	at com.scottlogic.deg.generator.generation.databags.MultiplexingDataBagSource.generate(MultiplexingDataBagSource.java:17)
	at com.scottlogic.deg.generator.generation.DataGenerator.generateData(DataGenerator.java:59)
	at com.scottlogic.deg.generator.GenerationEngine.generate(GenerationEngine.java:79)
	at com.scottlogic.deg.generator.GenerationEngine.generateDataSet(GenerationEngine.java:35)
	at com.scottlogic.deg.generator.Generate.run(Generate.java:93)
	at picocli.CommandLine.execute(CommandLine.java:1043)
	... 7 more

Process finished with exit code 1
