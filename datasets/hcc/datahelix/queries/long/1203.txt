## Bug Report

It looks like the generator crashes after generating 21,474,835 rows (ISINs)
```
java.lang.IllegalArgumentException: indexOrder must be >= 1
        at com.scottlogic.deg.generator.generation.string.RegexStringGenerator$FiniteStringAutomatonIterator.getMatchedString(RegexStringGenerator.java:401)
        at com.scottlogic.deg.generator.generation.string.RegexStringGenerator$FiniteStringAutomatonIterator.hasNext(RegexStringGenerator.java:393)
        at com.scottlogic.deg.generator.utils.FilteringIterator.searchForNextValidValue(FilteringIterator.java:38)
        at com.scottlogic.deg.generator.utils.FilteringIterator.next(FilteringIterator.java:57)
        at com.scottlogic.deg.generator.utils.FilteringIterator.searchForNextValidValue(FilteringIterator.java:39)
        at com.scottlogic.deg.generator.utils.FilteringIterator.next(FilteringIterator.java:57)
        at com.scottlogic.deg.generator.utils.ConcatenatingIterable$InternalIterator.next(ConcatenatingIterable.java:70)
        at com.scottlogic.deg.generator.utils.UpCastingIterator.next(UpCastingIterator.java:35)
        at com.scottlogic.deg.generator.utils.ConcatenatingIterable$InternalIterator.next(ConcatenatingIterable.java:70)
        at java.util.Spliterators$IteratorSpliterator.tryAdvance(Unknown Source)
        at java.util.stream.StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0(Unknown Source)
        at java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.fillBuffer(Unknown Source)
        at java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.doAdvance(Unknown Source)
        at java.util.stream.StreamSpliterators$WrappingSpliterator.tryAdvance(Unknown Source)
        at java.util.Spliterators$1Adapter.hasNext(Unknown Source)
        at java.util.stream.MatchOps$1MatchSink.accept(Unknown Source)
        at java.util.ArrayList$ArrayListSpliterator.tryAdvance(Unknown Source)
        at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
        at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
        at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
        at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
        at java.util.stream.MatchOps$MatchOp.evaluateSequential(Unknown Source)
        at java.util.stream.MatchOps$MatchOp.evaluateSequential(Unknown Source)
        at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
        at java.util.stream.ReferencePipeline.anyMatch(Unknown Source)
        at com.scottlogic.deg.generator.generation.combinationstrategies.MinimalCombinationStrategy$InternalIterator.hasNext(MinimalCombinationStrategy.java:54)
        at java.util.Spliterators$IteratorSpliterator.tryAdvance(Unknown Source)
        at com.scottlogic.deg.common.util.FlatMappingSpliterator.tryAdvance(FlatMappingSpliterator.java:76)
        at java.util.Spliterators$1Adapter.hasNext(Unknown Source)
        at java.util.stream.MatchOps$1MatchSink.accept(Unknown Source)
        at java.util.ArrayList$ArrayListSpliterator.tryAdvance(Unknown Source)
        at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
        at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
        at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
        at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
        at java.util.stream.MatchOps$MatchOp.evaluateSequential(Unknown Source)
        at java.util.stream.MatchOps$MatchOp.evaluateSequential(Unknown Source)
        at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
        at java.util.stream.ReferencePipeline.anyMatch(Unknown Source)
        at com.scottlogic.deg.generator.generation.combinationstrategies.MinimalCombinationStrategy$InternalIterator.hasNext(MinimalCombinationStrategy.java:54)
        at java.util.Spliterators$IteratorSpliterator.tryAdvance(Unknown Source)
        at java.util.stream.ReferencePipeline.forEachWithCancel(Unknown Source)
        at java.util.stream.AbstractPipeline.copyIntoWithCancel(Unknown Source)
        at java.util.stream.AbstractPipeline.copyInto(Unknown Source)
        at java.util.stream.AbstractPipeline.wrapAndCopyInto(Unknown Source)
        at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(Unknown Source)
        at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(Unknown Source)
        at java.util.stream.AbstractPipeline.evaluate(Unknown Source)
        at java.util.stream.ReferencePipeline.forEach(Unknown Source)
        at com.scottlogic.deg.orchestrator.generate.GenerateExecute.outputData(GenerateExecute.java:82)
        at com.scottlogic.deg.orchestrator.generate.GenerateExecute.execute(GenerateExecute.java:77)
        at com.scottlogic.deg.orchestrator.generate.GenerateCommandLine.call(GenerateCommandLine.java:59)
        at com.scottlogic.deg.orchestrator.generate.GenerateCommandLine.call(GenerateCommandLine.java:44)
        at picocli.CommandLine.executeUserObject(CommandLine.java:1662)
        at picocli.CommandLine.access$900(CommandLine.java:143)
        at picocli.CommandLine$RunLast.handle(CommandLine.java:2020)
        at picocli.CommandLine$RunLast.handle(CommandLine.java:1987)
        at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:1854)
        at picocli.CommandLine.execute(CommandLine.java:1783)
        at com.scottlogic.deg.orchestrator.App.main(App.java:37)
```