## Bug Report
When a test that asserts a regex of max length 0 and does not say that the field cannot be null it is expected that a null data set will be created. Instead nothing is created and the test fails.

> Scenario: Running a 'containingRegex' for a maximum length of 0 should be successful
>      Given there is a field foo
>        And foo is containing regex /[a]{0}/
>      Then the following data should be generated:
>        | foo  |
>        | null |

### Steps to Reproduce:
1. Run feature file containingRegex.feature
2. See failed Tests include **Running a 'containingRegex' for a maximum length of 0 should be successful**
3. Open error report for failing scenario to see that the expected value of null is not matched.

### Expected Result:
When a rule does not specify that **field can not be null** then null should be generated.

### Actual Result:
No null data is generated and the test fails with an error:

> java.lang.AssertionError: Exceptions thrown during generation
> Expected: an empty collection
>      but: <[java.lang.UnsupportedOperationException: Can't generate all strings for a non-finite regex]>
> 	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
> 	at org.junit.Assert.assertThat(Assert.java:956)
> 	at com.scottlogic.deg.generator.cucumber.steps.GeneralTestStep.theFollowingDataShouldBeGenerated(GeneralTestStep.java:89)
> 	at âœ½.the following data should be generated:(C:/DataGenerator/data-engineering-generator/generator/src/test/java/com/scottlogic/deg/generator/cucumber/containingRegex.feature:219)

### Environment:
Master Branch running on IntelliJ. Run on full data generation strategy.

### Additional Context:
...add any other context about the problem here. If applicable, add screenshots to help explain...
![image](https://user-images.githubusercontent.com/43746958/48618256-b9688f80-e990-11e8-8b25-1a68d0dec5a4.png)

