## Bug Report

An `equalTo` constraint on a field should constrain the field to the given constant value, or if this is not possible the profile should be considered to be contradicting.

At present a null value is considered to satisfy any `equalTo` constraint.

### Steps to Reproduce:
 1. Write the following profile:
```
{
  "schemaVersion": "0.1",
  "fields": [
    {"name": "X"}
  ],
  "rules": [
    {
      "constraints": [
        { "field": "X", "is": "equalTo", "value": 6 }
      ]
    }
  ]
}
```
2. Run the profile in generate mode.

### Expected Result:
A data set which only contains the single value `6` in field `X` in every row.

### Actual Result:
A data set which contains a mixture of `6` and null values.

### Further information

Per the above, the following profile should be considered contradicting.  It should not generate any data in generate mode, and as it cannot generate valid data, we are not concerned about its meaning when generating violating data

```
{
  "schemaVersion": "0.1",
  "fields": [
    {"name": "X"}
  ],
  "rules": [
    {
      "constraints": [
        { "field": "X", "is": "equalTo", "value": 6 },
        { "field": "X", "is": "null" }
      ]
    }
  ]
}
```

At present this profile, in generate mode, produces data consisting solely of nulls.