## Bug Report
Using 'aValid' and 'matchingRegex' constraints fail to generate any data and produces an error message.

### Steps to Reproduce:
1. Run feature file aValid.feature from the branch ofLength-initial
2. See failed tests include "Running an 'aValid' request alongside a non-contradicting matchingRegex constraint should be successful"
3. Open error report for failing scenario to see that the scenario has errored


### Expected Result:
The datum "GB0002634946" should be produced.

### Actual Result:
Error message as below:
```
java.lang.AssertionError: Exceptions thrown during generation
Expected: an empty collection
     but: <[java.lang.UnsupportedOperationException]>
	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
	at org.junit.Assert.assertThat(Assert.java:956)
	at com.scottlogic.deg.generator.cucumber.steps.GeneralTestStep.theFollowingDataShouldBeContainedInActual(GeneralTestStep.java:114)
	at âœ½.the following data should be included in what is generated:(C:/dev/data-engineering-generator/generator/src/test/java/com/scottlogic/deg/generator/cucumber/AValid.feature:189)
```

The test passes with the condition `Then I am presented with an error message` to confirm this.

### Environment:
local, aValid-initial branch, IntelliJ

### Additional Context:
Test case:
```
  Scenario Outline: Running an 'aValid' request alongside a non-contradicting matchingRegex constraint should be successful
    Given foo is a valid "ISIN"
    And foo is matching regex <regex>
    Then the following data should be included in what is generated:
      | foo            |
      | "GB0002634946" |
    Examples:
      | regex               |
      | /GB0002634946/      |
      | /[A-Z]{2}[0-9]{10}/ |
      | /[A-Z0-9]{12}/      |
      | /[A-Z0-9]/          |
```
