## Bug Report
Length arguments with leading zeroes such as `01` are rejected instead of having the zeros trimmed.

### Steps to Reproduce:
 1. Run feature file null.feature from the branch ofLength-initial
 2. See failed tests include `Running an 'ofLength' request that includes a number with preceding zeros should be successful`
 3. Open error report for failing scenario to see that the scenario has errored

### Expected Result:
Normal data generation of length specified. E.g. for `01` data of length 1 should be generated.

### Actual Result:
```
cucumber.runtime.CucumberException: Could not convert arguments for step [{fieldVar} is {operator} {number}] defined at 'com.scottlogic.deg.generator.cucumber.steps.NumericValueStep.whenFieldIsConstrainedByNumericValue(String,String,Number) in file:/C:/dev/data-engineering-generator/generator/target/test-classes/'.
The details are in the stacktrace below.
	at cucumber.runner.PickleStepDefinitionMatch.couldNotConvertArguments(PickleStepDefinitionMatch.java:69)
	at cucumber.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:46)
	at cucumber.runner.TestStep.executeStep(TestStep.java:63)
	at cucumber.runner.TestStep.run(TestStep.java:49)
	at cucumber.runner.PickleStepTestStep.run(PickleStepTestStep.java:43)
	at cucumber.runner.TestCase.run(TestCase.java:44)
	at cucumber.runner.Runner.runPickle(Runner.java:40)
	at cucumber.runtime.Runtime$1.run(Runtime.java:84)
	at cucumber.runtime.Runtime$SameThreadExecutorService.execute(Runtime.java:220)
	at cucumber.runtime.Runtime.run(Runtime.java:81)
	at cucumber.api.cli.Main.run(Main.java:26)
	at cucumber.api.cli.Main.main(Main.java:8)
Caused by: io.cucumber.cucumberexpressions.CucumberExpressionException: ParameterType {number} failed to transform [01] to class java.lang.Number
	at io.cucumber.cucumberexpressions.ParameterType.transform(ParameterType.java:141)
	at io.cucumber.cucumberexpressions.Argument.getValue(Argument.java:63)
	at io.cucumber.stepexpression.ExpressionArgument.getValue(ExpressionArgument.java:15)
	at cucumber.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:41)
	... 10 more
Caused by: com.fasterxml.jackson.core.JsonParseException: Invalid numeric value: Leading zeroes not allowed
 at [Source: (String)"01"; line: 1, column: 2]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:1804)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:669)
	at com.fasterxml.jackson.core.base.ParserMinimalBase.reportInvalidNumber(ParserMinimalBase.java:545)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNLZ2(ReaderBasedJsonParser.java:1579)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._verifyNoLeadingZeroes(ReaderBasedJsonParser.java:1566)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parseNumber2(ReaderBasedJsonParser.java:1439)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._parsePosNumber(ReaderBasedJsonParser.java:1264)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextToken(ReaderBasedJsonParser.java:744)
	at com.fasterxml.jackson.databind.ObjectReader._initForReading(ObjectReader.java:355)
	at com.fasterxml.jackson.databind.ObjectReader._bindAndClose(ObjectReader.java:1596)
	at com.fasterxml.jackson.databind.ObjectReader.readValue(ObjectReader.java:1219)
	at com.scottlogic.deg.generator.cucumber.utils.GeneratorTestUtilities.parseNumber(GeneratorTestUtilities.java:114)
	at com.scottlogic.deg.generator.cucumber.steps.TypeRegistryConfiguration.lambda$configureTypeRegistry$0(TypeRegistryConfiguration.java:37)
	at io.cucumber.cucumberexpressions.ParameterType$TransformerAdaptor.transform(ParameterType.java:166)
	at io.cucumber.cucumberexpressions.ParameterType.transform(ParameterType.java:137)
	... 13 more
```

### Environment:
local, ofLength-initial branch, IntelliJ

### Additional Context:
none
