## Bug Report
When constraints for a set and equalTo contradict then the data generator is expected to emit a null line, as this is common to both constraints:

> `inSet` a b c (or line of nothing)
> `equalTo` X (or line of nothing)
> 
> - I cannot create in set values because conflict
> - I cannot create equal to value because conflict
> - I can create nothing `null` because that's a common thread

However, no line is created for this scenario:

> Scenario: Running a 'inSet' request alongside a contradicting equalTo constraint should only produce null data
>      Given there is a field foo
>        And foo is in set:
>        | "Test 1" |
>        | "Test 2" |
>        | "Test 3" |
>        And foo is equal to "Test 4"
>      Then the following data should be generated:
>        | foo      |
>        | null     |

### Steps to Reproduce:
1. Run the test above (or the InSet.feature test file)
2. See that the scenario R**unning a 'inSet' request alongside a contradicting equalTo constraint should only produce null data** fails
3. See from the error message that no null line of data is created for the field.

### Expected Result:
As `is not null` has not been specified, the field should contain a single line of nothing (null).

### Actual Result:
The error shows that no null line is created:

> Java.lang.AssertionError: 
> Expected: [null]
>      but: 
>  missing: [null]
>   counts: expected 1, but got 0
> 	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
> 	at org.junit.Assert.assertThat(Assert.java:956)
> 	at org.junit.Assert.assertThat(Assert.java:923)
> 	at com.scottlogic.deg.generator.cucumber.steps.GeneralTestStep.theFollowingDataShouldBeGenerated(GeneralTestStep.java:133)
> 	at âœ½.the following data should be generated:(C:/DataGenerator/data-engineering-generator/generator/src/test/java/com/scottlogic/deg/generator/cucumber/InSet.feature:512)

### Environment:
IntelliJ running branch CItestsIgnoreSoftContradictions in full generation mode.

### Additional Information
A branch may have been created by @tyankovasc  that resolves this issue.