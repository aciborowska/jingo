## Bug Report
When specifying certain profiles with multiple decisions the generator does not produce a full set of results for all valid combinations. Note that the order that the constraints are specified is important.

### Steps to Reproduce:
1. Create a profile with two fields (`foo` and `bar`)
2. Specify set restrictions on the fields to limit the exhaustive possibilities (`foo in 1,2,3,4`, `bar in a,b`)
3. Add an or constraint inside the condition of an if: for example `if foo is equal to 1 or 2 then bar is equal to "a" otherwise bar is equal to "b"`
4. Generate Data

See attached [profile](https://github.com/ScottLogic/datahelix/files/2946838/multipleDecisionProfile.json.txt)
for the above example.

### Expected Result:
5. Data exhaustively covers all possible routes:

| foo | bar |
| ---- | ---- |
| 1 | "a" |
| 2 | "a" |
| 3 | "b" |
| 4 | "b" |

### Actual Result:
5. Only the positive cases of the if constraint are produced

| foo | bar |
| ---- | ---- |
| 1 | "a" |
| 2 | "a" |

### Additional Context:
This is caused by the reductive walker pruning all of the tree when it reaches a contradiction instead of just pruning the contradictory nodes. Therefore if the walker were to reach the contracting node last then all data would be produced (note that the profile in bug #527 was by chance walked in the correct order hence it is fixed by the other changes).

We have remaining scenarios in If.feature which do fail in reductive mode as a result of this bug.