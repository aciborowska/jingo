## Bug Report
When a shorter than value of 5 was used, data was generated including 5 characters, this appears to work as per the shorterThanOrEqualTo constraint. 

> Scenario: Running a 'inSet' request alongside a non-contradicting shorterThan constraint should be successful
> Given there is a field foo
> And foo is in set:
> | "Test"  |
> | "test"  |
> | "Testt" |
> | "Test7" |
> And foo is shorter than 5
> Then the following data should be generated:
> | foo     |
> | "Test"  |
> | "test"  |

### Steps to Reproduce:
Run feature file inSet.feature
See failed Tests include **Scenario: Running a 'inSet' request alongside a non-contradicting shorterThan constraint should be successful**
Open error report for failing scenario to see the actual results include unexpected values.

### Expected Result:
Only the items in set that have less than 5 characters should be generated (Test / test).

### Actual Result:
Items in the set with equal to 5 characters are also created as seen in the error:

> java.lang.AssertionError: 
> Expected: [Test], [test]
>      but: [test], [Test], [Test7], [Testt]
>  missing: 
>   counts: expected 2, but got 4
> 	at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)
> 	at org.junit.Assert.assertThat(Assert.java:956)
> 	at org.junit.Assert.assertThat(Assert.java:923)
> 	at com.scottlogic.deg.generator.cucumber.steps.GeneralTestStep.theFollowingDataShouldBeGenerated(GeneralTestStep.java:96)
> 	at âœ½.the following data should be generated:(C:/DataGenerator/data-engineering-generator/generator/src/test/java/com/scottlogic/deg/generator/cucumber/InSet.feature:713)

### Environment:
inSetUpdated Branch running on IntelliJ. Run on full data generation strategy.

### Additional Context:
![image](https://user-images.githubusercontent.com/43746958/48839225-a71c9600-ed82-11e8-8045-2e23c679b4da.png)

