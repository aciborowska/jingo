## Bug Report

### Steps to Reproduce:
 1. Create field foo
 2. Add constraint foo is shorterThan 0
 3. Generate

### Expected Result:
InvalidProfileException as seen when specifying negative numbers

### Actual Result:
Throws the following exception:
```
Exception in thread "main" picocli.CommandLine$ExecutionException: Error while running command (com.scottlogic.deg.generator.commandline.GenerateCommandLine@57a3e26a): java.util.regex.PatternSyntaxException: Unclosed counted closure near index 4
.{0,-1}
    ^
	at picocli.CommandLine.execute(CommandLine.java:1051)
	at picocli.CommandLine.access$900(CommandLine.java:142)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:1246)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:1214)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:1122)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:1405)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:1344)
	at com.scottlogic.deg.generator.App.main(App.java:18)
Caused by: java.util.regex.PatternSyntaxException: Unclosed counted closure near index 4
.{0,-1}
    ^
	at java.util.regex.Pattern.error(Pattern.java:1957)
	at java.util.regex.Pattern.closure(Pattern.java:3143)
	at java.util.regex.Pattern.sequence(Pattern.java:2136)
	at java.util.regex.Pattern.expr(Pattern.java:1998)
	at java.util.regex.Pattern.compile(Pattern.java:1698)
	at java.util.regex.Pattern.<init>(Pattern.java:1351)
	at java.util.regex.Pattern.compile(Pattern.java:1028)
	at com.scottlogic.deg.generator.fieldspecs.FieldSpecFactory.construct(FieldSpecFactory.java:280)
	at com.scottlogic.deg.generator.fieldspecs.FieldSpecFactory.construct(FieldSpecFactory.java:99)
	at com.scottlogic.deg.generator.fieldspecs.FieldSpecFactory.construct(FieldSpecFactory.java:38)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.reduce(ReferencePipeline.java:484)
	at com.scottlogic.deg.generator.reducer.ConstraintReducer.getRootFieldSpec(ConstraintReducer.java:88)
	at com.scottlogic.deg.generator.reducer.ConstraintReducer.reduceConstraintsToFieldSpec(ConstraintReducer.java:65)
	at com.scottlogic.deg.generator.walker.reductive.FieldSpecExtractionVisitor.visit(FieldSpecExtractionVisitor.java:35)
	at com.scottlogic.deg.generator.decisiontree.TreeConstraintNode.accept(TreeConstraintNode.java:181)
	at com.scottlogic.deg.generator.walker.reductive.ReductiveFieldSpecBuilder.lambda$null$0(ReductiveFieldSpecBuilder.java:50)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.scottlogic.deg.generator.walker.reductive.ReductiveFieldSpecBuilder.lambda$getFieldSpecsForDecisions$1(ReductiveFieldSpecBuilder.java:50)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1080)
	at com.scottlogic.deg.generator.walker.reductive.ReductiveFieldSpecBuilder.getFieldSpecsForDecisions(ReductiveFieldSpecBuilder.java:49)
	at com.scottlogic.deg.generator.walker.reductive.ReductiveFieldSpecBuilder.getFieldSpecWithMustContains(ReductiveFieldSpecBuilder.java:37)
	at com.scottlogic.deg.generator.walker.ReductiveDecisionTreeWalker.fixNextField(ReductiveDecisionTreeWalker.java:54)
	at com.scottlogic.deg.generator.walker.ReductiveDecisionTreeWalker.walk(ReductiveDecisionTreeWalker.java:48)
	at com.scottlogic.deg.generator.walker.RandomReductiveDecisionTreeWalker.getFirstRowSpecFromRandomisingIteration(RandomReductiveDecisionTreeWalker.java:36)
	at com.scottlogic.deg.generator.walker.RandomReductiveDecisionTreeWalker.walk(RandomReductiveDecisionTreeWalker.java:21)
	at com.scottlogic.deg.generator.generation.DecisionTreeDataGenerator.lambda$generateData$0(DecisionTreeDataGenerator.java:56)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.scottlogic.deg.generator.generation.combinationstrategies.ReductiveCombinationStrategy.permute(ReductiveCombinationStrategy.java:19)
	at com.scottlogic.deg.generator.generation.databags.MultiplexingDataBagSource.generate(MultiplexingDataBagSource.java:17)
	at com.scottlogic.deg.generator.generation.DecisionTreeDataGenerator.generateData(DecisionTreeDataGenerator.java:67)
	at com.scottlogic.deg.generator.StandardGenerationEngine.generateDataSet(StandardGenerationEngine.java:32)
	at com.scottlogic.deg.generator.violations.ViolationGenerationEngine.generateDataSet(ViolationGenerationEngine.java:40)
	at com.scottlogic.deg.generator.GenerateExecute.run(GenerateExecute.java:65)
	at com.scottlogic.deg.generator.commandline.CommandLineBase.run(CommandLineBase.java:48)
	at picocli.CommandLine.execute(CommandLine.java:1043)
	... 7 more
```

### Example Profile:
```
{
    "schemaVersion": "0.1",
    "description": "Testing Profile",
    "fields": [
        {
            "name": "foo"
        }
    ],
    "rules": [
        {
            "rule": "rule1",
            "constraints": [
                {
                            "field": "foo",
                            "is": "shorterThan",
                            "value": 0
                }
            ]
        }
    ]
}
```