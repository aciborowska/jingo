## Bug Report
When a constraint for a different data type is used alongside a set, the expectation is that this will be ignored and not impact the data emitted.

A scenario was written for a set of string values and a numeric constraint `greaterThan` was included. It was expected that the greaterThan constraint would be ignored as the field data is not numeric. However, no data is produced when the scenario is run.

> Scenario: Running a 'inSet' request alongside a greaterThan constraint should be successful
>      Given there is a field foo
>        And foo is in set:
>        | "Test"  |
>        | "test"  |
>        | "Testt" |
>        | "Test7" |
>        And foo is greater than 1
>      Then the following data should be generated:
>        | foo     |
>        | null    |
>        | "Test"  |
>        | "test"  |
>        | "Testt" |
>        | "Test7" |

### Steps to Reproduce:
1. Run the above test (or InSet.feature test file) in cucumber
2. See that the scenario **Scenario: Running a 'inSet' request alongside a greaterThan constraint should be successful** fails
3. View the error message to see the actual output by the generator

### Expected Result:
The greaterThan should not be applied to string values, therefore the data generator should output the inSet values of:

>        | foo     |
>        | null    |
>        | "Test"  |
>        | "test"  |
>        | "Testt" |
>        | "Test7" |

### Actual Result:
The generator produces no data as seen in the error:

> java.lang.AssertionError: 
> Expected: [null], [Test], [test], [Testt], [Test7]
>      but: 
>  missing: [null], [Test], [test], [Testt], [Test7]
>   counts: expected 5, but got 0

### Environment:
IntelliJ running branch CItestsIgnoreSoftContradictions in full generation mode.
