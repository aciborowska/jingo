## Bug Report

### Steps to Reproduce:
 1. Create field foo
 2. Add constraint is longerThan with value too large for int but below maximum (e.g. 10000000000)
 3. Generate

### Expected Result:
Generation of strings of length 10000000000 characters or above

### Actual Result:
Generator does not recognise 10000000000 as number due to it being a long, throws exception:
```
com.scottlogic.deg.generator.inputs.InvalidProfileException: Rule: rule1
String-length operator must contain a numeric value for its operand found (10000000000) for field [foo]
	at com.scottlogic.deg.generator.inputs.JsonProfileReader.lambda$null$1(JsonProfileReader.java:80)
	at com.scottlogic.deg.generator.inputs.JsonProfileReader.mapDtos(JsonProfileReader.java:95)
	at com.scottlogic.deg.generator.inputs.JsonProfileReader.lambda$read$2(JsonProfileReader.java:71)
	at com.scottlogic.deg.generator.inputs.JsonProfileReader.mapDtos(JsonProfileReader.java:95)
	at com.scottlogic.deg.generator.inputs.JsonProfileReader.read(JsonProfileReader.java:65)
	at com.scottlogic.deg.generator.inputs.JsonProfileReader.read(JsonProfileReader.java:38)
	at com.scottlogic.deg.generator.GenerateExecute.run(GenerateExecute.java:57)
	at com.scottlogic.deg.generator.commandline.CommandLineBase.run(CommandLineBase.java:48)
	at picocli.CommandLine.execute(CommandLine.java:1043)
	at picocli.CommandLine.access$900(CommandLine.java:142)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:1246)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:1214)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:1122)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:1405)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:1344)
	at com.scottlogic.deg.generator.App.main(App.java:18)
```
### Additional Context:
Using scientific notation ensures value is a bigdecimal

### Example Profile:
```
{
    "schemaVersion": "0.1",
    "description": "Testing Profile",
    "fields": [
        {
            "name": "foo"
        }
    ],
    "rules": [
        {
            "rule": "rule1",
            "constraints": [
                {
                    "field": "foo",
                    "is": "longerThan",
                    "value": 10000000000
                }
            ]
        }
    ]
}
```