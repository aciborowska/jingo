## Bug Report

### Which version of ShardingSphere did you use?

5.0.0-RC1-SNAPSHOT

Commit 63f880bcab14eba5d4ac83ef22fc5ae346a62821 

### Which project did you use? Sharding-JDBC or Sharding-Proxy?

Sharding-JDBC

### Expected behavior

SQL statements with schema and quotation work equally compared to 3.x

### Actual behavior

The following sql statement causes a class cast exception

```
databaseTypeName = "PostgreSQL"
sql = "select count(*) from "abc"."order" where ("abc"."order"."user" = ? and "abc"."order"."status" = ?)"
```

Schema (`abc`) and table (`order`) names have been rewritten using the same character set [a-z]

### Reason analyze (If you can)

```
no viable alternative at input '("abc"."order".'

org.antlr.v4.runtime.NoViableAltException

class org.antlr.v4.runtime.tree.ErrorNodeImpl cannot be cast to class org.antlr.v4.runtime.ParserRuleContext (org.antlr.v4.runtime.tree.ErrorNodeImpl and org.antlr.v4.runtime.ParserRuleContext are in unnamed module of loader 'app')
java.lang.ClassCastException: class org.antlr.v4.runtime.tree.ErrorNodeImpl cannot be cast to class org.antlr.v4.runtime.ParserRuleContext (org.antlr.v4.runtime.tree.ErrorNodeImpl and org.antlr.v4.runtime.ParserRuleContext are in unnamed module of loader 'app')
	at org.jooq_3.12.1.POSTGRES.debug(Unknown Source) ~[?:?]
	at org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithParen(PredicateExtractor.java:116) ~[shardingsphere-sql-parser-engine-5.0.0-RC1-SNAPSHOT.jar:5.0.0-RC1-SNAPSHOT]
	at org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extractRecursiveWithLogicalOperation(PredicateExtractor.java:71) ~[shardingsphere-sql-parser-engine-5.0.0-RC1-SNAPSHOT.jar:5.0.0-RC1-SNAPSHOT]
	at org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.PredicateExtractor.extract(PredicateExtractor.java:65) ~[shardingsphere-sql-parser-engine-5.0.0-RC1-SNAPSHOT.jar:5.0.0-RC1-SNAPSHOT]
	at org.apache.shardingsphere.sql.parser.core.extractor.impl.dml.WhereExtractor.extract(WhereExtractor.java:48) ~[shardingsphere-sql-parser-engine-5.0.0-RC1-SNAPSHOT.jar:5.0.0-RC1-SNAPSHOT]
	at org.apache.shardingsphere.sql.parser.core.extractor.SQLSegmentsExtractorEngine.extract(SQLSegmentsExtractorEngine.java:47) ~[shardingsphere-sql-parser-engine-5.0.0-RC1-SNAPSHOT.jar:5.0.0-RC1-SNAPSHOT]
	at org.apache.shardingsphere.sql.parser.core.SQLParseKernel.parse(SQLParseKernel.java:59) ~[shardingsphere-sql-parser-engine-5.0.0-RC1-SNAPSHOT.jar:5.0.0-RC1-SNAPSHOT]
	at org.apache.shardingsphere.sql.parser.SQLParseEngine.parse0(SQLParseEngine.java:70) ~[shardingsphere-sql-parser-engine-5.0.0-RC1-SNAPSHOT.jar:5.0.0-RC1-SNAPSHOT]
	at org.apache.shardingsphere.sql.parser.SQLParseEngine.parse(SQLParseEngine.java:52) ~[shardingsphere-sql-parser-engine-5.0.0-RC1-SNAPSHOT.jar:5.0.0-RC1-SNAPSHOT]
	at org.apache.shardingsphere.masterslave.route.engine.MasterSlaveRouter.route(MasterSlaveRouter.java:49) ~[master-slave-core-route-5.0.0-RC1-SNAPSHOT.jar:5.0.0-RC1-SNAPSHOT]
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.<init>(MasterSlavePreparedStatement.java:70) ~[sharding-jdbc-core-5.0.0-RC1-SNAPSHOT.jar:5.0.0-RC1-SNAPSHOT]
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.MasterSlavePreparedStatement.<init>(MasterSlavePreparedStatement.java:55) ~[sharding-jdbc-core-5.0.0-RC1-SNAPSHOT.jar:5.0.0-RC1-SNAPSHOT]
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.connection.MasterSlaveConnection.prepareStatement(MasterSlaveConnection.java:76) ~[sharding-jdbc-core-5.0.0-RC1-SNAPSHOT.jar:5.0.0-RC1-SNAPSHOT]
	at org.jooq.impl.ProviderEnabledConnection.prepareStatement(ProviderEnabledConnection.java:109) ~[jooq-3.12.1.jar:?]
	at org.jooq.impl.SettingsEnabledConnection.prepareStatement(SettingsEnabledConnection.java:73) ~[jooq-3.12.1.jar:?]
	at org.jooq.impl.AbstractResultQuery.prepare(AbstractResultQuery.java:273) ~[jooq-3.12.1.jar:?]
	at org.jooq.impl.AbstractQuery.execute(AbstractQuery.java:336) ~[jooq-3.12.1.jar:?]
	at org.jooq.impl.AbstractResultQuery.fetchLazy(AbstractResultQuery.java:501) ~[jooq-3.12.1.jar:?]
	at org.jooq.impl.AbstractResultQuery.fetchLazy(AbstractResultQuery.java:470) ~[jooq-3.12.1.jar:?]
	at org.jooq.impl.AbstractResultQuery.fetchLazyNonAutoClosing(AbstractResultQuery.java:484) ~[jooq-3.12.1.jar:?]
	at org.jooq.impl.AbstractResultQuery.fetchOne(AbstractResultQuery.java:653) ~[jooq-3.12.1.jar:?]
	at org.jooq.impl.AbstractResultQuery.fetchOne(AbstractResultQuery.java:605) ~[jooq-3.12.1.jar:?]
	at org.jooq.impl.AbstractResultQuery.fetchOne(AbstractResultQuery.java:611) ~[jooq-3.12.1.jar:?]
	at org.jooq.impl.SelectImpl.fetchOne(SelectImpl.java:2847) ~[jooq-3.12.1.jar:?]
	at org.jooq.impl.DefaultDSLContext.fetchCount(DefaultDSLContext.java:4283) ~[jooq-3.12.1.jar:?]
```

### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.

Should be reproducible with the same sql statement and postgres parser.

### Example codes for reproduce this issue (such as a github link).
