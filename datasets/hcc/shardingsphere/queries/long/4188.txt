### Which version of ShardingSphere did you use?
4.0.0
### Which project did you use? Sharding-JDBC or Sharding-Proxy?
Sharding-JDBC
### Expected behavior
select SQL execute successfully.
### Actual behavior
```
java.lang.StringIndexOutOfBoundsException: String index out of range: -3

	at java.lang.String.substring(String.java:1955)
	at org.apache.shardingsphere.underlying.rewrite.sql.impl.AbstractSQLBuilder.getConjunctionText(AbstractSQLBuilder.java:58)
	at org.apache.shardingsphere.underlying.rewrite.sql.impl.AbstractSQLBuilder.toSQL(AbstractSQLBuilder.java:50)
	at org.apache.shardingsphere.underlying.rewrite.engine.impl.DefaultSQLRewriteEngine.rewrite(DefaultSQLRewriteEngine.java:34)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.getSQLUnit(EncryptPreparedStatement.java:181)
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.statement.EncryptPreparedStatement.executeQuery(EncryptPreparedStatement.java:120)
```
### Reason analyze (If you can)
The SQL parse result like this :
![image](https://user-images.githubusercontent.com/8772975/73934497-899d0300-4919-11ea-839b-e076ed32c321.png)
It cause the rewrited SQL tokens are repeated, and the rewrite indexs are error.
![image](https://user-images.githubusercontent.com/8772975/73934533-9c173c80-4919-11ea-962e-6590a318d097.png)

### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.
`SELECT * FROM t_query_encrypt WHERE pwd = ? and (id = ? or id =?)`
### Example codes for reproduce this issue (such as a github link).
