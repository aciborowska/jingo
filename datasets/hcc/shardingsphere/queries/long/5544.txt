## Bug Report

**For English only**, other languages will not accept.

Before report a bug, make sure you have:

- Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues).
- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).

Please pay attention on issues you submitted, because we maybe need more details. 
If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.

Please answer these questions before submitting your issue. Thanks!

### Which version of ShardingSphere did you use?
4.1.0
### Which project did you use? Sharding-JDBC or Sharding-Proxy?
sharding-proxy
### Expected behavior
query success
### Actual behavior
throw exception
![image](https://user-images.githubusercontent.com/19368482/81636431-6cab2b00-9446-11ea-8df6-23b6493dc38f.png)
![image](https://user-images.githubusercontent.com/19368482/81636474-8ba9bd00-9446-11ea-8d20-6be5ed47634c.png)

### Reason analyze (If you can)

### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.
query data range from 0 to 3147483647 （more than Integer.MAX_VALUE）
### Example codes for reproduce this issue (such as a github link).
#### config-xxx.yaml
```yaml
schemaName: databasemanager

dataSources:
  ds_0:
    url: jdbc:mysql://192.168.137.102:3306/databasemanager?serverTimezone=UTC&useSSL=false
    username: root
    password: xxxx
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 50
  ds_1:
    url: jdbc:mysql://192.168.137.102:3307/databasemanager?serverTimezone=UTC&useSSL=false
    username: root
    password: xxxxx
    connectionTimeoutMilliseconds: 30000
    idleTimeoutMilliseconds: 60000
    maxLifetimeMilliseconds: 1800000
    maxPoolSize: 50

shardingRule:
  tables:
    t_cluster:
      actualDataNodes: ds_${0..1}.t_cluster
      tableStrategy:
        none:
      databaseStrategy:
        complex:
          shardingColumns: clusterId
          algorithmClassName: org.apache.shardingsphere.shardingproxy.algorithm.complex.AutoPartitionByLong
    t_cluster_instance:
      actualDataNodes: ds_${0..1}.t_cluster_instance
      tableStrategy:
        none:
      databaseStrategy:
        inline:
          shardingColumn: clusterId
          algorithmExpression: ds_${clusterId.hashCode().abs() % 2}
  bindingTables:
    - t_cluster,t_cluster_instance
  defaultDatabaseStrategy:
    none:
  defaultTableStrategy:
    none:


```

#### table
```sql
create table `t_cluster` (
	`clusterId` bigint (20),
	`clusterName` varchar (384),
	`projectId` varchar (192),
	`createTime` datetime ,
	`updateTime` datetime 
); 
```

#### execute sql
```sql
select * from t_cluster t where  t.clusterId > 3 and t.clusterId < 3147483647
```