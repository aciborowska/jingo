## Bug Report

**For English only**, other languages will not accept.

Before report a bug, make sure you have:

- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).
- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).

Please pay attention on issues you submitted, because we maybe need more details. 
If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.

Please answer these questions before submitting your issue. Thanks!

### Which version of ShardingSphere did you use?
4.0.0-RC1
### Which project did you use? Sharding-JDBC or Sharding-Proxy?
jdbc
### Actual behavior
When using sharding key generator + assisted Query encryptor tto
execute `Insert into t_order(user_id, status) values(1,1),(2,3) `,  wrong column values will be calculated.
### Reason analyze (If you can)
When insert multiple values, generated key will be firstly move and then append, the final order is wrong.
```
    private void fillWithGeneratedKeyName(final InsertOptimizeResult insertOptimizeResult) {
        String generateKeyColumnName = shardingRule.findGenerateKeyColumnName(insertStatement.getTables().getSingleTableName()).get();
        insertOptimizeResult.getColumnNames().remove(generateKeyColumnName);
        insertOptimizeResult.getColumnNames().add(generateKeyColumnName);
    }
```
### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.

### Example codes for reproduce this issue (such as a github link).
