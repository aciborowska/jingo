## Bug Report

### Which version of ShardingSphere did you use?
sharding-orchestration:4.0.0-RC2
### Which project did you use? Sharding-JDBC or Sharding-Proxy?
Sharding-JDBC 
### Expected behavior
When the program restarts, the primary key of LEAF_SEGMENT distribution can be generated normally.
### Actual behavior
When the program restarts, the program throws a null pointer exception,

### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.

Caused by: java.lang.NullPointerException
	at org.apache.shardingsphere.orchestration.reg.zookeeper.curator.CuratorZookeeperRegistryCenter.tryLock(CuratorZookeeperRegistryCenter.java:306)
	at org.apache.shardingsphere.orchestration.internal.keygen.LeafSegmentKeyGenerator.incrementCacheId(LeafSegmentKeyGenerator.java:136)

### Reason analyze (If you can)
When the program restarts, **CuratorZookeeperRegistryCenter leafLock is not initialized properlyï¼Œ**
related code:
1. [LeafSegmentKeyGenerator.java#L95](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-orchestration/sharding-orchestration-core/src/main/java/org/apache/shardingsphere/orchestration/internal/keygen/LeafSegmentKeyGenerator.java#L95) 
2. [CuratorZookeeperRegistryCenter.java:#306](https://github.com/apache/incubator-shardingsphere/blob/dev/sharding-orchestration/sharding-orchestration-reg/sharding-orchestration-reg-zookeeper-curator/src/main/java/org/apache/shardingsphere/orchestration/reg/zookeeper/curator/CuratorZookeeperRegistryCenter.java#L306)
