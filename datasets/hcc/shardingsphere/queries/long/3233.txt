## Bug Report

**For English only**, other languages will not accept.

Before report a bug, make sure you have:

- Searched open and closed [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues).
- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).

Please pay attention on issues you submitted, because we maybe need more details. 
If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.

Please answer these questions before submitting your issue. Thanks!

### Which version of ShardingSphere did you use?

### Which project did you use? Sharding-JDBC or Sharding-Proxy?

### Expected behavior

### Actual behavior

### Reason analyze (If you can)

### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.

### Example codes for reproduce this issue (such as a github link).


10:26:19.032 [pool-5-thread-1] ERROR org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask - Exception occur: 
java.lang.IndexOutOfBoundsException: readerIndex(22) + length(2) exceeds writerIndex(23): PooledSlicedByteBuf(ridx: 22, widx: 23, cap: 23/23, unwrapped: PooledUnsafeDirectByteBuf(ridx: 94, widx: 94, cap: 496))
	at io.netty.buffer.AbstractByteBuf.checkReadableBytes0(AbstractByteBuf.java:1401) ~[netty-all-4.1.16.Final.jar:4.1.16.Final]
	at io.netty.buffer.AbstractByteBuf.readShort(AbstractByteBuf.java:726) ~[netty-all-4.1.16.Final.jar:4.1.16.Final]
	at org.apache.shardingsphere.shardingproxy.transport.postgresql.payload.PostgreSQLPacketPayload.readInt2(PostgreSQLPacketPayload.java:62) ~[sharding-proxy-transport-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT]
	at org.apache.shardingsphere.shardingproxy.transport.postgresql.packet.command.query.binary.bind.PostgreSQLComBindPacket.<init>(PostgreSQLComBindPacket.java:64) ~[sharding-proxy-transport-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT]
	at org.apache.shardingsphere.shardingproxy.transport.postgresql.packet.command.PostgreSQLCommandPacketFactory.newInstance(PostgreSQLCommandPacketFactory.java:59) ~[sharding-proxy-transport-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT]
	at org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.PostgreSQLCommandExecuteEngine.getCommandPacket(PostgreSQLCommandExecuteEngine.java:56) ~[sharding-proxy-frontend-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT]
	at org.apache.shardingsphere.shardingproxy.frontend.postgresql.command.PostgreSQLCommandExecuteEngine.getCommandPacket(PostgreSQLCommandExecuteEngine.java:47) ~[sharding-proxy-frontend-postgresql-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT]
	at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.executeCommand(CommandExecutorTask.java:84) ~[sharding-proxy-frontend-core-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT]
	at org.apache.shardingsphere.shardingproxy.frontend.command.CommandExecutorTask.run(CommandExecutorTask.java:66) [sharding-proxy-frontend-core-4.0.0-RC3-SNAPSHOT.jar:4.0.0-RC3-SNAPSHOT]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) [?:?]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) [?:?]
	at java.lang.Thread.run(Thread.java:834) [?:?]
