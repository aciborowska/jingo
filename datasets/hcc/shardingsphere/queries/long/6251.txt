# Which version of ShardingSphere did you use?
4.1.1
### Which project did you use? ShardingSphere-JDBC or ShardingSphere-Proxy?
ShardingSphere-JDBC
### Expected behavior
insert into oracle with data encrypted and get it decrypted
### Actual behavior
`Caused by: java.sql.SQLSyntaxErrorException: ORA-00942: 表或视图不存在

	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0]
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0]
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0]
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0]
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0]
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0]
	at oracle.jdbc.driver.T4CStatement.doOall8(T4CStatement.java:195) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0]
	at oracle.jdbc.driver.T4CStatement.executeForRows(T4CStatement.java:1036) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0]
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1336) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0]
	at oracle.jdbc.driver.OracleStatement.executeUpdateInternal(OracleStatement.java:1845) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0]
	at oracle.jdbc.driver.OracleStatement.executeUpdate(OracleStatement.java:1810) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0]
	at oracle.jdbc.driver.OracleStatementWrapper.executeUpdate(OracleStatementWrapper.java:294) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0]
	at oracle.jdbc.OracleDatabaseMetaData.getIndexInfo(OracleDatabaseMetaData.java:4138) ~[ojdbc6-11.2.0.3.jar:11.2.0.4.0]
	at com.zaxxer.hikari.pool.ProxyDatabaseMetaData.getIndexInfo(ProxyDatabaseMetaData.java:209) ~[HikariCP-3.4.5.jar:na]
	at com.zaxxer.hikari.pool.HikariProxyDatabaseMetaData.getIndexInfo(HikariProxyDatabaseMetaData.java) ~[HikariCP-3.4.5.jar:na]
	at org.apache.shardingsphere.sql.parser.binder.metadata.index.IndexMetaDataLoader.load(IndexMetaDataLoader.java:49) ~[shardingsphere-sql-parser-binder-4.1.1.jar:4.1.1]
	at org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader.load(SchemaMetaDataLoader.java:84) ~[shardingsphere-sql-parser-binder-4.1.1.jar:4.1.1]
	at org.apache.shardingsphere.sql.parser.binder.metadata.schema.SchemaMetaDataLoader.load(SchemaMetaDataLoader.java:76) ~[shardingsphere-sql-parser-binder-4.1.1.jar:4.1.1]
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext.loadSchemaMetaData(EncryptRuntimeContext.java:44) ~[sharding-jdbc-core-4.1.1.jar:4.1.1]
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.context.SingleDataSourceRuntimeContext.createMetaData(SingleDataSourceRuntimeContext.java:56) ~[sharding-jdbc-core-4.1.1.jar:4.1.1]
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.context.SingleDataSourceRuntimeContext.<init>(SingleDataSourceRuntimeContext.java:50) ~[sharding-jdbc-core-4.1.1.jar:4.1.1]
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.context.EncryptRuntimeContext.<init>(EncryptRuntimeContext.java:38) ~[sharding-jdbc-core-4.1.1.jar:4.1.1]
	at org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.EncryptDataSource.<init>(EncryptDataSource.java:48) ~[sharding-jdbc-core-4.1.1.jar:4.1.1]
	at org.apache.shardingsphere.shardingjdbc.api.EncryptDataSourceFactory.createDataSource(EncryptDataSourceFactory.java:46) ~[sharding-jdbc-core-4.1.1.jar:4.1.1]
	at org.apache.shardingsphere.shardingjdbc.spring.boot.SpringBootConfiguration.encryptDataSource(SpringBootConfiguration.java:127) ~[sharding-jdbc-spring-boot-starter-4.1.1.jar:4.1.1]`
**IF i change the sharding version to 4.0.1, i can start it error........**
### Reason analyze (If you can)
i think the reason is oracle cannot return the right schema and sharding get much more system object 
### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.
the sharding rule is 
```
    encrypt:
      tables:
        CONFIG:
          columns:
            NAME:
              cipherColumn: NAME
              encryptor: order_encryptor
      encryptors:
        order_encryptor:
          type: aes
          props:
            aes.key.value: 22fcf0cd2cf07841d4214d6a14b2b28c
```
### Example codes for reproduce this issue (such as a github link).
https://github.com/wuguowei19880907/kotlin-spring-boot.git