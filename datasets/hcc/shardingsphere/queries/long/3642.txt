**Which version of ShardingSphere did you use?**
dev  or all

**Which project did you use? Sharding-JDBC or Sharding-Proxy?**
Sharding-JDBC 

**Expected behavior**
Run `void org.apache.shardingsphere.shardingjdbc.orchestration.api.yaml.sharding.YamlOrchestrationShardingWithMasterSlaveIntegrateTest.assertWithDataSource() throws Exception` test unit.

until the under code
`List<TableMetaData> org.apache.shardingsphere.core.execute.metadata.TableMetaDataLoader.load(Map<String, List<DataNode>> dataNodeGroups, ShardingRule shardingRule, String logicTableName) throws SQLException`
the file TableMetaDataLoader.java line number is 99
`DataSourceMetaData dataSourceMetaData = TableMetaDataLoader.this.dataSourceMetas.getDataSourceMetaData(dataSourceName);`
the dataSourceMetaData  is not null..

![image](https://user-images.githubusercontent.com/10703753/70104797-2624f980-167a-11ea-949a-27d5abcfc9db.png)


**Actual behavior**
the dataSourceMetaData  is null..

**Reason analyze (If you can)**
![image](https://user-images.githubusercontent.com/10703753/70022945-e5bd7100-15d0-11ea-9bfe-1cfd176adb51.png)
With masterSlaveRules config，，，the dataSourceMetaData  must be null....because the yaml is not right to  map to code Map.class 

**Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.**
Run `void org.apache.shardingsphere.shardingjdbc.orchestration.api.yaml.sharding.YamlOrchestrationShardingWithMasterSlaveIntegrateTest.assertWithDataSource() throws Exception` test unit.

**Example codes for reproduce this issue (such as a github link).**
YamlOrchestrationShardingWithMasterSlaveIntegrateTest.java    assertWithDataSource()