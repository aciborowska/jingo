## Version
* Spring Boot 2.1.5.RELEASE
* ShardingSphere 4.0.0-RC1
* MySQL 5.7
## Question
I have set the option "spring.jpa.properties.hibernate.hbm2ddl.auto=update" 

config application.yml: 
```
datasource:
  names: ds0, ds1, ds2

# ****

sharding:
  default-data-source-name: ds0
# ...
  tables:
     cpn_code:
        actual-data-nodes: ds$->{1..2}.cpn_code$->{0..9}

# ...
```

* Apllication start always send sql  **CREATE INDEX idx_cpnId ON cpn_code...**
 
Because  Index Name in MySql is 'idx_cpnId_cpn_code0, idx_cpnId_cpn_code2...' , hibernate entity
```
@Entity
@Table(name = "cpn_code", indexes = {
        @Index(name = "idx_cpnId", columnList = "cpnId")
})
public class CouponCode {
```


* Sometimes application start fail because got Exception **Cannot find actual data node for data source name: 'ds0' and logic table name: 'cpn_code'**

```
//org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl#performTablesMigration
//org.hibernate.tool.schema.internal.AbstractSchemaMigrator#applyIndexes
//org.hibernate.tool.schema.internal.AbstractSchemaMigrator#findMatchingIndex
//org.hibernate.tool.schema.extract.internal.TableInformationImpl#getIndex
//org.hibernate.tool.schema.extract.internal.TableInformationImpl#indexes
//org.hibernate.tool.schema.extract.internal.InformationExtractorJdbcDatabaseMetaDataImpl#getIndexes
//org.apache.shardingsphere.shardingjdbc.jdbc.core.datasource.metadata.ResultSetReturnedDatabaseMetaData#getIndexInfo

// when currentDataSourceName is 'ds0' , method getDataNode will throw Exception
return null == table || null == shardingRule ? table : (shardingRule.findTableRule(table).isPresent() ? shardingRule.getDataNode(currentDataSourceName, table).getTableName() : table);
// so I config actual-data-nodes: ds$->{0..2}  to avoid error
```

