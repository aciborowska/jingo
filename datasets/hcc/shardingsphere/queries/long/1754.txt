## Bug Report

**For English only**, other languages will not accept.

Before report a bug, make sure you have:

- Searched open and closed [GitHub issues](https://github.com/sharding-sphere/sharding-sphere/issues).
- Read documentation: [ShardingSphere Doc](http://shardingsphere.io/document/current/en/overview/).

Please pay attention on issues you submitted, because we maybe need more details. 
If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.

Please answer these questions before submitting your issue. Thanks!

### Which version of ShardingSphere did you use?
3.1.0
### Which project did you use? Sharding-JDBC or Sharding-Proxy?
Sharding-Proxy
### Expected behavior
    ps = connection.prepareStatement("select * from t_order where merc_no='1234567891' and tx_dt in ('20190102', '20190103') limit 0,10 ");



08:38:35.467 [main] INFO MyComplexKeysShardingAlgorithm - collection:["ds_0","ds_1","ds_2","ds_3"],shardingValues:[{"columnName":"merc_no","logicTableName":"t_order","values"**:[-1]**},{"columnName":"tx_dt","logicTableName":"t_order",**"values":[-1,-1]}**]
t_order:
  databaseStrategy:
    complex:
      shardingColumns: merc_no, tx_dt
      algorithmClassName: MyComplexKeysShardingAlgorithm
  tableStrategy:
    inline:
      shardingColumn: tx_dt
      algorithmExpression: t_order_${tx_dt}

### Actual behavior

### Reason analyze (If you can)

### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.

### Example codes for reproduce this issue (such as a github link).
