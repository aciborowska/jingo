在1.3.1版本中，因柔性事务要autoCommit，所以对于批量插入时，只能使用类似如下的方式提交：

```
transaction.begin(conn);
for(User u : userList){
  pstm.setString(1, u.getName());
  pstm.setInt(2, u.getCode());
  hintManager.addDatabaseShardingValue("test", "user_id", u.getUserId); 

  pstm.executeUpdate();
  pstm.clearParameters();
}
transaction.end();
```

在ShardingPreparedStatement#executeUpdate()中

```
@Override
    public int executeUpdate() throws SQLException {
        hasExecuted = true;
        return new PreparedStatementExecutor(getShardingConnection().getShardingContext().getExecutorEngine(), getRoutedPreparedStatements()).executeUpdate();
    }
```

其中 `getRoutedPreparedStatements()`会因为`hasExecuted = true;`反复使用相同的cachedRoutedPreparedStatements，导致插入的值都相同且在同一分片中

<!---
@huboard:{"custom_state":"archived"}
-->
