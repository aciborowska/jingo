### Which version of ShardingSphere did you use?
4.0.0-RC3-SNAPHOT
### Which project did you use? Sharding-JDBC or Sharding-Proxy?
Sharding-JDBC
### Expected behavior
When the configuration order of cipher columns in encryption rules inconsistent with the order of  inserted sql, the value of the original columns can save to db orderedly .
### Actual behavior
the value of the original columns are disordered.
### Reason analyze (If you can)
Rewrite the encrypted SQL using the column order in the encryption configuration.

### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.

INSERT INTO t_account(account_id, certificate_number, password, amount, status) VALUES...
**the order ins sql is certificate_number、password、amount**
![image](https://user-images.githubusercontent.com/8772975/67558823-4f349f00-f74a-11e9-87b4-f88497e2331d.png)

**the order in encryption rules is certificate_number、password、amount**
this case is ok!

**but, if the order in sql is not 'certificate_number、password、amount' ， the order of this case is not ok!**

We can not guarantee that the order of columns in sql is consistent with the data in encryption rules

### Example codes for reproduce this issue (such as a github link).
