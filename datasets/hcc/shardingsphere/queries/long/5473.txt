## Bug Report

**For English only**, other languages will not accept.

Before report a bug, make sure you have:

- Searched open and closed [GitHub issues](https://github.com/apache/shardingsphere/issues).
- Read documentation: [ShardingSphere Doc](https://shardingsphere.apache.org/document/current/en/overview).

Please pay attention on issues you submitted, because we maybe need more details. 
If no response **more than 7 days** and we cannot reproduce it on current information, we will **close it**.

Please answer these questions before submitting your issue. Thanks!

### Which version of ShardingSphere did you use?
4.1.0

### Which project did you use? Sharding-JDBC or Sharding-Proxy?
Sharding-JDBC

### Expected behavior
Logic SQL: select count(*) as `_COUNT`, `table_alias0`.`id` from `test_center__model3` as `table_alias0` group by `table_alias0`.`id`

Actual SQL: ds_unit_test_partition ::: select count(*) as `_COUNT`, `table_alias0`.`id` from `test_center__model3_0` as `table_alias0` group by `table_alias0`.`id` ORDER BY **`table_alias0`.`id`** ASC

### Actual behavior
Actual SQL: ds_unit_test_partition ::: select count(*) as `_COUNT`, `table_alias0`.`id` from `test_center__model3_0` as `table_alias0` group by `table_alias0`.`id` ORDER BY **`table_alias0.id`** ASC
### _java.sql.SQLSyntaxErrorException: Unknown column 'table_alias0.id' in 'order clause'_

### Reason analyze (If you can)
```java
// OrderByTokenGenerator#generateSQLToken
if (each.getSegment() instanceof ColumnOrderByItemSegment) {
                ColumnOrderByItemSegment columnOrderByItemSegment = (ColumnOrderByItemSegment) each.getSegment();
                QuoteCharacter quoteCharacter = columnOrderByItemSegment.getColumn().getIdentifier().getQuoteCharacter();
                columnLabel = **quoteCharacter.getStartDelimiter() +** columnOrderByItemSegment.getText() **+ quoteCharacter.getEndDelimiter()**;
            }
```

### Steps to reproduce the behavior, such as: SQL to execute, sharding rule configuration, when exception occur etc.
Logic SQL: select count(*) as `_COUNT`, `table_alias0`.`id` from `test_center__model3` as `table_alias0` group by `table_alias0`.`id`

### Example codes for reproduce this issue (such as a github link).
