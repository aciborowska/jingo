In previous versions of OpenDJ we took great care to avoid normalizing attribute values unless we really have to. In the case of single valued attributes no normalization is required unless the value is compared. Multi-value attributes must normalize their values in order to check for uniqueness. In the previous versions of OpenDJ we "lazily" normalize attributes on demand by wrapping them in an AttributeValue object. However, this wrapper class has been removed for OpenDJ 2.8.0 and on the trunk, so normalization is always performed. See org.opends.server.types.AttributeBuilder.add(ByteString).

Note that the SDK Attribute class is ok: only the server's Attribute classes are impacted due to the state of the server code base resulting from incomplete migration to the SDK.

Unnecessary normalization of values can be very expensive, especially for DNs and time stamps, as seen in OPENDJ-2133.

We should consider this issue for inclusion in 2.8.0.

Suggested fix: reinstate AttributeValue wrapper internally within the AttributeBuilder/Attribute classes.
