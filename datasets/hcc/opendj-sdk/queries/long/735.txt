According to the "supported standards" page we do, but in fact we don't:


ldapsearch --port 1389 --baseDN dc=example,dc=com "(&)"
Result Code:  2 (Protocol Error)
Additional Information:  Cannot decode the provided ASN.1 sequence as an LDAP
message because the second element of the sequence could not be decoded as the
protocol op:  org.opends.server.types.LDAPException: Cannot decode the
provided ASN.1 element as an LDAP search request protocol op because the
filter could not be decoded:  org.opends.server.types.LDAPException: Cannot
decode the provided ASN.1 element as an LDAP search filter because the element
was null



The fix looks easy, although we could do with some better test coverage (org.opends.server.types.RawFilter.decodeCompoundFilter(ASN1Reader)):


      reader.readStartSequence();
      // Should have atleast 1 filter.
      do
      {
        filterComponents.add(LDAPFilter.decode(reader));
      }
      while(reader.hasNextElement());
      reader.readEndSequence();



Switching from a do...while loop to a while loop should do it.