The schema backend has an option to return the Schema attributes as if they were regular user attributes (and not operational).
This parameter is there for backward compatibility with legacy LDAP servers that did expose all their schema attributes by default, ignoring the fact that operational attibutes MUST be specifically requested, and with client applications relying on that behavior.

But when the flag is enabled, Schema modifications are broken. One can add the same attributeTypes or ObjectClasses multiple times.
Also, after adding a schema item, deleting it fails, and the server reports that there is no such attribute in the entry.

dn:cn=schema
changetype:modify
add:objectClasses
objectClasses: ( testrecipientx-oid NAME 'testRecipientx' DESC 'test mail' SUP top MAY ( cn $ mail ) X-ORIGIN 'user defined')

modifying entry "cn=schema"

dn:cn=schema
changetype:modify
delete:objectClasses
objectClasses: ( testrecipientx-oid NAME 'testRecipientx' DESC 'test mail' SUP top MAY ( cn $ mail ) X-ORIGIN 'user defined')

modifying entry "cn=schema"
ldapmodify: No such attribute (16)
additional info: Entry cn=schema cannot be modified because an attempt was made to remove one or more values from attribute objectClasses but this attribute is not present in the entry