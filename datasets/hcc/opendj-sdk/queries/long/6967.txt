Given two replication servers in a topology, having the following changes for a replica named "New York":



RS1
RS2


u5
 


u4
 


o3
 


u2
u2


u1
u1





Legend:

	"u" represents an update message
	"o" represents a replica offline message
	The number represents a timestamp



 

When RS2 receives o3, its change number indexer stops waiting for changes from the replica "New York". It means that if there were updates for other replicas (say "San Francisco") that were not indexed because of the replica "New York", then these changes will now be indexed, even though they might be posterior to u4.
Once u4, is received, the change number will immediately index it, maybe out-of-order.

This can happen for example when RS2 is offline, and it comes online. RS1 will then send all the changes it knows about.

Acceptance criteria

This issue can be closed once:

	It has been determined whether this scenario can result in our-of-order indexing, i.e. a bug
	if it is verified that this bug is possible, then it must be fixed

