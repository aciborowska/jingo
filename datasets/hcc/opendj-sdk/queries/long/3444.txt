The request based load balancers (sharded and saturation) return logical connections since load balancing is performed for each request. Unfortunately, the fail-over load balancer is connection based and assumes that successful acquisition of a connection from a subordinate load-balancer indicates that the service is available. The result is that the fail-over load-balancer always thinks that request based load-balancers are available, even when they are not.

Suggested fix:

1. the request load-balancers should detect when there are no servers available and return an error instead of a logical connection
2. the request load-balancers should have a configuration option specifying the minimum number of backend servers that should be available before the entire load-balancer is considered to be unavailable. The default should be "1", but this may result in too much load for a single server in certain deployments.