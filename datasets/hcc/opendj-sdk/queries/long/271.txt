Using EXTERNAL SASL authentication (client SSL certificate) with and without startTLS.

java.lang.IllegalStateException: EXTERNAL authentication already completed
    at com.sun.security.sasl.ExternalClient.evaluateChallenge(ExternalClient.java:78)
    at org.forgerock.opendj.ldap.requests.ExternalSASLBindRequestImpl$Client.evaluateResult(ExternalSASLBindRequestImpl.java:108)
    at com.forgerock.opendj.ldap.LDAPClientFilter$1.bindResult(LDAPClientFilter.java:125)
    at com.forgerock.opendj.ldap.LDAPClientFilter$1.bindResult(LDAPClientFilter.java:72)
    at com.forgerock.opendj.ldap.LDAPReader.decodeBindResult(LDAPReader.java:477)
    at com.forgerock.opendj.ldap.LDAPReader.decodeProtocolOp(LDAPReader.java:1374)
    at com.forgerock.opendj.ldap.LDAPReader.decode(LDAPReader.java:172)
    at com.forgerock.opendj.ldap.LDAPClientFilter.handleRead(LDAPClientFilter.java:614)
    at org.glassfish.grizzly.filterchain.ExecutorResolver$9.execute(ExecutorResolver.java:119)
    at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeFilter(DefaultFilterChain.java:286)
    at org.glassfish.grizzly.filterchain.DefaultFilterChain.executeChainPart(DefaultFilterChain.java:223)
    at org.glassfish.grizzly.filterchain.DefaultFilterChain.execute(DefaultFilterChain.java:155)
    at org.glassfish.grizzly.filterchain.DefaultFilterChain.process(DefaultFilterChain.java:134)
    at org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:78)
    at org.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:827)
    at org.glassfish.grizzly.strategies.AbstractIOStrategy.fireIOEvent(AbstractIOStrategy.java:103)
    at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.run0(WorkerThreadIOStrategy.java:111)
    at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy.access$100(WorkerThreadIOStrategy.java:55)
    at org.glassfish.grizzly.strategies.WorkerThreadIOStrategy$WorkerThreadRunnable.run(WorkerThreadIOStrategy.java:131)
    at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:508)
    at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:488)
    at java.lang.Thread.run(Thread.java:637)


org.forgerock.opendj.ldap.requests.ExternalSASLBindRequestImpl calls saslClient.evaluateChallenge twice: once in the constructor and later in evaluateResult.   It seems that after the call in the constructor the underlying sun implementation of SaslClient will throw an IllegalState exception if evaluateResult is called again (because it is already in the completed state) see:

http://www.docjar.com/html/api/com/sun/security/sasl/ExternalClient.java.html


Not sure what the proper fix is.  IllegalStateException isn't documented for that method, so it's strange the the Sun impl throws it.   A fix would be to check for completed (isCompleted()) before calling evaluate.  


