Each indexes is maintaining a trusted state which is stored and updated as part of the normal operations.
 An index is moved to the non-trusted state in case a DELETE operation tries to remove one or multiple EntryID from key(s) of an index while these EntryID were not there in the first place.
 It appears that the Online Index Rebuild also needs to mark rebuilt indexes as non-trusted while they get rebuilt.

In some unlikely case (met while running concurrently online rebuild index + addrate + DS shutdown), it seems that the state is not persisted correctly when an ADD operation gets aborted leading to index being considered trusted while it should not.

Here is a chronology of what seems to happen:

 t=1: EntryContainer.addEntry()
 t=2: Txn in EntryContainer.addEntry() throws (due to cancellation) and is aborted (rollback)
 t=3: EntryContainer.writeTrustState() Get Index State, returns TRUSTED
 t=4: Index rebuild started, mark index as being UNTRUSTED
 t=5: EntryContainer.writeTrustState() Save Index State as TRUSTED.
 t=6: Server is stopped with an index non being completely rebuild but marked as TRUSTED.
