The Affinity Control can be used by client applications that want requests to be routed to the same server via the Proxy.

But the control is embedded in the request and thus sent to the backend directory as well, when the Affinity Load-Balancer is used (the Least-requests load-balancer does remove the Affinity Control is received from the client).

If the backend directory doesn't support the Affinity Control or doesn't allow the users to make use of it, the request fails. 

But the goal of the Affinity control is purely at the proxy level. So the proxy should not send it downstream.

A workaround is to send the Affinity control with a criticality of false. But then it's unknown whether it will be honoured by the proxy or not.

 

./bin/ldapsearch -h localhost -p 9389 -D uid=user.1,ou=people,dc=example,dc=com -w password -J 1.3.6.1.4.1.36733.2.1.5.2:true:FOO -b "dc=example,dc=com" '(uid=user.2)'
# The LDAP search request failed: 12 (Unavailable Critical Extension)
# Additional Information: The request control with Object Identifier (OID) "1.3.6.1.4.1.36733.2.1.5.2" cannot be used due to insufficient access rights



$ ./bin/ldapsearch -h localhost -p 9389 -D uid=user.1,ou=people,dc=example,dc=com -w password -J 1.3.6.1.4.1.36733.2.1.5.2:false:FOO -b "dc=example,dc=com" '(uid=user.2)' dn
dn: uid=user.2,ou=People,dc=example,dc=com


 