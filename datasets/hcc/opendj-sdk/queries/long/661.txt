I’m seeing the following issue. 

I’m using an AuthenticatedConnectionFactory to connect to an LDAP server, like so:

// Creating the factory
LDAPOptions ldapOptions = new LDAPOptions();
ldapOptions.setTimeout(1, TimeUnit.SECONDS);

ConnectionFactory connectionFactory = new LDAPConnectionFactory(hostname, port, ldapOptions);

SimpleBindRequest bindRequest = Requests.newSimpleBindRequest(user, password.getBytes());

connectionFactory = Connections.newAuthenticatedConnectionFactory(connectionFactory, bindRequest);

// Add the connectionFactory to a list, in our case we are only using one connectionFactory, so the list only ever has one element
List<ConnectionFactory> connectionFactories = new LinkedList<ConnectionFactory>();
connectionFactories.add(connectionFactory);

// Getting a connection from the factory
Connection connection = connectionFactories.get(0).getConnection();

// Omitted - sending requests etc using the above connection– this is all working fine

The problem is that when my application is shut down I’m occasionally seeing the following exception being thrown. It’s hard to reproduce also, as it only occurs some of the time, and I haven’t pinpointed yet exactly when it occurs:

Exception in thread "Timeout Checker" java.lang.NullPointerException
                at com.forgerock.opendj.ldap.TimeoutChecker$1.run(TimeoutChecker.java:76)               

Note, that the connection that is created above is closed (connection.closed()) in my application’s shutdown method, and the exception (if thrown) always appears after it.

I’m using 3.0.0-M2 of the opendj-ldap-sdk.