While testing Yannick Lecaillez sortkey work for rest2ldap I noticed that when a _sortKey is specified for a missing or null field the records that have the field missing are sorted before records that have the _sortKey field. My understanding is with LDAP if a attribute that is missing or null has the highest value, so when sorting records where some of the records have an attribute and others dont the records without the attribute should come after the records that do have a particular attribute, if sorting in ascending order. This does not seem to be what rest2ldap is doing. For example,



GET http://localhost:8080/openidm/managed/user?_queryFilter=true&_sortKeys=/description&_pageSize=50

{
    "result": [
        {
            "_id": "dd9826a7-4ca8-4833-8b1c-aeb93ff96f46",
            "_rev": "0000000072acad5d",
            "preferences": {
                "updates": false,
                "marketing": false
            },
            "mail": "able@forgerock.com",
            "sn": "Zed",
            "givenName": "Z",
            "userName": "Zed",
            "accountStatus": "active",
            "_meta": {
                "creationDate": "2018-02-15T19:29:52.030Z",
                "numberOfLogins": 0
            },
            "lastChanged": {
                "date": "2018-02-15T19:29:52.194Z"
            },
            "effectiveRoles": [],
            "effectiveAssignments": []
        },
        {
            "_id": "55e85bdc-ae02-49eb-af05-f9e7e255daba",
            "_rev": "00000000020cccc9",
            "preferences": {
                "updates": false,
                "marketing": false
            },
            "mail": "jaboy@forgerock.com",
            "sn": "Doe",
            "givenName": "J",
            "userName": "J",
            "accountStatus": "active",
            "_meta": {
                "creationDate": "2018-02-15T19:30:24.748Z",
                "numberOfLogins": 0
            },
            "lastChanged": {
                "date": "2018-02-15T20:14:32.018Z"
            },
            "effectiveRoles": [],
            "effectiveAssignments": [],
            "description": "description"
        },
        {
            "_id": "0865faca-bf57-4647-98af-d62960c3da2b",
            "_rev": "00000000cdaecd52",
            "preferences": {
                "updates": false,
                "marketing": false
            },
            "mail": "zed@forgerock.com",
            "sn": "Alpha",
            "givenName": "A",
            "userName": "A",
            "accountStatus": "active",
            "_meta": {
                "creationDate": "2018-02-15T19:30:53.649Z",
                "numberOfLogins": 0
            },
            "lastChanged": {
                "date": "2018-02-15T20:14:13.657Z"
            },
            "effectiveRoles": [],
            "effectiveAssignments": [],
            "description": "description"
        }
    ],
    "resultCount": 3,
    "pagedResultsCookie": null,
    "totalPagedResultsPolicy": "NONE",
    "totalPagedResults": -1,
    "remainingPagedResults": -1
}



In the above case the entry dd9826a7-4ca8-4833-8b1c-aeb93ff96f46, which does not have the description field is sorted before the 2 entries that have a description field. Since the description sortkey is ascending order I would expect that the entry without the description field would come last and not first.