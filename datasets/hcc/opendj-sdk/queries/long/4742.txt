Steps to reproduce:

	create two RS only instances and connect them together
	create a DS and use dsreplication configure to bind it to the first RS. Normally I would expect dsreplication to automatically configure the DS against the second RS as well. Remember that dsreplication only supports two sets of host/ports so it is not possible to configure replication between 3 nodes
	create a second DS and configure it against the second RS similar to (2) above
	try to perform dsreplication initialize between the two DSs. It fails claiming that the two DSs do not share the same base DNs when they do
	try to perform dsreplication initialize-all. It works! 



 
Close examination of the two DSs hints at the problem (https://stash.forgerock.org/projects/OPENDJ/repos/opendj/browse/docs/architecture/config-samples.md). On DS1 we have:
 
dn: cn=cn=admin data,cn=domains,cn=Multimaster Synchronization,cn=Synchronization Providers,cn=config
objectClass: top
objectClass: ds-cfg-replication-domain
cn: cn=admin data
ds-cfg-base-dn: cn=admin data
ds-cfg-replication-server: rs3.example.com:3989
ds-cfg-replication-server: rs4.example.com:4989
ds-cfg-server-id: 18620
 
....
 
dn: cn=dc=example\,dc=com,cn=domains,cn=Multimaster Synchronization,cn=Synchronization Providers,cn=config
objectClass: top
objectClass: ds-cfg-replication-domain
cn: dc=example,dc=com
ds-cfg-base-dn: dc=example,dc=com
ds-cfg-replication-server: rs3.example.com:3989
ds-cfg-server-id: 17310
 
It looks like the DS only knows about one of the RS instances for the user backend. The other DS has a similar problem, except that it only knows about the other RS (rs4). The same problem exists in the cn=schema configuration.
 
Scripts to reproduce this can be found here: https://stash.forgerock.org/users/matthew/repos/design-documents-and-diagrams/browse/dj-devops/setup-4-way-replication.sh