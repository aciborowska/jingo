Found using OpenDJ 4.0.0 rev 507c160f51c4f3451a64c63ae39be219acb946c6

Using the following makeldif template (in which we use the same template "person" for the two branches):

define suffix=dc=example,dc=com
define maildomain=example.com
define numusers=1

branch: [suffix]

branch: ou=People,[suffix]
subordinateTemplate: person:[numusers]

branch: ou=People2,[suffix]
subordinateTemplate: person:[numusers]

template: person
rdnAttr: uid
objectClass: top
objectClass: person
objectClass: organizationalPerson
objectClass: inetOrgPerson
givenName: <first>
sn: <last>
cn: {givenName} {sn}
initials: {givenName:1}<random:chars:ABCDEFGHIJKLMNOPQRSTUVWXYZ:1>{sn:1}
employeeNumber: <sequential:0>
uid: user.{employeeNumber}
mail: {uid}@[maildomain]
userPassword: password
telephoneNumber: <random:telephone>
homePhone: <random:telephone>
pager: <random:telephone>
mobile: <random:telephone>
street: <random:numeric:5> <file:streets> Street
l: <file:cities>
st: <file:states>
postalCode: <random:numeric:5>
postalAddress: {cn}${street}${l}, {st}  {postalCode}
description: This is the description for {cn}.



With "old" make-ldif tool, we have users generated for both branches:

$ ./bin/make-ldif -o example.ldif -t example.template
LDIF processing complete.  5 entries written
$ more example.ldif
dn: dc=example,dc=com
objectClass: top
objectClass: domain
dc: example

dn: ou=People,dc=example,dc=com
objectClass: top
objectClass: organizationalUnit
ou: People

dn: uid=user.0,ou=People,dc=example,dc=com
objectClass: top
objectClass: person
objectClass: organizationalPerson
objectClass: inetOrgPerson
givenName: Aaccf
sn: Amar
cn: Aaccf Amar
initials: AWA
employeeNumber: 0
uid: user.0
mail: user.0@example.com
userPassword: password
telephoneNumber: +1 663 278 1167
homePhone: +1 614 064 4901
pager: +1 184 116 5403
mobile: +1 959 619 0875
street: 50707 Elm Street
l: Pocatello
st: CO
postalCode: 01060
postalAddress: Aaccf Amar$50707 Elm Street$Pocatello, CO  01060
description: This is the description for Aaccf Amar.

dn: ou=People2,dc=example,dc=com
objectClass: top
objectClass: organizationalUnit
ou: People2

dn: uid=user.1,ou=People2,dc=example,dc=com
objectClass: top
objectClass: person
objectClass: organizationalPerson
objectClass: inetOrgPerson
givenName: Aaren
sn: Atp
cn: Aaren Atp
initials: AYA
employeeNumber: 1
uid: user.1
mail: user.1@example.com
userPassword: password
telephoneNumber: +1 483 055 4043
homePhone: +1 032 717 5200
pager: +1 002 559 7621
mobile: +1 957 180 4711
street: 89819 Cherry Street
l: Champaign
st: OH
postalCode: 30341
postalAddress: Aaren Atp$89819 Cherry Street$Champaign, OH  30341
description: This is the description for Aaren Atp.



With the makeldif from SDK, we have users generated only for the first branch:

$ ./bin/makeldif -o example.ldif example.template
LDIF processing complete. 4 entries written
$ cat example.ldif
dn: dc=example,dc=com
dc: example

dn: ou=People,dc=example,dc=com
ou: People

dn: uid=user.0,ou=People2,dc=example,dc=com
objectClass: top
objectClass: person
objectClass: organizationalPerson
objectClass: inetOrgPerson
givenName: Aaccf
sn: Amar
cn: Aaccf Amar
initials: AGA
employeenumber: 0
uid: user.0
mail: user.0@example.com
userPassword: password
telephoneNumber: +1 833 805 7049
homephone: +1 508 556 4360
pager: +1 099 830 9981
mobile: +1 137 206 1025
street: 87724 Walnut Street
l: Hartford
st: IL
postalCode: 56108
postalAddress: Aaccf Amar$87724 Walnut Street$Hartford, IL  56108
description: This is the description for Aaccf Amar.

dn: ou=People2,dc=example,dc=com
ou: People2

