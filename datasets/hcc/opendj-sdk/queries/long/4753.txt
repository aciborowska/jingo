Steps to reproduce:

	create a server with default entries
	perform an LDAP search against the schema with the matched values control:


./bin/ldapsearch -h localhost -p 1389 -D cn=directory\ manager -w password -s base -b "cn=schema" --matchedValuesFilter "(attributeTypes=ds-cfg-ttl-enabled)" "(&)" attributeTypes


	Expected response:


dn: cn=schema
attributeTypes: ( 1.3.6.1.4.1.36733.2.1.1.243 NAME 'ds-cfg-ttl-enabled' EQUALITY booleanMatch SYNTAX 1.3.6.1.4.1.36733.2.1.3.3.7 SINGLE-VALUE X-ORIGIN 'OpenDJ Directory Server' X-SCHEMA-FILE '02-config.ldif' )


	Actual response:


# The LDAP search request failed: 80 (Other)
# Additional Information: An unexpected error was encountered while processing a search in one of the Directory Server backends: NullPointerException(SearchOperation.java:554)





The NPE fails in SearchOperation.keepMatchedValues() while processing the objectClass attribute:


   private void keepMatchedValues(Entry filteredEntry, MatchedValuesControl matchedValuesControl) {
        // First, look at the set of objectclasses.

        // NOTE: the objectClass attribute is also present and must be dealt with later.
        final AttributeType attrType = CoreSchema.getObjectClassAttributeType();
        final Iterator<ByteString> ocNameIt = filteredEntry.getAttribute(objectClass()).iterator(); // NPE!
        while (ocNameIt.hasNext()) {
            final ByteString ocName = ocNameIt.next();
            if (!matchedValuesControl.valueMatches(attrType, ocName)) {
                ocNameIt.remove();
            }
        }

        // Next, the user attributes (incl. objectClass attribute) and operational attributes.
        // TODO use the SDK's AttributeFilter class
        keepMatchedValues(matchedValuesControl, filteredEntry.getUserAttributes());
        keepMatchedValues(matchedValuesControl, filteredEntry.getOperationalAttributes());
    }


Â 