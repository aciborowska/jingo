The following piece of code in a custom OpenDJ plugin causes a NullPointerException in AuthenticatedUsers.java file:

public PreParse doPreParse(PreParseModifyOperation modifyOperation) 
{
   return PreParse.stopProcessing(ResultCode.SUCCESS, Message.EMPTY);
}

The affected line of AuthenticatedUsers.java is in 'doPostResponse(PostResponseModifyOperation op)' method:

CopyOnWriteArraySet<ClientConnection> connectionSet = userMap.get(oldEntry.getName());

I've found this issue during the migration of one of our plugins from OpenDJ 2.2 to OpenDJ 3.0-SNAPSHOT - it worked well in the previous releases. I've made some research by deploying fake plugins, triggering the problematic operation and observing the logs (unfortunately, I could neither replace OpenDJ jar itself nor observe it with a debugger). It seems that oldEntry is NULL, if we call stopProcessing() in our custom plugin.  The workaround is to call just 'PreParse.continueOperationProcessing()' in the mentioned plugin method.

Here are some logs:

[23/Feb/2015:16:28:54 +0100] category=PLUGIN severity=SEVERE_ERROR msgID=7602221 msg=The post-response MODIFY plugin defined in configuration entry cn=... threw an exception when it was invoked for connection 12 operation 2:  NullPointerException (AuthenticatedUsers.java:247 PluginConfigManager.java:4224 ModifyOperationBasis.java:478 Modify
OperationBasis.java:431 TraditionalWorkerThread.java:164).  Processing on this operation will be terminated
[23/Feb/2015:16:28:54 +0100] category=PLUGIN severity=SEVERE_ERROR msgID=7602222 msg=The post-response MODIFY plugin defined in configuration entry cn=... returned null when invoked for connection 12 operation 2.  This is an illegal response, and processing on this operation will be terminated