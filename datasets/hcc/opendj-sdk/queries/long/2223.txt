User creating by mistake backend on a suffix for which the root entry is already contained in the userRoot backend, and attempted to configure replication, with initialisation failing. After disabling the replication and attempting to delete the backend, the thread blocks within the backend delete operation, preventing further administration to the server; to recover from this situation the server process had to be killed.

Relevant stacks below, showing two threads stuck :



LDAP Request Handler 0 for connection handler Administration Connector 0.0.0.0 port 4444" prio=10 tid=0x00007f1cf85c6800 nid=0x1c19 waiting on condition [0x00007f1ca316f000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
    at java.lang.Thread.sleep(Native Method)
    at org.opends.server.backends.jeb.BackendImpl.waitUntilQuiescent(BackendImpl.java:212)
    at org.opends.server.backends.jeb.BackendImpl.finalizeBackend(BackendImpl.java:413)
    at org.opends.server.core.BackendConfigManager.applyConfigurationDelete(BackendConfigManager.java:1235)
    at org.opends.server.core.BackendConfigManager.applyConfigurationDelete(BackendConfigManager.java:69)
    at org.opends.server.admin.server.ServerManagedObjectDeleteListenerAdaptor.applyConfigurationDelete(ServerManagedObjectDeleteListenerAdaptor.java:74)
    at org.opends.server.admin.server.ConfigDeleteListenerAdaptor.applyConfigurationDelete(ConfigDeleteListenerAdaptor.java:187)
    at org.opends.server.extensions.ConfigFileHandler.deleteEntry(ConfigFileHandler.java:1593)
    - locked <0x000000071722c820> (a java.lang.Object)
    at org.opends.server.workflowelement.localbackend.LocalBackendDeleteOperation.processLocalDelete(LocalBackendDeleteOperation.java:341)
    at org.opends.server.workflowelement.localbackend.LocalBackendWorkflowElement.execute(LocalBackendWorkflowElement.java:556)
    at org.opends.server.core.WorkflowImpl.execute(WorkflowImpl.java:197)
    at org.opends.server.core.WorkflowTopologyNode.execute(WorkflowTopologyNode.java:100)
    at org.opends.server.core.DeleteOperationBasis.run(DeleteOperationBasis.java:417)
    at org.opends.server.core.SynchronousStrategy.enqueueRequest(SynchronousStrategy.java:49)
    at org.opends.server.protocols.ldap.LDAPClientConnection.addOperationInProgress(LDAPClientConnection.java:1269)
    at org.opends.server.protocols.ldap.LDAPClientConnection.processDeleteRequest(LDAPClientConnection.java:2130)
    at org.opends.server.protocols.ldap.LDAPClientConnection.processLDAPMessage(LDAPClientConnection.java:1721)
    at org.opends.server.protocols.ldap.LDAPRequestHandler.run(LDAPRequestHandler.java:194)






"Replication server RS(27161) writing to Replication server RS(31538) for domain "o=business,dc=example,dc=com" at w3prd1core4.example.com/10.242.69.46:40553" prio=10 tid=0x00007f1cb40ae800 nid=0x4b72 in Object.wait() [0x00007f1c95090000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at org.opends.server.replication.server.MessageHandler.getNextMessage(MessageHandler.java:428)
	- locked <0x000000079d13e6f8> (a org.opends.server.replication.server.MsgQueue)
	at org.opends.server.replication.server.ServerHandler.take(ServerHandler.java:1097)
	at org.opends.server.replication.server.ReplicationServerDomain.take(ReplicationServerDomain.java:1398)
	at org.opends.server.replication.server.ServerWriter.run(ServerWriter.java:108)




The backend "ou=business,dc=example,dc=com" should have had replication disabled, and is the one for which deletion is blocked.