Indexes are in charge of maintaining a list of entry's ID matching a given key: the EntryIDSet (i.e: key(foo)=entryIdSet(1, 8, 9, 10)). This allow to respond quickly to requests like "give me list of entries with name=foo".

During an entry modification/deletion an EntryID set might becomes empty because the modified/deleted entry were the last one matching the key. 
Since empty EntryIDSet are useless, they must be deleted.

The bug is that those empty EntryIDSet are actually kept in the db rather than being deleted. This problem have serious impact (non-exhaustive): 


	Huge memory consumption to get the list of changed entries in a replication scenario: Whole subtree query from rootDN on ds-sync-hist index leading to creation of an array containing huge amount of empty EntryIDSet.
	Bigger database size: Since keys are never removed, the database size get bigger and bigger (i.e: substring indexes are creating huge amount of keys per entry).



In addition to fixing the bug, we should also ensure that those empty EntryIDSet are detected as error by verify-index tool and correctly rebuild by rebuild-index tool.