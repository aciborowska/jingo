If I define a schema which contains a definition for the "mail" attribute (this attribute is not included in our default schema) and then decode an entry from LDIF using this schema subsequent attempts to read the "mail" attribute using a method like Entry.getAttribute("mail") will fail.

The reason is that the attribute stored in the entry has a well-defined OID (see RFC 4524), yet the getAttribute method will attempt to resolve "mail" against the default core schema resulting in a temporary OID of "mail-oid". As a result the look up fails, since there is no attribute having this OID in the entry.

Strictly speaking, the problem can be avoided if the application uses the same schema for everything. However, I think that this is going to be a common "gotcha" and a better solution should be taken.