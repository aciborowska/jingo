Collective attributes (virtual attributes) are not merged, only the attributes from the first entry are returned.

E.g.


dn: cn=collective1,dc=example,dc=com
 objectClass: top
 objectClass: subentry
 objectClass: collectiveAttributeSubentry
 objectClass: extensibleObject
 cn: collective1
 myattr;collective: collective1
 subtreeSpecification: \{base "ou=people", specificationFilter "(uid=*)" }

dn: cn=collective2,dc=example,dc=com
 objectClass: top
 objectClass: subentry
 objectClass: collectiveAttributeSubentry
 objectClass: extensibleObject
 cn: collective2
 myattr;collective: collective2
 subtreeSpecification: \{base "ou=people", specificationFilter "(uid=user*)" }



Current behaviour

	"uid=user.0,ou=people,dc=example,dc=com" only has the first collective attribute value "myattr: collective1".
	If collectiveConflictBehavior is set to "merge-real-and-virtual" for both "cn=collective1" and "cn=collective2" AND if uid=user.0 has a real attribute "myattr", then the real attribute and both collective attribute values are returned for uid=user.0.



Expected behaviour
According to RFC 3671:

When an entry belongs to multiple entry collections, the entry's
    values of each collective attribute are combined such that
    independent sources of these values are not manifested to clients.
 ...
 Collective attributes SHALL NOT be SINGLE-VALUED.
=> So it sounds like collective attribute values should be merged.