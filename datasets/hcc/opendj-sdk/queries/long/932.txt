Given the following test code:

Connection conn = null;
try {

    ConnectionFactory cf = Connections.newHeartBeatConnectionFactory(
            Connections.newAuthenticatedConnectionFactory(
            new LDAPConnectionFactory("localhost", 50389, new LDAPOptions().setTimeout(10, TimeUnit.SECONDS)), Requests.newSimpleBindRequest("cn=Directory Manager", "amadmin1".toCharArray())));
    conn = cf.getConnection();
    SearchRequest sr = Requests.newSearchRequest("dc=openam,dc=forgerock,dc=org", SearchScope.WHOLE_SUBTREE, Filter.objectClassPresent().toString(), "*");
    sr.addControl(PersistentSearchRequestControl.newControl(true, true, true, EnumSet.allOf(PersistentSearchChangeType.class)));
    conn.search(sr, new SearchResultHandler() {
        public boolean handleEntry(SearchResultEntry entry) {
            return true;
        }

        public boolean handleReference(SearchResultReference reference) {
            return true;
        }

        public void handleErrorResult(ErrorResultException error) {
            error.printStackTrace();
        }

        public void handleResult(Result result) {
        }
    });
} catch (Exception ex) {
    ex.printStackTrace();
} finally {
    if (conn != null) {
        conn.close();
    }
}


This will fail after 10 seconds with client side timeout, but IMHO it shouldn't. A persistent search request is doomed to take a long while to execute, hence it should be possible either to set timeout per the search request, or timeout shouldn't be applied to psearch requests at all.