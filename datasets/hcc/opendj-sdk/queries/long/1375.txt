A workload consisting of adds and a delete using the subtree delete control can end up with worker threads stuck in JE.

```
[13/Mar/2014:02:20:05 -0700] DELETE REQ conn=1 op=476 msgID=477 dn="cn=WLG52799FB1B1914C55B26B4AB0349E5111,ou=RCSNs,dc=example,dc=com"
[13/Mar/2014:02:20:05 -0700] DELETE RES conn=3 op=476 msgID=477 result=0 deletedEntries=2 etime=26
[13/Mar/2014:02:20:05 -0700] ADD REQ conn=7 op=470 msgID=471 dn="cn=WLGED88245022894143906D0153BB027A9A,ou=RCSNs,dc=example,dc=com"
[13/Mar/2014:02:20:05 -0700] ADD REQ conn=9 op=470 msgID=471 dn="cn=WLG3A9F3A640DC24DF7A3E083275A011B33,ou=RCSNs,dc=example,dc=com"
[13/Mar/2014:02:20:05 -0700] ADD REQ conn=8 op=470 msgID=471 dn="cn=WLG48A2607D9C754597A544B5CD6EB9CC18,ou=RCSNs,dc=example,dc=com"
[13/Mar/2014:02:20:06 -0700] ADD REQ conn=5 op=470 msgID=471 dn="cn=WLGF9CF320CDE12412197C12A9BC011633F,ou=RCSNs,dc=example,dc=com"
[13/Mar/2014:02:20:06 -0700] ADD REQ conn=4 op=470 msgID=471 dn="cn=WLGBB4311BE51E14E76AECDED28612CAB1D,ou=RCSNs,dc=example,dc=com"
[13/Mar/2014:02:20:06 -0700] ADD REQ conn=6 op=477 msgID=478 dn="cn=WLG8B9D7179B7CB4FF4B0A7741C24F74734,ou=RCSNs,dc=example,dc=com"
[13/Mar/2014:02:20:06 -0700] ADD REQ conn=0 op=470 msgID=471 dn="cn=WLGCB8B2C71322746078AC8DB01A771835F,ou=RCSNs,dc=example,dc=com"
[13/Mar/2014:02:20:06 -0700] ADD REQ conn=3 op=477 msgID=478 dn="cn=WLG02D3D9C35AC144F18AFD8DD96AD508B4,ou=RCSNs,dc=example,dc=com"
```

The initial delete is using the (not logged) delete subtree control. There are two entries (total) to delete in the subtree. Analysis with a debugger shows a thread doing the delete calling locker.wait(0) while updating id2subtree, and another thread doing an add calling locker.wait(0) on the same id2subtree lock.

All the worker threads processing the operations are stuck forever.