The implementation of invoke for org.opends.server.config.JMXMBean is:


  public Object invoke(String actionName, Object[] params, String[] signature)
         throws MBeanException
  {
    for (InvokableComponent component : invokableComponents)
    {
      for (InvokableMethod method : component.getOperationSignatures())
      {
        if (method.hasSignature(actionName, signature))
        {
          try
          { 
            method.invoke(component, params);
          }
          catch (MBeanException me)
          { 
            logger.traceException(me);
            
            throw me;
          }
          catch (Exception e)
          { 
            logger.traceException(e);
            
            throw new MBeanException(e);
          }
        }
      }
    }


    // If we've gotten here, then there is no such method so throw an exception.
    StringBuilder buffer = new StringBuilder();
...



Shouldn't the above method.invoke(component, params); line actually be return method.invoke(component,params);?