Considering the following template to generate Oauth2 refresh tokens (for OpenAM CTS).


define suffix=dc=com

branch: [suffix]
subordinateTemplate: refreshToken:200000

template: refreshToken
rdnAttr: coreTokenId
coreTokenId: <random:hex:8>-<random:hex:4>-<random:hex:4>-<random:hex:4>-<random:hex:12>
objectClass: top
objectClass: frCoreToken
coreTokenString08: /myrealm
coreTokenString07: Bearer
coreTokenString09: clientOIDC
coreTokenType: OAUTH
coreTokenString10: refresh_token
coreTokenExpirationDate: <file:/local/wks/pyforge/results/20151202-091634/BBC/tmp/timestamps:sequential>
coreTokenString12: authorization_code
coreTokenString01: openid
coreTokenString04: http://fake.com
coreTokenString03: user.<random:numeric:0:200000>
coreTokenObject: \{"redirectURI":\["http://fake.com"\],"acr":\[\],"clientID":\["clientOIDC"\],
 "expireTime":\["1464596377866"\],"grant_type":\["authorization_code"\],"scope":\["openid"\],
 "tokenName":\["refresh_token"\],"authModules":\["LDAP"\],"realm":\["/myrealm"\],
 "id":\["{coreTokenId}"\],"userName":\["{coreTokenString03}"\],"tokenType":\["Bearer"\]\}



Entries generated by make-ldif using that template, contain coreTokenObject attributes like:

coreTokenObject: {"redirectURI":["http://fake.com"],"acr":[],"clientID":["clientOIDC"],
 "expiretime": ["1464596377866"],"grant_type":["authorization_code"],"scope":["openid"],
 "tokenname": ["refresh_token"],"authModules":["LDAP"],"realm":["/myrealm"],
 "id": ["f650df9a-5159-79a7-aed9-38dda0f2f6b0"],"userName":["user.71401"],"tokenType":["Bearer"]}



Note the 2 words expiretime and tokenname which have be unexpectedly converted to lowercase (i.e. in the template they were written expireTime and tokenName

=> this causes the corresponding refresh_token entries to be rejected by OpenAM.