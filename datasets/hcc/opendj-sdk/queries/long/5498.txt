Replay threads share a ReplicationSynchronizer object in order to synchronize the threads for a replay to be done when it is not possible to manage the dependencies in parallel ("stop the world" mechanism).

Unfortunately the ReplicationSynchronizer relies on a single "stopTheWorld" boolean. If there is more than one domain, then there can be a situation where the second domain never release the permit of the semaphore used internally because the boolean has been reset to false by the first domain.

I've been hit by this deadlock with the ChangelogBackendTestCase#searchInCookieModeUseOfIncludeAttributes test, when the three domains used in the tests are removed. 
This happens because there is a "stop the world" case for two domains at the same time.
This is happening only in a PR for reactive changelog where the dynamics is modified, but the deadlock could occur in production in an unlucky situation.