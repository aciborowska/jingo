It appears that the throughput reached by a single LdapClientSocket is quite low and becomes worst when the number of concurrent request increase.
This has a significant performance impact in Rest2Ldap which is using the same LdapClientSocket to perform all the LDAP requests related to a CREST request. With reference and reverseReference, the number of requests sent on that connection can be significant.

64 concurrent requests

#$ ./bin/searchrate -p 1389 -D "uid=admin" -w password  -B 10   -F -c 1 -t 64 -b dc=example,dc=com  -g "rand(0,500000)" "(uid=user.{1})" 1.1
Warming up for 10 seconds...
--------------------------------------------------------------------------------------------
|     Throughput    |                 Response Time                |       Additional      | 
|    (ops/second)   |                (milliseconds)                |       Statistics      | 
|   recent  average |   recent  average    99.9%   99.99%  99.999% |  err/sec Entries/Srch | 
--------------------------------------------------------------------------------------------
|  33901.6  33901.6 |    1.886    1.886     9.50    19.14    23.86 |      0.0          1.0 | 
|  34256.6  34079.1 |    1.865    1.876     8.85    17.83    23.59 |      0.0          1.0 | 
|  35176.2  34444.8 |    1.816    1.855     7.70    16.91    23.59 |      0.0          1.0 | 
|  30130.2  33366.2 |    2.121    1.915     7.37    15.07    23.33 |      0.0          1.0 | 



256 concurrent requests

$ ./bin/searchrate -p 1389 -D "uid=admin" -w password  -B 10   -F -c 1 -t 256 -b dc=example,dc=com  -g "rand(0,500000)" "(uid=user.{1})" 1.1
Warming up for 10 seconds...
--------------------------------------------------------------------------------------------
|     Throughput    |                 Response Time                |       Additional      | 
|    (ops/second)   |                (milliseconds)                |       Statistics      | 
|   recent  average |   recent  average    99.9%   99.99%  99.999% |  err/sec Entries/Srch | 
--------------------------------------------------------------------------------------------
|  16726.2  16726.2 |   15.315   15.315    36.70    42.21    42.73 |      0.0          1.0 | 
|  16359.6  16542.9 |   15.639   15.475    33.55    41.94    42.73 |      0.0          1.0 | 
|  16522.8  16536.2 |   15.490   15.480    30.93    41.16    42.73 |      0.0          1.0 | 



1024 concurrent requests

$ ./bin/searchrate -p 1389 -D "uid=admin" -w password  -B 10   -F -c 1 -t 1024 -b dc=example,dc=com  -g "rand(0,500000)" "(uid=user.{1})" 1.1
Warming up for 10 seconds...
--------------------------------------------------------------------------------------------
|     Throughput    |                 Response Time                |       Additional      | 
|    (ops/second)   |                (milliseconds)                |       Statistics      | 
|   recent  average |   recent  average    99.9%   99.99%  99.999% |  err/sec Entries/Srch | 
--------------------------------------------------------------------------------------------
|   4562.4   4562.4 |  224.622  224.622   348.13   358.61   358.61 |      0.0          1.0 | 
|   4426.2   4494.3 |  230.907  227.717   346.03   358.61   358.61 |      0.0          1.0 | 
|   4319.2   4435.9 |  237.372  230.851   343.93   356.52   358.61 |      0.0          1.0 |



Supposedly this is a performance regression introduced by OPENDJ-4735.