It looks like it is new issue since DS-6.0.0 revision 554511aa40c.

Current behavior:

On a running server with 5 entries:

http://pyforge.example.com:8080/api/query/users?_queryFilter=_id sw "Embedded_testuser"&_pageSize=10&_fields=_id,fullobject
{
"result": [
{
"_id": "Embedded_testuser.1",
"_rev": "000000003d14b190",
"fullobject": {
"_id": "testuser.1",
"name": "testuser.1",
"sortingField": 1
}
},
{
"_id": "Embedded_testuser.2",
"_rev": "00000000029eb404",
"fullobject": {
"_id": "testuser.2",
"name": "testuser.2",
"sortingField": 3
}
},
{
"_id": "Embedded_testuser.3",
"_rev": "000000006b85b442",
"fullobject": {
"_id": "testuser.3",
"name": "testuser.3",
"sortingField": 5
}
},
{
"_id": "Embedded_testuser.4",
"_rev": "000000007121b320",
"fullobject": {
"_id": "testuser.4",
"name": "testuser.4",
"sortingField": 2
}
},
{
"_id": "Embedded_testuser.5",
"_rev": "0000000075fcb260",
"fullobject": {
"_id": "testuser.5",
"name": "testuser.5",
"sortingField": 4
}
}
],
"resultCount": 5,
"pagedResultsCookie": null,
"totalPagedResultsPolicy": "NONE",
"totalPagedResults": -1,
"remainingPagedResults": -1
}

If we try to get only 2 results with pageSize=2  and sort on json attribute inner value  fullobject/sortingField we get a cookie "[ 4 ]" :

http://pyforge.example.com:8080/api/query/users?_queryFilter=_id sw "Embedded_testuser"&_pageSize=2&_fields=_id,fullobject&_sortKeys=fullobject/sortingField
{
"result": [
{
"_id": "Embedded_testuser.1",
"_rev": "000000003d14b190",
"fullobject": {
"_id": "testuser.1",
"name": "testuser.1",
"sortingField": 1
}
},
{
"_id": "Embedded_testuser.4",
"_rev": "000000007121b320",
"fullobject": {
"_id": "testuser.4",
"name": "testuser.4",
"sortingField": 2
}
}
],
"resultCount": 2,
"pagedResultsCookie": "[ 4 ]",
"totalPagedResultsPolicy": "NONE",
"totalPagedResults": -1,
"remainingPagedResults": -1
}

If try to use this cookie for next two entries, the server returns last two entries, which is not correct, because we have 5 entries:

http://pyforge.example.com:8080/api/query/users?_queryFilter=_id sw "Embedded_testuser"&_pageSize=2&_fields=_id,fullobject&_sortKeys=fullobject/sortingField&_pagedResultsCookie=[ 4 ]

{
"result": [
{
"_id": "Embedded_testuser.5",
"_rev": "0000000075fcb260",
"fullobject": {
"_id": "testuser.5",
"name": "testuser.5",
"sortingField": 4
}
},
{
"_id": "Embedded_testuser.3",
"_rev": "000000006b85b442",
"fullobject": {
"_id": "testuser.3",
"name": "testuser.3",
"sortingField": 5
}
}
],
"resultCount": 2,
"pagedResultsCookie": null,
"totalPagedResultsPolicy": "NONE",
"totalPagedResults": -1,
"remainingPagedResults": -1
}

When trying to use single or double quotes around [ 4 ], the output contains first 2 entries.

Doing the same, but without sorting we can iterate over all 5 entries:

I tried later the same with sorting and paging, but on non-json attribute and it also works.

http://pyforge.example.com:8080/api/query/users?_queryFilter=_id sw "Embedded_testuser"&_pageSize=2&_fields=_id,fullobject
{
"result": [
{
"_id": "Embedded_testuser.1",
"_rev": "000000003d14b190",
"fullobject": {
"_id": "testuser.1",
"name": "testuser.1",
"sortingField": 1
}
},
{
"_id": "Embedded_testuser.2",
"_rev": "00000000029eb404",
"fullobject": {
"_id": "testuser.2",
"name": "testuser.2",
"sortingField": 3
}
}
],
"resultCount": 2,
"pagedResultsCookie": "AAAAAAAAAPI=",
"totalPagedResultsPolicy": "NONE",
"totalPagedResults": -1,
"remainingPagedResults": -1
}


http://pyforge.example.com:8080/api/query/users?_queryFilter=_id sw "Embedded_testuser"&_pageSize=2&_fields=_id,fullobject&_pagedResultsCookie=AAAAAAAAAPI=
{
"result": [
{
"_id": "Embedded_testuser.3",
"_rev": "000000006b85b442",
"fullobject": {
"_id": "testuser.3",
"name": "testuser.3",
"sortingField": 5
}
},
{
"_id": "Embedded_testuser.4",
"_rev": "000000007121b320",
"fullobject": {
"_id": "testuser.4",
"name": "testuser.4",
"sortingField": 2
}
}
],
"resultCount": 2,
"pagedResultsCookie": "AAAAAAAAAPQ=",
"totalPagedResultsPolicy": "NONE",
"totalPagedResults": -1,
"remainingPagedResults": -1
}


http://pyforge.example.com:8080/api/query/users?_queryFilter=_id sw "Embedded_testuser"&_pageSize=2&_fields=_id,fullobject&_pagedResultsCookie=AAAAAAAAAPQ=
{
"result": [
{
"_id": "Embedded_testuser.5",
"_rev": "0000000075fcb260",
"fullobject": {
"_id": "testuser.5",
"name": "testuser.5",
"sortingField": 4
}
}
],
"resultCount": 1,
"pagedResultsCookie": null,
"totalPagedResultsPolicy": "NONE",
"totalPagedResults": -1,
"remainingPagedResults": -1
}

Steps to reproduce:

A framework test exists:

notes: 

	the -n parameter means instances will not be uninstalled at the end, so remove it if you don't need a running instances
	this suite install DJ with HTTP Connection Handler, Tomcat and Jetty with REST2LDAP gateway - to install only DJ with HTTP check a product_list in Pybot/OpenDJ/testcases/rest2ldap_group/init.py and comment lines with Tomcat and Jetty, after that use second command




./run-pybot.py -n -s "rest2ldap_group.JsonSort*" DJ
---
./run-pybot.py -n -s "rest2ldap_group.JsonSortEmbedded" DJ

 