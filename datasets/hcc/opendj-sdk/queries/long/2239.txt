Issue:
Under load ( which is >100 requests per second to OAuth2 authroize endpoint (/openam/oauth2/authorize) ) OpenAM throws 500 Internal Server Exception. In one of the debug log (<path>/debug/Session) we found some time out related exceptions. It seems that the exception is thrown when OpenAM is trying to connect to OpenDJ. Given below is the small snippet of error stack trace.

Exception:


ERROR: CTS Async: Task Processor Error: processing task
org.forgerock.openam.cts.exceptions.QueryFailedException:
CTS: Failed to complete query:
      DN: ou=tokens,dc=openam,dc=bbc,dc=co,dc=uk
    Conn: PooledConnection(AuthenticatedConnection(HeartBeatConnection(LDAPConnection(xxxxx))))
  Filter: (&(objectClass=frCoreToken)(&(coreTokenId=-7384391871496429370)))
        at org.forgerock.openam.cts.impl.query.LDAPSearchHandler.performSearch(LDAPSearchHandler.java:58)
        at org.forgerock.openam.cts.impl.query.QueryBuilder.executeRawResults(QueryBuilder.java:250)
        at org.forgerock.openam.cts.impl.query.QueryBuilder.executeAttributeQuery(QueryBuilder.java:217)
        at org.forgerock.openam.cts.impl.task.PartialQueryTask.execute(PartialQueryTask.java:74)
        at org.forgerock.openam.cts.impl.queue.TaskProcessor.run(TaskProcessor.java:106)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
        at java.util.concurrent.FutureTask.run(FutureTask.java:262)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
        at java.lang.Thread.run(Thread.java:745)
Caused by: org.forgerock.opendj.ldap.TimeoutResultException: Client-Side Timeout: The request has failed because no response was received from the server within the 3000 ms timeout
        at org.forgerock.opendj.ldap.ErrorResultException.newErrorResult(ErrorResultException.java:229)
        at com.forgerock.opendj.ldap.AbstractLDAPFutureResultImpl.setResultOrError(AbstractLDAPFutureResultImpl.java:138)
        at com.forgerock.opendj.ldap.AbstractLDAPFutureResultImpl.adaptErrorResult(AbstractLDAPFutureResultImpl.java:127)
        at com.forgerock.opendj.ldap.LDAPConnection.handleTimeout(LDAPConnection.java:624)
        at com.forgerock.opendj.ldap.TimeoutChecker$2.run(TimeoutChecker.java:107)



The exception is not thrown for smaller load which is ~50 requests per second

Once OpenAM and OpenDJ are in this state then the only workaround we found is to re-deploy OpenAM And OpenDJ from scratch. This is not a feasible solution for us to use in production.

Topology

	We have 3 instances of OpenAM (AM1, AM2, AM3) and OpenDJ (DJ1, DJ2, DJ3) deployed in AWS cloud.
	All three OpenDJs are configured as DS and RS.
	Out of three openam instances , AM1 and AM2 are connected to DJ1 and AM3 is connected to DJ2.
	DJ3 acts as a replication server.



Version

	OpenAM version used : 12.0.0
	OpenDJ version used : 2.6.0

