See OPENDJ-4718 for explanation.

For the client tools we should consider using specialized Entry and Attribute implementations which do not enforce Set semantics.

Suggested Fix:


	create an implementation of Attribute which violates Set semantics by allowing duplicate values. The implementation could be backed by an ArrayList
	create an implementation of Entry which violates Map semantics by allowing duplicate keys (AttributeDescriptions). The implementation could be backed by an ArrayList whose elements are Pair<AttributeDescription,Attribute>
	add a method setDecodeOptions(DecodeOptions) to com.forgerock.opendj.cli.LdapClientProvider.Builder
	set the DecodeOptions using a call like options.set(DECODE_OPTIONS, decodeOptions) in com.forgerock.opendj.cli.LdapClientProvider#initLdapClient
	in com.forgerock.opendj.ldap.tools.LdapSearch#runLdapSearch() create DecodeOptions using Entry and Attribute factories returning the types in (1) and (2) above and pass them to the LdapClientProvider builder.


