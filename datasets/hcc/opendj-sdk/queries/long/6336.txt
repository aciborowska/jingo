Found with rev (8066f82d462)

We have a test in which we set up 4 servers, 2DS 2 RS.
We configure replication between DS1 and RS2:

/local/GIT/pyforge/results/20190604-142129/replication_group3/Issue4115/DS1/opendj/bin/dsreplication configure --host1 openam.example.com --port1 4444 --bindDN1 "uid=admin" --bindPassword1 "password" --noReplicationServer1 --host2 openam.example.com --port2 4447 --bindDN2 "uid=admin" --bindPassword2 "password" --replicationPort2 8992 --onlyReplicationServer2 -b dc=com -I admin -w password  -X -n 	

Establishing connections ..... Done
Checking registration information ..... Done
Updating remote references on server openam.example.com:4444 ..... Done
Updating remote references on server openam.example.com:4447 ..... Configuring Replication port on server openam.example.com:4447 ..... Done
Done
Updating replication configuration for baseDN dc=com on server
openam.example.com:4444 .....Done
Updating registration configuration on server openam.example.com:4444 ..... Done
Updating registration configuration on server openam.example.com:4447 ..... Done
Updating replication configuration for baseDN cn=schema on server
openam.example.com:4444 .....Done
Initializing registration information on server openam.example.com:4447 with
the contents of server openam.example.com:4444 .....Done

Replication has been successfully configured.  Note that for replication to
work you must initialize the contents of the base DNs that are being
replicated (use dsreplication initialize to do so).


See /tmp/opendj-replication-3328763863514537669.log for a detailed log of this
operation.


-- stderr --
Only one replication server will be defined for the following base DNs:
dc=com
It is recommended to have at least two replication servers (two changelogs) to
avoid a single point of failure in the replication topology.



Then between DS1 and RS1:

 	/local/GIT/pyforge/results/20190604-142129/replication_group3/Issue4115/DS1/opendj/bin/dsreplication configure --host1 openam.example.com --port1 4444 --bindDN1 "uid=admin" --bindPassword1 "password" --noReplicationServer1 --host2 openam.example.com --port2 4446 --bindDN2 "uid=admin" --bindPassword2 "password" --replicationPort2 8991 --onlyReplicationServer2 -b dc=com -I admin -w password  -X -n 	

Establishing connections ..... Done
Checking registration information ..... Done
Updating remote references on server openam.example.com:4444 ..... Done
Updating remote references on server openam.example.com:4446 ..... Configuring Replication port on server openam.example.com:4446 ..... Done
Done
Updating replication configuration for baseDN dc=com on server
openam.example.com:4444 .....Done
Updating registration configuration on server openam.example.com:4444 ..... Done
Updating registration configuration on server openam.example.com:4447 ..... Done
Updating registration configuration on server openam.example.com:4446 ..... Done
Updating replication configuration for baseDN cn=schema on server
openam.example.com:4444 .....Done
Initializing registration information on server openam.example.com:4446 with
the contents of server openam.example.com:4444 .....Done

Replication has been successfully configured.  Note that for replication to
work you must initialize the contents of the base DNs that are being
replicated (use dsreplication initialize to do so).


See /tmp/opendj-replication-8072974417950338976.log for a detailed log of this
operation.



The second command generates the following error message in the replication and error logs:

RS1/opendj/logs/replication:
[04/Jun/2019:14:22:59 +0200] category=SYNC severity=ERROR msgID=335 msg=Domain cn=admin data: the server with serverId=1 is unreachable in Replication Server=Replication Server 8991 rs1, unroutable message of type InitializeRequestMsg. Details: routing table is empty



(server id 1 being DS1)

To reproduce:

./run-pybot.py -v -s replication_group3.Issue4115 opendj



The test will pass (ignoring the error message for now) but error will be in the logs.