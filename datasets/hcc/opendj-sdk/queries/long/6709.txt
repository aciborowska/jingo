Use of the Password Sync plugin with JDK 11 and TLS 1.3 with no load induces consistent high CPU.

CPU = 99.9 % (nid=0x7d6)
"I/O dispatcher 1" #22 prio=5 os_prio=0 cpu=702445.86ms elapsed=1036.32s tid=0x00007fa20c002800 nid=0x7d6 runnable  [0x00007fa1de05d000]
   java.lang.Thread.State: RUNNABLE
        at sun.security.ssl.SSLEngineImpl.writeRecord(java.base@11.0.4/SSLEngineImpl.java:249)
        at sun.security.ssl.SSLEngineImpl.wrap(java.base@11.0.4/SSLEngineImpl.java:136)
        - eliminated <0x0000000742b800a0> (a sun.security.ssl.SSLEngineImpl)
        at sun.security.ssl.SSLEngineImpl.wrap(java.base@11.0.4/SSLEngineImpl.java:116)
        - locked <0x0000000742b800a0> (a sun.security.ssl.SSLEngineImpl)
        at javax.net.ssl.SSLEngine.wrap(java.base@11.0.4/SSLEngine.java:479)
        at org.apache.http.nio.reactor.ssl.SSLIOSession.doWrap(SSLIOSession.java:263)
        at org.apache.http.nio.reactor.ssl.SSLIOSession.doHandshake(SSLIOSession.java:301)
        at org.apache.http.nio.reactor.ssl.SSLIOSession.isAppInputReady(SSLIOSession.java:503)
        - locked <0x0000000742b80060> (a org.apache.http.nio.reactor.ssl.SSLIOSession)
        at org.apache.http.impl.nio.reactor.AbstractIODispatch.inputReady(AbstractIODispatch.java:120)
        at org.apache.http.impl.nio.reactor.BaseIOReactor.readable(BaseIOReactor.java:162)
        at org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvent(AbstractIOReactor.java:337)
        at org.apache.http.impl.nio.reactor.AbstractIOReactor.processEvents(AbstractIOReactor.java:315)
        at org.apache.http.impl.nio.reactor.AbstractIOReactor.execute(AbstractIOReactor.java:276)
        at org.apache.http.impl.nio.reactor.BaseIOReactor.execute(BaseIOReactor.java:104)
        at org.apache.http.impl.nio.reactor.AbstractMultiworkerIOReactor$Worker.run(AbstractMultiworkerIOReactor.java:588)
        at java.lang.Thread.run(java.base@11.0.4/Thread.java:834)

Workaround: Reverting to JDK 1.8 alleviates the CPU spin