If I configure DS to listen on 2 different IP addresses, the server no longer starts.

dn: cn=LDAP,cn=connection handlers,cn=config
objectClass: top
objectClass: ds-cfg-connection-handler
objectClass: ds-cfg-ldap-connection-handler
cn: LDAP
ds-cfg-java-class: org.opends.server.protocols.ldap.LDAPConnectionHandler
ds-cfg-enabled: true
ds-cfg-key-manager-provider: cn=Default Key Manager,cn=Key Manager Providers,cn=config
ds-cfg-trust-manager-provider: cn=JVM Trust Manager,cn=Trust Manager Providers,cn=config
ds-cfg-listen-port: 1389
ds-cfg-listen-address: 172.16.203.170
ds-cfg-listen-address: 172.16.203.171
ds-cfg-use-ssl: false
ds-cfg-allow-start-tls: true
ds-cfg-ssl-cert-nickname: server-cert 

When starting the server, we have the following error:

[12/Apr/2019:12:15:16 +0200] category=CORE severity=ERROR msgID=612 msg=The connection handler LDAP is trying to use the listener 172.16.203.171:1389 which is already in use by another connection handler
[12/Apr/2019:12:15:16 +0200] category=CORE severity=NOTICE msgID=139 msg=The Directory Server has sent an alert notification generated by class org.opends.server.core.DirectoryServer (alert type org.opends.server.DirectoryServerShutdown, alert ID org.opends.messages.core-141): The Directory Server has started the shutdown process. The shutdown was initiated by an instance of class org.opends.server.core.DirectoryServer and the reason provided for the shutdown was An error occurred while attempting to bootstrap the Directory Server: Could not start connection handlers 

The DirectoryServer' s startConnectionHandlers() method checks that there are only unique listen addresses, and reject the second one as equal to the first one.

The issue lies in the HostPort class and the normalizedHost which is resolved in localhost,
 and the equals method is using the localhost.

> 1 = {HostPort@5141} "172.16.203.170:1389"
 host = "172.16.203.170"
 normalizedHost = "localhost"
 port = 1389

