The ConnectionException doesn't contain the connection information that is failing. Therefore, you get a generic message:



ERROR: Unexpected error occurred during searchorg.forgerock.opendj.ldap.ConnectionException: Connect Error: No operational connection factories available




How to reproduce 

You can see OPENAM-9489


Excepted behaviour

We could return the hostname and port that is failing.



host='openam.example.com', port=23080



Current behaviour

The generic message "Connect Error: No operational connection factories available"


Suggested fix

We could add the factory toString() into the exception error message:



 diff --git a/opendj-core/src/main/java/org/forgerock/opendj/ldap/LoadBalancer.java b/opendj-core/src/main/java/org/forgerock/opendj/ldap/LoadBalancer.java
index a7f8e06..7921597 100644
--- a/opendj-core/src/main/java/org/forgerock/opendj/ldap/LoadBalancer.java
+++ b/opendj-core/src/main/java/org/forgerock/opendj/ldap/LoadBalancer.java
@@ -288,7 +288,8 @@ abstract class LoadBalancer implements ConnectionFactory {
          * policy here such as waiting indefinitely, or for a configurable
          * timeout period.
          */
-        throw newLdapException(CLIENT_SIDE_CONNECT_ERROR, "No operational connection factories available", lastFailure);
+        throw newLdapException(CLIENT_SIDE_CONNECT_ERROR,
+                "No operational connection factories available: " + this, lastFailure);
     }
 
     final String getLoadBalancerName() {

