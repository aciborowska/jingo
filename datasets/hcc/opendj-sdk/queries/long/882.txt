Customer trying to use access log filtering to exclude certain IP addresses (heartbeat connections) from the log:


dsconfig create-access-log-filtering-criteria -X -n -D "cn=Directory Manager" -j ~/private/tmp.007 --publisher-name "File-Based Access Logger" --criteria-name "Exclude LB health check traffic" --set connection-client-address-equal-to:169.229.54.248/32 --set connection-client-address-equal-to:169.229.54.249/32 --set connection-client-address-equal-to:10.254.9.248/32 --set connection-client-address-equal-to:10.254.9.249/32 --set connection-client-address-equal-to:169.229.248.139/32 --set connection-client-address-equal-to:169.229.54.250/32 --set connection-client-address-equal-to:169.229.54.251/32 -p 4444 -h localhost

dsconfig set-log-publisher-prop -X -n -D "cn=Directory Manager" -j ~/private/tmp.007 --publisher-name "File-Based Access Logger" --set filtering-policy:exclusive-p 4444 -h localhost



After a while, replication traffic appears to cause this exception:



nds-t2 opendj-errors: [22/Apr/2013:16:56:02 -0700] category=CORE severity=FATAL_ERROR msgID=327820 msg=An uncaught exception during processing for thread Replica DS(31738) state checkpointer for domain "dc=example,dc=com" has caused it to terminate abnormally. The stack trace for that exception is: java.lang.NullPointerException
nds-t2 opendj-errors: org.opends.server.types.AddressMask.match(AddressMask.java:430)
nds-t2 opendj-errors: org.opends.server.types.AddressMask.maskListContains(AddressMask.java:398)
nds-t2 opendj-errors: org.opends.server.loggers.AbstractTextAccessLogPublisher$CriteriaFilter.filterClientConnection(AbstractTextAccessLogPublisher.java:414)
nds-t2 opendj-errors: org.opends.server.loggers.AbstractTextAccessLogPublisher$CriteriaFilter.isRequestLoggable(AbstractTextAccessLogPublisher.java:312)
nds-t2 opendj-errors: org.opends.server.loggers.AbstractTextAccessLogPublisher$OrFilter.isRequestLoggable(AbstractTextAccessLogPublisher.java:896)
nds-t2 opendj-errors: org.opends.server.loggers.AbstractTextAccessLogPublisher$RootFilter.isRequestLoggable(AbstractTextAccessLogPublisher.java:1032)
nds-t2 opendj-errors: org.opends.server.loggers.AbstractTextAccessLogPublisher.isRequestLoggable(AbstractTextAccessLogPublisher.java:1434)
nds-t2 opendj-errors: org.opends.server.loggers.TextAccessLogPublisher.logModifyRequest(TextAccessLogPublisher.java:1068)
nds-t2 opendj-errors: org.opends.server.loggers.AccessLogger.logModifyRequest(AccessLogger.java:691)
nds-t2 opendj-errors: org.opends.server.core.ModifyOperationBasis.run(ModifyOperationBasis.java:469)
nds-t2 opendj-errors: org.opends.server.replication.plugin.PersistentServerState.runUpdateStateEntry(PersistentServerState.java:375)
nds-t2 opendj-errors: org.opends.server.replication.plugin.PersistentServerState.updateStateEntry(PersistentServerState.java:332)
nds-t2 opendj-errors: org.opends.server.replication.plugin.PersistentServerState.save(PersistentServerState.java:161)
nds-t2 opendj-errors: org.opends.server.replication.plugin.LDAPReplicationDomain$ServerStateFlush.run(LDAPReplicationDomain.java:418)
nds-t2 opendj-errors: [22/Apr/2013:16:56:02 -0700] category=CORE severity=NOTICE msgID=458891 msg=The Directory Server has sent an alert notification generated by class org.opends.server.api.DirectoryThread (alert type org.opends.server.UncaughtException, alert ID 327820): An uncaught exception during processing for thread Replica DS(31738) state checkpointer for domain "dc=example,dc=com" has caused it to terminate abnormally. The stack trace for that exception is: java.lang.NullPointerException
nds-t2 opendj-errors: org.opends.server.types.AddressMask.match(AddressMask.java:430)
nds-t2 opendj-errors: org.opends.server.types.AddressMask.maskListContains(AddressMask.java:398)
nds-t2 opendj-errors: org.opends.server.loggers.AbstractTextAccessLogPublisher$CriteriaFilter.filterClientConnection(AbstractTextAccessLogPublisher.java:414)
nds-t2 opendj-errors: org.opends.server.loggers.AbstractTextAccessLogPublisher$CriteriaFilter.isRequestLoggable(AbstractTextAccessLogPublisher.java:312)
nds-t2 opendj-errors: org.opends.server.loggers.AbstractTextAccessLogPublisher$OrFilter.isRequestLoggable(AbstractTextAccessLogPublisher.java:896)
nds-t2 opendj-errors: org.opends.server.loggers.AbstractTextAccessLogPublisher$RootFilter.isRequestLoggable(AbstractTextAccessLogPublisher.java:1032)
nds-t2 opendj-errors: org.opends.server.loggers.AbstractTextAccessLogPublisher.isRequestLoggable(AbstractTextAccessLogPublisher.java:1434)
nds-t2 opendj-errors: org.opends.server.loggers.TextAccessLogPublisher.logModifyRequest(TextAccessLogPublisher.java:1068)
nds-t2 opendj-errors: org.opends.server.loggers.AccessLogger.logModifyRequest(AccessLogger.java:691)
nds-t2 opendj-errors: org.opends.server.core.ModifyOperationBasis.run(ModifyOperationBasis.java:469)
nds-t2 opendj-errors: org.opends.server.replication.plugin.PersistentServerState.runUpdateStateEntry(PersistentServerState.java:375)
nds-t2 opendj-errors: org.opends.server.replication.plugin.PersistentServerState.updateStateEntry(PersistentServerState.java:332)
nds-t2 opendj-errors: org.opends.server.replication.plugin.PersistentServerState.save(PersistentServerState.java:161)
nds-t2 opendj-errors: org.opends.server.replication.plugin.LDAPReplicationDomain$ServerStateFlush.run(LDAPReplicationDomain.java:418)



And, in time correlation to this, replication breaks and customer has to remove the filter to make it work again.