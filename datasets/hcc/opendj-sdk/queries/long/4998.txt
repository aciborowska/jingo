Currently, our SASL Client Digest-MD5 uses the same message ID in both of the multi-staged bind requests sent to the server according to the LDAP access log below:


{
  "eventName": "DJ-LDAP",
  "client": {
    "ip": "127.0.0.1",
    "port": 44886
  },
  "server": {
    "ip": "127.0.1.1",
    "port": 1389
  },
  "request": {
    "protocol": "LDAP",
    "operation": "BIND",
    "connId": 1,
    "msgId": 1,
    "version": "3",
    "dn": "",
    "authType": "SASL mechanism=DIGEST-MD5"
  },
  "transactionId": "62ba9af7-27ed-42cb-8fd8-f06280174dfd-18",
  "response": {
    "status": "FAILED",
    "statusCode": "14",
    "elapsedTime": 1,
    "elapsedTimeUnits": "MILLISECONDS",
    "failureReason": ""
  },
  "timestamp": "2018-04-12T13:02:39.329Z",
  "_id": "62ba9af7-27ed-42cb-8fd8-f06280174dfd-20"
}
{
  "eventName": "DJ-LDAP",
  "client": {
    "ip": "127.0.0.1",
    "port": 44886
  },
  "server": {
    "ip": "127.0.1.1",
    "port": 1389
  },
  "request": {
    "protocol": "LDAP",
    "operation": "BIND",
    "connId": 1,
    "msgId": 1,
    "version": "3",
    "dn": "",
    "authType": "SASL mechanism=DIGEST-MD5"
  },
  "transactionId": "62ba9af7-27ed-42cb-8fd8-f06280174dfd-21",
  "response": {
    "status": "SUCCESSFUL",
    "statusCode": "0",
    "elapsedTime": 5,
    "elapsedTimeUnits": "MILLISECONDS"
  },
  "userId": "uid=superuser,o=clu tests,dc=example,dc=com",
  "timestamp": "2018-04-12T13:02:39.345Z",
  "_id": "62ba9af7-27ed-42cb-8fd8-f06280174dfd-23"
}



This implementation seems not really compliant with RFC-4513 which is still relying on former RFC-2829:

   The client will send a bind request with a distinct message id, in
   which the version number is 3, the authentication choice is sasl, the
   sasl mechanism name is "DIGEST-MD5", and the credentials contain the
   string defined by "digest-response" in section 2.1.2 of [4].  The
   serv-type is "ldap".

Notice the distinct word, unfortunately this recommendation does not contain a MUST, SHOULD or MAY instruction. 
Regardless, it looks like we shouldn't re-use the same message ID in our client.
With version 4.0.0, client does not use the same message ID, oldest affected version is 5.5.0.