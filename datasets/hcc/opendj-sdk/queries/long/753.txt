I've 2 environments with the same configuration, same data, same software 
versions and so on, but I meet
the following problem in only one the environment.
I want to require TLS or SSL connections to access to the retro changelog. 
Thus, I've added the following global aci:

(target="ldap:///cn=changelog")(targetattr="*||+")(version 3.0; acl 
"Changelog access" ; allow (read,search,compare)
  userdn="ldap:///cn=my_user,dc=my_domain" and ssf >= "128" 

On both environment, the TLS connections work fine, according to the OpenDJ 
access log, but on one environment,
I can't see the changelog tree when I connect as "cn=my_user,dc=my_domain". 
I've checked that I've no deny aci,
so I don't understand what could be wrong.

Here're some traces on both environments (RHEL 6.3, OpenDJ 2.5Xpress1 build 
20120918):

Working environment:

./ldapsearch -q -X -h working_host -p 1389 -q -D "cn=my_user,dc=my_domain" -w password -b "cn=changelog" -s one objectclass=top dn
dn: changeNumber=1,cn=changelog

dn: changeNumber=2,cn=changelog

dn: changeNumber=3,cn=changelog

dn: changeNumber=4,cn=changelog

[01/Feb/2013:16:49:57 +0100] CONNECT conn=694 from=..... to=..... protocol=LDAP
[01/Feb/2013:16:49:57 +0100] EXTENDED REQ conn=694 op=0 msgID=1 
name="StartTLS" oid="1.3.6.1.4.1.1466.20037"
[01/Feb/2013:16:49:57 +0100] EXTENDED RES conn=694 op=0 msgID=1 
name="StartTLS" oid="1.3.6.1.4.1.1466.20037" result=0 etime=1
[01/Feb/2013:16:49:58 +0100] BIND REQ conn=694 op=1 msgID=2 version=3 
type=SIMPLE dn="cn=my_user,dc=my_domain"
[01/Feb/2013:16:49:58 +0100] BIND RES conn=694 op=1 msgID=2 result=0 
authDN="my_user,dc=my_domain" etime=0
[01/Feb/2013:16:49:58 +0100] SEARCH REQ conn=694 op=2 msgID=3 
base="cn=changelog" scope=singleLevel filter="(objectclass=top)" attrs="dn"
[01/Feb/2013:16:49:58 +0100] SEARCH RES conn=694 op=2 msgID=3 result=0 
nentries=4 etime=4
[01/Feb/2013:16:49:58 +0100] UNBIND REQ conn=694 op=3 msgID=4
[01/Feb/2013:16:49:58 +0100] DISCONNECT conn=694 reason="Client Unbind"

Non working environment:
./ldapsearch -q -X -h non_working_host -p 1389 -q -D "cn=my_user,dc=my_domain" -w password -b "cn=changelog" -s one objectclass=top dn

(no result returned)

[01/févr./2013:16:50:26 +0100] CONNECT conn=10 from=..... to=..... 
protocol=LDAP
[01/févr./2013:16:50:26 +0100] EXTENDED REQ conn=10 op=0 msgID=1 
name="StartTLS" oid="1.3.6.1.4.1.1466.20037"
[01/févr./2013:16:50:26 +0100] EXTENDED RES conn=10 op=0 msgID=1 
name="StartTLS" oid="1.3.6.1.4.1.1466.20037" result=0 etime=1
[01/févr./2013:16:50:26 +0100] BIND REQ conn=10 op=1 msgID=2 version=3 
type=SIMPLE dn="cn=my_user,dc=my_domain"
[01/févr./2013:16:50:26 +0100] BIND RES conn=10 op=1 msgID=2 result=0 
authDN="cn=my_user,dc=my_domain" etime=1
[01/févr./2013:16:50:26 +0100] SEARCH REQ conn=10 op=2 msgID=3 
base="cn=changelog" scope=singleLevel filter="(objectclass=top)" attrs="dn"
[01/févr./2013:16:50:26 +0100] SEARCH RES conn=10 op=2 msgID=3 result=0 
nentries=0 etime=20
[01/févr./2013:16:50:26 +0100] UNBIND REQ conn=10 op=3 msgID=4
[01/févr./2013:16:50:26 +0100] DISCONNECT conn=10 reason="Dissociation du 
client"

I don't see any difference between the supported cipher suites of the JVM 
of each environment.
Here's the full output on the working environment:

trigger seeding of SecureRandom
done seeding SecureRandom
Allow unsafe renegotiation: false
Allow legacy hello messages: true
Is initial handshake: true
Is secure renegotiation: false
main, setSoTimeout(30000) called
%% No cached client session

	
	
		
		
			ClientHello, TLSv1
RandomCookie:  GMT: 1359967526 bytes = 
{ 161, 25, 196, 178, 6, 38, 92, 41, 
23, 35, 11, 111, 147, 10, 221, 165, 37, 113, 158, 129, 164, 63, 220, 86, 
114, 228, 196, 30 }
Session ID:  {}
Cipher Suites: [SSL_RSA_WITH_RC4_128_MD5, SSL_RSA_WITH_RC4_128_SHA, 
TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, 
TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, 
TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, 
SSL_RSA_WITH_3DES_EDE_CBC_SHA, SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA, 
SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA, SSL_RSA_WITH_DES_CBC_SHA, 
SSL_DHE_RSA_WITH_DES_CBC_SHA, SSL_DHE_DSS_WITH_DES_CBC_SHA, 
SSL_RSA_EXPORT_WITH_RC4_40_MD5, SSL_RSA_EXPORT_WITH_DES40_CBC_SHA, 
SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA, 
SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA, TLS_EMPTY_RENEGOTIATION_INFO_SCSV]
Compression Methods:  
{ 0 }
***
main, WRITE: TLSv1 Handshake, length = 81
main, WRITE: SSLv2 client hello message, length = 110
main, READ: TLSv1 Handshake, length = 709
*** ServerHello, TLSv1
RandomCookie:  GMT: 1359967526 bytes = { 26, 237, 225, 40, 126, 128, 12, 
206, 246, 34, 29, 77, 176, 73, 27, 233, 116, 37, 112, 188, 50, 64, 74, 154, 
61, 122, 141, 207 }
Session ID:  {81, 15, 117, 38, 107, 45, 48, 204, 12, 12, 49, 216, 68, 226, 
10, 134, 70, 82, 86, 245, 148, 20, 249, 35, 224, 39, 217, 139, 126, 115, 
82, 81}
Cipher Suite: SSL_RSA_WITH_RC4_128_MD5
Compression Method: 0
Extension renegotiation_info, renegotiated_connection: <empty>
***
%% Created:  [Session-1, SSL_RSA_WITH_RC4_128_MD5]
** SSL_RSA_WITH_RC4_128_MD5
*** Certificate chain
chain [0] = [
[
   Version: V3
   Subject: CN=good.mydomain.com, O=OpenDJ Self-Signed Certificate
   Signature Algorithm: SHA1withRSA, OID = 1.2.840.113549.1.1.5

   Key:  Sun RSA public key, 1024 bits
   modulus: 
100061200817873126705647061233252480707957263089839392948061334854411369007812641338110343092026473110626813380443354223026493452147661932089804406372552196370383874180273367367684151843736450706620329276343460828698057957913516477126785633535487339394569701936374061536658573364200074378550282807819540116023
   public exponent: 65537
   Validity: [From: Wed Sep 12 10:41:19 CEST 2012,
                To: Fri Sep 12 10:41:19 CEST 2014]
   Issuer: CN=good.mydomain.com,OpenDJ Self-Signed Certificate
   SerialNumber: [    50504aaf]

]
   Algorithm: [SHA1withRSA]
   Signature:
0000: 01 A3 02 02 FE 7E 7A AA   AC 32 89 25 ED 7C 9A A8 ......z..2.%....
0010: 17 96 C1 24 6F 1B D0 F6   76 3B 1D 35 7A F3 CE D9 ...$o...v;.5z...
0020: 66 7C ED 99 CB 8B C7 FF   33 41 4A 72 B8 AD 8B 5D f.......3AJr...]
0030: DF A8 FD 04 45 00 02 9E   C1 1A 47 F2 06 9C 40 35 ....E.....G... at 5
0040: C5 ED 8C 3A 8B 6F 75 60   58 17 65 3A 6A 37 7D D2 ...:.ou`X.e:j7..
0050: CE E3 36 78 99 99 0B F8   95 46 0E 51 82 C4 71 72 ..6x.....F.Q..qr
0060: 07 9E EC 21 8D 48 42 13   79 9F 59 A3 1D 64 5E 9E ...!.HB.y.Y..d^.
0070: F5 44 21 12 CF 15 8A 04   8A 78 67 2B FB 73 F9 F5 .D!......xg+.s..

]
***
*** CertificateRequest
Cert Types: RSA, DSS
Cert Authorities:
<CN=good.mydomain.com, O=OpenDJ Self-Signed Certificate>
*** ServerHelloDone
*** Certificate chain
***
*** ClientKeyExchange, RSA PreMasterSecret, TLSv1
main, WRITE: TLSv1 Handshake, length = 141
SESSION KEYGEN:
PreMaster Secret:
0000: 03 01 01 1B C5 B0 60 1D   A7 A8 75 80 56 CE EF 62 ......`...u.V..b
0010: DA A9 E1 4B DF 9F 67 78   9E 9A 52 A8 0C 11 80 20 ...K..gx..R....
0020: 96 2D 56 B2 6A 2E DB 3B   25 1E 00 F2 76 79 37 4D .-V.j..;%...vy7M
CONNECTION KEYGEN:
Client Nonce:
0000: 51 0F 75 26 A1 19 C4 B2   06 26 5C 29 17 23 0B 6F Q.u&.....&).#.o
0010: 93 0A DD A5 25 71 9E 81   A4 3F DC 56 72 E4 C4 1E ....%q...?.Vr...
Server Nonce:
0000: 51 0F 75 26 1A ED E1 28   7E 80 0C CE F6 22 1D 4D Q.u&...(.....".M
0010: B0 49 1B E9 74 25 70 BC   32 40 4A 9A 3D 7A 8D CF .I..t%p.2 at J.=z..
Master Secret:
0000: 2F 2F 2A E9 AD 57 E6 94   8A 2F 74 D0 02 41 BD 9B //*..W.../t..A..
0010: 76 3E 92 07 77 6D 54 34   F8 BB D9 56 A7 C4 C1 C4 v>..wmT4...V....
0020: A8 F1 92 28 8E 3D 1B 0E   7B DD 69 D8 F8 53 28 21 ...(.=....i..S(!
Client MAC write Secret:
0000: 19 C2 C3 DA 5A 8E 49 D4   7A D5 42 95 97 75 13 68 ....Z.I.z.B..u.h
Server MAC write Secret:
0000: 3A 86 96 11 6F 3B 6F CD   23 42 A6 4C 61 D7 3D ED :...o;o.#B.La.=.
Client write key:
0000: 7A FA BA 69 34 86 A6 88   54 BF 3A 7F 98 C7 18 65 z..i4...T.:....e
Server write key:
0000: 4B 73 4F 5C 34 8D F5 65   66 B4 08 2D EA 00 F6 06 KsO\4..ef..-....
... no IV used for this cipher
main, WRITE: TLSv1 Change Cipher Spec, length = 1
*** Finished
verify_data:  { 245, 70, 150, 142, 175, 43, 114, 80, 209, 53, 26, 119 }
***
main, WRITE: TLSv1 Handshake, length = 32
main, READ: TLSv1 Change Cipher Spec, length = 1
main, READ: TLSv1 Handshake, length = 32
*** Finished
verify_data:  { 108, 179, 64, 239, 118, 17, 43, 250, 22, 6, 11, 120 }
***
%% Cached client session: [Session-1, SSL_RSA_WITH_RC4_128_MD5]
main, WRITE: TLSv1 Application Data, length = 105
main, READ: TLSv1 Application Data, length = 30
main, setSoTimeout(0) called
main, WRITE: TLSv1 Application Data, length = 78
main, READ: TLSv1 Application Data, length = 39
dn: cn=changelog

main, READ: TLSv1 Application Data, length = 54
dn: changeNumber=3,cn=changelog

main, READ: TLSv1 Application Data, length = 54
dn: changeNumber=4,cn=changelog

main, READ: TLSv1 Application Data, length = 30
main, WRITE: TLSv1 Application Data, length = 23
main, called close()
main, called closeInternal(true)
main, SEND TLSv1 ALERT:  warning, description = close_notify
main, WRITE: TLSv1 Alert, length = 18
main, called close()
main, called closeInternal(true)
main, called close()
main, called closeInternal(true)
main, called close()
main, called closeInternal(true)


And now, on the non working environment:



trigger seeding of SecureRandom
done seeding SecureRandom
Allow unsafe renegotiation: false
Allow legacy hello messages: true
Is initial handshake: true
Is secure renegotiation: false
main, setSoTimeout(30000) called
%% No cached client session
*** ClientHello, TLSv1
RandomCookie:  GMT: 1359966937 bytes = { 163, 208, 98, 9, 18, 19, 59, 68, 
191, 139, 6, 8, 231, 25, 22, 12, 248, 103, 249, 25, 180, 30, 155, 204, 43, 
4, 151, 49 }
Session ID:  {}
Cipher Suites: [SSL_RSA_WITH_RC4_128_MD5, SSL_RSA_WITH_RC4_128_SHA, 
TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, 
TLS_DHE_RSA_WITH_AES_128_CBC_SHA, TLS_DHE_RSA_WITH_AES_256_CBC_SHA, 
TLS_DHE_DSS_WITH_AES_128_CBC_SHA, TLS_DHE_DSS_WITH_AES_256_CBC_SHA, 
SSL_RSA_WITH_3DES_EDE_CBC_SHA, SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA, 
SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA, SSL_RSA_WITH_DES_CBC_SHA, 
SSL_DHE_RSA_WITH_DES_CBC_SHA, SSL_DHE_DSS_WITH_DES_CBC_SHA, 
SSL_RSA_EXPORT_WITH_RC4_40_MD5, SSL_RSA_EXPORT_WITH_DES40_CBC_SHA, 
SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA, 
SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA, TLS_EMPTY_RENEGOTIATION_INFO_SCSV]
Compression Methods:  { 0 }
***
main, WRITE: TLSv1 Handshake, length = 81
main, WRITE: SSLv2 client hello message, length = 110
main, READ: TLSv1 Handshake, length = 709
			ServerHello, TLSv1
RandomCookie:  GMT: 1359967256 bytes = 
{ 84, 234, 71, 29, 151, 71, 79, 11, 
213, 168, 163, 129, 161, 246, 234, 6, 153, 224, 173, 85, 216, 102, 162, 
222, 41, 161, 249, 89 }
Session ID:  
{81, 15, 116, 24, 85, 41, 76, 88, 169, 217, 208, 25, 136, 181, 
35, 209, 175, 67, 184, 164, 17, 6, 209, 40, 98, 82, 89, 109, 157, 232, 230, 57}
Cipher Suite: SSL_RSA_WITH_RC4_128_MD5
Compression Method: 0
Extension renegotiation_info, renegotiated_connection: <empty>
***
%% Created:  [Session-1, SSL_RSA_WITH_RC4_128_MD5]
		
		
		SSL_RSA_WITH_RC4_128_MD5
		
			Certificate chain
chain [0] = [
[
   Version: V3
   Subject: CN=bad.mydomain.com, O=OpenDJ Self-Signed Certificate
   Signature Algorithm: SHA1withRSA, OID = 1.2.840.113549.1.1.5
		
		
	
	



   Key:  Sun RSA public key, 1024 bits
   modulus: 
94818916277379286679627770883681341949271356738433020755612144152613460201692898111523354180820233213146589886730656310887363964577305913044303501925695437692174981463648242753968641546560167179522058378280719308425991809728369524638735302436879771057880907231481858451343228439374541901280562293918240119219
   public exponent: 65537
   Validity: [From: Tue Jan 15 13:09:43 CET 2013,
                To: Mon Apr 15 14:09:43 CEST 2013]
   Issuer: CN=bad.mydomain.com, O=OpenDJ Self-Signed Certificate
   SerialNumber: [    50f54707]

]
   Algorithm: [SHA1withRSA]
   Signature:
0000: 0C BF 92 75 E5 59 D6 61   8E 56 41 01 93 35 3A AC ...u.Y.a.VA..5:.
0010: B7 D7 FF DA 57 82 02 5B   60 06 D0 F2 1C CC 03 BF ....W..[`.......
0020: 74 4F B1 5E 1C 75 96 00   C7 C5 F2 00 C2 E0 99 7F tO.^.u..........
0030: 39 E3 B4 99 EB 14 40 4E   4F 6E 4D 38 9B 04 F2 8C 9..... at NOnM8....
0040: 61 B5 0B B0 CF FA 8C 03   FB 1F BA 0D E6 0B B9 7C a...............
0050: 2B 06 13 BF DF 7A A1 B1   C9 3C 96 6E 93 B6 B7 85 +....z...<.n....
0060: 49 61 89 F9 80 3C 67 3F   E6 9E BC F2 16 70 FD 18 Ia...<g?.....p..
0070: FC C5 21 B2 D2 5D 3C B1   5B 03 8E 5F BD 33 28 39 ..!..]<.[.._.3(9

]
***

	
	
		
		
			CertificateRequest
Cert Types: RSA, DSS
Cert Authorities:
<CN=bad.mydomain.com, O=OpenDJ Self-Signed Certificate>
			ServerHelloDone
			Certificate chain
***
			ClientKeyExchange, RSA PreMasterSecret, TLSv1
main, WRITE: TLSv1 Handshake, length = 141
SESSION KEYGEN:
PreMaster Secret:
0000: 03 01 EA 16 D6 FC 11 A0   43 AB CD 63 15 93 87 62 ........C..c...b
0010: 76 DF F1 13 5C 25 3E 6C   18 97 8A 5B 94 8B 00 2C v...%>l...[...,
0020: C1 0B 13 B0 86 A2 23 38   D7 9D 35 EB 8E A0 0E 21 ......#8..5....!
CONNECTION KEYGEN:
Client Nonce:
0000: 51 0F 73 D9 A3 D0 62 09   12 13 3B 44 BF 8B 06 08 Q.s...b...;D....
0010: E7 19 16 0C F8 67 F9 19   B4 1E 9B CC 2B 04 97 31 .....g......+..1
Server Nonce:
0000: 51 0F 74 18 54 EA 47 1D   97 47 4F 0B D5 A8 A3 81 Q.t.T.G..GO.....
0010: A1 F6 EA 06 99 E0 AD 55   D8 66 A2 DE 29 A1 F9 59 .......U.f..)..Y
Master Secret:
0000: E3 3B CE 57 8C 20 A6 F3   14 19 51 66 8B AF 72 55  .;.W. ....Qf..rU
0010: D2 06 F0 D6 34 7F B8 87   7F 84 9E 20 9A B3 46 83  ....4...... ..F.
0020: EA 1B 80 88 2F 96 1C FD   FA E1 B7 DB AC 6C E9 8D ..../........l..
Client MAC write Secret:
0000: EC 34 AD 61 BA 05 FD B4   EF 81 9E C0 13 EF 62 75 .4.a..........bu
Server MAC write Secret:
0000: AA 98 F0 B1 15 3E E4 72   AC 99 6A 32 27 D5 32 ED .....>.r..j2'.2.
Client write key:
0000: FF 27 CC 60 54 49 A3 D7   41 84 EF B4 FD DA F7 EA .'.`TI..A.......
Server write key:
0000: 5E 2C 24 A6 0E 14 65 68   04 CB 72 A2 82 7D 45 F4 ^,$...eh..r...E.
... no IV used for this cipher
main, WRITE: TLSv1 Change Cipher Spec, length = 1
			Finished
verify_data:  
{ 234, 175, 139, 114, 1, 28, 181, 40, 45, 196, 32, 194 }
***
main, WRITE: TLSv1 Handshake, length = 32
main, READ: TLSv1 Change Cipher Spec, length = 1
main, READ: TLSv1 Handshake, length = 32
			Finished
verify_data:  
{ 67, 12, 50, 243, 116, 137, 15, 187, 19, 54, 199, 251 }
***
%% Cached client session: [Session-1, SSL_RSA_WITH_RC4_128_MD5]
main, WRITE: TLSv1 Application Data, length = 105
main, READ: TLSv1 Application Data, length = 30
main, setSoTimeout(0) called
main, WRITE: TLSv1 Application Data, length = 78
main, READ: TLSv1 Application Data, length = 30
main, WRITE: TLSv1 Application Data, length = 23
main, called close()
main, called closeInternal(true)
main, SEND TLSv1 ALERT:  warning, description = close_notify
main, WRITE: TLSv1 Alert, length = 18
main, called close()
main, called closeInternal(true)
main, called close()
main, called closeInternal(true)
main, called close()
main, called closeInternal(true)
		
		
	
	



There's nothing in the debug output (ds-cfg-debug-scope: org.opends.server.authorization, ds-cfg-debug-level:all) when running the same ldapsearch as above.