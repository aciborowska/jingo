Found using 6.0.0 final build

Scenario
1. install a proxy in front of 2 replicated servers
2. perform modrate through the proxy

=> we get the following errors in proxy errors file:

[03/May/2018:09:08:53 +0200] category=org.opends.messages.external severity=WARNING msgID=1 msg=GRIZZLY0011: Uncaught exception on thread Thread[OpenDJ LDAP SDK Client Selector(6) SelectorRunner,5,Directory Server Thread Group] exception=UndeliverableException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@5616ab75 rejected from java.util.concurrent.ThreadPoolExecutor@5e6ac69f[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0] (RxJavaPlugins.java:366 ExecutorScheduler.java:65 SingleObserveOn.java:64 SingleMap.java:64 SingleMap.java:64 ResumeSingleObserver.java:46 SingleDoFinally.java:75 TimeoutSingleOperator.java:96 SingleDoAfterSuccess.java:70 SingleFlatMap.java:111 ResumeSingleObserver.java:46 SingleJust.java:30 Single.java:3096 SingleDelayWithCompletable.java:70 CompletableConcatArray.java:85 CompletableConcatArray.java:33 Completable.java:1794 SingleDelayWithCompletable.java:36 Single.java:3096 SingleFlatMap.java:84 SingleMap.java:64 ...)



=> in the proxy server.out file:

[03/May/2018:09:02:55 +0200] category=BACKEND severity=NOTICE msgID=620 msg=Remote servers changed for the proxy backend 'proxyRoot'. The proxy was using: primary servers=[], secondary servers=[]; and it will now be using: primary servers=[comte.internal.forgerock.com:1389, comte.internal.forgerock.com:1390], secondary servers=[]
[03/May/2018:09:02:55 +0200] category=BACKEND severity=WARNING msgID=613 msg=Proxy backend 'proxyRoot' cannot failover: only primary servers have been discovered via the service discovery mechanism 'Static Servers Service Discovery Mechanism'. Primary servers are [comte.internal.forgerock.com:1389, comte.internal.forgerock.com:1390]
[03/May/2018:09:02:55 +0200] category=BACKEND severity=WARNING msgID=624 msg=Proxy backend 'proxyRoot' cannot register itself against base DN uid=Monitor because this base DN is already registered against backend 'monitorUser'
[03/May/2018:09:02:55 +0200] category=BACKEND severity=NOTICE msgID=621 msg=Proxy backend 'proxyRoot' automatically registered itself against the base DNs [o=example, uid=Monitor]. It was previously registered against the base DNs []
io.reactivex.exceptions.UndeliverableException: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@5616ab75 rejected from java.util.concurrent.ThreadPoolExecutor@5e6ac69f[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
	at io.reactivex.plugins.RxJavaPlugins.onError(RxJavaPlugins.java:366)
	at io.reactivex.internal.schedulers.ExecutorScheduler.scheduleDirect(ExecutorScheduler.java:65)
	at io.reactivex.internal.operators.single.SingleObserveOn$ObserveOnSingleObserver.onSuccess(SingleObserveOn.java:64)
	at io.reactivex.internal.operators.single.SingleMap$MapSingleObserver.onSuccess(SingleMap.java:64)
	at io.reactivex.internal.operators.single.SingleMap$MapSingleObserver.onSuccess(SingleMap.java:64)
	at io.reactivex.internal.observers.ResumeSingleObserver.onSuccess(ResumeSingleObserver.java:46)
	at io.reactivex.internal.operators.single.SingleDoFinally$DoFinallyObserver.onSuccess(SingleDoFinally.java:75)
	at org.forgerock.opendj.ldap.TimeoutSingleOperator$TimeoutSubscriber.onSuccess(TimeoutSingleOperator.java:96)
	at io.reactivex.internal.operators.single.SingleDoAfterSuccess$DoAfterObserver.onSuccess(SingleDoAfterSuccess.java:70)
	at io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback$FlatMapSingleObserver.onSuccess(SingleFlatMap.java:111)
	at io.reactivex.internal.observers.ResumeSingleObserver.onSuccess(ResumeSingleObserver.java:46)
	at io.reactivex.internal.operators.single.SingleJust.subscribeActual(SingleJust.java:30)
	at io.reactivex.Single.subscribe(Single.java:3096)
	at io.reactivex.internal.operators.single.SingleDelayWithCompletable$OtherObserver.onComplete(SingleDelayWithCompletable.java:70)
	at io.reactivex.internal.operators.completable.CompletableConcatArray$ConcatInnerObserver.next(CompletableConcatArray.java:85)
	at io.reactivex.internal.operators.completable.CompletableConcatArray.subscribeActual(CompletableConcatArray.java:33)
	at io.reactivex.Completable.subscribe(Completable.java:1794)
	at io.reactivex.internal.operators.single.SingleDelayWithCompletable.subscribeActual(SingleDelayWithCompletable.java:36)
	at io.reactivex.Single.subscribe(Single.java:3096)
	at io.reactivex.internal.operators.single.SingleFlatMap$SingleFlatMapCallback.onSuccess(SingleFlatMap.java:84)
	at io.reactivex.internal.operators.single.SingleMap$MapSingleObserver.onSuccess(SingleMap.java:64)
	at org.forgerock.opendj.grizzly.GrizzlyLdapSocketConnector$CompletionHandlerAdapter.forwardSocketIfNotDisposed(GrizzlyLdapSocketConnector.java:251)
	at org.forgerock.opendj.grizzly.GrizzlyLdapSocketConnector$CompletionHandlerAdapter.completed(GrizzlyLdapSocketConnector.java:243)
	at org.forgerock.opendj.grizzly.GrizzlyLdapSocketConnector$CompletionHandlerAdapter.completed(GrizzlyLdapSocketConnector.java:169)
	at org.glassfish.grizzly.nio.transport.TCPNIOConnectorHandler$EnableReadHandler.onComplete(TCPNIOConnectorHandler.java:348)
	at org.glassfish.grizzly.ProcessorExecutor.complete(ProcessorExecutor.java:115)
	at org.glassfish.grizzly.ProcessorExecutor.complete0(ProcessorExecutor.java:208)
	at org.glassfish.grizzly.ProcessorExecutor.execute(ProcessorExecutor.java:86)
	at org.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:539)
	at org.glassfish.grizzly.nio.transport.TCPNIOConnectorHandler.onConnectedAsync(TCPNIOConnectorHandler.java:226)
	at org.glassfish.grizzly.nio.transport.TCPNIOConnectorHandler$1.connected(TCPNIOConnectorHandler.java:158)
	at org.glassfish.grizzly.nio.transport.TCPNIOConnection.onConnect(TCPNIOConnection.java:258)
	at org.glassfish.grizzly.nio.transport.TCPNIOTransport.fireIOEvent(TCPNIOTransport.java:530)
	at org.glassfish.grizzly.strategies.AbstractIOStrategy.fireIOEvent(AbstractIOStrategy.java:112)
	at org.glassfish.grizzly.strategies.SameThreadIOStrategy.executeIoEvent(SameThreadIOStrategy.java:103)
	at org.glassfish.grizzly.strategies.AbstractIOStrategy.executeIoEvent(AbstractIOStrategy.java:89)
	at org.glassfish.grizzly.nio.SelectorRunner.iterateKeyEvents(SelectorRunner.java:415)
	at org.glassfish.grizzly.nio.SelectorRunner.iterateKeys(SelectorRunner.java:384)
	at org.glassfish.grizzly.nio.SelectorRunner.doSelect(SelectorRunner.java:348)
	at org.glassfish.grizzly.nio.SelectorRunner.run(SelectorRunner.java:279)
	at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:593)
	at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:573)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@5616ab75 rejected from java.util.concurrent.ThreadPoolExecutor@5e6ac69f[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0]
	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(ThreadPoolExecutor.java:2063)
	at java.util.concurrent.ThreadPoolExecutor.reject(ThreadPoolExecutor.java:830)
	at java.util.concurrent.ThreadPoolExecutor.execute(ThreadPoolExecutor.java:1379)
	at java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:134)
	at io.reactivex.internal.schedulers.ExecutorScheduler.scheduleDirect(ExecutorScheduler.java:56)
	... 41 more

