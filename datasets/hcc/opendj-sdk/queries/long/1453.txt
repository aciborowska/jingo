Replica offline messages (currently implemented as Change time heartbeat messages) published by DS instances keep the cn=changelog change number medium consistency point moving forward during times when the DS is idle.

However, a change time heartbeat message which is published before any pending changes which have CSNs predating the heartbeat could cause the change number ordering to become irregular:


	DS1 allocates CSN1 for a local update
	DS2 allocates CSN2 for a local update (CSN2 > CSN1), processes the update, and publishes it
	DS1 change time heartbeat allocates CSN3 (CSN3 > CSN1) and publishes it
	RS receives CSN2 and CSN3 and updates medium consistency point to CSN3
	DS1 finishes processing update CSN1 and publishes it
	RS receives change CSN1 and publishes it after change CSN2.



I think that the change time heart beat message should only be published after any older pending changes have been published. We use a similar mechanism org.opends.server.replication.plugin.PendingChanges to ensure that updates are published in-order. Perhaps we can leverage that? A change time heartbeat message is effectively an update no-op that is immediately committed.