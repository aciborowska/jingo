Found with OpenDJ 3.5.0 (RC)

We setup a server and a gateway in a tomcat.
We try to customize the config.json file with a custom search ldap factory the way we did it before 3.5.0.

so we patch the bind with the following:


                  {
                    "bind": {
                        "primaryLdapServers": [
                            {
                                "hostname": "localhost",
                                "port": 1389
                            }
                        ],
                        "heartBeatIntervalSeconds": 30,
                        "secondaryLdapServers": [],
                        "heartBeatTimeoutMilliSeconds": 500,
                        "connectionSecurity": "none",
                        "sslCertAlias": "none",
                        "connectionPoolSize": 24,
                    },
                    "mySearchConnectionFactory": {
                        "inheritFrom": "bind" ,

                        "authentication": {
                            "simple": {
                                "bindDn": "uid=rest2ldap,ou=admins,dc=com", 
                               "bindPassword": "password"
                            }
                        }
                    },
                }      



we then refer to it in the basic authentication section for the search:



"basic": {
            "altAuthenticationPasswordHeader": "X-OpenIDM-Password", 
            "sasl-plain": {
                "ldapConnectionFactory": "bind", 
                "authzIdTemplate": "u:{username}"
            }, 
            "altAuthenticationUsernameHeader": "X-OpenIDM-Username", 
            "simple": {
                "ldapConnectionFactory": "bind", 
                "bindDnTemplate": "uid={username},ou=People,dc=example,dc=com"
            }, 
            "bind": "search", 
            "search": {
               "searchLdapConnectionFactory":"mySearchConnectionFactory", 
                "scope": "sub", 
                "filterTemplate": "(&(cn={username})(objectClass=inetOrgPerson))", 
                "baseDn": "ou=Auth,dc=com", 
                "bindLdapConnectionFactory": "bind"
            }, 
            "supportAltAuthentication": true
        }



But when restarting the gateway and requesting a user, we get the following error in tomcat logs:


Jul 04, 2016 3:42:19 PM org.forgerock.http.servlet.HttpFrameworkServlet init
SEVERE: Error while starting the application.
org.forgerock.http.HttpApplicationException: Unable to start Rest2Ldap Http Application due to the configuration error: 'connectionFactory cannot be null'
	at org.forgerock.opendj.rest2ldap.Rest2LdapHttpApplication.start(Rest2LdapHttpApplication.java:209)
	at org.forgerock.http.servlet.HttpFrameworkServlet.init(HttpFrameworkServlet.java:136)
	at javax.servlet.GenericServlet.init(GenericServlet.java:158)
	at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1284)
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1197)
	at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:864)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:134)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:505)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:170)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)
	at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:957)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:423)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1079)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:620)
	at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:316)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException: connectionFactory cannot be null
	at org.forgerock.util.Reject.checkNotNull(Reject.java:90)
	at org.forgerock.opendj.rest2ldap.authz.ProxiedAuthV2Filter.<init>(ProxiedAuthV2Filter.java:78)
	at org.forgerock.opendj.rest2ldap.authz.Authorization.newProxyAuthorizationFilter(Authorization.java:128)
	at org.forgerock.opendj.rest2ldap.Rest2LdapHttpApplication.newProxyAuthzFilter(Rest2LdapHttpApplication.java:372)
	at org.forgerock.opendj.rest2ldap.Rest2LdapHttpApplication.newBasicAuthenticationFilter(Rest2LdapHttpApplication.java:429)
	at org.forgerock.opendj.rest2ldap.Rest2LdapHttpApplication.buildBasicFilter(Rest2LdapHttpApplication.java:407)
	at org.forgerock.opendj.rest2ldap.Rest2LdapHttpApplication.buildAuthorizationFilter(Rest2LdapHttpApplication.java:257)
	at org.forgerock.opendj.rest2ldap.Rest2LdapHttpApplication.start(Rest2LdapHttpApplication.java:201)
	... 20 more



what is the expected behavior and should we still be able to customize things this way?