The attached script builds a 2.6.2 server with two JE backends. Upgrading to 3.0.0 apparently migrates both backends correctly.

DbDump shows the correct database names in both backends after the upgrade, e.g.


$ java -cp lib/je.jar:lib/OpenDJ.jar com.sleepycat.je.util.DbDump -h db/internalRoot -l
/compressed_schema/compressed_attributes
/compressed_schema/compressed_object_classes
/dc=com,dc=example,ou=internal/aci.presence
/dc=com,dc=example,ou=internal/dn2id
/dc=com,dc=example,ou=internal/ds-sync-conflict.distinguishedNameMatch
/dc=com,dc=example,ou=internal/ds-sync-hist.changeSequenceNumberOrderingMatch
/dc=com,dc=example,ou=internal/entryUUID.uuidMatch
/dc=com,dc=example,ou=internal/id2childrencount
/dc=com,dc=example,ou=internal/id2entry
/dc=com,dc=example,ou=internal/objectClass.objectIdentifierMatch
/dc=com,dc=example,ou=internal/referral
/dc=com,dc=example,ou=internal/state



However the second backend's (ou=internal) id2entry is empty, as DbDump shows:


$ java -cp lib/je.jar:lib/OpenDJ.jar com.sleepycat.je.util.DbDump -h db/internalRoot -s /dc=com,dc=example,ou=internal/id2entry
VERSION=3
format=bytevalue
type=btree
dupsort=0
HEADER=END
DATA=END



When you start OpenDJ it reports 0 entries in the internalRoot backend.

NB I repeated the exact same script this morning and both backends were migrated with all their data intact, so there may be some other factor involved.