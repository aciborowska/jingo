Raised by Mark Steele on the users mailing list. This was something I did notice a while ago testing with Java 7 but forgot to file as a defect.

The error occurs when trying to enable replication between 2 servers. The same would apply if re-starting a replicated server with Java 7.

Details of the error :

[10/Jan/2012:14:45:19 -0700] category=CORE severity=FATAL_ERROR msgID=327820 msg=An uncaught exception during processing for thread Replica DS(31887) listener for domain "cn=admin data" has caused it to terminate abnormally.  The stack trace for that exception is:  java.lang.Error: Maximum permit count exceeded
  java.util.concurrent.Semaphore$Sync.tryReleaseShared(null:-1)
  java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared(null:-1)
  java.util.concurrent.Semaphore.release(null:-1)
  org.opends.server.replication.service.ReplicationBroker.connectAsDataServer(ReplicationBroker.java:955)
  org.opends.server.replication.service.ReplicationBroker.connect(ReplicationBroker.java:766)
  org.opends.server.replication.service.ReplicationBroker.reStart(ReplicationBroker.java:2129)
  org.opends.server.replication.service.ReplicationBroker.reStart(ReplicationBroker.java:2099)
  org.opends.server.replication.service.ReplicationDomain.initialize(ReplicationDomain.java:2361)
  org.opends.server.replication.service.ReplicationDomain.receive(ReplicationDomain.java:805)
  org.opends.server.replication.service.ListenerThread.run(ListenerThread.java:97)

[10/Jan/2012:14:45:19 -0700] category=CORE severity=NOTICE msgID=458891 msg=The Directory Server has sent an alert notification generated by class org.opends.server.api.DirectoryThread (alert type org.opends.server.UncaughtException, alert ID 327820):  An uncaught exception during processing for thread Replica DS(31887) listener for domain "cn=admin data" has caused it to terminate abnormally.  The stack trace for that exception is:  java.lang.Error: Maximum permit count exceeded
  java.util.concurrent.Semaphore$Sync.tryReleaseShared(null:-1)
  java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared(null:-1)
  java.util.concurrent.Semaphore.release(null:-1)
  org.opends.server.replication.service.ReplicationBroker.connectAsDataServer(ReplicationBroker.java:955)
  org.opends.server.replication.service.ReplicationBroker.connect(ReplicationBroker.java:766)
  org.opends.server.replication.service.ReplicationBroker.reStart(ReplicationBroker.java:2129)
  org.opends.server.replication.service.ReplicationBroker.reStart(ReplicationBroker.java:2099)
  org.opends.server.replication.service.ReplicationDomain.initialize(ReplicationDomain.java:2361)
  org.opends.server.replication.service.ReplicationDomain.receive(ReplicationDomain.java:805)
  org.opends.server.replication.service.ListenerThread.run(ListenerThread.java:97)

[10/Jan/2012:14:45:19 -0700] category=SYNC severity=SEVERE_WARNING msgID=14811272 msg=Replication server RS(5383) not sending update 00000134c90c5b826b0a00000001 for domain "cn=admin data" to directory server DS(31887) at host1/198.18.0.1:32878 because its generation ID 150314 is different to the local generation ID 150209

The first thing I see is this exception, so I looked at the code and found:

                // Log a message to let the administrator know that the failure
                // was resolved.
                // Wakeup all the thread that were waiting on the window
                // on the previous connection.
                connectionError = false;
                if (sendWindow != null)
                {
                    sendWindow.release(Integer.MAX_VALUE);
                }
                sendWindow = new Semaphore(maxSendWindow);
                rcvWindow = maxRcvWindow;
                connected = true;

So, it would appear that releasing Integer.MAX_VALUE permits with Java 1.7 is a bad thing. I'm guessing that either Java 1.7 isn't supported and isn't going to be supported, or there is a configuration setting that I've overlooked that will handle this situation.

This problem doesn't show up with Java 1.6 on the same machine, the only difference then is Java 1.7 to exercise the exception.