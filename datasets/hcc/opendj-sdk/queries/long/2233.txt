Looking at heap dumps during a modify load on replicated servers shows the following instance numbres quite often, once the changelog files cover more than the purge delay and the change number indexer thread lags behind:



1202325 instances of class java.util.HashMap$Node
840980 instances of class java.util.LinkedList$Node
278091 instances of class java.util.LinkedList
191431 instances of class java.util.AbstractMap$SimpleImmutableEntry
172249 instances of class java.io.EOFException
122923 instances of class java.util.TreeMap$Entry
76560 instances of class java.util.HashMap$EntryIterator
62341 instances of class [Ljava.util.HashMap$Node;
61762 instances of class java.util.LinkedHashMap$Entry


As mentioned in OPENDJ-2182 there are a lot of EOF exceptions.

there are an awful lot of EOFExceptions being generated. We witnessed over 1M in just a few seconds. These are being generated in org.opends.server.replication.server.changelog.file.BlockLogReader.readNextRecord(BlockLogReader.java:326) when the method attempts to read the next record length, but is already at the end of the file. It is obviously inefficient to rely on exceptions for control flow
It can be observed with two replicated servers, purge delay at 8 hours and modify load for about 14 hours, not necessarily at max speed, 3K mods/sec are enough.