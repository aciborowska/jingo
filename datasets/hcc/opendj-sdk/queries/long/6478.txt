While starting an RS/DS can get stuck during initialization, with no obvious error logged.
The interesting stack dump is:


# jstack 90489
2019-07-23 15:43:28
Full thread dump Java HotSpot(TM) 64-Bit Server VM (25.192-b12 mixed mode):

"Replication server RS(dj1) reading from Replica DS(dj1) for domain "dc=example,dc=com" at /127.0.0.1:59452" #68 prio=5 os_prio=31 tid=0x00007fbef581d800 nid=0xa803 in Object.wait() [0x0000700003d4a000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x0000000785646e48> (a java.util.concurrent.atomic.AtomicReference)
	at java.lang.Object.wait(Object.java:502)
	at org.opends.server.replication.plugin.MultimasterReplication.waitForStartup(MultimasterReplication.java:890)
	- locked <0x0000000785646e48> (a java.util.concurrent.atomic.AtomicReference)
	at org.opends.server.replication.plugin.MultimasterReplication.isECLEnabledDomain(MultimasterReplication.java:863)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer$$Lambda$316/1481853275.test(Unknown Source)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer$ReplicaNewestUpdates.notifyUpdateMsg(ChangeNumberIndexer.java:217)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer$ReplicaNewestUpdates.access$1000(ChangeNumberIndexer.java:111)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer.notifyUpdateMsg(ChangeNumberIndexer.java:517)
	at org.opends.server.replication.server.changelog.file.FileChangelogDB.publishUpdateMsg(FileChangelogDB.java:635)
	at org.opends.server.replication.server.ReplicationServerDomain.put(ReplicationServerDomain.java:343)
	at org.opends.server.replication.server.PeerServer.put(PeerServer.java:868)
	at org.opends.server.replication.server.PeerReplica.put(PeerReplica.java:67)
	at org.opends.server.replication.server.PeerServerReader.run(PeerServerReader.java:86)

"Replication server RS(dj1) reading from Replica DS(dj1) for domain "cn=admin data" at /127.0.0.1:59449" #59 prio=5 os_prio=31 tid=0x00007fbef300a000 nid=0xa003 in Object.wait() [0x000070000393e000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x0000000785646e48> (a java.util.concurrent.atomic.AtomicReference)
	at java.lang.Object.wait(Object.java:502)
	at org.opends.server.replication.plugin.MultimasterReplication.waitForStartup(MultimasterReplication.java:890)
	- locked <0x0000000785646e48> (a java.util.concurrent.atomic.AtomicReference)
	at org.opends.server.replication.plugin.MultimasterReplication.isECLEnabledDomain(MultimasterReplication.java:863)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer$$Lambda$316/1481853275.test(Unknown Source)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer$ReplicaNewestUpdates.notifyUpdateMsg(ChangeNumberIndexer.java:217)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer$ReplicaNewestUpdates.access$1000(ChangeNumberIndexer.java:111)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer.notifyUpdateMsg(ChangeNumberIndexer.java:517)
	at org.opends.server.replication.server.changelog.file.FileChangelogDB.publishUpdateMsg(FileChangelogDB.java:635)
	at org.opends.server.replication.server.ReplicationServerDomain.put(ReplicationServerDomain.java:343)
	at org.opends.server.replication.server.PeerServer.put(PeerServer.java:868)
	at org.opends.server.replication.server.PeerReplica.put(PeerReplica.java:67)
	at org.opends.server.replication.server.PeerServerReader.run(PeerServerReader.java:86)

"Replication server RS(dj1) reading from Replica DS(dj1) for domain "cn=schema" at /127.0.0.1:59447" #50 prio=5 os_prio=31 tid=0x00007fbef6857800 nid=0x9803 in Object.wait() [0x0000700003532000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x0000000785646e48> (a java.util.concurrent.atomic.AtomicReference)
	at java.lang.Object.wait(Object.java:502)
	at org.opends.server.replication.plugin.MultimasterReplication.waitForStartup(MultimasterReplication.java:890)
	- locked <0x0000000785646e48> (a java.util.concurrent.atomic.AtomicReference)
	at org.opends.server.replication.plugin.MultimasterReplication.isECLEnabledDomain(MultimasterReplication.java:863)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer$$Lambda$316/1481853275.test(Unknown Source)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer$ReplicaNewestUpdates.notifyUpdateMsg(ChangeNumberIndexer.java:217)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer$ReplicaNewestUpdates.access$1000(ChangeNumberIndexer.java:111)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer.notifyUpdateMsg(ChangeNumberIndexer.java:517)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer.notifyHeartbeat(ChangeNumberIndexer.java:505)
	at org.opends.server.replication.server.changelog.file.FileChangelogDB.replicaHeartbeat(FileChangelogDB.java:655)
	at org.opends.server.replication.server.ReplicationServerDomain.processChangeTimeHeartbeatMsg(ReplicationServerDomain.java:1403)
	at org.opends.server.replication.server.PeerServer.process(PeerServer.java:686)
	at org.opends.server.replication.server.PeerServerReader.run(PeerServerReader.java:116)

"Change number indexer" #37 prio=5 os_prio=31 tid=0x00007fbef607a000 nid=0x8603 in Object.wait() [0x0000700002c17000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	- waiting on <0x0000000785646e48> (a java.util.concurrent.atomic.AtomicReference)
	at java.lang.Object.wait(Object.java:502)
	at org.opends.server.replication.plugin.MultimasterReplication.waitForStartup(MultimasterReplication.java:890)
	- locked <0x0000000785646e48> (a java.util.concurrent.atomic.AtomicReference)
	at org.opends.server.replication.plugin.MultimasterReplication.isECLEnabledDomain(MultimasterReplication.java:863)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer$$Lambda$316/1481853275.test(Unknown Source)
	at org.opends.server.replication.server.changelog.file.ECLMultiDomainDBCursor.next(ECLMultiDomainDBCursor.java:57)
	at org.opends.server.backends.ChangelogBackend.updateCookieToMediumConsistencyPoint(ChangelogBackend.java:916)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer.initializeEclCookie(ChangeNumberIndexer.java:543)
	at org.opends.server.replication.server.changelog.file.ChangeNumberIndexer.run(ChangeNumberIndexer.java:578)

"main" #1 prio=5 os_prio=31 tid=0x00007fbef1002800 nid=0x1703 in Object.wait() [0x0000700000219000]
   java.lang.Thread.State: WAITING (on object monitor)
	at java.lang.Object.wait(Native Method)
	at java.lang.Thread.join(Thread.java:1252)
	- locked <0x0000000785739698> (a org.opends.server.replication.server.changelog.file.ChangeNumberIndexer)
	at java.lang.Thread.join(Thread.java:1326)
	at org.opends.server.replication.server.changelog.file.FileChangelogDB.shutdownCNIndexerAndPurger(FileChangelogDB.java:314)
	at org.opends.server.replication.server.changelog.file.FileChangelogDB.shutdownDB(FileChangelogDB.java:280)
	at org.opends.server.replication.server.ReplicationServer.shutdown(ReplicationServer.java:824)
	at org.opends.server.replication.plugin.ReplicationServerListener.shutdown(ReplicationServerListener.java:100)
	at org.opends.server.replication.plugin.MultimasterReplication.finalizeSynchronizationProvider(MultimasterReplication.java:626)
	at org.opends.server.core.SynchronizationProviderConfigManager.initSynchronizationProvider(SynchronizationProviderConfigManager.java:160)
	at org.opends.server.core.SynchronizationProviderConfigManager.initAndRegister(SynchronizationProviderConfigManager.java:141)
	at org.opends.server.core.SynchronizationProviderConfigManager.initializeSynchronizationProviders(SynchronizationProviderConfigManager.java:83)
	at org.opends.server.core.DirectoryServer.startServer(DirectoryServer.java:1494)
	- locked <0x00000006c0d71c30> (a org.opends.server.core.DirectoryServer)
	at org.opends.server.core.DirectoryServer.main(DirectoryServer.java:4041)


initSynchronizationProvider got an exception, most likely, and called finalize, which tries to undo all work. A lot of threads are already started but are waiting for replication state to be STARTED which will never happen because initialization never completed...