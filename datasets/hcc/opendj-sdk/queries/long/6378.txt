New schema is added (either using ldapmodify "live", or by stopping the server, updating 99-user.ldif and restarting). The schema defines a new attribute and a new objectclass with camelCased names.

The observation is that when you create a new entry using the new schema, but specifying the attribute name in a different case, the entry is returned with the attribute name in the different case. However restarting the server will result in the entry being returned in the schema-defined camelCase.

Steps to reproduce

Add schema definitions using ldapmodify:

dn: cn=schema
changetype: modify
add: attributeTypes
attributeTypes: ( 3.1.4.1.5.1.2 NAME 'myTestAttr3' EQUALITY caseIgnoreMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 SINGLE-VALUE )
-
add: objectClasses
objectClasses: ( 2.7.1.8.2.8.1.2 NAME 'myTestObject3' SUP top STRUCTURAL MUST cn MAY myTestAttr3 )
-



Add a new entry using the new schema, but with the new attribute name in UPPER CASE.

dn: cn=test3,dc=example,dc=com
changetype: add
objectClass: myTestObject3
cn: test3
MYTESTATTR3: TEST


Now the entry is read back (ldapsearch requesting the "*" attributes)

dn: cn=test3,dc=example,dc=com
objectClass: myTestObject3
objectClass: top
cn: test3
MYTESTATTR3: TEST


Restart the server and re-read the entry (ldapsearch requesting the "*" attributes):

dn: cn=test3,dc=example,dc=com
objectClass: myTestObject3
objectClass: top
cn: test3
myTestAttr3: TEST


In the bad case (no restart) I can see the CompressedSchema.adDecodeMap contains an AttributeDescription key of "MYTESTATTR3", with a value being an AttributeType containing the camelCased attribute name.

Is the map supposed to contain keys with a consistent case to the value's attribute name?