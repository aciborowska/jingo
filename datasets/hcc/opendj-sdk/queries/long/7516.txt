If dsreplication initialize is in progress, the external cn=changelog is not updated in a timely fashion to reflect any updates that have been successfully processed while initialization is still on-going.

Simple test case to reproduce...

	Setup replication between 2 DS+RS instances (ds1 and ds2). In order to reproduce the behavior, test with enough entries in the backend (e.g. 2 million) so that dsreplication initializaion takes at least a couple of minutes to complete.
	Introduce a 3rd DS+RS instance (ds3) into the replication topology. Execute dsreplication initialize specifying ds2 as the source and ds3 as the target/destination.
	While dsreplication initialize is in progress, send some updates to ds1. Observe that updates are immediately processed and correctly reflected on ds1. However, the same updates are not created as entries in the external cn=changelog as long as initialization from ds2 to ds3 is still in progress. When initialization from ds2 to ds3 is completed, cn=changelog on ds1 is updated to correctly reflect those updates that were made while initialization was in progress.



The expectation is that the external cn=changelog should be kept up to date while dsreplication initialize is in progress between 2 other replica instances.

Behavior has also been reproduced in version 3.5.3 since customer who reported the issue is using this older version of DJ/DS. Customer has a different replication topology, but the observed behavior is still the same.

	We have a set of Blue servers...2 DS/RS servers, rc-member-1 and rc-member-2, and 2 DS servers, ds-member-1 and ds-member-2.
	We are doing B/G deployment with new Green servers...2 DS/RS servers, g-rc-member-1 and g-rc-member-2, and 2 DS servers, g-ds-member-1 and g-ds-member-2.
	The green servers are initialized with data from ds-member-2 blue server one at a time while ds-member-1 blue server takes the live traffic.
	Updates made to ds-member-1 blue server are successful, but not reflected in external changelog in a timely fashion. This affects IDM since it delays synchronization of changes and causes SLA time (15 seconds) to be exceeded.


Returning back to test case, tested working around the issue by running online export-ldif and backup on ds2. While export-ldif or backup is running on ds2, updates made to ds1 are immediately reflected in the external cn=changelog. The exported LDIF or binary backup from ds2 can then used to initialize ds3.