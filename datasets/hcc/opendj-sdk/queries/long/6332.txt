Mark Craig reports that doc tests are failing when querying the HTTPS REST endpoints:



# curl: (60) Improperly formatted time string.
# More details here: http://curl.haxx.se/docs/sslcerts.html
# 
# curl performs SSL certificate verification by default, using a "bundle"
#  of Certificate Authority (CA) public keys (CA certs). If the default
#  bundle file isn't adequate, you can specify an alternate file
#  using the --cacert option.
# If this HTTPS server uses a certificate signed by a CA represented in
#  the bundle, the certificate verification probably failed due to a
#  problem with the certificate (it might be expired, or the name might
#  not match the domain name in the URL).
# If you'd like to turn off curl's verification of the certificate, use



CentOS uses NSS for security instead of OpenSSL. NSS seems to be more sensitive to certificate encoding and does not tolerate the fractional valid from/to time stamps. Indeed, neither does tools like dumpasn1 (I've highlighted the interesting bits in red):



$ dumpasn1 -dv cert.der 
    <30 82 01 B9>
  0 441: SEQUENCE {
    <30 82 01 5E>
  4 350: . SEQUENCE {
    <A0 03>
  8   3: . . [0] {
    <02 01>
 10   1: . . . INTEGER 2
       : . . . }
    <02 0A>
 13  10: . . INTEGER 1B C0 8F 9D E1 38 40 73 19 49                      .I
    <30 0A>
 25  10: . . SEQUENCE {
    <06 08>
 27   8: . . . OBJECT IDENTIFIER ecdsaWithSHA256 (1 2 840 10045 4 3 2)
       : . . . . (ANSI X9.62 ECDSA algorithm with SHA256)
       : . . . }
    <30 49>
 37  73: . . SEQUENCE {
    <31 13>
 39  19: . . . SET {
    <30 11>
 41  17: . . . . SEQUENCE {
    <06 0A>
 43  10: . . . . . OBJECT IDENTIFIER
       : . . . . . . domainComponent (0 9 2342 19200300 100 1 25)
       : . . . . . . (Men are from Mars, this OID is from Pluto)
    <13 03>
 55   3: . . . . . PrintableString 'com'
       : . . . . . }
       : . . . . }
    <31 19>
 60  25: . . . SET {
    <30 17>
 62  23: . . . . SEQUENCE {
    <06 0A>
 64  10: . . . . . OBJECT IDENTIFIER
       : . . . . . . domainComponent (0 9 2342 19200300 100 1 25)
       : . . . . . . (Men are from Mars, this OID is from Pluto)
    <13 09>
 76   9: . . . . . PrintableString 'ForgeRock'
       : . . . . . }
       : . . . . }
    <31 17>
 87  23: . . . SET {
    <30 15>
 89  21: . . . . SEQUENCE {
    <06 03>
 91   3: . . . . . OBJECT IDENTIFIER commonName (2 5 4 3)
       : . . . . . . (X.520 DN component)
    <13 0E>
 96  14: . . . . . PrintableString 'Deployment key'
       : . . . . . }
       : . . . . }
       : . . . }
    <30 2A>
112  42: . . SEQUENCE {
    <18 13>
114  19: . . . GeneralizedTime '20190601111219.364Z'
       : . . . . Error: Time is encoded incorrectly.
    <18 13>
135  19: . . . GeneralizedTime '20200531111219.364Z'
       : . . . . Error: Time is encoded incorrectly.
       : . . . }
    <30 21>
156  33: . . SEQUENCE {
    <31 12>
158  18: . . . SET {
    <30 10>
160  16: . . . . SEQUENCE {
    <06 03>
162   3: . . . . . OBJECT IDENTIFIER organizationName (2 5 4 10)
       : . . . . . . (X.520 DN component)
    <13 09>
167   9: . . . . . PrintableString 'Forgerock'
       : . . . . . }
       : . . . . }
    <31 0B>
178  11: . . . SET {
    <30 09>
180   9: . . . . SEQUENCE {
    <06 03>
182   3: . . . . . OBJECT IDENTIFIER commonName (2 5 4 3)
       : . . . . . . (X.520 DN component)
    <13 02>
187   2: . . . . . PrintableString 'DS'
       : . . . . . }
       : . . . . }
       : . . . }
    <30 59>
191  89: . . SEQUENCE {
    <30 13>
193  19: . . . SEQUENCE {
    <06 07>
195   7: . . . . OBJECT IDENTIFIER ecPublicKey (1 2 840 10045 2 1)
       : . . . . . (ANSI X9.62 public key type)
    <06 08>
204   8: . . . . OBJECT IDENTIFIER prime256v1 (1 2 840 10045 3 1 7)
       : . . . . . (ANSI X9.62 named elliptic curve)
       : . . . . }
    <03 42>
214  66: . . . BIT STRING    
       : . . . . 04 E4 BF 36 3E 5D 14 E6    ...6>]..
       : . . . . AA BD 9F 0F B3 88 CF 0B    ........
       : . . . . 71 26 22 84 E8 79 46 C5    q&"..yF.
       : . . . . A9 9A 70 DE 37 D1 E3 B4    ..p.7...
       : . . . . D2 62 BF 4C AA CA 82 AD    .b.L....
       : . . . . 49 52 CF BC 1D 8E 5A C3    IR....Z.
       : . . . . DF F4 B8 14 59 B7 19 9F    ....Y...
       : . . . . B0 F2 8C A9 95 A3 28 4D    ......(M
       : . . . . 18                         .
       : . . . }
    <A3 4A>
282  74: . . [3] {
    <30 48>
284  72: . . . SEQUENCE {
    <30 0E>
286  14: . . . . SEQUENCE {
    <06 03>
288   3: . . . . . OBJECT IDENTIFIER keyUsage (2 5 29 15)
       : . . . . . . (X.509 extension)
    <01 01>
293   1: . . . . . BOOLEAN TRUE
    <04 04>
296   4: . . . . . OCTET STRING, encapsulates {
    <03 02>
298   2: . . . . . . BIT STRING 5 unused bits
       : . . . . . . . '101'B
       : . . . . . . }
       : . . . . . }
    <30 20>
302  32: . . . . SEQUENCE {
    <06 03>
304   3: . . . . . OBJECT IDENTIFIER extKeyUsage (2 5 29 37)
       : . . . . . . (X.509 extension)
    <01 01>
309   1: . . . . . BOOLEAN TRUE
    <04 16>
312  22: . . . . . OCTET STRING, encapsulates {
    <30 14>
314  20: . . . . . . SEQUENCE {
    <06 08>
316   8: . . . . . . . OBJECT IDENTIFIER serverAuth (1 3 6 1 5 5 7 3 1)
       : . . . . . . . . (PKIX key purpose)
    <06 08>
326   8: . . . . . . . OBJECT IDENTIFIER clientAuth (1 3 6 1 5 5 7 3 2)
       : . . . . . . . . (PKIX key purpose)
       : . . . . . . . }
       : . . . . . . }
       : . . . . . }
    <30 14>
336  20: . . . . SEQUENCE {
    <06 03>
338   3: . . . . . OBJECT IDENTIFIER subjectAltName (2 5 29 17)
       : . . . . . . (X.509 extension)
    <04 0D>
343  13: . . . . . OCTET STRING, encapsulates {
    <30 0B>
345  11: . . . . . . SEQUENCE {
    <82 09>
347   9: . . . . . . . [2] 'localhost'
       : . . . . . . . }
       : . . . . . . }
       : . . . . . }
       : . . . . }
       : . . . }
       : . . }
    <30 0A>
358  10: . SEQUENCE {
    <06 08>
360   8: . . OBJECT IDENTIFIER ecdsaWithSHA256 (1 2 840 10045 4 3 2)
       : . . . (ANSI X9.62 ECDSA algorithm with SHA256)
       : . . }
    <03 49>
370  73: . BIT STRING, encapsulates {
    <30 46>
373  70: . . SEQUENCE {
    <02 21>
375  33: . . . INTEGER    
       : . . . . 00 C8 25 6A 6B 93 63 EE    ..%jk.c.
       : . . . . DE B1 4A 42 BE 86 00 34    ..JB...4
       : . . . . 6D 8B 39 D9 15 6E C9 A8    m.9..n..
       : . . . . D1 8B 68 F0 8E 4D 22 45    ..h..M"E
       : . . . . A3                         .
    <02 21>
410  33: . . . INTEGER    
       : . . . . 00 F4 75 17 6D BB 6E 67    ..u.m.ng
       : . . . . 15 9D D7 0F 87 F5 13 1B    ........
       : . . . . FC 4B 77 08 E3 7C BE 33    .Kw..|.3
       : . . . . B2 D0 BB F6 FA BF FF EC    ........
       : . . . . 64                         d
       : . . . }
       : . . }
       : . }

0 warnings, 2 errors.



I have no idea what the "men are from mars, this OID is from Pluto" means exactly! 

Anyway, the latest version of X680 does allow for fractional seconds in the generalized time syntax. However, I'm not sure it was always the case and cert encoding is based on old versions of X.680 IIRC. Regardless, there's no need for this level of precision, so the simplest fix is to drop the fractional part when encoding generalized time.