Step to reproduce:
1. Setup a DJ instance with a CREST monitoring endpoint enabled 
2. Perform such kind of query:

GET http://localhost:31080/metrics/api?_queryFilter=_id eq "start-time"




{
  "result": [
    {
      "_id": "start-time",
      "value": 1522333323.793,
      "_type": "gauge"
    }
  ],
  "resultCount": 1,
  "pagedResultsCookie": null,
  "totalPagedResultsPolicy": "EXACT",
  "totalPagedResults": 1,
  "remainingPagedResults": -1
}



If replication is enabled:

GET http://HOST:PORT/metrics/api?_queryFilter=_id co "approximate"




{
  "result": [
    {
      "_id": "replication.changelog.cn=schema.connected-replicas.24795.approximate-delay",
      "value": 0,
      "_type": "gauge"
    },
    {
      "_id": "replication.changelog.cn=admin-data.connected-replicas.22847.approximate-delay",
      "value": 0,
      "_type": "gauge"
    },
    {
      "_id": "replication.changelog.dc=example,dc=com.connected-replicas.20994.approximate-delay",
      "value": 55.547,
      "_type": "gauge"
    }
  ],
  "resultCount": 3,
  "pagedResultsCookie": null,
  "totalPagedResultsPolicy": "EXACT",
  "totalPagedResults": 3,
  "remainingPagedResults": -1
}



Values are displayed in seconds since OPENDJ-4936 as it is a best Prometheus practice.
Values should be displayed in milliseconds on the CREST endpoint though, this issue should be solve when CMON-102 will be resolved since we will have to create some TimeGauge in the MeterRegistryHolder.