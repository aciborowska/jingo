Following the fix for OPENDJ-3932, when the server is built with SNMP support, projects that depend on the server also have a system dependency on OpenDMK.

For example:


[INFO] --- maven-dependency-plugin:2.10:tree (default-cli) @ opendj-docs ---
[INFO] org.forgerock.opendj:opendj-docs:pom:4.1.0-SNAPSHOT
[INFO] +- org.forgerock.commons:forgerock-rest-docbook:jar:22.0.0-alpha-26:provided
[INFO] \- org.forgerock.opendj:opendj-embedded-server-examples:jar:4.1.0-SNAPSHOT:compile
[INFO]    \- org.forgerock.opendj:opendj-server-legacy:jar:4.1.0-SNAPSHOT:compile
...
[INFO]       +- opendmk:jdmkrt:jar:1.0:system
[INFO]       \- opendmk:jdmktk:jar:1.0:system



As a result, either you install the system dependency at the location specified, or builds fail:


[ERROR] Failed to execute goal on project opendj-docs: Could not resolve dependencies for project org.forgerock.opendj:opendj-docs:pom:4.1.0-SNAPSHOT: The following artifacts could not be resolved: opendmk:jdmkrt:jar:1.0, opendmk:jdmktk:jar:1.0: Could not find artifact opendmk:jdmkrt:jar:1.0 at specified path /root/build_deps/opendmk/lib/jdmkrt.jar -> [Help 1]

This was not the case before.

It is also not the case if I revert the patches to opendj-server-legacy/pom.xml for OPENDJ-3932, build with SNMP support, move the folder with OpenDMK libraries so that it is not in the expected location, and then try the same opendj-docs goals that fail with builds off master.

In fact, commenting out use of the shade plugin alone is enough to make the dependency go away:


$ git diff
diff --git a/opendj-server-legacy/pom.xml b/opendj-server-legacy/pom.xml
index deae574161..ca0edc9c1a 100644
--- a/opendj-server-legacy/pom.xml
+++ b/opendj-server-legacy/pom.xml
@@ -700,6 +700,7 @@ org/forgerock/opendj/setup/model/Security.java,
         </executions>
       </plugin>
 
+<!--
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-shade-plugin</artifactId>
@@ -721,6 +722,7 @@ org/forgerock/opendj/setup/model/Security.java,
           </execution>
         </executions>
       </plugin>
+-->
 
       <plugin>
         <artifactId>maven-jar-plugin</artifactId>

