There are certain circumstances where the paths planned are no optimal.  Here's a screenshot with an example:

![screenshot-4](https://cloud.githubusercontent.com/assets/13815237/16751306/ee2403a4-479d-11e6-8a34-c825eb4dd5c6.png)

The cause of this issue is in how ties are arbitrated in the A\* heuristic.  Right now, if two paths are tie, then the tie is arbitrated by picking the path with the _most_ hexes moved.  I think the idea is that, if two paths have equal cost, choose the one with the most hexes moved, in hopes of achieving a higher target movement modifier.  However, as is seen in the above screenshot, this can lead to non-optimal paths.  Essentially the problem can be seen in these examples from testing output I created:

```
Path L F (7) vs Path L L (7): first
...
Path L F L (7) vs Path L L (7): first
...
Path L F L (7) vs Path L L (7): first
```

The selected non-optimal path consistently ties with the optimal path, put the non-optimal path is chosen because it moves more hexes than the optimal path.
