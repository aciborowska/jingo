In some cases, we use code like the following:

```
for (int dist = 1; dist < maxDist; dist++) {
    for (int dir = 0; dir < 6; dir++) {
        Coords c = position.translated(dir, dist);
        ....
    }
}
```

This looks correct, but it's not.  It works for "adjacent" hexes (dist = 1), but it doesn't work further out than that.  At the first "ring" there will be 6 hexes, but at the second "ring" there will be 12 hexes,  24, and so on.  Ultimately, this leads to the "start" pattern witnessed in #434:

![image](https://cloud.githubusercontent.com/assets/19868605/21044109/437a004c-bdc8-11e6-8931-3bee1cdb49d2.png)

There are at least three spots I'm immediately aware of where this is an issue:

Server.doExplosion, at line 23060
Server.getAPDSProtectedCoords, at line 13320
Compute.coordsAtRange, at line 5072

It's possible that there are more cases of this as well.  