Tables that are registered (implicitly or explicitly) do not pass the first three optimization steps:


	decorrelate
	convert time indicators
	normalize the logical plan



E.g. this has the wrong plan right now:


val table = stream.toTable(tEnv, 'rowtime.rowtime, 'int, 'double, 'float, 'bigdec, 'string)

val table1 = tEnv.sql(s"""SELECT 1 + 1 FROM $table""") // not optimized
val table2 = tEnv.sql(s"""SELECT myrt FROM $table1""")

val results = table2.toAppendStream[Row]

