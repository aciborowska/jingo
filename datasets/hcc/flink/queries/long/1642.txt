The YARNSessionCapacitySchedulerITCase spuriously fails on Travis. The error is


Tests run: 2, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 13.058 sec <<< FAILURE! - in org.apache.flink.yarn.YARNSessionCapacitySchedulerITCase
testClientStartup(org.apache.flink.yarn.YARNSessionCapacitySchedulerITCase)  Time elapsed: 6.669 sec  <<< FAILURE!
java.lang.AssertionError: Runner thread died before the test was finished. Return value = 1
	at org.junit.Assert.fail(Assert.java:88)
	at org.apache.flink.yarn.YarnTestBase.runWithArgs(YarnTestBase.java:311)
	at org.apache.flink.yarn.YARNSessionCapacitySchedulerITCase.testClientStartup(YARNSessionCapacitySchedulerITCase.java:53)

testNonexistingQueue(org.apache.flink.yarn.YARNSessionCapacitySchedulerITCase)  Time elapsed: 0.504 sec  <<< FAILURE!
java.lang.AssertionError: There is at least one application on the cluster is not finished
	at org.junit.Assert.fail(Assert.java:88)
	at org.apache.flink.yarn.YarnTestBase.checkClusterEmpty(YarnTestBase.java:147)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)



The test results are


YARNSessionCapacitySchedulerITCase.testClientStartup:53->YarnTestBase.runWithArgs:311 Runner thread died before the test was finished. Return value = 1
  YARNSessionCapacitySchedulerITCase>YarnTestBase.checkClusterEmpty:147 There is at least one application on the cluster is not finished

