Currently, once all inputs of a StatusWatermarkValve becomes idle, we only emit the StreamStatus.IDLE marker, and check nothing else. This makes the watermark advancement behavior inconsistent in the case that all inputs become idle, depending on the order that they become idle.

Consider the following setup:


Channel #1: Watermark 10, ACTIVE
Channel #2: Watermark 5, ACTIVE
Channel #3: Watermark 5, ACTIVE



If the channels become IDLE with the order #2 -> #3 -> #1, watermark 10 will be emitted as the new min watermark once both #2 and #3 becomes idle.
On the other hand, if the order is #1 -> #2 -> #3, watermark 10 will not be emitted.