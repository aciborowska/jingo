Flink hangs up for an iterative algorithm for which Stratosphere 0.5 was working. 

For the code please check out the following repo:
https://github.com/mbalassi/als-comparison

The stacktrace includes the following on Brokers:
"Join(Sends the rows of p with multiple keys)) (1/1)" daemon prio=10 tid=0x00007f8928014800 nid=0x998 waiting on condition [0x00007f8912eed000]
   java.lang.Thread.State: WAITING (parking)
        at sun.misc.Unsafe.park(Native Method)

	parking to wait for  <0x00000007d2668ea0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:186)
        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2043)
        at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:374)
        at org.apache.flink.runtime.iterative.concurrent.Broker.get(Broker.java:63)
        at org.apache.flink.runtime.iterative.task.IterationIntermediatePactTask.run(IterationIntermediatePactTask.java:84)
        at org.apache.flink.runtime.operators.RegularPactTask.invoke(RegularPactTask.java:375)
        at org.apache.flink.runtime.execution.RuntimeEnvironment.run(RuntimeEnvironment.java:265)
        at java.lang.Thread.run(Thread.java:744)



This part waits for the iteration head which has not been started yet and thus induces a deadlock.