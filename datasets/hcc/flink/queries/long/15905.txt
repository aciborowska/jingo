There is a race condition around releasing an OpaqueMemoryResource obtained via MemoryManager.getSharedMemoryResourceForManagedMemory.



final boolean allDisposed = sharedResources.release(type, leaseHolder);
if (allDisposed) {
	releaseMemory(type, MemoryType.OFF_HEAP, size);
}



If another allocation occurs while the releasing thread is between the "sharedResources.release"and the "if block", then there is no resource to pick up any more and memory has not yet been returned to the memory bookkeeping.