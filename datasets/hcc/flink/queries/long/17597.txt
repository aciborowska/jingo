It failed with the following log:


2020-05-09T04:56:56.6224030Z =================================== FAILURES ===================================
2020-05-09T04:56:56.6224556Z ________________________ JavaSqlTests.test_java_sql_ddl ________________________
2020-05-09T04:56:56.6224784Z 
2020-05-09T04:56:56.6228394Z self = <pyflink.table.tests.test_sql.JavaSqlTests testMethod=test_java_sql_ddl>
2020-05-09T04:56:56.6228859Z 
2020-05-09T04:56:56.6229177Z     def test_java_sql_ddl(self):
2020-05-09T04:56:56.6229574Z         test_class = "org.apache.flink.client.python.PythonFunctionFactoryTest"
2020-05-09T04:56:56.6230781Z         test_jar_pattern = "flink-python/target/javaDDL/flink-python*-tests.jar"
2020-05-09T04:56:56.6231254Z         test_jar_path = self.get_jar_path(test_jar_pattern)
2020-05-09T04:56:56.6231764Z         test_classpath = self.get_classpath() + os.pathsep + test_jar_path
2020-05-09T04:56:56.6232094Z         java_executable = self.get_java_executable()
2020-05-09T04:56:56.6232961Z >       subprocess.check_output([java_executable, "-cp", test_classpath, test_class], shell=False)
2020-05-09T04:56:56.6233303Z 
2020-05-09T04:56:56.6234039Z pyflink/table/tests/test_sql.py:112: 
2020-05-09T04:56:56.6234547Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2020-05-09T04:56:56.6234989Z dev/.conda/lib/python3.7/subprocess.py:395: in check_output
2020-05-09T04:56:56.6235318Z     **kwargs).stdout
2020-05-09T04:56:56.6235678Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2020-05-09T04:56:56.6236089Z 
2020-05-09T04:56:56.6236401Z input = None, capture_output = False, timeout = None, check = True
2020-05-09T04:56:56.6238251Z popenargs = (['/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java', '-cp', '/__w/3/s/flink-dist/target/flink-1.11-SNAPSHOT-bin/flink-1...arget/javaDDL/flink-python_2.11-1.11-SNAPSHOT-tests.jar', 'org.apache.flink.client.python.PythonFunctionFactoryTest'],)
2020-05-09T04:56:56.6239344Z kwargs = {'shell': False, 'stdout': -1}
2020-05-09T04:56:56.6239738Z process = <subprocess.Popen object at 0x7fdfd94e6400>
2020-05-09T04:56:56.6241028Z stdout = b'Traceback (most recent call last):\n  File "/__w/3/s/flink-python/.tox/py37-cython/lib/python3.7/site-packages/py4j/...g, e)\npy4j.protocol.Py4JNetworkError: An error occurred while trying to start the callback server (127.0.0.1:33053)\n'
2020-05-09T04:56:56.6241856Z stderr = None, retcode = 1
2020-05-09T04:56:56.6242065Z 
2020-05-09T04:56:56.6242275Z     def run(*popenargs,
2020-05-09T04:56:56.6242725Z             input=None, capture_output=False, timeout=None, check=False, **kwargs):
2020-05-09T04:56:56.6243284Z         """Run command with arguments and return a CompletedProcess instance.
2020-05-09T04:56:56.6243650Z     
2020-05-09T04:56:56.6244429Z         The returned instance will have attributes args, returncode, stdout and
2020-05-09T04:56:56.6244820Z         stderr. By default, stdout and stderr are not captured, and those attributes
2020-05-09T04:56:56.6245396Z         will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them.
2020-05-09T04:56:56.6245853Z     
2020-05-09T04:56:56.6246479Z         If check is True and the exit code was non-zero, it raises a
2020-05-09T04:56:56.6246973Z         CalledProcessError. The CalledProcessError object will have the return code
2020-05-09T04:56:56.6247512Z         in the returncode attribute, and output & stderr attributes if those streams
2020-05-09T04:56:56.6248004Z         were captured.
2020-05-09T04:56:56.6248256Z     
2020-05-09T04:56:56.6248584Z         If timeout is given, and the process takes too long, a TimeoutExpired
2020-05-09T04:56:56.6249113Z         exception will be raised.
2020-05-09T04:56:56.6249397Z     
2020-05-09T04:56:56.6249730Z         There is an optional argument "input", allowing you to
2020-05-09T04:56:56.6250478Z         pass bytes or a string to the subprocess's stdin.  If you use this argument
2020-05-09T04:56:56.6251232Z         you may not also use the Popen constructor's "stdin" argument, as
2020-05-09T04:56:56.6251613Z         it will be used internally.
2020-05-09T04:56:56.6251884Z     
2020-05-09T04:56:56.6252261Z         By default, all communication is in bytes, and therefore any "input" should
2020-05-09T04:56:56.6252795Z         be bytes, and the stdout and stderr will be bytes. If in text mode, any
2020-05-09T04:56:56.6253458Z         "input" should be a string, and stdout and stderr will be strings decoded
2020-05-09T04:56:56.6254141Z         according to locale encoding, or by "encoding" if set. Text mode is
2020-05-09T04:56:56.6254746Z         triggered by setting any of text, encoding, errors or universal_newlines.
2020-05-09T04:56:56.6255079Z     
2020-05-09T04:56:56.6255308Z         The other arguments are the same as for the Popen constructor.
2020-05-09T04:56:56.6255568Z         """
2020-05-09T04:56:56.6255849Z         if input is not None:
2020-05-09T04:56:56.6256363Z             if 'stdin' in kwargs:
2020-05-09T04:56:56.6256834Z                 raise ValueError('stdin and input arguments may not both be used.')
2020-05-09T04:56:56.6257269Z             kwargs['stdin'] = PIPE
2020-05-09T04:56:56.6257444Z     
2020-05-09T04:56:56.6257631Z         if capture_output:
2020-05-09T04:56:56.6258130Z             if ('stdout' in kwargs) or ('stderr' in kwargs):
2020-05-09T04:56:56.6258657Z                 raise ValueError('stdout and stderr arguments may not be used '
2020-05-09T04:56:56.6259116Z                                  'with capture_output.')
2020-05-09T04:56:56.6259512Z             kwargs['stdout'] = PIPE
2020-05-09T04:56:56.6259866Z             kwargs['stderr'] = PIPE
2020-05-09T04:56:56.6260060Z     
2020-05-09T04:56:56.6260283Z         with Popen(*popenargs, **kwargs) as process:
2020-05-09T04:56:56.6260544Z             try:
2020-05-09T04:56:56.6260808Z                 stdout, stderr = process.communicate(input, timeout=timeout)
2020-05-09T04:56:56.6261110Z             except TimeoutExpired:
2020-05-09T04:56:56.6261335Z                 process.kill()
2020-05-09T04:56:56.6261592Z                 stdout, stderr = process.communicate()
2020-05-09T04:56:56.6261892Z                 raise TimeoutExpired(process.args, timeout, output=stdout,
2020-05-09T04:56:56.6262205Z                                      stderr=stderr)
2020-05-09T04:56:56.6262515Z             except:  # Including KeyboardInterrupt, communicate handled that.
2020-05-09T04:56:56.6262851Z                 process.kill()
2020-05-09T04:56:56.6263293Z                 # We don't call process.wait() as .__exit__ does that for us.
2020-05-09T04:56:56.6263576Z                 raise
2020-05-09T04:56:56.6263924Z             retcode = process.poll()
2020-05-09T04:56:56.6264174Z             if check and retcode:
2020-05-09T04:56:56.6264445Z                 raise CalledProcessError(retcode, process.args,
2020-05-09T04:56:56.6264969Z >                                        output=stdout, stderr=stderr)
2020-05-09T04:56:56.6276488Z E               subprocess.CalledProcessError: Command '['/usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java', '-cp', '/__w/3/s/flink-dist/target/flink-1.11-SNAPSHOT-bin/flink-1.11-SNAPSHOT/lib/flink-dist_2.11-1.11-SNAPSHOT.jar:/__w/3/s/flink-dist/target/flink-1.11-SNAPSHOT-bin/flink-1.11-SNAPSHOT/lib/flink-table_2.11-1.11-SNAPSHOT.jar:/__w/3/s/flink-dist/target/flink-1.11-SNAPSHOT-bin/flink-1.11-SNAPSHOT/lib/log4j-slf4j-impl-2.12.1.jar:/__w/3/s/flink-dist/target/flink-1.11-SNAPSHOT-bin/flink-1.11-SNAPSHOT/lib/flink-table-blink_2.11-1.11-SNAPSHOT.jar:/__w/3/s/flink-dist/target/flink-1.11-SNAPSHOT-bin/flink-1.11-SNAPSHOT/lib/log4j-core-2.12.1.jar:/__w/3/s/flink-dist/target/flink-1.11-SNAPSHOT-bin/flink-1.11-SNAPSHOT/lib/log4j-api-2.12.1.jar:/__w/3/s/flink-dist/target/flink-1.11-SNAPSHOT-bin/flink-1.11-SNAPSHOT/lib/flink-shaded-zookeeper-3.4.10.jar:/__w/3/s/flink-dist/target/flink-1.11-SNAPSHOT-bin/flink-1.11-SNAPSHOT/lib/flink-shaded-hadoop-2-uber-2.8.3-10.0.jar:/__w/3/s/flink-dist/target/flink-1.11-SNAPSHOT-bin/flink-1.11-SNAPSHOT/lib/log4j-1.2-api-2.12.1.jar:/__w/3/s/flink-dist/target/flink-1.11-SNAPSHOT-bin/flink-1.11-SNAPSHOT/opt/flink-python_2.11-1.11-SNAPSHOT.jar:/__w/3/s/flink-table/flink-table-planner/target/flink-table-planner_2.11-1.11-SNAPSHOT-tests.jar:/__w/3/s/flink-runtime/target/flink-runtime_2.11-1.11-SNAPSHOT-tests.jar:/__w/3/s/flink-streaming-java/target/flink-streaming-java_2.11-1.11-SNAPSHOT-tests.jar:/__w/3/s/flink-formats/flink-csv/target/flink-csv-1.11-SNAPSHOT-tests.jar:/__w/3/s/flink-formats/flink-csv/target/flink-csv-1.11-SNAPSHOT-sql-jar.jar:/__w/3/s/flink-formats/flink-csv/target/flink-csv-1.11-SNAPSHOT.jar:/__w/3/s/flink-formats/flink-avro/target/flink-avro-1.11-SNAPSHOT-tests.jar:/__w/3/s/flink-formats/flink-avro/target/flink-avro-1.11-SNAPSHOT-sql-jar.jar:/__w/3/s/flink-formats/flink-avro/target/flink-avro-1.11-SNAPSHOT.jar:/__w/3/s/flink-formats/flink-avro/target/avro-1.8.2.jar:/__w/3/s/flink-formats/flink-json/target/flink-json-1.11-SNAPSHOT.jar:/__w/3/s/flink-formats/flink-json/target/flink-json-1.11-SNAPSHOT-sql-jar.jar:/__w/3/s/flink-formats/flink-json/target/flink-json-1.11-SNAPSHOT-tests.jar:/__w/3/s/flink-connectors/flink-connector-elasticsearch-base/target/flink-connector-elasticsearch-base_2.11-1.11-SNAPSHOT.jar:/__w/3/s/flink-connectors/flink-connector-elasticsearch-base/target/flink-connector-elasticsearch-base_2.11-1.11-SNAPSHOT-tests.jar:/__w/3/s/flink-connectors/flink-connector-kafka-base/target/flink-connector-kafka-base_2.11-1.11-SNAPSHOT-tests.jar:/__w/3/s/flink-connectors/flink-connector-kafka-base/target/flink-connector-kafka-base_2.11-1.11-SNAPSHOT.jar:/__w/3/s/flink-connectors/flink-hbase/target/flink-hbase_2.11-1.11-SNAPSHOT-tests.jar:/__w/3/s/flink-connectors/flink-hbase/target/flink-hbase_2.11-1.11-SNAPSHOT.jar:/__w/3/s/flink-ml-parent/flink-ml-api/target/flink-ml-api-1.11-SNAPSHOT.jar:/__w/3/s/flink-ml-parent/flink-ml-api/target/flink-ml-api-1.11-SNAPSHOT-tests.jar:/__w/3/s/flink-ml-parent/flink-ml-lib/target/flink-ml-lib_2.11-1.11-SNAPSHOT-tests.jar:/__w/3/s/flink-ml-parent/flink-ml-lib/target/flink-ml-lib_2.11-1.11-SNAPSHOT.jar:/__w/3/s/flink-python/target/javaDDL/flink-python_2.11-1.11-SNAPSHOT-tests.jar', 'org.apache.flink.client.python.PythonFunctionFactoryTest']' returned non-zero exit status 1.
2020-05-09T04:56:56.6282572Z 
2020-05-09T04:56:56.6282962Z dev/.conda/lib/python3.7/subprocess.py:487: CalledProcessError
2020-05-09T04:56:56.6283907Z ----------------------------- Captured stderr call -----------------------------
2020-05-09T04:56:56.6284948Z Exception in thread "main" java.lang.IllegalStateException: Instantiating python function 'test1.func1' failed.
2020-05-09T04:56:56.6285849Z 	at org.apache.flink.table.functions.python.utils.PythonFunctionUtils.getPythonFunction(PythonFunctionUtils.java:48)
2020-05-09T04:56:56.6286638Z 	at org.apache.flink.table.functions.FunctionDefinitionUtil.createFunctionDefinition(FunctionDefinitionUtil.java:42)
2020-05-09T04:56:56.6287483Z 	at org.apache.flink.table.catalog.FunctionCatalog.getFunctionDefinition(FunctionCatalog.java:646)
2020-05-09T04:56:56.6288088Z 	at org.apache.flink.table.catalog.FunctionCatalog.resolvePreciseFunctionReference(FunctionCatalog.java:576)
2020-05-09T04:56:56.6288642Z 	at org.apache.flink.table.catalog.FunctionCatalog.lambda$resolveAmbiguousFunctionReference$2(FunctionCatalog.java:613)
2020-05-09T04:56:56.6289075Z 	at java.util.Optional.orElseGet(Optional.java:267)
2020-05-09T04:56:56.6289502Z 	at org.apache.flink.table.catalog.FunctionCatalog.resolveAmbiguousFunctionReference(FunctionCatalog.java:613)
2020-05-09T04:56:56.6289986Z 	at org.apache.flink.table.catalog.FunctionCatalog.lookupFunction(FunctionCatalog.java:370)
2020-05-09T04:56:56.6290557Z 	at org.apache.flink.table.catalog.FunctionCatalog$1.lookupFunction(FunctionCatalog.java:351)
2020-05-09T04:56:56.6291014Z 	at org.apache.flink.table.catalog.FunctionCatalog$1.lookupFunction(FunctionCatalog.java:346)
2020-05-09T04:56:56.6291716Z 	at org.apache.flink.table.expressions.resolver.LookupCallResolver.visit(LookupCallResolver.java:48)
2020-05-09T04:56:56.6292448Z 	at org.apache.flink.table.expressions.resolver.LookupCallResolver.visit(LookupCallResolver.java:38)
2020-05-09T04:56:56.6293220Z 	at org.apache.flink.table.expressions.ApiExpressionVisitor.visit(ApiExpressionVisitor.java:37)
2020-05-09T04:56:56.6293758Z 	at org.apache.flink.table.expressions.LookupCallExpression.accept(LookupCallExpression.java:65)
2020-05-09T04:56:56.6294568Z 	at org.apache.flink.table.api.ApiExpression.accept(ApiExpression.java:64)
2020-05-09T04:56:56.6295284Z 	at org.apache.flink.table.api.internal.TableImpl.lambda$preprocessExpressions$0(TableImpl.java:592)
2020-05-09T04:56:56.6296026Z 	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
2020-05-09T04:56:56.6296711Z 	at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)
2020-05-09T04:56:56.6297250Z 	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)
2020-05-09T04:56:56.6298023Z 	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)
2020-05-09T04:56:56.6298590Z 	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
2020-05-09T04:56:56.6299246Z 	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
2020-05-09T04:56:56.6299743Z 	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:566)
2020-05-09T04:56:56.6300452Z 	at org.apache.flink.table.api.internal.TableImpl.preprocessExpressions(TableImpl.java:593)
2020-05-09T04:56:56.6301137Z 	at org.apache.flink.table.api.internal.TableImpl.select(TableImpl.java:128)
2020-05-09T04:56:56.6301727Z 	at org.apache.flink.client.python.PythonFunctionFactoryTest.testPythonFunctionFactory(PythonFunctionFactoryTest.java:90)
2020-05-09T04:56:56.6302286Z 	at org.apache.flink.client.python.PythonFunctionFactoryTest.main(PythonFunctionFactoryTest.java:54)
2020-05-09T04:56:56.6302817Z Caused by: java.lang.reflect.InvocationTargetException
2020-05-09T04:56:56.6303131Z 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
2020-05-09T04:56:56.6303490Z 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
2020-05-09T04:56:56.6304029Z 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
2020-05-09T04:56:56.6304410Z 	at java.lang.reflect.Method.invoke(Method.java:498)
2020-05-09T04:56:56.6304852Z 	at org.apache.flink.table.functions.python.utils.PythonFunctionUtils.getPythonFunction(PythonFunctionUtils.java:44)
2020-05-09T04:56:56.6305204Z 	... 26 more
2020-05-09T04:56:56.6305488Z Caused by: java.lang.RuntimeException: Python callback server start failed!
2020-05-09T04:56:56.6306024Z 	at org.apache.flink.client.python.PythonFunctionFactory.getPythonFunctionFactory(PythonFunctionFactory.java:111)
2020-05-09T04:56:56.6306548Z 	at org.apache.flink.client.python.PythonFunctionFactory.getPythonFunction(PythonFunctionFactory.java:84)
2020-05-09T04:56:56.6307039Z 	... 31 more


instance: https://dev.azure.com/apache-flink/98463496-1af2-4620-8eab-a2ecc1a2e6fe/_apis/build/builds/852/logs/138