If the ExecutionGraph is concurrently scheduled and cancelled, it can happen that requested Slots are not properly returned to the SlotPool. This causes an inconsistent state of the SlotPool where it thinks that some of its slots are still occupied even though the respective Execution has already been cancelled.

The problem seems to be caused by propagating the cancellation of the overall scheduling future to the individual scheduling futures. If the individual scheduling future is cancelled, then the callback which produces its value and also handles the failure case won't be called.