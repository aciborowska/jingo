We have a UDF as follows:


object FuncRow extends ScalarFunction {

def eval(v: Int): Row = { 
  val version = "" + new Random().nextInt()          
  val row = new Row(3)          
  row.setField(0, version)          
  row.setField(1, version)          
  row.setField(2, version)          
  row 
}

override def isDeterministic: Boolean = false

override def getResultType(signature: Array[Class[_]]): TypeInformation[_] =
 Types.ROW(Types.STRING, Types.STRING, Types.STRING)
}


Do the following Query:


val data = new mutable.MutableList[(Int, Long, String)]
 data.+=((1, 1L, "Hi"))
 val ds = env.fromCollection(data).toTable(tEnv, 'a, 'b,'c)
 .select(FuncRow('a).flatten()).as('v1, 'v2, 'v3)


The result is : -1189206469,-151367792,1988676906

The result expected by the user should be:  v1==v2==v3 .

It looks the real reason is that there is no result of the reuse in codegen.

 