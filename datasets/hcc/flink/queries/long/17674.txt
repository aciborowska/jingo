State restore to the task vertices and coordinators (even after loading the Checkpoint Metadata) happens in the JobManager's main thread and must consequently not do any potentially blocking I/O operations.

The OperatorCoordinator state is a generic StreamStateHandle whose state might require I/O to retrieve. This never happens in the current implementation (we always use ByteStreamStateHandle) the signatures and contracts don't guarantee that and leave this open for a potential future bug.

Typing the OperatorCoordinator state to ByteStreamStateHandle makes sure that we can always retrieve the data directly without I/O and clarifies that no arbitrary StreamStateHandle is supported at that point. 

If state restoring becomes an asynchronous operation we can relax this restriction.