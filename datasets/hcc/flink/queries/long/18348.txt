The error will be set and partitionRequestClient will be a null value if a remote channel fails to request the partition at the beginning. And the task will fail here whenÂ the task thread trying to fetch data from channels.

And then we get error:




java.lang.IllegalStateException: Queried for a buffer before requesting a queue.
        at org.apache.flink.util.Preconditions.checkState(Preconditions.java:195) ~[flink-dist_2.11-1.11-SNAPSHOT.jar:1.11-SNAPSHOT]
        at org.apache.flink.runtime.io.network.partition.consumer.RemoteInputChannel.getNextBuffer(RemoteInputChannel.java:172) ~[flink-dist_2.11-1.11-SNAPSHOT.jar:1.11-SNAPSHOT]
        at org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate.waitAndGetNextData(SingleInputGate.java:637) ~[flink-dist_2.11-1.11-SNAPSHOT.jar:1.11-SNAPSHOT]
        at org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate.getNextBufferOrEvent(SingleInputGate.java:615) ~[flink-dist_2.11-1.11-SNAPSHOT.jar:1.11-SNAPSHOT]
        at org.apache.flink.runtime.io.network.partition.consumer.SingleInputGate.getNext(SingleInputGate.java:598) ~[flink-dist_2.11-1.11-SNAPSHOT.jar:1.11-SNAPSHOT]



But the root cause is the PartitionConnectionException we set when requesting the partition.