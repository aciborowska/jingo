The StreamTask's asynchronous checkpoint notifications are decoupled from the StreamTask's lifecycle. Consequently, it can happen that a StreamTask is terminating/cancelling and still sends asynchronous checkpoint notifications (e.g. acknowledge/decline checkpoint notifications). This is problematic because a cancelling/terminating StreamTask might cause an asynchronous checkpoint to fail which is expected and should not be reported to the JobMaster. 

Hence, the checkpoint notifications should be coupled with the StreamTask's lifecycle (e.g. notifications must be sent from the StreamTask's main thread) and if not valid, then they need to be filtered out/suppressed.