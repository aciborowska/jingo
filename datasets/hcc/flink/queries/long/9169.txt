A user reported to have observed the following exception when restoring a Flink job from a 1.3 savepoint with Flink 1.4.



2018-04-02 21:44:18,146 INFO  org.apache.flink.runtime.taskmanager.Task                     - ApplyAMUpdate (13/160) (7248adb0b85f4458ae4144963d65
6fa6) switched from RUNNING to FAILED.
java.lang.IllegalStateException: Could not initialize keyed state backend.
        at org.apache.flink.streaming.api.operators.AbstractStreamOperator.initKeyedState(AbstractStreamOperator.java:293)
        at org.apache.flink.streaming.api.operators.AbstractStreamOperator.initializeState(AbstractStreamOperator.java:225)
        at org.apache.flink.streaming.runtime.tasks.StreamTask.initializeOperators(StreamTask.java:692)
        at org.apache.flink.streaming.runtime.tasks.StreamTask.initializeState(StreamTask.java:679)
        at org.apache.flink.streaming.runtime.tasks.StreamTask.invoke(StreamTask.java:253)
        at org.apache.flink.runtime.taskmanager.Task.run(Task.java:718)
        at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NullPointerException
        at org.apache.flink.util.Preconditions.checkNotNull(Preconditions.java:58)
        at org.apache.flink.runtime.state.RegisteredKeyedBackendStateMetaInfo.<init>(RegisteredKeyedBackendStateMetaInfo.java:53)
        at org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend$RocksDBFullRestoreOperation.restoreKVStateMetaData(RocksDBKeyedStateB
ackend.java:1216)
        at org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend$RocksDBFullRestoreOperation.restoreKeyGroupsInStateHandle(RocksDBKeye
dStateBackend.java:1153)
        at org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend$RocksDBFullRestoreOperation.doRestore(RocksDBKeyedStateBackend.java:1
139)
        at org.apache.flink.contrib.streaming.state.RocksDBKeyedStateBackend.restore(RocksDBKeyedStateBackend.java:1034)
        at org.apache.flink.streaming.runtime.tasks.StreamTask.createKeyedStateBackend(StreamTask.java:773)
        at org.apache.flink.streaming.api.operators.AbstractStreamOperator.initKeyedState(AbstractStreamOperator.java:283)
        ... 6 more



Looking at the KeyedBackendStateMetaInfoSnapshotReaderWriters, we create RegisteredKeyedBackendStateMetaInfo.Snapshot where the stateSerializer can be null. This is not the problem, however, in RocksDBKeyedStateBackend#restoreKVStateMetaData we create a RegisteredKeyedBackendStateMetaInfo from the deserialized Snapshot where we null check the state serializer. This will then fail with an indescriptive NPE.

I think the same should happen when resuming with Flink 1.5 from a 1.4 savepoint.