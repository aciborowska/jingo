We are facing an special scenario, we want to know if this feature is supported:
 First count distinct deviceid for A,B dimensions, then sum up for just A dimension.
 Here is SQL:


SELECT dt, SUM(a.uv) AS uv
FROM (
 SELECT dt, pvareaid, COUNT(DISTINCT cuid) AS uv
 FROM streaming_log_event
 WHERE action IN ('action1')
 AND pvareaid NOT IN ('pv1', 'pv2')
 AND pvareaid IS NOT NULL
 GROUP BY dt, pvareaid
) a
GROUP BY dt;

The question is the data emitted to sink was wrong, sink periodically got smaller result (86) which was wrong,  here is the log:


2020-04-17 22:28:38,727    INFO groupBy xx -> to: Tuple2 -> Sink: Unnamed (1/1) (GeneralRedisSinkFunction.invoke:169) - receive data(false,0,86,20200417)
2020-04-17 22:28:38,727    INFO groupBy xx -> to: Tuple2 -> Sink: Unnamed (1/1) (GeneralRedisSinkFunction.invoke:169) - receive data(true,0,130,20200417)
2020-04-17 22:28:39,327    INFO groupBy xx -> to: Tuple2 -> Sink: Unnamed (1/1) (GeneralRedisSinkFunction.invoke:169) - receive data(false,0,130,20200417)
2020-04-17 22:28:39,327    INFO groupBy xx -> to: Tuple2 -> Sink: Unnamed (1/1) (GeneralRedisSinkFunction.invoke:169) - receive data(true,0,86,20200417)
2020-04-17 22:28:39,327    INFO groupBy xx -> to: Tuple2 -> Sink: Unnamed (1/1) (GeneralRedisSinkFunction.invoke:169) - receive data(false,0,86,20200417)
2020-04-17 22:28:39,328    INFO groupBy xx -> to: Tuple2 -> Sink: Unnamed (1/1) (GeneralRedisSinkFunction.invoke:169) - receive data(true,0,131,20200417)


 