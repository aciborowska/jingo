`AbstractKeyedStateBackend.applyToAllKeys() ` uses backend's getKeys(stateName, namespace) to get all keys that belong to `namespace`. But, in `RocksDBKeyedStateBackend.getKeys()` if just return a object which wrap a `rocksdb iterator`, that is dangous, because rocksdb will ping the resources that belong to the iterator into memory untill iterator.close() is invoked, but it didn't invoked right now. This will lead to memory leak finally.