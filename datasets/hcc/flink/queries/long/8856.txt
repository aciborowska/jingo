We need this to work around the following JVM bug: https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8138622

To circumvent this problem, the TaskCancelerWatchDog must not call interrupt() at all, but only join on the executing thread (with timeout) and cause a hard exit once cancellation takes to long.

A user affected by this problem reported this in FLINK-8834

Personal note: The Thread.join(...) method unfortunately is not 100% reliable as well, because it uses System.currentTimeMillis() rather than System.nanoTime(). Because of that, sleeps can take overly long when the clock is adjusted. I wonder why the JDK authors do not follow their own recommendations and use System.nanoTime() for all relative time measures...

EDIT: I am not the only one wondering why: https://stackoverflow.com/questions/42544387/why-does-thread-join-use-currenttimemillis