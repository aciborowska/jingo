Right now, there are HeapListStateTest/RocksDBListStateTest, HeapReducingStateTest/RocksDBReducingStateTest and HeapAggregatingStateTest/RocksDBAggregatingStateTest. They test the same thing and should be folded back into StateBackendTestBase to ensure that all state backends exhibit the same behaviour.

The Heap-flavoured tests additionally check whether the state table is empty, this can be achieved across all state backends by introducing AbstractKeyedStateBackend.numStateEntries() that returns the number of all state entries. For the heap backend this would count the number of entries in the state table, for RocksDB this would get an iterator for each column family and count the number of entries.

This way we have the best coverage for all state backends and ensure that they all behave the same.