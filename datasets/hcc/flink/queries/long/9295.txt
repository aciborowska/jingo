FlinkKafkaProducer011 can throw ProducerFencedExceptions if multiple sinks are used within the same sub-task.  This can happen when operator-chaining results in two different sinks in the same topology being chained into a task, and thus into each of its sub-tasks.

The problem is that TransactionIdsGenerator only takes into account the task name, the subtask index, the number of subtasks, and a couple of other things.  All the attributes are the same between different FlinkKafkaProducer011s within the same sub-task, so they get the same transaction ids and one of them ends up failing.