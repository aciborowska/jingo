The number of task slots for local execution are determined by the maximum parallelism found. However, if a default parallelism has been set, this parallelism is used as the upper bound for the number of task slots.

We should change this to always use the maximum parallelism as the number of task slots. Otherwise jobs which include operators with a parallelism higher than the default parallelism fail to execute locally.

For example, this fails


ExecutionEnvironment env = ..

env.setParallelism(2);

DataSet<Integer> set = env.fromElements(1,2,3,4)
    .map(el -> el+1)
    .setParallelism(4);

set.print();

