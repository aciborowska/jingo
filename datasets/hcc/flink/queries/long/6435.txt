A user reported that the AsyncWaitOperator does not handle exceptions properly. The following code snipped does not make the job fail.


public void test() throws Exception {
    StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();
    DataStream<Integer> withTimestamps = env.fromCollection(Arrays.asList(1,2,3,4,5));

    AsyncDataStream.unorderedWait(withTimestamps, 
        (AsyncFunction<Integer, String>) (input, collector) -> {
            if (input == 3){
                collector.collect(new RuntimeException("Test"));
                return;
            }
            collector.collect(Collections.singleton("Ok"));
        }, 10, TimeUnit.MILLISECONDS)
        .returns(String.class)
        .print();

    env.execute("unit-test");
}

