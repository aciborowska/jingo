Here is a simple test case for the BCVars branching functionality which need to be implemented. The test job evaluates polynomials:

```
           Sc1(id,a,b,c) –
                           \
Sc2(id,x) --------          Jn2(id) – Mp2 – Sk
                  \        /          /
                   Jn1(id) – Mp1 ----
                  /
Sc3(id,y) --------
```

The operators in this dataflow graph implement the following functionality:


	`Sc1` generates M parameters `a,b,c` for second degree polynomials `P = ax^2 + bx + c` identified by `id`.
	`Sc2` generates N `x` values to be evaluated with the polynomial identified by `id`.
	`Sc3` generates N `y` values to be evaluated with the polynomial identified by `id`.
	`Jn1` matches `x` and `y` values on `id` and emits `(id, x, y)` triples.
	`Jn2` matches polynomial and arguments by `id`, computes `p = min(P,P)` and emits `(id, p)` tuples.
	`Mp1` selects `(id, x, y)` triples where `x = y` and broadcasts `z` (=x=y) to `Mp2`.
	`Mp2` filters out all `p` values which can be divided by `z`.



With a suiting N and M values and selectivity for `Mp1` the optimizer prefer pick a re-partition strategy for `Jn1`.

---------------- Imported from GitHub ----------------
Url: https://github.com/stratosphere/stratosphere/issues/491
Created by: aalexandrov
Labels: 
Created at: Fri Feb 21 16:56:59 CET 2014
State: closed