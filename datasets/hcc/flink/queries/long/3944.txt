Currently, we do not support the execution of Cartesian products. 
Because we do not optimize the order of joins (due to missing statistics), joins are executed in the order in which they are specified. This works well for the Table API, however it can be problematic in case of SQL queries where the order of tables in the FROM clause should not matter.

In case of SQL queries, it can happen that the optimized plan contains Cartesian products because joins are not reordered. If we add optimization rules that switch Cartesian products and joins, such situations can be resolved.