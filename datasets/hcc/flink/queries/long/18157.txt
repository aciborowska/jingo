Setting jobmanager.memory.off-heap.size to 0 results in this confusing error:


[] - Loading configuration property: jobmanager.memory.process.size, 2000m
[] - Loading configuration property: jobmanager.memory.heap.size, 1500m
[] - Loading configuration property: jobmanager.memory.jvm-overhead.min, 100m
[] - Loading configuration property: jobmanager.memory.jvm-overhead.max, 350m
[] - Loading configuration property: jobmanager.memory.off-heap.size, 0m
[] - The configured or derived JVM heap memory size (jobstore.cache-size: 0 bytes) is less than the configured or default size of the job store cache (jobmanager.memory.heap.size: 50.000mb (52428800 bytes))



According to the documentation the jobstore uses the heap though.



private static JobManagerFlinkMemory createJobManagerFlinkMemory(
		Configuration config,
		MemorySize jvmHeap,
		MemorySize offHeapMemory) {
	verifyJvmHeapSize(jvmHeap);
	verifyJobStoreCacheSize(config, offHeapMemory);
	return new JobManagerFlinkMemory(jvmHeap, offHeapMemory);
}

private static void verifyJvmHeapSize(MemorySize jvmHeapSize) {
	if (jvmHeapSize.compareTo(JobManagerOptions.MIN_JVM_HEAP_SIZE) < 1) {
		LOG.warn(
			"The configured or derived JVM heap memory size ({}) is less than its recommended minimum value ({})",
			jvmHeapSize.toHumanReadableString(),
			JobManagerOptions.MIN_JVM_HEAP_SIZE);
	}
}

