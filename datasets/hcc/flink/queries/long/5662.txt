Neither of the following snippets works:


public static void main(String[] args) throws Exception {
	final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment();

	DataSet<String> text = ...
	BatchTableEnvironment tEnv = TableEnvironment.getTableEnvironment(env);

// 	Table t = tEnv.fromDataSet(text, "text").select("text AS line");
// 	Table t = tEnv.fromDataSet(text, "text").as("line");
	Table t = tEnv.fromDataSet(text, "text").select("text AS line").select("line AS line");

	tEnv.toDataSet(t, MyPojo.class).print();
}

public static class MyPojo {
	public String line;
}




Exception in thread "main" org.apache.flink.table.api.TableException: POJO does not define field name: text
	at org.apache.flink.table.typeutils.TypeConverter$$anonfun$2.apply(TypeConverter.scala:85)
	at org.apache.flink.table.typeutils.TypeConverter$$anonfun$2.apply(TypeConverter.scala:81)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at org.apache.flink.table.typeutils.TypeConverter$.determineReturnType(TypeConverter.scala:81)
	at org.apache.flink.table.plan.nodes.dataset.BatchScan.convertToExpectedType(BatchScan.scala:69)
	at org.apache.flink.table.plan.nodes.dataset.DataSetScan.translateToPlan(DataSetScan.scala:61)
	at org.apache.flink.table.api.BatchTableEnvironment.translate(BatchTableEnvironment.scala:305)
	at org.apache.flink.table.api.BatchTableEnvironment.translate(BatchTableEnvironment.scala:289)
	at org.apache.flink.table.api.java.BatchTableEnvironment.toDataSet(BatchTableEnvironment.scala:146)
	at groupId.WordCount.main(WordCount.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:147)

