This issue has been discussed on the ML:
http://apache-flink-mailing-list-archive.1008284.n3.nabble.com/Type-problem-in-RichFlatMapFunction-when-using-GenericArray-type-td13929.html

This returns the wrong type:

  public static class Foo<K> extends Tuple2<K[], K> {

    public Foo() {
    }

    public Foo(K[] value0, K value1) {
      super(value0, value1);
    }
  }

    DataSource<Foo<T>> fooDataSource = env.fromElements(foo);

    DataSet<Foo<T>> ds = fooDataSource.join(fooDataSource)
      .where(field).equalTo(field)
      .with(new RichFlatJoinFunction<Foo<T>, Foo<T>, Foo<T>>() {
        @Override
        public void join(Foo<T> first, Foo<T> second,
          Collector<Foo<T>> out) throws Exception {
          out.collect(first);
        }
      });

