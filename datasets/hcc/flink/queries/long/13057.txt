ListState can be a keyed state or an operator state, but the comment in ListState said it can only be a keyed stateï¼š


The state is only accessible by functions applied on a {@code KeyedStream}. 


We can change the comment from


* <p>The state is only accessible by functions applied on a {@code KeyedStream}. The key is
* automatically supplied by the system, so the function always sees the value mapped to the
* key of the current element. That way, the system can handle stream and state partitioning
* consistently together.

to


 * <p>The state can be a keyed list state or an operator list state.
 * When it is a keyed list state, it is accessed by functions applied on a {@code KeyedStream}.
 * The key is automatically supplied by the system, so the function always sees the value mapped
 * to the key of the current element. That way, the system can handle stream and state
 * partitioning consistently together.
 * When it is an operator list state, the list is a collection of state items that are
 * independent from each other and eligible for redistribution across operator instances in case
 * of changed operator parallelism.


Appreciate any suggestions.