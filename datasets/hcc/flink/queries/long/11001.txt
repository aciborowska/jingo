Currently, we can rename window rowtime attribute like this in Scala:


table
      .window(Tumble over 2.millis on 'rowtime as 'w)
      .groupBy('w)
      .select('w.rowtime as 'rowtime, 'int.count as 'int)


However, an exception will be thrown if we use java(by changing the Expressions to String):


table
      .window(Tumble over 2.millis on 'rowtime as 'w)
      .groupBy('w)
      .select("w.rowtime as rowtime, int.count as int")


The Exception is:


org.apache.flink.table.api.ExpressionParserException: Could not parse expression at column 11: `,' expected but `a' found
w.rowtime as rowtime, int.count as int


 

To solve the problem, we can add rename support in ExpressionParser. However, this may conflict with the design of source which use as before rowtime:


stream.toTable(
      tEnv,
      ExpressionParser.parseExpressionList("(b as b).rowtime, c as c, a as a"): _*)


Personally, I think we should keep the two consistent, so the final api would be:


// window case
.select("w.rowtime as rowtime, int.count as int")

// source case
stream.toTable(
      tEnv,
      ExpressionParser.parseExpressionList("b.rowtime as b, c as c, a as a"): _*)


Any suggestions would be greatly appreciated!