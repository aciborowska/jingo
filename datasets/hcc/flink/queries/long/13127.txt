Currently yarnship works as follows:

	user specifies directory to ship with the job
	yarn ships it with the container
	org.apache.flink.yarn.AbstractYarnClusterDescriptor#uploadAndRegisterFiles traverses directory recursively and adds each file to the classpath



This works well for shipping jars, but doesn't work correctly with shipping resources that we want to load using java.lang.ClassLoader#getResource method.

In order to make resource classloading work, we need to register it's directory instead of the file itself (java classpath expects directories or archives).

CLASSPATH="shipped/custom.conf:${CLASSPATH}" needs to become CLASSPATH="shipped:${CLASSPATH}"