I want to run the following program


case class WeightedEdge(src: Int, target: Int, weight: Double)
case class Community(communityID: Int, nodeID: Int)

case class CommunitySumTotal(communityID: Int, sumTotal: Double)

val communities: DataSet[Community]
val weightedEdges: DataSet[WeightedEdge]

val communitiesTable = communities.toTable 
val weightedEdgesTable = weightedEdges.toTable

val sumTotal = communitiesTable.join(weightedEdgesTable)
		  .where("nodeID = src")
		  .groupBy('communityID)
		  .select('communityID, 'weight.sum).toSet[CommunitySumTotal]



but I get this exception. In my opinion the outputs do have the same field types.


Exception in thread "main" org.apache.flink.api.table.ExpressionException: Expression result type org.apache.flink.api.table.Row(communityID: Integer, intermediate.1: Double) does not have the samefields as output type io.ssc.trackthetrackers.analysis.algorithms.CommunitySumTotal(communityID: Integer, sumTotal: Double)
	at org.apache.flink.api.java.table.JavaBatchTranslator.translate(JavaBatchTranslator.scala:88)
	at org.apache.flink.api.scala.table.ScalaBatchTranslator.translate(ScalaBatchTranslator.scala:55)
	at org.apache.flink.api.scala.table.TableConversions.toSet(TableConversions.scala:37)
	at io.ssc.trackthetrackers.analysis.algorithms.LouvainCommunityDetection$.detectCommunities(LouvainCommunityDetection.scala:105)
	at io.ssc.trackthetrackers.analysis.algorithms.LouvainCommunityDetection$delayedInit$body.apply(LouvainCommunityDetection.scala:38)
	at scala.Function0$class.apply$mcV$sp(Function0.scala:40)
	at scala.runtime.AbstractFunction0.apply$mcV$sp(AbstractFunction0.scala:12)
	at scala.App$$anonfun$main$1.apply(App.scala:71)
	at scala.App$$anonfun$main$1.apply(App.scala:71)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:32)
	at scala.App$class.main(App.scala:71)

