I created a keystore with


keytool -genkeypair -alias flink.internal -keystore internal.keystore -dname "CN=flink.internal" -storepass internal_store_password -keypass internal_key_password -keyalg RSA -keysize 4096


and adapted flink-conf.yaml to point to this with the following configuration:


security.ssl.enabled: true
web.ssl.enabled: false
security.ssl.keystore: /path/to/internal.keystore
security.ssl.keystore-password: internal_store_password
security.ssl.key-password: internal_key_password
security.ssl.truststore: /path/to/internal.keystore
security.ssl.truststore-password: internal_store_password



Now I know that this setup is supposed to work with Flink 1.6+ but probably wrong for 1.5. However, I was able to start up a Flink cluster and tried to submit a job via


./bin/flink run -p 1 ./examples/streaming/WordCount.jar --input /home/nico/Projects/flink/LICENSE


and nothing happened. The CLI was stuck at


Starting execution of program
Printing result to stdout. Use --output to specify output path.


and the job did not show up in the Web UI. I can also not find anything related to the job submission in the JM log.

Debugging into CliFrontend, it eventually enters RestClient#submitRequest but doesn't seem to get a response. RestClient.MultipartRequest#writeTo does add a listener on the future and debugging in there, the ignored object handed to the lambda is a DefaultChannelPromise@1a884b08(failure(java.nio.channels.ClosedChannelException) which looks like we should react on. However, that alone is not really enough information on the cause of the error and requires further investigation.