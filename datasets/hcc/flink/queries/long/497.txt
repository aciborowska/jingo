The UserCodeObjectWrapper has a bug when creating a copy of the user code object. The copy is made through serialization/deserialization. During deserialization, classes are resolved with Class.forName(...), which requires a class loader. The deserialization phase has, however, no access to the UserCodeClassLoader, but uses the class loaded that was used to load the class of the to-be-cloned object.

While this works for most cases, it does not work if the object itself is part of the application (in the lib directory and hence loaded with the AppClassLoader), but has some parameters that are part of the user code. An example is the AvroInputFormat. The format itself is part of the Stratosphere Framework. It has as a parameter the usercode class to be deserialized with Avro. When cloning an instance of the AvroInputFormat, the format class itself can be resolved, but the parameter class cannot be resolved.

The object wrapper itself is deserialized from the task config using the user code class loader, hence everything works there. The problem is really just the additional serialization when creating a copy of the object.

A simple fix is not to clone in the input format at all. This should be fine in all cases we currently have. Even in input formats, which are used in various roles (create split, create statistics, create records), this should not be a problem: The statistics are created in the compiler (before sending the job graph to the job manager). The splits are created on the job manager (object is freshly deserialized from the job graph parameters). The records are created in the data source tasks (input format object is freshly deserialized from the task parameters).

Unless I overlook something, I would suggest to drop the copy step. Would also save sone cycles during execution.

@aljoscha : Please double check my assumptions, as you wrote the UserCodeWrapper initially.



---------------- Imported from GitHub ----------------
Url: https://github.com/stratosphere/stratosphere/issues/497
Created by: StephanEwen
Labels: 
Assignee: aljoscha
Created at: Mon Feb 24 14:00:58 CET 2014
State: closed