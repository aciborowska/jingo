The Problem
If a user doesn't name an operator explicitly (generally using the name() method) then Flink auto generates a name. These generated names are really (like, really) inconsistent within and across API's.

In the batch API non-source/-sink operator names are generally formed like this:

FlatMap (FlatMap at main(WordCount.java:81))


We have

	FlatMap, describing the runtime operator type
	another FlatMap, describing which user-call created this operator
	main(WordCount.java:81), describing the call location



This already falls apart when you have a DataSource, which looks like this:

DataSource (at getDefaultTextLineDataSet(WordCountData.java:70) (org.apache.flink.CollectionInputFormat)

It is missing the call that created the sink (fromElements()) and suddenly includes the inputFormat name.

Sink are a different story yet again, since collect() is displayed as

 DataSink (collect()) 

which is missing the call location.

Then we have the Streaming API  where things are named completely different as well:

The fromElements source is displayed as 

 Source: Collection Source 


non-source/-sink operators are displayed simply as their runtime operator type

 FlatMap 


and sinks, at times, do not have a name at all.

 Sink: Unnamed 


To put the cherry on top, chains are displayed in the Batch API as

 CHAIN <operator> -> <operator> 

while in the Streaming API we lost the CHAIN keyword

 <operator> -> <operator> 


Considering that these names are right in the users face via the Dashboard we should try to homogenize them a bit.