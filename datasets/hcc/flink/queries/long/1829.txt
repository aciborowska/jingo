The current POM setup transitively includes multiple conflicting versions of the Jackson library over


	com.amazonaws:aws-java-sdk (v. 2.1.1)
	org.apache.avro:avro (v. 1.9.13)
	org.apache.hbase:hbase-client (v. 1.8.8)



When running jobs against a Flink local runtime embedded with:


<dependency>
    <groupId>org.apache.flink</groupId>
    <artifactId>flink-scala</artifactId>
    <version>${flink.version}</version>
    <scope>provided</scope>
</dependency>
<dependency>
    <groupId>org.apache.flink</groupId>
    <artifactId>flink-java</artifactId>
    <version>${flink.version}</version>
    <scope>provided</scope>
</dependency>
<dependency>
    <groupId>org.apache.flink</groupId>
    <artifactId>flink-clients</artifactId>
    <version>${flink.version}</version>
    <scope>provided</scope>
</dependency>



I get the following error:


15-04-04 15:52:04 ERROR exception during creation
akka.actor.ActorInitializationException: exception during creation
	at akka.actor.ActorInitializationException$.apply(Actor.scala:164)
	at akka.actor.ActorCell.create(ActorCell.scala:596)
	at akka.actor.ActorCell.invokeAll$1(ActorCell.scala:456)
	at akka.actor.ActorCell.systemInvoke(ActorCell.scala:478)
	at akka.dispatch.Mailbox.processAllSystemMessages(Mailbox.scala:279)
	at akka.dispatch.Mailbox.run(Mailbox.scala:220)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:231)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at akka.util.Reflect$.instantiate(Reflect.scala:66)
	at akka.actor.ArgsReflectConstructor.produce(Props.scala:352)
	at akka.actor.Props.newActor(Props.scala:252)
	at akka.actor.ActorCell.newActor(ActorCell.scala:552)
	at akka.actor.ActorCell.create(ActorCell.scala:578)
	... 9 more
Caused by: java.lang.NoSuchMethodError: com.fasterxml.jackson.core.JsonFactory.requiresPropertyOrdering()Z
	at com.fasterxml.jackson.databind.ObjectMapper.<init>(ObjectMapper.java:445)
	at com.fasterxml.jackson.databind.ObjectMapper.<init>(ObjectMapper.java:366)
	at org.apache.flink.runtime.taskmanager.TaskManager.<init>(TaskManager.scala:134)
	... 18 more



Fixing the Jackson version on the client side, e.g, with the following snippet


<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-core</artifactId>
    <version>2.2.1</version>
    <scope>provided</scope>
</dependency>
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>2.2.1</version>
    <scope>provided</scope>
</dependency>
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-annotations</artifactId>
    <version>2.2.1</version>
    <scope>provided</scope>
</dependency>



solves the problem, but I guess it will be better if we can stick with one version in the build artifacts.