GatherSumApplyIteration.SumUdf.reduce can store a value from arg1 in the new Tuple2 which can be overwritten in ReduceDriver. We need to swap arg0.f1 and arg1.f1 when this happens (as done in ReduceDriver for the returned results).


	@Override
	public Tuple2<K, M> reduce(Tuple2<K, M> arg0, Tuple2<K, M> arg1) throws Exception {
		K key = arg0.f0;
		M result = this.sumFunction.sum(arg0.f1, arg1.f1);
		return new Tuple2<>(key, result);
	}

