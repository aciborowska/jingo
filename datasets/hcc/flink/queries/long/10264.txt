When I have not declare the default constructor in the  RequestEvent then I got the below exception which is misleading.

 


DataStream<RequestEvent> inputStream = env.addSource(...)
tEnv.registerDataStream(...);


 

 


Exception in thread "main" org.apache.flink.table.api.TableException: Only the first field can reference an atomic type.
 at org.apache.flink.table.api.TableEnvironment$$anonfun$5.apply(TableEnvironment.scala:996)
 at org.apache.flink.table.api.TableEnvironment$$anonfun$5.apply(TableEnvironment.scala:991)
 at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
 at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)
 at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
 at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)
 at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)
 at scala.collection.mutable.ArrayOps$ofRef.flatMap(ArrayOps.scala:186)
 at org.apache.flink.table.api.TableEnvironment.getFieldInfo(TableEnvironment.scala:991)
 at org.apache.flink.table.api.StreamTableEnvironment.registerDataStreamInternal(StreamTableEnvironment.scala:546)
 at org.apache.flink.table.api.java.StreamTableEnvironment.registerDataStream(StreamTableEnvironment.scala:133)}}
