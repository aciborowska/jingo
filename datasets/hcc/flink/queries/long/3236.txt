Right now, the user code classloader delegates to the system classloader as parent. That works in Flink standalone settings, but not when the Flink core classes themselves are not loaded with the system classloader (certain embedded setups)

Giving the classloader that was used to load the Flink core classes (like for example org.apache.flink.runtime.taskmanager.Task.class.getClassLoader() solves that problem and does not break behavior in standalone mode.