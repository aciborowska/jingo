The following fails when there is a Decimal type in the underlying TableSource:

 


DataStream<Row> appendStream = tEnv.toAppendStream(
  asTable,
  asTable.getSchema().toRowType()
);

Yielding the following error:

 

ValidationException: Type ROW<`y` DECIMAL(38, 18)> of table field 'payload' does not match with the physical type ROW<`y` LEGACY('DECIMAL', 'DECIMAL')> of the 'payload' field of the TableSource return type

 

Remarks:

	toAppendStream is not ready for the new type system, does not accept the new DataTypes
	The LegacyTypeInformationType transition type hinders things. Replacing it with the new DataTypes.DECIMAL type makes things work.
	flink-json is not ready for the new type system, does not give the new DataTypes



 

Workaround: reprocess TypeConversions.fromLegacyInfoToDataType's output to replace LegacyTypeInformationType types when they are of DECIMAL typeroot with the new types.

 

Included is reproduction and workaround (activated by line 127) code, with java + pom + stacktrace files.

 