CI https://dev.azure.com/apache-flink/apache-flink/_build/results?buildId=1347&view=logs&j=9cada3cb-c1d3-5621-16da-0f718fb86602&t=455fddbf-5921-5b71-25ac-92992ad80b28



2020-05-15T02:05:53.8421159Z =================================== FAILURES ===================================
2020-05-15T02:05:53.8421748Z _______________________ StreamSqlTests.test_execute_sql ________________________
2020-05-15T02:05:53.8422093Z 
2020-05-15T02:05:53.8422503Z self = <pyflink.table.tests.test_sql.StreamSqlTests testMethod=test_execute_sql>
2020-05-15T02:05:53.8427615Z 
2020-05-15T02:05:53.8428821Z     def test_execute_sql(self):
2020-05-15T02:05:53.8429638Z         t_env = self.t_env
2020-05-15T02:05:53.8429928Z         table_result = t_env.execute_sql("create table tbl"
2020-05-15T02:05:53.8430212Z                                          "("
2020-05-15T02:05:53.8430522Z                                          "   a bigint,"
2020-05-15T02:05:53.8430850Z                                          "   b int,"
2020-05-15T02:05:53.8431308Z                                          "   c varchar"
2020-05-15T02:05:53.8431773Z                                          ") with ("
2020-05-15T02:05:53.8433165Z                                          "  'connector' = 'COLLECTION',"
2020-05-15T02:05:53.8433861Z                                          "   'is-bounded' = 'false'"
2020-05-15T02:05:53.8434298Z                                          ")")
2020-05-15T02:05:53.8434784Z         self.assertIsNone(table_result.get_job_client())
2020-05-15T02:05:53.8435189Z         self.assertIsNotNone(table_result.get_table_schema())
2020-05-15T02:05:53.8435594Z         self.assertEquals(table_result.get_table_schema().get_field_names(), ["result"])
2020-05-15T02:05:53.8436100Z         self.assertIsNotNone(table_result.get_result_kind())
2020-05-15T02:05:53.8436433Z         self.assertEqual(table_result.get_result_kind(), ResultKind.SUCCESS)
2020-05-15T02:05:53.8437088Z         table_result.print()
2020-05-15T02:05:53.8437368Z     
2020-05-15T02:05:53.8438070Z         table_result = t_env.execute_sql("alter table tbl set ('k1' = 'a', 'k2' = 'b')")
2020-05-15T02:05:53.8438580Z         self.assertIsNone(table_result.get_job_client())
2020-05-15T02:05:53.8439431Z         self.assertIsNotNone(table_result.get_table_schema())
2020-05-15T02:05:53.8439954Z         self.assertEquals(table_result.get_table_schema().get_field_names(), ["result"])
2020-05-15T02:05:53.8440385Z         self.assertIsNotNone(table_result.get_result_kind())
2020-05-15T02:05:53.8440885Z         self.assertEqual(table_result.get_result_kind(), ResultKind.SUCCESS)
2020-05-15T02:05:53.8441281Z         table_result.print()
2020-05-15T02:05:53.8441648Z     
2020-05-15T02:05:53.8441871Z         field_names = ["k1", "k2", "c"]
2020-05-15T02:05:53.8442175Z         field_types = [DataTypes.BIGINT(), DataTypes.INT(), DataTypes.STRING()]
2020-05-15T02:05:53.8442496Z         t_env.register_table_sink(
2020-05-15T02:05:53.8442705Z             "sinks",
2020-05-15T02:05:53.8442986Z             source_sink_utils.TestAppendSink(field_names, field_types))
2020-05-15T02:05:53.8443334Z         table_result = t_env.execute_sql("insert into sinks select * from tbl")
2020-05-15T02:05:53.8443723Z         self.assertIsNotNone(table_result.get_job_client())
2020-05-15T02:05:53.8444064Z         self.assertIsNotNone(table_result.get_table_schema())
2020-05-15T02:05:53.8444393Z         self.assertEquals(table_result.get_table_schema().get_field_names(),
2020-05-15T02:05:53.8444750Z                           ["default_catalog.default_database.sinks"])
2020-05-15T02:05:53.8445068Z         self.assertIsNotNone(table_result.get_result_kind())
2020-05-15T02:05:53.8445430Z         self.assertEqual(table_result.get_result_kind(), ResultKind.SUCCESS_WITH_CONTENT)
2020-05-15T02:05:53.8445796Z         job_status = table_result.get_job_client().get_job_status().result()
2020-05-15T02:05:53.8446266Z >       self.assertFalse(job_status.is_globally_terminal_state())
2020-05-15T02:05:53.8446577Z E       AssertionError: True is not false
2020-05-15T02:05:53.8446750Z 
2020-05-15T02:05:53.8446965Z pyflink/table/tests/test_sql.py:98: AssertionError

