

StreamExecutionEnvironment bsEnv = StreamExecutionEnvironment.getExecutionEnvironment();
EnvironmentSettings bsSettings = EnvironmentSettings.newInstance().useBlinkPlanner().inStreamingMode().build();
StreamTableEnvironment bsTableEnv = StreamTableEnvironment.create(bsEnv, bsSettings);
bsEnv.setParallelism(1);

bsTableEnv.executeSql("CREATE TABLE bbb (\n" +
				......
				") WITH (\n" +
                "  'connector'  = 'jdbc',\n" +
                "  'url'        = 'jdbc:mysql://***/***',\n" +
                "  'table-name' = 'bbb',\n" +
                "  'driver'     = 'com.mysql.cj.jdbc.Driver',\n" +
                "  'username'   = '***',\n" +
                "  'password'   = '***'" +
				")");

bsTableEnv.executeSql("CREATE TABLE aaa(\n" +
		"    `area_code`	VARCHAR,\n" +
                "    `stat_date`	        DATE,\n" +
                "    `index`		BIGINT,\n" +
                "    PRIMARY KEY (area_code, stat_date) NOT ENFORCED" +
                ") WITH (\n" +
                "  'connector'  = 'jdbc',\n" +
                "  'url'        = 'jdbc:mysql://***/***',\n" +
                "  'table-name' = 'aaa',\n" +
                "  'driver'     = 'com.mysql.cj.jdbc.Driver',\n" +
                "  'username'   = '***',\n" +
                "  'password'   = '***'\n" +
                ")");
		
		bsTableEnv.executeSql("INSERT INTO aaa SELECT area_code, CURRENT_DATE AS stat_date, count(*) AS index FROM bbb WHERE is_record = '是' GROUP BY area_code");

//		Table table = bsTableEnv.sqlQuery("SELECT area_code, CURRENT_DATE AS stat_date, count(*) AS index FROM bbb WHERE is_record = '是' GROUP BY area_code");
//		DataStream<Tuple2<Boolean, Row>> retractStream = 
//				bsTableEnv.toRetractStream(table, Row.class);
//		retractStream.print();
//		bsEnv.execute();


When I write the aggregate SQL results of mysql into upsert stream JDBC table sink, the program automatically exits with no hint. The result table aaa is also empty which it should not be.
When I use commented code above which converts the aggregate SQL result into retractStream, the printed results is normally.
When I replace data source into kafka and not use commented code above, the dynamic results is written into table aaa successfully.
When I replace inStreamingMode() into inBatchMode() and not use commented code above, it also works.