Currently Execution#producedPartitions is assigned after the partitions have completed the registration to shuffle master in Execution#registerProducedPartitions(...).
The partition registration is an async interface (ShuffleMaster#registerPartitionWithProducer(...)), so Execution#producedPartitions is possible[1] not set when used. 

Usages includes:
1. deploying this task, so that the task may be deployed without its result partitions assigned, and the job would hang. (DefaultScheduler issue only, since legacy scheduler handled this case)
2. generating input descriptors for downstream tasks: 
3. retrieve ResultPartitionID for partition releasing: 

[1] If a user uses Flink default shuffle master NettyShuffleMaster, it is not problematic at the moment since it returns a completed future on registration, so that it would be a synchronized process. However, if users implement their own shuffle service in which the ShuffleMaster#registerPartitionWithProducer returns an pending future, it can be a problem. This is possible since customizable shuffle service is open to users since 1.9 (via config "shuffle-service-factory.class").

To avoid issues to happen, we may either 
1. fix all the usages of Execution#producedPartitions regarding the async assigning, or 
2. change ShuffleMaster#registerPartitionWithProducer(...) to a sync interface