CI run: https://travis-ci.org/github/apache/flink/jobs/672458481


[ERROR] Tests run: 12, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 2.378 s <<< FAILURE! - in org.apache.flink.runtime.io.network.api.writer.BroadcastRecordWriterTest
[ERROR] testClearBuffersAfterInterruptDuringBlockingBufferRequest(org.apache.flink.runtime.io.network.api.writer.BroadcastRecordWriterTest)  Time elapsed: 1.197 s  <<< FAILURE!
Wanted but not invoked:
bufferProvider.requestBufferBuilderBlocking();
-> at org.apache.flink.runtime.io.network.api.writer.RecordWriterTest.testClearBuffersAfterInterruptDuringBlockingBufferRequest(RecordWriterTest.java:211)
However, there were exactly 2 interactions with this mock:
bufferProvider.requestBufferBuilder();
-> at org.apache.flink.runtime.io.network.api.writer.RecordWriterTest$RecyclingPartitionWriter.tryGetBufferBuilder(RecordWriterTest.java:726)
bufferProvider.requestBufferBuilder();
-> at org.apache.flink.runtime.io.network.api.writer.RecordWriterTest$RecyclingPartitionWriter.tryGetBufferBuilder(RecordWriterTest.java:726)
	at org.apache.flink.runtime.io.network.api.writer.RecordWriterTest.testClearBuffersAfterInterruptDuringBlockingBufferRequest(RecordWriterTest.java:211)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)

