Hey,

There is a feature called disableAutoTypeRegistration which is, from my understanding, should disable the auto-loading classes into Kryo. It seems to work on the Batch API, but I don't see any reference into the DataStream code, and it does not work there. Is it by design? If so, I think its better if it would state it clearly. If not, can I suggest a fix? Something like this:

 


@Override
@PublicEvolving
public TypeSerializer<T> createSerializer(ExecutionConfig config) {
   if (config.hasGenericTypesDisabled()) {
      throw new UnsupportedOperationException(
         "Generic types have been disabled in the ExecutionConfig and type " + this.typeClass.getName() +
         " is treated as a generic type.");
   }
   if(config.isAutoTypeRegistrationDisabled()) {
      if(!config.getRegisteredKryoTypes().contains(this.typeClass)) {
         throw new UnsupportedOperationException(
            "Auto type registration (disableAutoTypeRegistration) have been enabled in the ExecutionConfig and type " + this.typeClass.getName() +
               " is treated as a auto type.");
      }
   }

   return new KryoSerializer<T>(this.typeClass, config);
}


 

 