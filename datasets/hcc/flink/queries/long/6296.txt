Hello,

calling ExecutionEnvironment#getExecutionPlan() prior to ExecutionEnvironment#execute() makes the later fail with the following message if I try to run my job on yarn, i.e. flink run -m yarn-cluster ...:


> Caused by: java.lang.RuntimeException: No new data sinks have been defined since the last execution. The last execution refers to the latest call to 'execute()', 'count()', 'collect()', or 'print()'.
> 	at org.apache.flink.api.java.ExecutionEnvironment.createProgramPlan(ExecutionEnvironment.java:1050)
> 	at org.apache.flink.api.java.ExecutionEnvironment.createProgramPlan(ExecutionEnvironment.java:1032)
> 	at org.apache.flink.client.program.ContextEnvironment.execute(ContextEnvironment.java:59)
> 	at org.apache.flink.api.java.ExecutionEnvironment.execute(ExecutionEnvironment.java:926)



It works fine when executing the job locally (and it works fine locally or even on yarn using the DataStream API, i.e. StreamExecutionEnvironment). 

So far I could track it down, the problem seems the "clearing" behaviour of ContextEnvironment#createProgramPlan(..). This makes me wonder why #getExecutionPlan uses the one parameter version of #createProgramPlan(..). Is "clearing" the sinks really required as part of getExecutionPlan()?

From a code perspective, it seems the same is present on Flink 1.1.5, but I haven't tested it,
P.