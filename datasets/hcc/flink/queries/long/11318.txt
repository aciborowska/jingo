StreamingFileSink does not validate if a file with the same name of the new part file already exists and this could result in overwriting a file.

The BucketingSink perform this kind of validations in the "openNewPartFile" method here: 
https://github.com/apache/flink/blob/master/flink-connectors/flink-connector-filesystem/src/main/java/org/apache/flink/streaming/connectors/fs/bucketing/BucketingSink.java#L549-L561

So this seems to be a regression an in the "old" BucketingSink this works.

 

This can be problematic for example when migrating a job using Bucketing to to use the StreamingFileSink, file could be overwritten.