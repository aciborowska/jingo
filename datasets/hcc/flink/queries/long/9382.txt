The file storage behavior in the FileCache is inconsistent and depends whether we're accessing a file or zipped folder.

In case of a file we return the file returned from the PermanentBlobService as is, in this case the blobserver takes care of deleting the file at some point.
In case of a directory (that is implicitly zipped!) we extract the zip into a separate storage directory and delete the zip afterwards (the deletion in particular is questionable as it interferes with the blob server).

The underlying issue to me is that the responsibilities between the PermanentBlobService and FileCache aren't clearly laid out, and they actually seem a bit redundant.
We may want to change the FIleCache to be a thin wrapper around the PermanentBlobService that only takes care of unzipping directories and setting executable flags.