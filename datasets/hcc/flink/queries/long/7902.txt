Currently, the FlinkKafkaProducer011 uses TypeInformation.of(new TypeHint<State<KafkaTransactionState, KafkaTransactionContext>>() {}) to create a TypeInformation which in turn is used to create a StateDescriptor for the state that the Kafka sink stores.

Behind the scenes, this would be roughly analysed as a PojoType(GenericType<KafkaTransactionState>, GenericType<KafkaTransactionContext>) which means we don't have explicit control over the serialisation format and we also use Kryo (which is the default for GenericTypeInfo). This can be problematic if we want to evolve the state schema in the future or if we want to change Kryo versions.

We should change TwoPhaseCommitSinkFunction to only have this constructor:


public TwoPhaseCommitSinkFunction(TypeSerializer<State<TXN, CONTEXT>> stateSerializer) {


and we should then change the FlinkKafkaProducer011 to hand in a custom-made TypeSerializer for the state.