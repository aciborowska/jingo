This is a problem in the test. Cancelling a task may actually throw an exception (especially interrupted exceptions). The test can be modified to either only call cancel and not call interrupt, or to tolerate exceptions that are followup exceptions of interrupted exceptions. I would prepare a patch for the first approach.

The stack trace of the symptom is blow:

java.lang.RuntimeException: Hashtable closing was interrupted
	at org.apache.flink.runtime.operators.hash.MutableHashTable.close(MutableHashTable.java:652)
	at org.apache.flink.runtime.operators.hash.ReusingBuildFirstHashMatchIterator.close(ReusingBuildFirstHashMatchIterator.java:100)
	at org.apache.flink.runtime.operators.MatchDriver.cleanup(MatchDriver.java:179)
	at org.apache.flink.runtime.operators.testutils.DriverTestBase.testDriverInternal(DriverTestBase.java:245)
	at org.apache.flink.runtime.operators.testutils.DriverTestBase.testDriver(DriverTestBase.java:175)
	at org.apache.flink.runtime.operators.MatchTaskTest$4.run(MatchTaskTest.java:783)
Tests run: 47, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 15.589 sec <<< FAILURE! - in org.apache.flink.runtime.operators.MatchTaskTest
testCancelHashMatchTaskWhileBuildFirst[1](org.apache.flink.runtime.operators.MatchTaskTest)  Time elapsed: 1.029 sec  <<< FAILURE!
java.lang.AssertionError: Test threw an exception even though it was properly canceled.
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.apache.flink.runtime.operators.MatchTaskTest.testCancelHashMatchTaskWhileBuildFirst(MatchTaskTest.java:802)

