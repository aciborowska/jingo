import path location resolution breaks if the containing application context was itself loaded using 
a path that contains '..' as the first component of the path. That is, if the application directory structure is:
root
+--- conf
          +--- spring
+--- bin
+--- run
and the application is started in the bin directory, and the application context is located under conf, and so the 
code to load it is:
        FileSystemXmlApplicationContext config =
            new FileSystemXmlApplicationContext(new String[] 
{ "../conf/app-ctx.xml"}
, true);
then any imported resources using the <import> construct in the application context with location path which is relative
to the application context (in the example above, something like <import resrouce="spring/event.xml"/>
cannot be resolved. 
This is due to the code in StringUtils.cleanPath, which simply strips the '..' prefix  and when the time comes for
loading the imported resources , the createRelative method uses this 'cleaned' path which is missing information, 
rather than the complete path of the 'file' member, and the calculated path becomes: "<root>/bin/conf/spring/event.xml".
This used to work in previous versions of Spring (1.2) 
