Juergen, recent changes on BeanWrapperImpl implementation are what I'm hoping for and I'm very happy with that. Indeed there is no support for mixing editors for maps/lists and their elements, but I can live with that (it is not really that important).
Still, there are some problems left, so I open this issue again (please accept apologies for my impatience  ).
Here is a first problem:
Current version of findCustomEditor() method doesn't work for lists because an InvalidPropertyException with IndexOutOfBoundsException cause is thrown. (I think that same apply on sets and arrays). Problem lies in getPropertyType() method which tries to determine property type based on property value (line 921 of your latest source). But if that value is not in list yet, an IndexOutOfBoundException will emerge. I suppose it could be easily solved by putting line 283 in try/catch block which will ignore InvalidPropertyException. Here is a small example which demonstrates this (exception will be thrown at line 6):
1. SimpleDateFormat dateFormatEur = new SimpleDateFormat("dd.MM.yyyy");
2. CustomDateEditor dateEditorEur = new CustomDateEditor(dateFormatEur, false);    
3. BeanWrapperImpl bw = new BeanWrapperImpl(new Person());
4. bw.registerCustomEditor(null, "friends.birthDate", dateEditorEur);
5. bw.setPropertyValue("friends", new ArrayList());
6. bw.setPropertyValue("friends[0]", new Person());         // InvalidPropertyException
7. bw.setPropertyValue("friends[0].birthDate", "10.10.1980");
And a second one:
Even with above changes implemented, findCustomEditor() method still won't work as expected. Suppose that you register some property editor for property path 'employees.person.birthDate'. If you later try to retrieve it via findCutomEditor() with property path 'employees[id1].person.birthDate ' (note a key), a null will be returned instead of editor registered under path 'employees.person.birthDate'. I think this is wrong behavior.
In attachment can be found a simple tester which demonstrates described problems, and my proposal for findCustomEditor() method implementation which (I hope) fixes it. Also note that I didn't run this implementation against spring's test suite.
Best regards,
Damir Murat