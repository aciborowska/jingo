@Component
public final class SimpleXslTransformerFactory {
    @Autowired
    private StreamSourceFactory streamSourceFactory;
    @Autowired
    private EfgLoggerFactory loggerFactory;
    public Transformer createXslTransformer(Resource xsl) 
{
        Source xslSource = streamSourceFactory.create(xsl);
        Transformer xslTransformer = createXslTransformer(xslSource, TransformerFactory.newInstance());
        xslTransformer.setErrorListener(new LoggingErrorListener());
        return xslTransformer;
    }

    private Transformer createXslTransformer(Source xslSource, TransformerFactory factory) {
        try 
{
            return factory.newTransformer(xslSource);
        }
 catch (TransformerConfigurationException e) 
{
            throw new RuntimeException(e);
        }
    }
    private class LoggingErrorListener implements ErrorListener {
        public void warning(TransformerException exception) throws TransformerException 
{
            loggerFactory.create().warn(ExceptionUtils.getFullStackTrace(exception));
        }

        public void error(TransformerException exception) throws TransformerException {            loggerFactory.create().warn(ExceptionUtils.getFullStackTrace(exception));        }

        public void fatalError(TransformerException exception) throws TransformerException 
{
            loggerFactory.create().warn(ExceptionUtils.getFullStackTrace(exception));
        }
    }
}
When evaluating ClassMetadataReadingVisitor.isIndependent(),
this.enclosingClassName: com.efgfp.raptor.functional.SimpleXslTransformerFactory
this.independentInnerClass: false
therefore (this.enclosingClassName == null || this.independentInnerClass) => false
The list of candidate resources contained, in this order: 
URL [jar:file:/D:/wyd/workspace/raptor/target/exploded/raptor-web-interfaceWeb/WEB-INF/lib/functional-test.jar!/com/efgfp/raptor/functional/SimpleXslTransformerFactory$LoggingErrorListener.class], 
URL [jar:file:/D:/wyd/workspace/raptor/target/exploded/raptor-web-interfaceWeb/WEB-INF/lib/functional-test.jar!/com/efgfp/raptor/functional/SimpleXslTransformerFactory.class], 
Debugging the calls to the ClassMetadataReadingVisitor showed that a call was made:
	   visitInnerClass():72, ClassMetadataReadingVisitor.java
	  accept():-1
	  accept():-1
	  getAnnotationMetadata():52, SimpleMetadataReader.java
name = 
{java.lang.String@5861}
"com/efgfp/raptor/functional/SimpleXslTransformerFactory$LoggingErrorListener"
outerName = 
{java.lang.String@3079}
"com/efgfp/raptor/functional/SimpleXslTransformerFactory"
innerName = 
{java.lang.String@5862}
"LoggingErrorListener"
access = 4101
and that during this call, independentInnerClass was set to null.