I am having problems with BeanWrappers and runtime manipulation of application context beans. I have attached some classes and a test case that fails. The test case class should explain the problem.
Is this a bug or intended behaviour?
-------------------------------------------------------------
public class IndexedPropertyTestCase extends TestCase {
	ClassPathXmlApplicationContext context;
	protected void setUp() 
{ context = new ClassPathXmlApplicationContext("indexedPropertyTestCase.xml");	}

	public void testIt() {
		TestBean testBean = (TestBean) context.getBean("testBean");
		BeanWrapper bw = new BeanWrapperImpl(testBean);
		for (int i = 0; i < 3; i++) 
{	System.out.println(bw.getPropertyValue("parameters[" + i + "].name")); }

		TestParameter[] newParameters = new TestParameter[2];
		newParameters[0] = (TestParameter) bw.getPropertyValue("parameters[0]");
		newParameters[1] = (TestParameter) bw.getPropertyValue("parameters[2]");

		// the following line makes the test case work
//		bw.setWrappedInstance(testBean);

		testBean.setParameters(newParameters);

		for (int i = 0; i < 2; i++) {	System.out.println(bw.getPropertyValue("parameters[" + i + "].name")); }

		assertEquals("param0", bw.getPropertyValue("parameters[0].name"));
		assertEquals("param2", bw.getPropertyValue("parameters[1].name"));
	}
}
----------------------------------------------------
indexedPropertyTestCase.xml:
----------------------------------------------------
...
<beans>
  <bean id="testBean" class="TestBean">
    <property name="parameters">
      <list>
        <bean class="TestParameter">
          <property name="name"><value>param0</value></property>
        </bean>
        <bean class="TestParameter">
          <property name="name"><value>param1</value></property>
        </bean>
        <bean class="TestParameter">
          <property name="name"><value>param2</value></property>
        </bean>
      </list>
    </property>
  </bean>
</beans>
----------------------------------------------------
public class TestBean {
	private TestParameter[] parameters;
	public TestParameter[] getParameters() 
{ return parameters;	}

	public void setParameters(TestParameter[] parameters) 
{	this.parameters = parameters;	}
}
public class TestParameter {
	private String name;
	public String getName() 
{	return name; }

	public void setName(String name) 
{ this.name = name; }
}
