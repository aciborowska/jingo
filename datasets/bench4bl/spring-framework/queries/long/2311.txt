If you setup the url connection like:
	<bean id="mysql-ds"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url">
			<value>
				jdbc:mysql://localhost:3306/test?autoReconnect=true
			</value>
		</property>
		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="username">
			<value>test</value>
		</property>
		<property name="password">
			<value>test</value>
		</property>
	</bean>
When trying to use this datasource you get the following exception:
java.sql.SQLException: No suitable driver
	at java.sql.DriverManager.getConnection(Unknown Source)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:291)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:277)
	at org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriverManager(DriverManagerDataSource.java:259)
.....
This is caused because inside the DriverManagerDataSource.getConnectionFromDriverManager() method spring is calling to:
return DriverManager.getConnection(url, props);
BUT the url contains the spaces and backspaces of the xml file (notice that the url value is indented). So the call should be:
return DriverManager.getConnection(url.trim(), props);
Or even better to "trim" the url when getting it.
A workaround for this is obvious: just type the url without indentation. That is:
			<value>jdbc:mysql://localhost:3306/test?autoReconnect=true</value>
instead of 
			<value>
				jdbc:mysql://localhost:3306/test?autoReconnect=true
			</value>