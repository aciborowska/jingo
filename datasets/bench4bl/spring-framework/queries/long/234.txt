I was creating a PropertyEditor for javax.mail.internet.InternetAddress and arrays of such objects (btw, given that the parsing of such objects is already provided by InternetAddress.parse(), and spring provides its own mail support, I'm surprised this isn't a standard part of spring; but that's another issue...). When I went to configure these custom editors in my application, I was surprised to find the following syntax wasn't valid:
<bean id="customEditorConfigurer" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
  <property name="customEditors">
    <map>
      <entry key="javax.mail.internet.InternetAddress[]">
        <bean class="my.beans.InternetAddressArrayPropertyEditor">
          <property name="strict">
            <value>false</value>
          </property>
        </bean>
      </entry>
    </map>
  </property>
</bean>
Given that the actual ClassEditor could parse "Classname[]" style syntax, I was surprised to find that CustomEditorConfigurer couldn't. While I could certainly use the "[LClassname;" syntax, I think it would be nice to have this feature consistent in Spring whenever a class name is specified as a String. 