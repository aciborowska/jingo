Hello,
Wasn't sure what component to put this under, as the real issue is for sandbox code.
The scripting support (which is very nice, btw) no longer supports dynamically reloadable scripts.  In fact, the objects created are no longer instances of DynamicObject.  To verify, the unit test for GroovyScriptFactoryTests fails for these checks.
The reasons this functionality is no longer working is the default suggested way to create a script object in the app context is to use the following bean definition:
	<bean id="thing" singleton="true"
		factory-bean="groovyScriptFactory"
		factory-method="create">
		<constructor-arg index="0"><value>testing/Foo.groovy</value></constructor-arg>
	</bean>
The use of factory-method, however, is not compatible with the InstantiationAwareBeanPostProcessor interface.  This interface ignores these types of beans.  The AbstractScriptFactory extends AbstractAutoProxyCreator, which is in fact a InstantiationAwareBeanPostProcessor.
Therefore, script objects that use this factory-method creation mechanism, are no longer able to be postProcessBeforeInstantiation.  This is where the dynamic reloadable TargetSource for the script was created.
There are a bunch of different ways of solving this issue.  However, because the chain of events is quite big, I'd thought I would let you and Rod (who originally wrote this) know about this.  I'd love to see this functionality back.
Thanks!
Seth