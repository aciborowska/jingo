I wish to inject a singleton hash map via constructor injection. If my constructor signature includes a typed generic collection  declaration.
 public TypedGenericConstructor(Map<String, String> state,Map<String, String> state2) 
An injected singleton map here becomes 2 seperate objects after class construction.
 If my constructor signature includes a non-typed generic collection  declaration.
 public NonTypedGenericConstructor(Map state,Map state2)
An injected singleton map here is the same object after class construction.
<beans>
	<bean id="state" class="java.util.concurrent.ConcurrentHashMap"
		singleton="true" />
	<bean id="nonTyped" class="test2.NonTypedGenericConstructor">
		<constructor-arg ref="state" />
		<constructor-arg ref="state" />
	</bean>
	<bean id="typed" class="test2.TypedGenericConstructor">
		<constructor-arg ref="state" />
		<constructor-arg ref="state" />
	</bean>
</beans>
public class TypedGenericConstructor {
    private Map<String, String> state;
    private Map<String, String> state2;
    public TypedGenericConstructor(Map<String, String> state,Map<String, String> state2) 
{
        this.state = state;
        this.state2 = state2;
    }
}
public class NonTypedGenericConstructor {
    private Map<String, String> state;
    private Map<String, String> state2;
    public NonTypedGenericConstructor(Map state,Map state2) 
{
        this.state = state;
        this.state2 = state2;

    }
}
