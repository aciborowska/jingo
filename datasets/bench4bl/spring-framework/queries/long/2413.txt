Upgrading from 2.0RC2 to 2.0RC3; aside from a couple of moved classes, everything went smooth, until we turned on DEBUG for org.springframework.
This resulting in a NPE:
java.lang.NullPointerException
	at org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor$TransactionAttributeSourcePointcut.getTransactionAttributeSource(TransactionAttributeSourceAdvisor.java:102)
	at org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor$TransactionAttributeSourcePointcut.hashCode(TransactionAttributeSourceAdvisor.java:121)
	at java.lang.Object.toString(Object.java:209)
	at java.lang.String.valueOf(String.java:2615)
	at java.lang.StringBuffer.append(StringBuffer.java:220)
	at org.springframework.aop.support.AbstractPointcutAdvisor.toString(AbstractPointcutAdvisor.java:71)
	at java.lang.String.valueOf(String.java:2615)
	at java.lang.StringBuffer.append(StringBuffer.java:220)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:383)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:242)
...the bean that triggered this was:
 <bean id="apTransactionAttributeSourceAdvisor"
        class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
        <property name="transactionInterceptor" ref="apTxInterceptor" />
        <property name="classFilter">
            <bean class="org.springframework.aop.aspectj.TypePatternClassFilter">
                <property name="typePattern" value="bridges.authPortal..*" />
            </bean>
        </property>
    </bean>
It looks like AbstractAutowireCapableBeanFactory logs a debug message (line 383) "Eagerly caching...", which forces a toString on the instantiated bean; since the TransactionAttributeSourceAdvisor.TransactionAttributeSourcePointcut does not have a toString() method, it uses Object.toString, which calls hashCode(), triggering the NPE (as the interceptor hasn't been injected yet).
Possible solutions are to remove the hashCode (presumably it is there for a reason though) or add a toString() method to TransactionAttributeSourceAdvisor.TransactionAttributeSourcePointcut
