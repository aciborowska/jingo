Since there is no reply (as of writing) to my forum post, I decide to bring it here, as the out-of-the-box quality of Spring is affected:
http://forum.springframework.org/viewtopic.php?t=5583
Summary: The read-only flag of JDBC connections (from underlying connection pool) may not be properly reset when using "after_transaction" Hibernate release mode (Spring 1.2 default). Subsequent read-write transaction will result in a SQLException, if the connection pool decides to give it the connection which is not properly reset after previous use.
For my configuration, the exception encountered is:
org.springframework.jdbc.UncategorizedSQLException: (HibernateTransactionManager): encountered SQLException [ERROR: transaction is read-only]; nested exception is java.sql.SQLException: ERROR: transaction is read-only
Possible solutions may include the choosing of less aggressive "on_close" as the default Hibernate release mode for Spring, or the addition of some kinds of mechanism to ensure the read-only flag of JDBC connections are reset properly when they are being closed in different situations, in this case, org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider.