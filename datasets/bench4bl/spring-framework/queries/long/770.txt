JDBCAccessor forces JDBC connection to be created during initialization:
    public void afterPropertiesSet() {
        if (getDataSource() == null) 
{

            throw new IllegalArgumentException("dataSource is required");

        }

        getExceptionTranslator();
    }
getExceptionTranslator() is the trigger of a call-chain that down the call stack creates a connection to get metadata from the database (in order to determine database vendor, required to select the appropriate exception translator implementation).
WebSphere 5.1.1 and potentially other application servers don't allow XA connections used in local transactions to be mixed with XA connections created within a JTA transaction if all are created by the same DataSource. 
Since bean context initialization occurs before start of a JTA transaction, the JDBCTemplate class cannot be wired (or implicitly wired through use of JdbcDaoSupport, that creates a JDBCTemplate in response to injection of a datasource) by Spring, when WebSphere 5 and XA datasources are used.