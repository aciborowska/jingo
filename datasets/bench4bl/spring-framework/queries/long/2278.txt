In RC1, when the DefaultAdvisorAutoProxyCreator is initialized, it finds and initializes all candidate advisors (code is in AbstractAdvisorAutoProxyCreator.setBeanFactory()). This code has the effect of initializing my Hibernate SessionFactoryBean before any other beans come along and need it. 
In RC2, the code to pre-load candidate advisors has been removed. What this seems to produce is a circular dependency. When my application beans try to request the Hibernate SessionFactoryBean, it goes through a lot of dependencies, including the AutoProxyCreator, which depends on the TransactionSourceAdvisor, which depends on the TransactionInterceptor, which depends on the SessionFactoryBean. And so I get a NPE trying to instantiate the autoproxy creator.
This only seems to happen if the first bean in the XML file references the session factory.  If I move the bean that references the session factory to below it, the problem goes away.  