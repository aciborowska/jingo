Speaking about AbstractDependencyInjectionSpringContextTests and AbstractTransactionalSpringContextTests.
AbstractDependencyInjectionSpringContextTests.setUp() does things
1. Wires properties of this
2. Calls virtual onSetUp()
AbstractTransactionalSpringContextTests.onSetUp() looks at transactionManager property. If transactionManager is null, then test is executed not in transaction.
So. If autowire is disabled, it is not possible to set transactionManager before execution of AbstractTransactionalSpringContextTests.onSetUp() (without hacking, like overriding getContext()), so impossible to run tests in transaction.
===
Proper solution (I think) is to extract following lines of AbstractDependencyInjectionSpringContextTests:setUp
===
        if (isPopulateProtectedVariables()) {
            if (this.managedVariableNames == null) 
{
                initManagedVariableNames();
            }
            populateProtectedVariables();
        }
        else if (getAutowireMode() != AUTOWIRE_NO) 
{
            this.applicationContext.getBeanFactory().autowireBeanProperties(
                this, getAutowireMode(), isDependencyCheck());
        }
===
into virtual method wireProperties(), so anyone could override it and populate transactionManager property before AbstractTransactionalSpringContextTests.onSetUp().
Version is latest CVS.
This issue relates to SPR-1428.