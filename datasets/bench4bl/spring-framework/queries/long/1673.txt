The error arises when you try to construct a ApplicationContext with 
ClassPathXmlApplicationContext with  the xmlparser.jar from oracle (toplink) on the 
classpath:
Unable to locate NamespaceHandler for namespace [].
org.springframework.beans.factory.BeanDefinitionStoreException: Unable to locate NamespaceHandler for namespace [].
	at org.springframework.beans.factory.xml.DefaultXmlBeanDefinitionParser.parseCustomElement(DefaultXmlBeanDefinitionParser.java:411)
...
If you try to get the namespaceuri on a DOM-Element constructed with the 
oracle-XML Parser normally shipped with toplink, the default-namespace is not 
represented through null but through the empty string. (When calling 
org.w3c.dom.Node.getNamespaceURI()). The Java5 javadoc states:
 "The namespace URI of this node, or null if it is unspecified (see ). "
The error happens because 
org.springframework.beans.factory.xml.DefaultXmlBeanDefinitionParser.isDefaultNamespace
doesnt recognize the empty string for the namespaceUri as the default-namespace.
This must not be a spring bug but merely a false implementation of the xmlparser of oracle.
Since the toplink libraries must have this parser to work properly it must be on the classpath 
when using toplink. I didn't found a way how to stop it from being used from other modules.
Maybe our patch makes spring more stable. It defines the empty string as uri for the default-Namespace.
Maybe the behaviour can be controlled through a system-property?
=======cut here=======
â€” org/springframework/beans/factory/xml/DefaultXmlBeanDefinitionParser.java	(revision 2)
+++ org/springframework/beans/factory/xml/DefaultXmlBeanDefinitionParser.java	(working copy)
@@ -379,7 +379,7 @@
 	}
 	private boolean isDefaultNamespace(String namespaceUri) 
{
-		return namespaceUri == null || BEANS_NAMESPACE_URI.equals(namespaceUri);
+		return namespaceUri == null || "".equals(namespaceUri) || BEANS_NAMESPACE_URI.equals(namespaceUri);
 	}

 	private int parseDefaultElement(Element ele) {
=======cut here=======
We dont know what effect it would have on other parts - its simply a suggestion.