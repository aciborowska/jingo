org.springframework.transaction.interceptor.TransactionInterceptor.invoke() can hide the original exception in the following situation:
1. Proxied object throws an exception that doesn't match the rollbackFor pattern, forcing a premature commit of the transaction;
2. An exception occurs during transaction commit
It is the second exception that is seen, which can often be misleading; at a minimum, the handling logic should show the user both exceptions.
catch (Throwable ex) 
{
			// target invocation exception			
			doCloseTransactionAfterThrowing(txInfo, ex);			
			throw ex;
		}

...to...
catch (Throwable ex) {
			// target invocation exception
			try
			{
				doCloseTransactionAfterThrowing(txInfo, ex);
			}
			catch( Throwable t )
			{
				logger.error( "Error closing transaction after throwing",ex );
                                throw t;
			}
			throw ex;
		}
