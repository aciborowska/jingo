I am playing with Spring's webservice support.
See forum: http://forum.springframework.org/viewtopic.php?p=11579#11579
I was outputting debug information and I stumpled on an exception.
First the stack-trace:
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ediDao' defined in ServletConte
eptionsException: PropertyAccessExceptionsException (1 errors); nested propertyAccessExceptions are: [org.springframewo
ion:  toString - none defined]
PropertyAccessExceptionsException (1 errors)
org.springframework.beans.MethodInvocationException: Property 'service' threw exception; nested exception is javax.xml.
javax.xml.rpc.JAXRPCException: Cannot find operation:  toString - none defined
        at org.apache.axis.client.Call.setOperation(Call.java:1253)
        at org.apache.axis.client.AxisClientProxy.invoke(AxisClientProxy.java:184)
        at $Proxy0.toString(Unknown Source)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.springframework.remoting.rmi.RmiClientInterceptorUtils.doInvoke(RmiClientInterceptorUtils.java:98)
        at org.springframework.remoting.rmi.RmiClientInterceptorUtils.invoke(RmiClientInterceptorUtils.java:67)
        at org.springframework.remoting.jaxrpc.JaxRpcPortClientInterceptor.invoke(JaxRpcPortClientInterceptor.java:341)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:144)
        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:174)
        at $Proxy1.toString(Unknown Source)
        at dk.webfragt.access.edi.EDIDao.setService(EDIDao.java:49)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:324)
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:779)
And my spring.xml file
	<bean id="ediWS" class="dk.webfragt.access.edi.EDIWebServiceFactory">
		<property name="serviceInterface">
			<value>dk.webfragt.access.edi.Version</value>
		</property>
		<property name="wsdlDocumentUrl">
			<value>http://localhost:8181/axis/services/Version?wsdl</value>
		</property>
		<property name="namespaceUri">
			<value>http://localhost:8181/axis/services/Version</value>
		</property>
		<property name="serviceName">
			<value>VersionService</value>
		</property>
		<property name="portName">
			<value>Version</value>
		</property>
	</bean>
And the code that causes this error
	public void setService(Version v) 
{
		logger.debug("Setting service: " + v);
		this.ver = v;
	}



The problem:
Using Spring JAX-RPC will throw an exception if using toString() on the service interface. In my code above I log to debug the service interface (Version). If I remove the debug code line it works fine.
Since Version is an interface I can not implemenet a toString method. 
I think Spring should have a default toString() that output the  JAX-RPC Service/Port name.