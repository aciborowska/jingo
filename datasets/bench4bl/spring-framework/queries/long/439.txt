situation:

a transaction is begun.
different objects are persisted or removed from the database.
the transaction is rolled back.

Problem:

The database operations are first put into hibernate's session cache. And they won't be executed/removed until session.flush() or session.clear() are called. The TransactionInterceptor only issues a rollback on the Transaction. Therefore flushing the session after the transaction is over will execute the database operations even though they should have been rolled back.

I have fixed these issues by making changes to HibernateTransactionManager, i.e. flushing the session and setting the sessionHolder.rollbackOnly to false before rollback.