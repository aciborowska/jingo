Spring's BeanFactory uses the UrlResource to reference a resource. It does this by using the String representation of a resource (instead of the URL object returned by Class.getResource()).
Orion ApplicationServer (but other appserver may experience the same behaviour) returns a jndi://.. String, which it cannot interpret later on. 
The offending line:
resources[i] = url.toExternalForm();
Proposed solution: use object-references (instead of Strings) to locate resources.
Stacktrace:
org.springframework.beans.factory.BeanDefinitionStoreException: Bad URL when loading definition; nested exception is java.net.MalformedURLException: unknown protocol: jndi
java.net.MalformedURLException: unknown protocol: jndi
	at java.net.URL.<init>(URL.java:544)
	at java.net.URL.<init>(URL.java:434)
	at java.net.URL.<init>(URL.java:383)
	at org.springframework.core.io.UrlResource.<init>(UrlResource.java:54)
	at org.springframework.beans.factory.access.SingletonBeanFactoryLocator.createDefinition(SingletonBeanFactoryLocator.java:477)
	at org.springframework.beans.factory.access.SingletonBeanFactoryLocator.useBeanFactory(SingletonBeanFactoryLocator.java:385)