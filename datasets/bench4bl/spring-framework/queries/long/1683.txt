After returning advice in AOP 2.0 just doesn't work in M2. This is my configuration:
    <aop:config>
        <aop:pointcut id="authenticationMethodwithString" expression="execution(boolean *..SecurityManager.authenticate(..)) and args(username,java.lang.String)"/>
        <aop:pointcut id="authenticationMethodwithInt" expression="execution(boolean *..SecurityManager.authenticate(..)) and args(userId,java.lang.String)"/>
        <aop:aspect ref="authenticationLogger">
            <aop:advice pointcut-ref="authenticationMethodwithString" method="logAuthenticationAttempt(java.lang.String)" kind="before"/>
            <aop:advice pointcut-ref="authenticationMethodwithInt" method="logAuthenticationAttempt(int)" kind="before"/>
            <aop:advice pointcut="execution(boolean *..SecurityManager.authenticate(..))" method="handleAuthenticationOutcome(boolean)" kind="afterReturning" returning="result" arg-names="result"/>
        </aop:aspect>
    </aop:config>
This is the target:
public class SecurityManager {
    public boolean authenticate(String username, String password) 
{
//        return RandomUtils.nextBoolean();
        return false;
    }

    public boolean authenticate(int userId, String password) 
{
        return RandomUtils.nextBoolean();
    }
}
This is the POJO advice:
public class AuthenticationLogger {
    private static Log log = LogFactory.getLog(AuthenticationLogger.class);
    public void logAuthenticationAttempt(int userId) 
{
        log.info("User ID [" + userId + "] attempts to authenticate.");
    }

    public void logAuthenticationAttempt(String username) 
{
        log.info("User [" + username + "] attempts to authenticate.");
    }

    public void handleAuthenticationOutcome(boolean result) 
{
        handleAuthenticationOutcome(result, "someUser");
    }

    public void handleAuthenticationOutcome(boolean result, String username) {
        if (!result) 
{
            log.info("User [" + username + "] failed to log in.");
        }
    }
}
I don't get any exception, toggling the debug option of the compiler doesn't make it better or worse. The before advice is called while the afterReturning advice just isn't called. I don't know what wrong. Incidentally the AfterReturningAdviceBindingTests doesn't work in the M2 release because of a problem with the XML file.