It took me much time to find a stupid bug due to AbstractTransactionAspect  that hides an Exception :
Bug was an incomplete classpath, and exception a NoClassDefFoundError :
AbstractTransactionAspect is used to create a transaction. But due to incomplete classpath the "createTransactionIfNecessary" fails with NoClassDefFoundError.
The aspect executes afterthrowing(Throwable t). 
This methods calls TransactionAspectSupport.currentTransactionInfo() that fails due to no transaction in threadlocal. The error message "No transaction aspect-managed TransactionStatus in scope" is logged but has no real value to find the bug.
Simply adding a DEBUG log in afterthrowing can ensure the exception will not be dropped and help users find the initial source of a bug.
A better solution should be to make afterthrowing not creating a new Exception (try/catch)
Just for info, my conf was wrong due to missing aopalliance.jar. Wasn't this jar included in spring-aop.jar in a prior version ?