When building a HandlerInterceptor to provide common Model data across a templated site, it would seem that ModelAndView objects with a null Model do not provide for addObject() to add data.
Nor can ModelAndView.Model be set, as there is only a getter.
I'm implementing a common menu system across a templated site and using HandlerInterceptors would seem the best factoring in which to place this HTML generation. Tiles approaches seemed at first look not to get the 'current' request path needed to determine location within the menu.
Currently I'm overriding referenceData() in several AbstractWizardFormControllers. If not overridden these would return null maps and expose the insufficient writability of ModelAndView.Model.
â€”
I'm getting the feeling that HandlerInterceptors/ Adapters are really of key importance to site design, not just controllers.
When you consider control functionality common across the site, this would seem to factor to HandlerInterceptors. Up to 50% of the site's control could end up here. Menus, common logon/ search elements, restricted area control, advert/ subidiary displays, etc.
All the common/ templated elements, it would seem, should end up as HandlerInterceptors. So this could do with a comprehensive ability to edit/ replace the returned ModelAndView.
Cheers,
Thomas