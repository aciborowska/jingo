In the "spring-framework-1.2.1-with-dependencies" distribution, the spring.jar in the "dist" directory includes the org.springframework.jndi.* classes.  However, the spring-jdbc.jar does not include the jndi classes.  No other "modular" jar appears to contain the JNDI classes.
The maven.xml file specifies that the org.springframework.jndi.* classes should be included in the spring-jdbc.jar.  But, the build.xml file does not include the jndi classes in the spring-jdbc.jar.
I would think that there probably shouldn't be a discrepancy in the jars that the build.xml and the maven.xml produce.
If there is supposed to be a discrepancy in the jdbc jar that each of the build processes produce, can the org.springframework.jndi.* classes be included in one of the "modular" jars rather than only in the master 1.6mb distribution spring.jar?
MAVEN.XML --->
<jar jarfile="$
{maven.build.dir}
/spring-jdbc-$
{pom.currentVersion}
.jar">
<fileset dir="$
{maven.build.dest}
">
   <include name="org/springframework/aop/**"/>
   <include name="org/springframework/beans/**"/>
   <include name="org/springframework/core/**"/>
   <include name="org/springframework/dao/**"/>
   <include name="org/springframework/jdbc/**"/>
   <include name="org/springframework/jndi/**"/>
   <include name="org/springframework/orm/**"/>
   <include name="org/springframework/transaction/**"/>
   <include name="org/springframework/util/*"/>
</fileset>
</jar>
BUILD.XML --->
<jar jarfile="$
{dist.dir}
/spring-jdbc.jar">
<fileset dir="$
{target.classes.dir}
">
   <include name="org/springframework/jdbc/**"/>
</fileset>
<manifest>
<attribute name="Implementation-Title" value="$
{spring-title}
"/>
<attribute name="Implementation-Version" value="$
{spring-version}"/>
<attribute name="Spring-Version" value="${spring-version}
"/>
</manifest>
</jar>