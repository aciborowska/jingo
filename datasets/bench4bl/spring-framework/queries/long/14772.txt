Hi,
I modified this example to expose a REST endpoint that creates a Flux<ServerSentEvent>. The messages are sent by a ReplayProcessor invoked from another REST endpoint that creates a ServerSentEvent from the parameter.






@RestController




public class HomeController {




 




    private FluxProcessor<ServerSentEvent<String>, ServerSentEvent<String>> replayProcessor =




            ReplayProcessor.<ServerSentEvent<String>>create().serialize();




 




    @GetMapping("/{val}")




    public void receive(@PathVariable("val") final String s) {




        replayProcessor.onNext(ServerSentEvent.builder(s).build());




    }




 




	@RequestMapping(value = "/")




	public Flux<ServerSentEvent<String>> starter() {




        return replayProcessor.log("starter");




	}




}







When I open the SSE endpoint in a browser tab and send messages with the correct URL opened in a second tab, I don't receive anything on SSE side when I run the application with Tomcat. With netty I can receive some messages but the onNext() method randomly blocks and some messages are lost.
Also note that if I switch to an EmitterProcessor, all messages are lost also with Netty while I'm expecting the same behavior between the two implementations here.