While working on a new patch for issue SPR-2539 which uses LocalVariableTableParameterNameDiscover (LVTPND) instead of my own ParameterNamesExtractor to add support for constructor injection using parameter names I find some bugs in LVTPND. 
First of all LVTPND doesn't work with static methods. The LVTPND version in HEAD always skips the first local variable (which is 'this' for instance methods). This doesn't work for static methods.
Secondly, LVTPND cannot handle long and double parameters correctly. Variables of these types occupy two local variable slots (becuase they need 64 bits). If you have the instance method foo(long x, double d) visitLocalVariable() will be called with the (index, name) values (0, this), (2, x) and (4,d). This means that you cannot rely on the index variable to determine the index of the parameter.
I'll attach a patch which fixes these issues.