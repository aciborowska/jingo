I have also noticed a high performance degradation from Spring 1.2.8 to Spring 2.0.1 with heavy use of prototype beans. I have attached a very simple test application which creates 100,000 prototype beans without multithreading and generated the following results:
Spring 1.2.8       2437ms
Spring 2.0 RC1 2813ms
Spring 2.0 RC2 3015ms
Spring 2.0 RC3 4515ms
Spring 2.0 RC4 4532ms
Spring 2.0          4594ms
Spring 2.0.1       4788ms
Profiling shows that about 30% of each bean creation is spent in the constructor of org.springframework.beans.SimpleTypeConverter called by the constructor of org.springframework.beans.factory.support.BeanDefinitionValueResolver during ...applyPropertyValues().
I think the main reason for the performance loss is the registration of custom editors in the constructor of BeanDefinitionValueResolver added in revision 1.12:
	public BeanDefinitionValueResolver(AbstractBeanFactory beanFactory, String beanName, BeanDefinition beanDefinition) 
        {
	        this.beanName = beanName;
		this.beanDefinition = beanDefinition;
		this.beanFactory = beanFactory;
		beanFactory.registerCustomEditors(this.typeConverter);
	}

Please look at the screenshot of my profiling session.
We can not upgrade our production system from Spring 1.2.8 to Spring 2.0.1, because the load of our system would increase to high.
I am willing to help, but I need comments from the architects.
This is a duplicate of SPR-2772 with a changed issue type and a higher priority, because of missing feedback so far.