See this forum thread:
http://forum.springframework.org/viewtopic.php?t=1166
In ProxyFactoryBean, if you proxy a prototype by feeding the proxy factory a PrototypeTargetSource yourself, the getObjectType() method will work fine, as it will query the PrototypeTargetSource instance. On the other hand, if you rely on instead feeding the target bean name as the last name in the list of interceptors, the logic is broken. In the prototype case, only on demand (when getObject is called) is a SingletonTargetSource created to wrap the target. This means that getObjectType() will throw a NullPointerException, as the targetsource will not have been created yet.
The solution is to either from the beginning create a PrototypeTargetSource even if the target is passed in as the name, or alternately create a PrototypeTargetSource on demand for either method (it would have to be synchronize though to do this obviously), which would save creating these PrototypeTargetSources if the proxy was never used, in the same vein as there is code to avoid creating the advisor chain earlier then it has to, for prototypes.