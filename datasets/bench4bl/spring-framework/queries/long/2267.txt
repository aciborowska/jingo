A form:select tag creates a select box where all items are selected, not just the correct one. This may appear as if just the last item is selected depending on the browser. Firefox 1.5 shows only the last item selected, but looking at the HTML source shows that every items includes selected="selected".
Problem is caused by a bug in SelectedValueComparator.exhaustiveCompare(Object., Object, PropertyEditor).
	private static boolean exhaustiveCompare(Object value, Object candidate, PropertyEditor propertyEditor) {
		if (value instanceof LabeledEnum) {
			String enumCodeAtString = ObjectUtils.getDisplayString(((LabeledEnum) value).getCode());
			if (enumCodeAtString.equals(ObjectUtils.getDisplayString(candidate))) 
{
				return true;
			}
		}
		else if (ObjectUtils.getDisplayString(value).equals(ObjectUtils.getDisplayString(candidate))) 
{
			return true;
		}
		else if (propertyEditor != null && candidate instanceof String) {
			// try PE-based comparison (PE should not be allowed to escape creating thread)
			Object originalValue = propertyEditor.getValue();
			try {
				String candidateAsString = (String) candidate;
				propertyEditor.setAsText(candidateAsString);  <<<<<<<<<<<< setAsText(candidateAsString)
				if (ObjectUtils.nullSafeEquals(value, propertyEditor.getValue())) 
{
					return true;
				}

				if (propertyEditor.getValue() != null) 
{
					return ObjectUtils.nullSafeEquals(candidateAsString, propertyEditor.getAsText()); <<<<< compare candidateAsString with getAsText(). This will always return true
				}
			}
			finally 
{
				propertyEditor.setValue(originalValue);
			}
		}
		return false;
	}
As I noted in another bug related to form:select, I would have thought that this compare would be done using the itemValue property instead of the complicated tests that are used. JMHO.
