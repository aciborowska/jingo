From the latest in CVS HEAD 
BeanDefinitionReaderUtils.java 
/****
53  if (parent == null) {
54    if (beanClass != null) 
{
55  	 return new RootBeanDefinition(beanClass, cargs, pvs);
56     }
57     else 
{
58  	 return new RootBeanDefinition(className, cargs, pvs);
59     }
60  }
61  else {
62   if (beanClass != null) 
{
63  	return new ChildBeanDefinition(parent, beanClass, cargs, pvs);
64   }
65   else 
{
66  	return new ChildBeanDefinition(parent, className, cargs, pvs);
67   }
68  }
*****/
According to the above,
When I have a default Parent view defined in the xml say "parentView" on  the ResourceBundleViewResolver and in the resource bundle, the definition is "parentView.class=net...view.JstlView" 
Line 63 gets executed with return type as ChildDefinition with the parent = the same as the default parent View  
This  results in an exception being thrown in AbstractFactorBean.java in method  getMergedBeanDefinition , lines 546-557. 
/** From AbstractFactorBean.java ****
546  else if (bd instanceof ChildBeanDefinition) {
547 	ChildBeanDefinition cbd = (ChildBeanDefinition) bd;
548 	RootBeanDefinition pbd = null;
549 	if (!beanName.equals(cbd.getParentName())) 
{
550 	  pbd = getMergedBeanDefinition(cbd.getParentName(), true);
551 	}
552 	else {
553 	  if (getParentBeanFactory() instanceof AbstractBeanFactory) 
{
554 	      pbd = ((AbstractBeanFactory) getParentBeanFactory()).getMergedBeanDefinition(cbd.getParentName(), true);
555 	  }
556 	  else 
{
557 		throw new NoSuchBeanDefinitionException(cbd.getParentName(),
558  "Parent name '" + cbd.getParentName() +
559  "' is equal to bean name '" + beanName +
560  "' - cannot be resolved without an AbstractBeanFactory parent");
561 	  }
562     }
******/
Since "parentView" is a child definition. Line 549 will be true and 553 will be executed. Since the ParentBeanFactory is an instance of ApplicationContext, error is thrown at line 557 and the view is not rendered. 
As a temp fix, I changed line 63 to return RootBeanDefinition and it works fine. However, a proper sol may be perhaps to indicate to BeanDefinitionReaderUtils that the concerned prefix is root as the class def is from the defaultParentView.
Thanks
Shishir
