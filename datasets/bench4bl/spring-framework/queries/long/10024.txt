In following scenario:






public abstract class AbstractCrudController<T> {




 




   @RequestMapping(method = POST)




   @ResponseStatus(CREATED)




   @ResponseBody




   public T create(@RequestBody T entity) {




      return getService().save(entity);




   }




}   




 




@RequestMapping("api/tests")




public class EmptyCrudController extends AbstractCrudController<TestEntity> {




}






The request processing fails.
The issue is introduced by a change in the RequestResponseBodyMethodProcessor's
"resolveArgument" method.
Before it was : 






Object argument = readWithMessageConverters(webRequest, parameter, parameter.getParameterType());






Now it's changed to :






Object argument = readWithMessageConverters(webRequest, parameter, parameter.getGenericParameterType());





