Hi,
I am trying to use DebugInterceptor for the whole of my web application.  To achieve that I have created proxies using DefaultAdvisorAutoProxyCreator and am applying a DefaultPointcutAdvisor with pointcut as TruePointcut and advice as DebugInterceptor.  Here is how my Spring configuration file looks like:
===
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean id="defaultAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<constructor-arg type="org.springframework.aop.Pointcut">
			<!-- True pointcut as pointcut -->
			<ref local="truePointcut" />
		</constructor-arg>
		<constructor-arg type="org.aopalliance.aop.Advice">
			<!-- Define the advisor as the DebugInterceptor -->
			<ref local="debugInterceptor" />
		</constructor-arg>
	</bean>
	<bean id="truePointcut" class="org.springframework.aop.TruePointcut" />
	<bean id="debugInterceptor" class="org.springframework.aop.interceptor.DebugInterceptor" />
</beans>
===
The application deploys with no errors and application works well without the proxy creator and advisor in place.  It is when I introduce the above configuration, the handler cannot find mapping for /login.htm (the start page for my application) or for that matter any mapping.  Following is an excerpt of the log I see:
...
[2006-06-20 10:03:47,445] DEBUG:[org.springframework.web.servlet.DispatcherServlet]Testing handler map [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping@19ad677] in DispatcherServlet with name 'edison'
[2006-06-20 10:03:47,445] DEBUG:[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping$$EnhancerByCGLIB$$8e8902d3]Looking up handler for [/login.htm]
[2006-06-20 10:03:47,445] DEBUG:[org.springframework.web.servlet.DispatcherServlet]No handler found in getLastModified
[2006-06-20 10:03:47,445] DEBUG:[org.springframework.web.servlet.DispatcherServlet]DispatcherServlet with name 'edison' received request for [/login.htm]
[2006-06-20 10:03:47,445] DEBUG:[org.springframework.aop.interceptor.DebugInterceptor]Entering invocation: method 'toString', arguments []; target is of class [org.spring
framework.web.servlet.handler.SimpleUrlHandlerMapping]; count=73
[2006-06-20 10:03:47,455] DEBUG:[org.springframework.aop.interceptor.DebugInterceptor]Exiting invocation: method 'toString', arguments []; target is of class [org.springf
ramework.web.servlet.handler.SimpleUrlHandlerMapping]; count=73
[2006-06-20 10:03:47,455] DEBUG:[org.springframework.web.servlet.DispatcherServlet]Testing handler map [org.springframework.web.servlet.handler.SimpleUrlHandlerMapping@19
ad677] in DispatcherServlet with name 'edison'
[2006-06-20 10:03:47,455] DEBUG:[org.springframework.web.servlet.handler.SimpleUrlHandlerMapping$$EnhancerByCGLIB$$8e8902d3]Looking up handler for [/login.htm]
[2006-06-20 10:03:47,455] WARN:[org.springframework.web.servlet.PageNotFound]No mapping for [/login.htm] in DispatcherServlet with name 'edison'
[2006-06-20 10:03:47,455] DEBUG:[org.springframework.web.servlet.DispatcherServlet]Successfully completed request
...
===
FYI: 'edison' is the servlet name for Spring's dispatcher servlet.
I have tried replacing DefaultAdvisorAutoProxyCreator with BeanNameAutoProxyCreator and the same issue arises when I introduce the "Controller" beans in the list of possible beanNames.  In one of the postings at another forum, a suggestion was made to include org.springframework.web. in the list of classes to be advised when including the controller because the target is in Spring framework's web package, so I used RegexpMethodPointcutAdvisor to define the application package names and include Spring's web package.  The configuration then included:
<bean id="debugAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
	<property name="advice">
		<ref local="debugInterceptor" />
	</property>
	<property name="patterns">
		<list>
		       <value>com.hmco.*</value>
		       <value>org.springframework.web.*</value>
		</list>
	</property>
</bean>
but that did not resolve the issue either.
I have also tried upgrading the spring.jar from version 1.2.6 to version 1.2.8 and had the same result.
Either I am not following the some of the recommended steps or there seems to be a bug in the SimpleUrlHandlerMapping proxy creation.
Please advise.
â€“ Vinay
FYI:  I have posted this issue on Spring AOP forum and no has responded to it (http://forum.springframework.org/showthread.php?t=25789)