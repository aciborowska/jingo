Using Spring 4.1.8.RELEASE, testing a controller method with a response.setIntHeader('Content-length', 5) throws the following Exception






java.lang.Integer cannot be cast to java.lang.String




java.lang.ClassCastException: java.lang.Integer cannot be cast to java.lang.String




	at org.springframework.mock.web.MockHttpServletResponse.setSpecialHeader(MockHttpServletResponse.java:513)







As it seems to be a valid use case to manually set a Content-length header with an integer, the cast of the Object value to String type  inside the setSpecialHeader method should be conditional.






setContentLength(Integer.parseInt((String) value));







I have supplied a referenceURL with an example app/test case that shows the unexpected behavior. It's a gradle/grails project that can be run with ./gradlew test 