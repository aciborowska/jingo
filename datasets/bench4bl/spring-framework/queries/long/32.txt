BeanWrapperImpl returns old values for nested properties after a new bean has been set using setWrappedInstance(). The following test will demonstrate this:
	public void testNewWrappedInstanceNestedPropertyValuesGet() 
{
		BeanWrapper bw = new BeanWrapperImpl();
		
		TestBean t = new TestBean("Tony", 50);
		t.setSpouse(new TestBean("Sue", 40));
		bw.setWrappedInstance(t);
		assertEquals("Bean wrapper returns wrong nested property value", new Integer(t.getSpouse().getAge()), bw.getPropertyValue("spouse.age"));
		
		TestBean u = new TestBean("Udo", 30);
		u.setSpouse(new TestBean("Vera", 20));
		bw.setWrappedInstance(u);
		assertEquals("Bean wrapper returns cached nested property value", new Integer(u.getSpouse().getAge()), bw.getPropertyValue("spouse.age"));
	}

The second assertEquals will fail. The reason is that the wrapper doesn't do anything about the nested bean wrappers that may be cached in this.nestedBeanWrappers. The simplest solution is to simply set the latter to null in the setWrappedInstance method. I will attach a patch created using Eclipse 3.0M6.
A more sophisticated approach would be to go through all nested wrappers and replace the beans they wrap. This might improve performance, at the cost of increasing the amount of code.