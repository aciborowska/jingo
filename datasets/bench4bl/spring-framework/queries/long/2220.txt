JdkDynamicAopProxy.equals(Object other) returns false if the object being compared to is not a Proxy. However, if the both objects implement an interface that defines an equals() method, JdkDynamicAopProxy should delegate the call to the business object since it should be assumed, in such cases, equality can only be interpreted by the domain objects themselves.
For example, if Account is defined as
public interface Account{
	// other business methods...
boolean equals(Object other);
}
public class LocalAccountRecords implements Account{
	//.....
}
Then, JdkDynamicAopProxy.equals() should invoke the equals() call on the Account interface so long as the object being compared to is an implementation of Account, instead of insisting on it being a JdkDynamicAopProxy too.