FreeMarkerConfigurer provides the following method:
	protected void postProcessTemplateLoaders(List templateLoaders) 
{

		templateLoaders.add(new ClassTemplateLoader(getClass()));

		logger.info("ClassTemplateLoader for Spring macros added to FreeMarker configuration");

	}


There are two issues here:
1. As the above method is not marked as "final", it is reasonable to subclass. Subclassing does not work successfully due to the construction of ClassTemplateLoader. The getClass() method will return a class within the package of the subclass. If the package of the subclass differs from org.springframework.web.servlet.view.freemarker, the created ClassTemplateLoader will fail in finding spring.ftl.
2. The ClassTemplateLoader(Class) constructor is deprecated (at least in FreeMarker 2.3.8).
To fix this issue (with FreeMarker 2.3.8) the revised method should be:
	protected void postProcessTemplateLoaders(List templateLoaders) 
{
		templateLoaders.add(new ClassTemplateLoader(FreeMarkerConfigurer.class, ""));
		logger.info("ClassTemplateLoader for Spring macros added to FreeMarker configuration");
	}

The fix will thus always ensure the same package as where spring.ftl resides, and uses a new non-deprecated constructor.