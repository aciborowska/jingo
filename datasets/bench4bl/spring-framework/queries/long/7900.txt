Annotation driven injection on public methods specified in a non-public base classes does not work, because Java generates bridge methods for the subclass which are not ignored by Spring (as they should IMHO).
Example:






/* not public! */ class Base {




 




	@Resource




	public void setResource(Injectable injectable) {




           ...




	}




}




 




@Component




public class Target extends Base {




 




}






Same applies to @Autowired.
The attached maven project demonstrates this.
Workarounds: Use field injection, re-declare the method(s) in the subclass or make the base class public.