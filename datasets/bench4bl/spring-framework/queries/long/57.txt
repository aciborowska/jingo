The path problem still exists. Pls refer to Jira.
http://opensource.atlassian.com/projects/spring/secure/ViewIssue.jspa?key=SPR-44
Pls refer to  line 297 of LocalSessionFactoryBean.java. 
"config.addJar(resource.getFile());"
If there are spaces in the file path, resource.getFile() will embed "%" in the File path which will screw the path. 
Eg : (I am doing it this way...maybe there is another way of doing it )
--------------------------------------------------------------------
Suppose : Path is "C:\Hibernate Application\hbmapps\WEB-INF\classes\jars\hibernate.hbm.jar"
<bean id="jarLoc"
  class="org.springframework.core.io.ClassPathResource">
        <constructor-arg index="0">
        	<value>jars/hibernate.hbm.jar</value>
        </constructor-arg>
</bean>
<bean id="session" 
   class="org.springframework.orm.hibernate.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="someDBInstance"/>
        </property>
        <property name="mappingJarLocations">
            <list>
                <ref bean="jarLoc"/>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">......OracleDialect</prop>
                <prop key="hibernate.show_sql">show</prop>
            </props>
        </property>
    </bean>
------------------------------------------------------------------------------------------------
Now, in the afterPropertiesSet function (line 297) , resource.getFile() returns File with path 
"C:\Hibernate%Application\hbmapps\WEB-INF\classes\jars\hibernate.hbm.jar" <=== note the "%"
I think the problem lies in ClassPathResource.java, line 94 
"return new File(url.getFile());"
url.getFile() should be wrapped in a URLDecoder like 
return new File(  (URLDecoder.decode(url.getFile(),"UTF-8") );
This will ensure that any funny url characters will be properly decoded. 
Thanks
Shishir