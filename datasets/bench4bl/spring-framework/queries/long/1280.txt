Please imagine the following setup: A resource ("target") is being requested with method="POST", enctype="multipart/form-data" and no request parameters. Target is including another resource ("fragment"), using a request parameter, e.g. by using <c:import url="fragment.jsp?param=value"/>.
Now, imagine the usual Spring Web setup: A multipart resolver is configured for the RequestDispatcher (CommonsMultipartResolver, but I guess the same problem applies to other multipart resolvers as well).
The following is happening:
The request comes in and runs into the DispatcherServlet for the first time. It runs into the Resolver, any request parameters are copied into the wrapper (but there are none yet), and the wrapper is wrapped around the request. The now-multipart request is forwarded to the view, which invokes the include of "fragment".
The request comes in to DispatcherServlet for the second time (actually it might be the third, I'm not sure about the forward to the view, but it does not matter). DispatcherServlet detects that the Request is already a Multipart Request and decides to skip the Multipart Resolver.
THIS IS AN ERROR.
Somehow, any request parameters passed into an include need to be aggregated into the request/wrapper. If we don't aggregate, we will lose the parameters!
Just for your information: For the default encoding (www-url-encoded), the servlet containers provide the correct behaviour.