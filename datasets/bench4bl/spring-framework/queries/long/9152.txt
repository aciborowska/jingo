Use case:






Jaxb2Marshaller jaxb2Marshaller = new Jaxb2Marshaller() {




jaxb2Marshaller.setPackagesToScan(new String[] { "com.blah" });




...




if (jaxb2Marshaller.supports(SomeJaxbAnnotatedClass.class)) {




  ...




}






org.springframework.oxm.jaxb.Jaxb2Marshaller::supports() will always return false in this case, since it does not take scanned classes into account. The culprit is:






private boolean supportsInternal(Class<?> clazz, boolean checkForXmlRootElement) {




  ...




}






It checks input clazz only against explicit contextPath and classesToBeBound. The simplest solution would be to allow createJaxbContextFromPackages() to set scanned classes as classesToBound, since contextPath, classesToBeBound and packagesToScan are mutually exclusive. The following code would do the trick:






private JAXBContext createJaxbContextFromPackages() throws JAXBException {




  ...




  Class<?>[] jaxb2Classes = scanner.getJaxb2Classes();




  classesToBeBound = jaxb2Classes;




  ...




}






The problem is aggravated by the fact that there does not seem to be a way to get the classes from JAXBContext either.