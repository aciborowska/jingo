With Spring 2.0 M3 (and recent 2.0 M4 snapshots), we were subclassing TransactionAttributeSourceAdvisor in the below manner, to allow for multiple transaction interceptors for different class patterns (to support a legacy transition).
    @Override
    public boolean matches( Method method, Class clazz )
    {
        boolean baseMatch = super.matches( method, clazz );
        if( baseMatch )
        {
            AntPathMatcher matcher = new AntPathMatcher();
            boolean retVal = matcher.match( m_classPattern, clazz.getName().replace( ".", "/" ) );
            return retVal;
        }
        return false;
    }
<bean id="cpScopedTransactionAttributeSourceAdvisor"
        class="bridges.business.common.ScopedTransactionAttributeSourceAdvisor">
        <property name="transactionInterceptor" ref="cpTxInterceptor" />
        <property name="classPattern" value="bridges/choices/*/" />
    </bean>
With 2.0 M4, the matches() method is now part of a private inner class, preventing subclassing.
