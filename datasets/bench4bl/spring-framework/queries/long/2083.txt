I have "cacheHome=false" option in Spring configuration for SimpleRemoteStatelessSessionProxyFactoryBean so as I can see AbstractSlsbInvokerInterceptor lookup home object on each invocation but createMethod is not get refreshed after this and it uses cached one (as it was cached in afterPropertiesSet method). That could (and does!) lead to exceptions from reflections API if  home object changes class. Resulted exception is:
java.lang.IllegalArgumentException
	at jrockit.reflect.VirtualNativeMethodInvoker.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;(Unknown Source)
	at java.lang.reflect.Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;I)Ljava/lang/Object;(Unknown Source)
	at org.springframework.ejb.access.AbstractSlsbInvokerInterceptor.create()Ljava/lang/Object;(AbstractSlsbInvokerInterceptor.java:174)
	at org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor.newSessionBeanInstance()Ljavax/ejb/EJBObject;(AbstractRemoteSlsbInvokerInterceptor.java:202)
	at org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor.getSessionBeanInstance()Ljavax/ejb/EJBObject;(SimpleRemoteSlsbInvokerInterceptor.java:108)
	at org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor.doInvoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;(SimpleRemoteSlsbInvokerInterceptor.java:74)
	at org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor.invoke(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;(AbstractRemoteSlsbInvokerInterceptor.java:114)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed()Ljava/lang/Object;(ReflectiveMethodInvocation.java:170)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;(JdkDynamicAopProxy.java:176)
So I think that createMethod field should be nulled/updated after each home lookup.