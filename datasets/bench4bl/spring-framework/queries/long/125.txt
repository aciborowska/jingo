ResourceEntityResolver resolves entity system identifiers as relative to web-application context root.
This happens when either specified system id is not a valid url or if system id happens to be already resolved (by the parser) relatively to the current working directory - cwd.
On standard Tomcat 5.0.19 installations, server is installed in folders with spaces in names, such that cwd becomes:
C:\Program Files\Tomcat 5.0.19\bin
Suppose we have an entity declared as:
SYSTEM "WEB-INF/some-servlet-part.xml"
this would be resolved by apache xerces parser as
file:///C:/Program%20Files/Tomcat%205.0.19/bin/WEB-INF/some-servlet-part.xml
However following code (from ResourceEntityResolver)
String systemRootUrl = new File().toURL().toString();
results with (spaces not encoded as %20):
file:///C:/Program Files/Tomcat 5.0.19/bin/WEB-INF/some-servlet-part.xml
Effectively urls are not equal (in terms of string equality) and path is not being treated as context-relative.
This is of course a minor problem, but it is hard to track.
This problem could possibly be solved also by fixing a way parser is given an xml file to parse. 
XMLBeanDefinitionReader does contain:
		is = resource.getInputStream();
			Document doc = docBuilder.parse(is);
But it could do better by explicitly giving url of a resource not an input stream.