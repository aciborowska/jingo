The BeanFactory cannot convert Strings in the XML configuration file into Class objects automatically if the String represents an array.  I think the code is just doing a simple Class.forName(), but that won't work if you want to create a Class representing an array (e.g. - java.lang.String[] instead of java.lang.String).  Instead you need something like this (which I wrote rather hastily):
// all this in case someone does java.lang.String [ ] instead of java.lang.String[]
className = StringUtils.replace(className, "[", "");
className = StringUtils.replace(className, "]", "");
className = StringUtils.removeWhitespace(className);
clazz = Array.newInstance(Class.forName(className), 0).getClass();
Here's the stack trace I got with Spring 1.0.1.  My app is actually doing this inside a list, which makes the error message a little more confusing.  I can create a scaled-down version if someone needs it.
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'converterInitializer' defined in resource [/WEB-INF/conf/spring/applicationContext.xml] of ServletContext: Error setting property values; nested exception is org.springframework.beans.PropertyAccessExceptionsException: PropertyAccessExceptionsException (1 errors); nested propertyAccessExceptions are: [org.springframework.beans.TypeMismatchException: Failed to convert property value of type [java.lang.String] to required type [java.lang.Class] for property 'classes[5]'; nested exception is java.lang.IllegalArgumentException: Invalid class name [java.lang.String[]]: java/lang/String[]]
PropertyAccessExceptionsException (1 errors)
org.springframework.beans.TypeMismatchException: Failed to convert property value of type [java.lang.String] to required type [java.lang.Class] for property 'classes[5]'; nested exception is java.lang.IllegalArgumentException: Invalid class name [java.lang.String[]]: java/lang/String[]
java.lang.IllegalArgumentException: Invalid class name [java.lang.String[]]: java/lang/String[]