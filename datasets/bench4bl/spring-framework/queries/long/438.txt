situation:

there is a thread bound hibernate session.
a method A is called and a transactionInterceptor begins a new Transaction on the thread bound session.
method A calls method B. The invocation is again intercepted by a TransactionInterceptor which behavior is PROPAGATION_REQUIRED. The existing transaction is reused.
An exception is thrown in the body of method B.
The TransactionInterceptor on method B catches the exception and calls sessionHolder.setRollbackOnly().
The top-level TransactionInterceptor will find that sessionholder.rollbackOnly=true and rollback the transaction.

problem:
sessionHolder.rollbackOnly is never reset although the transaction is over. Thus following transactions on this session will be rolled back as well.