Up to Spring 2.0 M1 a property definition for a ResourceBundleViewResolver like this worked:
Bean defnition:
	<bean id="resourceBundleViewResolver" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
		<property name="cache"><value>$
{cacheViews}
</value></property>
		<property name="order"><value>0</value></property>
		<property name="basename"><value>views.bookRegistrarPortlet</value></property>
		<property name="defaultParentView"><value>help</value></property>
	</bean>
bookRegistrarPortlet.properties:



Default view
help.class=org.springframework.web.servlet.view.JstlView
help.url=/WEB-INF/jsp/book/en/bookSearchHelp.jsp




Context sensitive help pages
erpBookOrderHelp.url=/WEB-INF/jsp/book/en/bookSearchHelp.jsp

With Spring 2.0 M2 I get the following stacktrace:
2006-02-03 13:51:40,396 ERROR [org.springframework.web.portlet.DispatcherPortlet] - <Could not complete request>
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'erpBookOrderHelp': Instantiation of bean failed; nested exception is java.lang.IllegalStateException: Bean definition does not carry a resolved bean class
java.lang.IllegalStateException: Bean definition does not carry a resolved bean class
	at org.springframework.beans.factory.support.AbstractBeanDefinition.getBeanClass(AbstractBeanDefinition.java:252)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:52)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:498)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:372)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:238)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:148)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:253)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:331)
	at org.springframework.web.servlet.view.ResourceBundleViewResolver.initFactory(ResourceBundleViewResolver.java:202)
	at org.springframework.web.servlet.view.ResourceBundleViewResolver.loadView(ResourceBundleViewResolver.java:148)
	at org.springframework.web.servlet.view.AbstractCachingViewResolver.createView(AbstractCachingViewResolver.java:146)
	at org.springframework.web.servlet.view.AbstractCachingViewResolver.resolveViewName(AbstractCachingViewResolver.java:79)
	at org.springframework.web.portlet.DispatcherPortlet.resolveViewName(DispatcherPortlet.java:967)
	at org.springframework.web.portlet.DispatcherPortlet.render(DispatcherPortlet.java:895)
	at org.springframework.web.portlet.DispatcherPortlet.doRenderService(DispatcherPortlet.java:726)
	at org.springframework.web.portlet.FrameworkPortlet.processRequest(FrameworkPortlet.java:420)
	at org.springframework.web.portlet.FrameworkPortlet.doDispatch(FrameworkPortlet.java:391)
	at javax.portlet.GenericPortlet.render(GenericPortlet.java:163)
	at com.liferay.portal.servlet.PortletServlet.service(PortletServlet.java:78)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:672)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:574)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:499)
	at com.liferay.portlet.CachePortlet._invoke(CachePortlet.java:297)
	at com.liferay.portlet.CachePortlet.render(CachePortlet.java:178)
	at org.apache.jsp.html.portal.render_005fportlet_jsp._jspService(org.apache.jsp.html.portal.render_005fportlet_jsp:577)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:97)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:332)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:314)
2006-02-03 13:51:40,412 DEBUG [org.springframework.web.portlet.context.XmlPortletApplicationContext] - <Publishing event in context [PortletApplicationContext for namespace 'bookRegistrar-portlet']: PortletRequestHandledEvent: portlet=[bookRegistrar]; mode=[view]; type=[render]; session=[BB9AFE04292C38FEFCF59A72D61FDB7D]; user=[rs]; time=[204ms]; status=[failed: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'erpBookOrderHelp': Instantiation of bean failed; nested exception is java.lang.IllegalStateException: Bean definition does not carry a resolved bean class]>
2006-02-03 13:51:40,412 ERROR [org.apache.catalina.core.ContainerBase.[Catalina].[localhost].[/zzzIntranet].[bookRegistrar]] - <Servlet.service() for servlet bookRegistrar threw exception>
Including a statement to explicitly set the class for erpBookOrderHelp
erpBookOrderHelp.class=org.springframework.web.servlet.view.JstlView
does not work, either.