When using the 10g driver for oracle (specifically, oracle-jdbc-1.4-10.1.0.20.jar), getObject returns a java.util.Date for a column with a type of DATE.
This is correct.
However, the driver will return a Date with only year-month-day, even if the DATE column contains hours:minutes:seconds.
To get a full date, with both day and time info, you have to use getTimestamp.
The getResultSetValue() method attempts to detect if the object returned from getObject is a "oracle.sql.TIMESTAMP".  Unfortunately, with 10g drivers and a column of type DATE, getObject().getClass().getName() will return "java.sql.Date".
For instance:
System.out.println(rs.getObject("date_created") + " " + rs.getObject("date_created").getClass());
will print out:
2005-07-01 class java.sql.Date
Now, even with a queryForObject("sql", Timestamp.class) you will receive this error:
org.springframework.dao.TypeMismatchDataAccessException: Result object with column type 'DATE' and value [2005-07-01] is of type [java.sql.Timestamp] and could not be converted to required type [java.sql.Timestamp]
