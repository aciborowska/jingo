I am developing a spring application for Weblogic Server 8.1SP4. Currently having the following problem:
Using wildcards in servlet.xml for mapping hibernate .hbm.xml files as following:
<bean id="sessionFactory"
	class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	<property name="dataSource" ref="dataSource" />
	<property name="mappingLocations">
		<value>classpath*:*.hbm.xml</value>
	</property>
	<property name="hibernateProperties">
		<props>
			<prop key="hibernate.dialect">org.hibernate.dialect.PointbaseDialect</prop>
			<prop key="hibernate.cache.use_second_level_cache">false</prop>
		</props>
	</property>
</bean>
results in a IllegalArgumentException in deploying webapp as a WAR.
Stacktrace follows:
14.42.2005 06:42:45 ERROR [ExecuteThread: '1' for queue: 'weblogic.kernel.System'] - servlet.DispatcherServlet - Context
 initialization failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sessionFactory' defined in Servl
etContext resource [/WEB-INF/bug-servlet.xml]: Error setting property values; nested exception is org.springframework.be
ans.PropertyAccessExceptionsException: PropertyAccessExceptionsException (1 errors); nested propertyAccessExceptions are
: [org.springframework.beans.TypeMismatchException: Failed to convert property value of type [java.lang.String] to requi
red type [[Lorg.springframework.core.io.Resource;] for property 'mappingLocations'; nested exception is java.lang.Illega
lArgumentException: Could not convert location pattern [classpath*:*.hbm.xml] to Resource array]
PropertyAccessExceptionsException (1 errors)
org.springframework.beans.TypeMismatchException: Failed to convert property value of type [java.lang.String] to required
 type [[Lorg.springframework.core.io.Resource;] for property 'mappingLocations'; nested exception is java.lang.IllegalAr
gumentException: Could not convert location pattern [classpath*:*.hbm.xml] to Resource array
java.lang.IllegalArgumentException: Could not convert location pattern [classpath*:*.hbm.xml] to Resource array
        at org.springframework.core.io.support.ResourceArrayPropertyEditor.setAsText(ResourceArrayPropertyEditor.java:70
)
        at org.springframework.beans.BeanWrapperImpl.doTypeConversionIfNecessary(BeanWrapperImpl.java:982)
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:803)
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:716)
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:844)
        at org.springframework.beans.BeanWrapperImpl.setPropertyValues(BeanWrapperImpl.java:871)
        at org.springframework.beans.BeanWrapperImpl.setPropertyValues(BeanWrapperImpl.java:860)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAuto
wireCapableBeanFactory.java:926)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCap
ableBeanFactory.java:727)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapab
leBeanFactory.java:336)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:223)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:147)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListable
BeanFactory.java:271)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:312)
        at org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableW
ebApplicationContext.java:134)
        at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:305)
        at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:250)
        at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:219)
        at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:111)
        at javax.servlet.GenericServlet.init(GenericServlet.java:258)
        at weblogic.servlet.internal.ServletStubImpl$ServletInitAction.run(ServletStubImpl.java:1028)
        at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
        at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
        at weblogic.servlet.internal.ServletStubImpl.createServlet(ServletStubImpl.java:904)
        at weblogic.servlet.internal.ServletStubImpl.createInstances(ServletStubImpl.java:883)
        at weblogic.servlet.internal.ServletStubImpl.prepareServlet(ServletStubImpl.java:822)
        at weblogic.servlet.internal.WebAppServletContext.preloadServlet(WebAppServletContext.java:3333)
        at weblogic.servlet.internal.WebAppServletContext.preloadServlets(WebAppServletContext.java:3278)
        at weblogic.servlet.internal.WebAppServletContext.preloadResources(WebAppServletContext.java:3259)
        at weblogic.servlet.internal.WebAppServletContext.setStarted(WebAppServletContext.java:5949)
        at weblogic.servlet.internal.WebAppModule.start(WebAppModule.java:862)
        at weblogic.j2ee.J2EEApplicationContainer.start(J2EEApplicationContainer.java:2127)
        at weblogic.j2ee.J2EEApplicationContainer.activate(J2EEApplicationContainer.java:2168)
        at weblogic.management.deploy.slave.SlaveDeployer$ComponentActivateTask.activateContainer(SlaveDeployer.java:250
3)
...
I have provided a minimal testcase for the issue which can be downloaded from http://ivo.webmedia.ee/HibernatePattern_2.0.zip
Steps to reproduce: 
1. Have a Weblogic Server 8.1SP4 running in development mode.
2. unzip HibernatePattern_2.0.zip
3. deploy bug.war. Stacktrace should be displayed to you. 
Alternate scenarios: 

deploy war folder (exploded .war file)
Open browser for URL http://localhost:7001/bug/. You should see a "Hello world" message. Everything works now.

Effect for the issue: need of manual listing of .bhm.xml files in servlet.xml, which can cause errors.
Case can be reproduced with Spring version 1.2.4 