I'm trying out 2.0 rc3-SNAPSHOT build 88.  I'm running a webapp using Eclipse WTP.  The application works fine with RC1.  When I upgraded to the SNAPSHOT everything continues to work fine when I launch my server in non degug mode.  But when I launch my server in debug mode I get a StackOverflowError.  I know my problem sounds suspect but I can switch my version of spring from RC1 to RC3-SNAPSHOT and consistently have no error with RC1 and always get the stackoverflow error with the RC3-SNAPSHOT build 88.  Below is the stacktrace, serviceLoader.xml, and a snippet of web.xml.  All other context files are empty.  By setting a break point in the middle of the findPathMatchingResources loop I can see the resource it is trying to resolve is the "classpath*:/service-context/**/*Context.xml" of serviceContext.
-------------------------web.xml snippet-------------------
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/view-context/**/*Context.xml
		</param-value>
	</context-param>
	<context-param>
		<param-name>locatorFactorySelector</param-name>
		<param-value>
			classpath*:/org/lds/stack/service/serviceLoader.xml
		</param-value>
	</context-param>
	<context-param>
		<param-name>parentContextKey</param-name>
		<param-value>serviceContext</param-value>
	</context-param>
-------------serviceLoader.xml-------------------------
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- Application context for Service layer of app.  Created to help stop leaking of Web layer spring beans
         Into Service layer.  Should never have to modify this file.-->
    <bean id="serviceContext" lazy-init="true"
          class="org.springframework.context.support.ClassPathXmlApplicationContext">
        <constructor-arg>
            <list>
                <!-- all the XML files to include in a default application's service application Context. -->
                <value>classpath*:/service-context/**/*Context.xml</value>
            </list>
        </constructor-arg>
    </bean>
</beans>
-------------------------Stacktrace------------------------------
09:42:46,156 ERROR ContextLoader: Context initialization failed
org.springframework.beans.factory.access.BootstrapException: Unable to return specified BeanFactory instance: factory key [serviceContext], from group with resource name [classpath*:/org/lds/stack/service/serviceLoader.xml]; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceContext' defined in URL [jar:file:/C:/projects/Stack/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/webapps/joe/WEB-INF/lib/stack-code-2.0-SNAPSHOT.jar!/org/lds/stack/service/serviceLoader.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.context.support.ClassPathXmlApplicationContext]: Constructor threw exception; nested exception is java.lang.StackOverflowError
Caused by: 
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'serviceContext' defined in URL [jar:file:/C:/projects/Stack/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/webapps/joe/WEB-INF/lib/stack-code-2.0-SNAPSHOT.jar!/org/lds/stack/service/serviceLoader.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.context.support.ClassPathXmlApplicationContext]: Constructor threw exception; nested exception is java.lang.StackOverflowError
Caused by: 
org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.springframework.context.support.ClassPathXmlApplicationContext]: Constructor threw exception; nested exception is java.lang.StackOverflowError
Caused by: 
java.lang.StackOverflowError
	at java.lang.String.indexOf(String.java:1564)
	at java.lang.String.indexOf(String.java:1546)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.determineRootDir(PathMatchingResourcePatternResolver.java:353)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:321)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:265)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:323)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:265)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:323)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:265)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:323)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:265)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:323)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:265)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(PathMatchingResourcePatternResolver.java:323)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:265)
