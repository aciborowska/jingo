After upgrading to Spring 2.0 RC3, we noticed that any our i18n code failed to resolve keys; this was tracked down to revisions in the form:errors tag that clobber the 'messages' attribute (i.e. removing it instead of resetting it).
Scenario:
Consider the following JSP:
<td align="right" valign="top">	$
{messages['common.aa.siteId']}
 </td>
    							<td align="left" valign="top">														
    								<form:input path="siteId" id="portfoliopw"/><br/>
    								<div id="pwdChangeErrors"><form:errors path="siteId"  /></div>
    							</td>
    							<td valign="top">
    							<div id="savePwdSmall">$
{messages['common.aa.createPortfolio.forgotInformationContactSchool']}
</div>
    							</td>
...where we expose a custom map 'messages' (I believe this is the same name that JSF/Facelets uses as well) to resolve keys (using a ReloadableResourceBundleMessageSource behind the scenes).   The second use of 'messages' does not output anything; removing the form:errors tag resolves the issue (until the next field, and so on...).
It looks like RC3's ErrorsTag.java added exposeAttributes and removeAttributes, which clobber the 'messages' attribute.
Options:
1) Change the 'messages' attribute name (it is new in RC3); perhaps 'formMessages'?
2) Store / restore the 'messages' attribute in removeAttributes; do note that this prevents use of the oringinal 'messages' object inside a form:error tag
3) Don't expose the messages as an attribute inside form:error
