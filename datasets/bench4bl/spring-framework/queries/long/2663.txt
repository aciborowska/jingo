This is code from the MethodMapTransactionAttributeSource:
	public TransactionAttribute getTransactionAttribute(Method method, Class targetClass) {
		if (this.methodMap != null) 
{
			initMethodMap();
		}
		return (TransactionAttribute) this.transactionAttributeMap.get(method);
	}
This method is called by the TransactionInterceptor (actually by TransactionAspectSupport) every time it intercepts a method call, which means that the transactionAttributeMap gets repopulated on every intercepted call.
Previous versions did not have this initMethodMap call at all. If it is decided that this needs to stay, I see two simple solutions:
1) set methodMap to null at the end of the initMethodMap method, or
2) add a check in the getTransactionAttribute method to see if the transactionAttributeMap is empty before populating it again.
The first method seems it would be most efficient.