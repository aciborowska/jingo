It appears that if an exception is thrown by a property setter method on a command bean, the value that was being set is not converted using  a property editor before being being re-bound to the model.
To illustrate, we had the following code:

A Form object with a property of type Foo
A property editor FooPropertyEditor that converted Long values into instances of Foo
A select box on a jsp that displayed a list of Foo instances to select from.

The option values corresponded to a Long id property on Foo (retrieved using $
{foo.id}
), and were compared with the value of the property on Form using the spring:bind tag to determine which was selected (ie $
{status.value == foo.id}
).
This is all pretty standard so far.
However, a bug in our code threw up a what looks like a bug in Spring. It appears that if a setter method throws an exception, any custom property editor for that type will not be invoked when exposing the property value in the model.
What we observed was that, when our setter method threw an exception, our jsp threw the following exception:
javax.servlet.ServletException: javax.servlet.jsp.JspException: Attempt to coerce a value of type "Foo" to type "java.lang.Long"
It looks like, after failing to set the selected Foo on our form object (because setFoo threw an exception), Foo iself was bound to the model, rather than the result of FooPropertyEditor.getAsText().