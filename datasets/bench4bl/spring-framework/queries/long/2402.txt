Code that worked in 1.2.5 fails in 2.0 RC2 with exception below.
Correct behaviour should probably be to catch UnsupportedOperationException (thrown because the Map is instantiated by it's constructor - don't ask me, I'm just testing we can use 2.0), and return original.
i.e. 
		for (Iterator it = original.entrySet().iterator(); it.hasNext() {
			Map.Entry entry = (Map.Entry) it.next();
			Object key = entry.getKey();
			Object value = entry.getValue();
			String keyedPropertyName = buildKeyedPropertyName(propertyName, key);
			Object convertedKey = convertIfNecessary(keyedPropertyName, null, key, keyType);
			Object convertedValue = convertIfNecessary(keyedPropertyName, null, value, valueType);
			try 
{
				convertedCopy.put(convertedKey, convertedValue);
			}
			catch ( UnsupportedOperation e ) 
{
				return original;
			}
			actuallyConverted = actuallyConverted || (key != convertedKey) || (value != convertedValue);
		}
		return (actuallyConverted ? convertedCopy : original);
java.lang.UnsupportedOperationException: Cannot modify this map
	at com.lm.web.JSTLConstants.put(JSTLConstants.java:91)
	at org.springframework.beans.PropertyTypeConverter.convertToTypedMap(PropertyTypeConverter.java:328)
	at org.springframework.beans.PropertyTypeConverter.convertIfNecessary(PropertyTypeConverter.java:190)
	at org.springframework.beans.PropertyTypeConverter.convertIfNecessary(PropertyTypeConverter.java:108)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:723)
	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:575)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValue(AbstractPropertyAccessor.java:49)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:68)
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:57)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:816)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:392)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:240)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:132)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:237)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:153)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:254)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:337)
	at org.springframework.web.context.support.AbstractRefreshableWebApplicationContext.refresh(AbstractRefreshableWebApplicationContext.java:156)
	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:308)
	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:252)
	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:221)
	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:114)
	at javax.servlet.GenericServlet.init(GenericServlet.java:211)