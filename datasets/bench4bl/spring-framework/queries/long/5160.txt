According to the JavaDocs for the <form:errors> tag, it should be possible to output object-level errors only by omitting the "path" attribute (option 2 in the JavaDoc):
http://static.springframework.org/spring/docs/2.5.x/api/org/springframework/web/servlet/tags/form/ErrorsTag.html
For example:
<form:form commandName="account">
  <form:errors/>
  ...
</form:form>
This does not work in Spring 2.5-rc1. Instead, the following exception is generated:
org.springframework.beans.NotReadablePropertyException: Invalid property '' of bean class [accounts.Account]: Bean property '' is not readable or has an invalid getter method: Does the return type of the getter match the parameter type of the setter?
	org.springframework.beans.BeanWrapperImpl.getPropertyValue(BeanWrapperImpl.java:544)
	org.springframework.beans.BeanWrapperImpl.getPropertyValue(BeanWrapperImpl.java:536)
	org.springframework.validation.AbstractPropertyBindingResult.getActualFieldValue(AbstractPropertyBindingResult.java:78)
	org.springframework.validation.AbstractBindingResult.getFieldValue(AbstractBindingResult.java:337)
	org.springframework.web.servlet.support.BindStatus.<init>(BindStatus.java:118)
	org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag.getBindStatus(AbstractDataBoundFormElementTag.java:171)
	org.springframework.web.servlet.tags.form.ErrorsTag.shouldRender(ErrorsTag.java:131)
	org.springframework.web.servlet.tags.form.AbstractHtmlElementBodyTag.writeTagContent(AbstractHtmlElementBodyTag.java:46)
	org.springframework.web.servlet.tags.form.AbstractFormTag.doStartTagInternal(AbstractFormTag.java:90)
	org.springframework.web.servlet.tags.RequestContextAwareTag.doStartTag(RequestContextAwareTag.java:77)
	org.apache.jsp.WEB_002dINF.views.editAccountForm_jsp._jspService(editAccountForm_jsp.java:111)
	org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:393)
	org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:320)
	org.apache.jasper.servlet.JspServlet.service(JspServlet.java:266)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
	org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:239)
	org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1145)
	org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:882)
	org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:795)
	org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:476)
	org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:431)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:690)
	javax.servlet.http.HttpServlet.service(HttpServlet.java:803)
The same code works fine in Spring 2.0.7.
It looks like the implementation of AbstractDataBoundFormTag.getBindStatus() changed in a such a way as to no longer support a null or empty path (which is the case here), but not sure whether this is the true source of the problem.
This issue was raised in the following support forum thread:
http://forum.springframework.org/showthread.php?t=45278
Thanks.