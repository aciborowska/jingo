Re-open of bug SPR-322 :
When using references to DataSources and EJB references in the spring.xml file, the following exception is thrown:
Nested exception is:
org.springframework.beans.factory.access.BootstrapException: Unable to initialize group definition. Group resource name [classpath*:META-INF/bean-ref-factory.xml], factory key [root]; nested exception is org.springframework.beans.factory.BeanDefinitionStoreException: Could not resolve bean definition resource pattern [classpath*:META-INF/bean-ref-factory.xml]; nested exception is java.net.MalformedURLException: unknown protocol: jndi
org.springframework.beans.factory.BeanDefinitionStoreException: Could not resolve bean definition resource pattern [classpath*:META-INF/bean-ref-factory.xml]; nested exception is java.net.MalformedURLException: unknown protocol: jndi
java.net.MalformedURLException: unknown protocol: jndi
	at java.net.URL.<init>(URL.java:544)
	at java.net.URL.<init>(URL.java:434)
	at java.net.URL.<init>(URL.java:383)
	at org.springframework.core.io.UrlResource.<init>(UrlResource.java:57)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.findAllClassPathResources(PathMatchingResourcePatternResolver.java:242)
	at org.springframework.core.io.support.PathMatchingResourcePatternResolver.getResources(PathMatchingResourcePatternResolver.java:204)
	at org.springframework.context.support.AbstractApplicationContext.getResources(AbstractApplicationContext.java:679)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:140)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:113)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:81)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:89)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:268)
	at org.springframework.context.access.ContextSingletonBeanFactoryLocator.initializeDefinition(ContextSingletonBeanFactoryLocator.java:136)
	at org.springframework.beans.factory.access.SingletonBeanFactoryLocator.useBeanFactory(SingletonBeanFactoryLocator.java:386)
	at org.springframework.ejb.support.AbstractEnterpriseBean.loadBeanFactory(AbstractEnterpriseBean.java:117)
	at org.springframework.ejb.support.AbstractStatelessSessionBean.ejbCreate(AbstractStatelessSessionBean.java:63)
It is caused by the following code in PathMatchingResourceResolver:
	/**

Find all class location resources with the given location via the ClassLoader.
@param location the absolute path within the classpath
@return the result as Resource array
@throws IOException in case of I/O errors
@see java.lang.ClassLoader#getResources
	 */
	protected Resource[] findAllClassPathResources(String location) throws IOException 
Unknown macro: {		String path = location;		if (path.startsWith("/")) {
			path = path.substring(1);
		}		ClassLoader cl = getClassLoader();		if (cl == null) {
			// No class loader specified -> use thread context class loader.
			cl = Thread.currentThread().getContextClassLoader();
		}		Enumeration resourceUrls = cl.getResources(path);		Set result = new HashSet();		while (resourceUrls.hasMoreElements()) {
			URL url = (URL) resourceUrls.nextElement();
			// Use normalized path to avoid multiple entries pointing to the same resource.
			result.add(new UrlResource(StringUtils.cleanPath(url.toString())));
		}		return (Resource[]) result.toArray(new Resource[result.size()]);	} 

Please note the line "new UrlResource(StringUtils.cleanPath(url.toString())));"
This was fixed for 1.1.1, but appearantly got back in a later revision. I've only just noticed, since I was upgrading my spring.jar version.