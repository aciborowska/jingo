@PropertySource(
{ "$
{sdmt_update_config:client_update.properties}
", // 
		"$
{sdmt_client_config:sdmt_client.properties}
"//
})
JVM started with 
-Dsdmt_client_config=client_mava.properties -Dsdmt_update_config=client_update.properties 
3.1.0 works and is able to pick up us system property or use default values
3.1.1 fails
Caused by: java.io.FileNotFoundException: class path resource [$
{sdmt_client_config:sdmt_client.properties}
] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:158)
	at org.springframework.core.io.support.ResourcePropertySource.loadPropertiesForResource(ResourcePropertySource.java:101)
	at org.springframework.core.io.support.ResourcePropertySource.<init>(ResourcePropertySource.java:43)
	at org.springframework.core.io.support.ResourcePropertySource.<init>(ResourcePropertySource.java:52)
	at org.springframework.core.io.support.ResourcePropertySource.<init>(ResourcePropertySource.java:82)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:193)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:149)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:135)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:260)
I see something very smelly in ConfigurationClassParser.doProcessConfigurationClass
for (int i = 0; i < nLocations; i++) {
  locations[0] = this.environment.resolveRequiredPlaceholders(locations[0]);
}