MethodInjectionContext.xml
-------------------------------------
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
    <bean id="A" class="a.A" singleton="true">
        <lookup-method bean="B" name="getB" />
    </bean>
    <bean id="B" class="a.B" singleton="false"/>
</beans>
Class a.A
-------------
package a;
public abstract class A {
    public abstract B getB();
    public B getB(Object o) 
{
        System.out.println("Ok");
        return new B();
    }
}
Class a.B
-------------
package a;
public class B {
    public B() 
{
        System.out.println("new B");
    }
}
Class a.MethodInjection
---------------------------------
package a;
import org.springframework.context.support.ClassPathXmlApplicationContext;
public class MethodInjection {
    public static void main(String[] args) 
{
        ClassPathXmlApplicationContext applicationContext = new ClassPathXmlApplicationContext(
                "methodInjectionContext.xml");
        A a = (A) applicationContext.getBean("A");
        B b = a.getB(new Object());
        System.out.println(b);
    }
}
Console output
---------------------
new B
a.B@1acd47
Expected output
----------------------
Ok
new B
a.B@1acd47
In other words, the wrong method on a.A is called ! I can promise you, it was a bastard to debug ! 
Hope there is time to fix this for 2.0 final.
Cheers,
Axel