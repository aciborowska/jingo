This is actually a bug in the SNAPSHOT build 85.  I had a configuration that didn't work in RC2 and a bug was filed to fix it. SPR-2278 That bug was fixed so I tried rc3 build 85 to see if my config worked and I am now getting a BeanCurrentlyInCreationException.  Below is my configuration and I've attached the stacktrace.  The only non spring bean is the ServiceProxyAspect which is a simple AspectJ annotated aspect.
<?xml version="1.0" encoding="UTF-8"?>
<!-- =========================================================== -->
<!-- Core Service Layer Configuration                            -->
<!-- =========================================================== -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-lazy-init="true">
	<!-- AspectJ autoproxy necissary for ServiceProxy -->
 	<aop:aspectj-autoproxy />
	<!-- Sets up annotation driven transaction management. -->
	<tx:annotation-driven />
	<!-- Sets up ServiceProxy's Aspect -->
	<bean class="org.lds.stack.spring.serviceproxy.ServiceProxyAspect">
		<property name="jpaTemplate" ref="jpaTemplate" />
	</bean>
	<!-- Checks the required annotation of spring beans not currently implemented in Spring -->
	<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor" />
	<!-- DataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:fred" />
		<property name="username" value="sa" />
	</bean>
	<!-- JPA EntityManagerFactory -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="database" value="HSQL" />
			</bean>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.cache.provider_class" value="org.hibernate.cache.NoCacheProvider" />
			</map>
		</property>
		<property name="persistenceXmlLocation" value="classpath:/persistence.xml" />
	</bean>
	<bean id="jpaTemplate" class="org.springframework.orm.jpa.JpaTemplate">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
</beans>