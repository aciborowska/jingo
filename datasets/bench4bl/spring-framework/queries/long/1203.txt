The method
	/**

Return the uncaptilized short string name of a Java class.
@param clazz the class
@return the short name rendered in a standard JavaBeans property format
	 */
	public static String getShortNameAsProperty(Class clazz) 
{
		return StringUtils.uncapitalize(getShortName(clazz));
	}

does not return the class name in standard JavaBeans property format.
from section 8.8 of the spec
'...Thus when we extract a property or event name from the middle of an existing Java name, we
normally convert the first character to lower case. However to support the occasional use of all
upper-case names, we check if the first two characters of the name are both upper case and if
so leave it alone. So for example,
"FooBah" becomes "fooBah"
"Z" becomes "z"
"URL" becomes "URL"
We provide a method Introspector.decapitalize which implements this conversion rule.'
the method is in java.beans.Introspector 
This is admittedly trivial but it is a PITA when using a framework like Appfuse where Spring is mixed with libraries that use the correct JavaBeans name.