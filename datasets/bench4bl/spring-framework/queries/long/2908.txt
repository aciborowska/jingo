I get an exception when I define a pointcut via @Pointcut and I define the 'args(...)' in that pointcut.  I then apply the defined pointcut with @Around advice and I receive the following exeception :
==================================================================================
Caused by: java.lang.IllegalStateException: Failed to bind all argument names: 1 argument(s) could not be bound
	at org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer.getParameterNames(AspectJAdviceParameterNameDiscoverer.java:282)
	at org.springframework.core.PrioritizedParameterNameDiscoverer.getParameterNames(PrioritizedParameterNameDiscoverer.java:54)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.bindArgumentsByName(AbstractAspectJAdvice.java:356)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.calculateArgumentBindings(AbstractAspectJAdvice.java:317)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.afterPropertiesSet(AbstractAspectJAdvice.java:283)
	at org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.getAdvice(ReflectiveAspectJAdvisorFactory.java:211)
	... 172 more
===================================================================================
I stepped through the code and found that org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer.maybeBindThisOrTargetOrArgsFromPointcutExpression() is only binding arguments if the 'args(...)' declaration is defined in the advice (@Around) declaration as opposed to being defined in the @Pointcut declaration.
Defining the 'args(...)' in the @Pointcut declaration is valid according to the aspectj documentation for the new annotations in AspectJ 5. (see http://www.eclipse.org/aspectj/doc/released/adk15notebook/ataspectj-pcadvice.html for an example)
The related forum thread explaining my findings and example can be found here : http://forum.springframework.org/showthread.php?t=32111