is this intended or is it a bug in spring 2.0 (i think this worked in spring 1.2.x):
want to read out the same static field several times with the FieldRetrievingFactoryBean as anonymous inner bean:
<bean id="C" class="test.C">
<property name="member1"><util:constant static-field="test.A.CONSTANT1"/></property>
</bean>
<bean id="SecondC" class="test.C">
<property name="member1"><util:constant static-field="test.A.CONSTANT1"/></property>
</bean>
leads to
org.springframework.beans.factory.BeanDefinitionSt oreException: Error registering bean with name 'test.A.CONSTANT1' defined in null: Cannot register bean definition [Root bean: class [org.springframework.beans.factory.config.FieldRetr ievingFactoryBean];
... for bean 'test.A.CONSTANT1':
there's already [Root bean: class [org.springframework.beans.factory.config.FieldRetr ievingFactoryBean]; ...bound
if i reference the static field definition the second time, it is working (beanDefinitionOverriding is not allowed in my beanFactory):
<bean id="SecondC" class="test.C">
<property name="member1"><ref bean="test.A.CONSTANT1"/></property>
</bean>
reason: 
if i look into the application context, a bean with the fully qualified name of the static field is stored. when the FieldRetrievingFactoryBean is called a second time for the same field, the above exception is thrown since we already have a bean with this name in the application context (and i did not allow beanDefinitonOverriding).
did not test it with all version, but this worked at least till spring version 1.2.7