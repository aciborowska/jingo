Hi, I've just run into a @ModelAttribute "reference data" dependency problem.
In my case, which is very simple & presumably common:
    @ModelAttribute("job")
    protected Job loadOrCreate (@RequestParam(value="id", required=false) Integer id);
    @ModelAttribute("jobDisplay")
    protected JobDisplay buildJobUI (@ModelAttribute("job") Job job);
What I'm finding, is that by quirk of reflection 'buildJobUI' is being found before 'loadOrCreate'; data binding is running, by default, with a newly created instance of Job;  'loadOrCreate' is then skipped, since it's been added to the implicit model by the automatic argument resolution.
So, Job is never loaded from the database, 'loadOrCreate' is being skipped, and fields are bound into the wrong object.
There's a related issue about dependencies - not being called in order â€“ but what I've found is worse,  that the logic is squashing the (should be prior) dependencies from ever being called at all.
PS:  I wouldn't mind being able to make "Reference Data" methods which didn't return any named attribute, but could just takea parameter 'Model model' and populate several attributes into that. Can I do this?
BTW:  I'm not in favour of the idea of "selective model creation" in the slightest, sounds like a complex solution in search of a problem.
Thanks guys!