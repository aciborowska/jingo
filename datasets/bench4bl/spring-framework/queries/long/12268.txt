It looks to me like the @PropertySource annotations with multiple values are added in an incorrect order by ConfigurationClassParser.addPropertySource
The docs say:
"A note on property overriding with @PropertySource
In cases where a given property key exists in more than one .properties file, the last @PropertySource annotation processed will 'win' and override. For example, given two properties files a.properties and b.properties, consider the following two configuration classes that reference them with @PropertySource annotations "
"Each location will be added to the enclosing 
{@code Environment}
 as its property source, and in the order declared."
ConfigurationClassParser adds new propertySources with:
String firstProcessed = this.propertySourceNames.iterator().next();
propertySources.addBefore(firstProcessed, propertySource);
With 2 property sources that works fine
-@PropertySource(
{"A", "B"}
)
– Ends up in the underlying mutableProperties list as [B, A]
When there are greater than 2 values the addBefore call leads to a strange behavior.  The last value will always be last, but other values will be ordered first to last.
-@PropertySource(
{"A", "B", "C"}
)
– First add - [A]
– Second add - [B, A]
– Third add - [B, C, A]
This looks fishy to me and leads to non-intuitive resolution order.  I don't see a way to get my desired resolution order [C, B, A].  Any thoughts on the resolution order here?  I was thinking of trying @PropertySources, but those are ordered in the same way by the same class/method.
In 4.0 it looks like sources were simply added:
this.propertySources.add(name, new ResourcePropertySource(name, resource));