The excludedBeans property of the MBeanExporter instance contains the list of beans that should not be auto-detected by the MBeanExporter if autodetect is set to true. MBeanExporter.isExcluded() function looks for excluded bean names by doing the binary search:  Arrays.binarySearch(this.excludedBeans, beanName) (line726). The binary search works correctly only on sorted arrays. 
If, in the Spring config file, the bean names that need to be excluded listed unsorted, some of the beans will not be found which leads to errors. 
In the example below the plainBeanProxy follows the standardBeanProxy which causes the plainBeanProxy not to be found and leads to another error as a side effect. if plainBeanProxy is placed first, everything is ok.
The possible solution might be to sort excludedBeans when it is assigned.
<beans>
	<bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
		<!-- find all valid MBeans (standard, dynamic,etc.) automatically -->
		<property name="autodetect" value="true"/>
		<!-- exclude all beans (proxies) that reference the instances of the managed beans -->
		<!-- has to be presented when using autodetection and MBean proxies !!! -->
		<property name="excludedBeans">
			<list>
				<value>standardBeanProxy</value>
				<value>plainBeanProxy</value>
			</list>
		</property>
		<!--  Define the list of plain java beans that will be exposed through JMX -->
		<property name="beans">
			<map>
				<entry key="plainBean" value-ref="plainBean"/>
			</map>
		</property>
		<!--  Use an arbitrary interface instead of MBean interface -->
		<property name="assembler">
			<bean class="org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler">
				<property name="managedInterfaces">
					<value>ca.pac.appone.jmx.IJmxPlainBean</value>
				</property>
			</bean>
		</property>
		<!--  Use this bean naming strategy -->
		<property name="namingStrategy" ref="namingStrategy"/>
	</bean>
	<bean id="plainBean" class="ca.pac.appone.jmx.JmxPlainBean">
		<property name="readWriteAttribute">
			<value>PLAIN-BEAN</value>
		</property>
	</bean>
	<bean name="standardBean" class="ca.pac.appone.jmx.JmxStandardBean">
		<property name="readWriteAttribute">
			<value>STANDARD-BEAN</value>
		</property>
	</bean>
	<bean id="standardBeanProxy" class="org.springframework.jmx.access.MBeanProxyFactoryBean">
		<property name="objectName">
			<value>RAInstrumentation:name=standardBean</value>
		</property>
		<property name="proxyInterface">
			<value>ca.pac.appone.jmx.JmxStandardBeanMBean</value>
		</property>
	</bean>
	<bean id="plainBeanProxy" class="org.springframework.jmx.access.MBeanProxyFactoryBean">
		<property name="objectName">
			<value>RAInstrumentation:name=plainBean</value>
		</property>
		<property name="proxyInterface">
			<value>ca.pac.appone.jmx.IJmxPlainBean</value>
		</property>
	</bean>
  <bean id="namingStrategy" class="org.springframework.jmx.export.naming.KeyNamingStrategy">
    <property name="mappings">
      <props>
        <prop key="plainBean">RAInstrumentation:name=plainBean</prop>
        <prop key="standardBean">RAInstrumentation:name=standardBean</prop>
      </props>
    </property>
  </bean>
<beans>