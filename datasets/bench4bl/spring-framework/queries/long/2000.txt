I've run into an issue with using the ConfigurableApplicationContext.refresh() feature to pick up configuration changes to our bean definitions without restarting our webapp.  Because we occassionally have to lookup beans directly from the application context in other areas of our application, we've run into a situation where one thread initiates a context refresh, while another thread tries to get a bean from the context.  Obviously, this situation quickly generates an IllegalStateException since the beanFactory property is temporarily null.
I was just about to create a new ApplicationContext subtype that would synchronize the methods, but then I realized both methods are declared final.  Is there a reason that these methods (refreshBeanFactory() and getBeanFactory()) weren't synchronized?  It seems like an obvious thread-safety problem and I'm a little curious as to why I haven't seen anyone else complaining about it.  Simply synchronizing those two methods should do the trick, I believe.