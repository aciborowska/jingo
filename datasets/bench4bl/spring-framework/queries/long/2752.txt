The following error message is generated when using BEA Weblogic and a Queue. 
Setup of JMS message listener invoker failed - trying to recover  weblogic.jms.common.InvalidDestinationException: Destination must be a topic, MyJMSQueue
Note! The supspicous code was introduced sometime after Version 2.0 RC2.
The problem is in the following code:
class: org.springframework.jms.listener.AbstractMessageListenerContainer
	public void setDestination(Destination destination) 
{
		Assert.notNull(destination, "destination must not be null");
		this.destination = destination;
		setPubSubDomain(destination instanceof Topic);
	}

BEA Weblogic produces a weblogic.jms.common.DestinationImpl which is a destination implementing both javax.jms.Topic and javax.jms.Queue. See the following article - http://mule.mulesource.org/jira/browse/MULE-508 
The workaround is to change the sequence of properties in the bean definition as follows:
<bean id="listenerContainer" class="org.springframework.jms.listener.DefaultMes sageListenerContainer102">
<property name="concurrentConsumers" value="2"/>
<property name="connectionFactory" ref="connectionFactory"/>
<property name="destination" ref="destination"/>
<property name="messageListener" ref="messageListener"/>
<property name="pubSubDomain" value="false" /> 
</bean>
Of critical importance is that pubSubDomain MUST FOLLOW destination.