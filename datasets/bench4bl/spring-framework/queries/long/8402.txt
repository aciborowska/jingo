For instance:






MyController.java






@Controller




public class MyController {




 




	@RequestMapping(value={"/user/id/{id}/delete", "/user/id/{id}/deleted/{deleted}/delete"}, method=RequestMethod.GET)




	public ModelAndView updateUserHandler(@PathVariable String id, @PathVariable String deleted) {




	




		/* Implementation */




		




	}




}






That code above will throw an IllegalStateException. Instead, only the following is allowed if I want access to deleted:






MyController.java






@Controller




public class MyController {




 




	@RequestMapping(value="/user/id/{id}/deleted/{deleted}/delete", method=RequestMethod.GET)




	public ModelAndView updateUserHandler(@PathVariable String id, @PathVariable String deleted) {




	




		/* Implementation */




		




	}




}






However, this necessitates always providing a value for the deleted parameter. This should instead be treated like request.getParameter(), in that if you try to access a request parameter (or path variable in the case of Spring) that doesn't exist on the path, the value defaults to null.