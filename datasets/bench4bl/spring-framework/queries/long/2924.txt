We're upgrading from Spring 1.2.7 to Spring 2.01.
We have a class with a constructor argument of type Map<String, EJBContractWrapper>.
Our developers inject objects of type LocalContractWapper which is not type-compatible with EJBContractWrapper.
In Spring 1.2.7 this worked since the objects were not converted using PropertyEditors.
In Spring 2.0.1 this fails since Spring detects the target map has generics and attemps to convert LocalContractWrapper to EJBContractWrapper. Ofcourse we don't have a PropertyEditor registered for this so the conversion fails.
However, the exception that is thrown says:
"Failed to convert value of type [java.util.LinkedHashMap] to required type [java.util.Map]"
This not only doesn't make sense, it's also doesn't reveal the through cause of the exception.
Exception thrown:
=============
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'contractHandlerFactory' defined in class path resource [spring/sis/cni/cni-abstraction-dev.xml]: Cannot resolve reference to bean 'genericContractHandler' while setting bean property 'contractHandler'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'genericContractHandler' defined in class path resource [spring/sis/cni/cni-abstraction-dev.xml]: Unsatisfied dependency expressed through constructor argument with index 0 of type [java.util.Map]: Could not convert constructor argument value [
{0001.01=xxx.LocalContractWrapper@12344b, 0002.01=xxx.LocalContractWrapper@1273445, 0003.01=xxx.LocalContractWrapper@d8c8a9, 0004.01=xxx.LocalContractWrapper@5de953, 0005.01=xxx.LocalContractWrapper@1816407, 0006.01=xxx.LocalContractWrapper@1ce3058, 0007.01=xxx.LocalContractWrapper@1c7fe07, 0008.01=xxx.LocalContractWrapper@f69f4e, 0009.01=xxx.LocalContractWrapper@154d2ff}
] to required type [java.util.Map]: Failed to convert value of type [java.util.LinkedHashMap] to required type [java.util.Map]; nested exception is java.lang.IllegalArgumentException: No matching editors or conversion strategy found
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'genericContractHandler' defined in class path resource [spring/sis/cni/cni-abstraction-dev.xml]: Unsatisfied dependency expressed through constructor argument with index 0 of type [java.util.Map]: Could not convert constructor argument value [
{0001.01=xxx.LocalContractWrapper@12344b, 0002.01=.LocalContractWrapper@1273445, 0003.01=xxx.LocalContractWrapper@d8c8a9, 0004.01=xxx.LocalContractWrapper@5de953, 0005.01=xxx.LocalContractWrapper@1816407, 0006.01=xxx.LocalContractWrapper@1ce3058, 0007.01=xxx.LocalContractWrapper@1c7fe07, 0008.01=xxx.LocalContractWrapper@f69f4e, 0009.01=xxx.LocalContractWrapper@154d2ff}
] to required type [java.util.Map]: Failed to convert value of type [java.util.LinkedHashMap] to required type [java.util.Map]; nested exception is java.lang.IllegalArgumentException: No matching editors or conversion strategy found
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:372)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:126)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:684)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:622)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:381)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:140)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:248)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:128)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:950)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:740)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:417)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:140)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:273)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:346)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:92)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:77)
	at org.springframework.test.AbstractSingleSpringContextTests.loadContextLocations(AbstractSingleSpringContextTests.java:181)
	at org.springframework.test.AbstractSingleSpringContextTests.loadContext(AbstractSingleSpringContextTests.java:151)
	at org.springframework.test.AbstractSpringContextTests.getContext(AbstractSpringContextTests.java:105)
	at org.springframework.test.AbstractSingleSpringContextTests.setUp(AbstractSingleSpringContextTests.java:82)
	at junit.framework.TestCase.runBare(TestCase.java:128)
	at org.springframework.test.ConditionalTestCase.runBare(ConditionalTestCase.java:69)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:478)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:344)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)
