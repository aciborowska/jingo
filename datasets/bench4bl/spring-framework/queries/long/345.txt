The <spring:message> tag produces incorrect results when argument's variables contain commas. How to reproduce:
1. Add this line to messages.properties (you may use petclinic example):
oops_msg = He said: ''
{0}
''
2. Add this code to jsp (welcome.jsp in petclinic):
<% request.setAttribute("msg","Ooops, It does not work!"); %>
<spring:message code="oops_msg" arguments="$
{msg}
" />
3. Invoke that page: 
http://localhost:8080/petclinic/welcome.htm
It produces:
He said: 'Ooops'
whis is incorrect. Desired message is:
He said: 'Ooops, It does not work!'
The problem is caused probably by incorrect order of arguments processing in MessageTag.java. Currently it looks like:
			String resolvedArguments =
				    ExpressionEvaluationUtils.evaluateString("arguments", this.arguments, pageContext);
				String[] argumentsArray = StringUtils.commaDelimitedListToStringArray(resolvedArguments);
These lines should be rather swapped, e.g.
call commaDelimitedListToStringArray() and than call evaluateString() for each delimited argument. But if some expression shall contain comma (is it possible?) this approach will introduce new bug...
