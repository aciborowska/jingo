The recent change to ValidationUtils.InvokeValidator(), requiring that the Validator argument not be null (SPR-2020, submitted by me and applied by Juergen), needs to be propagated to the deprecated org.sf.web.bind.BindUtils to no longer call this function if the validator argument is null.  (The API for BindUtils.bindAndValidate[1] allows for null Validator objects if there is no validation to be done.)
(Incidentally, does your team prefer tabs or four spaces for indentation within source code, or either is OK?)
Thanks,
Glen
[1] http://tinyurl.com/edmh4
Index: BindUtils.java
===================================================================
RCS file: /cvsroot/springframework/spring/src/org/springframework/web/bind/BindUtils.java,v
retrieving revision 1.10
diff -u -r1.10 BindUtils.java
â€” BindUtils.java	9 Jan 2006 23:52:29 -0000	1.10
+++ BindUtils.java	18 May 2006 14:06:23 -0000
@@ -86,7 +86,9 @@
 			ServletRequest request, Object object, String objectName, Validator validator) {
 		BindException binder = bind(request, object, objectName);

ValidationUtils.invokeValidator(validator, object, binder);
+		if (validator != null) 
{
+			ValidationUtils.invokeValidator(validator, object, binder);
+		}
 		return binder;
 	}

@@ -108,7 +110,9 @@
 			Validator validator, BindInitializer initializer) throws ServletException  {

 		BindException binder = bind(request, object, objectName, initializer);
-		ValidationUtils.invokeValidator(validator, object, binder);
+		if (validator != null) {+			ValidationUtils.invokeValidator(validator, object, binder);+		}
 		return binder;
 	}

