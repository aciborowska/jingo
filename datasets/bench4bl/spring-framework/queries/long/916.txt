I tried to create an anonymous inner bean in my Spring configuration that inherited properties from a parent bean, but Spring would not allow it.  Spring insisted that a bean name was required, even though it typically is not required for inner beans.  Here is the configuration that caused the error:
<bean
  name="groupPermissionsUpgradeTask"
  class="com.spider.scoreboard.framework.upgrade.upgrades.GroupPermissionsUpgradeTask">
  <property name="versionNumber" value="1.4.4.0"/>
  <property name="rowMapResultSetExtractor">
    <bean parent="rowMapResultSetExtractor">
      <property name="keyType" value="java.lang.Integer"/>
      <property name="valueType" value="java.lang.Integer"/>
    </bean>
  </property>
</bean>
Here is the error:
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'groupPermissionsUpgradeTask' defined in file [c:\eclipse\workspace\Scoreboard 1.5\web\WEB-INF\applicationContext-upgrade.xml]: Initialization of bean failed; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'rowMapResultSetExtractor' is defined: Parent name 'rowMapResultSetExtractor' is equal to bean name 'rowMapResultSetExtractor' - cannot be resolved without an AbstractBeanFactory parent
org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'rowMapResultSetExtractor' is defined: Parent name 'rowMapResultSetExtractor' is equal to bean name 'rowMapResultSetExtractor' - cannot be resolved without an AbstractBeanFactory parent
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedBeanDefinition(AbstractBeanFactory.java:672)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveInnerBeanDefinition(BeanDefinitionValueResolver.java:146)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:96)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:891)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:707)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:316)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:146)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:534)
	at com.spider.scoreboard.framework.Launcher.launch(Launcher.java:71)
	at com.spider.scoreboard.framework.Launcher.launch(Launcher.java:47)
	at com.spider.scoreboard.framework.upgrade.upgrades.GroupPermissionsUpgradeTask.main(GroupPermissionsUpgradeTask.java:83)
The workaround is simple, just give the inner bean a name.  Here is a configuration that works:
<bean
  name="groupPermissionsUpgradeTask"
  class="com.spider.scoreboard.framework.upgrade.upgrades.GroupPermissionsUpgradeTask">
  <property name="versionNumber" value="1.4.4.0"/>
  <property name="rowMapResultSetExtractor">
    <bean
      name="integerKeyAndValueRowMapResultSetExtractor"
      parent="rowMapResultSetExtractor">
      <property name="keyType" value="java.lang.Integer"/>
      <property name="valueType" value="java.lang.Integer"/>
    </bean>
  </property>
</bean>