http://forum.springframework.org/showthread.php?t=26820
Well I found my problem... What I was doing was creating a session scoped bean for an "Order" which was serving as a reference which had the user's current cart.. This allowed me to easily do real-time cart displays on any page by using the container to inject the order object into any of my controllers. Anytime I tried to save the order, from the session scoped bean, then the error occurred.
What I have is:
Code:
<bean id="order" class="com.vodori.dolce.component.commerce.model.Order" scope="session"> <aop:scoped-proxy/> </bean>
It makes sense to me that when I try to save the order in hibernate it is getting a proxied Order object since in essence, that bean, which is session scoped is a proxy. However, it seems odd to me from an architecture standpoint that I cannot create session scoped beans off of model objects, use them in my controllers or business logic as needed and make calls to save them via Hibernate.
I have not tried Hibernate 3.2CR2 yet. Perhaps this will fix the issue but I am a little wary about moving to a development version of Hibernate at this point.
It seems that I cannot use any session scoped beans if I plan to ever do any save or updates on them in Hibernate which really brings the utility of session scoped beans down a lot for me.
