This was reported in Spirn 2.0 changelog:  "ExpressionEvaluationUtils falls back to Jakarta JSTL if JSP 2.0 ExpressionEvaluator API present but not implemented." However, issue still appears when application runs under WebSphere 6.1 (IBM JVM). The decision to use fallback is based on NoSuchMethodError exception (see ExpressionEvaluationUtils):
			catch (NoSuchMethodError err) 
{
				logger.debug("JSP 2.0 ExpressionEvaluator API present but not implemented - using fallback");
				setFallbackNecessary();
				return this.fallback.evaluate(attrName, attrValue, resultClass, pageContext);
			}
However, when running under IBM JVM on WebSphere 6.1, it throws AbstractMethodError. The following code fixes the problem:

			catch (NoSuchMethodError err) {				logger.debug("JSP 2.0 ExpressionEvaluator API present but not implemented - using fallback");				setFallbackNecessary();				return this.fallback.evaluate(attrName, attrValue, resultClass, pageContext);			}
			catch (java.lang.AbstractMethodError err) 
{
				logger.debug("JSP 2.0 (AbstractMethodError) ExpressionEvaluator API present but not implemented - using fallback");
				setFallbackNecessary();
				return this.fallback.evaluate(attrName, attrValue, resultClass, pageContext);
			}

Any other preciser detection that fallback is required will solve the problem as well. Thanks.