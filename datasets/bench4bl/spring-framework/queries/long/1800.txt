The implementation of finding the correct view to a given exception type has changed since 1.2.6.
Older implementation:
// Check for specific exception mappings.
if (this.exceptionMappings != null) {
	int deepest = Integer.MAX_VALUE;
	for (Enumeration names = this.exceptionMappings.propertyNames(); names.hasMoreElements() {
		String exceptionMapping = (String) names.nextElement();
		int depth = getDepth(exceptionMapping, ex);
		if (depth >= 0 && depth < deepest) 
{
			deepest = depth;
			viewName = this.exceptionMappings.getProperty(exceptionMapping);
		}
	}
}

1.2.7 implementation
protected String findMatchingViewName(Properties exceptionMappings, Exception ex) {
	int deepest = Integer.MAX_VALUE;
	for (Enumeration names = this.exceptionMappings.propertyNames(); names.hasMoreElements() {
		String exceptionMapping = (String) names.nextElement();
		int depth = getDepth(exceptionMapping, ex);
		if (depth >= 0 && depth < deepest) {
			deepest = depth;
			return this.exceptionMappings.getProperty(exceptionMapping);
		}
	}
	return null;
}

The new implementation returns the first view found. That is not correct especially in case of a exception hierarchy.

Proposed correction:
protected String findMatchingViewName(Properties exceptionMappings, Exception ex) {
	int deepest = Integer.MAX_VALUE;
                     String viewName = null;
	for (Enumeration names = this.exceptionMappings.propertyNames(); names.hasMoreElements() {
		String exceptionMapping = (String) names.nextElement();
		int depth = getDepth(exceptionMapping, ex);
		if (depth >= 0 && depth < deepest) {			deepest = depth;			viewName = this.exceptionMappings.getProperty(exceptionMapping);		}
	}
	return viewName;
}