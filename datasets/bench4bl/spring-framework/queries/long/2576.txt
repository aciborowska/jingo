I'm using this type of way to override default properties in PropertyPlaceholderConfigurer.
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>WEB-INF/someapp.properties</value>
				<value>file:///usr/applications/someapp/properties/someapp.properties</value>							
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true" />
	</bean>
I noticed that the given property files don't get read in the given order when running Spring on Java 1.3.
The problem is in org.springframework.core.io.support.ResourceArrayPropertyEditor which uses a java.util.Set to keep the merged Resource objects. This problem doesn't occur on Java 1.4 or when Commons Collections 3.x is available (uses CollectionFactory.createLinkedSetIfPossible). On Java 1.3 java.util.HashSet gets used and that doesn't keep the order of added elements.