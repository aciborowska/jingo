Currently (1.1.5) )doCloseConnectionIfNecessary reads like this ...
ConnectionHolder conHolder = (ConnectionHolder) TransactionSynchronizationManager.getResource(dataSource);
if (conHolder != null && con == conHolder.getConnection()) {
// It's the transactional Connection: Don't close it.
	conHolder.released();
	return;
}
But there are cases where the connection passed in as a parameter no longer has the wrapper Connection (named PoolGuardxxxx...)  surrounding it, however the conHolder.getConnection() still references the wrapper. In this case the ID's of the objects will not match, but the wrapper implementation of equals uses it's actual connection to perform the comparision.
Changing the 1.1.4 code to .... 
ConnectionHolder conHolder = (ConnectionHolder) TransactionSynchronizationManager.getResource(dataSource);
if (conHolder != null && conHolder.getConnection().equals(con)) {
	// It's the transactional Connection: Don't close it.
        return;
}
.. has solved a Connection 'leak' for me, whereby Connections which were not involved in transactions were not getting closed. 
I appreciate there may not be enough detail in this, if this is the case I would be glad to expand.
Alan.
