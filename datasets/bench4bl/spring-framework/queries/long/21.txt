For some implementations of the Oracle JDBC drivers, it appears you need to flush() the output stream on the BLOB in order to be sure it was written.
In the comments below, added an additional logger.debug() to show the length of the actual BLOB as opposed to just the byte array that was used as an argument, too!
â€“
Specifically, within OracleLobHandler:
		public void setBlobAsBytes(PreparedStatement ps, int parameterIndex, final byte[] content)
				throws SQLException {
			Blob blob = (Blob) createLob(ps, "oracle.sql.BLOB", new LobCallback() {
				public void populateLob(Object lob) throws Exception 
{
					Method methodToInvoke = lob.getClass().getMethod("getBinaryOutputStream", new Class[0]);
					OutputStream out = (OutputStream) methodToInvoke.invoke(lob, null);
                    out.write(content);
                    out.flush();
				}
			});
			ps.setBlob(parameterIndex, blob);
			logger.debug("Set bytes for BLOB with length " + content.length);
            logger.debug("Actual BLOB length: " + blob.length() );
		}
