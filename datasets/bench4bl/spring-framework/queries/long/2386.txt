Think about this property file:
A=$
{B}
B=${C}
C=${B}

And use property placeholder A in a bean factory configuration:
...
    <bean id="circReferencer" class="java.lang.String">
        <constructor-arg>
        <list>
                <value>$
{A}
</value>
        </list>
        </constructor-arg>
    </bean>
...
When Spring postprocesses this bean factory, the program ends with java.lang.StackOverflowError, because function PropertyPlaceholderConfigurer.parseStringValue() cannot detect the circular dependency created in descendant placeholders B, C. It can detect only the circular dependencies only if the toplevel placeholder is present in the circle.
Proposed fix:
original method:
Function protected String parseStringValue(String strVal, Properties props, String originalPlaceholder);
Use a Set of parent placeholders instead of only a String originalPlaceholder and do the lookup in this Set if the placeholder is not present in this map already. If yes, there is a circle. 
Note: LinkedHashSet can be helpful to report correctly ordered members of circular dependency.