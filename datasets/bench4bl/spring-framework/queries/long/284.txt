In PropertyResourceConfigurer, if properties have been set, 
the following code is to resolve the properties:
	public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {
		Properties props = new Properties();
		if (this.properties != null) {
			if (logger.isDebugEnabled()) 
{
				logger.debug("Applying directly specified properties [" + this.properties + "]");
			}
			props.putAll(this.properties);
		}
                ...
        }
However, this doesn't take into account Properties objects that were created with a default set of Properties for fallback stuff.  Annoyingly, putAll doesn't do the right thing wrt Properties objects, but, hey, what can you do.
As a workaround I think that instead of props.putAll(this.properties),
it should be more like:
  Enumeration e = this.properties.getPropertyNames();
  while (e.hasMoreElements())
  {
    String key = (String)e.nextElement();
    props.setProperty(key, this.properties.getProperty(key));
  }


This will allow people that have fairly rich Properties classes/subclasses to use the PropertyResourceConfigurer in a useful way.
As a side note, I had to file a similar bug with the Quartz scheduler project last year  
