When using DataSourceTransactionManager it appears that if a transaction times out while executing some user code, from then on, a queryTimeout of zero will be applied to any new JDBC Statements that are created. Unfortunately a zero queryTimeout means there is no timeout and obviously this means that the transaction will never timeout as DataSourceTransactionManager is relying on the JDBC data source to enforce timeouts.
Perhaps the code in DataSourceUtils.applyTransactionTimeout() should be modified to check for holder.getTimeToLiveInSeconds() == 0 and throw a TransactionTimeoutException?
This probably also applies to the equivalent applyTransactionTimeout methods for Hibernate etc.
