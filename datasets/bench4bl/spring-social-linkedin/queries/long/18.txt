See https://github.com/SpringSource/spring-social-linkedin/issues/12 for more details.
When using templated URLs in RestTemplate, RestTemplate will ultimately encode the entire URL, but this won't work when fetching profiles by the public profile URL. The way around this is to not use templated URLs and instead pass in a URI to RestTemplate's methods. RestTemplate will assume that the URI is good and will do no further encoding.
In the case of ProfileTemplate.getProfileByPublicUrl(), most of the URI shouldn't be encoded...but the value of the url parameter should be encoded. Therefore, that encoding should be done prior to creating the URI object. Doing so should fix the main problem where the URL is invalid and the HTTP 400 error should go away. However, even after fixing that, there's still an HTTP 401 error, likely caused by improper OAuth encoding of the parameters.
Two things must be done to address this problem: (1) Use URIBuilder to build a URI object sent to the getForObject() method, pre-encoding the public profile URL. (2) Fix the OAuth encoding to handle that parameter correctly.