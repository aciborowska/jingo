Most of the methods in HiveMetaStore and ObjectStore adhere to the following idiom when 
interacting with the ObjectStore:



boolean success = false;

try {

  ms.openTransaction();

  /* do some stuff */

  success = ms.commitTransaction();

} finally {

  if (!success) {

    ms.rollbackTransaction();

  }

}



The problem with this is that ObjectStore.commitTransaction() always returns TRUE:



  public boolean commitTransaction() {

    assert (openTrasactionCalls >= 1);

    if (!currentTransaction.isActive()) {

      throw new RuntimeException(

          "Commit is called, but transaction is not active. Either there are"

              + " mismatching open and close calls or rollback was called in the same trasaction");

    }

    openTrasactionCalls--;

    if ((openTrasactionCalls == 0) && currentTransaction.isActive()) {

      transactionStatus = TXN_STATUS.COMMITED;

      currentTransaction.commit();

    }

    return true;

  }



Consequently, the transaction appears to always succeed and ObjectStore is never
directed to rollback transactions that have actually failed. 
