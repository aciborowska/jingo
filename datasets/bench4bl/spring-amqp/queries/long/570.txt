In my case I'm sending messages using Spring messaging, with a custom converter based on org.springframework.messaging.converter.AbstractMessageConverter. This class (and the other converters I've looked at in Spring messaging) seem to all use org.springframework.util.MimeType for encoding the content type, so it seems spring-amqp should handle that case in SimpleAmqpHeaderMapper.extractContentTypeAsString.
Currently it logs a warning and ignores the content type header. However due to a related bug it does pick up the contentType header further down in fromHeaders and treats it as a custom header (as for some reason org.springframework.amqp.support.AmqpHeaders.CONTENT_TYPE doesn't use the "amqp_" prefix).
It seems to me the correct behaviour would be to

handle in org.springframework.util.MimeType extractContentTypeAsString
exclude contentType from custom header processing

Links: https://jira.spring.io/browse/INT-2713