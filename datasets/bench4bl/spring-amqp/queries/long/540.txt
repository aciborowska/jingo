RabbitListenerAnnotationBeanPostProcessor .postProcessAfterInitialization:






Class<?> targetClass = AopUtils.getTargetClass(bean);




final RabbitListener classLevelListener = AnnotationUtils.findAnnotation(bean.getClass(), RabbitListener.class);







bean.getClass() in this case refers to proxy. Why not use AnnotationUtils.findAnnotation(targetClass) ? It's interesting because 2 lines below targetClass is used to find annotations on methods:
ReflectionUtils.doWithMethods(targetClass, ...)