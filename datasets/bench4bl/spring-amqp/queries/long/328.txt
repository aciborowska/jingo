In org.springframework.amqp.rabbit.connection.CachingConnectionFactory.CachedChannelInvocationHandler, channels may be physically closed if the cached channel list exceeds the specified channel cache size.  However, the comparison being done to check this is off by one:
if (!RabbitUtils.isPhysicalCloseRequired() && this.channelList.size() < getChannelCacheSize()) 
{...}

Note that if a user specifies their channel cache size to be 10 because they plan to have 10 consumers, the cached channels will be continuously physically closed because channelList.size() will always be 10 and equal to getChannelCacheSize().
The fix is to make the comparison a "<=" instead of "<".
That is my interpretation of the channel cache size property.  I may have misunderstood the behavior of this property and maybe the above comparison is correct.  If so, then the org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer should be updated to set the channelCacheSize to concurrentConsumers + 1 instead of what is currently doing:
if (cf.getChannelCacheSize() < this.concurrentConsumers) {
    cf.setChannelCacheSize(this.concurrentConsumers);
    logger.warn("CachingConnectionFactory's channelCacheSize can not be less than the number of concurrentConsumers so it was reset to match: "
                + this.concurrentConsumers);
}
