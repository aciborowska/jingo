I'm having problems reading data out of my Neo4j db when the datatype stored is float (double), but the actual value doesn't contain decimal part.
I load the data into Neo4j using cypher load from CSV, something like:
LOAD CSV WITH HEADERS FROM ... AS csvLine 
MATCH (climateInfo:ClimateInfo) ...
SET climateInfo.maxTemperature = toFloat(csvLine.maxTemp)
The value of maxTemperature happens to be 31 for one of the entries.
I can confirm that the data is stored properly as calling a simple neo4jTemplate.query and querying for a simple map for this node brings back the following result:
[climateInfo={minTemperature=23.0, maxTemperature=31.0, avgSeaTemperature=28.0, rainfallDays=2, rainfallMm=13...]
My POJO contains the field as Double, i.e. 
    private Double minTemperature;
    private Double maxTemperature;
    private Double avgTemperature;
    private Double avgSeaTemperature;
When I try to bring the data back using repository methods, it crashes with an exception:
[...]Caused by: java.lang.RuntimeException: java.lang.IllegalArgumentException: Can not set java.lang.Double field com.purr.justtravel.neo4j.domain.climate.ClimateInfoNeo4j.maxTemperature to java.lang.Integer
Debugging shows that indeed, for some reason the property comes back as Integer and not as Double. I'm not 100% sure but I think it might be incorrectly parsed by the jackson parser (com.fasterxml.jackson.databind.deser.impl.MethodProperty). Could SDN use/provide the information from the mapped class to figure out what should be the type?