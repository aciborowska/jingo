





    protected JtaTransactionManager createJtaTransactionManager() {




        JtaTransactionManager jtaTm = new JtaTransactionManager();




        final GraphDatabaseService gds = getGraphDatabaseService();




        if (gds instanceof GraphDatabaseAPI) {




            final TransactionManager txManager = ((GraphDatabaseAPI) gds).getTxManager();




            jtaTm.setTransactionManager(new SpringTransactionManager(gds));




            jtaTm.setUserTransaction(new UserTransactionImpl(txManager));




        } else {




            final NullTransactionManager tm = new NullTransactionManager();




            jtaTm.setTransactionManager(tm);




            jtaTm.setUserTransaction(new UserTransactionAdapter(tm));




        }




        return jtaTm;




    }






This constructor, changed in Neo4j 1.7 from taking a 
{GDS} to taking a {txManager} instance and it changed back to taking a {GDS}
.
new UserTransactionImpl(txManager))
So we should create a createUserTransactionImpl(GDS) in Neo4jConfiguration (or perhaps better create a 
{UserTransactionImplFactoryBean}
) method that creates the UserTransactionImpl reflectively first trying the constructor with a GDS then the one with the txManager.
There is already such a FactoryBean in the tests that should be moved to the java source tree and renamed and made work with all versions. The test configs and examples would have to be adapted to use the factory bean instead as well as the Neo4j-Configuration.