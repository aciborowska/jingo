a) In @RelatedToVia & @RelatedTo & @NodeEntity annotations, you get something like :
Type mismatch : Cannot convert from Class<XXX> to Class<? extends RelationshipBacked>
b) In relateTo(...) , getRelationshipTo(), persist() and all other introduced methods, you get a
The method relateTo(World, String) is undefined for the type XXX
or
The method persist() is undefined for the type XXX
etc
c) Finally in repository definitions like
[CODE]public interface XXXRepository extends GraphRepository<XXX>, NamedIndexRepository<XXX> {}[/CODE]
you get:
Bound mismatch: The type XXX is not a valid substitute for the bounded parameter <T
extends GraphBacked<?>> of the type NamedIndexRepository<T>
Bound mismatch: The type XXX is not a valid substitute for the bounded parameter <T
extends GraphBacked<?>> of the type GraphRepository<T>
Related, but closed issue https://jira.springsource.org/browse/DATAGRAPH-39