I have a simple spring boot project with JPA repositories to store USER and AUTHORITIES information for spring-security and to store LOG events. The project is working fine. Now i would like to add extra functionality that involves neo4j. I added spring-data-neo4j to the project and I created my configuration for neo4j.






@EnableScheduling




@EnableTransactionManagement




@Configuration




@EnableNeo4jRepositories(basePackages = "com.company.test.graph.repository")




public class Neo4jConfig  extends Neo4jConfiguration {




 




	    /**




	     * Creates a neo4j configuration, falling back to embedded if config details not present




	     */




 




	    @Bean




	    public SessionFactory getSessionFactory() {




	        return new SessionFactory( "com.company.test.graph.domain");




	    }




	    @Bean




	    @Scope(value = "session", proxyMode = ScopedProxyMode.TARGET_CLASS)




	    public Session getSession() throws Exception {




	        return super.getSession();




	    }




 




}







Previously I had my user repository to store user information on relational database






/**




 * Spring Data JPA repository for the User entity.




 */




public interface UserRepository extends JpaRepository<User, Long> {




 




    Optional<User> findOneByActivationKey(String activationKey);




 




    List<User> findAllByActivatedIsFalseAndCreatedDateBefore(ZonedDateTime dateTime);




 




    Optional<User> findOneByResetKey(String resetKey);




 




    Optional<User> findOneByEmail(String email);




 




    Optional<User> findOneByLogin(String login);




 




    Optional<User> findOneById(Long userId);




 




    @Override




    void delete(User t);




 




}







On UserService I'm injecting the repository






@Service




@Transactional




public class UserService {




....




 




    @Inject




    private UserRepository userRepository;




....




}







When I run the application I'm getting and error related with transaction manager and laizy initialization exception.






Caused by: org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.company.test.domain.User.authorities, could not initialize proxy - no Session




        at org.hibernate.collection.internal.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:576)




        at org.hibernate.collection.internal.AbstractPersistentCollection.withTemporarySessionIfNeeded(AbstractPersistentCollection.java:215)




        at org.hibernate.collection.internal.AbstractPersistentCollection.initialize(AbstractPersistentCollection.java:555)




        at org.hibernate.collection.internal.AbstractPersistentCollection.read(AbstractPersistentCollection.java:143)




        at org.hibernate.collection.internal.PersistentSet.iterator(PersistentSet.java:180)




        at java.util.Spliterators$IteratorSpliterator.estimateSize(Spliterators.java:1821)




        at java.util.Spliterator.getExactSizeIfKnown(Spliterator.java:408)




        at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:480)




        at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)




        at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)




        at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)




        at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)




        at com.company.test.security.UserDetailsService.lambda$loadUserByUsername$1(UserDetailsService.java:42)




        at java.util.Optional.map(Optional.java:215)




        at com.company.test.security.UserDetailsService.loadUserByUsername(UserDetailsService.java:36)




        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)




        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)




        at java.lang.reflect.Method.invoke(Method.java:498)




        at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)




        at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)




        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)




        at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)




        at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:280)




        at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)




        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)




        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)




        at com.sun.proxy.$Proxy169.loadUserByUsername(Unknown Source)




        at org.springframework.secur







Here is the project, I'm getting the error during login. If I remove spring data neo4j stuff it works
Thanks