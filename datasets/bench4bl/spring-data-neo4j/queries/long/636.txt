I'm leaving this as Minor because it's an edge case - but it is a blocker for our project.
The Mapper seems to be confused based on matching field and setter types, ignoring direction of the relationship.






 




@NodeEntity




public class Code {




 




   private String name;




 




   @Relationship(type="MAPPED_BY", direction=Relationship.INCOMING)




   private Set<Code> mappedFrom;




 




   @Relationship(type="MAPPED_BY", direction=Relationship.OUTGOING)




   private Set<Code> mappedTo;




 




   //... getters and setters for each of the above...




 




}






I see the following WARNs in the logs:
[WARN] neo4j.ogm.entityaccess.DefaultEntityAccessStrategy - Cannot map iterable of class Code to instance of Code. More than one potential matching setter found.
[WARN] neo4j.ogm.entityaccess.DefaultEntityAccessStrategy - Cannot map iterable of class Code to instance of Code. More than one potential matching field found.