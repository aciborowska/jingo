Sample code:






@Query("START user=node({self}) MATCH user-[:LIKE]->thing RETURN COUNT(*)")




private Long likeCount;






When query result no result, it throws:






java.util.NoSuchElementException: No element found in IteratorWrapper(empty iterator)




	org.neo4j.helpers.collection.IteratorUtil.assertNotNull(IteratorUtil.java:183)




	org.neo4j.helpers.collection.IteratorUtil.single(IteratorUtil.java:136)




	org.neo4j.helpers.collection.IteratorUtil.single(IteratorUtil.java:274)




	org.springframework.data.neo4j.conversion.QueryResultBuilder$1.single(QueryResultBuilder.java:79)




	org.springframework.data.neo4j.fieldaccess.QueryFieldAccessorFactory$QueryFieldAccessor.executeQuery(QueryFieldAccessorFactory.java:113)




	org.springframework.data.neo4j.fieldaccess.QueryFieldAccessorFactory$QueryFieldAccessor.getValue(QueryFieldAccessorFactory.java:99)




	org.springframework.data.neo4j.fieldaccess.DefaultEntityState.getValue(DefaultEntityState.java:97)




	org.springframework.data.neo4j.fieldaccess.DetachedEntityState.getValue(DetachedEntityState.java:100)




	org.springframework.data.neo4j.fieldaccess.DetachedEntityState.getValue(DetachedEntityState.java:105)




	com.satukancinta.domain.User.likeCount_aroundBody37$advice(User.java:253)




	com.satukancinta.domain.User.getLikeCount(User.java:129)






Expected behavior is, since the field is nullable, then simply assign null as the value.