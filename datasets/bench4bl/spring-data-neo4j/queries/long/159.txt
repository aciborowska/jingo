Using jersey-server makes it unusable (without Java EE container configuration) to be deployed on JBoss AS7, or other application server that provides its own JAX-RS implementation.
After excluding jersey-server, my application still works.
	<dependency>
		<groupId>org.springframework.data</groupId>
		<artifactId>spring-data-neo4j-rest</artifactId>
		<version>$
{spring-data-neo4j.version}
</version>
		<exclusions>
...
			<exclusion>
				<artifactId>jersey-server</artifactId>
				<groupId>com.sun.jersey</groupId>
			</exclusion>
		</exclusions>
	</dependency>
Is there a reason to depend on jersey-server in the first place? Since spring-data-neo4j-rest is a REST client, not a REST server.
If jersey-server is needed for compilation of spring data neo4j, but not by the application, please mark the jersey-server dependency as scope=provided or optional=true.
Thank you.