The following bug introduced a performance regression to many common JDT operations (e.g., refreshing the Package Explorer, which issues JavaProject.getAllPackageFragmentRoots() calls):Bug 410207 - Compiler incorrectly reports error message "X cannot be resolved. It is indirectly referenced from required .class files"That change added retrieval of a jar file's language level to the JarPackageFragmentRoot constructors, as can bee seen in the following stack trace:main" prio=10 tid=0x0000000001dba800 nid=0x38b8 runnable [0x00007fff0b08f000] java.lang.Thread.State: RUNNABLE at (C/C++) 0x00007f2633c40d2d (Unknown Source) at (C/C++) 0x00007f262a60acec (Unknown Source) at java.util.zip.ZipFile.open(Native Method) at java.util.zip.ZipFile. init (ZipFile.java:215) at java.util.zip.ZipFile. init (ZipFile.java:145) at java.util.zip.ZipFile. init (ZipFile.java:159) at org.eclipse.jdt.internal.core.JavaModelManager.getZipFile(JavaModelManager.java:2712) at org.eclipse.jdt.internal.core.util.Util.getJdkLevel(Util.java:846) at org.eclipse.jdt.internal.core.JarPackageFragmentRoot. init (JarPackageFragmentRoot.java:65) at org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot0(JavaProject.java:1836) at org.eclipse.jdt.internal.core.JavaProject.getPackageFragmentRoot(JavaProject.java:1826) at org.eclipse.jdt.internal.core.DeltaProcessor$RootInfo.getPackageFragmentRoot(DeltaProcessor.java:138) at org.eclipse.jdt.internal.core.DeltaProcessor$RootInfo. init (DeltaProcessor.java:130) at org.eclipse.jdt.internal.core.DeltaProcessingState.getRootInfos(DeltaProcessingState.java:336) at org.eclipse.jdt.internal.core.DeltaProcessingState.initializeRootsWithPreviousSession(DeltaProcessingState.java:278) - locked  0x00000006e820a5e8  (a org.eclipse.jdt.internal.core.DeltaProcessingState) at org.eclipse.jdt.internal.core.JavaModelManager.startup(JavaModelManager.java:5045)I ran the FullSourceWorkspaceModelTests.testGetAllPackageFragmentRoots test on both Luna and our internal Kepler release and see a 5x performance degradation. Note that our internal Kepler release includes the cherry pick for bug 411423.Version: Luna (4.4.0)OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=256m; support was removed in 8.0Used default compliance: 1.4Unzipping /usr/local/google/home/tparker/releng/eclipse.platform.releng.aggregator/eclipse.jdt.core.binaries/org.eclipse.jdt.core.tests.binaries/full-source-R3_0.zipin /usr/local/google/home/tparker/workspace/junit-workspace... done in 1386ms.Create and open projects in environment...(6456ms)Create lib entries for the JDKs...5 found (0ms)Set projects classpaths...(2537ms)================================================================================Running FullSourceWorkspaceModelTests#testGetAllPackageFragmentRoots...Create project BigProject in /usr/local/google/home/tparker/workspace/junit-workspace:- create 200 folders x 200 packages...=  global time = 1.851 seconds)- add project to full source workspace...(1660ms)- Create compilation unit with secondary type...(1ms)Scenario 'org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceModelTests#testGetAllPackageFragmentRoots()' (average over 10 samples): System Time: 105ms (95% in [89ms, 120ms]) Measurable effect: 26ms (1.3 SDs) (required sample size for an effect of 5% of mean: 259) Used Java Heap: 6.46M (95% in [5.8M, 7.13M]) Measurable effect: 1.17M (1.3 SDs) (required sample size for an effect of 5% of mean: 132) Working Set: 8.4K (95% in [-8.84K, 25.65K]) Measurable effect: 30.49K (1.3 SDs) (required sample size for an effect of 5% of stdev: 6401) Elapsed Process: 105ms (95% in [89ms, 120ms]) Measurable effect: 26ms (1.3 SDs) (required sample size for an effect of 5% of mean: 259) Kernel time: 39ms (95% in [33ms, 44ms]) Measurable effect: 9ms (1.3 SDs) (required sample size for an effect of 5% of mean: 230) CPU Time: 123ms (95% in [101ms, 144ms]) Measurable effect: 37ms (1.3 SDs) (required sample size for an effect of 5% of mean: 368) Hard Page Faults: 0 (95% in [0, 0]) Soft Page Faults: 2.02K (95% in [2K, 2.03K]) Measurable effect: 23 (1.3 SDs) Text Size: 0 (95% in [0, 0]) Data Size: 0 (95% in [0, 0]) Library Size: 0 (95% in [0, 0]) Version: Kepler (4.3.2) (with cherry picks of JavaModelManager external file cache fixes)OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=256m; support was removed in 8.0Used default compliance: 1.4Unzipping /usr/local/google/home/tparker/releng/eclipse.platform.releng.aggregator/eclipse.jdt.core.binaries/org.eclipse.jdt.core.tests.binaries/full-source-R3_0.zipin /usr/local/google/home/tparker/workspace/junit-workspace... done in 1407ms.Create and open projects in environment...(5606ms)Create lib entries for the JDKs...5 found (1ms)Set projects classpaths...(1205ms)================================================================================Running FullSourceWorkspaceModelTests#testGetAllPackageFragmentRoots...Create project BigProject in /usr/local/google/home/tparker/workspace/junit-workspace:- create 200 folders x 200 packages...=  global time = 1.694 seconds)- add project to full source workspace...(1322ms)- Create compilation unit with secondary type...(2ms)Scenario 'org.eclipse.jdt.core.tests.performance.FullSourceWorkspaceModelTests#testGetAllPackageFragmentRoots()' (average over 10 samples): System Time: 20ms (95% in [5ms, 35ms]) Measurable effect: 26ms (1.3 SDs) (required sample size for an effect of 5% of mean: 6367) Used Java Heap: 2.07M (95% in [1.57M, 2.58M]) Measurable effect: 915.19K (1.3 SDs) (required sample size for an effect of 5% of mean: 744) Working Set: 9.2K (95% in [-7.97K, 26.37K]) Measurable effect: 30.36K (1.3 SDs) (required sample size for an effect of 5% of stdev: 6400) Elapsed Process: 20ms (95% in [5ms, 35ms]) Measurable effect: 26ms (1.3 SDs) (required sample size for an effect of 5% of mean: 6367) Kernel time: 3ms (95% in [0ms, 6ms]) Measurable effect: 6ms (1.3 SDs) (required sample size for an effect of 5% of stdev: 6401) CPU Time: 30ms (95% in [21ms, 38ms]) Measurable effect: 14ms (1.3 SDs) (required sample size for an effect of 5% of mean: 949) Hard Page Faults: 0 (95% in [0, 0]) Soft Page Faults: 12 (95% in [0, 24]) Measurable effect: 21 (1.3 SDs) (required sample size for an effect of 5% of stdev: 6400) Text Size: 0 (95% in [0, 0]) Data Size: 0 (95% in [0, 0]) Library Size: 0 (95% in [0, 0])I'm investigating a fix for this regression by caching the language level for each jar so it is not so frequently computed.