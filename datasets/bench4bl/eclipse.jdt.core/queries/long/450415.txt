This bug has perhaps existed forever:// --import java.util.List;interface I { String foo();}interface J { List String  foo();}public class X { static void goo(I i) { System.out.println("goo(I)"); } static void goo(J j) { System.out.println("goo(J)"); } static  T  List T  loo() { return null; } public static void main(String[] args) { goo(()- loo()); }}// --This program fails to compile with ECJ, while compiling alright with8u20.Problem is a mistaken assumption on my part that we can reuse result expressions having computed them against one particular target type.(If you reverse the order of the goo methods, the code compiles fine)