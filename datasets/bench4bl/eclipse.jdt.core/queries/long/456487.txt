When trying to null-annotate class Optional, I came up with this variant://---class Optional @NonNull T  { @Nullable T value; private Optional(T value) { this.value = value; } public static  @NonNull T  Optional T  of(T value) { return new Optional T (value); } public T get() { @Nullable T t = this.value; if (t != null) return t; else throw new NoSuchElementException("No value present"); } } public @Nullable T orElse(@Nullable T other) { return (this.value != null) ? this.value : other; }}//---Here we complain:----------1. WARNING in /tmp/Optional.java (at line 10) if (t != null) return t; ^Redundant null check: The variable t cannot be null at this location----------2. WARNING in /tmp/Optional.java (at line 11) else throw new NoSuchElementException("No value present"); } ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^Dead code----------3. WARNING in /tmp/Optional.java (at line 12) public @Nullable T orElse(@Nullable T other) { return (this.value != null) ? this.value : other; } ^^^^^Redundant null check: The field value is specified as @NonNull----------This indicates that the compiler fails to override the previous nullness when saying "@Nullable T". Note that a variant declaring " T extends @NonNull Object " instead of " @NonNull T " works as desired.Additionally, when I change "Optional @NonNull T " to " Optional @Nullable T " and add this test program://---@NonNullByDefault@SuppressWarnings("unused")class OTest { public static void good() { Optional String  os1 = Optional.of("yes"); @NonNull String s = os1.get(); @Nullable String ns = os1.orElse(null); } public static void bad() { Optional String  os = Optional.of(null); @NonNull String s = os.orElse(null); }}//---I get:java.lang.NullPointerException at org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.providedNullTagBits(NullAnnotationMatching.java:320) at org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.analyse(NullAnnotationMatching.java:204) at org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.analyse(NullAnnotationMatching.java:129) at org.eclipse.jdt.internal.compiler.ast.NullAnnotationMatching.checkAssignment(NullAnnotationMatching.java:103) at org.eclipse.jdt.internal.compiler.ast.LocalDeclaration.analyseCode(LocalDeclaration.java:105) at org.eclipse.jdt.internal.compiler.ast.MethodDeclaration.analyseCode(MethodDeclaration.java:126) at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.internalAnalyseCode(TypeDeclaration.java:737) at org.eclipse.jdt.internal.compiler.ast.TypeDeclaration.analyseCode(TypeDeclaration.java:261) at org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.analyseCode(CompilationUnitDeclaration.java:118) at org.eclipse.jdt.internal.compiler.Compiler.process(Compiler.java:794) at org.eclipse.jdt.internal.compiler.ProcessTaskManager.run(ProcessTaskManager.java:139)