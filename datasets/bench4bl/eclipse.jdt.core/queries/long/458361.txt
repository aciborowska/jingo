Feeding source similar to this://---public interface MyMap K,V  extends Map K,V  { @Override public @Nullable V get(@Nullable Object key); ...}//---Into the reconciler causes:NullPointerException: SourceElementParser$1(ProblemReporter).illegalReturnRedefinition(AbstractMethodDeclaration, MethodBinding, char[][]) line: 9375 ImplicitNullAnnotationVerifier.checkNullSpecInheritance(MethodBinding, AbstractMethodDeclaration, boolean, boolean, boolean, MethodBinding, MethodBinding[], Scope, ImplicitNullAnnotationVerifier$InheritedNonNullnessInfo[]) line: 299 ImplicitNullAnnotationVerifier.checkImplicitNullAnnotations(MethodBinding, AbstractMethodDeclaration, boolean, Scope) line: 115 SourceTypeBinding.createArgumentBindings(MethodBinding, CompilerOptions) line: 2007 SourceTypeBinding.resolveTypesFor(MethodBinding) line: 1974 SourceTypeBinding.methods() line: 1467 SourceTypeBinding.faultInTypesForFieldsAndMethods() line: 856 CompilationUnitScope.faultInTypes() line: 445 CompilationUnitProblemFinder(Compiler).resolve(CompilationUnitDeclaration, ICompilationUnit, boolean, boolean, boolean) line: 958 CompilationUnitProblemFinder.process(CompilationUnit, SourceElementParser, WorkingCopyOwner, HashMap, boolean, int, IProgressMonitor) line: 197 CompilationUnit.buildStructure(OpenableElementInfo, IProgressMonitor, Map, IResource) line: 194 CompilationUnit(Openable).generateInfos(Object, HashMap, IProgressMonitor) line: 259 CompilationUnit(JavaElement).openWhenClosed(Object, boolean, IProgressMonitor) line: 579 CompilationUnit.makeConsistent(int, boolean, int, HashMap, IProgressMonitor) line: 1082 ReconcileWorkingCopyOperation.makeConsistent(CompilationUnit) line: 171 ReconcileWorkingCopyOperation.executeOperation() line: 90 ReconcileWorkingCopyOperation(JavaModelOperation).run(IProgressMonitor) line: 729 ReconcileWorkingCopyOperation(JavaModelOperation).runOperation(IProgressMonitor) line: 789 CompilationUnit.reconcile(int, int, WorkingCopyOwner, IProgressMonitor) line: 1247 JavaReconcilingStrategy.reconcile(ICompilationUnit, boolean) line: 126 JavaReconcilingStrategy.access$0(JavaReconcilingStrategy, ICompilationUnit, boolean) line: 108 JavaReconcilingStrategy$1.run() line: 89 SafeRunner.run(ISafeRunnable) line: 42 JavaReconcilingStrategy.reconcile(boolean) line: 87 JavaReconcilingStrategy.reconcile(IRegion) line: 151 JavaCompositeReconcilingStrategy(CompositeReconcilingStrategy).reconcile(IRegion) line: 86 JavaCompositeReconcilingStrategy.reconcile(IRegion) line: 104 JavaReconciler(MonoReconciler).process(DirtyRegion) line: 77 AbstractReconciler$BackgroundThread.run() line: 206 Passing null for nonNullAnnotationName doesn't look like a good idea.