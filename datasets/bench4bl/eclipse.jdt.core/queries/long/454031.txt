I20141202-0800 and master; was OK in I20141125-0800There's a new bug in null analysis that leads to a wrong "dead code" problem.I get two wrong errors in my workspace:- Dead code LocalCorrectionsSubProcessor.java /org.eclipse.jdt.ui/ui/org/eclipse/jdt/internal/ui/text/correction line 196- Dead code UpdateManagerUtils.java /org.eclipse.update.core/src/org/eclipse/update/internal/core line 149Example to reproduce:package xy;public class Try { public static void main(String[] args) { foo(new Node()); } static void foo(Node n) { Node selectedNode= n; if (selectedNode == null) { return; } while (selectedNode != null    !(selectedNode instanceof Cloneable)) { selectedNode= selectedNode.getParent(); } if (selectedNode == null) { //wrong problem: Null comparison always yields false: The variable selectedNode cannot be null at this location // wrong problem: dead code System.out.println(selectedNode.hashCode()); } }}class Node { Node getParent() { return null; }}