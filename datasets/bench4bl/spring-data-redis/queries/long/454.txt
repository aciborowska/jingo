Only an issue when a pool is used.
In DefaultSetOperations's scan method, the RedisCallback's doInRedis takes the RedisConnection and calls connection.sScan(rawKey, options). 
Once the call to connection.sScan is complete, the connection is released.
When iterating over the scanned results, once all records of the iterator have been returned, as long as the cursorId is not 0, it keeps SSCAN ing for the next batch of records until all records have been returned. See hasNext() in ScanCursor.
All SSCAN s are executed using the same connection although the connection has already been released.
In Jedis, before a connection is returned to the pool, the database index is set to 0, so if you're using another database index, the issue will always occur. 
If you're using Jedis with database index 0, or if you're using Lettuce, the issue will only occur if another process is actually given the same connection.