SRP requires that all commands in a tx be executed in a pipeline. Calling SrpConnection.multi() opens the pipeline under the hood, but doesn't close it and return the results when exec() is called. Instead, it returns a list containing only the Future with the boolean result of performing exec. The caller would have to know to manually close the pipeline. 
This breaks RedisAtomicInteger/Long as well, because they expect exec() to return null if a watched key was modified during the tx, but instead they get a Future with a boolean value of false.