We have usage pattern for Redis for which I have not foudn direct support through SDKV, which I would love to have if it makes sense. What we do is that to optimize connection usage we open a pipelined connection for the current thread so that all redis operations (using the same ConnectionFactory) will use that connection.
Below is the code I have created for that pattern, using a plain Runnable as callback interface.
Now I wonder if that is okay to do (it seems to work) and if that pattern could somehow be integrated into SDKV.






 




    private List<Object> executeWithPipelinedConnection(final Runnable code) {




        List<Object> result = Collections.emptyList();




 




        RedisConnection conn = RedisConnectionUtils.bindConnection(_connectionFactory);




        try {




            conn.openPipeline();




            try {




                code.run();




            } finally {




                result = conn.closePipeline();




            }




        } finally {




            RedisConnectionUtils.unbindConnection(_connectionFactory);




        }




 




        return result;




    }





 