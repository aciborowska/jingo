Since the schema for Remoting subsystem says that multiple socket bindings should be allowed on a connector, I'm trying to create a connector like that and I couldn't get it to work.
I assume the correct syntax should be the one with [rjanik-sb1,rjanik-sb2] since the socket bindings are defined as xs:list in the schema file. Here's what I tried:






[standalone@localhost:9990 /] /socket-binding-group=standard-sockets/socket-binding=rjanik-sb1:add(interface=public)




{"outcome" => "success"}




[standalone@localhost:9990 /] /socket-binding-group=standard-sockets/socket-binding=rjanik-sb2:add(interface=public)




{"outcome" => "success"}




standalone@localhost:9990 /] /subsystem=remoting/connector=newcon:add(socket-binding="rjanik-sb1 rjanik-sb2")




{




    "outcome" => "failed",




    "failure-description" => "WFLYCTL0158: Operation handler failed: java.lang.IllegalArgumentException: Invalid name character at offset 45",




    "rolled-back" => true




}




[standalone@localhost:9990 /] /subsystem=remoting/connector=newcon:add(socket-binding="rjanik-sb1, rjanik-sb2")




{




    "outcome" => "failed",




    "failure-description" => "WFLYCTL0158: Operation handler failed: java.lang.IllegalArgumentException: Invalid name character at offset 46",




    "rolled-back" => true




}




[standalone@localhost:9990 /] /subsystem=remoting/connector=newcon:add(socket-binding="rjanik-sb1,rjanik-sb2")




{




    "outcome" => "failed",




    "failure-description" => {"WFLYCTL0180: Services with missing/unavailable dependencies" => ["jboss.remoting.server.newcon is missing [org.wildfly.network.socket-binding.rjanik-sb1,rjanik-sb2]"]},




    "rolled-back" => true




}




[standalone@localhost:9990 /] /subsystem=remoting/connector=newcon:add(socket-binding="org.wildfly.network.socket-binding.rjanik-sb1,org.wildfly.network.socket-binding.rjanik-sb2")




{




    "outcome" => "failed",




    "failure-description" => {"WFLYCTL0180: Services with missing/unavailable dependencies" => ["jboss.remoting.server.newcon is missing [org.wildfly.network.socket-binding.org.wildfly.network.socket-binding.rjanik-sb1,org.wildfly.network.socket-binding.rjanik-sb2]"]},




    "rolled-back" => true




}




[standalone@localhost:9990 /] /subsystem=remoting/connector=newcon:add(socket-binding="rjanik-sb1,org.wildfly.network.socket-binding.rjanik-sb2")




{




    "outcome" => "failed",




    "failure-description" => {"WFLYCTL0180: Services with missing/unavailable dependencies" => ["jboss.remoting.server.newcon is missing [org.wildfly.network.socket-binding.rjanik-sb1,org.wildfly.network.socket-binding.rjanik-sb2]"]},




    "rolled-back" => true




}




[standalone@localhost:9990 /] /subsystem=remoting/connector=newcon:add(socket-binding=[rjanik-sb1,rjanik-sb2])




{




    "outcome" => "failed",




    "failure-description" => "WFLYCTL0097: Wrong type for socket-binding. Expected [STRING] but was LIST",




    "rolled-back" => true




}




[standalone@localhost:9990 /] /subsystem=remoting/connector=newcon:add(socket-binding="[rjanik-sb1,rjanik-sb2]")




{




    "outcome" => "failed",




    "failure-description" => {"WFLYCTL0180: Services with missing/unavailable dependencies" => ["jboss.remoting.server.newcon is missing [org.wildfly.network.socket-binding.[rjanik-sb1,rjanik-sb2]]"]},




    "rolled-back" => true




}




[standalone@localhost:9990 /] /subsystem=remoting/connector=newcon:add(socket-binding="[rjanik-sb1],[rjanik-sb2]")




{




    "outcome" => "failed",




    "failure-description" => {"WFLYCTL0180: Services with missing/unavailable dependencies" => ["jboss.remoting.server.newcon is missing [org.wildfly.network.socket-binding.[rjanik-sb1],[rjanik-sb2]]"]},




    "rolled-back" => true




}




[standalone@localhost:9990 /] /subsystem=remoting/connector=newcon:add(socket-binding=["rjanik-sb1","rjanik-sb2"])




{




    "outcome" => "failed",




    "failure-description" => "WFLYCTL0097: Wrong type for socket-binding. Expected [STRING] but was LIST",




    "rolled-back" => true




}






