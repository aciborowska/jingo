I need to create a local region in client cache to store some data locally. I config my local region using SDG. When I do region.put, it updates cache server as well (found by using a loggingCacheListener, afterUpdate on server side is triggered).






<gfe:client-region id="analyticsInfoRegion" cache-ref="gemfireCache" shortcut="LOCAL">




    <gfe:cache-listener ref="loggingCacheListener" />




</gfe:client-region>






DAO (before):






@Resource(name = GBCConstants.REGION_ANALYTICS_INFO)




public void setRegion(final Region<AnalyticsKey, AnalyticsInfo> region) {




    this.region = region;




}






Therefore, I had to switch to GemFire API to create this local region in my Dao. 
DAO (after):






@PostConstruct




public void init() {




    ClientCache clientCache = ClientCacheFactory.getAnyInstance();




    this.region = clientCache.<AnalyticsKey, AnalyticsInfo>createClientRegionFactory(ClientRegionShortcut.LOCAL)




        .addCacheListener(loggingCacheListener)




        .create(GBCConstants.REGION_ANALYTICS_INFO);




}






One thing I realized when looking at the detail in debug mode is that the local region has server pool attached ("srp") when it's configured using SDG. However, when it's configured using GemFire API, its "srp" is NULL.