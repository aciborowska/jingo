I have a case that my gemfire function should not have any arguments. Although according to the gemfire API it is perfectly fine to define functions without arguments, when I tried my function I got a NPE back.
To reproduce it you can define a simple function like:
    @GemfireFunction(hasResult=true)
    public void test()
{
        logger.info("test() is called!");
    }

And call it from gfsh :
         gfsh>execute function --id=test 
And you would see the following Exception in the server log:
[severe 2014/01/06 13:30:02.683 EST server1 <Function Execution Processor2> tid=0x40] UnExpected exception during function execution local member
java.lang.NullPointerException
      at org.springframework.data.gemfire.function.DefaultFunctionArgumentResolver.resolveFunctionArguments(DefaultFunctionArgumentResolver.java:30)
      at org.springframework.data.gemfire.function.FunctionContextInjectingArgumentResolver.resolveFunctionArguments(FunctionContextInjectingArgumentResolver.java:86)
      at org.springframework.data.gemfire.function.PojoFunctionWrapper.execute(PojoFunctionWrapper.java:107)
      at com.gemstone.gemfire.internal.cache.execute.AbstractExecution.executeFunctionLocally(AbstractExecution.java:352)
      at com.gemstone.gemfire.internal.cache.execute.AbstractExecution$2.run(AbstractExecution.java:316)
      at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
      at com.gemstone.gemfire.distributed.internal.DistributionManager.runUntilShutdown(DistributionManager.java:692)
      at com.gemstone.gemfire.distributed.internal.DistributionManager$8$1.run(DistributionManager.java:1116)
      at java.lang.Thread.run(Thread.java:744)