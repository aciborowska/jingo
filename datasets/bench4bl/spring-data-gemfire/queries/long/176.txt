In Gemfire it is possible to set <entry-idle-time> and <entry-time-to-live> on a client's region whereas in Spring Gemfire this functionality seems to be missing. 
For example In gemfire, I can do the following for a client
<client-cache>
	<pool name="client" subscription-enabled="true">
		<server host="localhost" port="40404" />
	</pool>
	<region name="exampleRegion">
		<region-attributes refid="CACHING_PROXY">
		<entry-idle-time>
			<expiration-attributes timeout="10" action="destroy" />
			</entry-idle-time>
		</region-attributes>
	</region>
</client-cache>
When I try to do the similar in Spring Gemfire, the line <gfe:entry-tti timeout="100" action="DESTROY"/>  doesnt seem to be supported by schema.
  <gfe:client-cache pool-name="client" />
<gfe:pool id="client" subscription-enabled="true">
<gfe:server host="localhost" port="40404" />
</gfe:pool>
<gfe:client-region id="Customer" shortcut="CACHING_PROXY">
<gfe:entry-tti timeout="100" action="DESTROY"/> 
</gfe:client-region>
</beans>
The line   <gfe:entry-tti timeout="100" action="DESTROY"/> is supported for Server cache. For example, the following works fine
.
.
.
  <gfe:cache-server/>
    <gfe:replicated-region id="Customer">
        <gfe:cache-listener>
            <bean class="org.springframework.data.gemfire.examples.util.LoggingCacheListener"/>
        </gfe:cache-listener>
        <gfe:entry-tti timeout="100" action="DESTROY"/> 
    </gfe:replicated-region>
</beans>