When using spring-data-rest, serialization of JSR-310 types, the serializer treats them as Resources.
Spring boot 1.4.0, jackson JSR-310 module in the path






spring.jackson.serialization.write-date-keys-as-timestamps=false













class Person {




    private LocalDate dateOfBirth;




}







Serialization with jackson yields 






{dateOfBirth: { "content" : "1970-01-01"}}







However doing the same thing after removing spring-data-rest starter from pom, yields 






{dateOfBirth: "1970-01-01"}







I've seen the LocalDate attribute was treated as a Resource. The obvious reason is that in NestedEntitiySerializer class within PersistentEntityJackson2Module treats every nested attribute as Resource. That is also why serialization of Maps fail, which is easy to fix by adding an exception for Map. However in cases of LocalDate and other friends this will not work because the language level is 6, not 8






		@Override




		public void serialize(Object value, JsonGenerator gen, SerializerProvider provider) throws IOException {




 




			if (value instanceof Collection) {




 




				Collection<?> source = (Collection<?>) value;




				List<Object> resources = new ArrayList<Object>();




 




				for (Object element : source) {




					resources.add(toResource(element));




				}




 




				provider.defaultSerializeValue(resources, gen);




			} else if (value instanceof Map) {




				provider.defaultSerializeValue(value, gen);




			} else if (value instanceof ChronoLocalDate) {




				provider.defaultSerializeValue(value, gen);




			} else if (value instanceof ChronoLocalDateTime) {




				provider.defaultSerializeValue(value, gen);




			} else {




				provider.defaultSerializeValue(toResource(value), gen);




			}




		}







This looks ugly but LocalDate and LocalDateTime when serialized as string becomes objects not arrays anymore. There must be a way of giving exceptions to "all nested attributes are resources" policy and this does not need to be an annotation I believe it can be buried in the Jackson Module class.