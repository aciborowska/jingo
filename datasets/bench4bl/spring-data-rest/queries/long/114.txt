Hi guys,
I'm using Spring Data Rest, version 1.1.0.M1 and it doesn't work because I have collections that are loaded lazily from my database, and instead of the real object, a proxy is returned and spring-data-rest throws this exception:






com.fasterxml.jackson.databind.JsonMappingException: failed to lazily initialize a collection of role: com.xxxx.xxxx.core.model.catalog.ProductModel.name, could not initialize proxy - no Session




	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:131)




	at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:1728)




	at com.fasterxml.jackson.core.base.GeneratorBase.writeObject(GeneratorBase.java:258)




	at com.fasterxml.jackson.core.JsonGenerator.writeObjectField(JsonGenerator.java:1110)




	at org.springframework.data.rest.repository.json.PersistentEntityJackson2Module$ResourceSerializer$1.doWithPersistentProperty(PersistentEntityJackson2Module.java:323)




	at org.springframework.data.mapping.model.BasicPersistentEntity.doWithProperties(BasicPersistentEntity.java:241)




	at org.springframework.data.rest.repository.json.PersistentEntityJackson2Module$ResourceSerializer.serialize(PersistentEntityJackson2Module.java:298)




	at org.springframework.data.rest.repository.json.PersistentEntityJackson2Module$ResourceSerializer.serialize(PersistentEntityJackson2Module.java:262)




	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:120)




	at com.fasterxml.jackson.databind.ObjectMapper.writeValue(ObjectMapper.java:1728)




	at org.springframework.http.converter.json.MappingJackson2HttpMessageConverter.writeInternal(MappingJackson2HttpMessageConverter.java:194)




	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:179)




	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:148)




	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:90)




	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:189)




	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:69)




	at org.springframework.data.rest.webmvc.ResourceProcessorHandlerMethodReturnValueHandler.handleReturnValue(ResourceProcessorHandlerMethodReturnValueHandler.java:163)




	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:69)




	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:122)




	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:745)




	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:686)




	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:80)




	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:925)




	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)




	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:936)




	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:827)




	at javax.servlet.http.HttpServlet.service(HttpServlet.java:735)




	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:812)




	at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)




	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)




	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:457)




	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)




	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:557)




	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)




	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1075)




	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:384)




	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)




	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1009)




	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)




	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:255)




	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:154)




	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)




	at org.eclipse.jetty.server.Server.handle(Server.java:368)




	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:489)




	at org.eclipse.jetty.server.AbstractHttpConnection.headerComplete(AbstractHttpConnection.java:942)




	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:1004)




	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:640)




	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:235)




	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)




	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:628)




	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)




	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)




	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)




	at java.lang.Thread.run(Thread.java:722)




Â 






What needs to be done is the spring-data should query for the inside a transaction, and should convert the product to json inside the same transaction. To me it seems like a bug, or at least like a really necessary improvement.