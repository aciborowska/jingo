@RepositoryRestController automatically register itself for /{repositoryName}%7B which passes security check for 






protected void configure(HttpSecurity http) throws Exception {




    http.authorizeRequests()




            .antMatchers("\{repositoryName\}**").hasRole("ADMIN")




            .and()




            .httpBasic();




}






e.g:
Let's say we have a book repository and a security configuration as follows:






@RepositoryRestController




public interface BookRepository extends JpaRepository<Book, Long> {




}




Â 




protected void configure(HttpSecurity http) throws Exception {




    http.authorizeRequests()




            .antMatchers("/books/**").hasRole("ADMIN")




            .and()




            .httpBasic();




}






accessing http://foo.bar/books and http://foo.bar/books/ ask for authentication but http://foo.bar/books%7B exposes the data!
Working example is at the attachment spring security test %7B.rar