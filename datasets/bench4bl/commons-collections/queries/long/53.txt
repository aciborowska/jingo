The implementation of Iterator.remove() in the unbounded fifo buffer is buggy.
It produces an ArrayIndexOutOfBoundExceptions when it needs to swap around the
end of the array to its start.
The code should be:
            public void remove() {
                if (lastReturnedIndex == -1) 
{
                    throw new IllegalStateException();
                }

                // First element can be removed quickly
                if (lastReturnedIndex == head) 
{
                    UnboundedFifoBuffer.this.remove();
                    lastReturnedIndex = -1;
                    return;
                }

                // Other elements require us to shift the subsequent elements
                /*

This loop is buggy in the original implementation!
                 */
                int i = lastReturnedIndex + 1;
                while (i != tail) 
{
                    buffer[decrement(i)] = buffer[i];
                    i = increment(i);
                }

                lastReturnedIndex = -1;
                tail = decrement(tail);
                buffer[tail] = null;
                index = decrement(index);
            }
while the original buggy loop is:
                // Other elements require us to shift the subsequent elements
                int i = lastReturnedIndex + 1;
                while (i != tail) {
                    if (i >= buffer.length) 
{
                        buffer[i - 1] = buffer[0];
                        i = 0;
                    }
 else 
{
                        buffer[i - 1] = buffer[i];
                        i++;
                    }
                }