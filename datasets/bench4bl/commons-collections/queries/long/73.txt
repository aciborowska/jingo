BeanMap.putAllWriteable(BeanMap) method, the java doc does not describe the implementation 
correctly.
According to Sun a property could be defined by getter OR mutator. The current 
implementation of the method assumes that a property always should have getter.
/**

Puts all of the writeable properties from the given BeanMap into this
BeanMap.  Read-only
properties will be ignored.
 */
 public void putAllWriteable(BeanMap map) 
Unknown macro: {   Iterator readableKeys = map.readMethods.keySet().iterator();   while(readableKeys.hasNext()) {     Object key = readableKeys.next();     if(getWriteMethod(key) != null) {
       this.put(key, 
map.get(key));
     }   } 
 }

I have an adapter bean which have a mutator which accepting a 
long value (actualy a bit vector) And few boolean accessors which retrieve the actual values. 
Now I'm replacing my own utility classes with jakarta commons and I find that these issues make 
them nearly unusable for me 
I suggest to change the method to:
 public void 
putAllWriteable(BeanMap map) {
   Iterator writableEntries = 
map.writeMethods.entrySet().iterator();
   while(writableEntries.hasNext())
{
     
Map.Entry writableEntry = (Map.Entry) writableEntries.next();
     
writeMethods.put(writableEntry.getKey(), writableEntry.getValue());    
   }
 
 }