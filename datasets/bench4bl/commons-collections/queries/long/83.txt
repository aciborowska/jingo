The existing Java List implementations are rather slow if it comes to big lists 
and insertions and/or random access.  To mitigate that this List is based on an 
AVL-Tree and uses offsets to locate objects.  The following benchmarks show the 
performance compared to LinkedList and ArrayList.
          add     insert    get
TreeList  300     501       110
ArrayList  70   20390        20
LinkedList 50  226636    279742
add - 100K times add( new Object() )
insert - 100k times add( random() * 100K, new Object() ) on a List with 100K 
elements.
get - 100k times get( random() * 100k ) on a List with 200K elements.
P.S.: I will try to attach the code as a zip.