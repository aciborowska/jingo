Test case follows:
[pre]
    /**

Test that when the iterator is changed, the hasNext method
returns the correct response for the new iterator.
     */
    public void testSetIterator() 
{
        Iterator iter1 = Collections.singleton(new Object()).iterator();
        Iterator iter2 = Collections.EMPTY_LIST.iterator();
        
        FilterIterator filterIterator = new FilterIterator(iter1);
        filterIterator.setPredicate(TruePredicate.getInstance());
        
        assertTrue("filterIterator should have an element", 
filterIterator.hasNext());
        
        filterIterator.setIterator(iter2);
        
        assertTrue("filterIterator should not have an element", !
filterIterator.hasNext());
    }

    /**

Test that when the predicate is changed, the hasNext method
returns the correct response for the new predicate.
     */
    public void testSetPredicate() 
{
        Iterator iter = Collections.singleton(null).iterator();
        
        FilterIterator filterIterator = new FilterIterator(iter);
        filterIterator.setPredicate(TruePredicate.getInstance());
        
        assertTrue("filterIterator should have an element", 
filterIterator.hasNext());
        
        filterIterator.setPredicate(NotNullPredicate.getInstance());
        
        assertTrue("filterIterator should not have an element", !
filterIterator.hasNext());
    }
[/pre]

