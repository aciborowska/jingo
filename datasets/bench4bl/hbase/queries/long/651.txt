java.io.IOException: java.io.IOException: Requested column family referer: does not exist in HRegion michael_test,,1212093731315 for table michael_test
	at org.apache.hadoop.hbase.HRegion.checkColumn(HRegion.java:1678)
	at org.apache.hadoop.hbase.HRegion.localput(HRegion.java:1598)
	at org.apache.hadoop.hbase.HRegion.batchUpdate(HRegion.java:1421)
	at org.apache.hadoop.hbase.HRegionServer.batchUpdate(HRegionServer.java:1552)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.hadoop.hbase.ipc.HbaseRPC$Server.call(HbaseRPC.java:413)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:901)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:494)
	at org.apache.hadoop.hbase.RemoteExceptionHandler.decodeRemoteException(RemoteExceptionHandler.java:82)
	at org.apache.hadoop.hbase.HTable.getRegionServerWithRetries(HTable.java:1028)
	at org.apache.hadoop.hbase.HTable.commit(HTable.java:763)
This is what happened when I tried to add a row with a non-existent column family.  In principle, it should be easy to create the column family and try again.  I'd like to have hbase throw a NoSuchColumnFamilyException so I can figure out I need to create the column family.  Alternately, it would be even better if there were some option to make hbase create the column family for me.