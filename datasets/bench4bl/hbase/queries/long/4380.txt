If the hbase application specifies a large caching size via Scan.setCaching(...),  RS will try to accumulate enough rows before returning to the client. This could blow up RS memory. In TableInputFormat scenario, we have couple mappers with large caching size, thus RS memory usage goes up quickly.
RS perhaps should take memory usage into account, for example, return less results per HRegionInterface.next(long scannerId, int numberOfRows) call in the case of low memory.