As I report the RateLimiter fail to limit in HBASE-13686, then Ashish Singhi fix that problem by support two kinds of RateLimiter:  AverageIntervalRateLimiter and FixedIntervalRateLimiter. But in my use of the code, I found a new bug about refill() in AverageIntervalRateLimiter.



    long delta = (limit * (now - nextRefillTime)) / super.getTimeUnitInMillis();

    if (delta > 0) {

      this.nextRefillTime = now;

      return Math.min(limit, available + delta);

    }   



When delta > 0, refill maybe return available + delta. Then in the canExecute(), avail will add refillAmount again. So the new avail maybe 2 * avail + delta.



    long refillAmount = refill(limit, avail);

    if (refillAmount == 0 && avail < amount) {

      return false;

    }   

    // check for positive overflow

    if (avail <= Long.MAX_VALUE - refillAmount) {

      avail = Math.max(0, Math.min(avail + refillAmount, limit));

    } else {

      avail = Math.max(0, limit);

    } 



I will add more unit tests for RateLimiter in the next days.
Review Board: https://reviews.apache.org/r/35384/