There are two checkstyles for javadoc: NonEmptyAtclauseDescriptionCheck and JavadocTagContinuationIndentation.
Both require parsing javadoc, but there are some javadocs in codebase which it is not able to parse. Depending on which rule the tool choses to check first it can throw different errors. Now if trunk checks for A first and patch checks for B first, there will be A errors in trunkCheckstyle.xml and B errors in patchCheckstyle.xml. Since B errors are only in patch, checkstyle_report.py reports them are new errors.
Here are two builds proving the point: 
https://builds.apache.org/job/PreCommit-HBASE-Build/16668//consoleFull
https://builds.apache.org/job/PreCommit-HBASE-Build/16676/consoleFull
Snippets:

Build 16668:

hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java	NonEmptyAtclauseDescriptionCheck	0	1

hbase-common/src/main/java/org/apache/hadoop/hbase/Tag.java	NonEmptyAtclauseDescriptionCheck	10	11

hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/RpcClientImpl.java	NonEmptyAtclauseDescriptionCheck	2	3

.....



Build 16676:

hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java	JavadocTagContinuationIndentationCheck	0	1

hbase-common/src/main/java/org/apache/hadoop/hbase/Tag.java	JavadocTagContinuationIndentationCheck	0	1

hbase-client/src/main/java/org/apache/hadoop/hbase/protobuf/RequestConverter.java	JavadocTagContinuationIndentationCheck	0	1

....



The easiest fix here is to fix these 25 or so javadocs.