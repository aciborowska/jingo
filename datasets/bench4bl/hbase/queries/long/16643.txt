In the reverse scanner case,
While doing 'initBackwardHeapIfNeeded' in MemstoreScanner for setting the backward heap, we do a 



if ((backwardHeap == null) && (forwardHeap != null)) {

        forwardHeap.close();

        forwardHeap = null;

        // before building the heap seek for the relevant key on the scanners,

        // for the heap to be built from the scanners correctly

        for (KeyValueScanner scan : scanners) {

          if (toLast) {

            res |= scan.seekToLastRow();

          } else {

            res |= scan.backwardSeek(cell);

          }

        }



forwardHeap.close(). This would internally decrement the MSLAB ref counter for the current active segment and snapshot segment.
When the scan is actually closed again we do close() and that will again decrement the count. Here chances are there that the count would go negative and hence the actual MSLAB closure that checks for refCount==0 will fail. Apart from this, when the refCount becomes 0 after the firstClose if any other thread requests to close the segment, then we will end up in corrupted segment because the segment could be put back to the MSLAB pool. 