[Note: This issue is relevant only for cases that don't use the default "time" based versions, but provide/manage versions explicitly.]
The fix for HBASE-1485 ensures that if there are multiple puts with the same timestamp the later one wins.
However, if there is a delete for a specific timestamp, then the later put doesn't win. 
Say for example the following is the sequence of operations:
put                         row/col/v1 - value1
deleteColumn     row/col/v1
put                         row/col/v1 - value2
Without the deleteColumn(), HBASE-1485 ensures that "value2" is the winner.
However, with the deleteColumn() thrown into the mix, the delete wins, and one cannot insert a new value at that version. [The only, unsatisfactory, workaround at this point seems to be trigger a major compaction. The major compact would clear the delete marker, and allow new cells to be created with that version again.] 
â€”
Seems like it might not be too complicated to extend the fix for HBASE-1485 to also respect ordering between delete/put operations. I'll look into this further.
