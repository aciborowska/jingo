
org.springframework.webflow.conversation.impl.SessionBindingConversationManager is unsuitable for use in a session replication clustered environment.
The ConversationContainer is replicated OK, but the problem comes if it needs to be retrieved on a different server.
SessionBindingConversationManager.getConversationContainer() looks for the ConversationContainer using a key
including a RandomGuid string. Unless the SessionBindingConversationManager is also replicated, this key will be
different on each server.
        private final String sessionKey = "webflow.conversation.container." + new RandomGuid().toString();
        ...
        private ConversationContainer getConversationContainer() {
                SharedAttributeMap sessionMap = ExternalContextHolder.getExternalContext().getSessionMap();
                synchronized (sessionMap.getMutex()) {
                        ConversationContainer container = (ConversationContainer)sessionMap.get(sessionKey);
The result is that on a server other than that where the flow was begun, the SessionBindingConversationManager
finds no ConversationContainer for its key and thus creates a new empty one in which, of course, it can't find the
Conversation it is looking for and so a NoSuchConversationException is thrown.
One solution would be to make SessionBindingConversationManager Serializable and put that in the Session too.
Ref: http://forum.springframework.org/showthread.php?t=43049