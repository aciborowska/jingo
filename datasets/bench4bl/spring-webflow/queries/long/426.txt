Maybe I'm off on this one, but it looks like mocked subflows are broken in 2.0-m2.  I registered my mocked subflow (just simple instance of Flow), but kept getting an error because the flow builder is looking for "flowRegistry" in the application context.
From debugging, it looks like LocalFlowBuilderContext.getFlowDefinitionLocator needs to do a check to see whether "flowRegistry" is in the application context, and if not delegate to "parent".  The same check is being done for a half-dozen other methods in that class, so it looks like a simple oversight.  Until that's fixed, I guess I can kiss unit testing flows with mocked subflows "goodbye".
=====
public FlowDefinitionLocator getFlowDefinitionLocator() {
    return (FlowDefinitionLocator) localFlowBeanFactory.getBean("flowRegistry", FlowDefinitionLocator.class);
}
should be
public FlowDefinitionLocator getFlowDefinitionLocator() {
    if (localFlowBeanFactory.containsBean("flowRegistry")) 
{
        return (FlowDefinitionLocator) localFlowBeanFactory.getBean("flowRegistry", FlowDefinitionLocator.class);
    }
 else 
{
        return parent.getFlowDefinitionLocator();
    }
}