Consider a button like this:
<h:commandButton value="#
{labels.theLabel}
" action="flowId:search-flow"/>
Pressing the button works only if we're not engaged in any flow. However if the page containing the button is a part of a webflow (i.e. configured as a view-state) the button does not work, the exception is below:
org.springframework.webflow.engine.NoMatchingTransitionException: No transition found on occurence of event 'flowId:search-flow' in state 'List' of flow 'quote-main-flow' – valid transitional criteria are array<TransitionCriteria>[[eventId = 'refresh'], [eventId = 'new'], [eventId = 'select']] – likely programmer error, check the set of TransitionCriteria for this state
	at org.springframework.webflow.engine.TransitionableState.getRequiredTransition(TransitionableState.java:82)
	at org.springframework.webflow.engine.TransitionableState.onEvent(TransitionableState.java:112)
It seems that SWF 1.0.2 introduced FlowExecutionKeyStateHolder which restores flow execution earlier than it was in SWF 1.0.1. The result is that when request comes to FlowNavigationHandler the flow execution in SWF 1.0.2 is already restored and therefore the routine tries to feed the event 'flowId:search-flow' to that execution instead of launching new flow as it was in SWF 1.0.1.
Shortly, SWF 1.0.2 broke backwards compatibility for buttons like action="flowId:search-flow" that operate within another flow execution.