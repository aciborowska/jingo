Suppose we have a flow called FLOW_A containing a global transition like the following: 
    <global-transitions>
        <transition on="something" to="somewhere">
            <evaluate expression="myHandler.doSomething()"/>
        </transition>  
    </global-transitions>
Suppose FLOW_A has a parent abstract flow FLOW_B also containing some global transitions containing on-exceptions like the following:
    <global-transitions>
        <transition on-exception="Exception1" to="somewhere">
            <evaluate expression="exceptionHandler.handleException1(rootCauseException)"/>
        </transition>
        <transition on-exception="Exception2" to="somewhere">
            <evaluate expression="exceptionHandler.handleException2(rootCauseException)"/>
        </transition>
    </global-transitions>
During the merge of both global transitions the result will be something like:
    <global-transitions>
        <transition on="something" to="somewhere">
            <evaluate expression="myHandler.doSomething()"/>
        </transition>  
        <transition on-exception="Exception1" to="somewhere">
            <evaluate expression="exceptionHandler.handleException2(rootCauseException)"/>
            <evaluate expression="exceptionHandler.handleException1(rootCauseException)"/>
        </transition>
    </global-transitions>
instead of 
    <global-transitions>
        <transition on="something" to="somewhere">
            <evaluate expression="myHandler.doSomething()"/>
        </transition>  
        <transition on-exception="Exception1" to="somewhere">
            <evaluate expression="exceptionHandler.handleException1(rootCauseException)"/>
        </transition>
        <transition on-exception="Exception2" to="somewhere">
            <evaluate expression="exceptionHandler.handleException2(rootCauseException)"/>
        </transition>
    </global-transitions>
This is because in the org.springframework.webflow.engine.model.TransitionModel.isMergeableWith(Model model) method only the "on" is considered and not "on-exception": 
    public boolean isMergeableWith(Model model) {
        if (!(model instanceof TransitionModel)) 
{
            return false;
        }
        TransitionModel transition = (TransitionModel) model;
        return ObjectUtils.nullSafeEquals(getOn(), transition.getOn());
    }

instead of 

    public boolean isMergeableWith(Model model) {
        if (!(model instanceof TransitionModel)) {            return false;        }
        TransitionModel transition = (TransitionModel) model;
        return ObjectUtils.nullSafeEquals(getOn(), transition.getOn())
                && ObjectUtils.nullSafeEquals(getOnException(), transition.getOnException());
    }
