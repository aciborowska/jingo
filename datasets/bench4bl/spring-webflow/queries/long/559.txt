... when the flow was not active.
Why is that ? I'm used to triggering a new flow execution by going to /.../myFlowId
When using Spring Security integration and having secured the whole flow, an AccessDeniedException is thrown (which is good) but then it is rethrown as a FlowExecutionException without a cause.
Hence, Spring Security's ExceptionTranslationFilter can't unwrap it and initiate a login process.
Is there any good reason not to wrap the exception (be it Spring Security or anything else) ?