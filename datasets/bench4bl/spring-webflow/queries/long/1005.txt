Out-of-the-box binding fails with an IllegalArgumentException on form postback when attempting to bind to a model object (defined in the view) that contains enum-based properties.
StringToEnum registers the java.lang.Enum class as the target. However, in the toObject method, the attempt to find the appropriate backing constant using Enum.valueOf fails because the underlying target does not reference the constants defined by the user's enum class and, worse, the subsequent test for enumType.isEnum() fails for the java.lang.Enum class.
I believe that StringToEnum needs to allow the user-defined enum class to be registered as the target class, and that PropertyEditorRegistrySupport.getCustomEditor should support registering the requiredType using this mechanism for this to truly work out-of-the-box.
In the meantime, the only workaround for this appears to be to define a custom String-to-Enum converter and explicitly register each and every class that needs to use it.