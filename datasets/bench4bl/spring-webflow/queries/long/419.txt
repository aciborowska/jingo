This is needed for proper returning of the connection to the pool.  This was not possible previously because SWF was not in control of the view rendering process.  Now that it is, this improvement is easily achievable.
Info from Juergen on this:
"The need to call disconnect really depends on the configured Hibernate connection release mode.  We might have a problem with our LocalSessionFactoryBean defaults there,since by default we only release it on closing the Session. This is fine for HibernateTransactionManager's purposes, but not so great for the Session-per-conversation pattern.
From that perspective, sandard Hibernate actually disconnects automatically, but in particular with typical Spring usage, we need to assume that the Session may still be connected (in "on_close"
release mode).
So to be on the safe side for any release mode, we should still call "session.disconnect()" once a conversation pauses. In case of auto-disconnection, this will simply have no effect, but in "on_close" mode
it will explicitly return the JDBC Connection to the pool.
Reconnecting should never be an issue, though. This will always be automatic, happening on demand (when the Session is actually accessed)."