ResultObjectBasedEventFactory.isJdk5Enum detects if an instance is a java 5 enum using type.isEnum().
This works fine for simple enums but will fail if the enum overrides abstract methods, perhaps Enum.class.isAssignableFrom(type) should be used instead?
Here is a sample test case to show what I mean:
import junit.framework.TestCase;
public class EnumTest extends TestCase
{
    private enum Enum1 
{ONE,TWO}
;
    private enum Enum2
    {
        ONE
        {
            public String toFrench()
            {
                return "un";
            }
        },
        TWO
        {
            public String toFrench()
            {
                return "Duex";
            }
        };
        public abstract String toFrench();
    };
    public void testInstanceOf() throws Exception
    {
        assertTrue(Enum.class.isAssignableFrom(Enum1.ONE.getClass()));
        assertTrue(Enum.class.isAssignableFrom(Enum2.ONE.getClass()));
    }

    public void testIsEnumEnum() throws Exception
    {
        assertTrue(Enum1.ONE.getClass().isEnum());
        assertTrue(Enum2.ONE.getClass().isEnum());
    }
}   