defaultWebInvocationPrivilegeEvaluator.isAllowed(...) always return false when authorities are empty.
Here is the simple security configuration used:
	<http access-decision-manager-ref="accessDecisionManager">
		<intercept-url pattern="/images/**" filters="none" />
		<intercept-url pattern="/scripts/**" filters="none" />
		<intercept-url pattern="/styles/**" filters="none" />
		<intercept-url pattern="/csmprobe.html*" filters="none" />
		<intercept-url pattern="/login.htm*" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
		<form-login login-page="/login.htm"
			always-use-default-target="true"
			default-target-url="/siteSelection.htm"
			authentication-failure-url="/login.htm?login_error=1" />
		<logout />
	</http>
	<ldap-server
		url="$
{ldap.url}
/$
{ldap.base}
"
		manager-dn="$
{ldap.managerDn}
"
		manager-password="$
{ldap.managerPassword}
" />
	<authentication-manager alias="authenticationManager">
		<ldap-authentication-provider user-search-filter="(uid=
{0}
)"
			user-search-base="$
{ldap.userSearchBase}
"
			group-search-base="$
{ldap.groups}
" />
	</authentication-manager>
	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
			</beans:list>
		</beans:property>
	</beans:bean>
Users with no authorities have access to all pages (IS_AUTHENTICATED_FULLY) according to the filter configuration but defaultWebInvocationPrivilegeEvaluator.isAllowed(...) says the opposite. The implementation has this check: 
        if (authentication == null || authentication.getAuthorities().isEmpty()) 
{
            return false;
        }

authentication.getAuthorities().isEmpty() should be removed to allow decision voters do their work.