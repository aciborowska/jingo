I have the following in my configuration class extending WebSecurityConfigurerAdapter:
Code:
@Override public void configure(WebSecurity web) throws Exception {
    web.privilegeEvaluator(null).expressionHandler(null)
            .ignoring().antMatchers("/resources/**");
    //web.ignoring().antMatchers("/resources/**");
}
According to the reference doc I need a privilegeEvaluator for the sec:authorize url=... jsp tag and I need expressionHandler for sec:authorize access=... jsp tag. The javadoc for WebSecurity at
http://docs.spring.io/spring-securit...sionHandler%29
says to pass null to get a default implementation for both privilegeEvaluator and expressionHandler. But I get an exception at startup:
Code:
Caused by: java.lang.IllegalArgumentException: expressionHandler cannot be null
at org.springframework.util.Assert.notNull(Assert.jav a:112)
at org.springframework.security.config.annotation.web .builders.WebSecurity.expressionHandler(WebSecurity.java:236)
So the main question is do I need to call WebSecurity.expressionHandler() and .privilegeEvaluator() to get the authorize jsp tags to work? If I do, then how should I call them? And finally is this a doc issue or a bug that I am getting the IllegalArgumentException? Thanks for any help on this!
As an update, I was able to get sec:authorize access=... to work without calling WebSecurity.expressionHandler(null)
but I could not get sec:authorize url=... to work at all.
Note that if the IllegalArgumentException is the desired behavior and the doc is updated it should also be made consistent with privilegeEvaluator(null) throwing the same exception or it should be documented why they behave differently.
Also, it would be helpful to document whether these calls are necessary with java configuration since the doc says the default implementations are created automatically if you are using the namespace.