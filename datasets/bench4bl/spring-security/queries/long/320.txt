I used to have my filterChainProxy as follows
    <bean id="filterChainProxy" class="org.acegisecurity.util.FilterChainProxy">
        <property name="filterInvocationDefinitionSource">
            <value>
                PATTERN_TYPE_APACHE_ANT
                /resources/*=
                /calendar/**=
                /index.jsp=          
                /login.htm*=
                ogout.htm=
/**=httpSessionFilter,authenticationFilter,rememberMeFilter,anonFilter,exceptionTranslationFilter,authorizationFilter
            </value>
        </property>
    </bean>
My thinking was that this might give better performance so that the filter chain is not fired at all for images and css files and even the login / logout pages - rather than setting a ROLE_ANONYMOUS mapping in the FilterSecurityInterceptor.  So I reduced the number of mapping entries in FilterSecurityInterceptor.  This was working fine ever since I started using Acegi.
But since Acegi RC2, a mapping of URL=[blank] in FilterChainProxy is not possible anymore.  I get the following error:
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'filterChainProxy' defined in ServletContext resource [/WEB-INF/import-acegi.xml]: Error setting property values; nested exception is PropertyAccessExceptionsException (1 errors)
Caused by: 
PropertyAccessExceptionsException (1 errors)
org.springframework.beans.TypeMismatchException: Failed to convert property value of type [java.lang.String] to required type [org.acegisecurity.intercept.web.FilterInvocationDefinitionSource] for property 'filterInvocationDefinitionSource'; nested exception is java.lang.IllegalArgumentException: Failed to parse a valid name/value pair from /xx=
Caused by: 
java.lang.IllegalArgumentException: Failed to parse a valid name/value pair from /xx=
        at org.acegisecurity.intercept.web.FilterInvocationDefinitionSourceEditor.setAsText(FilterInvocationDefinitionSourceEditor.java:136)
        at org.springframework.beans.PropertyTypeConverter.convertValue(PropertyTypeConverter.java:250)
        at org.springframework.beans.PropertyTypeConverter.convertIfNecessary(PropertyTypeConverter.java:174)
        at org.springframework.beans.PropertyTypeConverter.convertIfNecessary(PropertyTypeConverter.java:108)
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:723)
        at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:575)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValue(AbstractPropertyAccessor.java:49)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:68)
        at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:57)
Please advise.  Also do you think that it is okay to avoid the filter chain as far as possible.