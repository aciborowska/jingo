I have two HttpSecurity java configs. One for REST API requiring basic auth using httpBasic() and one for UI with formLogin.
When using curl to post to an url protected by basic auth (/v1/account), it fails with the following 403 error:
HTTP Status 403 - Invalid CSRF Token 'null' was found on the request parameter '_csrf' or header 'X-CSRF-TOKEN'.
it seems like it is incorrectly applying the form login security to the basic auth url.
Here is my config:
@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter {
    @Resource
    private MyUserDetailsService userDetailsService;
    @Autowired
    public void configureGlobal(AuthenticationManagerBuilder auth)
            throws Exception 
{
        StandardPasswordEncoder encoder = new StandardPasswordEncoder(); 
        auth.userDetailsService(userDetailsService).passwordEncoder(encoder);
    }

    @Configuration
    @Order(1)
    public static class RestSecurityConfig
            extends WebSecurityConfigurerAdapter {
        @Override
        protected void configure(HttpSecurity http) throws Exception 
{
            http
                .antMatcher("/v1/**").authorizeRequests()
                    .antMatchers("/v1/admin/**").hasRole("admin")
                    .antMatchers("/v1/account/**").hasRole("admin")
                    .antMatchers("/v1/plant/**").access("hasRole('admin') or ha
sRole('dataProvider')")
                    .antMatchers("/v1/upload/**").access("hasRole('admin') or h
asRole('dataProvider')")
                    .antMatchers(HttpMethod.GET, "/v1/participant/**").permitAl
l()
                    .antMatchers(HttpMethod.GET, "/v1/tag/**").permitAll()
                    .antMatchers(HttpMethod.GET, "/v1/zipcode/**").permitAll()
                    .antMatchers("/v1/**").authenticated()
                .and().httpBasic();
        }
    }
    @Configuration
    @Order(2)
    public static class UiSecurityConfig extends WebSecurityConfigurerAdapter {
        @Override
        public void configure(WebSecurity web) throws Exception 
{
            //web.privilegeEvaluator(null).expressionHandler(null).ignoring().a
ntMatchers("/resources/**");
            web.ignoring().antMatchers("/resources/**");
        }

        @Override
        protected void configure(HttpSecurity http) throws Exception 
{
            http
                .authorizeRequests()
                    .antMatchers("/account/request/**").permitAll()
                    .antMatchers("/account/change_password/**").authenticated()
                    .antMatchers("/account/**").hasRole("admin")
                    .antMatchers("/admin/**").hasRole("admin")
                    .antMatchers("/plant/**").access("hasRole('admin') or hasRo
le('dataProvider')")
                    .antMatchers("/upload/**").access("hasRole('admin') or hasR
ole('dataProvider')")
                    .anyRequest().authenticated()
                .and().formLogin().loginPage("/login").permitAll();
        }

    }
}