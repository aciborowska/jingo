Adding ShallowEtagHeaderFilter to a web application that uses Spring Security will cause the redisplay of the Spring Security login page on the second login attempt. This was initially reported widely within the Spring Roo community and resulted in bug report ROO-579.
The problem can be seen by:
1. Active ShallowEtagHeaderFilter in a Spring Security application that has a normal login page
2. Visit the home page, attempt to access a secure page, and view the login page
3. Complete the login page, submit, and you should see the secure page (correct)
4. Logout
5. Attempt to access the same secure page again
6. The login page will display (correct)
7. Enter valid credentials and submit
   --> The login page will re-display (incorrect)
   --> What should have happened is the secure page would display, as you've now authenticated
I have reproduced this with the Spring Security tutorial 3.0.1 web application WAR. I have made no changes to the WAR except modifying the web.xml to the following (I have included both filters for clarification of the order):






    <filter>




        <filter-name>springSecurityFilterChain</filter-name>




        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>




    </filter>




 




	<filter>




		<filter-name>etagFilter</filter-name>




		<filter-class>org.springframework.web.filter.ShallowEtagHeaderFilter</filter-class>




	</filter>




 




    <filter-mapping>




      <filter-name>springSecurityFilterChain</filter-name>




      <url-pattern>/*</url-pattern>




    </filter-mapping>




 




	<filter-mapping>




		<filter-name>etagFilter</filter-name>




		<url-pattern>/*</url-pattern>




	</filter-mapping>






I have attached the tutorial WAR where you can see the problem by deploying to Tomcat. Simply access the "secure page", login as normal, and it will display. Then logout and click to view the "secure page" again. The login page will display. Login as normal, and on submission you will erroneously see the login page again. The problem can be avoided by disabling the ShallowEtagHeaderFilter in web.xml.