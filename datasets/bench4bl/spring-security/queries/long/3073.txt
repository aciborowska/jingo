In AbstractAuthorizeTag, authorizeUsingUrlCheck calls getPrivilegeEvaluator which on line 347 returns the first WebInvocationPrivilegeEvaluator ignoring others. 
An application might have multiple WebInvocationPrivilegeEvaluators for instance if there is one <http> config for the main ui of the application and one for a built in REST service. 
Example REST <http> config:
 <http pattern="/api/**" create-session="stateless" use-expressions="true">
    	<intercept-url pattern="/api/**" access="hasRole('ROLE_REST')"/>
    	<http-basic/>
    </http> 
Thus a JSP authorize url check such as:
<sec:authorize url="/secureAction">
will only be evaluated against the first <http> config.
In some cases, such as when the main <http> config contains a catchall (<intercept-url pattern="/**" access="isAuthenticated()" />), the order of the <http> configs can not be changed yielding no way to conduct url evaluations.
It seems like all WebInvocationPrivilegeEvaluators should be considered.