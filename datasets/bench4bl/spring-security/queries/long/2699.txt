The AuthenticationConfiguration.lazyBean(Class<T>) convenience method tries to detect existing beans of a given type and wrap them in a lazy proxy. If it comes across one that is already a scoped proxy (and therefore assumably lazy) it fails to detect that:






...




Caused by: java.lang.IllegalArgumentException: Expecting to only find a single bean for type interface org.springframework.security.authentication.AuthenticationManager, but found [scopedTarget.authenticationManager, authenticationManager]




	at org.springframework.util.Assert.isTrue(Assert.java:65)




	at org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration.lazyBean(AuthenticationConfiguration.java:112)




	at org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration.getAuthenticationMangerBean(AuthenticationConfiguration.java:122)




	at org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration.getAuthenticationManager(AuthenticationConfiguration.java:81)




...






In this case probably it should just return the existing proxy ("authenticationManager").