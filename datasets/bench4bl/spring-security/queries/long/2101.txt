When using the authorize tag like this:






<sec:authorize method="POST" url="/data/hosts">....</sec:authorize>






...the AbstractAuthorizeTag.getPrivilegeEvaluator() method is requested to return an evaluator. But this method will always return the first it finds even if more than one is found. This is especially a problem if one or more of the 'sections' of privileges are aimed at something else than a HTML access(fx. JSON API).
I have this in my springsecuritycontext.xml:






<http request-matcher-ref="jsonMatcher" create-session="stateless" authentication-manager-ref="apiAuthMgr">




        <intercept-url pattern="/data/**" access="ROLE_API_USER" />




        <http-basic />




    </http>




    




    <http authentication-manager-ref="siteAuthMgr">




        <intercept-url  method="PUT" pattern="/data/**" access="ROLE_IT-infrastruktur" />




        <intercept-url  method="POST" pattern="/data/**" access="ROLE_IT-infrastruktur" />




        <intercept-url  method="DELETE" pattern="/data/**" access="ROLE_IT-infrastruktur" />




        <intercept-url  method="GET" pattern="/data/credentials**" access="ROLE_IT-infrastruktur" />




        <form-login/>




    </http>




.......






This work flawlessly in regards to using the correct authentication-manager based on the request-matcher, but when it comes to the authorize-tag it will always try to match on the first section, because AbstractAuthorizeTag.getPrivilegeEvaluator() always returns the first one:






private WebInvocationPrivilegeEvaluator getPrivilegeEvaluator() throws IOException {




        ApplicationContext ctx = WebApplicationContextUtils.getRequiredWebApplicationContext(getServletContext());




        Map<String, WebInvocationPrivilegeEvaluator> wipes = ctx.getBeansOfType(WebInvocationPrivilegeEvaluator.class);




 




        if (wipes.size() == 0) {




            throw new IOException(




                    "No visible WebInvocationPrivilegeEvaluator instance could be found in the application "




                            + "context. There must be at least one in order to support the use of URL access checks in 'authorize' tags.");




        }




 




        return (WebInvocationPrivilegeEvaluator) wipes.values().toArray()[0];   <---- PROBLEM (Line 340)




    }





