When I try to write something like this:
public class WebSocketSecurityConfig extends AbstractSecurityWebSocketMessageBrokerConfigurer {
    @Override
    protected void configureInbound(MessageSecurityMetadataSourceRegistry messages) 
{
        messages
                .anyMessage().permitAll();
    }
}
This should hypothetically not cause any problems with retrieving any data from any web socket url of my choosing. 
When I call this from a stateless SPA with no authentication whatsoever, it will fail here: 
AbstractSecurityInterceptor:199
if (SecurityContextHolder.getContext().getAuthentication() == null) 
{
   credentialsNotFound(messages.getMessage("AbstractSecurityInterceptor.authenticationNotFound",
                    "An Authentication object was not found in the SecurityContext"), object, attributes);
        }
 
Currently, I would have to be authenticated at all times even though my matchers here don't require it.
Please advise if there is a way around this or if this is a real bug.
Cheers,
Bjorn