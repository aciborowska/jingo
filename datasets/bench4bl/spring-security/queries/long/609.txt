The way the NtlmAwareLdapAuthenticator just checks for an instance of NtlmUsernamePasswordAuthenticationToken and avoids authentication if it's that class is insecure. For example if using remote clients with ContextPropagatingRemoteInvocation to pass in the context then anyone could pass an instance of this class with a populated principal and avoid the password check.
I think the NtlmProcessingFilter should set Authenticated to true after it creates the token and NtlmAwareLdapAuthenticator should check for this and throw an exception if the token is not already authenticated. ContextPropagatingRemoteInvocation always sets authenticated false for these reasons so this should work.