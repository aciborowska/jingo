Right now the following is confusing:






protected void configureInbound(MessageSecurityMetadataSourceRegistry messages) {




        messages




            .antMatchers(SimpMessageType.CONNECT,"/**").authenticated()




 




}






because Connect does not have a destination and it appears to match any Connect. What's more, the following:






protected void configureInbound(MessageSecurityMetadataSourceRegistry messages) {




        messages




            .antMatchers(SimpMessageType.CONNECT,"/abc").authenticated()




 




}






should not be allowed.
Fixes

The types that are allowed should only be SEND, SUBSCRIBE, and MESSAGE. Furthermore, we should make it difficult (or impossible) to instantiate an instance that is invalid. Consider using something like a static factory method in SimpDestinationMessageMatcher to ensure that only valid types are being used with a destination.


We should also consider changing the method names on MessageSecurityMetadataSourceRegistry to better align:


antMatchers is better expressed as simpDestMatchers (it is not necessarily ant)
typeMatchers better simpTypeMatchers
Do not allow the SimpType to be passed in. Instead use simpMessageDestMatchers, simpSubscribeDestMatchers, simpMessageDestMatchers
Look at XML equivalent to ensure this is also fixed

