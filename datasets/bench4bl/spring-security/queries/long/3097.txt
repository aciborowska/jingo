When the HttpSession is overridden (i.e. Spring Session) then CsrfRequestPostProcessor does not work. This is due to the fact that the CsrfRequestPostProcessor sees the unwrapped request, so the CsrfToken is persisted using the unwrapped request. When CsrfFilter tries to load the CsrfToken it is unable to because the wrapped request (thus a different HttpSession) is used.
We should instead override the CsrfTokenRepository with a mocked implementation similar to how we do with SecurityContextRepository.