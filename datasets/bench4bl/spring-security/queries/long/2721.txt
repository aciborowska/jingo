If one tries to call setWriteListener on a ServletOutputStream on a stream that has been wrapped by SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream, you get an abstract method exception, as SaveContextServletOutputStream does not implement and delegate these new methods in the Servlet 3.1 spec:






    /**




     * Checks if a non-blocking write will succeed. If this returns




     * <code>false</code>, it will cause a callback to




     * {@link WriteListener#onWritePossible()} when the buffer has emptied. If




     * this method returns <code>false</code> no further data must be written




     * until the contain calls {@link WriteListener#onWritePossible()}.




     *




     * @return <code>true</code> if data can be written, else <code>false</code>




     *




     * @since Servlet 3.1




     */




    public abstract boolean isReady();




Â 




    /**




     * Sets the {@link WriteListener} for this {@link ServletOutputStream} and




     * thereby switches to non-blocking IO. It is only valid to switch to




     * non-blocking IO within async processing or HTTP upgrade processing.




     *




     * @param listener  The non-blocking IO write listener




     *




     * @throws IllegalStateException    If this method is called if neither




     *                                  async nor HTTP upgrade is in progress or




     *                                  if the {@link WriteListener} has already




     *                                  been set




     * @throws NullPointerException     If listener is null




     *




     * @since Servlet 3.1




     */




    public abstract void setWriteListener(javax.servlet.WriteListener listener);






It just needs to delegate them through to the wrapped object.