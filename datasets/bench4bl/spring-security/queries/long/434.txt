From thread: http://forum.springframework.org/showthread.php?t=34747
Code snippet to reproduce:
AuthenticationManager authManager = (AuthenticationManager)applicationContext.getBean( "authenticationManager");
UsernamePasswordAuthenticationToken authenticationToken = new UsernamePasswordAuthenticationToken("validUsername ", null);
authManager.authenticate(authenticationToken); // null pointer exception
When the user exists in the usermap, and you enter the correct username and a null password, the error is thrown. I expect a BadCredentialsException, however I get a NullPointerException.
The NPE occurs on DaoAuthenticationProvider.additionalAuthenticationChecks() Line 60, where the DaoAuthenticationProvider gets the credentials from the authentication object, and then runs a .toString() on it. In this case, the credentials object it tries to run a .toString() on is null.
Note that I am NOT using the AuthenticationProcessingFilter, which would have avoided this. Maybe we can move the null-value-to-empty-string conversion from there to somewhere within the AuthenticationManager?
If you cannot reproduce, please let me know and I will be happy to provide more environment details if that would help.