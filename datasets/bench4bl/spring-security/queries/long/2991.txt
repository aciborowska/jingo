It appears that with the XML config the URL /login/openid is CSRF protected but the page directing the browser to it, openidlogin.jsp, has no security enabled on it:
        <http pattern="/openidlogin.jsp*" security="none" />
so even if the CSRF tags were placed in it, they would interpolate to empty strings.
How to reproduce:
1) Build the sample app.
2) git clone https://github.com/spring-projects/spring-security.git
3) cd spring-security/samples/openid-xml
4) ../../gradlew war
5) cp build/libs/spring-security-samples-openid-xml-4.0.2.CI-SNAPSHOT.war /tmp
6) Download a copy of Apache Tomcat 8 from http://tomcat.apache.org/download-80.cgi.
7) Unpack Tomcat.
8) cd apache-tomcat-8.XX
9) ./bin/start
10) cp /tmp/spring-security-samples-openid-xml-4.0.2.CI-SNAPSHOT.war webapps/
11) Open http://127.0.0.1:8080/spring-security-samples-openid-xml-4.0.2.CI-SNAPSHOT/
12) Select Yahoo!.
You will get
HTTP Status 403 - Invalid CSRF Token 'null' was found on the request parameter '_csrf' or header 'X-CSRF-TOKEN'.
The demo in openid-jc works fine.