Let's say we have following <security:http> elements defined in the configuration file as follows;
<security:http pattern="/rest/**">
    <security:http-basic />
    <security:anonymous />
    <security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
</security:http>
<security:http auto-config="true">
    <security:intercept-url pattern="/editor.jsp" access="ROLE_EDITOR" />
    <security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
</security:http>
When I create a jsp page with the following content;
<sec:authorize url="/editor.jsp">
	<a href="editor.jsp">Editors Only</a>
</sec:authorize>
Editors Only link in index.jsp will be visible to anyone!
This bug is caused by  AbstractAuthorizeTag.getPrivilegeEvaluator() in which WebInvocationPrivilegeEvaluator bean is looked up in ApplicationContext and first bean returned from the lookup is used, and the first WebInvocationPrivilegeEvaluator bean is created by the configuration of first <security:http> element. It should instead use the  second WebInvocationPrivilegeEvaluator bean instance configured for the second <security:http> element.