I could be missing something obvious here, and if so, please forgive me and skip to the bottom of this description. GlobalMethodSecurityConfiguration#accessDecisionManager() doesn't seem quite right to me:
First, it always configures a PreInvocationAuthorizationAdviceVoter, but if pre-post annotations aren't enabled this voter will never be used, so it seems like omitting it in this case would be preferable.
Second, it never adds a Jsr250Voter, even if JSR 250 annotations are enabled. How can JSR 250 annotations work without the proper voter?
It also never adds a WebExpressionVoter, AclEntryVoter, or RoleHierarchyVoter for those cases where the configuration supports it.
I believe it should be adding other voters (but, again, only when necessary) to fully complete the voting system and make it match the configuration.
Either Way
Whether the configured voters need to change or not, it seems to me that accessDecisionManager() isn't very friendly to being overridden. If someone ONLY wants to change the decision manager implementation but NOT which voters are used, he still has to re-implement/duplicate the 6 (or more) lines of code that constructs the voters. I think there should be a protected List<AccessDecisionVoter> accessDecisionVoters() method that handles this process and is called from accessDecisionManager() when constructing the manager.