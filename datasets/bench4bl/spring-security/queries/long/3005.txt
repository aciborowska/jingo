Using Java Config, AspectJ mode is ignored when "prePostEnabled" is set to true on @EnableGlobalMethodSecurity. If only "secured" is set to true, AspectJ mode is honoured. This has been reported previously - see SEC-2595 and SEC-2698. This causes proxy classes to be created and internal method calls annotated with @PreAuthorize are bypassed.
The sample project - aspectj-jc - only sets secured to true so the AspectjInterceptorTests.notProxy() test passes.
The issue is not present with xml config.
My workaround is to remove the @EnableGlobalMethodSecurity annotation and create an xml config with this entry:






<security:global-method-security




		secured-annotations="enabled" mode="aspectj" pre-post-annotations="enabled">




		<security:expression-handler ref="expressionHandler" />




</security:global-method-security>






and include it in my Java config:






@ImportResource(value = "classpath:/applicationContext-sec.xml")





