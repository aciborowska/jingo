The PropertiesConfiguration(String fileName) constructor incorrectly handles the
fileName when the file name points to a configuration resource to be loaded from
the classpath.
Test case:
mkdirs example/package/configuration/
make file example/package/configuration/test.properties containing
test.stuff=This is test stuff
This code somewhere in above classpath
PropertiesConfigurations test1 =
PropertiesConfiguration("example/package/configuration/test.properties");
Causes Exception
org.apache.commons.configuration.ConfigurationException: Cannot locate
configuration source test.properties
       at
org.apache.commons.configuration.AbstractFileConfiguration.load(AbstractFileConfiguration.java:183)
...
(Note only file part of resource path)
If this is done
PropertiesConfiguration test2 = new PropertiesConfiguration();
test.setFileName("example/package/configuration/test.properties");
test.load();
Configuration is loaded and properties can be accessed.
Problem seems to be that, AbstractFileConfiguration(String) calls set path which
creates a File and breaks the string into basePath and fileName components. 
Then load() occurs load occurs calling ConfigurationUtils.locate(basePath,
fileName).  ConfigrationsUtils.locate(String, String) only uses fileName when
looking for the resource on the system or context classpaths.
Solution (maybe) to do things more like XMLConfiguration.
Will submit patch if i get time.