In order to follow referrals, I'm using LdapContextSource with
     env.put(Context.REFERRAL, "follow");
     ctx.setBaseEnvironmentProperties(env);
when a search includes results from following a referral, I get a exception
Caused by: org.springframework.ldap.BadLdapGrammarException: Failed to parse DN; nested exception is org.springframework.ldap.core.TokenMgrError: Lexical error at line 1, column 5.  Encountered: ":" (58), after : ""
        at org.springframework.ldap.core.DistinguishedName.parse(DistinguishedName.java:145)
        at org.springframework.ldap.core.DistinguishedName.<init>(DistinguishedName.java:100)
        at org.springframework.ldap.core.DirContextAdapter.<init>(DirContextAdapter.java:139)
        at org.springframework.ldap.core.support.DefaultDirObjectFactory.getObjectInstance(DefaultDirObjectFactory.java:61)
        at javax.naming.spi.DirectoryManager.createObjectFromFactories(Unknown Source)
        at javax.naming.spi.DirectoryManager.getObjectInstance(Unknown Source)
Setting a breakpoint at DirContextAdapter shows that the DN in question is prefixed with the LDAP URL for the referred-to LDAP server. Apparently that's how JNDI prefixes results returned from followed referrals, see 
http://java.sun.com/products/jndi/tutorial/ldap/referral/follow.html
At Mattias' suggestion, I subclassed DefaultDirObjectFactory and was able to work around the situation by stripping of the LDAP URL prefix. This could conceivably lead to namespace collision if a referred-to server has the same DIT structure as the original server (e.g., they both have a cn=nate,ou=users,dc=example,dc=com entry), but a situation the directory administrator should resolve.
I've tested this with searches Active Directory 2003, SunONE, and OpenLDAP servers with a single-hop referral to another server.
