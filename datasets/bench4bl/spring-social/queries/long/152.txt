When attempting to use Spring Social to implement OAuth connectivity using Spring 3.0.5.RELEASE, I encountered a NoClassDef error when receiving the token back from the OAuth provider:
java.lang.ClassNotFoundException: org.springframework.http.client.AbstractBufferingClientHttpRequest
	at java.lang.ClassLoader.findClass(ClassLoader.java:359)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:352)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:337)
	at java.lang.ClassLoader.defineClass1(Native Method)
	at java.lang.ClassLoader.defineClassCond(ClassLoader.java:632)
	at java.lang.ClassLoader.defineClass(ClassLoader.java:616)
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:141)
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:283)
	at java.net.URLClassLoader.access$000(URLClassLoader.java:58)
	at java.net.URLClassLoader$1.run(URLClassLoader.java:197)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at com.google.gwt.dev.shell.jetty.JettyLauncher$WebAppContextWithReload$WebAppClassLoaderExtension.findClass(JettyLauncher.java:354)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:366)
	at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:337)
	at org.springframework.social.support.HttpComponentsClientHttpRequestFactory.createRequest(HttpComponentsClientHttpRequestFactory.java:142)
	at org.springframework.http.client.support.HttpAccessor.createRequest(HttpAccessor.java:76)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:434)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:401)
	at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:279)
	at org.springframework.social.oauth2.OAuth2Template.postForAccessGrant(OAuth2Template.java:120)
	at org.springframework.social.oauth2.OAuth2Template.exchangeForAccess(OAuth2Template.java:89)
	at org.springframework.social.connect.web.ConnectController.oauth2Callback(ConnectController.java:168)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.web.bind.annotation.support.HandlerMethodInvoker.invokeHandlerMethod(HandlerMethodInvoker.java:176)
Note that this class is a Spring 3.1.M1 class (although the page says "since 3.0.6", which is not yet released): http://static.springsource.org/spring/docs/3.1.0.M1/javadoc-api/org/springframework/http/client/AbstractBufferingClientHttpRequest.html
Calling this a blocker because at this point it appears impossible to use the Spring Social connect controller with a released GA version of Spring.