There doesn't seem to be a good way for established connections (or keys) to be checked to make sure they are still valid (i.e. - the key has not expired). For example, if we use the serviceConnections API and retrieve a FacebookTemplate off of one of the connections, we don't find out that our connection has been invalidated by the user until we call getUserProfile, in which case a non-graceful runtime exception (an HttpClientErrorException: 401, specifically) is thrown up through the stack from the RestTemplate. It seems like there needs to be a mechanism for not only checking to make sure a connection is still valid, but also for requesting a new key if that is the case.
Facebook is my particular example because that is what I am most familiar with. There a multiple ways for users to change the state of a given facebook key. If we request the 'offline_access' permission (which in my case I have reservations of doing), the user can still revoke that permission later in their privacy settings. Even if the user doesn't revoke it, their are still other conditions that that key can become invalid. According to http://developers.facebook.com/docs/authentication/:
"If the application has not requested offline_access permission, the access token is time-bounded. Time-bounded access token also get invalidated when the user logs out of Facebook. If the application has obtained offline_access permission from the user, the access token does not have an expiry. However it gets invalidated whenever the user changes his/her password."
So, we can see that no matter the case, we can't just assume our key is valid.