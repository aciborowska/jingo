Per the OAuth 2 specification, access tokens should be returned from a provider in JSON format. There are, however, some providers that return it as form-encoded data (bitly for example). When this happens, OAuth2Template can't find a suitable message converter to convert the form-encoded data to a Map and the response-handling fails.
On the surface, the solution seems simple: Change OAuth2Template to parse into a MultiValueMap so that the FormHttpMessageConverter can handle it. But then that would break the more common case where the access token is returned as JSON; MappingJackson2HttpMessageConverter can read into Map, but not (without some help) read into MultiValueMap.
There are two options: (1) configure the ObjectMapper in MappingJackson2HttpMessageConverter such that it can read into a MultiValueMap, and (2) create a new HttpMessageConverter that can read form-encoded data into a flat/single-value Map.