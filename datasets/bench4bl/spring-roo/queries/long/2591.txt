The simple and advanced add-ons add an assembly.xml to the project.  I found that running mvn assembly:assembly on this project didn't work.  There are several issues:
1.  As of the maven-assembly-plugin version 2.2 you need to add an 'id' tag to the assembly in order to have it build.  Otherwise you will get an error.  See http://maven.40175.n5.nabble.com/Classifier-now-required-by-assembly-plugin-td3230949.html






<assembly>...




  <id>assembly</id>




...






2.  The useDefaultExcludes in the dependencySets section is giving an error.  I removed it and got it to work. This needs investigation because the XML schema allows it, but the Maven assembly add-on doesn't like it.
3.  You need to fix the file set for sources - if not no source code will be added.  I've set mine to this:






<fileSet>




  <outputDirectory>/src</outputDirectory>




  <directory>target</directory>




  <useDefaultExcludes>true</useDefaultExcludes>




  <includes>




    <include>*-sources.jar</include>




  </includes>




</fileSet>






This assumes that I've set up the Maven sources add-on, which I also recommend adding, perhaps to the package phase:






<plugin>




  <groupId>org.apache.maven.plugins</groupId>




  <artifactId>maven-source-plugin</artifactId>




  <version>2.1.2</version>




  <executions>




    <execution>




      <id>attach-sources</id>




      <phase>package</phase>




      <goals>




        <goal>jar-no-fork</goal>




      </goals>




    </execution>




  </executions>




</plugin>






When all of this is done, I can generate a nice assembly using mvn assembly:assembly.  Can we factor those small changes into the pom.xml template and the assembly.xml template for Roo 1.2?
Thanks,
Ken