I created a very simple application, and in this case opted not to go for GWT but instead wanted to have a regular spring-mvc setup.

project nl.enhance.gaejspx
persistence setup --provider DATANUCLEUS --database GOOGLE_APP_ENGINE 
entity --class ~.domain.Book
field string name
controller all --package ~.web
quit

After that, I corrected appengine-web.xml to contain the correct project name to match my gaejspx.appspot.com and deployed the application by using mvn gae:deploy
When visiting the homepage, I can see that appengine is not processing the .jspx files, e.g. it returns output that looks like this:
<html 
 	xmlns:jsp="http://java.sun.com/JSP/Page"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:tiles="http://tiles.apache.org/tags-tiles"
	xmlns:form="http://www.springframework.org/tags/form"
	xmlns:spring="http://www.springframework.org/tags"
	xmlns:util="urn:jsptagdir:/WEB-INF/tags/util" >  
	<jsp:directive.page contentType="text/html;charset=UTF-8" />  

Etc etc... None of the taglibs are processed. Appengine 
A sidenote: without adding <jsp:directive.page isELIgnored="false"/> to the main layout, JSTL will not be evaluated by appengine. This is a known issue in the GAE-java community. It is not required to deploy jstl.jar, I think it is provided at runtime by default.
Sidenote #2: the resource servlet approach may need to be different on appengine as well as Appengine is very picky about how static files are served. See http://code.google.com/appengine/docs/java/config/appconfig.html#Static_Files_and_Resource_Files 