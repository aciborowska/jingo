would it be better to change FileUtils so it could work regardless of what Path.separator value is?
First test is due to that object reference can be less that 8 chars: return tsc.toString().replaceFirst("@[0-9a-f]
{8}", ":"); (change '{8}
' to '+')
-------------------------------------------------------------------------------
Test set: org.springframework.roo.metadata.DefaultMetadataServiceTest
-------------------------------------------------------------------------------
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.049 sec <<< FAILURE!
testToStringOfNewInstance(org.springframework.roo.metadata.DefaultMetadataServiceTest)  Time elapsed: 0.02 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<...faultMetadataService[:] validGets = 0, recu...> but was:<...faultMetadataService[@9664a1] validGets = 0, recu...>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.springframework.roo.metadata.DefaultMetadataServiceTest.testToStringOfNewInstance(DefaultMetadataServiceTest.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
-------------------------------------------------------------------------------
Test set: org.springframework.roo.project.maven.PomTest
-------------------------------------------------------------------------------
Tests run: 3, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 0.005 sec <<< FAILURE!
testDefaultPackaging(org.springframework.roo.project.maven.PomTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1937)
	at org.springframework.roo.support.util.FileUtils.backOneDirectory(FileUtils.java:163)
	at org.springframework.roo.support.util.FileUtils.getFirstDirectory(FileUtils.java:151)
	at org.springframework.roo.project.Path.getModulePath(Path.java:133)
	at org.springframework.roo.project.maven.Pom.cachePhysicalPaths(Pom.java:115)
	at org.springframework.roo.project.maven.Pom.<init>(Pom.java:106)
	at org.springframework.roo.project.maven.PomTest.getMinimalPom(PomTest.java:76)
	at org.springframework.roo.project.maven.PomTest.testDefaultPackaging(PomTest.java:37)
testGetModulePathsForMinimalJarPom(org.springframework.roo.project.maven.PomTest)  Time elapsed: 0 sec  <<< ERROR!
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1937)
	at org.springframework.roo.support.util.FileUtils.backOneDirectory(FileUtils.java:163)
	at org.springframework.roo.support.util.FileUtils.getFirstDirectory(FileUtils.java:151)
	at org.springframework.roo.project.Path.getModulePath(Path.java:133)
	at org.springframework.roo.project.maven.Pom.cachePhysicalPaths(Pom.java:115)
	at org.springframework.roo.project.maven.Pom.<init>(Pom.java:106)
	at org.springframework.roo.project.maven.PomTest.getMinimalPom(PomTest.java:76)
	at org.springframework.roo.project.maven.PomTest.testGetModulePathsForMinimalJarPom(PomTest.java:43)
testGetAsDependency(org.springframework.roo.project.maven.PomTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.StringIndexOutOfBoundsException: String index out of range: -1
	at java.lang.String.substring(String.java:1937)
	at org.springframework.roo.support.util.FileUtils.backOneDirectory(FileUtils.java:163)
	at org.springframework.roo.support.util.FileUtils.getFirstDirectory(FileUtils.java:151)
	at org.springframework.roo.project.Path.getModulePath(Path.java:133)
	at org.springframework.roo.project.maven.Pom.cachePhysicalPaths(Pom.java:115)
	at org.springframework.roo.project.maven.Pom.<init>(Pom.java:106)
	at org.springframework.roo.project.maven.PomTest.getMinimalPom(PomTest.java:76)
	at org.springframework.roo.project.maven.PomTest.testGetAsDependency(PomTest.java:61)
Tests run: 5, Failures: 3, Errors: 0, Skipped: 0, Time elapsed: 0.016 sec <<< FAILURE!
testGetIdentifierForRootModuleWithEmptyRelativePath(org.springframework.roo.project.MavenPathResolvingStrategyTest)  Time elapsed: 0.004 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[]\path\to\the\pom\src...> but was:<[C:]\path\to\the\pom\src...>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.springframework.roo.project.MavenPathResolvingStrategyTest.assertIdentifier(MavenPathResolvingStrategyTest.java:76)
	at org.springframework.roo.project.MavenPathResolvingStrategyTest.testGetIdentifierForRootModuleWithEmptyRelativePath(MavenPathResolvingStrategyTest.java:82)
testGetIdentifierForRootModuleWithNonEmptyRelativePath(org.springframework.roo.project.MavenPathResolvingStrategyTest)  Time elapsed: 0.002 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[]\path\to\the\pom\src...> but was:<[C:]\path\to\the\pom\src...>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.springframework.roo.project.MavenPathResolvingStrategyTest.assertIdentifier(MavenPathResolvingStrategyTest.java:76)
	at org.springframework.roo.project.MavenPathResolvingStrategyTest.testGetIdentifierForRootModuleWithNonEmptyRelativePath(MavenPathResolvingStrategyTest.java:89)
testGetIdentifierForNewModuleWithEmptyRelativePath(org.springframework.roo.project.MavenPathResolvingStrategyTest)  Time elapsed: 0.003 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[]\path\to\the\pom\new...> but was:<[C:]\path\to\the\pom\new...>
	at org.junit.Assert.assertEquals(Assert.java:125)
	at org.junit.Assert.assertEquals(Assert.java:147)
	at org.springframework.roo.project.MavenPathResolvingStrategyTest.assertIdentifier(MavenPathResolvingStrategyTest.java:76)
	at org.springframework.roo.project.MavenPathResolvingStrategyTest.testGetIdentifierForNewModuleWithEmptyRelativePath(MavenPathResolvingStrategyTest.java:97)
-------------------------------------------------------------------------------
Test set: org.springframework.roo.project.PomManagementServiceImplTest
-------------------------------------------------------------------------------
Tests run: 6, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.045 sec <<< FAILURE!
testGetPomsOfMultiModuleProjectWhenParentAndChildAreDirty(org.springframework.roo.project.PomManagementServiceImplTest)  Time elapsed: 0.01 sec  <<< ERROR!
java.lang.IllegalArgumentException: InputStream required
	at org.springframework.roo.support.util.Assert.notNull(Assert.java:112)
	at org.springframework.roo.support.util.XmlUtils.readXml(XmlUtils.java:107)
	at org.springframework.roo.project.PomManagementServiceImpl.resolveParentPom(PomManagementServiceImpl.java:202)
	at org.springframework.roo.project.PomManagementServiceImpl.resolvePoms(PomManagementServiceImpl.java:189)
	at org.springframework.roo.project.PomManagementServiceImpl.resolveChildModulePoms(PomManagementServiceImpl.java:219)
	at org.springframework.roo.project.PomManagementServiceImpl.resolvePoms(PomManagementServiceImpl.java:192)
	at org.springframework.roo.project.PomManagementServiceImpl.parseUnparsedPoms(PomManagementServiceImpl.java:164)
	at org.springframework.roo.project.PomManagementServiceImpl.updatePomCache(PomManagementServiceImpl.java:140)
	at org.springframework.roo.project.PomManagementServiceImpl.getPoms(PomManagementServiceImpl.java:282)
	at org.springframework.roo.project.PomManagementServiceImplTest.testGetPomsOfMultiModuleProjectWhenParentAndChildAreDirty(PomManagementServiceImplTest.java:184)
testGetPomsOfMultiModuleProjectWhenChildIsDirty(org.springframework.roo.project.PomManagementServiceImplTest)  Time elapsed: 0.006 sec  <<< ERROR!
java.lang.IllegalArgumentException: InputStream required
	at org.springframework.roo.support.util.Assert.notNull(Assert.java:112)
	at org.springframework.roo.support.util.XmlUtils.readXml(XmlUtils.java:107)
	at org.springframework.roo.project.PomManagementServiceImpl.resolveParentPom(PomManagementServiceImpl.java:202)
	at org.springframework.roo.project.PomManagementServiceImpl.resolvePoms(PomManagementServiceImpl.java:189)
	at org.springframework.roo.project.PomManagementServiceImpl.parseUnparsedPoms(PomManagementServiceImpl.java:164)
	at org.springframework.roo.project.PomManagementServiceImpl.updatePomCache(PomManagementServiceImpl.java:140)
	at org.springframework.roo.project.PomManagementServiceImpl.getPoms(PomManagementServiceImpl.java:282)
	at org.springframework.roo.project.PomManagementServiceImplTest.testGetPomsOfMultiModuleProjectWhenChildIsDirty(PomManagementServiceImplTest.java:214)
