If Roo encounters a class hierarchy nested for at least 2 levels where the super class is unknown to Roo, then its parser barfs:
roo> create project -topLevelPackage test.sub.types

java.lang.Exception is unknown to Roo, this line is just to show Roo's error message
roo> new java file -name test.sub.types.Foo -extends java.lang.Exception
Unable to locate requested type'java.lang.Exception'

roo> new java file -name test.sub.types.Foo

Manually modify test.sub.types.Foo and let it extend Exception, save it


After saving Foo; inheritence from Foo works without problems
roo> new java file -name test.sub.types.Bar -extends ~.Foo
Created SRC_MAIN_JAVA\test\sub\types\Bar.java


Inheritence from a class that indirectly has Foo as a supertype does not work
roo> new java file -name foo.bar.baz.Baz -extends ~.Bar
Type 'foo.bar.baz.Bar' exists on disk but cannot be parsed

If metadata trace is at level 1 or 2, its output suggests that Roo enters some recursion that finally aborts once a StackOverflowError is thrown.