Precondition:






prispiraten_roo=> \d t_securityquestion




            Table "public.t_securityquestion"




       Column        |         Type          | Modifiers 




---------------------+-----------------------+-----------




 securityquestion_id | character varying(36) | not null




 firstquestion       | character varying(45) | 




 firstanswer         | character varying(25) | 




 secondquestion      | character varying(45) | 




 secondanswer        | character varying(25) | 




 version             | integer               | 




Indexes:




    "t_securityquestion_pkey" PRIMARY KEY, btree (securityquestion_id)






Running "database reverse engineer" against a HIBERNATE & POSTGRES combination produces incomplete code at the moment.
E.g. the _Roo_DbManaged aspect only contains getter methods for the managed class members.
To get things working, I had to manually edit the generated entity and move & annotate class members.






@Entity




@RooJavaBean




@RooToString




@RooEntity




@Table(name = "t_securityquestion")




public class Securityquestion {




 




    @Id




    @Column(name = "securityquestion_id", length = 36, unique = true, updatable = false)




    private String securityQuestionId;




 




    @Column(name = "firstquestion", length = 45)




    private String firstQuestion;




 




    @Column(name = "firstanswer", length = 25)




    private String firstAnswer;




 




    @Column(name = "secondquestion", length = 45)




    private String secondQuestion;




 




    @Column(name = "secondanswer", length = 25)




    private String secondAnswer;




 




    public String getSecurityQuestionId() {




       return securityQuestionId;




    }




 




    public void setSecurityQuestionId(String securityQuestionId) {




       this.securityQuestionId = securityQuestionId;




    }




 




    @PrePersist




    public void generateSecurityQuestionId() {




       setSecurityQuestionId(java.util.UUID.randomUUID().toString());




    }




}






Attached you find a detailed work-log of my findings
// Andreas