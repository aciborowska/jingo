I just ran through a stock Roo example I use frequently when presenting Roo, trying it out for 1.0.0.M1. It worked well right up to the point where I tried to view an entity that I had just created. Instead of seeing my entity, I'm greeted with an Internal Error. The underlying exception/trace starts out like this:
org.apache.tiles.impl.CannotRenderException: JSPException including path '/WEB-INF/views/cars/show.jspx'.
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:692)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:644)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:627)
	at org.apache.tiles.impl.BasicTilesContainer.render(BasicTilesContainer.java:321)
	at org.springframework.web.servlet.view.tiles2.TilesView.renderMergedOutputModel(TilesView.java:124)
What's weird is that I see nothing obviously wrong with show.jspx. This only happens when I run my example through "mvn jetty:run". If I run it with "mvn tomcat:run", it works fine. 
FWIW, here's the Roo script that my example starts out with:
// Spring Roo 1.1.0.M1 [rev 3a0b8a3] log opened at 2010-05-21 23:13:16
project --topLevelPackage com.habuma.family
persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY
entity --class ~.domain.Person
field string --fieldName lastName
field string --fieldName firstName
field date --type java.util.Date --fieldName birthDate
field string --fieldName birthLocation
controller all --package ~.mvc
exit
// Spring Roo 1.1.0.M1 [rev 3a0b8a3] log closed at 2010-05-21 23:16:31
