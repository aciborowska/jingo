If you create a project using this script:






project --topLevelPackage casing




persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY 




entity --class Car




entity --class Person




field reference --fieldName rentalCar --type ~.Car




finder list --class ~.Person




finder add --finderName findPeopleByRentalCar




controller all --package ~.web






Then the generated findPeopleByRentalCar.jspx view will contain this markup (tidied a bit here):






<label for="_rentalcar_id">Rental Car:</label>




<select id="_rentalcar_id" name="rentalcar">




    <c:forEach items="${cars}" var="rentalcar_item">




        <option value="${rentalcar_item.id}">${rentalcar_item}</option>




    </c:forEach>




</select>




<script type="text/javascript">




    Spring.addDecoration(new Spring.ElementDecoration({




        elementId: '_rentalCar_id',




        widgetType: 'dijit.form.FilteringSelect',




        widgetAttrs: {hasDownArrow : true}




    }));




</script>






The bug is that the decoration's elementId "_rentalCar_id" is differently cased to the select tag's id of "_rentalcar_id". The impact is that the decoration is not applied, so the drop-down looks and behaves like a plain HTML dropdown.