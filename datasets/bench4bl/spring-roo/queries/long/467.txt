I'm getting a NotReadablePropertyException in the scaffolded 'create' and 'update' JSPs when using RooEntity + identifierField + ManyToOne.
I've created two entities: Director and Movie. 1 Director has N Movies, and 1 Movie has 1 Director.
The Movie has a non default identifierField, as shown below.






@Entity




@RooJavaBean




@RooToString




@RooEntity




public class Director {




 




    private String name;




 




    @OneToMany(cascade = CascadeType.ALL, mappedBy = "director")




    private Set<Movie> movies = new HashSet<Movie>();




}












@Entity




@RooJavaBean




@RooToString




@RooEntity(identifierField="codMovie")




public class Movie {




 




    private String title;




 




    @Max(10L)




    private Long rating;




 




    @ManyToOne(targetEntity = Director.class)




    @JoinColumn




    private Director director;




}






In the 'create' and 'update' JSPs for the Movie entity, the combo box for selecting the Director is using the id from Movie, as shown below:






<form:select cssStyle="width:250px" id="_director_id" path="director">




  <form:options itemValue="codMovie" items="${directors}"/>




</form:select>






I had a quick look in the JspDocumentHelper source code, and I think that the problem is on the  following line of the createFieldsForCreateAndUpdate method.






ifElement.appendChild(JspUtils.getSelectBox(document, field.getFieldName(), plural, entityMetadata.getIdentifierField()));






It's using the strong entityMetadata strong variable to get the identifier field, but that is the Movie. It should use the strong typeEntityMetadata strong, that is actually the Director.
Is my analysis correct?