Hi!
The method getOutput in JavaParserMutableClassOrInterfaceTypeDetails adds null into typeParameters field when creates the constructors for a class:






JavaParserMutableClassOrInterfaceTypeDetails.java






// Add constructors




for (ConstructorMetadata candidate : cit.getDeclaredConstructors()) {




	JavaParserConstructorMetadata.addConstructor(compilationUnitServices, typeDeclaration.getMembers(), candidate, false, null);




}






This throws a NullPointerException when you create a class with more than one constructor with the same number of input parameters:






java.lang.NullPointerException




    at java.util.AbstractCollection.addAll(AbstractCollection.java:316)




    at org.springframework.roo.classpath.javaparser.details.JavaParserConstructorMetadata.<init>(JavaParserConstructorMetadata.java:65)




    at org.springframework.roo.classpath.javaparser.details.JavaParserConstructorMetadata.addConstructor(JavaParserConstructorMetadata.java:249)




    at org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.getOutput(JavaParserMutableClassOrInterfaceTypeDetails.java:516)




    at org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.createType(JavaParserMutableClassOrInterfaceTypeDetails.java:532)




    at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.createPhysicalType(JavaParserMetadataProvider.java:87)




    at org.springframework.roo.classpath.operations.ClasspathOperationsImpl.generateClassFile(ClasspathOperationsImpl.java:121)




    ...






This exception is launched when JavaParserConstructorMetadata.addConstructor method is checking if exists a constructor with the same parameter types in line 242:






JavaParserConstructorMetadata.java






// Locate where to add this constructor; also verify if this method already exists




for (BodyDeclaration bd : members) {




	if (bd instanceof ConstructorDeclaration) {




		// Next constructor should appear after this current constructor




		ConstructorDeclaration cd = (ConstructorDeclaration) bd;




		if (cd.getParameters().size() == d.getParameters().size()) {




			// Possible match, we need to consider parameter types as well now




			JavaParserConstructorMetadata jpmm = new JavaParserConstructorMetadata(constructor.getDeclaredByMetadataId(), cd, compilationUnitServices, typeParameters);




			boolean matchesFully = true;




			for (AnnotatedJavaType existingParameter : jpmm.getParameterTypes()) {




				if (!existingParameter.getJavaType().equals(constructor.getParameterTypes().get(index))) {




					matchesFully = false;




					break;




				}




			}




			if (matchesFully) {




				throw new IllegalStateException("Constructor '" + constructor.getParameterNames() + "' already exists with identical parameters");




			}




		}




	}




}






Thanks!