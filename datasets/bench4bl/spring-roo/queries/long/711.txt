Suppose the following scenario: I wanna write an addon to create the following code:






public interface Foo extends Bar<Rofl> {




Â 




}






Even if you set up a JavaType for Bar containing Rofl as parameter it doesn't occur in the generated class. As far as I could track it down, this is due to JavaParserMutableClassOrInterfaceTypeDetails combining import creation for the type with creating the types to extend. In line 420 it calls JavaParserUtils.importTypeIfRequired(..) and uses the resulting NameExpr for creating the extends clause. Now this method unfortunately drops the generic type information in the given JavaType by constructing the QualifiedNameExpr by only using the JavaType's package name and the simple type name.