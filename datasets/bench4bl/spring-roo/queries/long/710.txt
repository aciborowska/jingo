ItdSourceFileComposer correctly takes type parameters in appendImplementsTypes() by means of calling extendsType.getNameIncludingTypeParameters() but in appendExtendsTypes() calls getFullyQualifiedTypeName() and getSimpleTypeName().
We have an addon that triggers on @RooRepository annotation on interfaces and classes (the interface's implementation). For the interface it creates an aspect file that should look like this:
privileged aspect UserRepository_Roo_Repository {    
    declare parents: UserRepository extends Repository<User, Long>;
}
For the implementation it looks like this:
privileged aspect UserRepositoryImpl_Roo_Repository {    
    declare parents: UserRepositoryImpl extends RepositoryImpl<User, Long>;    
    declare @type: UserRepositoryImpl: @Repository("userRepository");
}
With ItdSourceFileComposer unmodified the interface's aspect file looks like this:
privileged aspect UserRepository_Roo_Repository {    
    declare parents: UserRepository extends Repository;
}
Replacing the code in appendExtendsTypes() with the code in appendImplementsTypes() solves the problem.