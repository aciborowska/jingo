Gwt scaffolding + OpenJpa does not work any more since roo-2.1.1 because
 a.- Gwt 2.1.1 does not deal with openjpa proxy classes
 b.- ManyToMany relations are not saved any more.
1.- Create this basic project with roo:
project --topLevelPackage com.example --java 6 --projectName prueba
persistence setup --provider OPENJPA --database   H2_IN_MEMORY --applicationId prueba
entity  --class ~.model.Acl
entity  --class ~.model.Topic
focus --class ~.model.Acl
field string  --fieldName rule
focus --class ~.model.Topic
field string  --fieldName title
field set --fieldName acls --type ~.model.Acl
field date  --type java.util.Date --fieldName ts
test integration --entity ~.model.Acl
test integration --entity ~.model.Topic
gwt setup
2.- Run the application
mvn clean compile gwt:run
3.- Try to create any new entity, and you will get this error
[ERROR] Mar 13, 2011 7:18:15 AM com.google.gwt.requestfactory.server.RequestFactoryServlet doPost
[ERROR] SEVERE: Unexpected error
[ERROR] com.google.gwt.requestfactory.server.UnexpectedException: The domain type org.apache.openjpa.enhance.com$example$model$Acl$pcsubclass cannot be sent to the client
4.- Try this workaround: Replace the gwt class ResolverServiceLayer by a modified one including the next hack in the resolveClientType method
  @Override
  public <T> Class<? extends T> resolveClientType(Class<?> domainClass,
      Class<T> clientClass, boolean required) {
    // Workaround work Openjpa with Gwt 2.1.1
    String domainName = domainClass.getName();
    if (domainName.contains("openjpa.enhance")) 
{
      domainName = domainName.
        replace("org.apache.openjpa.enhance.", "").
        replace("$", ".").
        replace(".pcsubclass", "");
      domainClass = forName(domainName);
    }

5.- Reload the application, and now you can save entities
6.- But, another bug is manifested now. 

Create a new Topic and save it.
Create a new Acl.
Edit the topic and add the acl previously created.
The acls collection is not saved !!

7.- Note: changing the provider to HIBERNATE gwt works as expected
8.- Note: spring scaffolding works fine with openjpa.