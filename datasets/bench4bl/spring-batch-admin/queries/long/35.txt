We want to depend on spring-batch-admin and spring-batch-admin-resources without all our spring xml files being imported automatically. I have a custom maven project modelled after the sample project that I am trying to integrate a batch job we have into. The batch job depends on several libraries of a big server project with lots of spring configuraion.
org.springframework.batch.admin.web.resources contains a file webapp-config.xml
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
 	<import resource="classpath*:/META-INF/bootstrap/*/.xml" />
 	<import resource="classpath*:/META-INF/spring/*/.xml" />
 	<bean id="parameterUnpackerFilter" class="org.springframework.batch.admin.web.filter.ParameterUnpackerFilter">
 		<property name="prefix" value="unpack_"/>
 		<property name="putEmptyParamsInPath" value="true"/>
 	</bean>
</beans>
This breaks our configuration because we don't want to initialize everything we have in META-INF/spring (which is a lot), just the stuff that is essential for running the batch job we want exposed in the admin ui. 
Suggested fix: 
remove the <import resource="classpath*:/META-INF/spring/*/.xml" /> and let the user specify any desired imports additional to the default things needed for the admin-ui in custom configuration in bootstrap. 
IMHO importing spring/*/ is a bad idea. If it wasn't, spring-core should do it by default.