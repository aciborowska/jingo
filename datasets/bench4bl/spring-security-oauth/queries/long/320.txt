
I have the following configuration:






<http pattern="/service/**" entry-point-ref="oauthAuthenticationEntryPoint" use-expressions="true" xmlns="http://www.springframework.org/schema/security">		




    <intercept-url pattern="/service/**" 




        method="GET" 




        access="#oauth2.clientHasRole('ROLE_CLIENT') and hasRole('ROLE_USER') and #oauth2.hasScope('SCOPE')"  />




    <custom-filter ref="resourceServerFilter" after="PRE_AUTH_FILTER" />




    <access-denied-handler ref="oauthAccessDeniedHandler"/>




    <expression-handler ref="oauthWebExpressionHandler" />




</http>






When I try to do a request with the wrong scope a InsufficientScopeException is thrown. But it is exception is just handled by Tomcat from what I can see, not before. This results in a "500 Internal Server Error", not a "403 Forbidden" which I expected. 