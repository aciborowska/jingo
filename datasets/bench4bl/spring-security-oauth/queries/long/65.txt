I'm not really up to speed with what should be happening here, but the stack trace is ugly, so I guess it's a bug.  The problem occurs if you deploy tonr and log into it when sparklr is not available - it looks like the wrong filter caught the exception, or the exception was the wrong type.






...




root cause




Â 




java.lang.ClassCastException: org.springframework.security.oauth.consumer.OAuthRequestFailedException cannot be cast to org.springframework.security.core.AuthenticationException




	org.apache.jsp.oauth_005ferror_jsp._jspService(oauth_005ferror_jsp.java:124)




	org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)




	javax.servlet.http.HttpServlet.service(HttpServlet.java:722)




	org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:417)




	org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:391)




	org.apache.jasper.servlet.JspServlet.service(JspServlet.java:334)




	javax.servlet.http.HttpServlet.service(HttpServlet.java:722)




	org.springframework.security.web.firewall.RequestWrapper$FirewalledRequestAwareRequestDispatcher.forward(RequestWrapper.java:132)




	org.springframework.security.web.access.AccessDeniedHandlerImpl.handle(AccessDeniedHandlerImpl.java:66)




	org.springframework.security.oauth.consumer.OAuthConsumerContextFilter.fail(OAuthConsumerContextFilter.java:327)




	org.springframework.security.oauth.consumer.OAuthConsumerContextFilter.doFilter(OAuthConsumerContextFilter.java:202)




	org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:340)





