After custom token configuration, new TokenEndoint authentification failed with InsufficientAuthenticationException. 
Configuration example:
security-context.xml






<http pattern="/account/token" create-session="stateless" authentication-manager-ref="clientAuthenticationManager"




		entry-point-ref="oauthAuthenticationEntryPoint" xmlns="http://www.springframework.org/schema/security">




  <intercept-url pattern="/account/token" access="IS_AUTHENTICATED_FULLY" />




  <anonymous enabled="false" />




  <http-basic entry-point-ref="oauthAuthenticationEntryPoint" />




  <custom-filter ref="clientCredentialsTokenEndpointFilter" before="BASIC_AUTH_FILTER" />




  <access-denied-handler ref="oauthAccessDeniedHandler" />




</http>




<oauth:authorization-server token-endpoint-url="/account/token" ...>




..




</oauth:authorization-server>






Solution is to change http pattern to:






<http pattern="/oauth/token/account/token" ..>






The problem appears in AntPathRequestMatcher:






 private String getRequestPath(HttpServletRequest request) {




        String url = request.getServletPath();




 




        if (request.getPathInfo() != null) {




            url += request.getPathInfo();




        }




 




        url = url.toLowerCase();




 




        return url;




 }






getServletPath() eq "/oauth/token"
getPathInfo() eq "/account/token"
Http request is wrapped in EndpointValidationFilter:






new HttpServletRequestWrapper(request) {




  @Override




  public String getRequestURI() {




    return prependContextPath(request, urlToMatch);




  }




 




  @Override




  public String getServletPath() {




    return urlToMatch; // <--  eq "/account/token"




  }




};






