If I use the following annotations on a field in a Mongo Entity class:






@Field("username") @Indexed(unique = true)




private String _username;






The object mapper correctly maps the username field in mongo to the _username field in Java.  However, the index is created using the Java field's name _username as the index key, rather than the name specified in the @Field annotation.  As a work around, one can specify the index name in the @Indexed annotation as follows:






@Field("username") @Indexed(name = "username", unique = true)




private String _username;






But this results in the following warning log:






WARNING: The index name username doesn't match this property name: _username. Setting sparse=true on this index will prevent errors when inserting documents.






I would expect that @Indexed would honor the field name specified in the @Field annotation if present.