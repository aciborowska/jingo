Objects with relations back to itself causes problems:






public class Farmer extends PersistentEntity {




	private String firstName;




	




	private String lastName;




	




	@DBRef




	private Farmer spouse;




 




	/* ... getters/setter */




}






With this, getting stack overflow on some operations against this repository.
Making things lazy loaded resolved the stack overflow problem:






@AccessType(AccessType.Type.PROPERTY)




public class Farmer extends PersistentEntity {




	private String firstName;




	




	private String lastName;




	




	@DBRef(lazy = true)




	private Farmer spouse;




 




	/* ... getters/setter */




}






However, when i create an instance of a farmer, who's spouse is an instance of another farmer (or itself), am getting 500 response back from server with this logged:






16:39:25.483 [http-bio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - DispatcherServlet with name 'dispatcher-api' processing GET request for [/spring-data-rest-mongo-couchbase-prototype/api/farmers/533b309cc7ee7a7b8bcc1e07/spouse]




16:39:25.483 [http-bio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Looking up handler method for path /farmers/533b309cc7ee7a7b8bcc1e07/spouse




16:39:25.483 [http-bio-8080-exec-1] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - Did not find handler method for [/farmers/533b309cc7ee7a7b8bcc1e07/spouse]




16:39:25.483 [http-bio-8080-exec-1] DEBUG o.s.d.r.w.RepositoryRestHandlerMapping - Looking up handler method for path /farmers/533b309cc7ee7a7b8bcc1e07/spouse




16:39:25.484 [http-bio-8080-exec-1] DEBUG o.s.d.r.w.RepositoryRestHandlerMapping - Returning handler method [public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception]




16:39:25.484 [http-bio-8080-exec-1] DEBUG o.s.b.f.s.DefaultListableBeanFactory - Returning cached instance of singleton bean 'repositoryPropertyReferenceController'




16:39:25.485 [http-bio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Last-Modified value for [/spring-data-rest-mongo-couchbase-prototype/api/farmers/533b309cc7ee7a7b8bcc1e07/spouse] is: -1




16:39:25.486 [http-bio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "id" : "533b309cc7ee7a7b8bcc1e07"} fields: null for class: class domain.base.Farmer in collection: farmer




16:39:25.486 [http-bio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoDbUtils - Getting Mongo Database name=[DATAREST-201]




16:39:25.486 [http-bio-8080-exec-1] DEBUG o.s.data.mongodb.core.MongoTemplate - findOne using query: { "_id" : { "$oid" : "533b309cc7ee7a7b8bcc1e07"}} in db.collection: DATAREST-201.farmer




16:39:25.489 [http-bio-8080-exec-1] DEBUG o.s.d.r.w.j.PersistentEntityJackson2Module - Serializing PersistentEntity org.springframework.data.mongodb.core.mapping.BasicMongoPersistentEntity@2a925f3a




16:39:25.489 [http-bio-8080-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolving exception from handler [public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception]: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: No serializer found for class org.springframework.data.mongodb.core.convert.DefaultDbRefResolver$LazyLoadingInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) ) (through reference chain: org.springframework.hateoas.Resource["content"]->domain.base.Farmer$$EnhancerByCGLIB$$59506210["callbacks"]); nested exception is com.fasterxml.jackson.databind.JsonMappingException: No serializer found for class org.springframework.data.mongodb.core.convert.DefaultDbRefResolver$LazyLoadingInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) ) (through reference chain: org.springframework.hateoas.Resource["content"]->domain.base.Farmer$$EnhancerByCGLIB$$59506210["callbacks"])




16:39:25.489 [http-bio-8080-exec-1] DEBUG o.s.w.s.m.a.ResponseStatusExceptionResolver - Resolving exception from handler [public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception]: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: No serializer found for class org.springframework.data.mongodb.core.convert.DefaultDbRefResolver$LazyLoadingInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) ) (through reference chain: org.springframework.hateoas.Resource["content"]->domain.base.Farmer$$EnhancerByCGLIB$$59506210["callbacks"]); nested exception is com.fasterxml.jackson.databind.JsonMappingException: No serializer found for class org.springframework.data.mongodb.core.convert.DefaultDbRefResolver$LazyLoadingInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) ) (through reference chain: org.springframework.hateoas.Resource["content"]->domain.base.Farmer$$EnhancerByCGLIB$$59506210["callbacks"])




16:39:25.489 [http-bio-8080-exec-1] DEBUG o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolving exception from handler [public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception]: org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: No serializer found for class org.springframework.data.mongodb.core.convert.DefaultDbRefResolver$LazyLoadingInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) ) (through reference chain: org.springframework.hateoas.Resource["content"]->domain.base.Farmer$$EnhancerByCGLIB$$59506210["callbacks"]); nested exception is com.fasterxml.jackson.databind.JsonMappingException: No serializer found for class org.springframework.data.mongodb.core.convert.DefaultDbRefResolver$LazyLoadingInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) ) (through reference chain: org.springframework.hateoas.Resource["content"]->domain.base.Farmer$$EnhancerByCGLIB$$59506210["callbacks"])




16:39:25.489 [http-bio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Null ModelAndView returned to DispatcherServlet with name 'dispatcher-api': assuming HandlerAdapter completed request handling




16:39:25.489 [http-bio-8080-exec-1] DEBUG o.s.web.servlet.DispatcherServlet - Successfully completed request





