





	@Test




	public void testPolymorphicWithPage(){




		Foo foo = new Foo();




		foo.id = "1";




		template.save(foo);




 




		foo = new Foo();




		foo.id = "2";




		template.save(foo);




 




		Bar bar = new Bar();




		bar.id = "3";




		template.save(bar);




 




		bar = new Bar();




		bar.id = "4";




		template.save(bar);




 




		List<Bar> bars = template.find(Query.query(new Criteria()).limit(1).skip(1), Bar.class);




 




		assertThat(bars,hasSize(1));




		assertThat(bars.get(0).id,is("4"));




 




	}




 




	@Document(collection = "foo")




	static class Foo {




		String id;




	}




 




	@Document(collection = "foo")




	static class Bar extends Foo {




 




	}






When we query for Foo all works as expected but if I want to get only Bar then I get bar but with Foo id "2".
The issue is caused by the lack of query for concrete type.
I think there should be added to mongo query restriction for type and all subtypes names.
eg.






_class: { $in: ["Bar", "BarSub" ] }






based on provided query type.