I have an Item collection that contains a list of Attributes. Attributes are considered meta data for this item. There are 2 properties on the Attribute: key and value.
Example:






{ "_id" : ObjectId( "4e8280aa0364f2ff284f9a5c" ),




  "_class" : "Item",




  "name: "Foo",




  "attributes" : [ 




    { "key" : "Manufacturer", value : "Nike" }, 




    { "key" : "Status", value : "Awesome" }




   ]




}






Now I want to retrieve items that are Manufactured by Nike and have the status of Awesome. The Mongo query could look like this:






{ "attributes" : { "$elemMatch" : { "key" : "Manufacturer" , "value" : { "$in" : [ "Nike"]}}}, "attributes" : { "$elemMatch" : { "key" : "Status" , "value" : { "$in" : [ "Awesome"]}}}}






However, when I create this query using Spring-Data like so:






List<String> manufacturers = new ArrayList<String>();




manufacturers.add("Nike");




query.addCriteria(where("attributes").elemMatch(where("key").is("Manufacturer").and("value").in(manufacturers)));




 




List<String> statuses = new ArrayList<String>();




statuses.add("Status");




query.addCriteria(where("attrs").elemMatch(where("ky").is("Status").and("value").in(statuses)));




 




System.out.println(query.getQueryObject().toString());






It produces a query string like so:






{ "attributes" : { "$elemMatch" : { "key" : "Status" , "value" : { "$in" : [ "Awesome"]}}}}






Looks like it is only set up to query a certain property one time within a query.