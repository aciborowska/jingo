I am able to persist an object if all the member variables are primitive types, even if the names of the @PersistenceConstructor arguments don't match exactly the names of the member variables by using the @Field("foo") and @Value("#root.foo") annotations.
However, I get a MappingInstantiationException (Illegal arguments for constructor) when I try to persist objects that contain primitive arrays. This holds true regardless of whether the primitive arrays contain primitives or Objects.
I've attached a java file  that contains three unit tests to showcase this bug (dependencies include junit, spring-data-mongodb). The tests show three things:

Persisting objects containing Collections of objects works as expected
Persisting objects containing arrays of primitives does not work as expected
Persisting objects containing arrays of objects does not work as expected

For details, see StackOverflow 13884637.  The stack trace of the exception I get is also listed below.






 




org.springframework.data.mapping.model.MappingInstantiationException: Could not instantiate bean class [com.recorder.SpringSourceTest$ArrayContainer]: Illegal arguments for constructor; nested exception is java.lang.IllegalArgumentException: argument type mismatch




        at org.springframework.data.convert.ReflectionEntityInstantiator.createInstance(ReflectionEntityInstantiator.java:77)




        at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:229)




        at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:209)




        at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:173)




        at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:169)




        at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:72)




        at org.springframework.data.mongodb.core.MongoTemplate$ReadDbObjectCallback.doWith(MongoTemplate.java:1820)




        at org.springframework.data.mongodb.core.MongoTemplate.executeFindMultiInternal(MongoTemplate.java:1542)




        at org.springframework.data.mongodb.core.MongoTemplate.findAll(MongoTemplate.java:1064)




        at com.recorder.SpringSourceTest.testObject(SpringSourceTest.java:82)




        at com.recorder.SpringSourceTest.testArrayContainer(SpringSourceTest.java:62)




        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)




        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)




        at java.lang.reflect.Method.invoke(Method.java:601)




        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)




        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)




        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)




        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)




        at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)




        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)




        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)




        at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)




        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)




        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)




        at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)




        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)




        at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)




        at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)




        at org.junit.runners.ParentRunner.run(ParentRunner.java:236)




        at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)




        at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)




        at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)




        at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)




        at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)




        at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)




    Caused by: org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [com.recorder.SpringSourceTest$ArrayContainer]: Illegal arguments for constructor; nested exception is java.lang.IllegalArgumentException: argument type mismatch




        at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:158)




        at org.springframework.data.convert.ReflectionEntityInstantiator.createInstance(ReflectionEntityInstantiator.java:75)




        ... 35 more




    Caused by: java.lang.IllegalArgumentException: argument type mismatch




        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)




        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)




        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)




        at java.lang.reflect.Constructor.newInstance(Constructor.java:525)




        at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:147)




        ... 36 more





 