Hello,
I am using 1.0.1.RELEASE of Spring Data MongoDB. I have encouraged an unexpected behavior. 
I have defined an institutions collection based on a class called AccreditedPostsecondaryInstitution. [aside: the source can be found here. https://github.com/kern3020/harbinger ].  @Id is defined as a String. 






@Document(collection="institutions")




public class AccreditedPostsecondaryInstitution extends Places {




	@SuppressWarnings("unused")




	@Id




	private String instituteId;




 






When it is inserted into mongo, it is represented as an integer. 






> db.institutions.findOne({"us_state" : "HI" })




{




  "_id" : 111911,




  "_class" : "org.john.app.domain.AccreditedPostsecondaryInstitution",




  ...




}






Now I want to update the location file. Initially, there are no classes with a location field. 






> db.institutions.findOne({"us_state" : "HI", "location": {"$exists" : true} })




null






Using the Spring Data Mongo API, I update it.






Criteria c = where("us_state").is("HI").and("location").exists(false);




results = mongoTemplate.find(query(c).limit(1), AccreditedPostsecondaryInstitution.class);




// ...update the institute....




mongoTemplate.save(institute,COLLECTION_NAME);






Instead of updating, it creates a new document using the _id as a String.






 






> db.institutions.findOne({"us_state" : "HI", "location": 
{"$exists" : true}
 })
{
  "_id" : "111911",
  "_class" : "org.john.app.domain.AccreditedPostsecondaryInstitution",
  ...
}
> 
I could make an argument for _id an Integer or String but not both.
-jk