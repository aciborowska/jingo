I am using the snapshot build.
I have an object hierarchy of






@Document(collection = "experience")




public class ExperienceDocument {




    @Id




    private String id;




    private ContentDocument content;




    




    ...getters and setters




}






and






public class ContentDocument {




    private Map<String, Map<String, Map<String, String>>> media;




    ...get and set




...






My config looks like this






<?xml version="1.0" encoding="UTF-8"?>




<beans xmlns="http://www.springframework.org/schema/beans"




       xmlns:mongo="http://www.springframework.org/schema/data/mongo"




       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"




       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd




       http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd">




 




    <mongo:db-factory dbname="test"/>




    <mongo:mapping-converter base-package="com.some.package" id="mappingConverter"/>




 




    <bean id="mongoTemplate" class="org.springframework.data.document.mongodb.MongoTemplate">




        <constructor-arg ref="mongoDbFactory"/>




        <constructor-arg ref="mappingConverter"/>




    </bean>




 




    <mongo:repositories base-package="com.some.package.experience" mongo-template-ref="mongoTemplate"/>




 




    <bean class="com.some.package.experience.ExperienceServiceImpl" id="experienceService"




          init-method="createIndexes">




        <constructor-arg ref="experienceRepository"/>




    </bean>




 




</beans>






Using the repository to save works without a problem. The document, in its entirety, from the mongo shell looks like this:






{




     "_id" : "59320",




     "_class" : "com.some.package.experience.ExperienceDocument",




     "content" : 




    {




         "media" : 




        {




             "YVfYPSryvU" : 




            {




                 "4mQiYD0DPx" : 




                {




                     "j9Fb0N97cM" : "http://tcxhihzwae.com" 




                }




                 




            }




             




        }




    }




}






When I call repository.findOne(id) the document is returned, but the media map in the Content Document has no values in its entry. Using mongosniffer I can see the document being found in the query. The mapping is failing.
My questions are:
1. Have I configured to use the MappingMongoConverter? I assume it is being used my default in the latest builds.
2. I concede the media fields hierarchy of maps is yucky to say the least, but it is the structure I want to save and retrieve. Should a mapping of this complexity work?
3. I notice in the examples and tests that fields that are of type Collection are sometimes initialised. Do I need to do this? Why would this be the case?
Thanks in advance. I hope its as simple as something I am doing, rather than a defect.
Stu