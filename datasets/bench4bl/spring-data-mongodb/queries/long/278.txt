When I try to create a not equal (ne) query on the id field with an object that uses a String as @Id the library creates a mongo query with a String as parameter instead of an ObjectId. The query returns all documents, instead of returning all except the one specified.
Example:






@Document




public class UserString {




	@Id




	private String id;




}




 




String id = ......




//is(id) works with Strings and returns exactly one User




List<UserString> users = mongoTemplate.find(Query.query(Criteria.where("id").is(id)), UserString.class);




 




//ne(id) does not work




//this returns all documents




users = mongoTemplate.find(Query.query(Criteria.where("id").ne(id)), UserString.class);




 




//in(id) works like the is(id). Returns only one record. 




users = mongoTemplate.find(Query.query(Criteria.where("id").in(id)), UserString.class);






Workaround:






//Create an ObjectId.




users = mongoTemplate.find(Query.query(Criteria.where("id").ne(new ObjectId(id))), UserString.class);




 




//Use a object that has an ObjectId as @Id




@Document




public class UserObjectId {




	@Id




	private ObjectId id;




}






I put a project on GitHub that demonstrates the problem:
https://github.com/ralscha/sdd-issues
