The issue can be illustrated on a simple example:






public class Localized<T> extends HashMap<Locale, T> {




     // class body




}




public class Foo {




     Localized<String> param;




}






So when TypeDiscoverer.getMapValueType is invoked to determine the type of Foo.param at these lines:






if (type instanceof ParameterizedType) {




     ParameterizedType parameterizedType = (ParameterizedType) type;




     return createInfo(parameterizedType.getActualTypeArguments()[1]);




}






we get an ArrayIndexOutOfBoundsException because getActualTypeArguments returns only String and not Locale, String as is expected.