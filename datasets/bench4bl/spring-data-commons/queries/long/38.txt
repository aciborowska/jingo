Hi, i get the following error when starting a testcase:






06:55:19,554 ERROR TestContextManager:324 - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@49198ff2] to prepare test instance [null(example.SiteServiceTest)]




java.lang.IllegalStateException: Failed to load ApplicationContext




	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:308)




	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)




	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)




	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:321)




	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:220)




	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:301)




	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)




	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:303)




	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:240)




	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)




	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)




	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)




	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)




	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)




	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)




	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)




	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)




	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)




	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:180)




	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)




	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)




	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)




	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)




	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)




	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)




Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'siteService': FactoryBean threw exception on object creation; nested exception is java.lang.StackOverflowError




	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:149)




	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:102)




	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1429)




	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)




	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)




	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:580)




	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)




	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)




	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:84)




	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:1)




	at org.springframework.test.context.TestContext.loadApplicationContext(TestContext.java:280)




	at org.springframework.test.context.TestContext.getApplicationContext(TestContext.java:304)




	... 24 more




Caused by: java.lang.StackOverflowError




	at java.util.HashMap$HashIterator.<init>(HashMap.java:795)




	at java.util.HashMap$EntryIterator.<init>(HashMap.java:849)




	at java.util.HashMap$EntryIterator.<init>(HashMap.java:849)




	at java.util.HashMap.newEntryIterator(HashMap.java:863)




	at java.util.HashMap$EntrySet.iterator(HashMap.java:967)




	at java.util.AbstractMap.hashCode(AbstractMap.java:492)




	at org.springframework.util.ObjectUtils.nullSafeHashCode(ObjectUtils.java:286)




	at org.springframework.data.util.TypeDiscoverer.hashCode(TypeDiscoverer.java:230)




	at org.springframework.data.util.ClassTypeInformation.hashCode(ClassTypeInformation.java:79)




	at org.springframework.util.ObjectUtils.nullSafeHashCode(ObjectUtils.java:286)




	at org.springframework.data.util.TypeDiscoverer.hashCode(TypeDiscoverer.java:231)




	at org.springframework.data.util.ClassTypeInformation.hashCode(ClassTypeInformation.java:79)




	at org.springframework.util.ObjectUtils.nullSafeHashCode(ObjectUtils.java:286)




	at org.springframework.data.util.TypeDiscoverer.hashCode(TypeDiscoverer.java:231)




	at org.springframework.data.util.ClassTypeInformation.hashCode(ClassTypeInformation.java:79)




	at org.springframework.util.ObjectUtils.nullSafeHashCode(ObjectUtils.java:286)




	at org.springframework.data.util.TypeDiscoverer.hashCode(TypeDiscoverer.java:231)




	at org.springframework.data.util.ClassTypeInformation.hashCode(ClassTypeInformation.java:79)




	at org.springframework.util.ObjectUtils.nullSafeHashCode(ObjectUtils.java:286)




	at org.springframework.data.util.TypeDiscoverer.hashCode(TypeDiscoverer.java:231)




	at org.springframework.data.util.ClassTypeInformation.hashCode(ClassTypeInformation.java:79)




	at org.springframework.util.ObjectUtils.nullSafeHashCode(ObjectUtils.java:286)




	at org.springframework.data.util.TypeDiscoverer.hashCode(TypeDiscoverer.java:231)




	at org.springframework.data.util.ClassTypeInformation.hashCode(ClassTypeInformation.java:79)




	at org.springframework.util.ObjectUtils.nullSafeHashCode(ObjectUtils.java:286)




	at org.springframework.data.util.TypeDiscoverer.hashCode(TypeDiscoverer.java:231)




	at org.springframework.data.util.ClassTypeInformation.hashCode(ClassTypeInformation.java:79)




	at org.springframework.util.ObjectUtils.nullSafeHashCode(ObjectUtils.java:286)




	at org.springframework.data.util.TypeDiscoverer.hashCode(TypeDiscoverer.java:231)




	at org.springframework.data.util.ClassTypeInformation.hashCode(ClassTypeInformation.java:79)




	at org.springframework.util.ObjectUtils.nullSafeHashCode(ObjectUtils.java:286)




	at org.springframework.data.util.TypeDiscoverer.hashCode(TypeDiscoverer.java:231)




	at org.springframework.data.util.ClassTypeInformation.hashCode(ClassTypeInformation.java:79)






Here is my applicationContext.xml:






<?xml version="1.0" encoding="UTF-8"?>




<beans xmlns="http://www.springframework.org/schema/beans"




    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"




    xmlns:context="http://www.springframework.org/schema/context"




    xmlns:spring-data="http://www.springframework.org/schema/data/mongo"




    xsi:schemaLocation="




        http://www.springframework.org/schema/beans




        http://www.springframework.org/schema/beans/spring-beans.xsd




        http://www.springframework.org/schema/context




        http://www.springframework.org/schema/context/spring-context.xsd




        http://www.springframework.org/schema/data/mongo




        http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">




    




    <spring-data:mongo id="mongo" host="localhost" port="27017"/>




    




    <bean id="mongoTemplate" class="org.springframework.data.document.mongodb.MongoTemplate">




        <constructor-arg ref="mongo"/>




        <constructor-arg value="testdb"/>




        <constructor-arg value="testcollection"/>




        <constructor-arg>




            <spring-data:mapping-converter/>




        </constructor-arg>




    </bean>




    




    <spring-data:repositories base-package="example.service">




        <spring-data:repository id="siteService"/>




    </spring-data:repositories>




    




    <context:annotation-config/>




	




</beans>






The Testcase:






package example.service;




 




import java.util.List;




 




import javax.inject.Inject;




 




import junit.framework.TestCase;




 




import org.junit.Assert;




import org.junit.Test;




import org.junit.runner.RunWith;




import org.springframework.test.context.ContextConfiguration;




import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;




 




import example.Site;




import example.query.SiteQuery;




 




@RunWith(SpringJUnit4ClassRunner.class)




@ContextConfiguration(locations = "classpath:/applicationContext.xml")




public class SiteServiceTest extends TestCase {




    




    @Inject




    protected SiteService siteService;




    




    public SiteService getSiteService() {




        return siteService;




    }




    




    public void setSiteService(SiteService newSiteService) {




        siteService = newSiteService;




    }




    




    @Test




    public void test() {




        List<Site> sites = null;




        




        sites = siteService.findAll(SiteQuery.getForAlias("/"));




        Assert.assertNull(sites);




    }




}






The classes:






package example.site;




 




import java.util.*;




 




import org.springframework.data.document.mongodb.mapping.DBRef;




import org.springframework.data.document.mongodb.mapping.Document;




 




import com.google.code.morphia.annotations.Entity;




 




@Document




@Entity




public class Site {




    




    private static final long serialVersionUID = -6751151047717976403L;




    




    @Id




    protected String id;




    protected List<String> aliases = new ArrayList<String>();




    protected Boolean eligibleForSitemap = Boolean.TRUE;




    @DBRef




    protected Site parent;




    




    public List<String> getAliases() {




        return aliases;




    }




    




    public void setAliases(List<String> newAliases) {




        aliases = newAliases;




    }




    




    public Boolean getEligibleForSitemap() {




        return eligibleForSitemap;




    }




    




    public void setEligibleForSitemap(Boolean newEligibleForSitemap) {




        eligibleForSitemap = newEligibleForSitemap;




    }




    




    public Site getParent() {




        return parent;




    }




    




    public void setParent(Site newParent) {




        parent = newParent;




    }




}












package example.query;




 




import com.mysema.query.types.Predicate;




 




import example.QSite;




 




public class SiteQuery {




    




    public static Predicate getForAlias(String alias) {




        return QSite.site.aliases.contains(alias);




    }




}






my Dependencies:






<dependency>




	<groupId>org.springframework.data</groupId>




	<artifactId>spring-data-mongodb</artifactId>




	<version>1.0.0.M2</version>




</dependency>




<dependency>




	<groupId>cglib</groupId>




	<artifactId>cglib</artifactId>




	<version>2.2</version>




</dependency>




<dependency>  




	<groupId>com.mysema.querydsl</groupId>  




	<artifactId>querydsl-mongodb</artifactId>  




	<version>2.1.2</version>  




</dependency>






I've found out, that if I comment the parent out, everything is fine ... so I guess the introspection-process of the spring-data library got a bug.