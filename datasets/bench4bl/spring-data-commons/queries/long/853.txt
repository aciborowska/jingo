Accessing persistent properties causes java.lang.IncompatibleClassChangeError using generated PersistentPropertyAccessor s.
This only occurs if the entity type is an interface, more specific if the property definition originates an interface. The reason for the failure is that invocations to property acessors (getter/setter) are called using INVOKEVIRTUAL and not INVOKEINTERFACE with the interface flag set to false.






java.lang.IncompatibleClassChangeError: Found interface org.springframework.data.gemfire.repository.sample.Algorithm, but class was expected




  at org.springframework.data.gemfire.repository.sample.Algorithm_Accessor_6zeakd.getProperty(Unknown Source)




  at org.springframework.data.mapping.model.IdPropertyIdentifierAccessor.getIdentifier(IdPropertyIdentifierAccessor.java:58)




  at org.springframework.data.repository.core.support.PersistentEntityInformation.getId(PersistentEntityInformation.java:51)




  at org.springframework.data.gemfire.repository.query.DefaultGemfireEntityInformationTest.interfaceBasedEntity(DefaultGemfireEntityInformationTest.java:87)






