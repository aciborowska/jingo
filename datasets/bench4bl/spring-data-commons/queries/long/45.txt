If you have a class






class Person {




  private int _age;




  




  public int getAge() {




    return _age;




  }




}






and a repository interface






interface PersonRepository extends Repository<Person, Long> {




  Person findByAge(int age);




}






creating a proxy instance for the interface will fail with an exception claiming that no property age is found. This is due to the fact that TypeDiscoverer is currently only considering fields right now and we should think about if it makes sense to make it really property aware.
A workaround to simply use findBy_Age fails as well as {} is used as custom delimiter to manually define property paths. So we should at least guard the code to correctly resolve _age in case there's no content in front of the {}.