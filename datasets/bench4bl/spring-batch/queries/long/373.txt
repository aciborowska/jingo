It is found that, if a job is re-run (by passing same JobParameters), the JobExecution created is referring to a JobInstance which refers to null for its Job.
i.e.
JobExecution x = jobLauncher.run(job, jobParam);
x.getJobInstance().getJob();  // returns null
It seems that for re-run job, the Job passed in the JobLauncher is not set to the JobInstance restored from DB.
As I am trying to intercept the Job's execute() by AOP, the only method I can get know of which job being executed is by jobExecution.getJobInstance().getJob()
