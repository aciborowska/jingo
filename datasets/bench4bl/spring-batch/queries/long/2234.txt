http://docs.spring.io/spring-batch/trunk/reference/html/jsr-352.html needs some more information regarding necessary setup information and hard to grasp side effects
1.  JsrJobOperator needs HSQLDB in classpath to work
Without HSQLDB you get a rather user-unfriendly "java.util.ServiceConfigurationError: javax.batch.operations.JobOperator: Provider org.springframework.batch.core.jsr.launch.JsrJobOperator could not be instantiated". Analyzing the stack trace and some debugging helps, but should'nt be needed.
2. i would like to see some information about the possibility of providing an own baseContext for the JsrJobOperator
I tried it with an own beanRefContext.xml primary="true", so far i get a nice
org.springframework.beans.factory.support.DefaultListableBeanFactory registerBeanDefinition INFO   Overriding bean definition for bean 'baseContext': replacing [Generic bean: class [org.springframework.context.support.GenericXmlApplicationContext]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL file:.../target/classes/beanRefContext.xml] with [Generic bean: class [org.springframework.context.support.GenericXmlApplicationContext]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in URL [jar:file.../org/springframework/batch/spring-batch-core/3.0.0.RC1/spring-batch-core-3.0.0.RC1.jar!/beanRefContext.xml]]