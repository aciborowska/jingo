StepExecutionResourceProxy will not throw an exception if it's configured to pull a value from the JobParameters that doesn't exit, as illustrated by the below failed unit test:
	public void testNonExistentJobParameter() throws Exception{
		resource.setFilePattern("foo/data/%JOB_NAME%/%non.key%-foo");
		jobInstance = new JobInstance(new Long(0), new JobParametersBuilder().addString("job.key", "spam")
				.toJobParameters(), "testJob");
		JobExecution jobExecution = new JobExecution(jobInstance);
		Step step = new StepSupport("bar");
		try
{
			resource.beforeStep(jobExecution.createStepExecution(step.getName()));
			fail();
		}
		catch(Exception ex)
{
			//expected, if there isn't a JobParameter for that key, it should throw an exception
		}
	}
The side effect of this is that the filename will include %job.key%, rather than failing, leading to extra debugging time.