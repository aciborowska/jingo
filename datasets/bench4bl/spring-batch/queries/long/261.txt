A common formatting for numeric fields in simple flat batch input files is to pad the numeric data with leading zeros. e.g. the value 9 in a field of width 7 would be represented "0000009".  Using just the DefaultFlatFileInputSource and the FixedLengthTokenizer from Spring batch 1.0-m3 to parse the input record causes the following error, as, by default, the conversion is done using Long.decode and this assumes that leading zeros imply octal. This issue was raised with Lucas Ward at the  Spring Experience  2007 who said he considered this effect on batch input data  to be a bug, and requested that we raise this issue on the JIRA.
Exception in thread "main" org.springframework.batch.io.exception.FlatFileParsingException: Parsing error
	at org.springframework.batch.io.file.support.SimpleFlatFileInputSource.read(SimpleFlatFileInputSource.java:198)
<snip>
Caused by: org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:
PropertyAccessException 1: org.springframework.beans.TypeMismatchException: Failed to convert property value of type [java.lang.String] to required type [java.lang.Long] for property 'recordSequenceNumber'; nested exception is java.lang.NumberFormatException: For input string: "0000009"
Here is a cut down version of the relevant beans in the XML config. A simple POJO was created to receive the data with the type of RecordSequenceNumber being Long.
	<bean id="InterchangeTokenizer"
		class="org.springframework.batch.io.file.support.transform.FixedLengthTokenizer">
		<property name="names"
			value="RecordSequenceNumber" />
		<property name="columns"
			value="4-11" />
	</bean>
	<bean id="inputSource"
		class="org.springframework.batch.io.file.support.DefaultFlatFileInputSource">
		<property name="resource" value="file:input.txt" />
		<property name="fieldSetMapper" ref="InterchangeMapper" />
		<property name="tokenizer" ref="InterchangeTokenizer" />
	</bean>
	<bean id="InterchangeMapper"
		class="org.springframework.batch.io.file.support.mapping.BeanWrapperFieldSetMapper">
		<property name="targetType"
			value="com.aciworldwide.backoffice.interchange.InterchangeIncomingTransaction" />
	</bean>
It would be better if the default for processing this type of field was to assume BASE-10, or, perhaps, alternatively if there was a way of specifiying the numeric base of the fields on the tokenizer.