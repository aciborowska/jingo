"Singleton" optimization in FaultTolerantChunkProcessor leads to processor work being committed unexpectedly.  Once a chunk gets down to a single item, we try to avoid a write exception if we think we know that the item caused a failure in the last transaction.  This turns out to be a bad idea (although the motivation was good) because the item processor will have been called for that item, and a rollback is needed to clean up any state that it is creating or maintaining.
It should be adequate to simply remove the optimization.