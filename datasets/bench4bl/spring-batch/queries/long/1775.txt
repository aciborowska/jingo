I'v the following job configuration: 






<batch:job id="file2fileJob">




	<batch:step id="file2fileJobStep1">




		<batch:tasklet>




			<batch:chunk commit-interval="1" writer="itemToStringFlatFileItemWriter">




				<batch:reader>




					<bean class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">




						<property name="resource" value="#{jobParameters['input.file.name']}" />




						<property name="lineMapper">




							<bean class="org.springframework.batch.item.file.mapping.PassThroughLineMapper" />




						</property>




					</bean>




				</batch:reader>




			</batch:chunk>




		</batch:tasklet>




	</batch:step>




</batch:job>






and the following test: 






@Test




public void file2fileJob() throws Exception {




	/* setup */




	Map<String, JobParameter> parameters = new HashMap<String, JobParameter>();




	parameters.put("input.file.name", new JobParameter("users.csv"));




	File output = testFolder.newFile("output.txt");




	output.createNewFile();




	parameters.put("output.file.name", new JobParameter("file:" + output.getAbsolutePath()));




	/* exercise */




	launcher.run(file2fileJob, new JobParameters(parameters));




	/* verify */




	Resource input = new ClassPathResource("users.csv");




	assertEquals("Input and output should be equal", FileUtils.readLines(input.getFile()), FileUtils.readLines(output));




}






The test is successful. 
But if I had the following job configuration:






<batch:job id="file2DatabaseJob">




	<batch:step id="file2DatabaseJobStep1">




		<batch:tasklet>




			<batch:chunk commit-interval="1" writer="itemToStringFlatFileItemWriter">




			<!-- TODO - save the User in the database -->




				<batch:reader>




					<bean class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">




						<property name="resource" value="#{jobParameters['input.file.name']}" />




						<property name="lineMapper">




							<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">




								<property name="lineTokenizer">




									<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer" />




								</property>




								<property name="fieldSetMapper">




									<bean class="org.springframework.batch.UserFieldSetMapper" />




								</property>




							</bean>




						</property>




					</bean>




				</batch:reader>




			</batch:chunk>




		</batch:tasklet>




	</batch:step>




</batch:job>






the same test fails because the 'file2fileJobStep1' lineMapper is no more a PassThroughLineMapper but the same as the file2DatabaseJobStep1 lineMapper... 
If I remove the scope attribute (and update the resource value to an hard-coded value) of the file2fileJobStep1 reader, the test is successful again.  