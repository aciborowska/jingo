The PagingQueryProvider implementations append the sort conditions to the configured where clause with AND. This is problematic if the where clause contains OR conditions, as the automatically appended AND takes precedence over the OR in the configured where clause.
Example:






Db2PagingQueryProvider provider = new Db2PagingQueryProvider();




provider.setSelectClause("SELECT ID, COL_X, COL_Y");




provider.setFromClause("FROM TEST");




provider.setWhereClause("WHERE COL_X = 1 OR COL_Y = 1");




provider.setSortKeys(Collections.singletonMap("ID", Order.ASCENDING));




System.out.println(provider.generateRemainingPagesQuery(20));






Results in






SELECT ID, COL_X, COL_Y FROM TEST 




WHERE COL_X = 1 OR COL_Y = 1 AND ((ID > ?)) 




ORDER BY ID ASC FETCH FIRST 20 ROWS ONLY






But this should be 






SELECT ID, COL_X, COL_Y FROM TEST 




WHERE (COL_X = 1 OR COL_Y = 1) AND ((ID > ?)) 




ORDER BY ID ASC FETCH FIRST 20 ROWS ONLY






As a workaround the parenthesis can explicitly be added to the where clause.