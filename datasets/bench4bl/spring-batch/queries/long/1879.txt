This issue is similar to BATCH-1633.
It is not possible to have two jobs with different anonymous step scoped readers.
Example:






 




<bean id="john" class="java.lang.String">




  <constructor-arg index="0" value="John" />




</bean>




 




<bean id="jane" class="java.lang.String">




  <constructor-arg index="0" value="Jane" />




</bean>




 




<batch:job id="firstJob" job-repository="jobRepository">




  <batch:step id="firstJobFirstStep">




    <batch:tasklet>




      <batch:chunk commit-interval="1">




        <batch:reader>




          <bean class="spring.batch.test.InnerBeanStepScopedTest$Read"




            scope="step">




            <property name="name" ref="john" />




          </bean>




        </batch:reader>




        <batch:writer>




          <bean class="spring.batch.test.InnerBeanStepScopedTest$Write" />




        </batch:writer>




      </batch:chunk>




    </batch:tasklet>




  </batch:step>




</batch:job>




<batch:job id="secondJob" job-repository="jobRepository">




  <batch:step id="secondJobFirstStep">




    <batch:tasklet>




      <batch:chunk commit-interval="1">




        <batch:reader>




          <bean class="spring.batch.test.InnerBeanStepScopedTest$Read"




            scope="step">




            <property name="name" ref="jane" />




          </bean>




        </batch:reader>




        <batch:writer>




          <bean class="spring.batch.test.InnerBeanStepScopedTest$Write" />




        </batch:writer>




      </batch:chunk>




    </batch:tasklet>




  </batch:step>




</batch:job>






When running the first job, it gets fed by the reader of the second job:






15:05:42.026 [main] INFO  s.b.t.InnerBeanStepScopedTest$Write - hello Jane






Workaround: Assign an unique id to each reader.