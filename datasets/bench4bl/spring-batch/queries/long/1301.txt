The following job definition works however if I change the reader to scope="step" I will get an exception about the stream never being opened (from FlatFileItemReader.doRead()). It appears doOpen() is called at least once however I believe its a different instance than what is actually used for read() because when read() is called the reader is not initialized.
            <job id="search-job" restartable="true">
		<step id="search-job-step">
			<tasklet transaction-manager="transactionManager" allow-start-if-complete="true">
				<chunk reader="itemReader" writer="itemWriter" commit-interval="1" task-executor="executor" >
					<streams> <!-- tried with and without this -->
						<stream ref="itemReader" />
					</streams>
				</chunk>
			</tasklet>
		</step>
	</job>
	<b:bean id="itemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<b:property name="resource" value="file:input.csv" />
		<b:property name="lineMapper">
			<b:bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<b:property name="lineTokenizer">
					<b:bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<b:property name="names" value="col1,col2,col3" />
					</b:bean>
				</b:property>
				<b:property name="fieldSetMapper">
					<b:bean class="com.company.prj.batch.ItemFieldSetMapper" />
				</b:property>
			</b:bean>
		</b:property>
	</b:bean>
	<b:bean id="itemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<b:property name="resource" value="file:searchoutput.txt" />
		<b:property name="lineAggregator">
			<b:bean class="com.company.prj.batch.SearchResultsAggregator" />
		</b:property>
	</b:bean>