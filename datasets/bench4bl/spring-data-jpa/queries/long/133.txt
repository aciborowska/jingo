The Spring Data JPA documentation describes configuring a DomainClassConverter like so:






<mvc:annotation-driven conversion-service="conversionService" />




 




<bean id="conversionService" class="....context.support.ConversionServiceFactoryBean">




  <property name="converters">




    <list>




      <bean class="org.springframework.data.repository.support.DomainClassConverter">




        <constructor-arg ref="conversionService" />




      </bean>




    </list>




  </property>




</bean>






However, this fails to work from an apparent cyclic instantiation error ("Error creating bean with name 'conversionService': FactoryBean which is currently in creation returned null from getObject").
This is one workaround for the problem:






<bean id="conversionService" class="org.springframework.core.convert.support.DefaultConversionService"/>




 




<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">




  <property name="targetClass" value="org.springframework.core.convert.support.ConversionServiceFactory"/>




  <property name="targetMethod" value="registerConverters"/>




  <property name="arguments">




    <util:list>




      <set>




        <bean class="org.springframework.data.repository.support.DomainClassConverter">




          <constructor-arg ref="conversionService"/>




        </bean>




      </set>




      <ref bean="conversionService"/>




    </util:list>




  </property>




</bean>





