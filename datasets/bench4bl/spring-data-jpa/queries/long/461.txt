The fix in DATAJPA-415 seems to have introduced a problem when dealing with input host variables being supplied as plain arrays. Example: Consider a byte array as input parameter for a field on a table.
The function org.springframework.data.jpa.repository.query.ParameterBinder::convertArrayToCollectionIfNecessary converts the input byte array to an ArrayList collection. But the parameter information in org.springframework.data.jpa.repository.query.ParameterBinder::bind(Query query, JpaParameter parameter, Object value, int position) - still points to the type byte array. Starting with Hibernate Implementation of JPA 2.1 (Hibernate version 4.3.1) the validators (org.hibernate.jpa.spi.BaseQueryImpl::validateBinding(Class parameterType, Object bind, TemporalType temporalType) will compare the supplied type and actual type of the host variable passed and will reject the query with an exception.
Example Trace:
java.lang.IllegalArgumentException: Parameter value element [120] did not match expected type [[B (n/a)]
at org.hibernate.jpa.spi.BaseQueryImpl.validateCollectionValuedParameterBinding(BaseQueryImpl.java:908)