CrudMethodMetadata.getLockMetadataProvider(…) should use the bean class loader when obtaining the proxy. RepositoryFactorySupport supports injecting the correct class loader trough RepositoryFactorySupport.setBeanClassLoader(…).
When using the JpaRepositoryFactory to obtain a JpaRepository implementation in my OSGI bundle, I end up with the following exception:






@Override




    public PersonRepository getObject() throws Exception {




        final JpaRepositoryFactory factory = new JpaRepositoryFactory(entityManager);




        try {




            final Bundle bundle = FrameworkUtil.getBundle(PersonRepository.class);




            final ClassLoader classLoader = bundle.adapt(BundleWiring.class).getClassLoader();




            factory.setBeanClassLoader(classLoader);




            final PersonRepository repository = factory.getRepository(PersonRepository.class);




            return repository;




        } catch (final Exception e) {




            LOG.error(null, e);




            throw new BeanCreationException(null, e);




        }




    }







Exception:






2015-11-05 13:35:11,740 | ERROR | h for user karaf | PersonRepositoryFactory          | 145 - com.effortel.core.data.example - 1.0.0.SNAPSHOT | 




java.lang.IllegalArgumentException: interface org.springframework.data.jpa.repository.support.CrudMethodMetadata is not visible from class loader




	at java.lang.reflect.Proxy$ProxyClassFactory.apply(Proxy.java:581)[:1.8.0_65]




	at java.lang.reflect.Proxy$ProxyClassFactory.apply(Proxy.java:557)[:1.8.0_65]




	at java.lang.reflect.WeakCache$Factory.get(WeakCache.java:230)[:1.8.0_65]




	at java.lang.reflect.WeakCache.get(WeakCache.java:127)[:1.8.0_65]




	at java.lang.reflect.Proxy.getProxyClass0(Proxy.java:419)[:1.8.0_65]




	at java.lang.reflect.Proxy.newProxyInstance(Proxy.java:719)[:1.8.0_65]




	at org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:121)




	at org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:111)




	at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:96)




	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor.getLockMetadataProvider(CrudMethodMetadataPostProcessor.java:74)




	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:72)




	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:185)




	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:164)




	at com.effortel.core.data.example.repository.PersonRepositoryFactory.getObject(PersonRepositoryFactory.java:53)






