Consider this repository interface ARepository:






public interface ARepository extends JpaRepository<Role, Long>, QueryDslPredicateExecutor<Role>, Named<Role> {




  List<Role> findByNameIn(List<String> name);




}






and 'Named' interface:






public interface Named<T extends ObjexObject> {




  




  T findByName(String name);




	




  List<T> findByNameIn(List<String> name);




}






Only when the method List<Role> findByNameIn(List<String> name) is moved to the generic 'Named' interface (commented out above) I get:






Caused by: java.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.TypeVariableImpl cannot be cast to java.lang.Class




	at org.springframework.data.repository.util.ClassUtils.getReturnedDomainClass(ClassUtils.java:64)




	at org.springframework.data.repository.query.QueryMethod.getDomainClass(QueryMethod.java:124)




	at org.springframework.data.repository.query.QueryMethod.getNamedQueryName(QueryMethod.java:115)




	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:118)




	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:157)




	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:71)




	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.<init>(RepositoryFactorySupport.java:303)




	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:157)




	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getObject(RepositoryFactoryBeanSupport.java:120)




	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getObject(RepositoryFactoryBeanSupport.java:39)




	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:142)




	... 77 more






The method T findByName(String name); currently in Named does work as expected .
