I am using Spring Data JPA (1.3.0.RELEASE) with Spring (3.2.2.RELEASE ) in one project and facing a weird problem. I am using xml based configuration as mentioned below.






<context:annotation-config/>




<context:component-scan base-package="x.y.z.services"/> 






Using this configuration to scan the classes decorated with @Component, @Service and @Named annotations.






<jpa:repositories base-package="x.y.z.repo"/>






Using this configuration to scan all interfaces extending JpaRepository. These interfaces are injected in service classes in the following way.






@Service




public class UserServiceImpl implements UserService {




 




    private UserRepository userRepository;




 




    @Inject




    public void setUserRepository(UserRepository userRepository) {




            this.userRepository = userRepository;




    }




 




    @Override




    public List<User> listUsers() {




            return userRepository.findAll();




    }




}






This configuration works as expected without any issue. But when I add the following configuration I get the BeanCreationException for UserRepository.
    <bean id="securityRealm" class="x.y.z.Realm">
        <property name="userService">
            <bean class="x.y.z.services.UserServiceImpl"/>
        </property>
    </bean>
As per above configuration, it is able to create the bean for userService but not able to create the UserRepository bean.
I can get this error away by scanning x.y.z.Realm and decorating it with @Service annotation. But it will be a very big constraint and design issue to my application that I cannot create the beans in the mentioned way.
AFAICT, Spring is not able to create the bean for UserRepository as it's implementation class is not available and has to be provided by jpa:repositories configuration. I can see that Spring and Spring Data JPA are not working in conjunction.