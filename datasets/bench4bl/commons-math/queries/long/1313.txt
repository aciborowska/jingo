I doubt that the mean check in the unit test below is ever going to trigger an assertion failure...

    @Test

    public void testDoubleDirect() {

        SummaryStatistics sample = new SummaryStatistics();

        final int N = 10000;

        for (int i = 0; i < N; ++i) {

            sample.addValue(generator.nextDouble());

        }

        Assert.assertEquals("Note: This test will fail randomly about 1 in 100 times.",

                0.5, sample.getMean(), FastMath.sqrt(N/12.0) * 2.576);

        Assert.assertEquals(1.0 / (2.0 * FastMath.sqrt(3.0)),

                     sample.getStandardDeviation(), 0.01);

    }





And similar in "testFloatDirect()".
I propose the following replacement:

    @Test

    public void testDoubleDirect() {

        SummaryStatistics sample = new SummaryStatistics();

        final int N = 100000;

        for (int i = 0; i < N; ++i) {

            sample.addValue(generator.nextDouble());

        }

        assertUniformInUnitInterval(sample, 0.99);

    }



where "assertUniformInUnitInterval" is defined as:

    /**                                                                                                                                                                                    

     * Check that the sample follows a uniform distribution on the {@code [0, 1)} interval.                                                                                                

     *                                                                                                                                                                                     

     * @param sample Data summary.                                                                                                                                                         

     * @param confidenceIntervalLevel Confidence level. Must be in {@code (0, 1)} interval.                                                                                                

     */

    private void assertUniformInUnitInterval(SummaryStatistics sample,

                                             double confidenceIntervalLevel) {

        final int numSamples = (int) sample.getN();

        final double mean = sample.getMean();

        final double stddev = sample.getStandardDeviation() / FastMath.sqrt(numSamples);

        final TDistribution t = new TDistribution(numSamples - 1);

        final double criticalValue = t.inverseCumulativeProbability(1 - 0.5 * (1 - confidenceIntervalLevel));

        final double tol = stddev * criticalValue;

        Assert.assertEquals("mean=" + mean + " tol=" + tol + " (note: This test will fail randomly about " +

                            (100 * (1 - confidenceIntervalLevel)) + " in 100 times).",

                            0.5, mean, tol);

        Assert.assertEquals(FastMath.sqrt(1d / 12), sample.getStandardDeviation(), 0.01);

    }



Please correct if this new test is not what was intended.