Here is the begginings of the distribution framework.  It's definately been a 
practice in over-engineering.
It starts with a distribution factory following the abstract factory pattern.  
The value being, if users want to swap out the default distribution 
implementations with their own, why stop them.  The factory is responsible for 
create the distribution instances (only continuous ones for now).
Each distribution has a cummulativeProbabilty method which returns the value of 
the CDF for a given value.  By default, via the abstract distribution base 
class, an inverseCummulativeProbability method is all provided for all 
distributions.  It's implementation is generically handled by applying root 
finding techniques to the cummulativeProbability method.  That way, when new 
distributions are added, authors only need to create the CDF method and the 
inverse is provided automatically.
Currenty, the only distributions are Chi-Squared and Gamma (one actually since 
Chi-Squared is a specialized Gamma) but I have more planned.
FYI, I took the liberty of putting these classes into separate packages to 
limit the package clutter we're starting to experience.  As such I could not 
create a patch file for all my changes.  I will provide a patch for what I can 
and provide a zip archive with all the files in the new packages.
Feel free to modify and include as you see fit.